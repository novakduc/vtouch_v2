

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 30 18:29:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=4,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=4,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	text147,global,reloc=4,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   176                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   177                           	psect	text150,global,reloc=4,class=CODE,delta=1
   178                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   179                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   180  0000                     
   181                           ; Version 2.10
   182                           ; Generated 31/07/2019 GMT
   183                           ; 
   184                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   185                           ; All rights reserved.
   186                           ; 
   187                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   188                           ; 
   189                           ; Redistribution and use in source and binary forms, with or without modification, are
   190                           ; permitted provided that the following conditions are met:
   191                           ; 
   192                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   193                           ;        conditions and the following disclaimer.
   194                           ; 
   195                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   196                           ;        of conditions and the following disclaimer in the documentation and/or other
   197                           ;        materials provided with the distribution.
   198                           ; 
   199                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   200                           ;        software without specific prior written permission.
   201                           ; 
   202                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   203                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   204                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   205                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   206                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   207                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   208                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   209                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   210                           ; 
   211                           ; 
   212                           ; Code-generator required, PIC18F57K42 Definitions
   213                           ; 
   214                           ; SFR Addresses
   215  0000                     
   216 ;;_mode	offset	0
   217 ;;_channel	offset=-1 (param)
   218 ;;_s	offset=-2 (param)
   219 ;;_cmd	offset=-1 (param)
   220 ;;_cmd	offset=-1 (param)
   221 ;;_data	offset=-1 (param)
   222 ;;__this	offset=-2 (param)
   223 ;;_h	offset=-1 (param)
   224 ;;_h	offset=-1 (param)
   225 ;;_i	offset=-1 (param)
   226 ;;_cmd	offset=-1 (param)
   227 ;;_i	offset	0
   228 ;;_chan	offset=-1 (param)
   229 ;;_to_what	offset=-2 (param)
   230 ;;_u	offset	0
   231 ;;_s	offset=-2 (param)
   232 ;;_index	offset=-1 (param)
   233 ;;_arg	offset	0
   234 ;;_exp	offset	4
   235 ;;_sign	offset=-1 (param)
   236 ;;_val	offset=-5 (param)
   237 ;;_h	offset=-1 (param)
   238 ;;_estatus	offset	0
   239 ;;_flipper	offset=-1 (param)
   240 ;;_f	offset	0
   241 ;;_ap	offset	6
   242 ;;_s	offset=-3 (param)
   243 ;;_fmt	offset=-5 (param)
   244 ;;_line	offset=-1 (param)
   245 ;;_vterm	offset=-2 (param)
   246 ;;_numMilliseconds	offset=-2 (param)
   247 ;;_vterm	offset=-1 (param)
   248 ;;_r	offset=-1 (param)
   249 ;;_c	offset=-2 (param)
   250 ;;_strPtr	offset=-4 (param)
   251 ;;_strPtr	offset=-1 (param)
   252 ;;_delay	offset=-4 (param)
   253 ;;_strPtr	offset=-2 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_clearBuffer	offset=-3 (param)
   256 ;;_s	offset	0
   257 ;;_k	offset	2
   258 ;;_dest	offset=-2 (param)
   259 ;;_c	offset=-4 (param)
   260 ;;_n	offset=-6 (param)
   261 ;;_ap	offset	0
   262 ;;_fmt	offset=-3 (param)
   263 ;;_cfmt	offset	0
   264 ;;_fp	offset=-2 (param)
   265 ;;_fmt	offset=-4 (param)
   266 ;;_ap	offset=-6 (param)
   267 ;;_vfpfcnvrt$4536	offset	0
   268 ;;_vfpfcnvrt$4542	offset	2
   269 ;;_vfpfcnvrt$4535	offset	4
   270 ;;_llu	offset	6
   271 ;;_ll	offset	14
   272 ;;_f	offset	22
   273 ;;_ct	offset	26
   274 ;;_cp	offset	29
   275 ;;_c	offset	31
   276 ;;_fp	offset=-2 (param)
   277 ;;_fmt	offset=-4 (param)
   278 ;;_ap	offset=-6 (param)
   279 ;;_xtoa$4521	offset	0
   280 ;;_xtoa$4520	offset	2
   281 ;;_n	offset	4
   282 ;;_c	offset	12
   283 ;;_i	offset	14
   284 ;;_w	offset	16
   285 ;;_p	offset	18
   286 ;;_fp	offset=-2 (param)
   287 ;;_d	offset=-10 (param)
   288 ;;_x	offset=-11 (param)
   289 ;;_toupper$5181	offset	0
   290 ;;_c	offset=-2 (param)
   291 ;;_c	offset=-2 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_r	offset	0
   294 ;;_l	offset	2
   295 ;;__l	offset=-2 (param)
   296 ;;__r	offset=-4 (param)
   297 ;;_n	offset=-6 (param)
   298 ;;_nuls	offset	0
   299 ;;_l	offset	7
   300 ;;_p	offset	9
   301 ;;_cp	offset	11
   302 ;;_w	offset	13
   303 ;;_i	offset	15
   304 ;;_fp	offset=-2 (param)
   305 ;;_s	offset=-4 (param)
   306 ;;_efgtoa$4500	offset	0
   307 ;;_efgtoa$4499	offset	2
   308 ;;_efgtoa$4498	offset	4
   309 ;;_efgtoa$4494	offset	6
   310 ;;_efgtoa$4490	offset	8
   311 ;;_efgtoa$4489	offset	10
   312 ;;_u	offset	12
   313 ;;_g	offset	16
   314 ;;_l	offset	20
   315 ;;_h	offset	24
   316 ;;_ou	offset	28
   317 ;;_n	offset	32
   318 ;;_e	offset	34
   319 ;;_i	offset	36
   320 ;;_w	offset	38
   321 ;;_p	offset	40
   322 ;;_sign	offset	42
   323 ;;_d	offset	44
   324 ;;_ne	offset	46
   325 ;;_m	offset	48
   326 ;;_pp	offset	50
   327 ;;_t	offset	52
   328 ;;_mode	offset	54
   329 ;;_nmode	offset	55
   330 ;;_fp	offset=-2 (param)
   331 ;;_f	offset=-6 (param)
   332 ;;_c	offset=-7 (param)
   333 ;;_tolower$5166	offset	0
   334 ;;_c	offset=-2 (param)
   335 ;;_c	offset=-2 (param)
   336 ;;_d	offset	0
   337 ;;_s	offset	2
   338 ;;_dest	offset=-2 (param)
   339 ;;_src	offset=-4 (param)
   340 ;;_u	offset	0
   341 ;;_m	offset	4
   342 ;;_e	offset	8
   343 ;;_x	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_e	offset	4
   346 ;;_x	offset=-4 (param)
   347 ;;_exp1	offset	0
   348 ;;_sign1	offset	1
   349 ;;_f1	offset=-4 (param)
   350 ;;_f1	offset=-4 (param)
   351 ;;_ff1	offset=-4 (param)
   352 ;;_ff2	offset=-8 (param)
   353 ;;_ff1	offset=-4 (param)
   354 ;;_ff2	offset=-8 (param)
   355 ;;_grs	offset	0
   356 ;;_rem	offset	4
   357 ;;_new_exp	offset	8
   358 ;;_aexp	offset	10
   359 ;;_bexp	offset	11
   360 ;;_sign	offset	12
   361 ;;_b	offset=-4 (param)
   362 ;;_a	offset=-8 (param)
   363 ;;_sign	offset	0
   364 ;;_counter	offset	1
   365 ;;_dividend	offset=-2 (param)
   366 ;;_divisor	offset=-4 (param)
   367 ;;_quotient	offset	0
   368 ;;_sign	offset	2
   369 ;;_counter	offset	3
   370 ;;_dividend	offset=-2 (param)
   371 ;;_divisor	offset=-4 (param)
   372 ;;_dtoa$4466	offset	0
   373 ;;_n	offset	2
   374 ;;_i	offset	10
   375 ;;_s	offset	12
   376 ;;_w	offset	14
   377 ;;_p	offset	16
   378 ;;_fp	offset=-2 (param)
   379 ;;_d	offset=-10 (param)
   380 ;;_a	offset=-2 (param)
   381 ;;_sign	offset	0
   382 ;;_counter	offset	1
   383 ;;_dividend	offset=-8 (param)
   384 ;;_divisor	offset=-16 (param)
   385 ;;_quotient	offset	0
   386 ;;_sign	offset	8
   387 ;;_counter	offset	9
   388 ;;_dividend	offset=-8 (param)
   389 ;;_divisor	offset=-16 (param)
   390 ;;_w	offset	0
   391 ;;_fp	offset=-2 (param)
   392 ;;_c	offset=-3 (param)
   393 ;;_w	offset	0
   394 ;;_i	offset	2
   395 ;;_fp	offset=-2 (param)
   396 ;;_buf	offset=-4 (param)
   397 ;;_p	offset=-6 (param)
   398 ;;_a	offset	0
   399 ;;_s	offset=-2 (param)
   400 ;;_i	offset	0
   401 ;;_c	offset	2
   402 ;;_s	offset=-2 (param)
   403 ;;_fp	offset=-4 (param)
   404 ;;_c	offset=-2 (param)
   405 ;;_fp	offset=-4 (param)
   406 ;;_c	offset=-1 (param)
   407 ;;__this	offset=-2 (param)
   408 ;;_c	offset=-3 (param)
   409 ;;_atoi$5019	offset	0
   410 ;;_atoi$5017	offset	2
   411 ;;_atoi$5018	offset	4
   412 ;;_n	offset	5
   413 ;;_neg	offset	7
   414 ;;_s	offset=-2 (param)
   415 ;;_isspace$5057	offset	0
   416 ;;_c	offset=-2 (param)
   417 ;;_c	offset=-2 (param)
   418 ;;_vterm	offset=-1 (param)
   419 ;;_new_response_info	offset=-1 (param)
   420 ;;_new_response_info	offset=-1 (param)
   421 ;;_level	offset=-2 (param)
   422 ;;_dutyValue	offset=-2 (param)
   423 ;;_timer	offset=-1 (param)
   424 ;;_timer	offset=-1 (param)
   425 ;;_count	offset=-3 (param)
   426 ;;_lp_speed	offset	0
   427 ;;_new	offset=-4 (param)
   428 ;;_bn	offset=-5 (param)
   429 ;;_slow	offset=-6 (param)
   430 ;;_b	offset=-4 (param)
   431 ;;_a	offset=-8 (param)
   432 ;;_grs	offset	0
   433 ;;_bexp	offset	1
   434 ;;_aexp	offset	2
   435 ;;_signs	offset	3
   436 ;;_b	offset=-4 (param)
   437 ;;_a	offset=-8 (param)
   438 ;;_prod	offset	0
   439 ;;_grs	offset	4
   440 ;;_temp	offset	8
   441 ;;_bexp	offset	10
   442 ;;_aexp	offset	11
   443 ;;_sign	offset	12
   444 ;;_b	offset=-4 (param)
   445 ;;_a	offset=-8 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_state	offset	0
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_i	offset	0
   458 ;;_sw_value	offset	1
   459 ;;_timerVal	offset=-2 (param)
   460 ;;_channel	offset=-1 (param)
   461 ;;_i	offset	0
   462                           
   463                           	psect	idataBANK0
   464  01819A                     __pidataBANK0:
   465                           	opt callstack 0
   466                           
   467                           ;initializer for _R
   468  01819A  0000               	dw	0
   469  01819C  0000               	dw	0
   470  01819E  0000               	dw	0
   471  0181A0  0000               	dw	0
   472  0181A2  0000               	dw	0
   473  0181A4  0000               	dw	0
   474  0181A6  0000               	dw	0
   475  0181A8  0000               	dw	0
   476  0181AA  0000               	dw	0
   477  0181AC  0000               	dw	0
   478  0181AE  0000               	dw	0
   479  0181B0  0000               	dw	0
   480  0181B2  0000               	dw	0
   481  0181B4  0000               	dw	0
   482  0181B6  0000               	dw	0
   483  0181B8  0000               	dw	0
   484  0181BA  0F67               	dw	3943
   485  0181BC  0F8F               	dw	3983
   486  0181BE  00                 	db	0
   487  0181BF  0000               	dw	0
   488  0181C1  00                 	db	0
   489                           
   490                           ;initializer for stoa@F1166
   491  0181C2  28                 	db	40
   492  0181C3  6E                 	db	110
   493  0181C4  75                 	db	117
   494  0181C5  6C                 	db	108
   495  0181C6  6C                 	db	108
   496  0181C7  29                 	db	41
   497  0181C8  00                 	db	0
   498                           
   499                           ;initializer for _H
   500  0181C9  00                 	db	0
   501  0181CA  00                 	db	0
   502  0181CB  01                 	db	1
   503  0181CC  00                 	db	0
   504  0181CD  01                 	db	1
   505  0181CE  00                 	db	0
   506                           
   507                           	psect	idataBANK1
   508  01892A                     __pidataBANK1:
   509                           	opt callstack 0
   510                           
   511                           ;initializer for _port_data
   512  01892A  FF                 	db	255
   513  01892B  00                 	db	0
   514  01892C  FF                 	db	255
   515  01892D  00                 	db	0
   516  01892E  FF                 	db	255
   517  01892F  00                 	db	0
   518  018930  FF                 	db	255
   519  018931  00                 	db	0
   520  018932  FF                 	db	255
   521  018933  00                 	db	0
   522  018934  FF                 	db	255
   523  018935  00                 	db	0
   524  018936  FF                 	db	255
   525  018937  00                 	db	0
   526  018938  FF                 	db	255
   527  018939  00                 	db	0
   528                           
   529                           	psect	idataBANK2
   530  017008                     __pidataBANK2:
   531                           	opt callstack 0
   532                           
   533                           ;initializer for _V
   534  017008  00                 	db	0
   535  017009  00                 	db	0
   536  01700A  00                 	db	0
   537  01700B  00                 	db	0
   538  01700C  00                 	db	0
   539  01700D  00                 	db	0
   540  01700E  00                 	db	0
   541  01700F  00                 	db	0
   542  017010  00                 	db	0
   543  017011  00                 	db	0
   544  017012  00                 	db	0
   545  017013  00                 	db	0
   546  017014  00                 	db	0
   547  017015  00                 	db	0
   548  017016  00                 	db	0
   549  017017  00                 	db	0
   550  017018  00                 	db	0
   551  017019  00                 	db	0
   552  01701A  00                 	db	0
   553  01701B  00                 	db	0
   554  01701C  00                 	db	0
   555  01701D  00                 	db	0
   556  01701E  00                 	db	0
   557  01701F  00                 	db	0
   558  017020  00                 	db	0
   559  017021  00                 	db	0
   560  017022  00                 	db	0
   561  017023  00                 	db	0
   562  017024  00                 	db	0
   563  017025  00                 	db	0
   564  017026  00                 	db	0
   565  017027  00                 	db	0
   566  017028  00                 	db	0
   567  017029  00                 	db	0
   568  01702A  00                 	db	0
   569  01702B  00                 	db	0
   570  01702C  00                 	db	0
   571  01702D  00                 	db	0
   572  01702E  00                 	db	0
   573  01702F  00                 	db	0
   574  017030  00                 	db	0
   575  017031  00                 	db	0
   576  017032  00                 	db	0
   577  017033  00                 	db	0
   578  017034  00                 	db	0
   579  017035  00                 	db	0
   580  017036  00                 	db	0
   581  017037  00                 	db	0
   582  017038  00                 	db	0
   583  017039  00                 	db	0
   584  01703A  00                 	db	0
   585  01703B  00                 	db	0
   586  01703C  00                 	db	0
   587  01703D  00                 	db	0
   588  01703E  00                 	db	0
   589  01703F  00                 	db	0
   590  017040  00                 	db	0
   591  017041  00                 	db	0
   592  017042  00                 	db	0
   593  017043  00                 	db	0
   594  017044  00                 	db	0
   595  017045  00                 	db	0
   596  017046  00                 	db	0
   597  017047  00                 	db	0
   598  017048  00                 	db	0
   599  017049  00                 	db	0
   600  01704A  00                 	db	0
   601  01704B  00                 	db	0
   602  01704C  00                 	db	0
   603  01704D  00                 	db	0
   604  01704E  00                 	db	0
   605  01704F  00                 	db	0
   606  017050  00                 	db	0
   607  017051  00                 	db	0
   608  017052  00                 	db	0
   609  017053  00                 	db	0
   610  017054  00                 	db	0
   611  017055  00                 	db	0
   612  017056  00                 	db	0
   613  017057  00                 	db	0
   614  017058  00                 	db	0
   615  017059  00                 	db	0
   616  01705A  00                 	db	0
   617  01705B  00                 	db	0
   618  01705C  00                 	db	0
   619  01705D  00                 	db	0
   620  01705E  00                 	db	0
   621  01705F  00                 	db	0
   622  017060  00                 	db	0
   623  017061  00                 	db	0
   624  017062  00                 	db	0
   625  017063  00                 	db	0
   626  017064  00                 	db	0
   627  017065  00                 	db	0
   628  017066  00                 	db	0
   629  017067  00                 	db	0
   630  017068  00                 	db	0
   631  017069  00                 	db	0
   632  01706A  00                 	db	0
   633  01706B  00                 	db	0
   634  01706C  00                 	db	0
   635  01706D  00                 	db	0
   636  01706E  00                 	db	0
   637  01706F  00                 	db	0
   638  017070  00                 	db	0
   639  017071  00                 	db	0
   640  017072  00                 	db	0
   641  017073  00                 	db	0
   642  017074  00                 	db	0
   643  017075  00                 	db	0
   644  017076  00                 	db	0
   645  017077  00                 	db	0
   646  017078  00                 	db	0
   647  017079  00                 	db	0
   648  01707A  00                 	db	0
   649  01707B  00                 	db	0
   650  01707C  00                 	db	0
   651  01707D  00                 	db	0
   652  01707E  00                 	db	0
   653  01707F  00                 	db	0
   654  017080  00                 	db	0
   655  017081  00                 	db	0
   656  017082  00                 	db	0
   657  017083  00                 	db	0
   658  017084  00                 	db	0
   659  017085  00                 	db	0
   660  017086  00                 	db	0
   661  017087  00                 	db	0
   662  017088  00                 	db	0
   663  017089  0000               	dw	0
   664  01708B  0000               	dw	0
   665  01708D  0000               	dw	0
   666  01708F  0000               	dw	0
   667  017091  00                 	db	0
   668  017092  00                 	db	0
   669  017093  00                 	db	0
   670  017094  00                 	db	0
   671  017095  00                 	db	0
   672  017096  00                 	db	0
   673  017097  0000               	dw	0
   674  017099  0000               	dw	0
   675  01709B  0000               	dw	0
   676  01709D  0000               	dw	0
   677  01709F  0000               	dw	0
   678  0170A1  0000               	dw	0
   679  0170A3  00                 	db	0
   680  0170A4  00                 	db	0
   681  0170A5  00                 	db	0
   682  0170A6  00                 	db	0
   683  0170A7  00                 	db	0
   684  0170A8  00                 	db	0
   685  0170A9  00                 	db	0
   686  0170AA  00                 	db	0
   687  0170AB  00                 	db	0
   688  0170AC  00                 	db	0
   689  0170AD  0000               	dw	0
   690  0170AF  0000               	dw	0
   691  0170B1  2D                 	db	45
   692  0170B2  00                 	db	0
   693  0170B3  0000               	dw	0
   694  0170B5  0000               	dw	0
   695  0170B7  0000               	dw	0
   696  0170B9  0000               	dw	0
   697  0170BB  0000               	dw	0
   698  0170BD  0000               	dw	0
   699  0170BF  0000               	dw	0
   700  0170C1  0000               	dw	0
   701                           
   702                           	psect	mediumconst
   703  00FE0A                     __pmediumconst:
   704                           	opt callstack 0
   705  00FE0A  00                 	db	0
   706  00FE0B                     _T:
   707                           	opt callstack 0
   708  00FE0B  63                 	db	99
   709  00FE0C  6F                 	db	111
   710  00FE0D  6D                 	db	109
   711  00FE0E  6D                 	db	109
   712  00FE0F  61                 	db	97
   713  00FE10  6E                 	db	110
   714  00FE11  64                 	db	100
   715  00FE12  73                 	db	115
   716  00FE13  20                 	db	32
   717  00FE14  31                 	db	49
   718  00FE15  00                 	db	0
   719  00FE16  00                 	db	0
   720  00FE17  00                 	db	0
   721  00FE18  00                 	db	0
   722  00FE19  00                 	db	0
   723  00FE1A  00                 	db	0
   724  00FE1B  00                 	db	0
   725  00FE1C  00                 	db	0
   726  00FE1D  64                 	db	100
   727  00FE1E  69                 	db	105
   728  00FE1F  73                 	db	115
   729  00FE20  70                 	db	112
   730  00FE21  6C                 	db	108
   731  00FE22  61                 	db	97
   732  00FE23  79                 	db	121
   733  00FE24  73                 	db	115
   734  00FE25  20                 	db	32
   735  00FE26  31                 	db	49
   736  00FE27  00                 	db	0
   737  00FE28  00                 	db	0
   738  00FE29  00                 	db	0
   739  00FE2A  00                 	db	0
   740  00FE2B  00                 	db	0
   741  00FE2C  00                 	db	0
   742  00FE2D  00                 	db	0
   743  00FE2E  00                 	db	0
   744  00FE2F  63                 	db	99
   745  00FE30  6F                 	db	111
   746  00FE31  6D                 	db	109
   747  00FE32  6D                 	db	109
   748  00FE33  61                 	db	97
   749  00FE34  6E                 	db	110
   750  00FE35  64                 	db	100
   751  00FE36  73                 	db	115
   752  00FE37  20                 	db	32
   753  00FE38  32                 	db	50
   754  00FE39  00                 	db	0
   755  00FE3A  00                 	db	0
   756  00FE3B  00                 	db	0
   757  00FE3C  00                 	db	0
   758  00FE3D  00                 	db	0
   759  00FE3E  00                 	db	0
   760  00FE3F  00                 	db	0
   761  00FE40  00                 	db	0
   762  00FE41  64                 	db	100
   763  00FE42  69                 	db	105
   764  00FE43  73                 	db	115
   765  00FE44  70                 	db	112
   766  00FE45  6C                 	db	108
   767  00FE46  61                 	db	97
   768  00FE47  79                 	db	121
   769  00FE48  73                 	db	115
   770  00FE49  20                 	db	32
   771  00FE4A  32                 	db	50
   772  00FE4B  00                 	db	0
   773  00FE4C  00                 	db	0
   774  00FE4D  00                 	db	0
   775  00FE4E  00                 	db	0
   776  00FE4F  00                 	db	0
   777  00FE50  00                 	db	0
   778  00FE51  00                 	db	0
   779  00FE52  00                 	db	0
   780  00FE53  63                 	db	99
   781  00FE54  6F                 	db	111
   782  00FE55  6D                 	db	109
   783  00FE56  6D                 	db	109
   784  00FE57  61                 	db	97
   785  00FE58  6E                 	db	110
   786  00FE59  64                 	db	100
   787  00FE5A  73                 	db	115
   788  00FE5B  20                 	db	32
   789  00FE5C  33                 	db	51
   790  00FE5D  00                 	db	0
   791  00FE5E  00                 	db	0
   792  00FE5F  00                 	db	0
   793  00FE60  00                 	db	0
   794  00FE61  00                 	db	0
   795  00FE62  00                 	db	0
   796  00FE63  00                 	db	0
   797  00FE64  00                 	db	0
   798  00FE65  64                 	db	100
   799  00FE66  69                 	db	105
   800  00FE67  73                 	db	115
   801  00FE68  70                 	db	112
   802  00FE69  6C                 	db	108
   803  00FE6A  61                 	db	97
   804  00FE6B  79                 	db	121
   805  00FE6C  73                 	db	115
   806  00FE6D  20                 	db	32
   807  00FE6E  33                 	db	51
   808  00FE6F  00                 	db	0
   809  00FE70  00                 	db	0
   810  00FE71  00                 	db	0
   811  00FE72  00                 	db	0
   812  00FE73  00                 	db	0
   813  00FE74  00                 	db	0
   814  00FE75  00                 	db	0
   815  00FE76  00                 	db	0
   816  00FE77  63                 	db	99
   817  00FE78  6F                 	db	111
   818  00FE79  6D                 	db	109
   819  00FE7A  6D                 	db	109
   820  00FE7B  61                 	db	97
   821  00FE7C  6E                 	db	110
   822  00FE7D  64                 	db	100
   823  00FE7E  73                 	db	115
   824  00FE7F  20                 	db	32
   825  00FE80  34                 	db	52
   826  00FE81  00                 	db	0
   827  00FE82  00                 	db	0
   828  00FE83  00                 	db	0
   829  00FE84  00                 	db	0
   830  00FE85  00                 	db	0
   831  00FE86  00                 	db	0
   832  00FE87  00                 	db	0
   833  00FE88  00                 	db	0
   834  00FE89  64                 	db	100
   835  00FE8A  69                 	db	105
   836  00FE8B  73                 	db	115
   837  00FE8C  70                 	db	112
   838  00FE8D  6C                 	db	108
   839  00FE8E  61                 	db	97
   840  00FE8F  79                 	db	121
   841  00FE90  73                 	db	115
   842  00FE91  20                 	db	32
   843  00FE92  34                 	db	52
   844  00FE93  00                 	db	0
   845  00FE94  00                 	db	0
   846  00FE95  00                 	db	0
   847  00FE96  00                 	db	0
   848  00FE97  00                 	db	0
   849  00FE98  00                 	db	0
   850  00FE99  00                 	db	0
   851  00FE9A  00                 	db	0
   852  00FE9B                     __end_of_T:
   853                           	opt callstack 0
   854  0000                     _IVTADL	set	14493
   855  0000                     _IVTADH	set	14494
   856  0000                     _IVTADU	set	14495
   857  0000                     _PIR4bits	set	14756
   858  0000                     _PIE8bits	set	14744
   859  0000                     _PIR8bits	set	14760
   860  0000                     _SCANPR	set	14839
   861  0000                     _DMA2PR	set	14836
   862  0000                     _DMA1PR	set	14835
   863  0000                     _MAINPR	set	14834
   864  0000                     _ISRPR	set	14833
   865  0000                     _PIE2bits	set	14738
   866  0000                     _PIR2bits	set	14754
   867  0000                     _PIE9bits	set	14745
   868  0000                     _PIR9bits	set	14761
   869  0000                     _PIE6bits	set	14742
   870  0000                     _PIE3bits	set	14739
   871  0000                     _PMD7	set	14791
   872  0000                     _PMD6	set	14790
   873  0000                     _PMD5	set	14789
   874  0000                     _PMD4	set	14788
   875  0000                     _PMD3	set	14787
   876  0000                     _PMD2	set	14786
   877  0000                     _PMD1	set	14785
   878  0000                     _PMD0	set	14784
   879  0000                     _OSCTUNE	set	14814
   880  0000                     _OSCFRQ	set	14815
   881  0000                     _OSCEN	set	14813
   882  0000                     _OSCCON3	set	14811
   883  0000                     _OSCCON1	set	14809
   884  0000                     _IPR8bits	set	14728
   885  0000                     _IPR9bits	set	14729
   886  0000                     _IPR5bits	set	14725
   887  0000                     _IPR1bits	set	14721
   888  0000                     _IPR3bits	set	14723
   889  0000                     _IPR6bits	set	14726
   890  0000                     _IPR2bits	set	14722
   891  0000                     _PIE5bits	set	14741
   892  0000                     _PIE1bits	set	14737
   893  0000                     _PIR5bits	set	14757
   894  0000                     _PIR1bits	set	14753
   895  0000                     _PLLR	set	118496
   896  0000                     _SPI1SDIPPS	set	15071
   897  0000                     _U1RXPPS	set	15077
   898  0000                     _RC6PPS	set	14870
   899  0000                     _RC5PPS	set	14869
   900  0000                     _INT1PPS	set	15041
   901  0000                     _RD1PPS	set	14873
   902  0000                     _INT0PPS	set	15040
   903  0000                     _RC3PPS	set	14867
   904  0000                     _RB6PPS	set	14862
   905  0000                     _SPI1SCKPPS	set	15070
   906  0000                     _U2RXPPS	set	15080
   907  0000                     _SLRCONF	set	14995
   908  0000                     _SLRCONE	set	14979
   909  0000                     _SLRCOND	set	14963
   910  0000                     _SLRCONC	set	14947
   911  0000                     _SLRCONB	set	14931
   912  0000                     _SLRCONA	set	14915
   913  0000                     _ODCOND	set	14962
   914  0000                     _ODCONC	set	14946
   915  0000                     _ODCONB	set	14930
   916  0000                     _ODCONA	set	14914
   917  0000                     _ODCONF	set	14994
   918  0000                     _ODCONE	set	14978
   919  0000                     _WPUC	set	14945
   920  0000                     _WPUA	set	14913
   921  0000                     _WPUB	set	14929
   922  0000                     _WPUE	set	14977
   923  0000                     _WPUF	set	14993
   924  0000                     _WPUD	set	14961
   925  0000                     _ANSELA	set	14912
   926  0000                     _ANSELF	set	14992
   927  0000                     _ANSELE	set	14976
   928  0000                     _ANSELB	set	14928
   929  0000                     _ANSELC	set	14944
   930  0000                     _ANSELD	set	14960
   931  0000                     _DMA2SSA	set	15321
   932  0000                     _DMA1SSA	set	15353
   933  0000                     _DMA2DSZ	set	15310
   934  0000                     _DMA2SSZ	set	15319
   935  0000                     _DMA2DSA	set	15312
   936  0000                     _DMA1DSZ	set	15342
   937  0000                     _DMA1SSZ	set	15351
   938  0000                     _DMA1DSA	set	15344
   939  0000                     _DMA1CON0bits	set	15356
   940  0000                     _DMA1CON1bits	set	15357
   941  0000                     _DMA2CON0	set	15324
   942  0000                     _DMA2AIRQ	set	15326
   943  0000                     _DMA2SIRQ	set	15327
   944  0000                     _DMA2CON1	set	15325
   945  0000                     _DMA1CON0	set	15356
   946  0000                     _DMA1AIRQ	set	15358
   947  0000                     _DMA1SIRQ	set	15359
   948  0000                     _DMA1CON1	set	15357
   949  0000                     _CLKRCON	set	15589
   950  0000                     _CLKRCLK	set	15590
   951  0000                     _SPI1INTFbits	set	15642
   952  0000                     _SPI1RXB	set	15632
   953  0000                     _SPI1TXB	set	15633
   954  0000                     _SPI1TCNTL	set	15634
   955  0000                     _SPI1CON0	set	15636
   956  0000                     _SPI1CLK	set	15644
   957  0000                     _SPI1BAUD	set	15641
   958  0000                     _SPI1CON2	set	15638
   959  0000                     _SPI1CON1	set	15637
   960  0000                     _U2RXB	set	15824
   961  0000                     _U2TXB	set	15826
   962  0000                     _U2ERRIE	set	15842
   963  0000                     _U2ERRIR	set	15841
   964  0000                     _U2UIR	set	15840
   965  0000                     _U2FIFO	set	15839
   966  0000                     _U2BRGH	set	15838
   967  0000                     _U2BRGL	set	15837
   968  0000                     _U2CON2	set	15836
   969  0000                     _U2CON1	set	15835
   970  0000                     _U2CON0	set	15834
   971  0000                     _U2P3L	set	15832
   972  0000                     _U2P2L	set	15830
   973  0000                     _U2P1L	set	15828
   974  0000                     _U1RXB	set	15848
   975  0000                     _U1TXB	set	15850
   976  0000                     _U1ERRIE	set	15866
   977  0000                     _U1ERRIR	set	15865
   978  0000                     _U1UIR	set	15864
   979  0000                     _U1FIFO	set	15863
   980  0000                     _U1BRGH	set	15862
   981  0000                     _U1BRGL	set	15861
   982  0000                     _U1CON2	set	15860
   983  0000                     _U1CON1	set	15859
   984  0000                     _U1CON0	set	15858
   985  0000                     _U1P3H	set	15857
   986  0000                     _U1P3L	set	15856
   987  0000                     _U1P2H	set	15855
   988  0000                     _U1P2L	set	15854
   989  0000                     _U1P1H	set	15853
   990  0000                     _U1P1L	set	15852
   991  0000                     _FVRCON	set	16065
   992  0000                     _ADFLTRL	set	16102
   993  0000                     _ADFLTRH	set	16103
   994  0000                     _ADCON0bits	set	16120
   995  0000                     _ADCON0	set	16120
   996  0000                     _ADCLK	set	16127
   997  0000                     _ADACT	set	16126
   998  0000                     _ADREF	set	16125
   999  0000                     _ADSTAT	set	16124
  1000  0000                     _ADCON3	set	16123
  1001  0000                     _ADCON2	set	16122
  1002  0000                     _ADCON1	set	16121
  1003  0000                     _ADPREH	set	16119
  1004  0000                     _ADPREL	set	16118
  1005  0000                     _ADCAP	set	16117
  1006  0000                     _ADACQH	set	16116
  1007  0000                     _ADACQL	set	16115
  1008  0000                     _ADPCH	set	16113
  1009  0000                     _ADRPT	set	16108
  1010  0000                     _ADACCU	set	16106
  1011  0000                     _ADSTPTH	set	16101
  1012  0000                     _ADSTPTL	set	16100
  1013  0000                     _ADUTHH	set	16097
  1014  0000                     _ADUTHL	set	16096
  1015  0000                     _ADLTHH	set	16095
  1016  0000                     _ADLTHL	set	16094
  1017  0000                     _CCPTMRS1bits	set	16223
  1018  0000                     _PORTFbits	set	16335
  1019  0000                     _LATCbits	set	16316
  1020  0000                     _LATDbits	set	16317
  1021  0000                     _PORTBbits	set	16331
  1022  0000                     _T2CON	set	16300
  1023  0000                     _T2TMR	set	16298
  1024  0000                     _T2PR	set	16299
  1025  0000                     _T2RST	set	16303
  1026  0000                     _T2HLT	set	16301
  1027  0000                     _T2CLKCON	set	16302
  1028  0000                     _PWM8DCL	set	16224
  1029  0000                     _PWM8DCH	set	16225
  1030  0000                     _PWM8CON	set	16226
  1031  0000                     _LATEbits	set	16318
  1032  0000                     _T5CONbits	set	16282
  1033  0000                     _T5CON	set	16282
  1034  0000                     _TMR5L	set	16280
  1035  0000                     _TMR5H	set	16281
  1036  0000                     _T5CLK	set	16285
  1037  0000                     _T5GATE	set	16284
  1038  0000                     _T5GCON	set	16283
  1039  0000                     _T6CON	set	16276
  1040  0000                     _T6TMR	set	16274
  1041  0000                     _T6PR	set	16275
  1042  0000                     _T6RST	set	16279
  1043  0000                     _T6HLT	set	16277
  1044  0000                     _T6CLKCON	set	16278
  1045  0000                     _TRISD	set	16325
  1046  0000                     _TRISC	set	16324
  1047  0000                     _TRISB	set	16323
  1048  0000                     _TRISA	set	16322
  1049  0000                     _TRISF	set	16327
  1050  0000                     _TRISE	set	16326
  1051  0000                     _LATC	set	16316
  1052  0000                     _LATB	set	16315
  1053  0000                     _LATF	set	16319
  1054  0000                     _LATA	set	16314
  1055  0000                     _LATD	set	16317
  1056  0000                     _LATE	set	16318
  1057  0000                     _IVTLOCKbits	set	16340
  1058  0000                     _IVTLOCK	set	16340
  1059  0000                     _INTCON0bits	set	16338
  1060  0000                     _GIE	set	130711
  1061  00FE9B                     
  1062                           ; BSR set to: 57
  1063  00FE9B  20                 	db	32
  1064  00FE9C  4D                 	db	77	;'M'
  1065  00FE9D  65                 	db	101	;'e'
  1066  00FE9E  73                 	db	115	;'s'
  1067  00FE9F  67                 	db	103	;'g'
  1068  00FEA0  20                 	db	32
  1069  00FEA1  25                 	db	37
  1070  00FEA2  64                 	db	100	;'d'
  1071  00FEA3  20                 	db	32
  1072  00FEA4  53                 	db	83	;'S'
  1073  00FEA5  74                 	db	116	;'t'
  1074  00FEA6  61                 	db	97	;'a'
  1075  00FEA7  63                 	db	99	;'c'
  1076  00FEA8  6B                 	db	107	;'k'
  1077  00FEA9  20                 	db	32
  1078  00FEAA  25                 	db	37
  1079  00FEAB  64                 	db	100	;'d'
  1080  00FEAC  20                 	db	32
  1081  00FEAD  20                 	db	32
  1082  00FEAE  20                 	db	32
  1083  00FEAF  20                 	db	32
  1084  00FEB0  20                 	db	32
  1085  00FEB1  20                 	db	32
  1086  00FEB2  00                 	db	0
  1087  00FEB3                     STR_30:
  1088                           
  1089                           ; BSR set to: 57
  1090  00FEB3  20                 	db	32
  1091  00FEB4  20                 	db	32
  1092  00FEB5  20                 	db	32
  1093  00FEB6  20                 	db	32
  1094  00FEB7  20                 	db	32
  1095  00FEB8  20                 	db	32
  1096  00FEB9  20                 	db	32
  1097  00FEBA  20                 	db	32
  1098  00FEBB  20                 	db	32
  1099  00FEBC  20                 	db	32
  1100  00FEBD  20                 	db	32
  1101  00FEBE  20                 	db	32
  1102  00FEBF  20                 	db	32
  1103  00FEC0  20                 	db	32
  1104  00FEC1  20                 	db	32
  1105  00FEC2  20                 	db	32
  1106  00FEC3  20                 	db	32
  1107  00FEC4  20                 	db	32
  1108  00FEC5  00                 	db	0
  1109  00FEC6                     STR_20:
  1110                           
  1111                           ; BSR set to: 57
  1112  00FEC6  48                 	db	72	;'H'
  1113  00FEC7  45                 	db	69	;'E'
  1114  00FEC8  4C                 	db	76	;'L'
  1115  00FEC9  50                 	db	80	;'P'
  1116  00FECA  20                 	db	32
  1117  00FECB  25                 	db	37
  1118  00FECC  73                 	db	115	;'s'
  1119  00FECD  20                 	db	32
  1120  00FECE  20                 	db	32
  1121  00FECF  20                 	db	32
  1122  00FED0  20                 	db	32
  1123  00FED1  20                 	db	32
  1124  00FED2  20                 	db	32
  1125  00FED3  20                 	db	32
  1126  00FED4  20                 	db	32
  1127  00FED5  20                 	db	32
  1128  00FED6  20                 	db	32
  1129  00FED7  20                 	db	32
  1130  00FED8  00                 	db	0
  1131  00FED9                     
  1132                           ; BSR set to: 57
  1133  00FED9  44                 	db	68	;'D'
  1134  00FEDA  49                 	db	73	;'I'
  1135  00FEDB  53                 	db	83	;'S'
  1136  00FEDC  50                 	db	80	;'P'
  1137  00FEDD  4C                 	db	76	;'L'
  1138  00FEDE  41                 	db	65	;'A'
  1139  00FEDF  59                 	db	89	;'Y'
  1140  00FEE0  20                 	db	32
  1141  00FEE1  25                 	db	37
  1142  00FEE2  73                 	db	115	;'s'
  1143  00FEE3  20                 	db	32
  1144  00FEE4  20                 	db	32
  1145  00FEE5  20                 	db	32
  1146  00FEE6  20                 	db	32
  1147  00FEE7  20                 	db	32
  1148  00FEE8  20                 	db	32
  1149  00FEE9  20                 	db	32
  1150  00FEEA  20                 	db	32
  1151  00FEEB  00                 	db	0
  1152  00FEEC                     STR_9:
  1153                           
  1154                           ; BSR set to: 57
  1155  00FEEC  50                 	db	80	;'P'
  1156  00FEED  56                 	db	86	;'V'
  1157  00FEEE  20                 	db	32
  1158  00FEEF  20                 	db	32
  1159  00FEF0  20                 	db	32
  1160  00FEF1  50                 	db	80	;'P'
  1161  00FEF2  57                 	db	87	;'W'
  1162  00FEF3  52                 	db	82	;'R'
  1163  00FEF4  20                 	db	32
  1164  00FEF5  25                 	db	37
  1165  00FEF6  33                 	db	51	;'3'
  1166  00FEF7  2E                 	db	46
  1167  00FEF8  32                 	db	50	;'2'
  1168  00FEF9  66                 	db	102	;'f'
  1169  00FEFA  20                 	db	32
  1170  00FEFB  20                 	db	32
  1171  00FEFC  20                 	db	32
  1172  00FEFD  20                 	db	32
  1173  00FEFE  00                 	db	0
  1174  00FEFF                     STR_11:
  1175                           
  1176                           ; BSR set to: 57
  1177  00FEFF  49                 	db	73	;'I'
  1178  00FF00  4E                 	db	78	;'N'
  1179  00FF01  56                 	db	86	;'V'
  1180  00FF02  20                 	db	32
  1181  00FF03  20                 	db	32
  1182  00FF04  50                 	db	80	;'P'
  1183  00FF05  57                 	db	87	;'W'
  1184  00FF06  52                 	db	82	;'R'
  1185  00FF07  20                 	db	32
  1186  00FF08  25                 	db	37
  1187  00FF09  33                 	db	51	;'3'
  1188  00FF0A  2E                 	db	46
  1189  00FF0B  32                 	db	50	;'2'
  1190  00FF0C  66                 	db	102	;'f'
  1191  00FF0D  20                 	db	32
  1192  00FF0E  20                 	db	32
  1193  00FF0F  20                 	db	32
  1194  00FF10  20                 	db	32
  1195  00FF11  00                 	db	0
  1196  00FF12                     STR_10:
  1197                           
  1198                           ; BSR set to: 57
  1199  00FF12  4C                 	db	76	;'L'
  1200  00FF13  4F                 	db	79	;'O'
  1201  00FF14  41                 	db	65	;'A'
  1202  00FF15  44                 	db	68	;'D'
  1203  00FF16  20                 	db	32
  1204  00FF17  50                 	db	80	;'P'
  1205  00FF18  57                 	db	87	;'W'
  1206  00FF19  52                 	db	82	;'R'
  1207  00FF1A  20                 	db	32
  1208  00FF1B  25                 	db	37
  1209  00FF1C  33                 	db	51	;'3'
  1210  00FF1D  2E                 	db	46
  1211  00FF1E  32                 	db	50	;'2'
  1212  00FF1F  66                 	db	102	;'f'
  1213  00FF20  20                 	db	32
  1214  00FF21  20                 	db	32
  1215  00FF22  20                 	db	32
  1216  00FF23  20                 	db	32
  1217  00FF24  00                 	db	0
  1218  00FF25                     STR_13:
  1219                           
  1220                           ; BSR set to: 57
  1221  00FF25  42                 	db	66	;'B'
  1222  00FF26  56                 	db	86	;'V'
  1223  00FF27  20                 	db	32
  1224  00FF28  25                 	db	37
  1225  00FF29  32                 	db	50	;'2'
  1226  00FF2A  2E                 	db	46
  1227  00FF2B  32                 	db	50	;'2'
  1228  00FF2C  66                 	db	102	;'f'
  1229  00FF2D  20                 	db	32
  1230  00FF2E  42                 	db	66	;'B'
  1231  00FF2F  41                 	db	65	;'A'
  1232  00FF30  20                 	db	32
  1233  00FF31  25                 	db	37
  1234  00FF32  32                 	db	50	;'2'
  1235  00FF33  2E                 	db	46
  1236  00FF34  32                 	db	50	;'2'
  1237  00FF35  66                 	db	102	;'f'
  1238  00FF36  20                 	db	32
  1239  00FF37  00                 	db	0
  1240  00FF38                     STR_14:
  1241                           
  1242                           ; BSR set to: 57
  1243  00FF38  43                 	db	67	;'C'
  1244  00FF39  56                 	db	86	;'V'
  1245  00FF3A  20                 	db	32
  1246  00FF3B  25                 	db	37
  1247  00FF3C  32                 	db	50	;'2'
  1248  00FF3D  2E                 	db	46
  1249  00FF3E  32                 	db	50	;'2'
  1250  00FF3F  66                 	db	102	;'f'
  1251  00FF40  20                 	db	32
  1252  00FF41  4C                 	db	76	;'L'
  1253  00FF42  41                 	db	65	;'A'
  1254  00FF43  20                 	db	32
  1255  00FF44  25                 	db	37
  1256  00FF45  32                 	db	50	;'2'
  1257  00FF46  2E                 	db	46
  1258  00FF47  32                 	db	50	;'2'
  1259  00FF48  66                 	db	102	;'f'
  1260  00FF49  20                 	db	32
  1261  00FF4A  00                 	db	0
  1262  00FF4B                     STR_12:
  1263                           
  1264                           ; BSR set to: 57
  1265  00FF4B  50                 	db	80	;'P'
  1266  00FF4C  56                 	db	86	;'V'
  1267  00FF4D  20                 	db	32
  1268  00FF4E  25                 	db	37
  1269  00FF4F  32                 	db	50	;'2'
  1270  00FF50  2E                 	db	46
  1271  00FF51  32                 	db	50	;'2'
  1272  00FF52  66                 	db	102	;'f'
  1273  00FF53  20                 	db	32
  1274  00FF54  50                 	db	80	;'P'
  1275  00FF55  41                 	db	65	;'A'
  1276  00FF56  20                 	db	32
  1277  00FF57  25                 	db	37
  1278  00FF58  32                 	db	50	;'2'
  1279  00FF59  2E                 	db	46
  1280  00FF5A  32                 	db	50	;'2'
  1281  00FF5B  66                 	db	102	;'f'
  1282  00FF5C  20                 	db	32
  1283  00FF5D  00                 	db	0
  1284  00FF5E                     STR_8:
  1285                           
  1286                           ; BSR set to: 57
  1287  00FF5E  20                 	db	32
  1288  00FF5F  56                 	db	86	;'V'
  1289  00FF60  54                 	db	84	;'T'
  1290  00FF61  45                 	db	69	;'E'
  1291  00FF62  52                 	db	82	;'R'
  1292  00FF63  4D                 	db	77	;'M'
  1293  00FF64  20                 	db	32
  1294  00FF65  23                 	db	35
  1295  00FF66  32                 	db	50	;'2'
  1296  00FF67  20                 	db	32
  1297  00FF68  20                 	db	32
  1298  00FF69  20                 	db	32
  1299  00FF6A  20                 	db	32
  1300  00FF6B  20                 	db	32
  1301  00FF6C  20                 	db	32
  1302  00FF6D  20                 	db	32
  1303  00FF6E  00                 	db	0
  1304  00FF6F                     STR_4:
  1305                           
  1306                           ; BSR set to: 57
  1307  00FF6F  20                 	db	32
  1308  00FF70  4E                 	db	78	;'N'
  1309  00FF71  53                 	db	83	;'S'
  1310  00FF72  41                 	db	65	;'A'
  1311  00FF73  53                 	db	83	;'S'
  1312  00FF74  50                 	db	80	;'P'
  1313  00FF75  4F                 	db	79	;'O'
  1314  00FF76  4F                 	db	79	;'O'
  1315  00FF77  4B                 	db	75	;'K'
  1316  00FF78  20                 	db	32
  1317  00FF79  20                 	db	32
  1318  00FF7A  20                 	db	32
  1319  00FF7B  20                 	db	32
  1320  00FF7C  20                 	db	32
  1321  00FF7D  20                 	db	32
  1322  00FF7E  20                 	db	32
  1323  00FF7F  00                 	db	0
  1324  00FF80                     STR_1:
  1325                           
  1326                           ; BSR set to: 57
  1327  00FF80  20                 	db	32
  1328  00FF81  4D                 	db	77	;'M'
  1329  00FF82  42                 	db	66	;'B'
  1330  00FF83  4D                 	db	77	;'M'
  1331  00FF84  43                 	db	67	;'C'
  1332  00FF85  20                 	db	32
  1333  00FF86  53                 	db	83	;'S'
  1334  00FF87  4F                 	db	79	;'O'
  1335  00FF88  4C                 	db	76	;'L'
  1336  00FF89  41                 	db	65	;'A'
  1337  00FF8A  52                 	db	82	;'R'
  1338  00FF8B  4D                 	db	77	;'M'
  1339  00FF8C  4F                 	db	79	;'O'
  1340  00FF8D  4E                 	db	78	;'N'
  1341  00FF8E  20                 	db	32
  1342  00FF8F  20                 	db	32
  1343  00FF90  00                 	db	0
  1344  00FF91                     STR_5:
  1345                           
  1346                           ; BSR set to: 57
  1347  00FF91  20                 	db	32
  1348  00FF92  53                 	db	83	;'S'
  1349  00FF93  45                 	db	69	;'E'
  1350  00FF94  51                 	db	81	;'Q'
  1351  00FF95  55                 	db	85	;'U'
  1352  00FF96  45                 	db	69	;'E'
  1353  00FF97  4E                 	db	78	;'N'
  1354  00FF98  43                 	db	67	;'C'
  1355  00FF99  45                 	db	69	;'E'
  1356  00FF9A  20                 	db	32
  1357  00FF9B  54                 	db	84	;'T'
  1358  00FF9C  45                 	db	69	;'E'
  1359  00FF9D  53                 	db	83	;'S'
  1360  00FF9E  54                 	db	84	;'T'
  1361  00FF9F  20                 	db	32
  1362  00FFA0  20                 	db	32
  1363  00FFA1  00                 	db	0
  1364  00FFA2                     STR_24:
  1365                           
  1366                           ; BSR set to: 57
  1367  00FFA2  76                 	db	118	;'v'
  1368  00FFA3  74                 	db	116	;'t'
  1369  00FFA4  65                 	db	101	;'e'
  1370  00FFA5  72                 	db	114	;'r'
  1371  00FFA6  6D                 	db	109	;'m'
  1372  00FFA7  20                 	db	32
  1373  00FFA8  25                 	db	37
  1374  00FFA9  78                 	db	120	;'x'
  1375  00FFAA  3A                 	db	58	;':'
  1376  00FFAB  25                 	db	37
  1377  00FFAC  78                 	db	120	;'x'
  1378  00FFAD  20                 	db	32
  1379  00FFAE  20                 	db	32
  1380  00FFAF  20                 	db	32
  1381  00FFB0  00                 	db	0
  1382  00FFB1                     STR_2:
  1383                           
  1384                           ; BSR set to: 57
  1385  00FFB1  20                 	db	32
  1386  00FFB2  56                 	db	86	;'V'
  1387  00FFB3  65                 	db	101	;'e'
  1388  00FFB4  72                 	db	114	;'r'
  1389  00FFB5  73                 	db	115	;'s'
  1390  00FFB6  69                 	db	105	;'i'
  1391  00FFB7  6F                 	db	111	;'o'
  1392  00FFB8  6E                 	db	110	;'n'
  1393  00FFB9  20                 	db	32
  1394  00FFBA  25                 	db	37
  1395  00FFBB  73                 	db	115	;'s'
  1396  00FFBC  20                 	db	32
  1397  00FFBD  20                 	db	32
  1398  00FFBE  20                 	db	32
  1399  00FFBF  00                 	db	0
  1400  00FFC0                     STR_18:
  1401                           
  1402                           ; BSR set to: 57
  1403  00FFC0  4E                 	db	78	;'N'
  1404  00FFC1  6F                 	db	111	;'o'
  1405  00FFC2  76                 	db	118	;'v'
  1406  00FFC3  20                 	db	32
  1407  00FFC4  33                 	db	51	;'3'
  1408  00FFC5  30                 	db	48	;'0'
  1409  00FFC6  20                 	db	32
  1410  00FFC7  32                 	db	50	;'2'
  1411  00FFC8  30                 	db	48	;'0'
  1412  00FFC9  31                 	db	49	;'1'
  1413  00FFCA  39                 	db	57	;'9'
  1414  00FFCB  00                 	db	0
  1415  00FFCC                     STR_22:
  1416                           
  1417                           ; BSR set to: 57
  1418  00FFCC  25                 	db	37
  1419  00FFCD  73                 	db	115	;'s'
  1420  00FFCE  20                 	db	32
  1421  00FFCF  20                 	db	32
  1422  00FFD0  20                 	db	32
  1423  00FFD1  20                 	db	32
  1424  00FFD2  20                 	db	32
  1425  00FFD3  20                 	db	32
  1426  00FFD4  20                 	db	32
  1427  00FFD5  00                 	db	0
  1428  00FFD6                     STR_19:
  1429                           
  1430                           ; BSR set to: 57
  1431  00FFD6  31                 	db	49	;'1'
  1432  00FFD7  30                 	db	48	;'0'
  1433  00FFD8  3A                 	db	58	;':'
  1434  00FFD9  32                 	db	50	;'2'
  1435  00FFDA  39                 	db	57	;'9'
  1436  00FFDB  3A                 	db	58	;':'
  1437  00FFDC  30                 	db	48	;'0'
  1438  00FFDD  33                 	db	51	;'3'
  1439  00FFDE  00                 	db	0
  1440  00FFDF                     STR_3:
  1441                           
  1442                           ; BSR set to: 57
  1443  00FFDF  30                 	db	48	;'0'
  1444  00FFE0  2E                 	db	46
  1445  00FFE1  39                 	db	57	;'9'
  1446  00FFE2  39                 	db	57	;'9'
  1447  00FFE3  32                 	db	50	;'2'
  1448  00FFE4  00                 	db	0
  1449  00FFE5                     STR_37:
  1450                           
  1451                           ; BSR set to: 57
  1452  00FFE5  49                 	db	73	;'I'
  1453  00FFE6  4E                 	db	78	;'N'
  1454  00FFE7  46                 	db	70	;'F'
  1455  00FFE8  00                 	db	0
  1456  00FFE9                     STR_41:
  1457                           
  1458                           ; BSR set to: 57
  1459  00FFE9  4E                 	db	78	;'N'
  1460  00FFEA  41                 	db	65	;'A'
  1461  00FFEB  4E                 	db	78	;'N'
  1462  00FFEC  00                 	db	0
  1463  00FFED                     STR_38:
  1464                           
  1465                           ; BSR set to: 57
  1466  00FFED  69                 	db	105	;'i'
  1467  00FFEE  6E                 	db	110	;'n'
  1468  00FFEF  66                 	db	102	;'f'
  1469  00FFF0  00                 	db	0
  1470  00FFF1                     STR_42:
  1471                           
  1472                           ; BSR set to: 57
  1473  00FFF1  6E                 	db	110	;'n'
  1474  00FFF2  61                 	db	97	;'a'
  1475  00FFF3  6E                 	db	110	;'n'
  1476  00FFF4  00                 	db	0
  1477  00FFF5                     STR_45:
  1478                           
  1479                           ; BSR set to: 57
  1480  00FFF5  6C                 	db	108	;'l'
  1481  00FFF6  66                 	db	102	;'f'
  1482  00FFF7  00                 	db	0
  1483  00FFF8                     STR_16:
  1484                           
  1485                           ; BSR set to: 57
  1486  00FFF8  25                 	db	37
  1487  00FFF9  63                 	db	99	;'c'
  1488  00FFFA  00                 	db	0
  1489  00FFFB                     STR_15:
  1490                           
  1491                           ; BSR set to: 57
  1492  00FFFB  25                 	db	37
  1493  00FFFC  73                 	db	115	;'s'
  1494  00FFFD  00                 	db	0
  1495  0000                     
  1496                           ; #config settings
  1497  00FFFE  00                 	db	0	; dummy byte at the end
  1498  0000                     
  1499                           	psect	cinit
  1500  016C92                     __pcinit:
  1501                           	opt callstack 0
  1502  016C92                     start_initialization:
  1503                           	opt callstack 0
  1504  016C92                     __initialization:
  1505                           	opt callstack 0
  1506                           
  1507                           ; Initialize objects allocated to BANK2 (187 bytes)
  1508                           ; load TBLPTR registers with __pidataBANK2
  1509  016C92  0E08               	movlw	low __pidataBANK2
  1510  016C94  6EF6               	movwf	tblptrl,c
  1511  016C96  0E70               	movlw	high __pidataBANK2
  1512  016C98  6EF7               	movwf	tblptrh,c
  1513  016C9A  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1514  016C9C  6EF8               	movwf	tblptru,c
  1515  016C9E  EE00  F200         	lfsr	0,__pdataBANK2
  1516  016CA2  EE20 F0BB          	lfsr	2,187
  1517  016CA6                     copy_data0:
  1518  016CA6  0009               	tblrd		*+
  1519  016CA8  006F FFD7 FFEE     	movff	tablat,postinc0
  1520  016CAE  50DD               	movf	postdec2,w,c
  1521  016CB0  50D9               	movf	fsr2l,w,c
  1522  016CB2  E1F9               	bnz	copy_data0
  1523                           
  1524                           ; Initialize objects allocated to BANK1 (16 bytes)
  1525                           ; load TBLPTR registers with __pidataBANK1
  1526  016CB4  0E2A               	movlw	low __pidataBANK1
  1527  016CB6  6EF6               	movwf	tblptrl,c
  1528  016CB8  0E89               	movlw	high __pidataBANK1
  1529  016CBA  6EF7               	movwf	tblptrh,c
  1530  016CBC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1531  016CBE  6EF8               	movwf	tblptru,c
  1532  016CC0  EE00  F1D0         	lfsr	0,__pdataBANK1
  1533  016CC4  EE20 F010          	lfsr	2,16
  1534  016CC8                     copy_data1:
  1535  016CC8  0009               	tblrd		*+
  1536  016CCA  006F FFD7 FFEE     	movff	tablat,postinc0
  1537  016CD0  50DD               	movf	postdec2,w,c
  1538  016CD2  50D9               	movf	fsr2l,w,c
  1539  016CD4  E1F9               	bnz	copy_data1
  1540                           
  1541                           ; Initialize objects allocated to BANK0 (53 bytes)
  1542                           ; load TBLPTR registers with __pidataBANK0
  1543  016CD6  0E9A               	movlw	low __pidataBANK0
  1544  016CD8  6EF6               	movwf	tblptrl,c
  1545  016CDA  0E81               	movlw	high __pidataBANK0
  1546  016CDC  6EF7               	movwf	tblptrh,c
  1547  016CDE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1548  016CE0  6EF8               	movwf	tblptru,c
  1549  016CE2  EE00  F0C7         	lfsr	0,__pdataBANK0
  1550  016CE6  EE20 F035          	lfsr	2,53
  1551  016CEA                     copy_data2:
  1552  016CEA  0009               	tblrd		*+
  1553  016CEC  006F FFD7 FFEE     	movff	tablat,postinc0
  1554  016CF2  50DD               	movf	postdec2,w,c
  1555  016CF4  50D9               	movf	fsr2l,w,c
  1556  016CF6  E1F9               	bnz	copy_data2
  1557                           
  1558                           ; Clear objects allocated to BANK7 (255 bytes)
  1559  016CF8  EE01  F300         	lfsr	0,__pbssBANK7
  1560  016CFC  EE20 F0FF          	lfsr	2,255
  1561  016D00                     clear_0:
  1562  016D00  6AEE               	clrf	postinc0,c
  1563  016D02  50DD               	movf	postdec2,w,c
  1564  016D04  50D9               	movf	fsr2l,w,c
  1565  016D06  E1FC               	bnz	clear_0
  1566  016D08  50DA               	movf	fsr2h,w,c
  1567  016D0A  E1FA               	bnz	clear_0
  1568                           
  1569                           ; Clear objects allocated to BANK6 (255 bytes)
  1570  016D0C  EE01  F200         	lfsr	0,__pbssBANK6
  1571  016D10  EE20 F0FF          	lfsr	2,255
  1572  016D14                     clear_1:
  1573  016D14  6AEE               	clrf	postinc0,c
  1574  016D16  50DD               	movf	postdec2,w,c
  1575  016D18  50D9               	movf	fsr2l,w,c
  1576  016D1A  E1FC               	bnz	clear_1
  1577  016D1C  50DA               	movf	fsr2h,w,c
  1578  016D1E  E1FA               	bnz	clear_1
  1579                           
  1580                           ; Clear objects allocated to BANK5 (218 bytes)
  1581  016D20  EE01  F100         	lfsr	0,__pbssBANK5
  1582  016D24  0EDA               	movlw	218
  1583  016D26                     clear_2:
  1584  016D26  6AEE               	clrf	postinc0,c
  1585  016D28  06E8               	decf	wreg,f,c
  1586  016D2A  E1FD               	bnz	clear_2
  1587                           
  1588                           ; Clear objects allocated to BANK4 (67 bytes)
  1589  016D2C  EE01  F000         	lfsr	0,__pbssBANK4
  1590  016D30  0E43               	movlw	67
  1591  016D32                     clear_3:
  1592  016D32  6AEE               	clrf	postinc0,c
  1593  016D34  06E8               	decf	wreg,f,c
  1594  016D36  E1FD               	bnz	clear_3
  1595                           
  1596                           ; Clear objects allocated to BANK3 (211 bytes)
  1597  016D38  EE00  F300         	lfsr	0,__pbssBANK3
  1598  016D3C  0ED3               	movlw	211
  1599  016D3E                     clear_4:
  1600  016D3E  6AEE               	clrf	postinc0,c
  1601  016D40  06E8               	decf	wreg,f,c
  1602  016D42  E1FD               	bnz	clear_4
  1603                           
  1604                           ; Clear objects allocated to BANK2 (64 bytes)
  1605  016D44  EE00  F2BB         	lfsr	0,__pbssBANK2
  1606  016D48  0E40               	movlw	64
  1607  016D4A                     clear_5:
  1608  016D4A  6AEE               	clrf	postinc0,c
  1609  016D4C  06E8               	decf	wreg,f,c
  1610  016D4E  E1FD               	bnz	clear_5
  1611                           
  1612                           ; Clear objects allocated to BANK1 (208 bytes)
  1613  016D50  EE00  F100         	lfsr	0,__pbssBANK1
  1614  016D54  0ED0               	movlw	208
  1615  016D56                     clear_6:
  1616  016D56  6AEE               	clrf	postinc0,c
  1617  016D58  06E8               	decf	wreg,f,c
  1618  016D5A  E1FD               	bnz	clear_6
  1619                           
  1620                           ; Clear objects allocated to BANK0 (103 bytes)
  1621  016D5C  EE00  F060         	lfsr	0,__pbssBANK0
  1622  016D60  0E67               	movlw	103
  1623  016D62                     clear_7:
  1624  016D62  6AEE               	clrf	postinc0,c
  1625  016D64  06E8               	decf	wreg,f,c
  1626  016D66  E1FD               	bnz	clear_7
  1627                           
  1628                           ; Clear objects allocated to COMRAM (49 bytes)
  1629  016D68  EE00  F001         	lfsr	0,__pbssCOMRAM
  1630  016D6C  0E31               	movlw	49
  1631  016D6E                     clear_8:
  1632  016D6E  6AEE               	clrf	postinc0,c
  1633  016D70  06E8               	decf	wreg,f,c
  1634  016D72  E1FD               	bnz	clear_8
  1635                           
  1636                           ;
  1637                           ; Setup IVTBASE
  1638                           ;
  1639  016D74  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1640  016D76  6ED5               	movwf	213,c
  1641  016D78  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1642  016D7A  6ED6               	movwf	214,c
  1643  016D7C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1644  016D7E  6ED7               	movwf	215,c
  1645  016D80                     end_of_initialization:
  1646                           	opt callstack 0
  1647  016D80                     __end_of__initialization:
  1648                           	opt callstack 0
  1649  016D80  0100               	movlb	0
  1650  016D82  EF71  F099         	goto	_main	;jump to C main() function
  1651                           
  1652                           	psect	bssCOMRAM
  1653  000001                     __pbssCOMRAM:
  1654                           	opt callstack 0
  1655  000001                     _ADCC_ADTI_InterruptHandler:
  1656                           	opt callstack 0
  1657  000001                     	ds	3
  1658  000004                     _ADCC_ADI_InterruptHandler:
  1659                           	opt callstack 0
  1660  000004                     	ds	3
  1661  000007                     _UART1_TxInterruptHandler:
  1662                           	opt callstack 0
  1663  000007                     	ds	3
  1664  00000A                     _UART1_RxInterruptHandler:
  1665                           	opt callstack 0
  1666  00000A                     	ds	3
  1667  00000D                     _UART2_TxInterruptHandler:
  1668                           	opt callstack 0
  1669  00000D                     	ds	3
  1670  000010                     _UART2_RxInterruptHandler:
  1671                           	opt callstack 0
  1672  000010                     	ds	3
  1673  000013                     _INT1_InterruptHandler:
  1674                           	opt callstack 0
  1675  000013                     	ds	3
  1676  000016                     _INT0_InterruptHandler:
  1677                           	opt callstack 0
  1678  000016                     	ds	3
  1679  000019                     _nout:
  1680                           	opt callstack 0
  1681  000019                     	ds	2
  1682  00001B                     _width:
  1683                           	opt callstack 0
  1684  00001B                     	ds	2
  1685  00001D                     _prec:
  1686                           	opt callstack 0
  1687  00001D                     	ds	2
  1688  00001F                     _flags:
  1689                           	opt callstack 0
  1690  00001F                     	ds	2
  1691  000021                     TMR5_ISR@CountCallBack:
  1692                           	opt callstack 0
  1693  000021                     	ds	2
  1694  000023                     _timer5ReloadVal:
  1695                           	opt callstack 0
  1696  000023                     	ds	2
  1697  000025                     _mode_sw:
  1698                           	opt callstack 0
  1699  000025                     	ds	1
  1700  000026                     _uart2RxCount:
  1701                           	opt callstack 0
  1702  000026                     	ds	1
  1703  000027                     _uart2RxTail:
  1704                           	opt callstack 0
  1705  000027                     	ds	1
  1706  000028                     _uart2RxHead:
  1707                           	opt callstack 0
  1708  000028                     	ds	1
  1709  000029                     _uart2TxBufferRemaining:
  1710                           	opt callstack 0
  1711  000029                     	ds	1
  1712  00002A                     _uart2TxTail:
  1713                           	opt callstack 0
  1714  00002A                     	ds	1
  1715  00002B                     _uart2TxHead:
  1716                           	opt callstack 0
  1717  00002B                     	ds	1
  1718  00002C                     _uart1RxCount:
  1719                           	opt callstack 0
  1720  00002C                     	ds	1
  1721  00002D                     _uart1RxTail:
  1722                           	opt callstack 0
  1723  00002D                     	ds	1
  1724  00002E                     _uart1RxHead:
  1725                           	opt callstack 0
  1726  00002E                     	ds	1
  1727  00002F                     _uart1TxBufferRemaining:
  1728                           	opt callstack 0
  1729  00002F                     	ds	1
  1730  000030                     _uart1TxTail:
  1731                           	opt callstack 0
  1732  000030                     	ds	1
  1733  000031                     _uart1TxHead:
  1734                           	opt callstack 0
  1735  000031                     	ds	1
  1736                           
  1737                           	psect	bssBANK0
  1738  000060                     __pbssBANK0:
  1739                           	opt callstack 0
  1740  000060                     _S:
  1741                           	opt callstack 0
  1742  000060                     	ds	41
  1743  000089                     _tickCount:
  1744                           	opt callstack 0
  1745  000089                     	ds	24
  1746  0000A1                     _spi_link:
  1747                           	opt callstack 0
  1748  0000A1                     	ds	12
  1749  0000AD                     floorf@F524:
  1750                           	opt callstack 0
  1751  0000AD                     	ds	4
  1752  0000B1                     ___fpclassifyf@F463:
  1753                           	opt callstack 0
  1754  0000B1                     	ds	4
  1755  0000B5                     _utctime:
  1756                           	opt callstack 0
  1757  0000B5                     	ds	4
  1758  0000B9                     wdtdelay@dcount:
  1759                           	opt callstack 0
  1760  0000B9                     	ds	4
  1761  0000BD                     _P:
  1762                           	opt callstack 0
  1763  0000BD                     	ds	4
  1764  0000C1                     _TMR5_InterruptHandler:
  1765                           	opt callstack 0
  1766  0000C1                     	ds	3
  1767  0000C4                     _TMR6_InterruptHandler:
  1768                           	opt callstack 0
  1769  0000C4                     	ds	3
  1770                           
  1771                           	psect	dataBANK0
  1772  0000C7                     __pdataBANK0:
  1773                           	opt callstack 0
  1774  0000C7                     _R:
  1775                           	opt callstack 0
  1776  0000C7                     	ds	40
  1777  0000EF                     stoa@F1166:
  1778                           	opt callstack 0
  1779  0000EF                     	ds	7
  1780  0000F6                     _H:
  1781                           	opt callstack 0
  1782  0000F6                     	ds	6
  1783                           
  1784                           	psect	bssBANK1
  1785  000100                     __pbssBANK1:
  1786                           	opt callstack 0
  1787  000100                     _C:
  1788                           	opt callstack 0
  1789  000100                     	ds	120
  1790  000178                     _dbuf:
  1791                           	opt callstack 0
  1792  000178                     	ds	80
  1793  0001C8                     _seed:
  1794                           	opt callstack 0
  1795  0001C8                     	ds	8
  1796                           
  1797                           	psect	dataBANK1
  1798  0001D0                     __pdataBANK1:
  1799                           	opt callstack 0
  1800  0001D0                     _port_data:
  1801                           	opt callstack 0
  1802  0001D0                     	ds	16
  1803                           
  1804                           	psect	bssBANK2
  1805  0002BB                     __pbssBANK2:
  1806                           	opt callstack 0
  1807  0002BB                     _uart1TxBuffer:
  1808                           	opt callstack 0
  1809  0002BB                     	ds	64
  1810                           
  1811                           	psect	dataBANK2
  1812  000200                     __pdataBANK2:
  1813                           	opt callstack 0
  1814  000200                     _V:
  1815                           	opt callstack 0
  1816  000200                     	ds	187
  1817                           
  1818                           	psect	bssBANK3
  1819  000300                     __pbssBANK3:
  1820                           	opt callstack 0
  1821  000300                     lp_filter@smooth:
  1822                           	opt callstack 0
  1823  000300                     	ds	80
  1824  000350                     _uart2TxBuffer:
  1825                           	opt callstack 0
  1826  000350                     	ds	64
  1827  000390                     _ring_buf1:
  1828                           	opt callstack 0
  1829  000390                     	ds	67
  1830                           
  1831                           	psect	bssBANK4
  1832  000400                     __pbssBANK4:
  1833                           	opt callstack 0
  1834  000400                     _ring_buf2:
  1835                           	opt callstack 0
  1836  000400                     	ds	67
  1837                           
  1838                           	psect	bssBANK5
  1839  000500                     __pbssBANK5:
  1840                           	opt callstack 0
  1841  000500                     _D:
  1842                           	opt callstack 0
  1843  000500                     	ds	218
  1844                           
  1845                           	psect	bssBANK6
  1846  000600                     __pbssBANK6:
  1847                           	opt callstack 0
  1848  000600                     _uart1RxBuffer:
  1849                           	opt callstack 0
  1850  000600                     	ds	255
  1851                           
  1852                           	psect	bssBANK7
  1853  000700                     __pbssBANK7:
  1854                           	opt callstack 0
  1855  000700                     _uart2RxBuffer:
  1856                           	opt callstack 0
  1857  000700                     	ds	255
  1858                           
  1859                           	psect	cstackBANK1
  1860  0001E0                     __pcstackBANK1:
  1861                           	opt callstack 0
  1862  0001E0                     ??_TMR5_ISR:
  1863                           
  1864                           ; 1 bytes @ 0x0
  1865  0001E0                     	ds	4
  1866                           
  1867                           	psect	cstackBANK0
  1868  0000FC                     __pcstackBANK0:
  1869                           	opt callstack 0
  1870  0000FC                     ??_INT1_ISR:
  1871                           
  1872                           ; 1 bytes @ 0x0
  1873  0000FC                     	ds	4
  1874                           
  1875                           	psect	cstackCOMRAM
  1876  000052                     __pcstackCOMRAM:
  1877                           	opt callstack 0
  1878  000052                     ??_ADCC_ThresholdISR:
  1879  000052                     
  1880                           ; 1 bytes @ 0x0
  1881  000052                     	ds	5
  1882  000057                     ??_TMR6_ISR:
  1883                           
  1884                           ; 1 bytes @ 0x5
  1885  000057                     	ds	1
  1886  000058                     
  1887                           ; 1 bytes @ 0x6
  1888 ;;
  1889 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1890 ;;
  1891 ;; *************** function _main *****************
  1892 ;; Defined at:
  1893 ;;		line 165 in file "main.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  mode            1  [STACK] enum E17005
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1  [STACK] void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 1/1
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels required when called:   19
  1913 ;; This function calls:
  1914 ;;		_SYSTEM_Initialize
  1915 ;;		_StartTimer
  1916 ;;		_TimerDone
  1917 ;;		_WaitMs
  1918 ;;		_calc_model_data
  1919 ;;		_check_adc_scan
  1920 ;;		_check_help
  1921 ;;		_clear_adc_scan
  1922 ;;		_clear_hid_pflags
  1923 ;;		_convert_adc_data
  1924 ;;		_eaDogM_WriteCommand
  1925 ;;		_get_vterm_ptr
  1926 ;;		_hid_display
  1927 ;;		_init_display
  1928 ;;		_mode_lamp_dim
  1929 ;;		_set_display_info
  1930 ;;		_set_vterm
  1931 ;;		_sprintf
  1932 ;;		_srand
  1933 ;;		_start_adc_scan
  1934 ;;		_start_switch_handler
  1935 ;;		_update_lcd
  1936 ;; This function is called by:
  1937 ;;		Startup code after reset
  1938 ;; This function uses a reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text0
  1942  0132E2                     __ptext0:
  1943                           	opt callstack 0
  1944  0132E2                     _main:
  1945                           	opt callstack 0
  1946                           
  1947                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1948  0132E2  52E6               	movf	postinc1,f,c
  1949                           
  1950                           ;main.c: 167:  UI_STATES mode;;main.c: 172:  SYSTEM_Initialize();
  1951                           
  1952                           ;incstack = 0
  1953  0132E4  EC72  F0BF         	call	_SYSTEM_Initialize	;wreg free
  1954                           
  1955                           ; BSR set to: 60
  1956                           ;main.c: 175:  (INTCON0bits.GIEH = 1);
  1957  0132E8  8ED2               	bsf	210,7,c	;volatile
  1958                           
  1959                           ; BSR set to: 60
  1960                           ;main.c: 178:  (INTCON0bits.GIEL = 1);
  1961  0132EA  8CD2               	bsf	210,6,c	;volatile
  1962                           
  1963                           ; BSR set to: 60
  1964                           ;main.c: 180:  V.ui_state = UI_STATE_INIT;
  1965  0132EC  0102               	movlb	2	; () banked
  1966  0132EE  6B00               	clrf	_V& (0+255),b	;volatile
  1967                           
  1968                           ; BSR set to: 2
  1969                           ;main.c: 185:  WaitMs(300);
  1970  0132F0  0E2C               	movlw	44
  1971  0132F2  6EE6               	movwf	postinc1,c
  1972  0132F4  0E01               	movlw	1
  1973  0132F6  6EE6               	movwf	postinc1,c
  1974  0132F8  EC97  F0C0         	call	_WaitMs	;wreg free
  1975                           
  1976                           ;main.c: 186:  if (PORTBbits.RB0) {
  1977  0132FC  A0CB               	btfss	203,0,c	;volatile
  1978  0132FE  D004               	goto	l10486
  1979                           
  1980                           ;main.c: 187:   mode = UI_STATE_HOST;
  1981                           ;stkvar	_mode @ sp[(-1)+0]
  1982  013300  0EFF               	movlw	-1
  1983  013302  6AE3               	clrf	plusw1,c
  1984  013304  2AE3               	incf	plusw1,f,c
  1985                           
  1986                           ;main.c: 188:  } else {
  1987  013306  D004               	goto	l10488
  1988  013308                     l10486:
  1989                           
  1990                           ;main.c: 189:   mode = UI_STATE_LOG;
  1991                           ;stkvar	_mode @ sp[(-1)+0]
  1992  013308  0EFF               	movlw	-1
  1993  01330A  6AE3               	clrf	plusw1,c
  1994  01330C  80E3               	bsf	plusw1,0,c
  1995  01330E  82E3               	bsf	plusw1,1,c	;indir
  1996  013310                     l10488:
  1997                           
  1998                           ;main.c: 192:  if (mode == UI_STATE_HOST) {
  1999                           ;stkvar	_mode @ sp[(-1)+0]
  2000  013310  0EFF               	movlw	-1
  2001  013312  04E3               	decf	plusw1,w,c
  2002  013314  A4D8               	btfss	status,2,c
  2003  013316  D007               	goto	l1250
  2004                           
  2005                           ;main.c: 193:   do { LATDbits.LATD0 = 1; } while(0);
  2006  013318  80BD               	bsf	189,0,c	;volatile
  2007                           
  2008                           ;main.c: 194:   V.mode_pwm = 70;
  2009  01331A  0E00               	movlw	0
  2010  01331C  0102               	movlb	2	; () banked
  2011  01331E  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2012  013320  0E46               	movlw	70
  2013  013322  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2014                           
  2015                           ;main.c: 195:  } else {
  2016  013324  D004               	goto	l10492
  2017  013326                     l1250:
  2018  013326  90BD               	bcf	189,0,c	;volatile
  2019                           
  2020                           ;main.c: 197:   V.mode_pwm = 0;
  2021  013328  0102               	movlb	2	; () banked
  2022  01332A  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2023  01332C  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2024  01332E                     l10492:
  2025                           
  2026                           ; BSR set to: 2
  2027                           ;main.c: 199:  mode_lamp_dim(V.mode_pwm);
  2028  01332E  0060  FA57  FFE6   	movff	_V+149,postinc1
  2029  013334  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2030  01333A  EC49  F0C4         	call	_mode_lamp_dim	;wreg free
  2031  01333E  D0D0               	goto	l10536
  2032  013340                     l10494:
  2033                           
  2034                           ; BSR set to: 2
  2035                           ;main.c: 210:    init_display();
  2036  013340  ECC3  F0B6         	call	_init_display	;wreg free
  2037                           
  2038                           ; BSR set to: 61
  2039                           ;main.c: 211:    eaDogM_WriteCommand(0b00001100);
  2040  013344  0E0C               	movlw	12
  2041  013346  6EE6               	movwf	postinc1,c
  2042  013348  ECA5  F0C4         	call	_eaDogM_WriteCommand	;wreg free
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;main.c: 213:    V.ui_state = mode;
  2046                           ;stkvar	_mode @ sp[(-1)+0]
  2047  01334C  0EFF               	movlw	-1
  2048  01334E  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;main.c: 214:    srand(1957);
  2052  013354  0EA5               	movlw	165
  2053  013356  6EE6               	movwf	postinc1,c
  2054  013358  0E07               	movlw	7
  2055  01335A  6EE6               	movwf	postinc1,c
  2056  01335C  ECE8  F0C0         	call	_srand	;wreg free
  2057                           
  2058                           ; BSR set to: 1
  2059                           ;main.c: 215:    set_vterm(0);
  2060  013360  0E00               	movlw	0
  2061  013362  6EE6               	movwf	postinc1,c
  2062  013364  EC20  F0C4         	call	_set_vterm	;wreg free
  2063                           
  2064                           ; BSR set to: 5
  2065                           ;main.c: 216:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2066  013368  0E80               	movlw	low STR_1
  2067  01336A  6EE6               	movwf	postinc1,c
  2068  01336C  0EFF               	movlw	high STR_1
  2069  01336E  6EE6               	movwf	postinc1,c
  2070  013370  0E00               	movlw	0
  2071  013372  6EE6               	movwf	postinc1,c
  2072  013374  0E00               	movlw	0
  2073  013376  6EE6               	movwf	postinc1,c
  2074  013378  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2075  01337C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2076  013382  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2077  013388  0E04               	movlw	4
  2078  01338A  6EE6               	movwf	postinc1,c
  2079  01338C  ECC4  F0B5         	call	_sprintf	;wreg free
  2080                           
  2081                           ;main.c: 217:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.992");
  2082  013390  0EDF               	movlw	low STR_3
  2083  013392  6EE6               	movwf	postinc1,c
  2084  013394  0EFF               	movlw	high STR_3
  2085  013396  6EE6               	movwf	postinc1,c
  2086  013398  0EB1               	movlw	low STR_2
  2087  01339A  6EE6               	movwf	postinc1,c
  2088  01339C  0EFF               	movlw	high STR_2
  2089  01339E  6EE6               	movwf	postinc1,c
  2090  0133A0  0E00               	movlw	0
  2091  0133A2  6EE6               	movwf	postinc1,c
  2092  0133A4  0E01               	movlw	1
  2093  0133A6  6EE6               	movwf	postinc1,c
  2094  0133A8  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2095  0133AC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2096  0133B2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2097  0133B8  0E06               	movlw	6
  2098  0133BA  6EE6               	movwf	postinc1,c
  2099  0133BC  ECC4  F0B5         	call	_sprintf	;wreg free
  2100                           
  2101                           ;main.c: 218:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2102  0133C0  0E6F               	movlw	low STR_4
  2103  0133C2  6EE6               	movwf	postinc1,c
  2104  0133C4  0EFF               	movlw	high STR_4
  2105  0133C6  6EE6               	movwf	postinc1,c
  2106  0133C8  0E00               	movlw	0
  2107  0133CA  6EE6               	movwf	postinc1,c
  2108  0133CC  0E02               	movlw	2
  2109  0133CE  6EE6               	movwf	postinc1,c
  2110  0133D0  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2111  0133D4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2112  0133DA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2113  0133E0  0E04               	movlw	4
  2114  0133E2  6EE6               	movwf	postinc1,c
  2115  0133E4  ECC4  F0B5         	call	_sprintf	;wreg free
  2116                           
  2117                           ;main.c: 219:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2118  0133E8  0E91               	movlw	low STR_5
  2119  0133EA  6EE6               	movwf	postinc1,c
  2120  0133EC  0EFF               	movlw	high STR_5
  2121  0133EE  6EE6               	movwf	postinc1,c
  2122  0133F0  0E02               	movlw	2
  2123  0133F2  6EE6               	movwf	postinc1,c
  2124  0133F4  0E00               	movlw	0
  2125  0133F6  6EE6               	movwf	postinc1,c
  2126  0133F8  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2127  0133FC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2128  013402  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2129  013408  0E04               	movlw	4
  2130  01340A  6EE6               	movwf	postinc1,c
  2131  01340C  ECC4  F0B5         	call	_sprintf	;wreg free
  2132                           
  2133                           ;main.c: 220:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.992");
  2134  013410  0EDF               	movlw	low STR_3
  2135  013412  6EE6               	movwf	postinc1,c
  2136  013414  0EFF               	movlw	high STR_3
  2137  013416  6EE6               	movwf	postinc1,c
  2138  013418  0EB1               	movlw	low STR_2
  2139  01341A  6EE6               	movwf	postinc1,c
  2140  01341C  0EFF               	movlw	high STR_2
  2141  01341E  6EE6               	movwf	postinc1,c
  2142  013420  0E02               	movlw	2
  2143  013422  6EE6               	movwf	postinc1,c
  2144  013424  0E01               	movlw	1
  2145  013426  6EE6               	movwf	postinc1,c
  2146  013428  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2147  01342C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2148  013432  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2149  013438  0E06               	movlw	6
  2150  01343A  6EE6               	movwf	postinc1,c
  2151  01343C  ECC4  F0B5         	call	_sprintf	;wreg free
  2152                           
  2153                           ;main.c: 221:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2154  013440  0E5E               	movlw	low STR_8
  2155  013442  6EE6               	movwf	postinc1,c
  2156  013444  0EFF               	movlw	high STR_8
  2157  013446  6EE6               	movwf	postinc1,c
  2158  013448  0E02               	movlw	2
  2159  01344A  6EE6               	movwf	postinc1,c
  2160  01344C  0E02               	movlw	2
  2161  01344E  6EE6               	movwf	postinc1,c
  2162  013450  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2163  013454  0060  F0CB  FFE6   	movff	btemp,postinc1
  2164  01345A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2165  013460  0E04               	movlw	4
  2166  013462  6EE6               	movwf	postinc1,c
  2167  013464  ECC4  F0B5         	call	_sprintf	;wreg free
  2168                           
  2169                           ;main.c: 222:    update_lcd(0);
  2170  013468  0E00               	movlw	0
  2171  01346A  6EE6               	movwf	postinc1,c
  2172  01346C  EC3D  F0B5         	call	_update_lcd	;wreg free
  2173                           
  2174                           ;main.c: 223:    WaitMs(3000);
  2175  013470  0EB8               	movlw	184
  2176  013472  6EE6               	movwf	postinc1,c
  2177  013474  0E0B               	movlw	11
  2178  013476  6EE6               	movwf	postinc1,c
  2179  013478  EC97  F0C0         	call	_WaitMs	;wreg free
  2180                           
  2181                           ;main.c: 224:    StartTimer(TMR_DISPLAY, 250);
  2182  01347C  0EFA               	movlw	250
  2183  01347E  6EE6               	movwf	postinc1,c
  2184  013480  0E00               	movlw	0
  2185  013482  6EE6               	movwf	postinc1,c
  2186  013484  0E0A               	movlw	10
  2187  013486  6EE6               	movwf	postinc1,c
  2188  013488  EC5D  F0C0         	call	_StartTimer	;wreg free
  2189                           
  2190                           ;main.c: 225:    StartTimer(TMR_ADC, 200);
  2191  01348C  0EC8               	movlw	200
  2192  01348E  6EE6               	movwf	postinc1,c
  2193  013490  0E00               	movlw	0
  2194  013492  6EE6               	movwf	postinc1,c
  2195  013494  0E01               	movlw	1
  2196  013496  6EE6               	movwf	postinc1,c
  2197  013498  EC5D  F0C0         	call	_StartTimer	;wreg free
  2198                           
  2199                           ;main.c: 226:    StartTimer(TMR_INFO, 3000);
  2200  01349C  0EB8               	movlw	184
  2201  01349E  6EE6               	movwf	postinc1,c
  2202  0134A0  0E0B               	movlw	11
  2203  0134A2  6EE6               	movwf	postinc1,c
  2204  0134A4  0E07               	movlw	7
  2205  0134A6  6EE6               	movwf	postinc1,c
  2206  0134A8  EC5D  F0C0         	call	_StartTimer	;wreg free
  2207                           
  2208                           ;main.c: 227:    StartTimer(TMR_FLIPPER, 1500);
  2209  0134AC  0EDC               	movlw	220
  2210  0134AE  6EE6               	movwf	postinc1,c
  2211  0134B0  0E05               	movlw	5
  2212  0134B2  6EE6               	movwf	postinc1,c
  2213  0134B4  0E0B               	movlw	11
  2214  0134B6  6EE6               	movwf	postinc1,c
  2215  0134B8  EC5D  F0C0         	call	_StartTimer	;wreg free
  2216                           
  2217                           ;main.c: 228:    StartTimer(TMR_HELPDIS, 3000);
  2218  0134BC  0EB8               	movlw	184
  2219  0134BE  6EE6               	movwf	postinc1,c
  2220  0134C0  0E0B               	movlw	11
  2221  0134C2  6EE6               	movwf	postinc1,c
  2222  0134C4  0E09               	movlw	9
  2223  0134C6  6EE6               	movwf	postinc1,c
  2224  0134C8  EC5D  F0C0         	call	_StartTimer	;wreg free
  2225                           
  2226                           ;main.c: 230:    start_adc_scan();
  2227  0134CC  EC39  F0BD         	call	_start_adc_scan	;wreg free
  2228                           
  2229                           ;main.c: 231:    start_switch_handler();
  2230  0134D0  ECB7  F0C3         	call	_start_switch_handler	;wreg free
  2231                           
  2232                           ;main.c: 233:    break;
  2233  0134D4  D01C               	goto	l10538
  2234  0134D6                     l1258:
  2235                           
  2236                           ; BSR set to: 2
  2237                           ;main.c: 239:    P.SYSTEM_STABLE = 1;
  2238  0134D6  0100               	movlb	0	; () banked
  2239  0134D8  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2240                           
  2241                           ;main.c: 240:    break;
  2242  0134DA  D019               	goto	l10538
  2243  0134DC                     l1260:
  2244                           
  2245                           ; BSR set to: 2
  2246                           ;main.c: 243:    V.ui_state = UI_STATE_INIT;
  2247  0134DC  6B00               	clrf	_V& (0+255),b	;volatile
  2248                           
  2249                           ;main.c: 244:    break;
  2250  0134DE  D017               	goto	l10538
  2251  0134E0                     l10536:
  2252  0134E0  0102               	movlb	2	; () banked
  2253  0134E2  5100               	movf	_V& (0+255),w,b	;volatile
  2254  0134E4  6E3C               	movwf	(btemp+10)^0,c
  2255  0134E6  6A3D               	clrf	(btemp+11)^0,c
  2256                           
  2257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2258                           ; Switch size 1, requested type "simple"
  2259                           ; Number of cases is 1, Range of values is 0 to 0
  2260                           ; switch strategies available:
  2261                           ; Name         Instructions Cycles
  2262                           ; simple_byte            4     3 (average)
  2263                           ;	Chosen strategy is simple_byte
  2264  0134E8  503D               	movf	(btemp+11)^0,w,c
  2265  0134EA  0A00               	xorlw	0	; case 0
  2266  0134EC  A4D8               	btfss	status,2,c
  2267  0134EE  D7F6               	goto	l1260
  2268                           
  2269                           ; BSR set to: 2
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 5, Range of values is 0 to 5
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte           16     9 (average)
  2275                           ;	Chosen strategy is simple_byte
  2276  0134F0  503C               	movf	(btemp+10)^0,w,c
  2277  0134F2  0A00               	xorlw	0	; case 0
  2278  0134F4  B4D8               	btfsc	status,2,c
  2279  0134F6  D724               	goto	l10494
  2280  0134F8  0A01               	xorlw	1	; case 1
  2281  0134FA  B4D8               	btfsc	status,2,c
  2282  0134FC  D008               	goto	l10538
  2283  0134FE  0A02               	xorlw	2	; case 3
  2284  013500  B4D8               	btfsc	status,2,c
  2285  013502  D005               	goto	l10538
  2286  013504  0A07               	xorlw	7	; case 4
  2287  013506  B4D8               	btfsc	status,2,c
  2288  013508  D7E6               	goto	l1258
  2289  01350A  0A01               	xorlw	1	; case 5
  2290  01350C  D7E7               	goto	l1260
  2291  01350E                     l10538:
  2292                           
  2293                           ;main.c: 247:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2294  01350E  0E01               	movlw	1
  2295  013510  6EE6               	movwf	postinc1,c
  2296  013512  EC5F  F0C3         	call	_TimerDone	;wreg free
  2297  013516  5032               	movf	btemp^0,w,c
  2298  013518  B4D8               	btfsc	status,2,c
  2299  01351A  D013               	goto	l10550
  2300  01351C  ECE5  F0C4         	call	_check_adc_scan	;wreg free
  2301  013520  5032               	movf	btemp^0,w,c
  2302  013522  B4D8               	btfsc	status,2,c
  2303  013524  D00E               	goto	l10550
  2304                           
  2305                           ;main.c: 251:    convert_adc_data();
  2306  013526  EC2A  F0BC         	call	_convert_adc_data	;wreg free
  2307                           
  2308                           ;main.c: 255:    clear_adc_scan();
  2309  01352A  ECED  F0C4         	call	_clear_adc_scan	;wreg free
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;main.c: 256:    start_adc_scan();
  2313  01352E  EC39  F0BD         	call	_start_adc_scan	;wreg free
  2314                           
  2315                           ;main.c: 257:    StartTimer(TMR_ADC, 200);
  2316  013532  0EC8               	movlw	200
  2317  013534  6EE6               	movwf	postinc1,c
  2318  013536  0E00               	movlw	0
  2319  013538  6EE6               	movwf	postinc1,c
  2320  01353A  0E01               	movlw	1
  2321  01353C  6EE6               	movwf	postinc1,c
  2322  01353E  EC5D  F0C0         	call	_StartTimer	;wreg free
  2323  013542                     l10550:
  2324                           
  2325                           ;main.c: 264:   if (TimerDone(TMR_DISPLAY)) {
  2326                           
  2327                           ;main.c: 260:   if (V.ticks) {
  2328  013542  0E0A               	movlw	10
  2329  013544  6EE6               	movwf	postinc1,c
  2330  013546  EC5F  F0C3         	call	_TimerDone	;wreg free
  2331  01354A  5032               	movf	btemp^0,w,c
  2332  01354C  B4D8               	btfsc	status,2,c
  2333  01354E  D117               	goto	l10576
  2334                           
  2335                           ;main.c: 265:    if (TimerDone(TMR_HELPDIS)) {
  2336  013550  0E09               	movlw	9
  2337  013552  6EE6               	movwf	postinc1,c
  2338  013554  EC5F  F0C3         	call	_TimerDone	;wreg free
  2339  013558  5032               	movf	btemp^0,w,c
  2340  01355A  B4D8               	btfsc	status,2,c
  2341  01355C  D004               	goto	l10558
  2342                           
  2343                           ;main.c: 266:     set_display_info(DIS_STR);
  2344  01355E  0E00               	movlw	0
  2345  013560  6EE6               	movwf	postinc1,c
  2346  013562  ECE5  F0C3         	call	_set_display_info	;wreg free
  2347  013566                     l10558:
  2348                           
  2349                           ;main.c: 268:    calc_model_data();
  2350  013566  EC5A  F0A9         	call	_calc_model_data	;wreg free
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;main.c: 274:    hid_display(&H);
  2354  01356A  0EF6               	movlw	_H& (0+255)
  2355  01356C  6EE6               	movwf	postinc1,c
  2356  01356E  ECAF  F0B9         	call	_hid_display	;wreg free
  2357                           
  2358                           ;main.c: 275:    switch (H.hid_display) {
  2359  013572  D0E6               	goto	l10568
  2360  013574                     l10562:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;main.c: 277:     sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2364  013574  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2365  01357A  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2366  013580  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2367  013586  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2368  01358C  0EEC               	movlw	low STR_9
  2369  01358E  6EE6               	movwf	postinc1,c
  2370  013590  0EFE               	movlw	high STR_9
  2371  013592  6EE6               	movwf	postinc1,c
  2372  013594  0E00               	movlw	0
  2373  013596  6EE6               	movwf	postinc1,c
  2374  013598  0E00               	movlw	0
  2375  01359A  6EE6               	movwf	postinc1,c
  2376  01359C  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2377  0135A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2378  0135A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2379  0135AC  0E08               	movlw	8
  2380  0135AE  6EE6               	movwf	postinc1,c
  2381  0135B0  ECC4  F0B5         	call	_sprintf	;wreg free
  2382                           
  2383                           ;main.c: 278:     sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2384  0135B4  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2385  0135BA  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2386  0135C0  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2387  0135C6  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2388  0135CC  0E12               	movlw	low STR_10
  2389  0135CE  6EE6               	movwf	postinc1,c
  2390  0135D0  0EFF               	movlw	high STR_10
  2391  0135D2  6EE6               	movwf	postinc1,c
  2392  0135D4  0E00               	movlw	0
  2393  0135D6  6EE6               	movwf	postinc1,c
  2394  0135D8  0E01               	movlw	1
  2395  0135DA  6EE6               	movwf	postinc1,c
  2396  0135DC  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2397  0135E0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2398  0135E6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2399  0135EC  0E08               	movlw	8
  2400  0135EE  6EE6               	movwf	postinc1,c
  2401  0135F0  ECC4  F0B5         	call	_sprintf	;wreg free
  2402                           
  2403                           ;main.c: 279:     sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2404  0135F4  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2405  0135FA  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2406  013600  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2407  013606  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2408  01360C  0EFF               	movlw	low STR_11
  2409  01360E  6EE6               	movwf	postinc1,c
  2410  013610  0EFE               	movlw	high STR_11
  2411  013612  6EE6               	movwf	postinc1,c
  2412  013614  0E00               	movlw	0
  2413  013616  6EE6               	movwf	postinc1,c
  2414  013618  0E02               	movlw	2
  2415  01361A  6EE6               	movwf	postinc1,c
  2416  01361C  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2417  013620  0060  F0CB  FFE6   	movff	btemp,postinc1
  2418  013626  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2419  01362C  0E08               	movlw	8
  2420  01362E  6EE6               	movwf	postinc1,c
  2421  013630  ECC4  F0B5         	call	_sprintf	;wreg free
  2422                           
  2423                           ;main.c: 280:     break;
  2424  013634  D094               	goto	l10570
  2425  013636                     l10564:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;main.c: 282:     sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.cal
      +                          c[C_PV]);
  2429  013636  0060  F413  FFE6   	movff	_C+4,postinc1
  2430  01363C  0060  F417  FFE6   	movff	_C+5,postinc1
  2431  013642  0060  F41B  FFE6   	movff	_C+6,postinc1
  2432  013648  0060  F41F  FFE6   	movff	_C+7,postinc1
  2433  01364E  0060  F453  FFE6   	movff	_C+20,postinc1
  2434  013654  0060  F457  FFE6   	movff	_C+21,postinc1
  2435  01365A  0060  F45B  FFE6   	movff	_C+22,postinc1
  2436  013660  0060  F45F  FFE6   	movff	_C+23,postinc1
  2437  013666  0E4B               	movlw	low STR_12
  2438  013668  6EE6               	movwf	postinc1,c
  2439  01366A  0EFF               	movlw	high STR_12
  2440  01366C  6EE6               	movwf	postinc1,c
  2441  01366E  0E00               	movlw	0
  2442  013670  6EE6               	movwf	postinc1,c
  2443  013672  0E00               	movlw	0
  2444  013674  6EE6               	movwf	postinc1,c
  2445  013676  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2446  01367A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2447  013680  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2448  013686  0E0C               	movlw	12
  2449  013688  6EE6               	movwf	postinc1,c
  2450  01368A  ECC4  F0B5         	call	_sprintf	;wreg free
  2451                           
  2452                           ;main.c: 283:     sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.ca
      +                          lc[C_BATT]);
  2453  01368E  0060  F403  FFE6   	movff	_C,postinc1
  2454  013694  0060  F407  FFE6   	movff	_C+1,postinc1
  2455  01369A  0060  F40B  FFE6   	movff	_C+2,postinc1
  2456  0136A0  0060  F40F  FFE6   	movff	_C+3,postinc1
  2457  0136A6  0060  F443  FFE6   	movff	_C+16,postinc1
  2458  0136AC  0060  F447  FFE6   	movff	_C+17,postinc1
  2459  0136B2  0060  F44B  FFE6   	movff	_C+18,postinc1
  2460  0136B8  0060  F44F  FFE6   	movff	_C+19,postinc1
  2461  0136BE  0E25               	movlw	low STR_13
  2462  0136C0  6EE6               	movwf	postinc1,c
  2463  0136C2  0EFF               	movlw	high STR_13
  2464  0136C4  6EE6               	movwf	postinc1,c
  2465  0136C6  0E00               	movlw	0
  2466  0136C8  6EE6               	movwf	postinc1,c
  2467  0136CA  0E01               	movlw	1
  2468  0136CC  6EE6               	movwf	postinc1,c
  2469  0136CE  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2470  0136D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2471  0136D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2472  0136DE  0E0C               	movlw	12
  2473  0136E0  6EE6               	movwf	postinc1,c
  2474  0136E2  ECC4  F0B5         	call	_sprintf	;wreg free
  2475                           
  2476                           ;main.c: 284:     sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_l
      +                          oad);
  2477  0136E6  0060  F503  FFE6   	movff	_C+64,postinc1
  2478  0136EC  0060  F507  FFE6   	movff	_C+65,postinc1
  2479  0136F2  0060  F50B  FFE6   	movff	_C+66,postinc1
  2480  0136F8  0060  F50F  FFE6   	movff	_C+67,postinc1
  2481  0136FE  0060  F423  FFE6   	movff	_C+8,postinc1
  2482  013704  0060  F427  FFE6   	movff	_C+9,postinc1
  2483  01370A  0060  F42B  FFE6   	movff	_C+10,postinc1
  2484  013710  0060  F42F  FFE6   	movff	_C+11,postinc1
  2485  013716  0E38               	movlw	low STR_14
  2486  013718  6EE6               	movwf	postinc1,c
  2487  01371A  0EFF               	movlw	high STR_14
  2488  01371C  6EE6               	movwf	postinc1,c
  2489  01371E  0E00               	movlw	0
  2490  013720  6EE6               	movwf	postinc1,c
  2491  013722  0E02               	movlw	2
  2492  013724  6EE6               	movwf	postinc1,c
  2493  013726  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  2494  01372A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2495  013730  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2496  013736  0E0C               	movlw	12
  2497  013738  6EE6               	movwf	postinc1,c
  2498  01373A  ECC4  F0B5         	call	_sprintf	;wreg free
  2499                           
  2500                           ;main.c: 285:     break;
  2501  01373E  D00F               	goto	l10570
  2502  013740                     l10568:
  2503  013740  0100               	movlb	0	; () banked
  2504  013742  51F6               	movf	_H& (0+255),w,b
  2505  013744  6E3C               	movwf	(btemp+10)^0,c
  2506  013746  6A3D               	clrf	(btemp+11)^0,c
  2507                           
  2508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2509                           ; Switch size 1, requested type "simple"
  2510                           ; Number of cases is 1, Range of values is 0 to 0
  2511                           ; switch strategies available:
  2512                           ; Name         Instructions Cycles
  2513                           ; simple_byte            4     3 (average)
  2514                           ;	Chosen strategy is simple_byte
  2515  013748  503D               	movf	(btemp+11)^0,w,c
  2516  01374A  0A00               	xorlw	0	; case 0
  2517  01374C  A4D8               	btfss	status,2,c
  2518  01374E  D007               	goto	l10570
  2519                           
  2520                           ; BSR set to: 0
  2521                           ; Switch size 1, requested type "simple"
  2522                           ; Number of cases is 2, Range of values is 0 to 1
  2523                           ; switch strategies available:
  2524                           ; Name         Instructions Cycles
  2525                           ; simple_byte            7     4 (average)
  2526                           ;	Chosen strategy is simple_byte
  2527  013750  503C               	movf	(btemp+10)^0,w,c
  2528  013752  0A00               	xorlw	0	; case 0
  2529  013754  B4D8               	btfsc	status,2,c
  2530  013756  D76F               	goto	l10564
  2531  013758  0A01               	xorlw	1	; case 1
  2532  01375A  B4D8               	btfsc	status,2,c
  2533  01375C  D70B               	goto	l10562
  2534  01375E                     l10570:
  2535                           
  2536                           ;main.c: 289:    clear_hid_pflags(&H);
  2537  01375E  0EF6               	movlw	_H& (0+255)
  2538  013760  6EE6               	movwf	postinc1,c
  2539  013762  EC4D  F0C3         	call	_clear_hid_pflags	;wreg free
  2540                           
  2541                           ;main.c: 291:    StartTimer(TMR_DISPLAY, 250);
  2542  013766  0EFA               	movlw	250
  2543  013768  6EE6               	movwf	postinc1,c
  2544  01376A  0E00               	movlw	0
  2545  01376C  6EE6               	movwf	postinc1,c
  2546  01376E  0E0A               	movlw	10
  2547  013770  6EE6               	movwf	postinc1,c
  2548  013772  EC5D  F0C0         	call	_StartTimer	;wreg free
  2549                           
  2550                           ;main.c: 292:    update_lcd(0);
  2551  013776  0E00               	movlw	0
  2552  013778  6EE6               	movwf	postinc1,c
  2553  01377A  EC3D  F0B5         	call	_update_lcd	;wreg free
  2554  01377E                     l10576:
  2555                           
  2556                           ;main.c: 298:   if (check_help(V.flipper)) {
  2557  01377E  0102               	movlb	2	; () banked
  2558  013780  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2559  013782  6EE6               	movwf	postinc1,c
  2560  013784  ECA4  F0AB         	call	_check_help	;wreg free
  2561                           
  2562                           ;main.c: 334:   if (V.set_sequ) {
  2563                           
  2564                           ;main.c: 329:   };
  2565  013788  0102               	movlb	2	; () banked
  2566  01378A  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2567  01378C  D6A9               	goto	l10536
  2568                           
  2569                           ; BSR set to: 2
  2570                           ;main.c: 335:    if (TimerDone(TMR_INFO)) {
  2571  01378E  0E07               	movlw	7
  2572  013790  6EE6               	movwf	postinc1,c
  2573  013792  EC5F  F0C3         	call	_TimerDone	;wreg free
  2574  013796  5032               	movf	btemp^0,w,c
  2575  013798  B4D8               	btfsc	status,2,c
  2576  01379A  D00B               	goto	l10586
  2577                           
  2578                           ;main.c: 336:     V.set_sequ = 0;
  2579  01379C  0102               	movlb	2	; () banked
  2580  01379E  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2581                           
  2582                           ; BSR set to: 2
  2583                           ;main.c: 337:     set_vterm(0);
  2584  0137A0  0E00               	movlw	0
  2585  0137A2  6EE6               	movwf	postinc1,c
  2586  0137A4  EC20  F0C4         	call	_set_vterm	;wreg free
  2587                           
  2588                           ; BSR set to: 5
  2589                           ;main.c: 338:     update_lcd(0);
  2590  0137A8  0E00               	movlw	0
  2591  0137AA  6EE6               	movwf	postinc1,c
  2592  0137AC  EC3D  F0B5         	call	_update_lcd	;wreg free
  2593                           
  2594                           ;main.c: 339:    } else {
  2595  0137B0  D697               	goto	l10536
  2596  0137B2                     l10586:
  2597                           
  2598                           ;main.c: 340:     set_vterm(2);
  2599  0137B2  0E02               	movlw	2
  2600  0137B4  6EE6               	movwf	postinc1,c
  2601  0137B6  EC20  F0C4         	call	_set_vterm	;wreg free
  2602                           
  2603                           ; BSR set to: 5
  2604                           ;main.c: 341:     update_lcd(2);
  2605  0137BA  0E02               	movlw	2
  2606  0137BC  6EE6               	movwf	postinc1,c
  2607  0137BE  EC3D  F0B5         	call	_update_lcd	;wreg free
  2608  0137C2  D68E               	goto	l10536
  2609  0137C4                     __end_of_main:
  2610                           	opt callstack 0
  2611                           
  2612 ;; *************** function _start_switch_handler *****************
  2613 ;; Defined at:
  2614 ;;		line 119 in file "dio.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1  [STACK] void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2623 ;; Tracked objects:
  2624 ;;		On entry : 1/4
  2625 ;;		On exit  : 3F/39
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    7
  2635 ;; This function calls:
  2636 ;;		_INT1_SetInterruptHandler
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text1
  2643  01876E                     __ptext1:
  2644                           	opt callstack 0
  2645  01876E                     _start_switch_handler:
  2646                           	opt callstack 23
  2647                           
  2648                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2649                           
  2650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2651                           ;incstack = 0
  2652  01876E  0139               	movlb	57	; () banked
  2653  018770  9195               	bcf	149,0,b	;volatile
  2654                           
  2655                           ; BSR set to: 57
  2656                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2657  018772  0EB4               	movlw	low _switch_handler
  2658  018774  6EE6               	movwf	postinc1,c
  2659  018776  0E64               	movlw	high _switch_handler
  2660  018778  6EE6               	movwf	postinc1,c
  2661  01877A  0E01               	movlw	low (_switch_handler shr (0+16))
  2662  01877C  6EE6               	movwf	postinc1,c
  2663  01877E  EC99  F0C2         	call	_INT1_SetInterruptHandler	;wreg free
  2664                           
  2665                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2666  018782  0E02               	movlw	2
  2667  018784  0100               	movlb	0	; () banked
  2668  018786  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2672  018788  0139               	movlb	57	; () banked
  2673  01878A  8195               	bsf	149,0,b	;volatile
  2674                           
  2675                           ; BSR set to: 57
  2676                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2677  01878C  0012               	return		;funcret
  2678  01878E                     __end_of_start_switch_handler:
  2679                           	opt callstack 0
  2680                           
  2681 ;; *************** function _start_adc_scan *****************
  2682 ;; Defined at:
  2683 ;;		line 33 in file "daq.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;		None
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1  [STACK] _Bool 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/5
  2694 ;;		On exit  : 1/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2701 ;;Total ram usage:        0 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    7
  2704 ;; This function calls:
  2705 ;;		_ADCC_DischargeSampleCapacitor
  2706 ;;		_ADCC_SetADIInterruptHandler
  2707 ;;		_ADCC_SetADTIInterruptHandler
  2708 ;;		_ADCC_StartConversion
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text2
  2715  017A72                     __ptext2:
  2716                           	opt callstack 0
  2717  017A72                     _start_adc_scan:
  2718                           	opt callstack 23
  2719                           
  2720                           ;daq.c: 35:  if (R.done)
  2721                           
  2722                           ; BSR set to: 57
  2723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2724                           ;incstack = 0
  2725  017A72  0100               	movlb	0	; () banked
  2726  017A74  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2727  017A76  A4D8               	btfss	status,2,c
  2728  017A78  0012               	return	
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;daq.c: 38:  R.scan_index = 0;
  2732  017A7A  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2736  017A7C  013A               	movlb	58	; () banked
  2737  017A7E  5140               	movf	64,w,b	;volatile
  2738  017A80  006E F940  F032    	movff	14928,btemp	;volatile
  2739  017A86  6A33               	clrf	(btemp+1)^0,c
  2740  017A88  0060  F0C8  F033   	movff	btemp,btemp+1
  2741  017A8E  6A32               	clrf	btemp^0,c
  2742  017A90  2632               	addwf	btemp^0,f,c
  2743  017A92  0E00               	movlw	0
  2744  017A94  2233               	addwfc	(btemp+1)^0,f,c
  2745  017A96  0E77               	movlw	119
  2746  017A98  1432               	andwf	btemp^0,w,c
  2747  017A9A  0100               	movlb	0	; () banked
  2748  017A9C  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2749  017A9E  0E3C               	movlw	60
  2750  017AA0  1433               	andwf	(btemp+1)^0,w,c
  2751  017AA2  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2755  017AA4  0EF8               	movlw	low _adc_int_handler
  2756  017AA6  6EE6               	movwf	postinc1,c
  2757  017AA8  0E89               	movlw	high _adc_int_handler
  2758  017AAA  6EE6               	movwf	postinc1,c
  2759  017AAC  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2760  017AAE  6EE6               	movwf	postinc1,c
  2761  017AB0  ECD5  F0C2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2762                           
  2763                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2764  017AB4  0ED6               	movlw	low _adc_int_t_handler
  2765  017AB6  6EE6               	movwf	postinc1,c
  2766  017AB8  0E77               	movlw	high _adc_int_t_handler
  2767  017ABA  6EE6               	movwf	postinc1,c
  2768  017ABC  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2769  017ABE  6EE6               	movwf	postinc1,c
  2770  017AC0  ECC1  F0C2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2771                           
  2772                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2773  017AC4  ECD9  F0C4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2774                           
  2775                           ; BSR set to: 62
  2776                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2777  017AC8  0100               	movlb	0	; () banked
  2778  017ACA  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2779  017ACC  0B0F               	andlw	15
  2780  017ACE  6EE6               	movwf	postinc1,c
  2781  017AD0  EC8C  F0C4         	call	_ADCC_StartConversion	;wreg free
  2782                           
  2783                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2784  017AD4  0012               	return		;funcret
  2785  017AD6                     __end_of_start_adc_scan:
  2786                           	opt callstack 0
  2787                           
  2788 ;; *************** function _ADCC_StartConversion *****************
  2789 ;; Defined at:
  2790 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  channel         1  [STACK] enum E16136
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1  [STACK] void 
  2797 ;; Registers used:
  2798 ;;		fsr1l, fsr1h
  2799 ;; Tracked objects:
  2800 ;;		On entry : 3F/0
  2801 ;;		On exit  : 3F/3E
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    6
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_start_adc_scan
  2815 ;;		_adc_int_t_handler
  2816 ;; This function uses a reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text3
  2820  018918                     __ptext3:
  2821                           	opt callstack 0
  2822  018918                     _ADCC_StartConversion:
  2823                           	opt callstack 6
  2824                           
  2825                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2826                           ;stkvar	_channel @ sp[(0)+-1]
  2827                           
  2828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2829                           ;incstack = 0
  2830  018918  0EFF               	movlw	-1
  2831  01891A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2832                           
  2833                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2834  018920  013E               	movlb	62	; () banked
  2835  018922  8FF8               	bsf	248,7,b	;volatile
  2836                           
  2837                           ; BSR set to: 62
  2838                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2839  018924  81F8               	bsf	248,0,b	;volatile
  2840                           
  2841                           ; BSR set to: 62
  2842                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2843  018926  52E5               	movf	postdec1,f,c
  2844  018928  0012               	return		;funcret
  2845  01892A                     __end_of_ADCC_StartConversion:
  2846                           	opt callstack 0
  2847                           
  2848 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2849 ;; Defined at:
  2850 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1  [STACK] void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 3F/3E
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    6
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_start_adc_scan
  2875 ;;		_adc_int_t_handler
  2876 ;; This function uses a reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text4
  2880  0189B2                     __ptext4:
  2881                           	opt callstack 0
  2882  0189B2                     _ADCC_DischargeSampleCapacitor:
  2883                           	opt callstack 6
  2884                           
  2885                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2886                           
  2887                           ; BSR set to: 62
  2888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2889                           ;incstack = 0
  2890  0189B2  0E3B               	movlw	59
  2891  0189B4  013E               	movlb	62	; () banked
  2892  0189B6  6FF1               	movwf	241,b	;volatile
  2893                           
  2894                           ; BSR set to: 62
  2895                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2896  0189B8  0012               	return		;funcret
  2897  0189BA                     __end_of_ADCC_DischargeSampleCapacitor:
  2898                           	opt callstack 0
  2899                           
  2900 ;; *************** function _srand *****************
  2901 ;; Defined at:
  2902 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  s               2  [STACK] unsigned int 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1  [STACK] void 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2911 ;; Tracked objects:
  2912 ;;		On entry : 3F/0
  2913 ;;		On exit  : 3F/1
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    6
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_main
  2927 ;; This function uses a reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text5
  2931  0181D0                     __ptext5:
  2932                           	opt callstack 0
  2933  0181D0                     _srand:
  2934                           	opt callstack 24
  2935                           
  2936                           ;stkvar	_s @ sp[(0)+-2]
  2937                           
  2938                           ; BSR set to: 62
  2939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2940                           ;incstack = 0
  2941  0181D0  0EFE               	movlw	-2
  2942  0181D2  50E3               	movf	plusw1,w,c
  2943  0181D4  0FFF               	addlw	255
  2944  0181D6  6E3C               	movwf	(btemp+10)^0,c
  2945  0181D8  0EFF               	movlw	-1
  2946  0181DA  006F FF8C  F03D    	movff	plusw1,btemp+11
  2947  0181E0  0EFF               	movlw	255
  2948  0181E2  223D               	addwfc	(btemp+11)^0,f,c
  2949  0181E4  0060  F0F0  F1C8   	movff	btemp+10,_seed
  2950  0181EA  0060  F0F4  F1C9   	movff	btemp+11,_seed+1
  2951  0181F0  0101               	movlb	1	; () banked
  2952  0181F2  6BCA               	clrf	(_seed+2)& (0+255),b
  2953  0181F4  6BCB               	clrf	(_seed+3)& (0+255),b
  2954  0181F6  6BCC               	clrf	(_seed+4)& (0+255),b
  2955  0181F8  6BCD               	clrf	(_seed+5)& (0+255),b
  2956  0181FA  6BCE               	clrf	(_seed+6)& (0+255),b
  2957  0181FC  6BCF               	clrf	(_seed+7)& (0+255),b
  2958                           
  2959                           ; BSR set to: 1
  2960                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2961  0181FE  52E5               	movf	postdec1,f,c
  2962  018200  52E5               	movf	postdec1,f,c
  2963  018202  0012               	return		;funcret
  2964  018204                     __end_of_srand:
  2965                           	opt callstack 0
  2966                           
  2967 ;; *************** function _init_display *****************
  2968 ;; Defined at:
  2969 ;;		line 37 in file "eadog.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1  [STACK] void 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/2
  2980 ;;		On exit  : 3F/3D
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    8
  2990 ;; This function calls:
  2991 ;;		_ringBufS_init
  2992 ;;		_send_lcd_cmd
  2993 ;;		_send_lcd_cmd_long
  2994 ;;		_wdtdelay
  2995 ;; This function is called by:
  2996 ;;		_main
  2997 ;; This function uses a reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text6
  3001  016D86                     __ptext6:
  3002                           	opt callstack 0
  3003  016D86                     _init_display:
  3004                           	opt callstack 22
  3005                           
  3006                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3007                           
  3008                           ; BSR set to: 1
  3009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3010                           ;incstack = 0
  3011  016D86  0E90               	movlw	low _ring_buf1
  3012  016D88  0100               	movlb	0	; () banked
  3013  016D8A  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3014  016D8C  0E03               	movlw	high _ring_buf1
  3015  016D8E  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3016                           
  3017                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3018  016D90  0E00               	movlw	low _ring_buf2
  3019  016D92  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3020  016D94  0E04               	movlw	high _ring_buf2
  3021  016D96  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3025  016D98  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3026  016D9E  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3027  016DA4  ECF9  F0C1         	call	_ringBufS_init	;wreg free
  3028                           
  3029                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3030  016DA8  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3031  016DAE  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3032  016DB4  ECF9  F0C1         	call	_ringBufS_init	;wreg free
  3033                           
  3034                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3035  016DB8  84BE               	bsf	190,2,c	;volatile
  3036  016DBA  84BC               	bsf	188,2,c	;volatile
  3037                           
  3038                           ;eadog.c: 46:  wdtdelay(350000);
  3039  016DBC  0E30               	movlw	48
  3040  016DBE  6EE6               	movwf	postinc1,c
  3041  016DC0  0E57               	movlw	87
  3042  016DC2  6EE6               	movwf	postinc1,c
  3043  016DC4  0E05               	movlw	5
  3044  016DC6  6EE6               	movwf	postinc1,c
  3045  016DC8  0E00               	movlw	0
  3046  016DCA  6EE6               	movwf	postinc1,c
  3047  016DCC  EC5C  F0BE         	call	_wdtdelay	;wreg free
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3051  016DD0  0E39               	movlw	57
  3052  016DD2  6EE6               	movwf	postinc1,c
  3053  016DD4  ECE5  F0C1         	call	_send_lcd_cmd	;wreg free
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3057  016DD8  0E1D               	movlw	29
  3058  016DDA  6EE6               	movwf	postinc1,c
  3059  016DDC  ECE5  F0C1         	call	_send_lcd_cmd	;wreg free
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3063  016DE0  0E50               	movlw	80
  3064  016DE2  6EE6               	movwf	postinc1,c
  3065  016DE4  ECE5  F0C1         	call	_send_lcd_cmd	;wreg free
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3069  016DE8  0E6C               	movlw	108
  3070  016DEA  6EE6               	movwf	postinc1,c
  3071  016DEC  ECE5  F0C1         	call	_send_lcd_cmd	;wreg free
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3075  016DF0  0E76               	movlw	118
  3076  016DF2  6EE6               	movwf	postinc1,c
  3077  016DF4  ECE5  F0C1         	call	_send_lcd_cmd	;wreg free
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3081  016DF8  0E38               	movlw	56
  3082  016DFA  6EE6               	movwf	postinc1,c
  3083  016DFC  ECD1  F0C1         	call	_send_lcd_cmd_long	;wreg free
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3087  016E00  0E0F               	movlw	15
  3088  016E02  6EE6               	movwf	postinc1,c
  3089  016E04  ECE5  F0C1         	call	_send_lcd_cmd	;wreg free
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3093  016E08  0E01               	movlw	1
  3094  016E0A  6EE6               	movwf	postinc1,c
  3095  016E0C  ECD1  F0C1         	call	_send_lcd_cmd_long	;wreg free
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3099  016E10  0E02               	movlw	2
  3100  016E12  6EE6               	movwf	postinc1,c
  3101  016E14  ECE5  F0C1         	call	_send_lcd_cmd	;wreg free
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3105  016E18  0E06               	movlw	6
  3106  016E1A  6EE6               	movwf	postinc1,c
  3107  016E1C  ECE5  F0C1         	call	_send_lcd_cmd	;wreg free
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;eadog.c: 57:  wdtdelay(30);
  3111  016E20  0E1E               	movlw	30
  3112  016E22  6EE6               	movwf	postinc1,c
  3113  016E24  0E00               	movlw	0
  3114  016E26  6EE6               	movwf	postinc1,c
  3115  016E28  0E00               	movlw	0
  3116  016E2A  6EE6               	movwf	postinc1,c
  3117  016E2C  0E00               	movlw	0
  3118  016E2E  6EE6               	movwf	postinc1,c
  3119  016E30  EC5C  F0BE         	call	_wdtdelay	;wreg free
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3123  016E34  0E02               	movlw	2
  3124  016E36  013D               	movlb	61	; () banked
  3125  016E38  6F16               	movwf	22,b	;volatile
  3126                           
  3127                           ; BSR set to: 61
  3128                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3129  016E3A  0E40               	movlw	64
  3130  016E3C  6F15               	movwf	21,b	;volatile
  3131                           
  3132                           ; BSR set to: 61
  3133                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3134  016E3E  0E83               	movlw	131
  3135  016E40  6F14               	movwf	20,b	;volatile
  3136                           
  3137                           ; BSR set to: 61
  3138                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3139  016E42  931A               	bcf	26,1,b	;volatile
  3140                           
  3141                           ; BSR set to: 61
  3142                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3143  016E44  0E3F               	movlw	-193
  3144  016E46  013B               	movlb	59	; () banked
  3145  016E48  17FD               	andwf	253,f,b	;volatile
  3146                           
  3147                           ; BSR set to: 59
  3148                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3149  016E4A  9BFD               	bcf	253,5,b	;volatile
  3150                           
  3151                           ; BSR set to: 59
  3152                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3153  016E4C  51FD               	movf	253,w,b	;volatile
  3154  016E4E  0BF9               	andlw	-7
  3155  016E50  0902               	iorlw	2
  3156  016E52  6FFD               	movwf	253,b	;volatile
  3157                           
  3158                           ; BSR set to: 59
  3159                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3160  016E54  0EE7               	movlw	-25
  3161  016E56  17FD               	andwf	253,f,b	;volatile
  3162                           
  3163                           ; BSR set to: 59
  3164                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3165  016E58  81FD               	bsf	253,0,b	;volatile
  3166                           
  3167                           ; BSR set to: 59
  3168                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3169  016E5A  0E90               	movlw	low _ring_buf1
  3170  016E5C  6FF9               	movwf	249,b	;volatile
  3171  016E5E  0E03               	movlw	high _ring_buf1
  3172  016E60  6FFA               	movwf	250,b	;volatile
  3173  016E62  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3174  016E64  6FFB               	movwf	251,b	;volatile
  3175                           
  3176                           ; BSR set to: 59
  3177                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3178  016E66  9BFC               	bcf	252,5,b	;volatile
  3179                           
  3180                           ; BSR set to: 59
  3181                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3182  016E68  013D               	movlb	61	; () banked
  3183  016E6A  831A               	bsf	26,1,b	;volatile
  3184                           
  3185                           ; BSR set to: 61
  3186                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3187  016E6C  94BE               	bcf	190,2,c	;volatile
  3188                           
  3189                           ; BSR set to: 61
  3190                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3191  016E6E  0012               	return		;funcret
  3192  016E70                     __end_of_init_display:
  3193                           	opt callstack 0
  3194                           
  3195 ;; *************** function _send_lcd_cmd_long *****************
  3196 ;; Defined at:
  3197 ;;		line 114 in file "eadog.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  cmd             1  [STACK] const unsigned char 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1  [STACK] void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3206 ;; Tracked objects:
  3207 ;;		On entry : 3F/0
  3208 ;;		On exit  : 3F/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    7
  3218 ;; This function calls:
  3219 ;;		_SPI1_Exchange8bit
  3220 ;;		_wdtdelay
  3221 ;; This function is called by:
  3222 ;;		_init_display
  3223 ;; This function uses a reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text7
  3227  0183A2                     __ptext7:
  3228                           	opt callstack 0
  3229  0183A2                     _send_lcd_cmd_long:
  3230                           	opt callstack 22
  3231                           
  3232                           ; BSR set to: 61
  3233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3234                           ;incstack = 0
  3235                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3236  0183A2  92BC               	bcf	188,1,c	;volatile
  3237                           
  3238                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3239  0183A4  94BC               	bcf	188,2,c	;volatile
  3240                           
  3241                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3242                           ;stkvar	_cmd @ sp[(0)+-1]
  3243  0183A6  0EFF               	movlw	-1
  3244  0183A8  50E3               	movf	plusw1,w,c
  3245  0183AA  6EE6               	movwf	postinc1,c
  3246  0183AC  ECC7  F0C3         	call	_SPI1_Exchange8bit	;wreg free
  3247                           
  3248                           ; BSR set to: 57
  3249                           ;eadog.c: 119:  wdtdelay(800);
  3250  0183B0  0E20               	movlw	32
  3251  0183B2  6EE6               	movwf	postinc1,c
  3252  0183B4  0E03               	movlw	3
  3253  0183B6  6EE6               	movwf	postinc1,c
  3254  0183B8  0E00               	movlw	0
  3255  0183BA  6EE6               	movwf	postinc1,c
  3256  0183BC  0E00               	movlw	0
  3257  0183BE  6EE6               	movwf	postinc1,c
  3258  0183C0  EC5C  F0BE         	call	_wdtdelay	;wreg free
  3259                           
  3260                           ; BSR set to: 0
  3261  0183C4  82BC               	bsf	188,1,c	;volatile
  3262                           
  3263                           ; BSR set to: 0
  3264                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3265  0183C6  52E5               	movf	postdec1,f,c
  3266  0183C8  0012               	return		;funcret
  3267  0183CA                     __end_of_send_lcd_cmd_long:
  3268                           	opt callstack 0
  3269                           
  3270 ;; *************** function _send_lcd_cmd *****************
  3271 ;; Defined at:
  3272 ;;		line 102 in file "eadog.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  cmd             1  [STACK] const unsigned char 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1  [STACK] void 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3281 ;; Tracked objects:
  3282 ;;		On entry : 3F/0
  3283 ;;		On exit  : 3F/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    7
  3293 ;; This function calls:
  3294 ;;		_SPI1_Exchange8bit
  3295 ;;		_wdtdelay
  3296 ;; This function is called by:
  3297 ;;		_init_display
  3298 ;; This function uses a reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text8
  3302  0183CA                     __ptext8:
  3303                           	opt callstack 0
  3304  0183CA                     _send_lcd_cmd:
  3305                           	opt callstack 22
  3306                           
  3307                           ; BSR set to: 0
  3308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3309                           ;incstack = 0
  3310                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3311  0183CA  92BC               	bcf	188,1,c	;volatile
  3312                           
  3313                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3314  0183CC  94BC               	bcf	188,2,c	;volatile
  3315                           
  3316                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3317                           ;stkvar	_cmd @ sp[(0)+-1]
  3318  0183CE  0EFF               	movlw	-1
  3319  0183D0  50E3               	movf	plusw1,w,c
  3320  0183D2  6EE6               	movwf	postinc1,c
  3321  0183D4  ECC7  F0C3         	call	_SPI1_Exchange8bit	;wreg free
  3322                           
  3323                           ; BSR set to: 57
  3324                           ;eadog.c: 107:  wdtdelay(30);
  3325  0183D8  0E1E               	movlw	30
  3326  0183DA  6EE6               	movwf	postinc1,c
  3327  0183DC  0E00               	movlw	0
  3328  0183DE  6EE6               	movwf	postinc1,c
  3329  0183E0  0E00               	movlw	0
  3330  0183E2  6EE6               	movwf	postinc1,c
  3331  0183E4  0E00               	movlw	0
  3332  0183E6  6EE6               	movwf	postinc1,c
  3333  0183E8  EC5C  F0BE         	call	_wdtdelay	;wreg free
  3334                           
  3335                           ; BSR set to: 0
  3336  0183EC  82BC               	bsf	188,1,c	;volatile
  3337                           
  3338                           ; BSR set to: 0
  3339                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3340  0183EE  52E5               	movf	postdec1,f,c
  3341  0183F0  0012               	return		;funcret
  3342  0183F2                     __end_of_send_lcd_cmd:
  3343                           	opt callstack 0
  3344                           
  3345 ;; *************** function _SPI1_Exchange8bit *****************
  3346 ;; Defined at:
  3347 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  data            1  [STACK] unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1  [STACK] unsigned char 
  3354 ;; Registers used:
  3355 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 3F/39
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    6
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_send_lcd_cmd
  3372 ;;		_send_lcd_cmd_long
  3373 ;; This function uses a reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text9
  3377  01878E                     __ptext9:
  3378                           	opt callstack 0
  3379  01878E                     _SPI1_Exchange8bit:
  3380                           	opt callstack 22
  3381                           
  3382                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3383                           
  3384                           ; BSR set to: 0
  3385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3386                           ;incstack = 0
  3387  01878E  0E01               	movlw	1
  3388  018790  013D               	movlb	61	; () banked
  3389  018792  6F12               	movwf	18,b	;volatile
  3390                           
  3391                           ; BSR set to: 61
  3392                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3393                           ;stkvar	_data @ sp[(0)+-1]
  3394  018794  0EFF               	movlw	-1
  3395  018796  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3396  01879C                     l835:
  3397                           
  3398                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3399  01879C  0139               	movlb	57	; () banked
  3400  01879E  A9A2               	btfss	162,4,b	;volatile
  3401  0187A0  D7FD               	goto	l835
  3402                           
  3403                           ; BSR set to: 57
  3404                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3405  0187A2  006F F440  F032    	movff	15632,btemp	;volatile
  3406                           
  3407                           ; BSR set to: 57
  3408                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3409  0187A8  52E5               	movf	postdec1,f,c
  3410  0187AA  0012               	return		;funcret
  3411  0187AC                     __end_of_SPI1_Exchange8bit:
  3412                           	opt callstack 0
  3413                           
  3414 ;; *************** function _ringBufS_init *****************
  3415 ;; Defined at:
  3416 ;;		line 22 in file "ringbufs.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  _this           2  [STACK] PTR volatile struct ring
  3419 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1  [STACK] void 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3435 ;;Total ram usage:        0 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    7
  3438 ;; This function calls:
  3439 ;;		_memset
  3440 ;; This function is called by:
  3441 ;;		_init_display
  3442 ;; This function uses a reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text10
  3446  0183F2                     __ptext10:
  3447                           	opt callstack 0
  3448  0183F2                     _ringBufS_init:
  3449                           	opt callstack 22
  3450                           
  3451                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3452                           
  3453                           ; BSR set to: 57
  3454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3455                           ;incstack = 0
  3456  0183F2  0E43               	movlw	67
  3457  0183F4  6EE6               	movwf	postinc1,c
  3458  0183F6  0E00               	movlw	0
  3459  0183F8  6EE6               	movwf	postinc1,c
  3460  0183FA  0E00               	movlw	0
  3461  0183FC  6EE6               	movwf	postinc1,c
  3462  0183FE  0E00               	movlw	0
  3463  018400  6EE6               	movwf	postinc1,c
  3464                           
  3465                           ;stkvar	__this @ sp[(-4)+-2]
  3466  018402  0EFA               	movlw	-6
  3467  018404  006F FF8F FFE6     	movff	plusw1,postinc1
  3468  01840A  006F FF8F FFE6     	movff	plusw1,postinc1
  3469  018410  EC0B  F0A4         	call	_memset	;wreg free
  3470                           
  3471                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3472  018414  52E5               	movf	postdec1,f,c
  3473  018416  52E5               	movf	postdec1,f,c
  3474  018418  0012               	return		;funcret
  3475  01841A                     __end_of_ringBufS_init:
  3476                           	opt callstack 0
  3477                           
  3478 ;; *************** function _hid_display *****************
  3479 ;; Defined at:
  3480 ;;		line 17 in file "hid.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  h               1  [STACK] PTR struct H_data
  3483 ;;		 -> H(6), 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1  [STACK] PTR struct H_data
  3488 ;; Registers used:
  3489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  3490 ;; Tracked objects:
  3491 ;;		On entry : 3F/1
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3499 ;;Total ram usage:        0 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    8
  3502 ;; This function calls:
  3503 ;;		_hid_input
  3504 ;; This function is called by:
  3505 ;;		_main
  3506 ;; This function uses a reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text11
  3510  01735E                     __ptext11:
  3511                           	opt callstack 0
  3512  01735E                     _hid_display:
  3513                           	opt callstack 22
  3514                           
  3515                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  3516                           ;stkvar	_h @ sp[(0)+-1]
  3517                           
  3518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3519                           ;incstack = 0
  3520  01735E  0EFF               	movlw	-1
  3521  017360  50E3               	movf	plusw1,w,c
  3522  017362  6EE6               	movwf	postinc1,c
  3523  017364  ECDB  F0BA         	call	_hid_input	;wreg free
  3524                           
  3525                           ;hid.c: 21:  switch (h->h_state) {
  3526  017368  D033               	goto	l9078
  3527  01736A                     l9062:
  3528                           
  3529                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  3530                           ;stkvar	_h @ sp[(0)+-1]
  3531  01736A  0EFF               	movlw	-1
  3532  01736C  50E3               	movf	plusw1,w,c
  3533  01736E  6ED9               	movwf	fsr2l,c
  3534  017370  6ADA               	clrf	fsr2h,c
  3535  017372  0E01               	movlw	1
  3536  017374  26D9               	addwf	fsr2l,f,c
  3537  017376  0E01               	movlw	1
  3538  017378  6EDF               	movwf	indf2,c
  3539                           
  3540                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  3541                           ;stkvar	_h @ sp[(0)+-1]
  3542  01737A  0EFF               	movlw	-1
  3543  01737C  50E3               	movf	plusw1,w,c
  3544  01737E  6ED9               	movwf	fsr2l,c
  3545  017380  6ADA               	clrf	fsr2h,c
  3546  017382  0E00               	movlw	0
  3547  017384  6EDF               	movwf	indf2,c
  3548                           
  3549                           ;hid.c: 25:   h->wait_enter = 1;
  3550                           ;stkvar	_h @ sp[(0)+-1]
  3551  017386  0EFF               	movlw	-1
  3552  017388  50E3               	movf	plusw1,w,c
  3553  01738A  6ED9               	movwf	fsr2l,c
  3554  01738C  6ADA               	clrf	fsr2h,c
  3555  01738E  0E04               	movlw	4
  3556  017390  26D9               	addwf	fsr2l,f,c
  3557  017392  0E01               	movlw	1
  3558  017394  6EDF               	movwf	indf2,c
  3559                           
  3560                           ;hid.c: 26:   h->wait_select = 1;
  3561                           ;stkvar	_h @ sp[(0)+-1]
  3562  017396  0EFF               	movlw	-1
  3563  017398  50E3               	movf	plusw1,w,c
  3564  01739A  6ED9               	movwf	fsr2l,c
  3565  01739C  6ADA               	clrf	fsr2h,c
  3566  01739E  0E02               	movlw	2
  3567  0173A0  26D9               	addwf	fsr2l,f,c
  3568  0173A2  D00D               	goto	L1
  3569  0173A4                     l9070:
  3570                           
  3571                           ;hid.c: 30:   if (h->select_p) {
  3572                           ;stkvar	_h @ sp[(0)+-1]
  3573  0173A4  0EFF               	movlw	-1
  3574  0173A6  50E3               	movf	plusw1,w,c
  3575  0173A8  6ED9               	movwf	fsr2l,c
  3576  0173AA  6ADA               	clrf	fsr2h,c
  3577  0173AC  0E03               	movlw	3
  3578  0173AE  26D9               	addwf	fsr2l,f,c
  3579  0173B0  50DF               	movf	indf2,w,c
  3580  0173B2  B4D8               	btfsc	status,2,c
  3581  0173B4  D006               	goto	l9074
  3582                           
  3583                           ;hid.c: 31:    h->hid_display = HID_PWR;
  3584                           ;stkvar	_h @ sp[(0)+-1]
  3585  0173B6  0EFF               	movlw	-1
  3586  0173B8  50E3               	movf	plusw1,w,c
  3587  0173BA  6ED9               	movwf	fsr2l,c
  3588  0173BC  6ADA               	clrf	fsr2h,c
  3589  0173BE                     L1:
  3590  0173BE  0E01               	movlw	1
  3591  0173C0  D005               	goto	L2
  3592  0173C2                     l9074:
  3593                           
  3594                           ;hid.c: 33:    h->hid_display = HID_MAIN;
  3595                           ;stkvar	_h @ sp[(0)+-1]
  3596  0173C2  0EFF               	movlw	-1
  3597  0173C4  50E3               	movf	plusw1,w,c
  3598  0173C6  6ED9               	movwf	fsr2l,c
  3599  0173C8  6ADA               	clrf	fsr2h,c
  3600  0173CA  0E00               	movlw	0
  3601  0173CC                     L2:
  3602  0173CC  6EDF               	movwf	indf2,c
  3603  0173CE  D013               	goto	l1790
  3604  0173D0                     l9078:
  3605                           
  3606                           ;stkvar	_h @ sp[(0)+-1]
  3607  0173D0  0EFF               	movlw	-1
  3608  0173D2  50E3               	movf	plusw1,w,c
  3609  0173D4  6ED9               	movwf	fsr2l,c
  3610  0173D6  6ADA               	clrf	fsr2h,c
  3611  0173D8  0E01               	movlw	1
  3612  0173DA  26D9               	addwf	fsr2l,f,c
  3613  0173DC  50DF               	movf	indf2,w,c
  3614  0173DE  6E3C               	movwf	(btemp+10)^0,c
  3615  0173E0  6A3D               	clrf	(btemp+11)^0,c
  3616                           
  3617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3618                           ; Switch size 1, requested type "simple"
  3619                           ; Number of cases is 1, Range of values is 0 to 0
  3620                           ; switch strategies available:
  3621                           ; Name         Instructions Cycles
  3622                           ; simple_byte            4     3 (average)
  3623                           ;	Chosen strategy is simple_byte
  3624  0173E2  503D               	movf	(btemp+11)^0,w,c
  3625  0173E4  0A00               	xorlw	0	; case 0
  3626  0173E6  A4D8               	btfss	status,2,c
  3627  0173E8  D7DD               	goto	l9070
  3628                           
  3629                           ; Switch size 1, requested type "simple"
  3630                           ; Number of cases is 2, Range of values is 0 to 1
  3631                           ; switch strategies available:
  3632                           ; Name         Instructions Cycles
  3633                           ; simple_byte            7     4 (average)
  3634                           ;	Chosen strategy is simple_byte
  3635  0173EA  503C               	movf	(btemp+10)^0,w,c
  3636  0173EC  0A00               	xorlw	0	; case 0
  3637  0173EE  B4D8               	btfsc	status,2,c
  3638  0173F0  D7BC               	goto	l9062
  3639  0173F2  0A01               	xorlw	1	; case 1
  3640  0173F4  D7D7               	goto	l9070
  3641  0173F6                     l1790:
  3642                           
  3643                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3644  0173F6  52E5               	movf	postdec1,f,c
  3645  0173F8  0012               	return		;funcret
  3646  0173FA                     __end_of_hid_display:
  3647                           	opt callstack 0
  3648                           
  3649 ;; *************** function _hid_input *****************
  3650 ;; Defined at:
  3651 ;;		line 3 in file "hid.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  h               1  [STACK] PTR struct H_data
  3654 ;;		 -> H(6), 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1  [STACK] PTR struct H_data
  3659 ;; Registers used:
  3660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/1
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3670 ;;Total ram usage:        0 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    7
  3673 ;; This function calls:
  3674 ;;		_get_switch
  3675 ;; This function is called by:
  3676 ;;		_hid_display
  3677 ;; This function uses a reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text12
  3681  0175B6                     __ptext12:
  3682                           	opt callstack 0
  3683  0175B6                     _hid_input:
  3684                           	opt callstack 22
  3685                           
  3686                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  3687                           
  3688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3689                           ;incstack = 0
  3690  0175B6  0E02               	movlw	2
  3691  0175B8  6EE6               	movwf	postinc1,c
  3692  0175BA  EC0D  F0C2         	call	_get_switch	;wreg free
  3693  0175BE  5032               	movf	btemp^0,w,c
  3694  0175C0  B4D8               	btfsc	status,2,c
  3695  0175C2  D01C               	goto	l8840
  3696                           
  3697                           ;hid.c: 6:   h->wait_select = 0;
  3698                           ;stkvar	_h @ sp[(0)+-1]
  3699  0175C4  0EFF               	movlw	-1
  3700  0175C6  50E3               	movf	plusw1,w,c
  3701  0175C8  6ED9               	movwf	fsr2l,c
  3702  0175CA  6ADA               	clrf	fsr2h,c
  3703  0175CC  0E02               	movlw	2
  3704  0175CE  26D9               	addwf	fsr2l,f,c
  3705  0175D0  0E00               	movlw	0
  3706  0175D2  6EDF               	movwf	indf2,c
  3707                           
  3708                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  3709  0175D4  0E02               	movlw	2
  3710  0175D6  6EE6               	movwf	postinc1,c
  3711  0175D8  EC0D  F0C2         	call	_get_switch	;wreg free
  3712  0175DC  5032               	movf	btemp^0,w,c
  3713  0175DE  B4D8               	btfsc	status,2,c
  3714  0175E0  D003               	goto	u8390
  3715  0175E2  6A3D               	clrf	(btemp+11)^0,c
  3716  0175E4  2A3D               	incf	(btemp+11)^0,f,c
  3717  0175E6  D001               	goto	u8408
  3718  0175E8                     u8390:
  3719  0175E8  6A3D               	clrf	(btemp+11)^0,c
  3720  0175EA                     u8408:
  3721                           
  3722                           ;stkvar	_h @ sp[(0)+-1]
  3723  0175EA  0EFF               	movlw	-1
  3724  0175EC  50E3               	movf	plusw1,w,c
  3725  0175EE  6ED9               	movwf	fsr2l,c
  3726  0175F0  6ADA               	clrf	fsr2h,c
  3727  0175F2  0E03               	movlw	3
  3728  0175F4  26D9               	addwf	fsr2l,f,c
  3729  0175F6  0060  F0F7  FFDF   	movff	btemp+11,indf2
  3730  0175FC                     l8840:
  3731                           
  3732                           ;hid.c: 10:  if (get_switch(SENTER)) {
  3733  0175FC  0E03               	movlw	3
  3734  0175FE  6EE6               	movwf	postinc1,c
  3735  017600  EC0D  F0C2         	call	_get_switch	;wreg free
  3736  017604  5032               	movf	btemp^0,w,c
  3737  017606  B4D8               	btfsc	status,2,c
  3738  017608  D01C               	goto	l1780
  3739                           
  3740                           ;hid.c: 11:   h->wait_enter = 0;
  3741                           ;stkvar	_h @ sp[(0)+-1]
  3742  01760A  0EFF               	movlw	-1
  3743  01760C  50E3               	movf	plusw1,w,c
  3744  01760E  6ED9               	movwf	fsr2l,c
  3745  017610  6ADA               	clrf	fsr2h,c
  3746  017612  0E04               	movlw	4
  3747  017614  26D9               	addwf	fsr2l,f,c
  3748  017616  0E00               	movlw	0
  3749  017618  6EDF               	movwf	indf2,c
  3750                           
  3751                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  3752  01761A  0E03               	movlw	3
  3753  01761C  6EE6               	movwf	postinc1,c
  3754  01761E  EC0D  F0C2         	call	_get_switch	;wreg free
  3755  017622  5032               	movf	btemp^0,w,c
  3756  017624  B4D8               	btfsc	status,2,c
  3757  017626  D003               	goto	u8420
  3758  017628  6A3D               	clrf	(btemp+11)^0,c
  3759  01762A  2A3D               	incf	(btemp+11)^0,f,c
  3760  01762C  D001               	goto	u8438
  3761  01762E                     u8420:
  3762  01762E  6A3D               	clrf	(btemp+11)^0,c
  3763  017630                     u8438:
  3764                           
  3765                           ;stkvar	_h @ sp[(0)+-1]
  3766  017630  0EFF               	movlw	-1
  3767  017632  50E3               	movf	plusw1,w,c
  3768  017634  6ED9               	movwf	fsr2l,c
  3769  017636  6ADA               	clrf	fsr2h,c
  3770  017638  0E05               	movlw	5
  3771  01763A  26D9               	addwf	fsr2l,f,c
  3772  01763C  0060  F0F7  FFDF   	movff	btemp+11,indf2
  3773  017642                     l1780:
  3774                           
  3775                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  3776  017642  52E5               	movf	postdec1,f,c
  3777  017644  0012               	return		;funcret
  3778  017646                     __end_of_hid_input:
  3779                           	opt callstack 0
  3780                           
  3781 ;; *************** function _get_switch *****************
  3782 ;; Defined at:
  3783 ;;		line 18 in file "dio.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  i               1  [STACK] unsigned char 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1  [STACK] enum E16283
  3790 ;; Registers used:
  3791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/1
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    6
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_hid_input
  3808 ;; This function uses a reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text13
  3812  01841A                     __ptext13:
  3813                           	opt callstack 0
  3814  01841A                     _get_switch:
  3815                           	opt callstack 22
  3816                           
  3817                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3818                           ;stkvar	_i @ sp[(0)+-1]
  3819                           
  3820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3821                           ;incstack = 0
  3822  01841A  0EFF               	movlw	-1
  3823  01841C  006F FF8C  F032    	movff	plusw1,btemp
  3824  018422  0E03               	movlw	3
  3825  018424  6432               	cpfsgt	btemp^0,c
  3826  018426  D002               	goto	l8164
  3827                           
  3828                           ;dio.c: 21:   return SW_OFF;
  3829  018428  0E00               	movlw	0
  3830  01842A  D008               	goto	L3
  3831  01842C                     l8164:
  3832                           
  3833                           ;dio.c: 23:  return S.button[i].sw;
  3834                           ;stkvar	_i @ sp[(0)+-1]
  3835  01842C  0EFF               	movlw	-1
  3836  01842E  50E3               	movf	plusw1,w,c
  3837  018430  0D05               	mullw	5
  3838  018432  50F3               	movf	243,w,c
  3839  018434  0F60               	addlw	low _S
  3840  018436  6ED9               	movwf	fsr2l,c
  3841  018438  6ADA               	clrf	fsr2h,c
  3842  01843A  50DF               	movf	indf2,w,c
  3843  01843C                     L3:
  3844  01843C  6E32               	movwf	btemp^0,c
  3845                           
  3846                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3847  01843E  52E5               	movf	postdec1,f,c
  3848  018440  0012               	return		;funcret
  3849  018442                     __end_of_get_switch:
  3850                           	opt callstack 0
  3851                           
  3852 ;; *************** function _eaDogM_WriteCommand *****************
  3853 ;; Defined at:
  3854 ;;		line 160 in file "eadog.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  cmd             1  [STACK] const unsigned char 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1  [STACK] void 
  3861 ;; Registers used:
  3862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3863 ;; Tracked objects:
  3864 ;;		On entry : 3F/3D
  3865 ;;		On exit  : 3F/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:   16
  3875 ;; This function calls:
  3876 ;;		_send_lcd_cmd_dma
  3877 ;; This function is called by:
  3878 ;;		_main
  3879 ;; This function uses a reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text14
  3883  01894A                     __ptext14:
  3884                           	opt callstack 0
  3885  01894A                     _eaDogM_WriteCommand:
  3886                           	opt callstack 14
  3887                           
  3888                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3889                           ;stkvar	_cmd @ sp[(0)+-1]
  3890                           
  3891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3892                           ;incstack = 0
  3893  01894A  0EFF               	movlw	-1
  3894  01894C  50E3               	movf	plusw1,w,c
  3895  01894E  6EE6               	movwf	postinc1,c
  3896  018950  ECB6  F0BE         	call	_send_lcd_cmd_dma	;wreg free
  3897                           
  3898                           ; BSR set to: 0
  3899                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3900  018954  52E5               	movf	postdec1,f,c
  3901  018956  0012               	return		;funcret
  3902  018958                     __end_of_eaDogM_WriteCommand:
  3903                           	opt callstack 0
  3904                           
  3905 ;; *************** function _convert_adc_data *****************
  3906 ;; Defined at:
  3907 ;;		line 38 in file "mbmc.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  i               1  [STACK] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1  [STACK] void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/39
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    9
  3928 ;; This function calls:
  3929 ;;		_conv_raw_result
  3930 ;;		_lp_filter
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text15
  3937  017854                     __ptext15:
  3938                           	opt callstack 0
  3939  017854                     _convert_adc_data:
  3940                           	opt callstack 0
  3941                           
  3942                           ; BSR set to: 0
  3943                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3944  017854  52E6               	movf	postinc1,f,c
  3945                           
  3946                           ;mbmc.c: 40:  uint8_t i = 0;
  3947                           ;stkvar	_i @ sp[(-1)+0]
  3948                           
  3949                           ;incstack = 0
  3950  017856  0EFF               	movlw	-1
  3951  017858  6AE3               	clrf	plusw1,c
  3952  01785A                     l9046:
  3953                           
  3954                           ;mbmc.c: 46:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3955  01785A  0E00               	movlw	0
  3956  01785C  6EE6               	movwf	postinc1,c
  3957                           
  3958                           ;stkvar	_i @ sp[(-2)+0]
  3959  01785E  0EFE               	movlw	-2
  3960  017860  50E3               	movf	plusw1,w,c
  3961  017862  6EE6               	movwf	postinc1,c
  3962  017864  0E00               	movlw	0
  3963  017866  6EE6               	movwf	postinc1,c
  3964                           
  3965                           ;stkvar	_i @ sp[(-4)+0]
  3966  017868  0EFC               	movlw	-4
  3967  01786A  50E3               	movf	plusw1,w,c
  3968  01786C  6EE6               	movwf	postinc1,c
  3969  01786E  ECE2  F09B         	call	_conv_raw_result	;wreg free
  3970  017872  0060  F0CB  FFE6   	movff	btemp,postinc1
  3971  017878  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3972  01787E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3973  017884  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3974  01788A  EC9E  F0AE         	call	_lp_filter	;wreg free
  3975                           
  3976                           ;stkvar	_i @ sp[(-1)+0]
  3977  01788E  0EFF               	movlw	-1
  3978  017890  50E3               	movf	plusw1,w,c
  3979  017892  0D04               	mullw	4
  3980  017894  0E00               	movlw	low _C
  3981  017896  24F3               	addwf	243,w,c
  3982  017898  6ED9               	movwf	fsr2l,c
  3983  01789A  0E01               	movlw	high _C
  3984  01789C  20F4               	addwfc	prodh,w,c
  3985  01789E  6EDA               	movwf	fsr2h,c
  3986  0178A0  0060  F0CB  FFDE   	movff	btemp,postinc2
  3987  0178A6  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3988  0178AC  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3989  0178B2  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3990                           
  3991                           ;mbmc.c: 48:  } while (++i < 16);
  3992                           ;stkvar	_i @ sp[(-1)+0]
  3993  0178B8  0EFF               	movlw	-1
  3994  0178BA  2AE3               	incf	plusw1,f,c
  3995  0178BC  0EFF               	movlw	-1
  3996  0178BE  006F FF8C  F032    	movff	plusw1,btemp
  3997  0178C4  0E0F               	movlw	15
  3998  0178C6  6432               	cpfsgt	btemp^0,c
  3999  0178C8  D7C8               	goto	l9046
  4000                           
  4001                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4002  0178CA  52E5               	movf	postdec1,f,c
  4003  0178CC  0012               	return		;funcret
  4004  0178CE                     __end_of_convert_adc_data:
  4005                           	opt callstack 0
  4006                           
  4007 ;; *************** function _conv_raw_result *****************
  4008 ;; Defined at:
  4009 ;;		line 80 in file "daq.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  chan            1  [STACK] const enum E16136
  4012 ;;  to_what         1  [STACK] const enum E16198
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  4  [STACK] float 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/39
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    8
  4031 ;; This function calls:
  4032 ;;		___fldiv
  4033 ;;		___flmul
  4034 ;;		___flsub
  4035 ;;		___xxtofl
  4036 ;;		_get_raw_result
  4037 ;;		_nanf
  4038 ;; This function is called by:
  4039 ;;		_convert_adc_data
  4040 ;; This function uses a reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text16
  4044  0137C4                     __ptext16:
  4045                           	opt callstack 0
  4046  0137C4                     _conv_raw_result:
  4047                           	opt callstack 21
  4048                           
  4049                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4050                           
  4051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4052                           ;incstack = 0
  4053  0137C4  D242               	goto	l8750
  4054  0137C6                     l8696:
  4055                           
  4056                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4057                           ;stkvar	_chan @ sp[(0)+-1]
  4058  0137C6  0EFF               	movlw	-1
  4059  0137C8  006F FF8C  F03D    	movff	plusw1,btemp+11
  4060  0137CE  0E77               	movlw	119
  4061  0137D0  6E3A               	movwf	(btemp+8)^0,c
  4062  0137D2  0E3C               	movlw	60
  4063  0137D4  6E3B               	movwf	(btemp+9)^0,c
  4064  0137D6  2A3D               	incf	(btemp+11)^0,f,c
  4065  0137D8  D003               	goto	u8134
  4066  0137DA                     u8135:
  4067  0137DA  343B               	rlcf	(btemp+9)^0,w,c
  4068  0137DC  323B               	rrcf	(btemp+9)^0,f,c
  4069  0137DE  323A               	rrcf	(btemp+8)^0,f,c
  4070  0137E0                     u8134:
  4071  0137E0  2E3D               	decfsz	(btemp+11)^0,f,c
  4072  0137E2  D7FB               	goto	u8135
  4073  0137E4  B03A               	btfsc	(btemp+8)^0,0,c
  4074  0137E6  D007               	goto	l8702
  4075                           
  4076                           ;daq.c: 86:    return nanf("");
  4077  0137E8  0EC5               	movlw	low (STR_30+18)
  4078  0137EA  6EE6               	movwf	postinc1,c
  4079  0137EC  0EFE               	movlw	high (STR_30+18)
  4080  0137EE  6EE6               	movwf	postinc1,c
  4081  0137F0  EC9D  F0BD         	call	_nanf	;wreg free
  4082  0137F4  D23A               	goto	l1664
  4083  0137F6                     l8702:
  4084                           
  4085                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4086                           ;stkvar	_chan @ sp[(0)+-1]
  4087  0137F6  0EFF               	movlw	-1
  4088  0137F8  006F FF8C  F03D    	movff	plusw1,btemp+11
  4089  0137FE  0E03               	movlw	3
  4090  013800  6E3A               	movwf	(btemp+8)^0,c
  4091  013802  0E00               	movlw	0
  4092  013804  6E3B               	movwf	(btemp+9)^0,c
  4093  013806  2A3D               	incf	(btemp+11)^0,f,c
  4094  013808  D003               	goto	u8154
  4095  01380A                     u8155:
  4096  01380A  343B               	rlcf	(btemp+9)^0,w,c
  4097  01380C  323B               	rrcf	(btemp+9)^0,f,c
  4098  01380E  323A               	rrcf	(btemp+8)^0,f,c
  4099  013810                     u8154:
  4100  013810  2E3D               	decfsz	(btemp+11)^0,f,c
  4101  013812  D7FB               	goto	u8155
  4102  013814  A03A               	btfss	(btemp+8)^0,0,c
  4103  013816  D0EB               	goto	l8716
  4104                           
  4105                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4106                           ;stkvar	_chan @ sp[(0)+-1]
  4107  013818  0EFF               	movlw	-1
  4108  01381A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4109  013820  0E01               	movlw	1
  4110  013822  6E3A               	movwf	(btemp+8)^0,c
  4111  013824  0E00               	movlw	0
  4112  013826  6E3B               	movwf	(btemp+9)^0,c
  4113  013828  2A3D               	incf	(btemp+11)^0,f,c
  4114  01382A  D003               	goto	u8174
  4115  01382C                     u8175:
  4116  01382C  343B               	rlcf	(btemp+9)^0,w,c
  4117  01382E  323B               	rrcf	(btemp+9)^0,f,c
  4118  013830  323A               	rrcf	(btemp+8)^0,f,c
  4119  013832                     u8174:
  4120  013832  2E3D               	decfsz	(btemp+11)^0,f,c
  4121  013834  D7FB               	goto	u8175
  4122  013836  A03A               	btfss	(btemp+8)^0,0,c
  4123  013838  D06D               	goto	l8712
  4124                           
  4125                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4126  01383A  0E7B               	movlw	123
  4127  01383C  6EE6               	movwf	postinc1,c
  4128  01383E  0E14               	movlw	20
  4129  013840  6EE6               	movwf	postinc1,c
  4130  013842  0EAE               	movlw	174
  4131  013844  6EE6               	movwf	postinc1,c
  4132  013846  0E3D               	movlw	61
  4133  013848  6EE6               	movwf	postinc1,c
  4134  01384A  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4135  013850  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4136  013856  0E00               	movlw	0
  4137  013858  BE3B               	btfsc	(btemp+9)^0,7,c
  4138  01385A  0EFF               	movlw	255
  4139  01385C  6E3C               	movwf	(btemp+10)^0,c
  4140  01385E  6E3D               	movwf	(btemp+11)^0,c
  4141  013860  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4142  013866  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4143  01386C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4144  013872  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4145  013878  0E01               	movlw	1
  4146  01387A  6EE6               	movwf	postinc1,c
  4147  01387C  ECB8  F0AC         	call	___xxtofl	;wreg free
  4148  013880  0060  F0CB  FFE6   	movff	btemp,postinc1
  4149  013886  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4150  01388C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4151  013892  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4152                           
  4153                           ;stkvar	_chan @ sp[(-8)+-1]
  4154  013898  0EF7               	movlw	-9
  4155  01389A  50E3               	movf	plusw1,w,c
  4156  01389C  6EE6               	movwf	postinc1,c
  4157  01389E  ECD6  F0C3         	call	_get_raw_result	;wreg free
  4158  0138A2  0060  F0C8  F03C   	movff	btemp,btemp+10
  4159  0138A8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4160  0138AE  503C               	movf	(btemp+10)^0,w,c
  4161  0138B0  6E36               	movwf	(btemp+4)^0,c
  4162  0138B2  503D               	movf	(btemp+11)^0,w,c
  4163  0138B4  6E37               	movwf	(btemp+5)^0,c
  4164  0138B6  6A38               	clrf	(btemp+6)^0,c
  4165  0138B8  6A39               	clrf	(btemp+7)^0,c
  4166  0138BA  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4167  0138C0  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4168  0138C6  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4169  0138CC  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4170  0138D2  0E00               	movlw	0
  4171  0138D4  6EE6               	movwf	postinc1,c
  4172  0138D6  ECB8  F0AC         	call	___xxtofl	;wreg free
  4173  0138DA  0060  F0CB  FFE6   	movff	btemp,postinc1
  4174  0138E0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4175  0138E6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4176  0138EC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4177  0138F2  EC4F  F0BF         	call	___flsub	;wreg free
  4178  0138F6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4179  0138FC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4180  013902  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4181  013908  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4182  01390E  ECC1  F08E         	call	___flmul	;wreg free
  4183  013912  D1AB               	goto	l1664
  4184  013914                     l8712:
  4185                           
  4186                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  4187  013914  0E29               	movlw	41
  4188  013916  6EE6               	movwf	postinc1,c
  4189  013918  0E5C               	movlw	92
  4190  01391A  6EE6               	movwf	postinc1,c
  4191  01391C  0E0F               	movlw	15
  4192  01391E  6EE6               	movwf	postinc1,c
  4193  013920  0E3D               	movlw	61
  4194  013922  6EE6               	movwf	postinc1,c
  4195  013924  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4196  01392A  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4197  013930  0E00               	movlw	0
  4198  013932  BE3B               	btfsc	(btemp+9)^0,7,c
  4199  013934  0EFF               	movlw	255
  4200  013936  6E3C               	movwf	(btemp+10)^0,c
  4201  013938  6E3D               	movwf	(btemp+11)^0,c
  4202  01393A  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4203  013940  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4204  013946  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4205  01394C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4206  013952  0E01               	movlw	1
  4207  013954  6EE6               	movwf	postinc1,c
  4208  013956  ECB8  F0AC         	call	___xxtofl	;wreg free
  4209  01395A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4210  013960  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4211  013966  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4212  01396C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4213                           
  4214                           ;stkvar	_chan @ sp[(-8)+-1]
  4215  013972  0EF7               	movlw	-9
  4216  013974  50E3               	movf	plusw1,w,c
  4217  013976  6EE6               	movwf	postinc1,c
  4218  013978  ECD6  F0C3         	call	_get_raw_result	;wreg free
  4219  01397C  0060  F0C8  F03C   	movff	btemp,btemp+10
  4220  013982  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4221  013988  503C               	movf	(btemp+10)^0,w,c
  4222  01398A  6E36               	movwf	(btemp+4)^0,c
  4223  01398C  503D               	movf	(btemp+11)^0,w,c
  4224  01398E  6E37               	movwf	(btemp+5)^0,c
  4225  013990  6A38               	clrf	(btemp+6)^0,c
  4226  013992  6A39               	clrf	(btemp+7)^0,c
  4227  013994  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4228  01399A  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4229  0139A0  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4230  0139A6  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4231  0139AC  0E00               	movlw	0
  4232  0139AE  6EE6               	movwf	postinc1,c
  4233  0139B0  ECB8  F0AC         	call	___xxtofl	;wreg free
  4234  0139B4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4235  0139BA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4236  0139C0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4237  0139C6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4238  0139CC  EC4F  F0BF         	call	___flsub	;wreg free
  4239  0139D0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4240  0139D6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4241  0139DC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4242  0139E2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4243  0139E8  ECC1  F08E         	call	___flmul	;wreg free
  4244  0139EC  D13E               	goto	l1664
  4245  0139EE                     l8716:
  4246                           
  4247                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4248                           ;stkvar	_chan @ sp[(0)+-1]
  4249  0139EE  0EFF               	movlw	-1
  4250  0139F0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4251  0139F6  0E00               	movlw	0
  4252  0139F8  6E3A               	movwf	(btemp+8)^0,c
  4253  0139FA  0E08               	movlw	8
  4254  0139FC  6E3B               	movwf	(btemp+9)^0,c
  4255  0139FE  2A3D               	incf	(btemp+11)^0,f,c
  4256  013A00  D003               	goto	u8194
  4257  013A02                     u8195:
  4258  013A02  343B               	rlcf	(btemp+9)^0,w,c
  4259  013A04  323B               	rrcf	(btemp+9)^0,f,c
  4260  013A06  323A               	rrcf	(btemp+8)^0,f,c
  4261  013A08                     u8194:
  4262  013A08  2E3D               	decfsz	(btemp+11)^0,f,c
  4263  013A0A  D7FB               	goto	u8195
  4264  013A0C  A03A               	btfss	(btemp+8)^0,0,c
  4265  013A0E  D008               	goto	l8724
  4266                           
  4267                           ;daq.c: 96:     return 25.0;
  4268  013A10  0E00               	movlw	0
  4269  013A12  6E32               	movwf	btemp^0,c
  4270  013A14  0E00               	movlw	0
  4271  013A16  6E33               	movwf	(btemp+1)^0,c
  4272  013A18  0EC8               	movlw	200
  4273  013A1A  6E34               	movwf	(btemp+2)^0,c
  4274  013A1C  0E41               	movlw	65
  4275  013A1E  D113               	goto	L4
  4276  013A20                     l8724:
  4277                           
  4278                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4279  013A20  0E00               	movlw	0
  4280  013A22  6EE6               	movwf	postinc1,c
  4281  013A24  0E00               	movlw	0
  4282  013A26  6EE6               	movwf	postinc1,c
  4283  013A28  0E7A               	movlw	122
  4284  013A2A  6EE6               	movwf	postinc1,c
  4285  013A2C  0E44               	movlw	68
  4286  013A2E  6EE6               	movwf	postinc1,c
  4287  013A30  0E61               	movlw	97
  4288  013A32  6EE6               	movwf	postinc1,c
  4289  013A34  0E03               	movlw	3
  4290  013A36  6EE6               	movwf	postinc1,c
  4291  013A38  0E84               	movlw	132
  4292  013A3A  6EE6               	movwf	postinc1,c
  4293  013A3C  0E40               	movlw	64
  4294  013A3E  6EE6               	movwf	postinc1,c
  4295                           
  4296                           ;stkvar	_chan @ sp[(-8)+-1]
  4297  013A40  0EF7               	movlw	-9
  4298  013A42  50E3               	movf	plusw1,w,c
  4299  013A44  6EE6               	movwf	postinc1,c
  4300  013A46  ECD6  F0C3         	call	_get_raw_result	;wreg free
  4301  013A4A  0060  F0C8  F03C   	movff	btemp,btemp+10
  4302  013A50  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4303  013A56  503C               	movf	(btemp+10)^0,w,c
  4304  013A58  6E36               	movwf	(btemp+4)^0,c
  4305  013A5A  503D               	movf	(btemp+11)^0,w,c
  4306  013A5C  6E37               	movwf	(btemp+5)^0,c
  4307  013A5E  6A38               	clrf	(btemp+6)^0,c
  4308  013A60  6A39               	clrf	(btemp+7)^0,c
  4309  013A62  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4310  013A68  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4311  013A6E  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4312  013A74  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4313  013A7A  0E00               	movlw	0
  4314  013A7C  6EE6               	movwf	postinc1,c
  4315  013A7E  ECB8  F0AC         	call	___xxtofl	;wreg free
  4316  013A82  0060  F0CB  FFE6   	movff	btemp,postinc1
  4317  013A88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4318  013A8E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4319  013A94  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4320  013A9A  ECC1  F08E         	call	___flmul	;wreg free
  4321  013A9E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4322  013AA4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4323  013AAA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4324  013AB0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4325  013AB6  ECB4  F096         	call	___fldiv	;wreg free
  4326  013ABA  D0D7               	goto	l1664
  4327  013ABC                     l8728:
  4328                           
  4329                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4330                           ;stkvar	_chan @ sp[(0)+-1]
  4331  013ABC  0EFF               	movlw	-1
  4332  013ABE  006F FF8C  F03D    	movff	plusw1,btemp+11
  4333  013AC4  0E03               	movlw	3
  4334  013AC6  6E3A               	movwf	(btemp+8)^0,c
  4335  013AC8  0E00               	movlw	0
  4336  013ACA  6E3B               	movwf	(btemp+9)^0,c
  4337  013ACC  2A3D               	incf	(btemp+11)^0,f,c
  4338  013ACE  D003               	goto	u8214
  4339  013AD0                     u8215:
  4340  013AD0  343B               	rlcf	(btemp+9)^0,w,c
  4341  013AD2  323B               	rrcf	(btemp+9)^0,f,c
  4342  013AD4  323A               	rrcf	(btemp+8)^0,f,c
  4343  013AD6                     u8214:
  4344  013AD6  2E3D               	decfsz	(btemp+11)^0,f,c
  4345  013AD8  D7FB               	goto	u8215
  4346  013ADA  B03A               	btfsc	(btemp+8)^0,0,c
  4347  013ADC  D011               	goto	u8240
  4348                           
  4349                           ;stkvar	_chan @ sp[(0)+-1]
  4350  013ADE  0EFF               	movlw	-1
  4351  013AE0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4352  013AE6  0E00               	movlw	0
  4353  013AE8  6E3A               	movwf	(btemp+8)^0,c
  4354  013AEA  0E08               	movlw	8
  4355  013AEC  6E3B               	movwf	(btemp+9)^0,c
  4356  013AEE  2A3D               	incf	(btemp+11)^0,f,c
  4357  013AF0  D003               	goto	u8234
  4358  013AF2                     u8235:
  4359  013AF2  343B               	rlcf	(btemp+9)^0,w,c
  4360  013AF4  323B               	rrcf	(btemp+9)^0,f,c
  4361  013AF6  323A               	rrcf	(btemp+8)^0,f,c
  4362  013AF8                     u8234:
  4363  013AF8  2E3D               	decfsz	(btemp+11)^0,f,c
  4364  013AFA  D7FB               	goto	u8235
  4365  013AFC  A03A               	btfss	(btemp+8)^0,0,c
  4366  013AFE  D04E               	goto	l8736
  4367  013B00                     u8240:
  4368                           
  4369                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4370  013B00  0E00               	movlw	0
  4371  013B02  6EE6               	movwf	postinc1,c
  4372  013B04  0E00               	movlw	0
  4373  013B06  6EE6               	movwf	postinc1,c
  4374  013B08  0E7A               	movlw	122
  4375  013B0A  6EE6               	movwf	postinc1,c
  4376  013B0C  0E44               	movlw	68
  4377  013B0E  6EE6               	movwf	postinc1,c
  4378  013B10  0E00               	movlw	0
  4379  013B12  6EE6               	movwf	postinc1,c
  4380  013B14  0E00               	movlw	0
  4381  013B16  6EE6               	movwf	postinc1,c
  4382  013B18  0E20               	movlw	32
  4383  013B1A  6EE6               	movwf	postinc1,c
  4384  013B1C  0E3F               	movlw	63
  4385  013B1E  6EE6               	movwf	postinc1,c
  4386                           
  4387                           ;stkvar	_chan @ sp[(-8)+-1]
  4388  013B20  0EF7               	movlw	-9
  4389  013B22  50E3               	movf	plusw1,w,c
  4390  013B24  6EE6               	movwf	postinc1,c
  4391  013B26  ECD6  F0C3         	call	_get_raw_result	;wreg free
  4392  013B2A  0060  F0C8  F03C   	movff	btemp,btemp+10
  4393  013B30  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4394  013B36  503C               	movf	(btemp+10)^0,w,c
  4395  013B38  6E36               	movwf	(btemp+4)^0,c
  4396  013B3A  503D               	movf	(btemp+11)^0,w,c
  4397  013B3C  6E37               	movwf	(btemp+5)^0,c
  4398  013B3E  6A38               	clrf	(btemp+6)^0,c
  4399  013B40  6A39               	clrf	(btemp+7)^0,c
  4400  013B42  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4401  013B48  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4402  013B4E  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4403  013B54  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4404  013B5A  0E00               	movlw	0
  4405  013B5C  6EE6               	movwf	postinc1,c
  4406  013B5E  ECB8  F0AC         	call	___xxtofl	;wreg free
  4407  013B62  0060  F0CB  FFE6   	movff	btemp,postinc1
  4408  013B68  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4409  013B6E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4410  013B74  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4411  013B7A  ECC1  F08E         	call	___flmul	;wreg free
  4412  013B7E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4413  013B84  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4414  013B8A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4415  013B90  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4416  013B96  ECB4  F096         	call	___fldiv	;wreg free
  4417  013B9A  D067               	goto	l1664
  4418  013B9C                     l8736:
  4419                           
  4420                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4421  013B9C  0E00               	movlw	0
  4422  013B9E  6EE6               	movwf	postinc1,c
  4423  013BA0  0E00               	movlw	0
  4424  013BA2  6EE6               	movwf	postinc1,c
  4425  013BA4  0E7A               	movlw	122
  4426  013BA6  6EE6               	movwf	postinc1,c
  4427  013BA8  0E44               	movlw	68
  4428  013BAA  6EE6               	movwf	postinc1,c
  4429  013BAC  0E61               	movlw	97
  4430  013BAE  6EE6               	movwf	postinc1,c
  4431  013BB0  0E03               	movlw	3
  4432  013BB2  6EE6               	movwf	postinc1,c
  4433  013BB4  0E84               	movlw	132
  4434  013BB6  6EE6               	movwf	postinc1,c
  4435  013BB8  0E40               	movlw	64
  4436  013BBA  6EE6               	movwf	postinc1,c
  4437                           
  4438                           ;stkvar	_chan @ sp[(-8)+-1]
  4439  013BBC  0EF7               	movlw	-9
  4440  013BBE  50E3               	movf	plusw1,w,c
  4441  013BC0  6EE6               	movwf	postinc1,c
  4442  013BC2  ECD6  F0C3         	call	_get_raw_result	;wreg free
  4443  013BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
  4444  013BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4445  013BD2  503C               	movf	(btemp+10)^0,w,c
  4446  013BD4  6E36               	movwf	(btemp+4)^0,c
  4447  013BD6  503D               	movf	(btemp+11)^0,w,c
  4448  013BD8  6E37               	movwf	(btemp+5)^0,c
  4449  013BDA  6A38               	clrf	(btemp+6)^0,c
  4450  013BDC  6A39               	clrf	(btemp+7)^0,c
  4451  013BDE  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4452  013BE4  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4453  013BEA  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4454  013BF0  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4455  013BF6  0E00               	movlw	0
  4456  013BF8  6EE6               	movwf	postinc1,c
  4457  013BFA  ECB8  F0AC         	call	___xxtofl	;wreg free
  4458  013BFE  0060  F0CB  FFE6   	movff	btemp,postinc1
  4459  013C04  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4460  013C0A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4461  013C10  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4462  013C16  ECC1  F08E         	call	___flmul	;wreg free
  4463  013C1A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4464  013C20  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4465  013C26  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4466  013C2C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4467  013C32  ECB4  F096         	call	___fldiv	;wreg free
  4468  013C36  D019               	goto	l1664
  4469  013C38                     l8742:
  4470                           
  4471                           ;daq.c: 109:   return 0.0;
  4472  013C38  0E00               	movlw	0
  4473  013C3A  6E32               	movwf	btemp^0,c
  4474  013C3C  0E00               	movlw	0
  4475  013C3E  6E33               	movwf	(btemp+1)^0,c
  4476  013C40  0E00               	movlw	0
  4477  013C42  6E34               	movwf	(btemp+2)^0,c
  4478  013C44  0E00               	movlw	0
  4479  013C46                     L4:
  4480  013C46  6E35               	movwf	(btemp+3)^0,c
  4481  013C48  D010               	goto	l1664
  4482  013C4A                     l8750:
  4483                           
  4484                           ;stkvar	_to_what @ sp[(0)+-2]
  4485  013C4A  0EFE               	movlw	-2
  4486  013C4C  50E3               	movf	plusw1,w,c
  4487  013C4E  6E3C               	movwf	(btemp+10)^0,c
  4488  013C50  6A3D               	clrf	(btemp+11)^0,c
  4489                           
  4490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4491                           ; Switch size 1, requested type "simple"
  4492                           ; Number of cases is 1, Range of values is 0 to 0
  4493                           ; switch strategies available:
  4494                           ; Name         Instructions Cycles
  4495                           ; simple_byte            4     3 (average)
  4496                           ;	Chosen strategy is simple_byte
  4497  013C52  503D               	movf	(btemp+11)^0,w,c
  4498  013C54  0A00               	xorlw	0	; case 0
  4499  013C56  A4D8               	btfss	status,2,c
  4500  013C58  D7EF               	goto	l8742
  4501                           
  4502                           ; Switch size 1, requested type "simple"
  4503                           ; Number of cases is 2, Range of values is 0 to 1
  4504                           ; switch strategies available:
  4505                           ; Name         Instructions Cycles
  4506                           ; simple_byte            7     4 (average)
  4507                           ;	Chosen strategy is simple_byte
  4508  013C5A  503C               	movf	(btemp+10)^0,w,c
  4509  013C5C  0A00               	xorlw	0	; case 0
  4510  013C5E  B4D8               	btfsc	status,2,c
  4511  013C60  D5B2               	goto	l8696
  4512  013C62  0A01               	xorlw	1	; case 1
  4513  013C64  B4D8               	btfsc	status,2,c
  4514  013C66  D72A               	goto	l8728
  4515  013C68  D7E7               	goto	l8742
  4516  013C6A                     l1664:
  4517                           
  4518                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4519  013C6A  52E5               	movf	postdec1,f,c
  4520  013C6C  52E5               	movf	postdec1,f,c
  4521  013C6E  0012               	return		;funcret
  4522  013C70                     __end_of_conv_raw_result:
  4523                           	opt callstack 0
  4524                           
  4525 ;; *************** function _nanf *****************
  4526 ;; Defined at:
  4527 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  s               2  [STACK] PTR const unsigned char 
  4530 ;;		 -> STR_36(1), 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  u               4  [STACK] struct .
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  4  [STACK] float 
  4535 ;; Registers used:
  4536 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/39
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    6
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_conv_raw_result
  4553 ;; This function uses a reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text17
  4557  017B3A                     __ptext17:
  4558                           	opt callstack 0
  4559  017B3A                     _nanf:
  4560                           	opt callstack 0
  4561                           
  4562                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4563  017B3A  52E6               	movf	postinc1,f,c
  4564  017B3C  52E6               	movf	postinc1,f,c
  4565  017B3E  52E6               	movf	postinc1,f,c
  4566  017B40  52E6               	movf	postinc1,f,c
  4567                           
  4568                           ;incstack = 0
  4569  017B42  0EFF               	movlw	255
  4570  017B44  6E3A               	movwf	(btemp+8)^0,c
  4571  017B46  0EFF               	movlw	255
  4572  017B48  6E3B               	movwf	(btemp+9)^0,c
  4573  017B4A  0EFF               	movlw	255
  4574  017B4C  6E3C               	movwf	(btemp+10)^0,c
  4575  017B4E  0E7F               	movlw	127
  4576  017B50  6E3D               	movwf	(btemp+11)^0,c
  4577                           
  4578                           ;stkvar	_u @ sp[(-4)+0]
  4579  017B52  0EFC               	movlw	-4
  4580  017B54  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4581  017B5A  0EFD               	movlw	-3
  4582  017B5C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4583  017B62  0EFE               	movlw	-2
  4584  017B64  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4585  017B6A  0EFF               	movlw	-1
  4586  017B6C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4587                           
  4588                           ;stkvar	_u @ sp[(-4)+0]
  4589  017B72  0EFC               	movlw	-4
  4590  017B74  006F FF8C  F032    	movff	plusw1,btemp
  4591  017B7A  0EFD               	movlw	-3
  4592  017B7C  006F FF8C  F033    	movff	plusw1,btemp+1
  4593  017B82  0EFE               	movlw	-2
  4594  017B84  006F FF8C  F034    	movff	plusw1,btemp+2
  4595  017B8A  0EFF               	movlw	-1
  4596  017B8C  006F FF8C  F035    	movff	plusw1,btemp+3
  4597                           
  4598                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4599  017B92  0EFA               	movlw	250
  4600  017B94  26E1               	addwf	fsr1l,f,c
  4601  017B96  0EFF               	movlw	255
  4602  017B98  22E2               	addwfc	fsr1h,f,c
  4603  017B9A  0012               	return		;funcret
  4604  017B9C                     __end_of_nanf:
  4605                           	opt callstack 0
  4606                           
  4607 ;; *************** function _get_raw_result *****************
  4608 ;; Defined at:
  4609 ;;		line 72 in file "daq.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  index           1  [STACK] const enum E16136
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  2  [STACK] unsigned short 
  4616 ;; Registers used:
  4617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/39
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    6
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_conv_raw_result
  4634 ;; This function uses a reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text18
  4638  0187AC                     __ptext18:
  4639                           	opt callstack 0
  4640  0187AC                     _get_raw_result:
  4641                           	opt callstack 22
  4642                           
  4643                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4644                           ;stkvar	_index @ sp[(0)+-1]
  4645                           
  4646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4647                           ;incstack = 0
  4648  0187AC  0EFF               	movlw	-1
  4649  0187AE  50E3               	movf	plusw1,w,c
  4650  0187B0  0D02               	mullw	2
  4651  0187B2  50F3               	movf	243,w,c
  4652  0187B4  0FC7               	addlw	low _R
  4653  0187B6  6ED9               	movwf	fsr2l,c
  4654  0187B8  6ADA               	clrf	fsr2h,c
  4655  0187BA  006F FF78  F032    	movff	postinc2,btemp
  4656  0187C0  006F FF74  F033    	movff	postdec2,btemp+1
  4657                           
  4658                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4659  0187C6  52E5               	movf	postdec1,f,c
  4660  0187C8  0012               	return		;funcret
  4661  0187CA                     __end_of_get_raw_result:
  4662                           	opt callstack 0
  4663                           
  4664 ;; *************** function ___xxtofl *****************
  4665 ;; Defined at:
  4666 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  sign            1  [STACK] unsigned char 
  4669 ;;  val             4  [STACK] long 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  arg             4  [STACK] unsigned long 
  4672 ;;  exp             1  [STACK] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  4  [STACK] unsigned char 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/39
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    6
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_conv_raw_result
  4693 ;; This function uses a reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text19
  4697  015970                     __ptext19:
  4698                           	opt callstack 0
  4699  015970                     ___xxtofl:
  4700                           	opt callstack 0
  4701                           
  4702                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4703  015970  0E05               	movlw	5
  4704  015972  26E1               	addwf	fsr1l,f,c
  4705  015974  0E00               	movlw	0
  4706  015976  22E2               	addwfc	fsr1h,f,c
  4707                           
  4708                           ;stkvar	_sign @ sp[(-5)+-1]
  4709                           
  4710                           ;incstack = 0
  4711  015978  0EFA               	movlw	-6
  4712  01597A  50E3               	movf	plusw1,w,c
  4713  01597C  B4D8               	btfsc	status,2,c
  4714  01597E  D01D               	goto	l8174
  4715                           
  4716                           ;stkvar	_val @ sp[(-5)+-5]
  4717  015980  0EF9               	movlw	-7
  4718  015982  AEE3               	btfss	plusw1,7,c
  4719  015984  D01A               	goto	l8174
  4720                           
  4721                           ;stkvar	_val @ sp[(-5)+-5]
  4722  015986  0EF6               	movlw	-10
  4723  015988  006F FF8C  F03A    	movff	plusw1,btemp+8
  4724  01598E  0EF7               	movlw	-9
  4725  015990  006F FF8C  F03B    	movff	plusw1,btemp+9
  4726  015996  0EF8               	movlw	-8
  4727  015998  006F FF8C  F03C    	movff	plusw1,btemp+10
  4728  01599E  0EF9               	movlw	-7
  4729  0159A0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4730  0159A6  1E3A               	comf	(btemp+8)^0,f,c
  4731  0159A8  1E3B               	comf	(btemp+9)^0,f,c
  4732  0159AA  1E3C               	comf	(btemp+10)^0,f,c
  4733  0159AC  1E3D               	comf	(btemp+11)^0,f,c
  4734  0159AE  2A3A               	incf	(btemp+8)^0,f,c
  4735  0159B0  0E00               	movlw	0
  4736  0159B2  223B               	addwfc	(btemp+9)^0,f,c
  4737  0159B4  223C               	addwfc	(btemp+10)^0,f,c
  4738  0159B6  223D               	addwfc	(btemp+11)^0,f,c
  4739  0159B8  D010               	goto	L5
  4740  0159BA                     l8174:
  4741                           
  4742                           ;stkvar	_val @ sp[(-5)+-5]
  4743  0159BA  0EF6               	movlw	-10
  4744  0159BC  006F FF8C  F03A    	movff	plusw1,btemp+8
  4745  0159C2  0EF7               	movlw	-9
  4746  0159C4  006F FF8C  F03B    	movff	plusw1,btemp+9
  4747  0159CA  0EF8               	movlw	-8
  4748  0159CC  006F FF8C  F03C    	movff	plusw1,btemp+10
  4749  0159D2  0EF9               	movlw	-7
  4750  0159D4  006F FF8C  F03D    	movff	plusw1,btemp+11
  4751  0159DA                     L5:
  4752                           
  4753                           ;stkvar	_arg @ sp[(-5)+0]
  4754  0159DA  0EFB               	movlw	-5
  4755  0159DC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4756  0159E2  0EFC               	movlw	-4
  4757  0159E4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4758  0159EA  0EFD               	movlw	-3
  4759  0159EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4760  0159F2  0EFE               	movlw	-2
  4761  0159F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4762                           
  4763                           ;stkvar	_val @ sp[(-5)+-5]
  4764  0159FA  0EF6               	movlw	-10
  4765  0159FC  50E3               	movf	plusw1,w,c
  4766  0159FE  E113               	bnz	l8182
  4767  015A00  0EF7               	movlw	-9
  4768  015A02  50E3               	movf	plusw1,w,c
  4769  015A04  E110               	bnz	l8182
  4770  015A06  0EF8               	movlw	-8
  4771  015A08  50E3               	movf	plusw1,w,c
  4772  015A0A  E10D               	bnz	l8182
  4773  015A0C  0EF9               	movlw	-7
  4774  015A0E  50E3               	movf	plusw1,w,c
  4775  015A10  A4D8               	btfss	status,2,c
  4776  015A12  D009               	goto	l8182
  4777  015A14  0E00               	movlw	0
  4778  015A16  6E32               	movwf	btemp^0,c
  4779  015A18  0E00               	movlw	0
  4780  015A1A  6E33               	movwf	(btemp+1)^0,c
  4781  015A1C  0E00               	movlw	0
  4782  015A1E  6E34               	movwf	(btemp+2)^0,c
  4783  015A20  0E00               	movlw	0
  4784  015A22  6E35               	movwf	(btemp+3)^0,c
  4785  015A24  D0A2               	goto	l2735
  4786  015A26                     l8182:
  4787  015A26  0E96               	movlw	150
  4788  015A28  6E3D               	movwf	(btemp+11)^0,c
  4789                           
  4790                           ;stkvar	_exp @ sp[(-5)+4]
  4791  015A2A  0EFF               	movlw	-1
  4792  015A2C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4793  015A32  D00B               	goto	l8186
  4794  015A34                     l8184:
  4795                           
  4796                           ;stkvar	_exp @ sp[(-5)+4]
  4797  015A34  0EFF               	movlw	-1
  4798  015A36  2AE3               	incf	plusw1,f,c
  4799                           
  4800                           ;stkvar	_arg @ sp[(-5)+0]
  4801  015A38  90D8               	bcf	status,0,c
  4802  015A3A  0EFE               	movlw	-2
  4803  015A3C  32E3               	rrcf	plusw1,f,c
  4804  015A3E  0EFD               	movlw	-3
  4805  015A40  32E3               	rrcf	plusw1,f,c
  4806  015A42  0EFC               	movlw	-4
  4807  015A44  32E3               	rrcf	plusw1,f,c
  4808  015A46  0EFB               	movlw	-5
  4809  015A48  32E3               	rrcf	plusw1,f,c
  4810  015A4A                     l8186:
  4811                           
  4812                           ;stkvar	_arg @ sp[(-5)+0]
  4813  015A4A  50E1               	movf	fsr1l,w,c
  4814  015A4C  0FFB               	addlw	-5
  4815  015A4E  6ED9               	movwf	fsr2l,c
  4816  015A50  50E2               	movf	fsr1h,w,c
  4817  015A52  6EDA               	movwf	fsr2h,c
  4818  015A54  0EFF               	movlw	255
  4819  015A56  22DA               	addwfc	fsr2h,f,c
  4820  015A58  52DE               	movf	postinc2,f,c
  4821  015A5A  52DE               	movf	postinc2,f,c
  4822  015A5C  52DE               	movf	postinc2,f,c
  4823  015A5E  0EFE               	movlw	254
  4824  015A60  14DD               	andwf	postdec2,w,c
  4825  015A62  B4D8               	btfsc	status,2,c
  4826  015A64  D018               	goto	l8194
  4827  015A66  D7E6               	goto	l8184
  4828  015A68                     l8188:
  4829                           
  4830                           ;stkvar	_exp @ sp[(-5)+4]
  4831  015A68  0EFF               	movlw	-1
  4832  015A6A  2AE3               	incf	plusw1,f,c
  4833                           
  4834                           ;stkvar	_arg @ sp[(-5)+0]
  4835  015A6C  50E1               	movf	fsr1l,w,c
  4836  015A6E  0FFB               	addlw	-5
  4837  015A70  6ED9               	movwf	fsr2l,c
  4838  015A72  50E2               	movf	fsr1h,w,c
  4839  015A74  6EDA               	movwf	fsr2h,c
  4840  015A76  0EFF               	movlw	255
  4841  015A78  22DA               	addwfc	fsr2h,f,c
  4842  015A7A  2ADE               	incf	postinc2,f,c
  4843  015A7C  0E00               	movlw	0
  4844  015A7E  22DE               	addwfc	postinc2,f,c
  4845  015A80  22DE               	addwfc	postinc2,f,c
  4846  015A82  22DE               	addwfc	postinc2,f,c
  4847                           
  4848                           ;stkvar	_arg @ sp[(-5)+0]
  4849  015A84  90D8               	bcf	status,0,c
  4850  015A86  0EFE               	movlw	-2
  4851  015A88  32E3               	rrcf	plusw1,f,c
  4852  015A8A  0EFD               	movlw	-3
  4853  015A8C  32E3               	rrcf	plusw1,f,c
  4854  015A8E  0EFC               	movlw	-4
  4855  015A90  32E3               	rrcf	plusw1,f,c
  4856  015A92  0EFB               	movlw	-5
  4857  015A94  32E3               	rrcf	plusw1,f,c
  4858  015A96                     l8194:
  4859                           
  4860                           ;stkvar	_arg @ sp[(-5)+0]
  4861  015A96  50E1               	movf	fsr1l,w,c
  4862  015A98  0FFB               	addlw	-5
  4863  015A9A  6ED9               	movwf	fsr2l,c
  4864  015A9C  50E2               	movf	fsr1h,w,c
  4865  015A9E  6EDA               	movwf	fsr2h,c
  4866  015AA0  0EFF               	movlw	255
  4867  015AA2  22DA               	addwfc	fsr2h,f,c
  4868  015AA4  52DE               	movf	postinc2,f,c
  4869  015AA6  52DE               	movf	postinc2,f,c
  4870  015AA8  52DE               	movf	postinc2,f,c
  4871  015AAA  0EFF               	movlw	255
  4872  015AAC  14DD               	andwf	postdec2,w,c
  4873  015AAE  B4D8               	btfsc	status,2,c
  4874  015AB0  D00C               	goto	l8198
  4875  015AB2  D7DA               	goto	l8188
  4876  015AB4                     l8196:
  4877                           
  4878                           ;stkvar	_exp @ sp[(-5)+4]
  4879  015AB4  0EFF               	movlw	-1
  4880  015AB6  06E3               	decf	plusw1,f,c
  4881                           
  4882                           ;stkvar	_arg @ sp[(-5)+0]
  4883  015AB8  90D8               	bcf	status,0,c
  4884  015ABA  0EFB               	movlw	-5
  4885  015ABC  36E3               	rlcf	plusw1,f,c
  4886  015ABE  0EFC               	movlw	-4
  4887  015AC0  36E3               	rlcf	plusw1,f,c
  4888  015AC2  0EFD               	movlw	-3
  4889  015AC4  36E3               	rlcf	plusw1,f,c
  4890  015AC6  0EFE               	movlw	-2
  4891  015AC8  36E3               	rlcf	plusw1,f,c
  4892  015ACA                     l8198:
  4893                           
  4894                           ;stkvar	_arg @ sp[(-5)+0]
  4895  015ACA  0EFD               	movlw	-3
  4896  015ACC  BEE3               	btfsc	plusw1,7,c
  4897  015ACE  D007               	goto	u7960
  4898                           
  4899                           ;stkvar	_exp @ sp[(-5)+4]
  4900  015AD0  0EFF               	movlw	-1
  4901  015AD2  006F FF8C  F032    	movff	plusw1,btemp
  4902  015AD8  0E02               	movlw	2
  4903  015ADA  6032               	cpfslt	btemp^0,c
  4904  015ADC  D7EB               	goto	l8196
  4905  015ADE                     u7960:
  4906                           
  4907                           ;stkvar	_exp @ sp[(-5)+4]
  4908  015ADE  0EFF               	movlw	-1
  4909  015AE0  B0E3               	btfsc	plusw1,0,c
  4910  015AE2  D002               	goto	l8206
  4911                           
  4912                           ;stkvar	_arg @ sp[(-5)+0]
  4913  015AE4  0EFD               	movlw	-3
  4914  015AE6  9EE3               	bcf	plusw1,7,c
  4915  015AE8                     l8206:
  4916                           
  4917                           ;stkvar	_exp @ sp[(-5)+4]
  4918  015AE8  50E1               	movf	fsr1l,w,c
  4919  015AEA  0FFF               	addlw	-1
  4920  015AEC  6ED9               	movwf	fsr2l,c
  4921  015AEE  50E2               	movf	fsr1h,w,c
  4922  015AF0  6EDA               	movwf	fsr2h,c
  4923  015AF2  0EFF               	movlw	255
  4924  015AF4  22DA               	addwfc	fsr2h,f,c
  4925  015AF6  90D8               	bcf	status,0,c
  4926  015AF8  32DF               	rrcf	indf2,f,c
  4927                           
  4928                           ;stkvar	_exp @ sp[(-5)+4]
  4929  015AFA  0EFF               	movlw	-1
  4930  015AFC  006F FF8C  F03D    	movff	plusw1,btemp+11
  4931  015B02  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4932  015B08  6A37               	clrf	(btemp+5)^0,c
  4933  015B0A  6A38               	clrf	(btemp+6)^0,c
  4934  015B0C  6A39               	clrf	(btemp+7)^0,c
  4935  015B0E  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4936  015B14  6A38               	clrf	(btemp+6)^0,c
  4937  015B16  6A37               	clrf	(btemp+5)^0,c
  4938  015B18  6A36               	clrf	(btemp+4)^0,c
  4939                           
  4940                           ;stkvar	_arg @ sp[(-5)+0]
  4941  015B1A  50E1               	movf	fsr1l,w,c
  4942  015B1C  0FFB               	addlw	-5
  4943  015B1E  6ED9               	movwf	fsr2l,c
  4944  015B20  50E2               	movf	fsr1h,w,c
  4945  015B22  6EDA               	movwf	fsr2h,c
  4946  015B24  0EFF               	movlw	255
  4947  015B26  22DA               	addwfc	fsr2h,f,c
  4948  015B28  5036               	movf	(btemp+4)^0,w,c
  4949  015B2A  12DE               	iorwf	postinc2,f,c
  4950  015B2C  5037               	movf	(btemp+5)^0,w,c
  4951  015B2E  12DE               	iorwf	postinc2,f,c
  4952  015B30  5038               	movf	(btemp+6)^0,w,c
  4953  015B32  12DE               	iorwf	postinc2,f,c
  4954  015B34  5039               	movf	(btemp+7)^0,w,c
  4955  015B36  12DE               	iorwf	postinc2,f,c
  4956                           
  4957                           ;stkvar	_sign @ sp[(-5)+-1]
  4958  015B38  0EFA               	movlw	-6
  4959  015B3A  50E3               	movf	plusw1,w,c
  4960  015B3C  B4D8               	btfsc	status,2,c
  4961  015B3E  D005               	goto	l8216
  4962                           
  4963                           ;stkvar	_val @ sp[(-5)+-5]
  4964  015B40  0EF9               	movlw	-7
  4965  015B42  AEE3               	btfss	plusw1,7,c
  4966  015B44  D002               	goto	l8216
  4967                           
  4968                           ;stkvar	_arg @ sp[(-5)+0]
  4969  015B46  0EFE               	movlw	-2
  4970  015B48  8EE3               	bsf	plusw1,7,c
  4971  015B4A                     l8216:
  4972                           
  4973                           ;stkvar	_arg @ sp[(-5)+0]
  4974  015B4A  0EFB               	movlw	-5
  4975  015B4C  006F FF8C  F032    	movff	plusw1,btemp
  4976  015B52  0EFC               	movlw	-4
  4977  015B54  006F FF8C  F033    	movff	plusw1,btemp+1
  4978  015B5A  0EFD               	movlw	-3
  4979  015B5C  006F FF8C  F034    	movff	plusw1,btemp+2
  4980  015B62  0EFE               	movlw	-2
  4981  015B64  006F FF8C  F035    	movff	plusw1,btemp+3
  4982  015B6A                     l2735:
  4983                           
  4984                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4985  015B6A  0EF6               	movlw	246
  4986  015B6C  26E1               	addwf	fsr1l,f,c
  4987  015B6E  0EFF               	movlw	255
  4988  015B70  22E2               	addwfc	fsr1h,f,c
  4989  015B72  0012               	return		;funcret
  4990  015B74                     __end_of___xxtofl:
  4991                           	opt callstack 0
  4992                           
  4993 ;; *************** function _clear_hid_pflags *****************
  4994 ;; Defined at:
  4995 ;;		line 40 in file "hid.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  h               1  [STACK] PTR struct H_data
  4998 ;;		 -> H(6), 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1  [STACK] void 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    6
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_main
  5021 ;; This function uses a reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text20
  5025  01869A                     __ptext20:
  5026                           	opt callstack 0
  5027  01869A                     _clear_hid_pflags:
  5028                           	opt callstack 24
  5029                           
  5030                           ;hid.c: 40: void clear_hid_pflags(H_data* h);hid.c: 41: {;hid.c: 42:  h->select_p=SW_OFF
      +                          ;
  5031                           ;stkvar	_h @ sp[(0)+-1]
  5032                           
  5033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5034                           ;incstack = 0
  5035  01869A  0EFF               	movlw	-1
  5036  01869C  50E3               	movf	plusw1,w,c
  5037  01869E  6ED9               	movwf	fsr2l,c
  5038  0186A0  6ADA               	clrf	fsr2h,c
  5039  0186A2  0E03               	movlw	3
  5040  0186A4  26D9               	addwf	fsr2l,f,c
  5041  0186A6  0E00               	movlw	0
  5042  0186A8  6EDF               	movwf	indf2,c
  5043                           
  5044                           ;hid.c: 43:  h->enter_p=SW_OFF;
  5045                           ;stkvar	_h @ sp[(0)+-1]
  5046  0186AA  0EFF               	movlw	-1
  5047  0186AC  50E3               	movf	plusw1,w,c
  5048  0186AE  6ED9               	movwf	fsr2l,c
  5049  0186B0  6ADA               	clrf	fsr2h,c
  5050  0186B2  0E05               	movlw	5
  5051  0186B4  26D9               	addwf	fsr2l,f,c
  5052  0186B6  0E00               	movlw	0
  5053  0186B8  6EDF               	movwf	indf2,c
  5054                           
  5055                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5056  0186BA  52E5               	movf	postdec1,f,c
  5057  0186BC  0012               	return		;funcret
  5058  0186BE                     __end_of_clear_hid_pflags:
  5059                           	opt callstack 0
  5060                           
  5061 ;; *************** function _clear_adc_scan *****************
  5062 ;; Defined at:
  5063 ;;		line 64 in file "daq.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;		None
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1  [STACK] void 
  5070 ;; Registers used:
  5071 ;;		None
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/39
  5074 ;;		On exit  : 3F/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    6
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;; This function uses a reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text21
  5092  0189DA                     __ptext21:
  5093                           	opt callstack 0
  5094  0189DA                     _clear_adc_scan:
  5095                           	opt callstack 24
  5096                           
  5097                           ;daq.c: 66:  R.done = 0;
  5098                           
  5099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5100                           ;incstack = 0
  5101  0189DA  0100               	movlb	0	; () banked
  5102  0189DC  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5103                           
  5104                           ; BSR set to: 0
  5105                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5106  0189DE  0012               	return		;funcret
  5107  0189E0                     __end_of_clear_adc_scan:
  5108                           	opt callstack 0
  5109                           
  5110 ;; *************** function _check_help *****************
  5111 ;; Defined at:
  5112 ;;		line 40 in file "mconfig.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  flipper         1  [STACK] const _Bool 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  estatus         1  [STACK] _Bool 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1  [STACK] _Bool 
  5119 ;; Registers used:
  5120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5121 ;; Tracked objects:
  5122 ;;		On entry : 3F/2
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5130 ;;Total ram usage:        0 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:   18
  5133 ;; This function calls:
  5134 ;;		_StartTimer
  5135 ;;		_TimerDone
  5136 ;;		_display_help
  5137 ;;		_display_info
  5138 ;;		_get_vterm_ptr
  5139 ;;		_help_button
  5140 ;;		_mode_lamp_bright
  5141 ;;		_mode_lamp_dim
  5142 ;;		_set_display_info
  5143 ;;		_set_temp_display_help
  5144 ;;		_set_vterm
  5145 ;;		_sprintf
  5146 ;;		_update_lcd
  5147 ;;		_vterm_dump
  5148 ;; This function is called by:
  5149 ;;		_main
  5150 ;; This function uses a reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text22
  5154  015748                     __ptext22:
  5155                           	opt callstack 0
  5156  015748                     _check_help:
  5157                           	opt callstack 0
  5158                           
  5159                           ; BSR set to: 0
  5160                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5161  015748  52E6               	movf	postinc1,f,c
  5162                           
  5163                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  5164                           ;stkvar	_estatus @ sp[(-1)+0]
  5165                           
  5166                           ;incstack = 0
  5167  01574A  0EFF               	movlw	-1
  5168  01574C  6AE3               	clrf	plusw1,c
  5169                           
  5170                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5171  01574E  EC7B  F0C0         	call	_help_button	;wreg free
  5172  015752  5032               	movf	btemp^0,w,c
  5173  015754  B4D8               	btfsc	status,2,c
  5174  015756  D0D3               	goto	l10438
  5175  015758  ECDD  F0C4         	call	_display_info	;wreg free
  5176  01575C  0432               	decf	btemp^0,w,c
  5177  01575E  B4D8               	btfsc	status,2,c
  5178  015760  D0CE               	goto	l10438
  5179                           
  5180                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5181  015762  0EDC               	movlw	220
  5182  015764  6EE6               	movwf	postinc1,c
  5183  015766  0E05               	movlw	5
  5184  015768  6EE6               	movwf	postinc1,c
  5185  01576A  0E0B               	movlw	11
  5186  01576C  6EE6               	movwf	postinc1,c
  5187  01576E  EC5D  F0C0         	call	_StartTimer	;wreg free
  5188                           
  5189                           ;mconfig.c: 48:   if (V.debug)
  5190  015772  0102               	movlb	2	; () banked
  5191  015774  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5192                           
  5193                           ; BSR set to: 2
  5194                           ;mconfig.c: 49:    vterm_dump();
  5195  015776  ECFE  F0B2         	call	_vterm_dump	;wreg free
  5196                           
  5197                           ;mconfig.c: 51:   set_vterm(1);
  5198  01577A  0E01               	movlw	1
  5199  01577C  6EE6               	movwf	postinc1,c
  5200  01577E  EC20  F0C4         	call	_set_vterm	;wreg free
  5201                           
  5202                           ; BSR set to: 5
  5203                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5204  015782  ECDD  F0C4         	call	_display_info	;wreg free
  5205  015786  5032               	movf	btemp^0,w,c
  5206  015788  6EE6               	movwf	postinc1,c
  5207  01578A  EC9D  F0C4         	call	_set_temp_display_help	;wreg free
  5208                           
  5209                           ; BSR set to: 2
  5210                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5211  01578E  0E01               	movlw	1
  5212  015790  6EE6               	movwf	postinc1,c
  5213  015792  ECE5  F0C3         	call	_set_display_info	;wreg free
  5214                           
  5215                           ;mconfig.c: 54:   if (flipper) {
  5216                           ;stkvar	_flipper @ sp[(-1)+-1]
  5217  015796  0EFE               	movlw	-2
  5218  015798  50E3               	movf	plusw1,w,c
  5219  01579A  B4D8               	btfsc	status,2,c
  5220  01579C  D019               	goto	l10424
  5221                           
  5222                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5223  01579E  0EC0               	movlw	low STR_18
  5224  0157A0  6EE6               	movwf	postinc1,c
  5225  0157A2  0EFF               	movlw	high STR_18
  5226  0157A4  6EE6               	movwf	postinc1,c
  5227  0157A6  0EC6               	movlw	low STR_20
  5228  0157A8  6EE6               	movwf	postinc1,c
  5229  0157AA  0EFE               	movlw	high STR_20
  5230  0157AC  6EE6               	movwf	postinc1,c
  5231  0157AE  0E01               	movlw	1
  5232  0157B0  6EE6               	movwf	postinc1,c
  5233  0157B2  0E00               	movlw	0
  5234  0157B4  6EE6               	movwf	postinc1,c
  5235  0157B6  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5236  0157BA  0060  F0CB  FFE6   	movff	btemp,postinc1
  5237  0157C0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5238  0157C6  0E06               	movlw	6
  5239  0157C8  6EE6               	movwf	postinc1,c
  5240  0157CA  ECC4  F0B5         	call	_sprintf	;wreg free
  5241                           
  5242                           ;mconfig.c: 56:   } else {
  5243  0157CE  D018               	goto	l1568
  5244  0157D0                     l10424:
  5245                           
  5246                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5247  0157D0  0ED6               	movlw	low STR_19
  5248  0157D2  6EE6               	movwf	postinc1,c
  5249  0157D4  0EFF               	movlw	high STR_19
  5250  0157D6  6EE6               	movwf	postinc1,c
  5251  0157D8  0EC6               	movlw	low STR_20
  5252  0157DA  6EE6               	movwf	postinc1,c
  5253  0157DC  0EFE               	movlw	high STR_20
  5254  0157DE  6EE6               	movwf	postinc1,c
  5255  0157E0  0E01               	movlw	1
  5256  0157E2  6EE6               	movwf	postinc1,c
  5257  0157E4  0E00               	movlw	0
  5258  0157E6  6EE6               	movwf	postinc1,c
  5259  0157E8  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5260  0157EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5261  0157F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5262  0157F8  0E06               	movlw	6
  5263  0157FA  6EE6               	movwf	postinc1,c
  5264  0157FC  ECC4  F0B5         	call	_sprintf	;wreg free
  5265  015800                     l1568:
  5266                           
  5267                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5268  015800  0102               	movlb	2	; () banked
  5269  015802  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5270  015804  32E8               	rrcf	wreg,f,c
  5271  015806  32E8               	rrcf	wreg,f,c
  5272  015808  0B03               	andlw	3
  5273  01580A  0D24               	mullw	36
  5274  01580C  0E12               	movlw	18
  5275  01580E  26F3               	addwf	243,f,c
  5276  015810  0E00               	movlw	0
  5277  015812  22F4               	addwfc	244,f,c
  5278  015814  0E0B               	movlw	low _T
  5279  015816  6E3C               	movwf	(btemp+10)^0,c
  5280  015818  0EFE               	movlw	high _T
  5281  01581A  6E3D               	movwf	(btemp+11)^0,c
  5282  01581C  50F3               	movf	243,w,c
  5283  01581E  263C               	addwf	(btemp+10)^0,f,c
  5284  015820  50F4               	movf	244,w,c
  5285  015822  223D               	addwfc	(btemp+11)^0,f,c
  5286  015824  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5287  01582A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5288  015830  0ECC               	movlw	low STR_22
  5289  015832  6EE6               	movwf	postinc1,c
  5290  015834  0EFF               	movlw	high STR_22
  5291  015836  6EE6               	movwf	postinc1,c
  5292  015838  0E01               	movlw	1
  5293  01583A  6EE6               	movwf	postinc1,c
  5294  01583C  0E01               	movlw	1
  5295  01583E  6EE6               	movwf	postinc1,c
  5296  015840  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5297  015844  0060  F0CB  FFE6   	movff	btemp,postinc1
  5298  01584A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5299  015850  0E06               	movlw	6
  5300  015852  6EE6               	movwf	postinc1,c
  5301  015854  ECC4  F0B5         	call	_sprintf	;wreg free
  5302                           
  5303                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5304  015858  0102               	movlb	2	; () banked
  5305  01585A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5306  01585C  32E8               	rrcf	wreg,f,c
  5307  01585E  32E8               	rrcf	wreg,f,c
  5308  015860  0B03               	andlw	3
  5309  015862  0D24               	mullw	36
  5310  015864  0E0B               	movlw	low _T
  5311  015866  6E3C               	movwf	(btemp+10)^0,c
  5312  015868  0EFE               	movlw	high _T
  5313  01586A  6E3D               	movwf	(btemp+11)^0,c
  5314  01586C  50F3               	movf	243,w,c
  5315  01586E  263C               	addwf	(btemp+10)^0,f,c
  5316  015870  50F4               	movf	244,w,c
  5317  015872  223D               	addwfc	(btemp+11)^0,f,c
  5318  015874  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5319  01587A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5320  015880  0ECC               	movlw	low STR_22
  5321  015882  6EE6               	movwf	postinc1,c
  5322  015884  0EFF               	movlw	high STR_22
  5323  015886  6EE6               	movwf	postinc1,c
  5324  015888  0E01               	movlw	1
  5325  01588A  6EE6               	movwf	postinc1,c
  5326  01588C  0E02               	movlw	2
  5327  01588E  6EE6               	movwf	postinc1,c
  5328  015890  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5329  015894  0060  F0CB  FFE6   	movff	btemp,postinc1
  5330  01589A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5331  0158A0  0E06               	movlw	6
  5332  0158A2  6EE6               	movwf	postinc1,c
  5333  0158A4  ECC4  F0B5         	call	_sprintf	;wreg free
  5334                           
  5335                           ;mconfig.c: 61:   V.help_id++;
  5336  0158A8  EE20  F29B         	lfsr	2,_V+155	;volatile
  5337  0158AC  38DF               	swapf	223,w,c
  5338  0158AE  6E3D               	movwf	(btemp+11)^0,c
  5339  0158B0  323D               	rrcf	(btemp+11)^0,f,c
  5340  0158B2  303D               	rrcf	(btemp+11)^0,w,c
  5341  0158B4  0B03               	andlw	3
  5342  0158B6  6E3D               	movwf	(btemp+11)^0,c
  5343  0158B8  2A3D               	incf	(btemp+11)^0,f,c
  5344  0158BA  3A3D               	swapf	(btemp+11)^0,f,c
  5345  0158BC  363D               	rlcf	(btemp+11)^0,f,c
  5346  0158BE  363D               	rlcf	(btemp+11)^0,f,c
  5347  0158C0  50DF               	movf	223,w,c
  5348  0158C2  183D               	xorwf	(btemp+11)^0,w,c
  5349  0158C4  0B3F               	andlw	-193
  5350  0158C6  183D               	xorwf	(btemp+11)^0,w,c
  5351  0158C8  6EDF               	movwf	223,c
  5352                           
  5353                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  5354  0158CA  0EB8               	movlw	184
  5355  0158CC  6EE6               	movwf	postinc1,c
  5356  0158CE  0E0B               	movlw	11
  5357  0158D0  6EE6               	movwf	postinc1,c
  5358  0158D2  0E09               	movlw	9
  5359  0158D4  6EE6               	movwf	postinc1,c
  5360  0158D6  EC5D  F0C0         	call	_StartTimer	;wreg free
  5361                           
  5362                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  5363  0158DA  0EB8               	movlw	184
  5364  0158DC  6EE6               	movwf	postinc1,c
  5365  0158DE  0E0B               	movlw	11
  5366  0158E0  6EE6               	movwf	postinc1,c
  5367  0158E2  0E07               	movlw	7
  5368  0158E4  6EE6               	movwf	postinc1,c
  5369  0158E6  EC5D  F0C0         	call	_StartTimer	;wreg free
  5370                           
  5371                           ;mconfig.c: 64:   mode_lamp_bright();
  5372  0158EA  ECAC  F0C4         	call	_mode_lamp_bright	;wreg free
  5373                           
  5374                           ;mconfig.c: 65:   update_lcd(1);
  5375  0158EE  0E01               	movlw	1
  5376  0158F0  6EE6               	movwf	postinc1,c
  5377  0158F2  EC3D  F0B5         	call	_update_lcd	;wreg free
  5378                           
  5379                           ;mconfig.c: 66:   estatus=1;
  5380                           ;stkvar	_estatus @ sp[(-1)+0]
  5381  0158F6  0EFF               	movlw	-1
  5382  0158F8  6AE3               	clrf	plusw1,c
  5383  0158FA  2AE3               	incf	plusw1,f,c
  5384                           
  5385                           ;mconfig.c: 67:  } else {
  5386  0158FC  D032               	goto	l10454
  5387  0158FE                     l10438:
  5388                           
  5389                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  5390  0158FE  0E09               	movlw	9
  5391  015900  6EE6               	movwf	postinc1,c
  5392  015902  EC5F  F0C3         	call	_TimerDone	;wreg free
  5393  015906  5032               	movf	btemp^0,w,c
  5394  015908  B4D8               	btfsc	status,2,c
  5395  01590A  D02B               	goto	l10454
  5396                           
  5397                           ;mconfig.c: 69:    set_vterm(0);
  5398  01590C  0E00               	movlw	0
  5399  01590E  6EE6               	movwf	postinc1,c
  5400  015910  EC20  F0C4         	call	_set_vterm	;wreg free
  5401                           
  5402                           ; BSR set to: 5
  5403                           ;mconfig.c: 70:    V.help = 0;
  5404  015914  0102               	movlb	2	; () banked
  5405  015916  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5406                           
  5407                           ; BSR set to: 2
  5408                           ;mconfig.c: 71:    set_display_info(display_help());
  5409  015918  ECE1  F0C4         	call	_display_help	;wreg free
  5410  01591C  5032               	movf	btemp^0,w,c
  5411  01591E  6EE6               	movwf	postinc1,c
  5412  015920  ECE5  F0C3         	call	_set_display_info	;wreg free
  5413                           
  5414                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  5415  015924  0060  FA57  FFE6   	movff	_V+149,postinc1
  5416  01592A  0060  FA5B  FFE6   	movff	_V+150,postinc1
  5417  015930  EC49  F0C4         	call	_mode_lamp_dim	;wreg free
  5418                           
  5419                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  5420  015934  0E0B               	movlw	11
  5421  015936  6EE6               	movwf	postinc1,c
  5422  015938  EC5F  F0C3         	call	_TimerDone	;wreg free
  5423  01593C  5032               	movf	btemp^0,w,c
  5424  01593E  B4D8               	btfsc	status,2,c
  5425  015940  D010               	goto	l10454
  5426                           
  5427                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  5428  015942  0102               	movlb	2	; () banked
  5429  015944  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5430  015946  A4D8               	btfss	status,2,c
  5431  015948  D002               	goto	u10420
  5432  01594A  0E01               	movlw	1
  5433  01594C  D001               	goto	u10430
  5434  01594E                     u10420:
  5435  01594E  0E00               	movlw	0
  5436  015950                     u10430:
  5437  015950  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5438                           
  5439                           ; BSR set to: 2
  5440                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5441  015952  0EDC               	movlw	220
  5442  015954  6EE6               	movwf	postinc1,c
  5443  015956  0E05               	movlw	5
  5444  015958  6EE6               	movwf	postinc1,c
  5445  01595A  0E0B               	movlw	11
  5446  01595C  6EE6               	movwf	postinc1,c
  5447  01595E  EC5D  F0C0         	call	_StartTimer	;wreg free
  5448  015962                     l10454:
  5449                           
  5450                           ;mconfig.c: 79:  return estatus;
  5451                           ;stkvar	_estatus @ sp[(-1)+0]
  5452  015962  0EFF               	movlw	-1
  5453  015964  006F FF8C  F032    	movff	plusw1,btemp
  5454                           
  5455                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5456  01596A  52E5               	movf	postdec1,f,c
  5457  01596C  52E5               	movf	postdec1,f,c
  5458  01596E  0012               	return		;funcret
  5459  015970                     __end_of_check_help:
  5460                           	opt callstack 0
  5461                           
  5462 ;; *************** function _vterm_dump *****************
  5463 ;; Defined at:
  5464 ;;		line 121 in file "mconfig.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;		None
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;		None
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1  [STACK] void 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5473 ;; Tracked objects:
  5474 ;;		On entry : 3F/2
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5482 ;;Total ram usage:        0 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:   17
  5485 ;; This function calls:
  5486 ;;		_WaitMs
  5487 ;;		_eaDogM_WriteStringAtPos
  5488 ;;		_get_vterm_ptr
  5489 ;;		_sprintf
  5490 ;;		_wait_lcd_done
  5491 ;; This function is called by:
  5492 ;;		_check_help
  5493 ;; This function uses a reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text23
  5497  0165FC                     __ptext23:
  5498                           	opt callstack 0
  5499  0165FC                     _vterm_dump:
  5500                           	opt callstack 12
  5501                           
  5502                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5503                           
  5504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5505                           ;incstack = 0
  5506  0165FC  0E01               	movlw	1
  5507  0165FE  6EE6               	movwf	postinc1,c
  5508  016600  0E00               	movlw	0
  5509  016602  6EE6               	movwf	postinc1,c
  5510  016604  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5511  016608  0060  F0CB  FFE6   	movff	btemp,postinc1
  5512  01660E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5513  016614  0E00               	movlw	0
  5514  016616  6EE6               	movwf	postinc1,c
  5515  016618  0E00               	movlw	0
  5516  01661A  6EE6               	movwf	postinc1,c
  5517  01661C  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5518  016620  0060  F0CB  FFE6   	movff	btemp,postinc1
  5519  016626  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5520  01662C  0EA2               	movlw	low STR_24
  5521  01662E  6EE6               	movwf	postinc1,c
  5522  016630  0EFF               	movlw	high STR_24
  5523  016632  6EE6               	movwf	postinc1,c
  5524  016634  0E01               	movlw	low (_V+1)
  5525  016636  6EE6               	movwf	postinc1,c
  5526  016638  0E02               	movlw	high (_V+1)
  5527  01663A  6EE6               	movwf	postinc1,c
  5528  01663C  0E08               	movlw	8
  5529  01663E  6EE6               	movwf	postinc1,c
  5530  016640  ECC4  F0B5         	call	_sprintf	;wreg free
  5531                           
  5532                           ;mconfig.c: 124:  wait_lcd_done();
  5533  016644  EC12  F0C4         	call	_wait_lcd_done	;wreg free
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5537  016648  0E01               	movlw	low (_V+1)
  5538  01664A  6EE6               	movwf	postinc1,c
  5539  01664C  0E02               	movlw	high (_V+1)
  5540  01664E  6EE6               	movwf	postinc1,c
  5541  016650  0E00               	movlw	0
  5542  016652  6EE6               	movwf	postinc1,c
  5543  016654  0E00               	movlw	0
  5544  016656  6EE6               	movwf	postinc1,c
  5545  016658  ECB2  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5546                           
  5547                           ; BSR set to: 59
  5548                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5549  01665C  0E01               	movlw	1
  5550  01665E  6EE6               	movwf	postinc1,c
  5551  016660  0E01               	movlw	1
  5552  016662  6EE6               	movwf	postinc1,c
  5553  016664  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5554  016668  0060  F0CB  FFE6   	movff	btemp,postinc1
  5555  01666E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5556  016674  0E00               	movlw	0
  5557  016676  6EE6               	movwf	postinc1,c
  5558  016678  0E01               	movlw	1
  5559  01667A  6EE6               	movwf	postinc1,c
  5560  01667C  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5561  016680  0060  F0CB  FFE6   	movff	btemp,postinc1
  5562  016686  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5563  01668C  0EA2               	movlw	low STR_24
  5564  01668E  6EE6               	movwf	postinc1,c
  5565  016690  0EFF               	movlw	high STR_24
  5566  016692  6EE6               	movwf	postinc1,c
  5567  016694  0E01               	movlw	low (_V+1)
  5568  016696  6EE6               	movwf	postinc1,c
  5569  016698  0E02               	movlw	high (_V+1)
  5570  01669A  6EE6               	movwf	postinc1,c
  5571  01669C  0E08               	movlw	8
  5572  01669E  6EE6               	movwf	postinc1,c
  5573  0166A0  ECC4  F0B5         	call	_sprintf	;wreg free
  5574                           
  5575                           ;mconfig.c: 127:  wait_lcd_done();
  5576  0166A4  EC12  F0C4         	call	_wait_lcd_done	;wreg free
  5577                           
  5578                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5579  0166A8  0E01               	movlw	low (_V+1)
  5580  0166AA  6EE6               	movwf	postinc1,c
  5581  0166AC  0E02               	movlw	high (_V+1)
  5582  0166AE  6EE6               	movwf	postinc1,c
  5583  0166B0  0E00               	movlw	0
  5584  0166B2  6EE6               	movwf	postinc1,c
  5585  0166B4  0E01               	movlw	1
  5586  0166B6  6EE6               	movwf	postinc1,c
  5587  0166B8  ECB2  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5588                           
  5589                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5590  0166BC  0E01               	movlw	1
  5591  0166BE  6EE6               	movwf	postinc1,c
  5592  0166C0  0E02               	movlw	2
  5593  0166C2  6EE6               	movwf	postinc1,c
  5594  0166C4  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5595  0166C8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5596  0166CE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5597  0166D4  0E00               	movlw	0
  5598  0166D6  6EE6               	movwf	postinc1,c
  5599  0166D8  0E02               	movlw	2
  5600  0166DA  6EE6               	movwf	postinc1,c
  5601  0166DC  EC64  F0C1         	call	_get_vterm_ptr	;wreg free
  5602  0166E0  0060  F0CB  FFE6   	movff	btemp,postinc1
  5603  0166E6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5604  0166EC  0EA2               	movlw	low STR_24
  5605  0166EE  6EE6               	movwf	postinc1,c
  5606  0166F0  0EFF               	movlw	high STR_24
  5607  0166F2  6EE6               	movwf	postinc1,c
  5608  0166F4  0E01               	movlw	low (_V+1)
  5609  0166F6  6EE6               	movwf	postinc1,c
  5610  0166F8  0E02               	movlw	high (_V+1)
  5611  0166FA  6EE6               	movwf	postinc1,c
  5612  0166FC  0E08               	movlw	8
  5613  0166FE  6EE6               	movwf	postinc1,c
  5614  016700  ECC4  F0B5         	call	_sprintf	;wreg free
  5615                           
  5616                           ;mconfig.c: 130:  wait_lcd_done();
  5617  016704  EC12  F0C4         	call	_wait_lcd_done	;wreg free
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5621  016708  0E01               	movlw	low (_V+1)
  5622  01670A  6EE6               	movwf	postinc1,c
  5623  01670C  0E02               	movlw	high (_V+1)
  5624  01670E  6EE6               	movwf	postinc1,c
  5625  016710  0E00               	movlw	0
  5626  016712  6EE6               	movwf	postinc1,c
  5627  016714  0E02               	movlw	2
  5628  016716  6EE6               	movwf	postinc1,c
  5629  016718  ECB2  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  5630                           
  5631                           ; BSR set to: 59
  5632                           ;mconfig.c: 132:  WaitMs(3000);
  5633  01671C  0EB8               	movlw	184
  5634  01671E  6EE6               	movwf	postinc1,c
  5635  016720  0E0B               	movlw	11
  5636  016722  6EE6               	movwf	postinc1,c
  5637  016724  EC97  F0C0         	call	_WaitMs	;wreg free
  5638                           
  5639                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5640  016728  0012               	return		;funcret
  5641  01672A                     __end_of_vterm_dump:
  5642                           	opt callstack 0
  5643                           
  5644 ;; *************** function _sprintf *****************
  5645 ;; Defined at:
  5646 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  s               2  [STACK] PTR unsigned char 
  5649 ;;		 -> D.lcd(216), D(218), V(187), 
  5650 ;;  fmt             2  [STACK] PTR const unsigned char 
  5651 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  5652 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  5653 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  5654 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  5655 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(19), 
  5656 ;;		 -> STR_10(19), STR_9(19), STR_8(17), STR_6(15), 
  5657 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  f               6  [STACK] struct _IO_FILE
  5660 ;;  ap              2  [STACK] PTR void [1]
  5661 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5662 ;;  ret             2    0        int 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  2  [STACK] int 
  5665 ;; Registers used:
  5666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/5
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5676 ;;Total ram usage:        0 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:   14
  5679 ;; This function calls:
  5680 ;;		_vfprintf
  5681 ;; This function is called by:
  5682 ;;		_main
  5683 ;;		_check_help
  5684 ;;		_vterm_dump
  5685 ;; This function uses a reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text24
  5689  016B88                     __ptext24:
  5690                           	opt callstack 0
  5691  016B88                     _sprintf:
  5692                           	opt callstack 0
  5693                           
  5694                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5695  016B88  0E08               	movlw	8
  5696  016B8A  26E1               	addwf	fsr1l,f,c
  5697  016B8C  0E00               	movlw	0
  5698  016B8E  22E2               	addwfc	fsr1h,f,c
  5699                           
  5700                           ;incstack = 0
  5701  016B90  0EFE               	movlw	254
  5702  016B92  6E3C               	movwf	(btemp+10)^0,c
  5703  016B94  0EFF               	movlw	255
  5704  016B96  6E3D               	movwf	(btemp+11)^0,c
  5705                           
  5706                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5707  016B98  0EF5               	movlw	245
  5708  016B9A  24E1               	addwf	fsr1l,w,c
  5709  016B9C  6E3A               	movwf	(btemp+8)^0,c
  5710  016B9E  0EFF               	movlw	255
  5711  016BA0  20E2               	addwfc	fsr1h,w,c
  5712  016BA2  6E3B               	movwf	(btemp+9)^0,c
  5713  016BA4  503C               	movf	(btemp+10)^0,w,c
  5714  016BA6  263A               	addwf	(btemp+8)^0,f,c
  5715  016BA8  503D               	movf	(btemp+11)^0,w,c
  5716  016BAA  223B               	addwfc	(btemp+9)^0,f,c
  5717                           
  5718                           ;stkvar	_ap @ sp[(-8)+6]
  5719  016BAC  0EFF               	movlw	-1
  5720  016BAE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5721  016BB4  0EFE               	movlw	-2
  5722  016BB6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5723                           
  5724                           ;stkvar	_s @ sp[(-8)+-3]
  5725  016BBC  0EF5               	movlw	-11
  5726  016BBE  006F FF8C  F03C    	movff	plusw1,btemp+10
  5727  016BC4  0EF6               	movlw	-10
  5728  016BC6  006F FF8C  F03D    	movff	plusw1,btemp+11
  5729                           
  5730                           ;stkvar	_f @ sp[(-8)+0]
  5731  016BCC  0EF9               	movlw	-7
  5732  016BCE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5733  016BD4  0EF8               	movlw	-8
  5734  016BD6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5735                           
  5736                           ;stkvar	_f @ sp[(-8)+0]
  5737  016BDC  0EFA               	movlw	250
  5738  016BDE  24E1               	addwf	fsr1l,w,c
  5739  016BE0  6ED9               	movwf	fsr2l,c
  5740  016BE2  0EFF               	movlw	255
  5741  016BE4  20E2               	addwfc	fsr1h,w,c
  5742  016BE6  6EDA               	movwf	fsr2h,c
  5743  016BE8  0E00               	movlw	0
  5744  016BEA  6EDE               	movwf	postinc2,c
  5745  016BEC  0E00               	movlw	0
  5746  016BEE  6EDD               	movwf	postdec2,c
  5747                           
  5748                           ;stkvar	_f @ sp[(-8)+0]
  5749  016BF0  0EFC               	movlw	252
  5750  016BF2  24E1               	addwf	fsr1l,w,c
  5751  016BF4  6ED9               	movwf	fsr2l,c
  5752  016BF6  0EFF               	movlw	255
  5753  016BF8  20E2               	addwfc	fsr1h,w,c
  5754  016BFA  6EDA               	movwf	fsr2h,c
  5755  016BFC  0E00               	movlw	0
  5756  016BFE  6EDE               	movwf	postinc2,c
  5757  016C00  0E00               	movlw	0
  5758  016C02  6EDD               	movwf	postdec2,c
  5759                           
  5760                           ;stkvar	_ap @ sp[(-8)+6]
  5761  016C04  0EFE               	movlw	254
  5762  016C06  24E1               	addwf	fsr1l,w,c
  5763  016C08  6E32               	movwf	btemp^0,c
  5764  016C0A  0EFF               	movlw	255
  5765  016C0C  20E2               	addwfc	fsr1h,w,c
  5766  016C0E  6E33               	movwf	(btemp+1)^0,c
  5767  016C10  0060  F0CB  FFE6   	movff	btemp,postinc1
  5768  016C16  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5769                           
  5770                           ;stkvar	_fmt @ sp[(-10)+-5]
  5771  016C1C  0EF1               	movlw	-15
  5772  016C1E  006F FF8F FFE6     	movff	plusw1,postinc1
  5773  016C24  006F FF8F FFE6     	movff	plusw1,postinc1
  5774                           
  5775                           ;stkvar	_f @ sp[(-12)+0]
  5776  016C2A  0EF4               	movlw	244
  5777  016C2C  24E1               	addwf	fsr1l,w,c
  5778  016C2E  6E32               	movwf	btemp^0,c
  5779  016C30  0EFF               	movlw	255
  5780  016C32  20E2               	addwfc	fsr1h,w,c
  5781  016C34  6E33               	movwf	(btemp+1)^0,c
  5782  016C36  0060  F0CB  FFE6   	movff	btemp,postinc1
  5783  016C3C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5784  016C42  ECB7  F0B8         	call	_vfprintf	;wreg free
  5785                           
  5786                           ;stkvar	_f @ sp[(-8)+0]
  5787  016C46  0EFA               	movlw	250
  5788  016C48  24E1               	addwf	fsr1l,w,c
  5789  016C4A  6ED9               	movwf	fsr2l,c
  5790  016C4C  0EFF               	movlw	255
  5791  016C4E  20E2               	addwfc	fsr1h,w,c
  5792  016C50  6EDA               	movwf	fsr2h,c
  5793  016C52  006F FF78  F03C    	movff	postinc2,btemp+10
  5794  016C58  006F FF74  F03D    	movff	postdec2,btemp+11
  5795                           
  5796                           ;stkvar	_s @ sp[(-8)+-3]
  5797  016C5E  0EF5               	movlw	-11
  5798  016C60  006F FF8C  F03A    	movff	plusw1,btemp+8
  5799  016C66  0EF6               	movlw	-10
  5800  016C68  006F FF8C  F03B    	movff	plusw1,btemp+9
  5801  016C6E  503C               	movf	(btemp+10)^0,w,c
  5802  016C70  243A               	addwf	(btemp+8)^0,w,c
  5803  016C72  6ED9               	movwf	fsr2l,c
  5804  016C74  503D               	movf	(btemp+11)^0,w,c
  5805  016C76  203B               	addwfc	(btemp+9)^0,w,c
  5806  016C78  6EDA               	movwf	fsr2h,c
  5807  016C7A  0E00               	movlw	0
  5808  016C7C  6EDF               	movwf	indf2,c
  5809                           
  5810                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5811  016C7E  0EF8               	movlw	248
  5812  016C80  26E1               	addwf	fsr1l,f,c
  5813  016C82  0EFF               	movlw	255
  5814  016C84  22E2               	addwfc	fsr1h,f,c
  5815  016C86  52E5               	movf	postdec1,f,c
  5816  016C88  50E7               	movf	indf1,w,c
  5817  016C8A  5EE1               	subwf	fsr1l,f,c
  5818  016C8C  0E00               	movlw	0
  5819  016C8E  5AE2               	subwfb	fsr1h,f,c
  5820  016C90  0012               	return		;funcret
  5821  016C92                     __end_of_sprintf:
  5822                           	opt callstack 0
  5823                           
  5824 ;; *************** function _get_vterm_ptr *****************
  5825 ;; Defined at:
  5826 ;;		line 116 in file "mconfig.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  line            1  [STACK] const unsigned char 
  5829 ;;  vterm           1  [STACK] const unsigned char 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  2  [STACK] PTR unsigned char 
  5834 ;; Registers used:
  5835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/5
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5845 ;;Total ram usage:        0 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    6
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_main
  5852 ;;		_check_help
  5853 ;;		_vterm_dump
  5854 ;; This function uses a reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text25
  5858  0182C8                     __ptext25:
  5859                           	opt callstack 0
  5860  0182C8                     _get_vterm_ptr:
  5861                           	opt callstack 24
  5862                           
  5863                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  5864                           ;stkvar	_vterm @ sp[(0)+-2]
  5865                           
  5866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5867                           ;incstack = 0
  5868  0182C8  0EFE               	movlw	-2
  5869  0182CA  50E3               	movf	plusw1,w,c
  5870  0182CC  0B03               	andlw	3
  5871  0182CE  0D36               	mullw	54
  5872  0182D0  0E00               	movlw	low _D
  5873  0182D2  6E32               	movwf	btemp^0,c
  5874  0182D4  0E05               	movlw	high _D
  5875  0182D6  6E33               	movwf	(btemp+1)^0,c
  5876  0182D8  50F3               	movf	243,w,c
  5877  0182DA  2632               	addwf	btemp^0,f,c
  5878  0182DC  50F4               	movf	244,w,c
  5879  0182DE  2233               	addwfc	(btemp+1)^0,f,c
  5880                           
  5881                           ;stkvar	_line @ sp[(0)+-1]
  5882  0182E0  0EFF               	movlw	-1
  5883  0182E2  50E3               	movf	plusw1,w,c
  5884  0182E4  0B03               	andlw	3
  5885  0182E6  0D12               	mullw	18
  5886  0182E8  50F3               	movf	243,w,c
  5887  0182EA  2632               	addwf	btemp^0,f,c
  5888  0182EC  50F4               	movf	244,w,c
  5889  0182EE  2233               	addwfc	(btemp+1)^0,f,c
  5890                           
  5891                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5892  0182F0  52E5               	movf	postdec1,f,c
  5893  0182F2  52E5               	movf	postdec1,f,c
  5894  0182F4  0012               	return		;funcret
  5895  0182F6                     __end_of_get_vterm_ptr:
  5896                           	opt callstack 0
  5897                           
  5898 ;; *************** function _WaitMs *****************
  5899 ;; Defined at:
  5900 ;;		line 32 in file "timers.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  numMilliseco    2  [STACK] const unsigned short 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1  [STACK] void 
  5907 ;; Registers used:
  5908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/2
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5918 ;;Total ram usage:        0 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; Hardware stack levels required when called:    7
  5921 ;; This function calls:
  5922 ;;		_StartTimer
  5923 ;;		_TimerDone
  5924 ;; This function is called by:
  5925 ;;		_main
  5926 ;;		_vterm_dump
  5927 ;; This function uses a reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text26
  5931  01812E                     __ptext26:
  5932                           	opt callstack 0
  5933  01812E                     _WaitMs:
  5934                           	opt callstack 21
  5935                           
  5936                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5937                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5938                           
  5939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5940                           ;incstack = 0
  5941  01812E  0EFE               	movlw	-2
  5942  018130  006F FF8F FFE6     	movff	plusw1,postinc1
  5943  018136  006F FF8F FFE6     	movff	plusw1,postinc1
  5944  01813C  0E00               	movlw	0
  5945  01813E  6EE6               	movwf	postinc1,c
  5946  018140  EC5D  F0C0         	call	_StartTimer	;wreg free
  5947                           
  5948                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5949  018144  D005               	goto	l8126
  5950  018146                     l1498:
  5951                           
  5952                           ;timers.c: 36:   __nop();
  5953  018146  F000               	nop	
  5954                           
  5955                           ;timers.c: 37:   __nop();
  5956  018148  F000               	nop	
  5957                           
  5958                           ;timers.c: 38:   __nop();
  5959  01814A  F000               	nop	
  5960                           
  5961                           ;timers.c: 39:   __nop();
  5962  01814C  F000               	nop	
  5963  01814E  0004               	clrwdt		;# 
  5964  018150                     l8126:
  5965                           
  5966                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5967  018150  0E00               	movlw	0
  5968  018152  6EE6               	movwf	postinc1,c
  5969  018154  EC5F  F0C3         	call	_TimerDone	;wreg free
  5970  018158  5032               	movf	btemp^0,w,c
  5971  01815A  B4D8               	btfsc	status,2,c
  5972  01815C  D7F4               	goto	l1498
  5973                           
  5974                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5975  01815E  52E5               	movf	postdec1,f,c
  5976  018160  52E5               	movf	postdec1,f,c
  5977  018162  0012               	return		;funcret
  5978  018164                     __end_of_WaitMs:
  5979                           	opt callstack 0
  5980                           
  5981 ;; *************** function _update_lcd *****************
  5982 ;; Defined at:
  5983 ;;		line 85 in file "mconfig.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  vterm           1  [STACK] unsigned char 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;		None
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1  [STACK] unsigned char 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/5
  5994 ;;		On exit  : 1/1
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6001 ;;Total ram usage:        0 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:   17
  6004 ;; This function calls:
  6005 ;;		_eaDogM_WriteStringAtPos
  6006 ;;		_wait_lcd_done
  6007 ;; This function is called by:
  6008 ;;		_main
  6009 ;;		_check_help
  6010 ;; This function uses a reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text27
  6014  016A7A                     __ptext27:
  6015                           	opt callstack 0
  6016  016A7A                     _update_lcd:
  6017                           	opt callstack 13
  6018                           
  6019                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6020                           ;stkvar	_vterm @ sp[(0)+-1]
  6021                           
  6022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6023                           ;incstack = 0
  6024  016A7A  0EFF               	movlw	-1
  6025  016A7C  006F FF8C  F032    	movff	plusw1,btemp
  6026  016A82  0E03               	movlw	3
  6027  016A84  1632               	andwf	btemp^0,f,c
  6028  016A86  0EFF               	movlw	-1
  6029  016A88  0060  F0CB  FFE3   	movff	btemp,plusw1
  6030                           
  6031                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  6032  016A8E  0105               	movlb	5	; () banked
  6033  016A90  A1D8               	btfss	(_D+216)& (0+255),0,b
  6034  016A92  D004               	goto	l10306
  6035                           
  6036                           ; BSR set to: 5
  6037                           ;stkvar	_vterm @ sp[(0)+-1]
  6038  016A94  0EFF               	movlw	-1
  6039  016A96  50E3               	movf	plusw1,w,c
  6040  016A98  B4D8               	btfsc	status,2,c
  6041  016A9A  D074               	goto	l1576
  6042  016A9C                     l10306:
  6043                           
  6044                           ; BSR set to: 5
  6045                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  6046                           ;stkvar	_vterm @ sp[(0)+-1]
  6047  016A9C  0EFF               	movlw	-1
  6048  016A9E  50E3               	movf	plusw1,w,c
  6049  016AA0  0D36               	mullw	54
  6050  016AA2  0E10               	movlw	low (_D+16)
  6051  016AA4  24F3               	addwf	243,w,c
  6052  016AA6  6ED9               	movwf	fsr2l,c
  6053  016AA8  0E05               	movlw	high (_D+16)
  6054  016AAA  20F4               	addwfc	prodh,w,c
  6055  016AAC  6EDA               	movwf	fsr2h,c
  6056  016AAE  0E00               	movlw	0
  6057  016AB0  6EDF               	movwf	indf2,c
  6058                           
  6059                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  6060                           ;stkvar	_vterm @ sp[(0)+-1]
  6061  016AB2  0EFF               	movlw	-1
  6062  016AB4  50E3               	movf	plusw1,w,c
  6063  016AB6  0D36               	mullw	54
  6064  016AB8  0E22               	movlw	low (_D+34)
  6065  016ABA  24F3               	addwf	243,w,c
  6066  016ABC  6ED9               	movwf	fsr2l,c
  6067  016ABE  0E05               	movlw	high (_D+34)
  6068  016AC0  20F4               	addwfc	prodh,w,c
  6069  016AC2  6EDA               	movwf	fsr2h,c
  6070  016AC4  0E00               	movlw	0
  6071  016AC6  6EDF               	movwf	indf2,c
  6072                           
  6073                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  6074                           ;stkvar	_vterm @ sp[(0)+-1]
  6075  016AC8  0EFF               	movlw	-1
  6076  016ACA  50E3               	movf	plusw1,w,c
  6077  016ACC  0D36               	mullw	54
  6078  016ACE  0E34               	movlw	low (_D+52)
  6079  016AD0  24F3               	addwf	243,w,c
  6080  016AD2  6ED9               	movwf	fsr2l,c
  6081  016AD4  0E05               	movlw	high (_D+52)
  6082  016AD6  20F4               	addwfc	prodh,w,c
  6083  016AD8  6EDA               	movwf	fsr2h,c
  6084  016ADA  0E00               	movlw	0
  6085  016ADC  6EDF               	movwf	indf2,c
  6086                           
  6087                           ; BSR set to: 5
  6088                           ;mconfig.c: 95:  wait_lcd_done();
  6089  016ADE  EC12  F0C4         	call	_wait_lcd_done	;wreg free
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6093                           ;stkvar	_vterm @ sp[(0)+-1]
  6094  016AE2  0EFF               	movlw	-1
  6095  016AE4  50E3               	movf	plusw1,w,c
  6096  016AE6  0D36               	mullw	54
  6097  016AE8  0E00               	movlw	low _D
  6098  016AEA  6E3C               	movwf	(btemp+10)^0,c
  6099  016AEC  0E05               	movlw	high _D
  6100  016AEE  6E3D               	movwf	(btemp+11)^0,c
  6101  016AF0  50F3               	movf	243,w,c
  6102  016AF2  263C               	addwf	(btemp+10)^0,f,c
  6103  016AF4  50F4               	movf	244,w,c
  6104  016AF6  223D               	addwfc	(btemp+11)^0,f,c
  6105  016AF8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6106  016AFE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6107  016B04  0E00               	movlw	0
  6108  016B06  6EE6               	movwf	postinc1,c
  6109  016B08  0E00               	movlw	0
  6110  016B0A  6EE6               	movwf	postinc1,c
  6111  016B0C  ECB2  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  6112                           
  6113                           ; BSR set to: 59
  6114                           ;mconfig.c: 97:  wait_lcd_done();
  6115  016B10  EC12  F0C4         	call	_wait_lcd_done	;wreg free
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6119                           ;stkvar	_vterm @ sp[(0)+-1]
  6120  016B14  0EFF               	movlw	-1
  6121  016B16  50E3               	movf	plusw1,w,c
  6122  016B18  0D36               	mullw	54
  6123  016B1A  0E00               	movlw	low _D
  6124  016B1C  6E3C               	movwf	(btemp+10)^0,c
  6125  016B1E  0E05               	movlw	high _D
  6126  016B20  6E3D               	movwf	(btemp+11)^0,c
  6127  016B22  0E12               	movlw	18
  6128  016B24  263C               	addwf	(btemp+10)^0,f,c
  6129  016B26  0E00               	movlw	0
  6130  016B28  223D               	addwfc	(btemp+11)^0,f,c
  6131  016B2A  50F3               	movf	243,w,c
  6132  016B2C  263C               	addwf	(btemp+10)^0,f,c
  6133  016B2E  50F4               	movf	244,w,c
  6134  016B30  223D               	addwfc	(btemp+11)^0,f,c
  6135  016B32  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6136  016B38  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6137  016B3E  0E00               	movlw	0
  6138  016B40  6EE6               	movwf	postinc1,c
  6139  016B42  0E01               	movlw	1
  6140  016B44  6EE6               	movwf	postinc1,c
  6141  016B46  ECB2  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  6142                           
  6143                           ; BSR set to: 59
  6144                           ;mconfig.c: 99:  wait_lcd_done();
  6145  016B4A  EC12  F0C4         	call	_wait_lcd_done	;wreg free
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6149                           ;stkvar	_vterm @ sp[(0)+-1]
  6150  016B4E  0EFF               	movlw	-1
  6151  016B50  50E3               	movf	plusw1,w,c
  6152  016B52  0D36               	mullw	54
  6153  016B54  0E00               	movlw	low _D
  6154  016B56  6E3C               	movwf	(btemp+10)^0,c
  6155  016B58  0E05               	movlw	high _D
  6156  016B5A  6E3D               	movwf	(btemp+11)^0,c
  6157  016B5C  0E24               	movlw	36
  6158  016B5E  263C               	addwf	(btemp+10)^0,f,c
  6159  016B60  0E00               	movlw	0
  6160  016B62  223D               	addwfc	(btemp+11)^0,f,c
  6161  016B64  50F3               	movf	243,w,c
  6162  016B66  263C               	addwf	(btemp+10)^0,f,c
  6163  016B68  50F4               	movf	244,w,c
  6164  016B6A  223D               	addwfc	(btemp+11)^0,f,c
  6165  016B6C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6166  016B72  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6167  016B78  0E00               	movlw	0
  6168  016B7A  6EE6               	movwf	postinc1,c
  6169  016B7C  0E02               	movlw	2
  6170  016B7E  6EE6               	movwf	postinc1,c
  6171  016B80  ECB2  F0C0         	call	_eaDogM_WriteStringAtPos	;wreg free
  6172  016B84                     l1576:
  6173                           
  6174                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6175  016B84  52E5               	movf	postdec1,f,c
  6176  016B86  0012               	return		;funcret
  6177  016B88                     __end_of_update_lcd:
  6178                           	opt callstack 0
  6179                           
  6180 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6181 ;; Defined at:
  6182 ;;		line 252 in file "eadog.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  r               1  [STACK] const unsigned char 
  6185 ;;  c               1  [STACK] const unsigned char 
  6186 ;;  strPtr          2  [STACK] PTR unsigned char 
  6187 ;;		 -> D.lcd(216), D(218), V(187), 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1  [STACK] void 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6194 ;; Tracked objects:
  6195 ;;		On entry : 3F/0
  6196 ;;		On exit  : 3F/3B
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:   16
  6206 ;; This function calls:
  6207 ;;		_eaDogM_WriteString
  6208 ;;		_send_lcd_cmd_dma
  6209 ;; This function is called by:
  6210 ;;		_update_lcd
  6211 ;;		_vterm_dump
  6212 ;; This function uses a reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text28
  6216  018164                     __ptext28:
  6217                           	opt callstack 0
  6218  018164                     _eaDogM_WriteStringAtPos:
  6219                           	opt callstack 13
  6220                           
  6221                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6222                           ;stkvar	_c @ sp[(0)+-2]
  6223                           
  6224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6225                           ;incstack = 0
  6226  018164  0EFE               	movlw	-2
  6227  018166  006F FF8C  F03D    	movff	plusw1,btemp+11
  6228                           
  6229                           ;stkvar	_r @ sp[(0)+-1]
  6230  01816C  0EFF               	movlw	-1
  6231  01816E  50E3               	movf	plusw1,w,c
  6232  018170  0D10               	mullw	16
  6233  018172  50F3               	movf	243,w,c
  6234  018174  243D               	addwf	(btemp+11)^0,w,c
  6235  018176  0F80               	addlw	128
  6236  018178  6EE6               	movwf	postinc1,c
  6237  01817A  ECB6  F0BE         	call	_send_lcd_cmd_dma	;wreg free
  6238                           
  6239                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6240                           ;stkvar	_strPtr @ sp[(0)+-4]
  6241  01817E  0EFC               	movlw	-4
  6242  018180  006F FF8F FFE6     	movff	plusw1,postinc1
  6243  018186  006F FF8F FFE6     	movff	plusw1,postinc1
  6244  01818C  EC0B  F0B9         	call	_eaDogM_WriteString	;wreg free
  6245                           
  6246                           ; BSR set to: 59
  6247                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6248  018190  52E5               	movf	postdec1,f,c
  6249  018192  52E5               	movf	postdec1,f,c
  6250  018194  52E5               	movf	postdec1,f,c
  6251  018196  52E5               	movf	postdec1,f,c
  6252  018198  0012               	return		;funcret
  6253  01819A                     __end_of_eaDogM_WriteStringAtPos:
  6254                           	opt callstack 0
  6255                           
  6256 ;; *************** function _send_lcd_cmd_dma *****************
  6257 ;; Defined at:
  6258 ;;		line 205 in file "eadog.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  strPtr          1  [STACK] unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1  [STACK] void 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/3D
  6269 ;;		On exit  : 3F/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:   15
  6279 ;; This function calls:
  6280 ;;		_printf
  6281 ;;		_ringBufS_flush
  6282 ;;		_start_lcd
  6283 ;;		_wait_lcd_done
  6284 ;;		_wait_lcd_set
  6285 ;; This function is called by:
  6286 ;;		_eaDogM_WriteCommand
  6287 ;;		_eaDogM_WriteStringAtPos
  6288 ;; This function uses a reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text29
  6292  017D6C                     __ptext29:
  6293                           	opt callstack 0
  6294  017D6C                     _send_lcd_cmd_dma:
  6295                           	opt callstack 13
  6296                           
  6297                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6298                           
  6299                           ; BSR set to: 59
  6300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6301                           ;incstack = 0
  6302  017D6C  ECF0  F0C4         	call	_wait_lcd_set	;wreg free
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6306  017D70  0E00               	movlw	0
  6307  017D72  6EE6               	movwf	postinc1,c
  6308  017D74  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6309  017D7A  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6310  017D80  EC49  F0BA         	call	_ringBufS_flush	;wreg free
  6311  017D84  92BC               	bcf	188,1,c	;volatile
  6312  017D86  94BC               	bcf	188,2,c	;volatile
  6313                           
  6314                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6315  017D88  013B               	movlb	59	; () banked
  6316  017D8A  9FFC               	bcf	252,7,b	;volatile
  6317                           
  6318                           ; BSR set to: 59
  6319                           ;eadog.c: 214:  DMA1SSZ = 1;
  6320  017D8C  0E00               	movlw	0
  6321  017D8E  6FF8               	movwf	248,b	;volatile
  6322  017D90  0E01               	movlw	1
  6323  017D92  6FF7               	movwf	247,b	;volatile
  6324                           
  6325                           ; BSR set to: 59
  6326                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6327  017D94  8FFC               	bsf	252,7,b	;volatile
  6328                           
  6329                           ; BSR set to: 59
  6330                           ;eadog.c: 216:  printf("%c", strPtr);
  6331                           ;stkvar	_strPtr @ sp[(0)+-1]
  6332  017D96  0EFF               	movlw	-1
  6333  017D98  50E3               	movf	plusw1,w,c
  6334  017D9A  6EE6               	movwf	postinc1,c
  6335  017D9C  0E00               	movlw	0
  6336  017D9E  6EE6               	movwf	postinc1,c
  6337  017DA0  0EF8               	movlw	low STR_16
  6338  017DA2  6EE6               	movwf	postinc1,c
  6339  017DA4  0EFF               	movlw	high STR_16
  6340  017DA6  6EE6               	movwf	postinc1,c
  6341  017DA8  0E04               	movlw	4
  6342  017DAA  6EE6               	movwf	postinc1,c
  6343  017DAC  ECCE  F0BD         	call	_printf	;wreg free
  6344                           
  6345                           ;eadog.c: 217:  start_lcd();
  6346  017DB0  ECF3  F0C4         	call	_start_lcd	;wreg free
  6347                           
  6348                           ; BSR set to: 59
  6349                           ;eadog.c: 218:  wait_lcd_done();
  6350  017DB4  EC12  F0C4         	call	_wait_lcd_done	;wreg free
  6351                           
  6352                           ; BSR set to: 0
  6353  017DB8  82BC               	bsf	188,1,c	;volatile
  6354                           
  6355                           ; BSR set to: 0
  6356                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6357  017DBA  52E5               	movf	postdec1,f,c
  6358  017DBC  0012               	return		;funcret
  6359  017DBE                     __end_of_send_lcd_cmd_dma:
  6360                           	opt callstack 0
  6361                           
  6362 ;; *************** function _wait_lcd_done *****************
  6363 ;; Defined at:
  6364 ;;		line 141 in file "eadog.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1  [STACK] void 
  6371 ;; Registers used:
  6372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/2
  6375 ;;		On exit  : 3F/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6382 ;;Total ram usage:        0 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:    7
  6385 ;; This function calls:
  6386 ;;		_wdtdelay
  6387 ;; This function is called by:
  6388 ;;		_send_lcd_cmd_dma
  6389 ;;		_update_lcd
  6390 ;;		_vterm_dump
  6391 ;; This function uses a reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text30
  6395  018824                     __ptext30:
  6396                           	opt callstack 0
  6397  018824                     _wait_lcd_done:
  6398                           	opt callstack 22
  6399                           
  6400                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6401                           
  6402                           ; BSR set to: 0
  6403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6404                           ;incstack = 0
  6405  018824  0100               	movlb	0	; () banked
  6406  018826  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6407  018828  D7FD               	goto	_wait_lcd_done
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;eadog.c: 144:  wdtdelay(50);
  6411  01882A  0E32               	movlw	50
  6412  01882C  6EE6               	movwf	postinc1,c
  6413  01882E  0E00               	movlw	0
  6414  018830  6EE6               	movwf	postinc1,c
  6415  018832  0E00               	movlw	0
  6416  018834  6EE6               	movwf	postinc1,c
  6417  018836  0E00               	movlw	0
  6418  018838  6EE6               	movwf	postinc1,c
  6419  01883A  EC5C  F0BE         	call	_wdtdelay	;wreg free
  6420                           
  6421                           ; BSR set to: 0
  6422                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6423  01883E  0012               	return		;funcret
  6424  018840                     __end_of_wait_lcd_done:
  6425                           	opt callstack 0
  6426                           
  6427 ;; *************** function _wdtdelay *****************
  6428 ;; Defined at:
  6429 ;;		line 22 in file "eadog.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  delay           4  [STACK] const unsigned long 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1  [STACK] void 
  6436 ;; Registers used:
  6437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 3F/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6447 ;;Total ram usage:        0 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; Hardware stack levels required when called:    6
  6450 ;; This function calls:
  6451 ;;		Nothing
  6452 ;; This function is called by:
  6453 ;;		_init_display
  6454 ;;		_send_lcd_cmd
  6455 ;;		_send_lcd_cmd_long
  6456 ;;		_wait_lcd_done
  6457 ;; This function uses a reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text31
  6461  017CB8                     __ptext31:
  6462                           	opt callstack 0
  6463  017CB8                     _wdtdelay:
  6464                           	opt callstack 22
  6465                           
  6466                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6467                           
  6468                           ; BSR set to: 0
  6469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6470                           ;incstack = 0
  6471  017CB8  0100               	movlb	0	; () banked
  6472  017CBA  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6473  017CBC  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6474  017CBE  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6475  017CC0  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6476  017CC2                     l1343:
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;eadog.c: 27:   __nop();
  6480  017CC2  F000               	nop	
  6481  017CC4  0004               	clrwdt		;# 
  6482                           
  6483                           ;eadog.c: 29:  };
  6484  017CC6  0E01               	movlw	1
  6485  017CC8  0100               	movlb	0	; () banked
  6486  017CCA  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6487  017CCC  0E00               	movlw	0
  6488  017CCE  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6489  017CD0  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6490  017CD2  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;stkvar	_delay @ sp[(0)+-4]
  6494  017CD4  0EFC               	movlw	-4
  6495  017CD6  006F FF8C  F032    	movff	plusw1,btemp
  6496  017CDC  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6497  017CDE  5C32               	subwf	btemp^0,w,c
  6498  017CE0  0EFD               	movlw	-3
  6499  017CE2  006F FF8C  F032    	movff	plusw1,btemp
  6500  017CE8  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6501  017CEA  5832               	subwfb	btemp^0,w,c
  6502  017CEC  0EFE               	movlw	-2
  6503  017CEE  006F FF8C  F032    	movff	plusw1,btemp
  6504  017CF4  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6505  017CF6  5832               	subwfb	btemp^0,w,c
  6506  017CF8  0EFF               	movlw	-1
  6507  017CFA  006F FF8C  F032    	movff	plusw1,btemp
  6508  017D00  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6509  017D02  5832               	subwfb	btemp^0,w,c
  6510  017D04  B0D8               	btfsc	status,0,c
  6511  017D06  D7DD               	goto	l1343
  6512                           
  6513                           ; BSR set to: 0
  6514                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6515  017D08  52E5               	movf	postdec1,f,c
  6516  017D0A  52E5               	movf	postdec1,f,c
  6517  017D0C  52E5               	movf	postdec1,f,c
  6518  017D0E  52E5               	movf	postdec1,f,c
  6519  017D10  0012               	return		;funcret
  6520  017D12                     __end_of_wdtdelay:
  6521                           	opt callstack 0
  6522                           
  6523 ;; *************** function _eaDogM_WriteString *****************
  6524 ;; Defined at:
  6525 ;;		line 184 in file "eadog.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  strPtr          2  [STACK] PTR unsigned char 
  6528 ;;		 -> D.lcd(216), D(218), V(187), 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1  [STACK] void 
  6533 ;; Registers used:
  6534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6535 ;; Tracked objects:
  6536 ;;		On entry : 3F/0
  6537 ;;		On exit  : 3F/3B
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:   15
  6547 ;; This function calls:
  6548 ;;		_printf
  6549 ;;		_ringBufS_flush
  6550 ;;		_start_lcd
  6551 ;;		_strlen
  6552 ;;		_wait_lcd_set
  6553 ;; This function is called by:
  6554 ;;		_eaDogM_WriteStringAtPos
  6555 ;; This function uses a reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text32
  6559  017216                     __ptext32:
  6560                           	opt callstack 0
  6561  017216                     _eaDogM_WriteString:
  6562                           	opt callstack 13
  6563                           
  6564                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6565                           
  6566                           ; BSR set to: 0
  6567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6568                           ;incstack = 0
  6569  017216  ECF0  F0C4         	call	_wait_lcd_set	;wreg free
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6573  01721A  0E00               	movlw	0
  6574  01721C  6EE6               	movwf	postinc1,c
  6575  01721E  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6576  017224  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6577  01722A  EC49  F0BA         	call	_ringBufS_flush	;wreg free
  6578  01722E  94BC               	bcf	188,2,c	;volatile
  6579                           
  6580                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6581                           ;stkvar	_strPtr @ sp[(0)+-2]
  6582  017230  0EFE               	movlw	-2
  6583  017232  006F FF8F FFE6     	movff	plusw1,postinc1
  6584  017238  006F FF8F FFE6     	movff	plusw1,postinc1
  6585  01723E  EC5E  F0B9         	call	_strlen	;wreg free
  6586  017242  5033               	movf	(btemp+1)^0,w,c
  6587  017244  E104               	bnz	u10330
  6588  017246  0E41               	movlw	65
  6589  017248  5C32               	subwf	btemp^0,w,c
  6590  01724A  A0D8               	btfss	status,0,c
  6591  01724C  D010               	goto	l10272
  6592  01724E                     u10330:
  6593                           
  6594                           ;stkvar	_strPtr @ sp[(0)+-2]
  6595  01724E  0EFE               	movlw	-2
  6596  017250  006F FF8C  F03C    	movff	plusw1,btemp+10
  6597  017256  0EFF               	movlw	-1
  6598  017258  006F FF8C  F03D    	movff	plusw1,btemp+11
  6599  01725E  0E40               	movlw	64
  6600  017260  243C               	addwf	(btemp+10)^0,w,c
  6601  017262  6ED9               	movwf	fsr2l,c
  6602  017264  0E00               	movlw	0
  6603  017266  203D               	addwfc	(btemp+11)^0,w,c
  6604  017268  6EDA               	movwf	fsr2h,c
  6605  01726A  0E00               	movlw	0
  6606  01726C  6EDF               	movwf	indf2,c
  6607  01726E                     l10272:
  6608                           
  6609                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6610  01726E  013B               	movlb	59	; () banked
  6611  017270  9FFC               	bcf	252,7,b	;volatile
  6612                           
  6613                           ; BSR set to: 59
  6614                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6615                           ;stkvar	_strPtr @ sp[(0)+-2]
  6616  017272  0EFE               	movlw	-2
  6617  017274  006F FF8F FFE6     	movff	plusw1,postinc1
  6618  01727A  006F FF8F FFE6     	movff	plusw1,postinc1
  6619  017280  EC5E  F0B9         	call	_strlen	;wreg free
  6620  017284  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6621  01728A  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6622                           
  6623                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6624  017290  013B               	movlb	59	; () banked
  6625  017292  8FFC               	bsf	252,7,b	;volatile
  6626                           
  6627                           ; BSR set to: 59
  6628                           ;eadog.c: 195:  printf("%s", strPtr);
  6629                           ;stkvar	_strPtr @ sp[(0)+-2]
  6630  017294  0EFE               	movlw	-2
  6631  017296  006F FF8F FFE6     	movff	plusw1,postinc1
  6632  01729C  006F FF8F FFE6     	movff	plusw1,postinc1
  6633  0172A2  0EFB               	movlw	low STR_15
  6634  0172A4  6EE6               	movwf	postinc1,c
  6635  0172A6  0EFF               	movlw	high STR_15
  6636  0172A8  6EE6               	movwf	postinc1,c
  6637  0172AA  0E04               	movlw	4
  6638  0172AC  6EE6               	movwf	postinc1,c
  6639  0172AE  ECCE  F0BD         	call	_printf	;wreg free
  6640                           
  6641                           ;eadog.c: 196:  start_lcd();
  6642  0172B2  ECF3  F0C4         	call	_start_lcd	;wreg free
  6643                           
  6644                           ; BSR set to: 59
  6645                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6646  0172B6  52E5               	movf	postdec1,f,c
  6647  0172B8  52E5               	movf	postdec1,f,c
  6648  0172BA  0012               	return		;funcret
  6649  0172BC                     __end_of_eaDogM_WriteString:
  6650                           	opt callstack 0
  6651                           
  6652 ;; *************** function _wait_lcd_set *****************
  6653 ;; Defined at:
  6654 ;;		line 131 in file "eadog.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1  [STACK] void 
  6661 ;; Registers used:
  6662 ;;		None
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/3D
  6665 ;;		On exit  : 3F/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    6
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_eaDogM_WriteString
  6679 ;;		_send_lcd_cmd_dma
  6680 ;; This function uses a reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text33
  6684  0189E0                     __ptext33:
  6685                           	opt callstack 0
  6686  0189E0                     _wait_lcd_set:
  6687                           	opt callstack 21
  6688                           
  6689                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6690                           
  6691                           ; BSR set to: 59
  6692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6693                           ;incstack = 0
  6694  0189E0  0100               	movlb	0	; () banked
  6695  0189E2  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6696                           
  6697                           ; BSR set to: 0
  6698                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6699  0189E4  0012               	return		;funcret
  6700  0189E6                     __end_of_wait_lcd_set:
  6701                           	opt callstack 0
  6702                           
  6703 ;; *************** function _start_lcd *****************
  6704 ;; Defined at:
  6705 ;;		line 126 in file "eadog.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1  [STACK] void 
  6712 ;; Registers used:
  6713 ;;		None
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/3B
  6716 ;;		On exit  : 3F/3B
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;Total ram usage:        0 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    6
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_eaDogM_WriteString
  6730 ;;		_send_lcd_cmd_dma
  6731 ;; This function uses a reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text34
  6735  0189E6                     __ptext34:
  6736                           	opt callstack 0
  6737  0189E6                     _start_lcd:
  6738                           	opt callstack 21
  6739                           
  6740                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6741                           
  6742                           ; BSR set to: 0
  6743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6744                           ;incstack = 0
  6745  0189E6  013B               	movlb	59	; () banked
  6746  0189E8  8DFC               	bsf	252,6,b	;volatile
  6747                           
  6748                           ; BSR set to: 59
  6749                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6750  0189EA  0012               	return		;funcret
  6751  0189EC                     __end_of_start_lcd:
  6752                           	opt callstack 0
  6753                           
  6754 ;; *************** function _ringBufS_flush *****************
  6755 ;; Defined at:
  6756 ;;		line 76 in file "ringbufs.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6759 ;;		 -> ring_buf1(67), 
  6760 ;;  clearBuffer     1  [STACK] const char 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1  [STACK] void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6767 ;; Tracked objects:
  6768 ;;		On entry : 3F/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6776 ;;Total ram usage:        0 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    7
  6779 ;; This function calls:
  6780 ;;		_memset
  6781 ;; This function is called by:
  6782 ;;		_eaDogM_WriteString
  6783 ;;		_send_lcd_cmd_dma
  6784 ;; This function uses a reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text35
  6788  017492                     __ptext35:
  6789                           	opt callstack 0
  6790  017492                     _ringBufS_flush:
  6791                           	opt callstack 20
  6792                           
  6793                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6794                           ;stkvar	__this @ sp[(0)+-2]
  6795                           
  6796                           ; BSR set to: 59
  6797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6798                           ;incstack = 0
  6799  017492  0EFE               	movlw	-2
  6800  017494  006F FF8C  F03C    	movff	plusw1,btemp+10
  6801  01749A  0EFF               	movlw	-1
  6802  01749C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6803  0174A2  0E42               	movlw	66
  6804  0174A4  243C               	addwf	(btemp+10)^0,w,c
  6805  0174A6  6ED9               	movwf	fsr2l,c
  6806  0174A8  0E00               	movlw	0
  6807  0174AA  203D               	addwfc	(btemp+11)^0,w,c
  6808  0174AC  6EDA               	movwf	fsr2h,c
  6809  0174AE  0E00               	movlw	0
  6810  0174B0  6EDF               	movwf	indf2,c
  6811                           
  6812                           ;ringbufs.c: 79:  _this->head = 0;
  6813                           ;stkvar	__this @ sp[(0)+-2]
  6814  0174B2  0EFE               	movlw	-2
  6815  0174B4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6816  0174BA  0EFF               	movlw	-1
  6817  0174BC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6818  0174C2  0E40               	movlw	64
  6819  0174C4  243C               	addwf	(btemp+10)^0,w,c
  6820  0174C6  6ED9               	movwf	fsr2l,c
  6821  0174C8  0E00               	movlw	0
  6822  0174CA  203D               	addwfc	(btemp+11)^0,w,c
  6823  0174CC  6EDA               	movwf	fsr2h,c
  6824  0174CE  0E00               	movlw	0
  6825  0174D0  6EDF               	movwf	indf2,c
  6826                           
  6827                           ;ringbufs.c: 80:  _this->tail = 0;
  6828                           ;stkvar	__this @ sp[(0)+-2]
  6829  0174D2  0EFE               	movlw	-2
  6830  0174D4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6831  0174DA  0EFF               	movlw	-1
  6832  0174DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6833  0174E2  0E41               	movlw	65
  6834  0174E4  243C               	addwf	(btemp+10)^0,w,c
  6835  0174E6  6ED9               	movwf	fsr2l,c
  6836  0174E8  0E00               	movlw	0
  6837  0174EA  203D               	addwfc	(btemp+11)^0,w,c
  6838  0174EC  6EDA               	movwf	fsr2h,c
  6839  0174EE  0E00               	movlw	0
  6840  0174F0  6EDF               	movwf	indf2,c
  6841                           
  6842                           ;ringbufs.c: 81:  if (clearBuffer) {
  6843                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6844  0174F2  0EFD               	movlw	-3
  6845  0174F4  50E3               	movf	plusw1,w,c
  6846  0174F6  B4D8               	btfsc	status,2,c
  6847  0174F8  D011               	goto	l1483
  6848                           
  6849                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6850  0174FA  0E40               	movlw	64
  6851  0174FC  6EE6               	movwf	postinc1,c
  6852  0174FE  0E00               	movlw	0
  6853  017500  6EE6               	movwf	postinc1,c
  6854  017502  0E00               	movlw	0
  6855  017504  6EE6               	movwf	postinc1,c
  6856  017506  0E00               	movlw	0
  6857  017508  6EE6               	movwf	postinc1,c
  6858                           
  6859                           ;stkvar	__this @ sp[(-4)+-2]
  6860  01750A  0EFA               	movlw	-6
  6861  01750C  006F FF8F FFE6     	movff	plusw1,postinc1
  6862  017512  006F FF8F FFE6     	movff	plusw1,postinc1
  6863  017518  EC0B  F0A4         	call	_memset	;wreg free
  6864  01751C                     l1483:
  6865                           
  6866                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6867  01751C  52E5               	movf	postdec1,f,c
  6868  01751E  52E5               	movf	postdec1,f,c
  6869  017520  52E5               	movf	postdec1,f,c
  6870  017522  0012               	return		;funcret
  6871  017524                     __end_of_ringBufS_flush:
  6872                           	opt callstack 0
  6873                           
  6874 ;; *************** function _memset *****************
  6875 ;; Defined at:
  6876 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  dest            2  [STACK] PTR void 
  6879 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6880 ;;  c               2  [STACK] int 
  6881 ;;  n               2  [STACK] unsigned int 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  s               2  [STACK] PTR unsigned char 
  6884 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6885 ;;  k               2  [STACK] unsigned int 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  2  [STACK] PTR void 
  6888 ;; Registers used:
  6889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6899 ;;Total ram usage:        0 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    6
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_ringBufS_init
  6906 ;;		_ringBufS_flush
  6907 ;; This function uses a reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text36
  6911  014816                     __ptext36:
  6912                           	opt callstack 0
  6913  014816                     _memset:
  6914                           	opt callstack 0
  6915                           
  6916                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6917  014816  52E6               	movf	postinc1,f,c
  6918  014818  52E6               	movf	postinc1,f,c
  6919  01481A  52E6               	movf	postinc1,f,c
  6920  01481C  52E6               	movf	postinc1,f,c
  6921                           
  6922                           ;stkvar	_dest @ sp[(-4)+-2]
  6923                           
  6924                           ;incstack = 0
  6925  01481E  0EFA               	movlw	-6
  6926  014820  006F FF8C  F03C    	movff	plusw1,btemp+10
  6927  014826  0EFB               	movlw	-5
  6928  014828  006F FF8C  F03D    	movff	plusw1,btemp+11
  6929                           
  6930                           ;stkvar	_s @ sp[(-4)+0]
  6931  01482E  0EFD               	movlw	-3
  6932  014830  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6933  014836  0EFC               	movlw	-4
  6934  014838  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6935                           
  6936                           ;stkvar	_n @ sp[(-4)+-6]
  6937  01483E  0EF6               	movlw	-10
  6938  014840  006F FF8C  F032    	movff	plusw1,btemp
  6939  014846  0EF7               	movlw	-9
  6940  014848  50E3               	movf	plusw1,w,c
  6941  01484A  1032               	iorwf	btemp^0,w,c
  6942  01484C  B4D8               	btfsc	status,2,c
  6943  01484E  D154               	goto	u10300
  6944                           
  6945                           ;stkvar	_c @ sp[(-4)+-4]
  6946                           ;stkvar	_s @ sp[(-4)+0]
  6947  014850  0EFC               	movlw	-4
  6948  014852  006F FF8F FFD9     	movff	plusw1,fsr2l
  6949  014858  0EFD               	movlw	-3
  6950  01485A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6951  014860  0EF8               	movlw	-8
  6952  014862  006F FF8F FFDF     	movff	plusw1,indf2
  6953                           
  6954                           ;stkvar	_c @ sp[(-4)+-4]
  6955                           ;stkvar	_n @ sp[(-4)+-6]
  6956                           ;stkvar	_s @ sp[(-4)+0]
  6957  014868  0EFC               	movlw	-4
  6958  01486A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6959  014870  0EFD               	movlw	-3
  6960  014872  006F FF8C  F03D    	movff	plusw1,btemp+11
  6961  014878  0EF6               	movlw	-10
  6962  01487A  50E3               	movf	plusw1,w,c
  6963  01487C  263C               	addwf	(btemp+10)^0,f,c
  6964  01487E  0EF7               	movlw	-9
  6965  014880  50E3               	movf	plusw1,w,c
  6966  014882  223D               	addwfc	(btemp+11)^0,f,c
  6967  014884  0EFF               	movlw	255
  6968  014886  243C               	addwf	(btemp+10)^0,w,c
  6969  014888  6ED9               	movwf	fsr2l,c
  6970  01488A  0EFF               	movlw	255
  6971  01488C  203D               	addwfc	(btemp+11)^0,w,c
  6972  01488E  6EDA               	movwf	fsr2h,c
  6973  014890  0EF8               	movlw	-8
  6974  014892  006F FF8F FFDF     	movff	plusw1,indf2
  6975                           
  6976                           ;stkvar	_n @ sp[(-4)+-6]
  6977  014898  0EF7               	movlw	-9
  6978  01489A  50E3               	movf	plusw1,w,c
  6979  01489C  E108               	bnz	l10188
  6980  01489E  0EF6               	movlw	-10
  6981  0148A0  006F FF8C  F032    	movff	plusw1,btemp
  6982  0148A6  0E03               	movlw	3
  6983  0148A8  5E32               	subwf	btemp^0,f,c
  6984  0148AA  A0D8               	btfss	status,0,c
  6985  0148AC  D125               	goto	u10300
  6986  0148AE                     l10188:
  6987                           
  6988                           ;stkvar	_c @ sp[(-4)+-4]
  6989                           ;stkvar	_s @ sp[(-4)+0]
  6990  0148AE  0EFC               	movlw	-4
  6991  0148B0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6992  0148B6  0EFD               	movlw	-3
  6993  0148B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6994  0148BE  0E01               	movlw	1
  6995  0148C0  243C               	addwf	(btemp+10)^0,w,c
  6996  0148C2  6ED9               	movwf	fsr2l,c
  6997  0148C4  0E00               	movlw	0
  6998  0148C6  203D               	addwfc	(btemp+11)^0,w,c
  6999  0148C8  6EDA               	movwf	fsr2h,c
  7000  0148CA  0EF8               	movlw	-8
  7001  0148CC  006F FF8F FFDF     	movff	plusw1,indf2
  7002                           
  7003                           ;stkvar	_c @ sp[(-4)+-4]
  7004                           ;stkvar	_s @ sp[(-4)+0]
  7005  0148D2  0EFC               	movlw	-4
  7006  0148D4  006F FF8C  F03C    	movff	plusw1,btemp+10
  7007  0148DA  0EFD               	movlw	-3
  7008  0148DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  7009  0148E2  0E02               	movlw	2
  7010  0148E4  243C               	addwf	(btemp+10)^0,w,c
  7011  0148E6  6ED9               	movwf	fsr2l,c
  7012  0148E8  0E00               	movlw	0
  7013  0148EA  203D               	addwfc	(btemp+11)^0,w,c
  7014  0148EC  6EDA               	movwf	fsr2h,c
  7015  0148EE  0EF8               	movlw	-8
  7016  0148F0  006F FF8F FFDF     	movff	plusw1,indf2
  7017                           
  7018                           ;stkvar	_c @ sp[(-4)+-4]
  7019                           ;stkvar	_n @ sp[(-4)+-6]
  7020                           ;stkvar	_s @ sp[(-4)+0]
  7021  0148F6  0EFC               	movlw	-4
  7022  0148F8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7023  0148FE  0EFD               	movlw	-3
  7024  014900  006F FF8C  F03D    	movff	plusw1,btemp+11
  7025  014906  0EF6               	movlw	-10
  7026  014908  50E3               	movf	plusw1,w,c
  7027  01490A  263C               	addwf	(btemp+10)^0,f,c
  7028  01490C  0EF7               	movlw	-9
  7029  01490E  50E3               	movf	plusw1,w,c
  7030  014910  223D               	addwfc	(btemp+11)^0,f,c
  7031  014912  0EFE               	movlw	254
  7032  014914  243C               	addwf	(btemp+10)^0,w,c
  7033  014916  6ED9               	movwf	fsr2l,c
  7034  014918  0EFF               	movlw	255
  7035  01491A  203D               	addwfc	(btemp+11)^0,w,c
  7036  01491C  6EDA               	movwf	fsr2h,c
  7037  01491E  0EF8               	movlw	-8
  7038  014920  006F FF8F FFDF     	movff	plusw1,indf2
  7039                           
  7040                           ;stkvar	_c @ sp[(-4)+-4]
  7041                           ;stkvar	_n @ sp[(-4)+-6]
  7042                           ;stkvar	_s @ sp[(-4)+0]
  7043  014926  0EFC               	movlw	-4
  7044  014928  006F FF8C  F03C    	movff	plusw1,btemp+10
  7045  01492E  0EFD               	movlw	-3
  7046  014930  006F FF8C  F03D    	movff	plusw1,btemp+11
  7047  014936  0EF6               	movlw	-10
  7048  014938  50E3               	movf	plusw1,w,c
  7049  01493A  263C               	addwf	(btemp+10)^0,f,c
  7050  01493C  0EF7               	movlw	-9
  7051  01493E  50E3               	movf	plusw1,w,c
  7052  014940  223D               	addwfc	(btemp+11)^0,f,c
  7053  014942  0EFD               	movlw	253
  7054  014944  243C               	addwf	(btemp+10)^0,w,c
  7055  014946  6ED9               	movwf	fsr2l,c
  7056  014948  0EFF               	movlw	255
  7057  01494A  203D               	addwfc	(btemp+11)^0,w,c
  7058  01494C  6EDA               	movwf	fsr2h,c
  7059  01494E  0EF8               	movlw	-8
  7060  014950  006F FF8F FFDF     	movff	plusw1,indf2
  7061                           
  7062                           ;stkvar	_n @ sp[(-4)+-6]
  7063  014956  0EF7               	movlw	-9
  7064  014958  50E3               	movf	plusw1,w,c
  7065  01495A  E108               	bnz	l10194
  7066  01495C  0EF6               	movlw	-10
  7067  01495E  006F FF8C  F032    	movff	plusw1,btemp
  7068  014964  0E07               	movlw	7
  7069  014966  5E32               	subwf	btemp^0,f,c
  7070  014968  A0D8               	btfss	status,0,c
  7071  01496A  D0C6               	goto	u10300
  7072  01496C                     l10194:
  7073                           
  7074                           ;stkvar	_c @ sp[(-4)+-4]
  7075                           ;stkvar	_s @ sp[(-4)+0]
  7076  01496C  0EFC               	movlw	-4
  7077  01496E  006F FF8C  F03C    	movff	plusw1,btemp+10
  7078  014974  0EFD               	movlw	-3
  7079  014976  006F FF8C  F03D    	movff	plusw1,btemp+11
  7080  01497C  0E03               	movlw	3
  7081  01497E  243C               	addwf	(btemp+10)^0,w,c
  7082  014980  6ED9               	movwf	fsr2l,c
  7083  014982  0E00               	movlw	0
  7084  014984  203D               	addwfc	(btemp+11)^0,w,c
  7085  014986  6EDA               	movwf	fsr2h,c
  7086  014988  0EF8               	movlw	-8
  7087  01498A  006F FF8F FFDF     	movff	plusw1,indf2
  7088                           
  7089                           ;stkvar	_c @ sp[(-4)+-4]
  7090                           ;stkvar	_n @ sp[(-4)+-6]
  7091                           ;stkvar	_s @ sp[(-4)+0]
  7092  014990  0EFC               	movlw	-4
  7093  014992  006F FF8C  F03C    	movff	plusw1,btemp+10
  7094  014998  0EFD               	movlw	-3
  7095  01499A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7096  0149A0  0EF6               	movlw	-10
  7097  0149A2  50E3               	movf	plusw1,w,c
  7098  0149A4  263C               	addwf	(btemp+10)^0,f,c
  7099  0149A6  0EF7               	movlw	-9
  7100  0149A8  50E3               	movf	plusw1,w,c
  7101  0149AA  223D               	addwfc	(btemp+11)^0,f,c
  7102  0149AC  0EFC               	movlw	252
  7103  0149AE  243C               	addwf	(btemp+10)^0,w,c
  7104  0149B0  6ED9               	movwf	fsr2l,c
  7105  0149B2  0EFF               	movlw	255
  7106  0149B4  203D               	addwfc	(btemp+11)^0,w,c
  7107  0149B6  6EDA               	movwf	fsr2h,c
  7108  0149B8  0EF8               	movlw	-8
  7109  0149BA  006F FF8F FFDF     	movff	plusw1,indf2
  7110                           
  7111                           ;stkvar	_n @ sp[(-4)+-6]
  7112  0149C0  0EF7               	movlw	-9
  7113  0149C2  50E3               	movf	plusw1,w,c
  7114  0149C4  E108               	bnz	l10200
  7115  0149C6  0EF6               	movlw	-10
  7116  0149C8  006F FF8C  F032    	movff	plusw1,btemp
  7117  0149CE  0E09               	movlw	9
  7118  0149D0  5E32               	subwf	btemp^0,f,c
  7119  0149D2  A0D8               	btfss	status,0,c
  7120  0149D4  D091               	goto	u10300
  7121  0149D6                     l10200:
  7122                           
  7123                           ;stkvar	_s @ sp[(-4)+0]
  7124  0149D6  0EFC               	movlw	-4
  7125  0149D8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7126  0149DE  1E3C               	comf	(btemp+10)^0,f,c
  7127  0149E0  0EFD               	movlw	-3
  7128  0149E2  006F FF8C  F03D    	movff	plusw1,btemp+11
  7129  0149E8  1E3D               	comf	(btemp+11)^0,f,c
  7130  0149EA  2A3C               	incf	(btemp+10)^0,f,c
  7131  0149EC  B4D8               	btfsc	status,2,c
  7132  0149EE  2A3D               	incf	(btemp+11)^0,f,c
  7133  0149F0  0E03               	movlw	3
  7134  0149F2  163C               	andwf	(btemp+10)^0,f,c
  7135  0149F4  0E00               	movlw	0
  7136  0149F6  163D               	andwf	(btemp+11)^0,f,c
  7137                           
  7138                           ;stkvar	_k @ sp[(-4)+2]
  7139  0149F8  0EFE               	movlw	-2
  7140  0149FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7141  014A00  0EFF               	movlw	-1
  7142  014A02  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7143                           
  7144                           ;stkvar	_k @ sp[(-4)+2]
  7145                           ;stkvar	_s @ sp[(-4)+0]
  7146  014A08  0EFC               	movlw	-4
  7147  014A0A  50E3               	movf	plusw1,w,c
  7148  014A0C  6E32               	movwf	btemp^0,c
  7149  014A0E  0EFE               	movlw	-2
  7150  014A10  50E3               	movf	plusw1,w,c
  7151  014A12  2632               	addwf	btemp^0,f,c
  7152  014A14  0EFC               	movlw	-4
  7153  014A16  0060  F0CB  FFE3   	movff	btemp,plusw1
  7154  014A1C  0EFD               	movlw	-3
  7155  014A1E  50E3               	movf	plusw1,w,c
  7156  014A20  6E32               	movwf	btemp^0,c
  7157  014A22  0EFF               	movlw	-1
  7158  014A24  50E3               	movf	plusw1,w,c
  7159  014A26  2232               	addwfc	btemp^0,f,c
  7160  014A28  0EFD               	movlw	-3
  7161  014A2A  0060  F0CB  FFE3   	movff	btemp,plusw1
  7162                           
  7163                           ;stkvar	_k @ sp[(-4)+2]
  7164                           ;stkvar	_n @ sp[(-4)+-6]
  7165  014A30  0EF6               	movlw	-10
  7166  014A32  50E3               	movf	plusw1,w,c
  7167  014A34  6E32               	movwf	btemp^0,c
  7168  014A36  0EFE               	movlw	-2
  7169  014A38  50E3               	movf	plusw1,w,c
  7170  014A3A  5E32               	subwf	btemp^0,f,c
  7171  014A3C  0EF6               	movlw	-10
  7172  014A3E  0060  F0CB  FFE3   	movff	btemp,plusw1
  7173  014A44  0EF7               	movlw	-9
  7174  014A46  50E3               	movf	plusw1,w,c
  7175  014A48  6E32               	movwf	btemp^0,c
  7176  014A4A  0EFF               	movlw	-1
  7177  014A4C  50E3               	movf	plusw1,w,c
  7178  014A4E  5A32               	subwfb	btemp^0,f,c
  7179  014A50  0EF7               	movlw	-9
  7180  014A52  0060  F0CB  FFE3   	movff	btemp,plusw1
  7181  014A58  0EFC               	movlw	252
  7182  014A5A  6E3C               	movwf	(btemp+10)^0,c
  7183  014A5C  0EFF               	movlw	255
  7184  014A5E  6E3D               	movwf	(btemp+11)^0,c
  7185                           
  7186                           ;stkvar	_n @ sp[(-4)+-6]
  7187  014A60  0EF6               	movlw	-10
  7188  014A62  006F FF8C  F032    	movff	plusw1,btemp
  7189  014A68  503C               	movf	(btemp+10)^0,w,c
  7190  014A6A  1632               	andwf	btemp^0,f,c
  7191  014A6C  0EF6               	movlw	-10
  7192  014A6E  0060  F0CB  FFE3   	movff	btemp,plusw1
  7193  014A74  0EF7               	movlw	-9
  7194  014A76  006F FF8C  F032    	movff	plusw1,btemp
  7195  014A7C  503D               	movf	(btemp+11)^0,w,c
  7196  014A7E  1632               	andwf	btemp^0,f,c
  7197  014A80  0EF7               	movlw	-9
  7198  014A82  D02E               	goto	L6
  7199  014A84                     l10208:
  7200                           
  7201                           ;stkvar	_c @ sp[(-4)+-4]
  7202                           ;stkvar	_s @ sp[(-4)+0]
  7203  014A84  0EFC               	movlw	-4
  7204  014A86  006F FF8F FFD9     	movff	plusw1,fsr2l
  7205  014A8C  0EFD               	movlw	-3
  7206  014A8E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7207  014A94  0EF8               	movlw	-8
  7208  014A96  006F FF8F FFDF     	movff	plusw1,indf2
  7209                           
  7210                           ;stkvar	_n @ sp[(-4)+-6]
  7211  014A9C  0EF6               	movlw	-10
  7212  014A9E  006F FF8C  F032    	movff	plusw1,btemp
  7213  014AA4  0E01               	movlw	1
  7214  014AA6  5E32               	subwf	btemp^0,f,c
  7215  014AA8  0EF6               	movlw	-10
  7216  014AAA  0060  F0CB  FFE3   	movff	btemp,plusw1
  7217  014AB0  0EF7               	movlw	-9
  7218  014AB2  006F FF8C  F032    	movff	plusw1,btemp
  7219  014AB8  0E00               	movlw	0
  7220  014ABA  5A32               	subwfb	btemp^0,f,c
  7221  014ABC  0EF7               	movlw	-9
  7222  014ABE  0060  F0CB  FFE3   	movff	btemp,plusw1
  7223                           
  7224                           ;stkvar	_s @ sp[(-4)+0]
  7225  014AC4  0EFC               	movlw	-4
  7226  014AC6  50E3               	movf	plusw1,w,c
  7227  014AC8  0F01               	addlw	1
  7228  014ACA  6E32               	movwf	btemp^0,c
  7229  014ACC  0EFC               	movlw	-4
  7230  014ACE  0060  F0CB  FFE3   	movff	btemp,plusw1
  7231  014AD4  6A32               	clrf	btemp^0,c
  7232  014AD6  0EFD               	movlw	-3
  7233  014AD8  50E3               	movf	plusw1,w,c
  7234  014ADA  2032               	addwfc	btemp^0,w,c
  7235  014ADC  6E32               	movwf	btemp^0,c
  7236  014ADE  0EFD               	movlw	-3
  7237  014AE0                     L6:
  7238  014AE0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7239                           
  7240                           ;stkvar	_n @ sp[(-4)+-6]
  7241  014AE6  0EF6               	movlw	-10
  7242  014AE8  006F FF8C  F032    	movff	plusw1,btemp
  7243  014AEE  0EF7               	movlw	-9
  7244  014AF0  50E3               	movf	plusw1,w,c
  7245  014AF2  1032               	iorwf	btemp^0,w,c
  7246  014AF4  A4D8               	btfss	status,2,c
  7247  014AF6  D7C6               	goto	l10208
  7248  014AF8                     u10300:
  7249                           
  7250                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7251  014AF8  0EF6               	movlw	246
  7252  014AFA  26E1               	addwf	fsr1l,f,c
  7253  014AFC  0EFF               	movlw	255
  7254  014AFE  22E2               	addwfc	fsr1h,f,c
  7255  014B00  0012               	return		;funcret
  7256  014B02                     __end_of_memset:
  7257                           	opt callstack 0
  7258                           
  7259 ;; *************** function _printf *****************
  7260 ;; Defined at:
  7261 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  fmt             2  [STACK] PTR const unsigned char 
  7264 ;;		 -> STR_17(3), STR_16(3), STR_15(3), 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  ap              2  [STACK] PTR void [1]
  7267 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7268 ;;  ret             2    0        int 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  2  [STACK] int 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7273 ;; Tracked objects:
  7274 ;;		On entry : 3F/3B
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:   14
  7285 ;; This function calls:
  7286 ;;		_vfprintf
  7287 ;; This function is called by:
  7288 ;;		_eaDogM_WriteString
  7289 ;;		_send_lcd_cmd_dma
  7290 ;; This function uses a reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text37
  7294  017B9C                     __ptext37:
  7295                           	opt callstack 0
  7296  017B9C                     _printf:
  7297                           	opt callstack 0
  7298                           
  7299                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7300  017B9C  52E6               	movf	postinc1,f,c
  7301  017B9E  52E6               	movf	postinc1,f,c
  7302                           
  7303                           ;stkvar	?_printf @ sp[(-2)+-3]
  7304                           
  7305                           ;incstack = 0
  7306  017BA0  0EFB               	movlw	251
  7307  017BA2  24E1               	addwf	fsr1l,w,c
  7308  017BA4  6E3C               	movwf	(btemp+10)^0,c
  7309  017BA6  0EFF               	movlw	255
  7310  017BA8  20E2               	addwfc	fsr1h,w,c
  7311  017BAA  6E3D               	movwf	(btemp+11)^0,c
  7312                           
  7313                           ;stkvar	_ap @ sp[(-2)+0]
  7314  017BAC  0EFF               	movlw	-1
  7315  017BAE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7316  017BB4  0EFE               	movlw	-2
  7317  017BB6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7318                           
  7319                           ;stkvar	_ap @ sp[(-2)+0]
  7320  017BBC  0EFE               	movlw	254
  7321  017BBE  24E1               	addwf	fsr1l,w,c
  7322  017BC0  6E32               	movwf	btemp^0,c
  7323  017BC2  0EFF               	movlw	255
  7324  017BC4  20E2               	addwfc	fsr1h,w,c
  7325  017BC6  6E33               	movwf	(btemp+1)^0,c
  7326  017BC8  0060  F0CB  FFE6   	movff	btemp,postinc1
  7327  017BCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7328                           
  7329                           ;stkvar	_fmt @ sp[(-4)+-3]
  7330  017BD4  0EF9               	movlw	-7
  7331  017BD6  006F FF8F FFE6     	movff	plusw1,postinc1
  7332  017BDC  006F FF8F FFE6     	movff	plusw1,postinc1
  7333  017BE2  0E00               	movlw	0
  7334  017BE4  6EE6               	movwf	postinc1,c
  7335  017BE6  0E00               	movlw	0
  7336  017BE8  6EE6               	movwf	postinc1,c
  7337  017BEA  ECB7  F0B8         	call	_vfprintf	;wreg free
  7338                           
  7339                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7340  017BEE  52E5               	movf	postdec1,f,c
  7341  017BF0  52E5               	movf	postdec1,f,c
  7342  017BF2  52E5               	movf	postdec1,f,c
  7343  017BF4  50E7               	movf	indf1,w,c
  7344  017BF6  5EE1               	subwf	fsr1l,f,c
  7345  017BF8  0E00               	movlw	0
  7346  017BFA  5AE2               	subwfb	fsr1h,f,c
  7347  017BFC  0012               	return		;funcret
  7348  017BFE                     __end_of_printf:
  7349                           	opt callstack 0
  7350                           
  7351 ;; *************** function _vfprintf *****************
  7352 ;; Defined at:
  7353 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7356 ;;		 -> f(6), NULL(0), 
  7357 ;;  fmt             2  [STACK] PTR const unsigned char 
  7358 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  7359 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  7360 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  7361 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  7362 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
  7363 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
  7364 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
  7365 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  7366 ;;  ap              2  [STACK] PTR PTR void 
  7367 ;;		 -> ap(2), ap(2), 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  cfmt            2  [STACK] PTR unsigned char 
  7370 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
  7371 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  7372 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
  7373 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
  7374 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
  7375 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
  7376 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
  7377 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  2  [STACK] int 
  7380 ;; Registers used:
  7381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/5
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7391 ;;Total ram usage:        0 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:   13
  7394 ;; This function calls:
  7395 ;;		_vfpfcnvrt
  7396 ;; This function is called by:
  7397 ;;		_sprintf
  7398 ;;		_printf
  7399 ;; This function uses a reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text38
  7403  01716E                     __ptext38:
  7404                           	opt callstack 0
  7405  01716E                     _vfprintf:
  7406                           	opt callstack 0
  7407                           
  7408                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7409  01716E  52E6               	movf	postinc1,f,c
  7410  017170  52E6               	movf	postinc1,f,c
  7411                           
  7412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7413                           ;stkvar	_fmt @ sp[(-2)+-4]
  7414                           
  7415                           ;incstack = 0
  7416  017172  0EFA               	movlw	-6
  7417  017174  006F FF8C  F03C    	movff	plusw1,btemp+10
  7418  01717A  0EFB               	movlw	-5
  7419  01717C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7420                           
  7421                           ;stkvar	_cfmt @ sp[(-2)+0]
  7422  017182  0EFF               	movlw	-1
  7423  017184  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7424  01718A  0EFE               	movlw	-2
  7425  01718C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7426                           
  7427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7428  017192  6A19               	clrf	_nout^0,c
  7429  017194  6A1A               	clrf	(_nout+1)^0,c
  7430                           
  7431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7432  017196  D020               	goto	l10222
  7433  017198                     l10220:
  7434                           
  7435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7436                           ;stkvar	_ap @ sp[(-2)+-6]
  7437  017198  0EF8               	movlw	-8
  7438  01719A  006F FF8F FFE6     	movff	plusw1,postinc1
  7439  0171A0  006F FF8F FFE6     	movff	plusw1,postinc1
  7440                           
  7441                           ;stkvar	_cfmt @ sp[(-4)+0]
  7442  0171A6  0EFC               	movlw	252
  7443  0171A8  24E1               	addwf	fsr1l,w,c
  7444  0171AA  6E32               	movwf	btemp^0,c
  7445  0171AC  0EFF               	movlw	255
  7446  0171AE  20E2               	addwfc	fsr1h,w,c
  7447  0171B0  6E33               	movwf	(btemp+1)^0,c
  7448  0171B2  0060  F0CB  FFE6   	movff	btemp,postinc1
  7449  0171B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7450                           
  7451                           ;stkvar	_fp @ sp[(-6)+-2]
  7452  0171BE  0EF8               	movlw	-8
  7453  0171C0  006F FF8F FFE6     	movff	plusw1,postinc1
  7454  0171C6  006F FF8F FFE6     	movff	plusw1,postinc1
  7455  0171CC  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7456  0171D0  5032               	movf	btemp^0,w,c
  7457  0171D2  2619               	addwf	_nout^0,f,c
  7458  0171D4  5033               	movf	(btemp+1)^0,w,c
  7459  0171D6  221A               	addwfc	(_nout+1)^0,f,c
  7460  0171D8                     l10222:
  7461                           
  7462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7463                           ;stkvar	_cfmt @ sp[(-2)+0]
  7464  0171D8  50E1               	movf	fsr1l,w,c
  7465  0171DA  0FFE               	addlw	-2
  7466  0171DC  6ED9               	movwf	fsr2l,c
  7467  0171DE  50E2               	movf	fsr1h,w,c
  7468  0171E0  6EDA               	movwf	fsr2h,c
  7469  0171E2  0EFF               	movlw	255
  7470  0171E4  22DA               	addwfc	fsr2h,f,c
  7471  0171E6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7472  0171EC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7473  0171F2                     	if	0	;tblptru may be non-zero
  7474  0171F2                     	endif
  7475  0171F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7476  0171F2  0E00               	movlw	low (__mediumconst shr (0+16))
  7477  0171F4  6EF8               	movwf	tblptru,c
  7478  0171F6                     	endif
  7479  0171F6  0008               	tblrd		*
  7480  0171F8  50F5               	movf	tablat,w,c
  7481  0171FA  0900               	iorlw	0
  7482  0171FC  A4D8               	btfss	status,2,c
  7483  0171FE  D7CC               	goto	l10220
  7484                           
  7485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7486  017200  0060  F064  F032   	movff	_nout,btemp
  7487  017206  0060  F068  F033   	movff	_nout+1,btemp+1
  7488                           
  7489                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7490  01720C  0EF8               	movlw	248
  7491  01720E  26E1               	addwf	fsr1l,f,c
  7492  017210  0EFF               	movlw	255
  7493  017212  22E2               	addwfc	fsr1h,f,c
  7494  017214  0012               	return		;funcret
  7495  017216                     __end_of_vfprintf:
  7496                           	opt callstack 0
  7497                           
  7498 ;; *************** function _vfpfcnvrt *****************
  7499 ;; Defined at:
  7500 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7503 ;;		 -> f(6), NULL(0), 
  7504 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7505 ;;		 -> cfmt(2), 
  7506 ;;  ap              2  [STACK] PTR PTR void 
  7507 ;;		 -> ap(2), ap(2), 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  llu             8  [STACK] unsigned long long 
  7510 ;;  ll              8  [STACK] long long 
  7511 ;;  f               4  [STACK] long long 
  7512 ;;  ct              3  [STACK] unsigned char [3]
  7513 ;;  vp              3    0        PTR void 
  7514 ;;  cp              2  [STACK] PTR unsigned char 
  7515 ;;		 -> ?_printf(2), ?_sprintf(2), STR_19(9), STR_18(12), 
  7516 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  7517 ;;		 -> STR_3(6), V(187), 
  7518 ;;  i               2    0        int 
  7519 ;;  done            2    0        int 
  7520 ;;  c               1  [STACK] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  2  [STACK] int 
  7523 ;; Registers used:
  7524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/5
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:   12
  7537 ;; This function calls:
  7538 ;;		_atoi
  7539 ;;		_ctoa
  7540 ;;		_dtoa
  7541 ;;		_efgtoa
  7542 ;;		_fputc
  7543 ;;		_isdigit
  7544 ;;		_isupper
  7545 ;;		_stoa
  7546 ;;		_strncmp
  7547 ;;		_tolower
  7548 ;;		_xtoa
  7549 ;; This function is called by:
  7550 ;;		_vfprintf
  7551 ;; This function uses a reentrant model
  7552 ;;
  7553                           
  7554                           	psect	text39
  7555  011244                     __ptext39:
  7556                           	opt callstack 0
  7557  011244                     _vfpfcnvrt:
  7558                           	opt callstack 0
  7559                           
  7560                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7561  011244  0E20               	movlw	32
  7562  011246  26E1               	addwf	fsr1l,f,c
  7563  011248  0E00               	movlw	0
  7564  01124A  22E2               	addwfc	fsr1h,f,c
  7565                           
  7566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7567                           ;stkvar	_fmt @ sp[(-32)+-4]
  7568                           
  7569                           ;incstack = 0
  7570  01124C  0EDC               	movlw	-36
  7571  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7572  011254  0EDD               	movlw	-35
  7573  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7574  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7575  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7576  011268                     	if	0	;tblptru may be non-zero
  7577  011268                     	endif
  7578  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7579  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7580  01126A  6EF8               	movwf	tblptru,c
  7581  01126C                     	endif
  7582  01126C  0008               	tblrd		*
  7583  01126E  50F5               	movf	tablat,w,c
  7584  011270  0A25               	xorlw	37
  7585  011272  A4D8               	btfss	status,2,c
  7586  011274  EF92  F08E         	goto	l10166
  7587                           
  7588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7589                           ;stkvar	_fmt @ sp[(-32)+-4]
  7590  011278  0EDC               	movlw	-36
  7591  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7592  011280  0EDD               	movlw	-35
  7593  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7594  011288  2ADE               	incf	postinc2,f,c
  7595  01128A  0E00               	movlw	0
  7596  01128C  22DD               	addwfc	postdec2,f,c
  7597                           
  7598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7599  01128E  6A1B               	clrf	_width^0,c
  7600  011290  6A1C               	clrf	(_width+1)^0,c
  7601  011292  6A1F               	clrf	_flags^0,c
  7602  011294  6A20               	clrf	(_flags+1)^0,c
  7603                           
  7604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7605  011296  681D               	setf	_prec^0,c
  7606  011298  681E               	setf	(_prec+1)^0,c
  7607                           
  7608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7609                           ;stkvar	_fmt @ sp[(-32)+-4]
  7610  01129A  0EDC               	movlw	-36
  7611  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7612  0112A2  0EDD               	movlw	-35
  7613  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7614  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7615  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7616  0112B6                     	if	0	;tblptru may be non-zero
  7617  0112B6                     	endif
  7618  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7619  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7620  0112B8  6EF8               	movwf	tblptru,c
  7621  0112BA                     	endif
  7622  0112BA  0008               	tblrd		*
  7623  0112BC  50F5               	movf	tablat,w,c
  7624  0112BE  0A2A               	xorlw	42
  7625  0112C0  A4D8               	btfss	status,2,c
  7626  0112C2  D031               	goto	l10030
  7627                           
  7628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7629                           ;stkvar	_fmt @ sp[(-32)+-4]
  7630  0112C4  0EDC               	movlw	-36
  7631  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7632  0112CC  0EDD               	movlw	-35
  7633  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7634  0112D4  2ADE               	incf	postinc2,f,c
  7635  0112D6  0E00               	movlw	0
  7636  0112D8  22DD               	addwfc	postdec2,f,c
  7637                           
  7638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7639                           ;stkvar	_ap @ sp[(-32)+-6]
  7640  0112DA  0EDA               	movlw	-38
  7641  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7642  0112E2  0EDB               	movlw	-37
  7643  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7644  0112EA  0E02               	movlw	2
  7645  0112EC  5EDE               	subwf	postinc2,f,c
  7646  0112EE  0E00               	movlw	0
  7647  0112F0  5ADD               	subwfb	postdec2,f,c
  7648  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7649  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7650  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7651  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7652  01130A  006F FF78  F01B    	movff	postinc2,_width
  7653  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7654                           
  7655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7656  011316  AE1C               	btfss	(_width+1)^0,7,c
  7657  011318  D066               	goto	u10060
  7658                           
  7659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7660  01131A  801F               	bsf	_flags^0,0,c
  7661                           
  7662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7663  01131C  6C1B               	negf	_width^0,c
  7664  01131E  1E1C               	comf	(_width+1)^0,f,c
  7665  011320  B0D8               	btfsc	status,0,c
  7666  011322  2A1C               	incf	(_width+1)^0,f,c
  7667  011324  D060               	goto	u10060
  7668  011326                     l10030:
  7669                           
  7670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7671                           ;stkvar	_fmt @ sp[(-32)+-4]
  7672  011326  0EDC               	movlw	-36
  7673  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7674  01132E  0EDD               	movlw	-35
  7675  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7676  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7677  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7678  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7679  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7680  01134E  EC20  F0A8         	call	_atoi	;wreg free
  7681  011352  0060  F0C8  F01B   	movff	btemp,_width
  7682  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7683                           
  7684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7685  01135E  D00B               	goto	l10034
  7686  011360                     l10032:
  7687                           
  7688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7689                           ;stkvar	_fmt @ sp[(-32)+-4]
  7690  011360  0EDC               	movlw	-36
  7691  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7692  011368  0EDD               	movlw	-35
  7693  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7694  011370  2ADE               	incf	postinc2,f,c
  7695  011372  0E00               	movlw	0
  7696  011374  22DD               	addwfc	postdec2,f,c
  7697  011376                     l10034:
  7698  011376  0ED0               	movlw	208
  7699  011378  6E3C               	movwf	(btemp+10)^0,c
  7700  01137A  0EFF               	movlw	255
  7701  01137C  6E3D               	movwf	(btemp+11)^0,c
  7702                           
  7703                           ;stkvar	_fmt @ sp[(-32)+-4]
  7704  01137E  0EDC               	movlw	-36
  7705  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7706  011386  0EDD               	movlw	-35
  7707  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7708  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7709  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7710  01139A                     	if	0	;tblptru may be non-zero
  7711  01139A                     	endif
  7712  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7713  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7714  01139C  6EF8               	movwf	tblptru,c
  7715  01139E                     	endif
  7716  01139E  0008               	tblrd		*
  7717  0113A0  50F5               	movf	tablat,w,c
  7718  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7719  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7720  0113A6  503C               	movf	(btemp+10)^0,w,c
  7721  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7722  0113AA  503D               	movf	(btemp+11)^0,w,c
  7723  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7724  0113AE  503B               	movf	(btemp+9)^0,w,c
  7725  0113B0  E106               	bnz	u10040
  7726  0113B2  0E0A               	movlw	10
  7727  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7728  0113B6  B0D8               	btfsc	status,0,c
  7729  0113B8  D002               	goto	u10040
  7730  0113BA  0E01               	movlw	1
  7731  0113BC  D001               	goto	u10050
  7732  0113BE                     u10040:
  7733  0113BE  0E00               	movlw	0
  7734  0113C0                     u10050:
  7735  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7736  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7737                           
  7738                           ;stkvar	_vfpfcnvrt$4535 @ sp[(-32)+4]
  7739  0113C4  0EE4               	movlw	-28
  7740  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7741  0113CC  0EE5               	movlw	-27
  7742  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7743                           
  7744                           ;stkvar	_vfpfcnvrt$4535 @ sp[(-32)+4]
  7745  0113D4  0EE4               	movlw	-28
  7746  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7747  0113DC  0EE5               	movlw	-27
  7748  0113DE  50E3               	movf	plusw1,w,c
  7749  0113E0  1032               	iorwf	btemp^0,w,c
  7750  0113E2  A4D8               	btfss	status,2,c
  7751  0113E4  D7BD               	goto	l10032
  7752  0113E6                     u10060:
  7753                           
  7754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7755                           ;stkvar	_fmt @ sp[(-32)+-4]
  7756  0113E6  0EDC               	movlw	-36
  7757  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7758  0113EE  0EDD               	movlw	-35
  7759  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7760  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7761  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7762  011402                     	if	0	;tblptru may be non-zero
  7763  011402                     	endif
  7764  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7765  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7766  011404  6EF8               	movwf	tblptru,c
  7767  011406                     	endif
  7768  011406  0008               	tblrd		*
  7769  011408  50F5               	movf	tablat,w,c
  7770  01140A  0A2E               	xorlw	46
  7771  01140C  A4D8               	btfss	status,2,c
  7772  01140E  D0AC               	goto	u10110
  7773                           
  7774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7775  011410  6A1D               	clrf	_prec^0,c
  7776  011412  6A1E               	clrf	(_prec+1)^0,c
  7777                           
  7778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7779                           ;stkvar	_fmt @ sp[(-32)+-4]
  7780  011414  0EDC               	movlw	-36
  7781  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7782  01141C  0EDD               	movlw	-35
  7783  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7784  011424  2ADE               	incf	postinc2,f,c
  7785  011426  0E00               	movlw	0
  7786  011428  22DD               	addwfc	postdec2,f,c
  7787                           
  7788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7789                           ;stkvar	_fmt @ sp[(-32)+-4]
  7790  01142A  0EDC               	movlw	-36
  7791  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7792  011432  0EDD               	movlw	-35
  7793  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7794  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7795  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7796  011446                     	if	0	;tblptru may be non-zero
  7797  011446                     	endif
  7798  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7799  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7800  011448  6EF8               	movwf	tblptru,c
  7801  01144A                     	endif
  7802  01144A  0008               	tblrd		*
  7803  01144C  50F5               	movf	tablat,w,c
  7804  01144E  0A2A               	xorlw	42
  7805  011450  A4D8               	btfss	status,2,c
  7806  011452  D02A               	goto	l10052
  7807                           
  7808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7809                           ;stkvar	_fmt @ sp[(-32)+-4]
  7810  011454  0EDC               	movlw	-36
  7811  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7812  01145C  0EDD               	movlw	-35
  7813  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7814  011464  2ADE               	incf	postinc2,f,c
  7815  011466  0E00               	movlw	0
  7816  011468  22DD               	addwfc	postdec2,f,c
  7817                           
  7818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7819                           ;stkvar	_ap @ sp[(-32)+-6]
  7820  01146A  0EDA               	movlw	-38
  7821  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7822  011472  0EDB               	movlw	-37
  7823  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7824  01147A  0E02               	movlw	2
  7825  01147C  5EDE               	subwf	postinc2,f,c
  7826  01147E  0E00               	movlw	0
  7827  011480  5ADD               	subwfb	postdec2,f,c
  7828  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7829  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7830  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7831  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7832  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7833  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7834                           
  7835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7836  0114A6  D060               	goto	u10110
  7837  0114A8                     l10052:
  7838                           
  7839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7840                           ;stkvar	_fmt @ sp[(-32)+-4]
  7841  0114A8  0EDC               	movlw	-36
  7842  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7843  0114B0  0EDD               	movlw	-35
  7844  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7845  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7846  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7847  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7848  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7849  0114D0  EC20  F0A8         	call	_atoi	;wreg free
  7850  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7851  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7852                           
  7853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7854  0114E0  D00B               	goto	l10056
  7855  0114E2                     l10054:
  7856                           
  7857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7858                           ;stkvar	_fmt @ sp[(-32)+-4]
  7859  0114E2  0EDC               	movlw	-36
  7860  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7861  0114EA  0EDD               	movlw	-35
  7862  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7863  0114F2  2ADE               	incf	postinc2,f,c
  7864  0114F4  0E00               	movlw	0
  7865  0114F6  22DD               	addwfc	postdec2,f,c
  7866  0114F8                     l10056:
  7867  0114F8  0ED0               	movlw	208
  7868  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7869  0114FC  0EFF               	movlw	255
  7870  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7871                           
  7872                           ;stkvar	_fmt @ sp[(-32)+-4]
  7873  011500  0EDC               	movlw	-36
  7874  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7875  011508  0EDD               	movlw	-35
  7876  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7877  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7878  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7879  01151C                     	if	0	;tblptru may be non-zero
  7880  01151C                     	endif
  7881  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7882  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7883  01151E  6EF8               	movwf	tblptru,c
  7884  011520                     	endif
  7885  011520  0008               	tblrd		*
  7886  011522  50F5               	movf	tablat,w,c
  7887  011524  6E3A               	movwf	(btemp+8)^0,c
  7888  011526  6A3B               	clrf	(btemp+9)^0,c
  7889  011528  503C               	movf	(btemp+10)^0,w,c
  7890  01152A  263A               	addwf	(btemp+8)^0,f,c
  7891  01152C  503D               	movf	(btemp+11)^0,w,c
  7892  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7893  011530  503B               	movf	(btemp+9)^0,w,c
  7894  011532  E106               	bnz	u10090
  7895  011534  0E0A               	movlw	10
  7896  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7897  011538  B0D8               	btfsc	status,0,c
  7898  01153A  D002               	goto	u10090
  7899  01153C  0E01               	movlw	1
  7900  01153E  D001               	goto	u10100
  7901  011540                     u10090:
  7902  011540  0E00               	movlw	0
  7903  011542                     u10100:
  7904  011542  6E3C               	movwf	(btemp+10)^0,c
  7905  011544  6A3D               	clrf	(btemp+11)^0,c
  7906                           
  7907                           ;stkvar	_vfpfcnvrt$4536 @ sp[(-32)+0]
  7908  011546  0EE0               	movlw	-32
  7909  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7910  01154E  0EE1               	movlw	-31
  7911  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7912                           
  7913                           ;stkvar	_vfpfcnvrt$4536 @ sp[(-32)+0]
  7914  011556  0EE0               	movlw	-32
  7915  011558  006F FF8C  F032    	movff	plusw1,btemp
  7916  01155E  0EE1               	movlw	-31
  7917  011560  50E3               	movf	plusw1,w,c
  7918  011562  1032               	iorwf	btemp^0,w,c
  7919  011564  A4D8               	btfss	status,2,c
  7920  011566  D7BD               	goto	l10054
  7921  011568                     u10110:
  7922                           
  7923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7924                           ;stkvar	_fmt @ sp[(-32)+-4]
  7925  011568  0EDC               	movlw	-36
  7926  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7927  011570  0EDD               	movlw	-35
  7928  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7929  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7930  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7931  011584                     	if	0	;tblptru may be non-zero
  7932  011584                     	endif
  7933  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7934  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7935  011586  6EF8               	movwf	tblptru,c
  7936  011588                     	endif
  7937  011588  0008               	tblrd		*
  7938  01158A  50F5               	movf	tablat,w,c
  7939  01158C  6EE6               	movwf	postinc1,c
  7940  01158E  0E00               	movlw	0
  7941  011590  6EE6               	movwf	postinc1,c
  7942  011592  ECA9  F0BB         	call	_tolower	;wreg free
  7943                           
  7944                           ;stkvar	_ct @ sp[(-32)+26]
  7945  011596  0EFA               	movlw	-6
  7946  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7947                           
  7948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7949                           ;stkvar	_ct @ sp[(-32)+26]
  7950  01159E  0EFA               	movlw	-6
  7951  0115A0  50E3               	movf	plusw1,w,c
  7952  0115A2  B4D8               	btfsc	status,2,c
  7953  0115A4  D05B               	goto	l10072
  7954                           
  7955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7956                           ;stkvar	_ct @ sp[(-32)+26]
  7957  0115A6  0EFB               	movlw	251
  7958  0115A8  24E1               	addwf	fsr1l,w,c
  7959  0115AA  6ED9               	movwf	fsr2l,c
  7960  0115AC  0EFF               	movlw	255
  7961  0115AE  20E2               	addwfc	fsr1h,w,c
  7962  0115B0  6EDA               	movwf	fsr2h,c
  7963                           
  7964                           ;stkvar	_fmt @ sp[(-32)+-4]
  7965  0115B2  0EDC               	movlw	-36
  7966  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7967  0115BA  0EDD               	movlw	-35
  7968  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7969  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7970  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7971  0115CE  0E01               	movlw	1
  7972  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7973  0115D2  0E00               	movlw	0
  7974  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7975  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7976  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7977  0115E2                     	if	0	;tblptru may be non-zero
  7978  0115E2                     	endif
  7979  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7980  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7981  0115E4  6EF8               	movwf	tblptru,c
  7982  0115E6                     	endif
  7983  0115E6  0008               	tblrd		*
  7984  0115E8  50F5               	movf	tablat,w,c
  7985  0115EA  6EE6               	movwf	postinc1,c
  7986  0115EC  0E00               	movlw	0
  7987  0115EE  6EE6               	movwf	postinc1,c
  7988  0115F0  ECA9  F0BB         	call	_tolower	;wreg free
  7989  0115F4  5032               	movf	btemp^0,w,c
  7990  0115F6  6EDF               	movwf	indf2,c
  7991                           
  7992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7993                           ;stkvar	_ct @ sp[(-32)+26]
  7994  0115F8  0EFB               	movlw	251
  7995  0115FA  24E1               	addwf	fsr1l,w,c
  7996  0115FC  6ED9               	movwf	fsr2l,c
  7997  0115FE  0EFF               	movlw	255
  7998  011600  20E2               	addwfc	fsr1h,w,c
  7999  011602  6EDA               	movwf	fsr2h,c
  8000  011604  50DF               	movf	indf2,w,c
  8001  011606  B4D8               	btfsc	status,2,c
  8002  011608  D029               	goto	l10072
  8003                           
  8004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8005                           ;stkvar	_ct @ sp[(-32)+26]
  8006  01160A  0EFC               	movlw	252
  8007  01160C  24E1               	addwf	fsr1l,w,c
  8008  01160E  6ED9               	movwf	fsr2l,c
  8009  011610  0EFF               	movlw	255
  8010  011612  20E2               	addwfc	fsr1h,w,c
  8011  011614  6EDA               	movwf	fsr2h,c
  8012                           
  8013                           ;stkvar	_fmt @ sp[(-32)+-4]
  8014  011616  0EDC               	movlw	-36
  8015  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8016  01161E  0EDD               	movlw	-35
  8017  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  8018  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  8019  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  8020  011632  0E02               	movlw	2
  8021  011634  263C               	addwf	(btemp+10)^0,f,c
  8022  011636  0E00               	movlw	0
  8023  011638  223D               	addwfc	(btemp+11)^0,f,c
  8024  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8025  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8026  011646                     	if	0	;tblptru may be non-zero
  8027  011646                     	endif
  8028  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8029  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  8030  011648  6EF8               	movwf	tblptru,c
  8031  01164A                     	endif
  8032  01164A  0008               	tblrd		*
  8033  01164C  50F5               	movf	tablat,w,c
  8034  01164E  6EE6               	movwf	postinc1,c
  8035  011650  0E00               	movlw	0
  8036  011652  6EE6               	movwf	postinc1,c
  8037  011654  ECA9  F0BB         	call	_tolower	;wreg free
  8038  011658  5032               	movf	btemp^0,w,c
  8039  01165A  6EDF               	movwf	indf2,c
  8040  01165C                     l10072:
  8041                           
  8042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8043                           ;stkvar	_fmt @ sp[(-32)+-4]
  8044  01165C  0EDC               	movlw	-36
  8045  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8046  011664  0EDD               	movlw	-35
  8047  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  8048  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8049  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  8050  011678                     	if	0	;tblptru may be non-zero
  8051  011678                     	endif
  8052  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8053  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  8054  01167A  6EF8               	movwf	tblptru,c
  8055  01167C                     	endif
  8056  01167C  0008               	tblrd		*
  8057  01167E  50F5               	movf	tablat,w,c
  8058  011680  0A63               	xorlw	99
  8059  011682  A4D8               	btfss	status,2,c
  8060  011684  D036               	goto	l10082
  8061                           
  8062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8063                           ;stkvar	_fmt @ sp[(-32)+-4]
  8064  011686  0EDC               	movlw	-36
  8065  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8066  01168E  0EDD               	movlw	-35
  8067  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8068  011696  2ADE               	incf	postinc2,f,c
  8069  011698  0E00               	movlw	0
  8070  01169A  22DD               	addwfc	postdec2,f,c
  8071                           
  8072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8073                           ;stkvar	_ap @ sp[(-32)+-6]
  8074  01169C  0EDA               	movlw	-38
  8075  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8076  0116A4  0EDB               	movlw	-37
  8077  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8078  0116AC  0E02               	movlw	2
  8079  0116AE  5EDE               	subwf	postinc2,f,c
  8080  0116B0  0E00               	movlw	0
  8081  0116B2  5ADD               	subwfb	postdec2,f,c
  8082  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8083  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8084  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8085  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8086  0116CC  50DF               	movf	indf2,w,c
  8087  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8088                           
  8089                           ;stkvar	_c @ sp[(-32)+31]
  8090  0116D0  0EFF               	movlw	-1
  8091  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8092                           
  8093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8094                           ;stkvar	_c @ sp[(-32)+31]
  8095  0116D8  0EFF               	movlw	-1
  8096  0116DA  50E3               	movf	plusw1,w,c
  8097  0116DC  6EE6               	movwf	postinc1,c
  8098                           
  8099                           ;stkvar	_fp @ sp[(-33)+-2]
  8100  0116DE  0EDD               	movlw	-35
  8101  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8102  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8103  0116EC  EC23  F0BB         	call	_ctoa	;wreg free
  8104  0116F0  D343               	goto	l2052
  8105  0116F2                     l10082:
  8106                           
  8107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8108                           ;stkvar	_fmt @ sp[(-32)+-4]
  8109  0116F2  0EDC               	movlw	-36
  8110  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8111  0116FA  0EDD               	movlw	-35
  8112  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8113  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8114  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8115  01170E                     	if	0	;tblptru may be non-zero
  8116  01170E                     	endif
  8117  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8118  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8119  011710  6EF8               	movwf	tblptru,c
  8120  011712                     	endif
  8121  011712  0008               	tblrd		*
  8122  011714  50F5               	movf	tablat,w,c
  8123  011716  0A64               	xorlw	100
  8124  011718  B4D8               	btfsc	status,2,c
  8125  01171A  D015               	goto	u10160
  8126                           
  8127                           ;stkvar	_fmt @ sp[(-32)+-4]
  8128  01171C  0EDC               	movlw	-36
  8129  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8130  011724  0EDD               	movlw	-35
  8131  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8132  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8133  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8134  011738                     	if	0	;tblptru may be non-zero
  8135  011738                     	endif
  8136  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8137  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8138  01173A  6EF8               	movwf	tblptru,c
  8139  01173C                     	endif
  8140  01173C  0008               	tblrd		*
  8141  01173E  50F5               	movf	tablat,w,c
  8142  011740  0A69               	xorlw	105
  8143  011742  A4D8               	btfss	status,2,c
  8144  011744  D075               	goto	l10094
  8145  011746                     u10160:
  8146                           
  8147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8148                           ;stkvar	_fmt @ sp[(-32)+-4]
  8149  011746  0EDC               	movlw	-36
  8150  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8151  01174E  0EDD               	movlw	-35
  8152  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8153  011756  2ADE               	incf	postinc2,f,c
  8154  011758  0E00               	movlw	0
  8155  01175A  22DD               	addwfc	postdec2,f,c
  8156                           
  8157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8158                           ;stkvar	_ap @ sp[(-32)+-6]
  8159  01175C  0EDA               	movlw	-38
  8160  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8161  011764  0EDB               	movlw	-37
  8162  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8163  01176C  0E02               	movlw	2
  8164  01176E  5EDE               	subwf	postinc2,f,c
  8165  011770  0E00               	movlw	0
  8166  011772  5ADD               	subwfb	postdec2,f,c
  8167  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8168  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8169  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8170  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8171  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8172  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8173                           
  8174                           ;stkvar	_ll @ sp[(-32)+14]
  8175  011798  0EEE               	movlw	-18
  8176  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8177  0117A0  0EEF               	movlw	-17
  8178  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8179  0117A8  6A32               	clrf	btemp^0,c
  8180  0117AA  BEE3               	btfsc	plusw1,7,c
  8181  0117AC  6832               	setf	btemp^0,c
  8182  0117AE  0EF0               	movlw	-16
  8183  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8184  0117B6  0EF1               	movlw	-15
  8185  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8186  0117BE  0EF2               	movlw	-14
  8187  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8188  0117C6  0EF3               	movlw	-13
  8189  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8190  0117CE  0EF4               	movlw	-12
  8191  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8192  0117D6  0EF5               	movlw	-11
  8193  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8194                           
  8195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8196                           ;stkvar	_ll @ sp[(-32)+14]
  8197  0117DE  50E1               	movf	fsr1l,w,c
  8198  0117E0  0FEE               	addlw	-18
  8199  0117E2  6ED9               	movwf	fsr2l,c
  8200  0117E4  50E2               	movf	fsr1h,w,c
  8201  0117E6  6EDA               	movwf	fsr2h,c
  8202  0117E8  0EFF               	movlw	255
  8203  0117EA  22DA               	addwfc	fsr2h,f,c
  8204  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8205  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8206  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8207  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8208  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8209  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8210  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8211  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8212                           
  8213                           ;stkvar	_fp @ sp[(-40)+-2]
  8214  01181C  0ED6               	movlw	-42
  8215  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8216  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8217  01182A  EC38  F09E         	call	_dtoa	;wreg free
  8218  01182E  D2A4               	goto	l2052
  8219  011830                     l10094:
  8220                           
  8221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8222                           ;stkvar	_ct @ sp[(-32)+26]
  8223  011830  0EFA               	movlw	-6
  8224  011832  006F FF8C  F032    	movff	plusw1,btemp
  8225  011838  0E66               	movlw	102
  8226  01183A  1832               	xorwf	btemp^0,w,c
  8227  01183C  A4D8               	btfss	status,2,c
  8228  01183E  D06E               	goto	l10106
  8229                           
  8230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8231                           ;stkvar	_fmt @ sp[(-32)+-4]
  8232  011840  0EDC               	movlw	-36
  8233  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8234  011848  0EDD               	movlw	-35
  8235  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8236  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8237  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8238  01185C                     	if	0	;tblptru may be non-zero
  8239  01185C                     	endif
  8240  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8241  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8242  01185E  6EF8               	movwf	tblptru,c
  8243  011860                     	endif
  8244                           
  8245                           ;stkvar	_c @ sp[(-32)+31]
  8246  011860  0008               	tblrd		*
  8247  011862  0EFF               	movlw	-1
  8248  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8249                           
  8250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8251                           ;stkvar	_fmt @ sp[(-32)+-4]
  8252  01186A  0EDC               	movlw	-36
  8253  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8254  011872  0EDD               	movlw	-35
  8255  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8256  01187A  2ADE               	incf	postinc2,f,c
  8257  01187C  0E00               	movlw	0
  8258  01187E  22DD               	addwfc	postdec2,f,c
  8259                           
  8260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8261                           ;stkvar	_ap @ sp[(-32)+-6]
  8262  011880  0EDA               	movlw	-38
  8263  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8264  011888  0EDB               	movlw	-37
  8265  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8266  011890  0E04               	movlw	4
  8267  011892  5EDE               	subwf	postinc2,f,c
  8268  011894  0E00               	movlw	0
  8269  011896  5ADD               	subwfb	postdec2,f,c
  8270  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8271  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8272  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8273  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8274  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8275  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8276  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8277  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8278                           
  8279                           ;stkvar	_f @ sp[(-32)+22]
  8280  0118C8  0EF6               	movlw	-10
  8281  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8282  0118D0  0EF7               	movlw	-9
  8283  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8284  0118D8  0EF8               	movlw	-8
  8285  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8286  0118E0  0EF9               	movlw	-7
  8287  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8288  0118E8                     l10102:
  8289                           
  8290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8291                           ;stkvar	_c @ sp[(-32)+31]
  8292  0118E8  0EFF               	movlw	-1
  8293  0118EA  50E3               	movf	plusw1,w,c
  8294  0118EC  6EE6               	movwf	postinc1,c
  8295                           
  8296                           ;stkvar	_f @ sp[(-33)+22]
  8297  0118EE  0EF5               	movlw	-11
  8298  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8299  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8300  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8301  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8302                           
  8303                           ;stkvar	_fp @ sp[(-37)+-2]
  8304  011908  0ED9               	movlw	-39
  8305  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8306  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8307  011916  EC00  F080         	call	_efgtoa	;wreg free
  8308  01191A  D22E               	goto	l2052
  8309  01191C                     l10106:
  8310                           
  8311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8312  01191C  0E02               	movlw	2
  8313  01191E  6EE6               	movwf	postinc1,c
  8314  011920  0E00               	movlw	0
  8315  011922  6EE6               	movwf	postinc1,c
  8316  011924  0EF5               	movlw	low STR_45
  8317  011926  6EE6               	movwf	postinc1,c
  8318  011928  0EFF               	movlw	high STR_45
  8319  01192A  6EE6               	movwf	postinc1,c
  8320                           
  8321                           ;stkvar	_ct @ sp[(-36)+26]
  8322  01192C  0EF6               	movlw	246
  8323  01192E  24E1               	addwf	fsr1l,w,c
  8324  011930  6E32               	movwf	btemp^0,c
  8325  011932  0EFF               	movlw	255
  8326  011934  20E2               	addwfc	fsr1h,w,c
  8327  011936  6E33               	movwf	(btemp+1)^0,c
  8328  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8329  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8330  011944  ECBA  F0AD         	call	_strncmp	;wreg free
  8331  011948  5032               	movf	btemp^0,w,c
  8332  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8333  01194C  A4D8               	btfss	status,2,c
  8334  01194E  D096               	goto	l10126
  8335                           
  8336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8337                           ;stkvar	_fmt @ sp[(-32)+-4]
  8338  011950  0EDC               	movlw	-36
  8339  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8340  011958  0EDD               	movlw	-35
  8341  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8342  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8343  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8344  01196C  0E01               	movlw	1
  8345  01196E  263C               	addwf	(btemp+10)^0,f,c
  8346  011970  0E00               	movlw	0
  8347  011972  223D               	addwfc	(btemp+11)^0,f,c
  8348  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8349  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8350  011980                     	if	0	;tblptru may be non-zero
  8351  011980                     	endif
  8352  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8353  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8354  011982  6EF8               	movwf	tblptru,c
  8355  011984                     	endif
  8356                           
  8357                           ;stkvar	_c @ sp[(-32)+31]
  8358  011984  0008               	tblrd		*
  8359  011986  0EFF               	movlw	-1
  8360  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8361  01198E  0EBF               	movlw	191
  8362  011990  6E3C               	movwf	(btemp+10)^0,c
  8363  011992  0EFF               	movlw	255
  8364  011994  6E3D               	movwf	(btemp+11)^0,c
  8365                           
  8366                           ;stkvar	_fmt @ sp[(-32)+-4]
  8367  011996  0EDC               	movlw	-36
  8368  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8369  01199E  0EDD               	movlw	-35
  8370  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8371  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8372  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8373  0119B2                     	if	0	;tblptru may be non-zero
  8374  0119B2                     	endif
  8375  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8376  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8377  0119B4  6EF8               	movwf	tblptru,c
  8378  0119B6                     	endif
  8379  0119B6  0008               	tblrd		*
  8380  0119B8  50F5               	movf	tablat,w,c
  8381  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8382  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8383  0119BE  503C               	movf	(btemp+10)^0,w,c
  8384  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8385  0119C2  503D               	movf	(btemp+11)^0,w,c
  8386  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8387  0119C6  503B               	movf	(btemp+9)^0,w,c
  8388  0119C8  E106               	bnz	u10190
  8389  0119CA  0E1A               	movlw	26
  8390  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8391  0119CE  B0D8               	btfsc	status,0,c
  8392  0119D0  D002               	goto	u10190
  8393  0119D2  0E01               	movlw	1
  8394  0119D4  D001               	goto	u10200
  8395  0119D6                     u10190:
  8396  0119D6  0E00               	movlw	0
  8397  0119D8                     u10200:
  8398  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8399  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8400                           
  8401                           ;stkvar	_vfpfcnvrt$4542 @ sp[(-32)+2]
  8402  0119DC  0EE2               	movlw	-30
  8403  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8404  0119E4  0EE3               	movlw	-29
  8405  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8406                           
  8407                           ;stkvar	_vfpfcnvrt$4542 @ sp[(-32)+2]
  8408  0119EC  0EE2               	movlw	-30
  8409  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8410  0119F4  0EE3               	movlw	-29
  8411  0119F6  50E3               	movf	plusw1,w,c
  8412  0119F8  1032               	iorwf	btemp^0,w,c
  8413                           
  8414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8415                           ;stkvar	_ap @ sp[(-32)+-6]
  8416                           
  8417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8418                           
  8419                           ;stkvar	_f @ sp[(-32)+22]
  8420                           
  8421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8422                           ;stkvar	_ap @ sp[(-32)+-6]
  8423  0119FA  0EDA               	movlw	-38
  8424  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8425  011A02  0EDB               	movlw	-37
  8426  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8427  011A0A  0E04               	movlw	4
  8428  011A0C  5EDE               	subwf	postinc2,f,c
  8429  011A0E  0E00               	movlw	0
  8430  011A10  5ADD               	subwfb	postdec2,f,c
  8431  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8432  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8433  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8434  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8435  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8436  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8437  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8438  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8439                           
  8440                           ;stkvar	_f @ sp[(-32)+22]
  8441  011A42  0EF6               	movlw	-10
  8442  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8443  011A4A  0EF7               	movlw	-9
  8444  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8445  011A52  0EF8               	movlw	-8
  8446  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8447  011A5A  0EF9               	movlw	-7
  8448  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8449                           
  8450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8451                           ;stkvar	_fmt @ sp[(-32)+-4]
  8452  011A62  0EDC               	movlw	-36
  8453  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8454  011A6A  0EDD               	movlw	-35
  8455  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8456  011A72  0E02               	movlw	2
  8457  011A74  26DE               	addwf	postinc2,f,c
  8458  011A76  0E00               	movlw	0
  8459  011A78  22DD               	addwfc	postdec2,f,c
  8460  011A7A  D736               	goto	l10102
  8461  011A7C                     l10126:
  8462                           
  8463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8464                           ;stkvar	_fmt @ sp[(-32)+-4]
  8465  011A7C  0EDC               	movlw	-36
  8466  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8467  011A84  0EDD               	movlw	-35
  8468  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8469  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8470  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8471  011A98                     	if	0	;tblptru may be non-zero
  8472  011A98                     	endif
  8473  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8474  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8475  011A9A  6EF8               	movwf	tblptru,c
  8476  011A9C                     	endif
  8477  011A9C  0008               	tblrd		*
  8478  011A9E  50F5               	movf	tablat,w,c
  8479  011AA0  0A73               	xorlw	115
  8480  011AA2  A4D8               	btfss	status,2,c
  8481  011AA4  D042               	goto	l10136
  8482                           
  8483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8484                           ;stkvar	_fmt @ sp[(-32)+-4]
  8485  011AA6  0EDC               	movlw	-36
  8486  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8487  011AAE  0EDD               	movlw	-35
  8488  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8489  011AB6  2ADE               	incf	postinc2,f,c
  8490  011AB8  0E00               	movlw	0
  8491  011ABA  22DD               	addwfc	postdec2,f,c
  8492                           
  8493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8494                           ;stkvar	_ap @ sp[(-32)+-6]
  8495  011ABC  0EDA               	movlw	-38
  8496  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8497  011AC4  0EDB               	movlw	-37
  8498  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8499  011ACC  0E02               	movlw	2
  8500  011ACE  5EDE               	subwf	postinc2,f,c
  8501  011AD0  0E00               	movlw	0
  8502  011AD2  5ADD               	subwfb	postdec2,f,c
  8503  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8504  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8505  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8506  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8507  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8508  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8509                           
  8510                           ;stkvar	_cp @ sp[(-32)+29]
  8511  011AF8  0EFE               	movlw	-2
  8512  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8513  011B00  0EFD               	movlw	-3
  8514  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8515                           
  8516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8517                           ;stkvar	_cp @ sp[(-32)+29]
  8518  011B08  0EFD               	movlw	-3
  8519  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8520  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8521                           
  8522                           ;stkvar	_fp @ sp[(-34)+-2]
  8523  011B16  0EDC               	movlw	-36
  8524  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8525  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8526  011B24  EC81  F0A5         	call	_stoa	;wreg free
  8527  011B28  D127               	goto	l2052
  8528  011B2A                     l10136:
  8529                           
  8530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8531                           ;stkvar	_fmt @ sp[(-32)+-4]
  8532  011B2A  0EDC               	movlw	-36
  8533  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8534  011B32  0EDD               	movlw	-35
  8535  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8536  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8537  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8538  011B46                     	if	0	;tblptru may be non-zero
  8539  011B46                     	endif
  8540  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8541  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8542  011B48  6EF8               	movwf	tblptru,c
  8543  011B4A                     	endif
  8544  011B4A  0008               	tblrd		*
  8545  011B4C  50F5               	movf	tablat,w,c
  8546  011B4E  0A78               	xorlw	120
  8547  011B50  B4D8               	btfsc	status,2,c
  8548  011B52  D015               	goto	u10240
  8549                           
  8550                           ;stkvar	_fmt @ sp[(-32)+-4]
  8551  011B54  0EDC               	movlw	-36
  8552  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8553  011B5C  0EDD               	movlw	-35
  8554  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8555  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8556  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8557  011B70                     	if	0	;tblptru may be non-zero
  8558  011B70                     	endif
  8559  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8560  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8561  011B72  6EF8               	movwf	tblptru,c
  8562  011B74                     	endif
  8563  011B74  0008               	tblrd		*
  8564  011B76  50F5               	movf	tablat,w,c
  8565  011B78  0A58               	xorlw	88
  8566  011B7A  A4D8               	btfss	status,2,c
  8567  011B7C  D094               	goto	l10150
  8568  011B7E                     u10240:
  8569                           
  8570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8571                           ;stkvar	_fmt @ sp[(-32)+-4]
  8572  011B7E  0EDC               	movlw	-36
  8573  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8574  011B86  0EDD               	movlw	-35
  8575  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8576  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8577  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8578  011B9A                     	if	0	;tblptru may be non-zero
  8579  011B9A                     	endif
  8580  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8581  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8582  011B9C  6EF8               	movwf	tblptru,c
  8583  011B9E                     	endif
  8584                           
  8585                           ;stkvar	_c @ sp[(-32)+31]
  8586  011B9E  0008               	tblrd		*
  8587  011BA0  0EFF               	movlw	-1
  8588  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8589                           
  8590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8591                           ;stkvar	_fmt @ sp[(-32)+-4]
  8592  011BA8  0EDC               	movlw	-36
  8593  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8594  011BB0  0EDD               	movlw	-35
  8595  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8596  011BB8  2ADE               	incf	postinc2,f,c
  8597  011BBA  0E00               	movlw	0
  8598  011BBC  22DD               	addwfc	postdec2,f,c
  8599                           
  8600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8601                           ;stkvar	_ap @ sp[(-32)+-6]
  8602  011BBE  0EDA               	movlw	-38
  8603  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8604  011BC6  0EDB               	movlw	-37
  8605  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8606  011BCE  0E02               	movlw	2
  8607  011BD0  5EDE               	subwf	postinc2,f,c
  8608  011BD2  0E00               	movlw	0
  8609  011BD4  5ADD               	subwfb	postdec2,f,c
  8610  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8611  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8612  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8613  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8614  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8615  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8616  011BFA  503C               	movf	(btemp+10)^0,w,c
  8617  011BFC  6E42               	movwf	(btemp+16)^0,c
  8618  011BFE  503D               	movf	(btemp+11)^0,w,c
  8619  011C00  6E43               	movwf	(btemp+17)^0,c
  8620  011C02  6A44               	clrf	(btemp+18)^0,c
  8621  011C04  6A45               	clrf	(btemp+19)^0,c
  8622  011C06  6A46               	clrf	(btemp+20)^0,c
  8623  011C08  6A47               	clrf	(btemp+21)^0,c
  8624  011C0A  6A48               	clrf	(btemp+22)^0,c
  8625  011C0C  6A49               	clrf	(btemp+23)^0,c
  8626                           
  8627                           ;stkvar	_llu @ sp[(-32)+6]
  8628  011C0E  0EE6               	movlw	-26
  8629  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8630  011C16  0EE7               	movlw	-25
  8631  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8632  011C1E  0EE8               	movlw	-24
  8633  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8634  011C26  0EE9               	movlw	-23
  8635  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8636  011C2E  0EEA               	movlw	-22
  8637  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8638  011C36  0EEB               	movlw	-21
  8639  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8640  011C3E  0EEC               	movlw	-20
  8641  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8642  011C46  0EED               	movlw	-19
  8643  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8644                           
  8645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8646                           ;stkvar	_c @ sp[(-32)+31]
  8647  011C4E  0EFF               	movlw	-1
  8648  011C50  50E3               	movf	plusw1,w,c
  8649  011C52  6EE6               	movwf	postinc1,c
  8650                           
  8651                           ;stkvar	_llu @ sp[(-33)+6]
  8652  011C54  50E1               	movf	fsr1l,w,c
  8653  011C56  0FE5               	addlw	-27
  8654  011C58  6ED9               	movwf	fsr2l,c
  8655  011C5A  50E2               	movf	fsr1h,w,c
  8656  011C5C  6EDA               	movwf	fsr2h,c
  8657  011C5E  0EFF               	movlw	255
  8658  011C60  22DA               	addwfc	fsr2h,f,c
  8659  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8660  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8661  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8662  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8663  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8664  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8665  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8666  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8667                           
  8668                           ;stkvar	_fp @ sp[(-41)+-2]
  8669  011C92  0ED5               	movlw	-43
  8670  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8671  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8672  011CA0  EC78  F0A0         	call	_xtoa	;wreg free
  8673  011CA4  D069               	goto	l2052
  8674  011CA6                     l10150:
  8675                           
  8676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8677                           ;stkvar	_fmt @ sp[(-32)+-4]
  8678  011CA6  0EDC               	movlw	-36
  8679  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8680  011CAE  0EDD               	movlw	-35
  8681  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8682  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8683  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8684  011CC2                     	if	0	;tblptru may be non-zero
  8685  011CC2                     	endif
  8686  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8687  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8688  011CC4  6EF8               	movwf	tblptru,c
  8689  011CC6                     	endif
  8690  011CC6  0008               	tblrd		*
  8691  011CC8  50F5               	movf	tablat,w,c
  8692  011CCA  0A25               	xorlw	37
  8693  011CCC  A4D8               	btfss	status,2,c
  8694  011CCE  D01A               	goto	l10160
  8695                           
  8696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8697                           ;stkvar	_fmt @ sp[(-32)+-4]
  8698  011CD0  0EDC               	movlw	-36
  8699  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8700  011CD8  0EDD               	movlw	-35
  8701  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8702  011CE0  2ADE               	incf	postinc2,f,c
  8703  011CE2  0E00               	movlw	0
  8704  011CE4  22DD               	addwfc	postdec2,f,c
  8705                           
  8706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8707                           ;stkvar	_fp @ sp[(-32)+-2]
  8708  011CE6  0EDE               	movlw	-34
  8709  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8710  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8711  011CF4  0E25               	movlw	37
  8712  011CF6  6EE6               	movwf	postinc1,c
  8713  011CF8  0E00               	movlw	0
  8714  011CFA  6EE6               	movwf	postinc1,c
  8715  011CFC  EC95  F0B3         	call	_fputc	;wreg free
  8716  011D00                     l10156:
  8717                           
  8718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8719  011D00  0E01               	movlw	1
  8720  011D02  D00C               	goto	L7
  8721  011D04                     l10160:
  8722                           
  8723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8724                           ;stkvar	_fmt @ sp[(-32)+-4]
  8725  011D04  0EDC               	movlw	-36
  8726  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8727  011D0C  0EDD               	movlw	-35
  8728  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8729  011D14  2ADE               	incf	postinc2,f,c
  8730  011D16  0E00               	movlw	0
  8731  011D18  22DD               	addwfc	postdec2,f,c
  8732                           
  8733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8734  011D1A  0E00               	movlw	0
  8735  011D1C                     L7:
  8736  011D1C  6E32               	movwf	btemp^0,c
  8737  011D1E  0E00               	movlw	0
  8738  011D20  6E33               	movwf	(btemp+1)^0,c
  8739  011D22  D02A               	goto	l2052
  8740  011D24                     l10166:
  8741                           
  8742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8743                           ;stkvar	_fp @ sp[(-32)+-2]
  8744  011D24  0EDE               	movlw	-34
  8745  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8746  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8747                           
  8748                           ;stkvar	_fmt @ sp[(-34)+-4]
  8749  011D32  0EDA               	movlw	-38
  8750  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8751  011D3A  0EDB               	movlw	-37
  8752  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8753  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8754  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8755  011D4E                     	if	0	;tblptru may be non-zero
  8756  011D4E                     	endif
  8757  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8758  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8759  011D50  6EF8               	movwf	tblptru,c
  8760  011D52                     	endif
  8761  011D52  0008               	tblrd		*
  8762  011D54  50F5               	movf	tablat,w,c
  8763  011D56  6EE6               	movwf	postinc1,c
  8764  011D58  0E00               	movlw	0
  8765  011D5A  6EE6               	movwf	postinc1,c
  8766  011D5C  EC95  F0B3         	call	_fputc	;wreg free
  8767                           
  8768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8769                           ;stkvar	_fmt @ sp[(-32)+-4]
  8770  011D60  0EDC               	movlw	-36
  8771  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8772  011D68  0EDD               	movlw	-35
  8773  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8774  011D70  2ADE               	incf	postinc2,f,c
  8775  011D72  0E00               	movlw	0
  8776  011D74  22DD               	addwfc	postdec2,f,c
  8777  011D76  D7C4               	goto	l10156
  8778  011D78                     l2052:
  8779                           
  8780                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8781  011D78  0EDA               	movlw	218
  8782  011D7A  26E1               	addwf	fsr1l,f,c
  8783  011D7C  0EFF               	movlw	255
  8784  011D7E  22E2               	addwfc	fsr1h,f,c
  8785  011D80  0012               	return		;funcret
  8786  011D82                     __end_of_vfpfcnvrt:
  8787                           	opt callstack 0
  8788                           
  8789 ;; *************** function _xtoa *****************
  8790 ;; Defined at:
  8791 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8794 ;;		 -> f(6), NULL(0), 
  8795 ;;  d               8  [STACK] unsigned long long 
  8796 ;;  x               1  [STACK] unsigned char 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  n               8  [STACK] unsigned long long 
  8799 ;;  c               2  [STACK] int 
  8800 ;;  i               2  [STACK] int 
  8801 ;;  w               2  [STACK] int 
  8802 ;;  p               2  [STACK] int 
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  2  [STACK] int 
  8805 ;; Registers used:
  8806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/5
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8816 ;;Total ram usage:        0 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:   11
  8819 ;; This function calls:
  8820 ;;		_isalpha
  8821 ;;		_isupper
  8822 ;;		_pad
  8823 ;;		_toupper
  8824 ;; This function is called by:
  8825 ;;		_vfpfcnvrt
  8826 ;; This function uses a reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text40
  8830  0140F0                     __ptext40:
  8831                           	opt callstack 0
  8832  0140F0                     _xtoa:
  8833                           	opt callstack 0
  8834                           
  8835                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8836  0140F0  0E14               	movlw	20
  8837  0140F2  26E1               	addwf	fsr1l,f,c
  8838  0140F4  0E00               	movlw	0
  8839  0140F6  22E2               	addwfc	fsr1h,f,c
  8840                           
  8841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8842                           
  8843                           ;incstack = 0
  8844  0140F8  AE1E               	btfss	(_prec+1)^0,7,c
  8845                           
  8846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8847  0140FA  921F               	bcf	_flags^0,1,c
  8848                           
  8849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8850  0140FC  BE1E               	btfsc	(_prec+1)^0,7,c
  8851  0140FE  D005               	goto	u9840
  8852  014100  501E               	movf	(_prec+1)^0,w,c
  8853  014102  E110               	bnz	l9948
  8854  014104  041D               	decf	_prec^0,w,c
  8855  014106  B0D8               	btfsc	status,0,c
  8856  014108  D00D               	goto	l9948
  8857  01410A                     u9840:
  8858  01410A  0E01               	movlw	1
  8859  01410C  6E3C               	movwf	(btemp+10)^0,c
  8860  01410E  0E00               	movlw	0
  8861  014110  6E3D               	movwf	(btemp+11)^0,c
  8862                           
  8863                           ;stkvar	_p @ sp[(-20)+18]
  8864  014112  0EFE               	movlw	-2
  8865  014114  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8866  01411A  0EFF               	movlw	-1
  8867  01411C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8868  014122  D008               	goto	l2002
  8869  014124                     l9948:
  8870                           
  8871                           ;stkvar	_p @ sp[(-20)+18]
  8872  014124  0EFE               	movlw	-2
  8873  014126  0060  F077  FFE3   	movff	_prec,plusw1
  8874  01412C  0EFF               	movlw	-1
  8875  01412E  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8876  014134                     l2002:
  8877                           
  8878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8879                           ;stkvar	_w @ sp[(-20)+16]
  8880  014134  0EFC               	movlw	-4
  8881  014136  0060  F06F  FFE3   	movff	_width,plusw1
  8882  01413C  0EFD               	movlw	-3
  8883  01413E  0060  F073  FFE3   	movff	_width+1,plusw1
  8884                           
  8885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8886  014144  A81F               	btfss	_flags^0,4,c
  8887  014146  D00B               	goto	l9954
  8888                           
  8889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8890                           ;stkvar	_w @ sp[(-20)+16]
  8891  014148  50E1               	movf	fsr1l,w,c
  8892  01414A  0FFC               	addlw	-4
  8893  01414C  6ED9               	movwf	fsr2l,c
  8894  01414E  50E2               	movf	fsr1h,w,c
  8895  014150  6EDA               	movwf	fsr2h,c
  8896  014152  0EFF               	movlw	255
  8897  014154  22DA               	addwfc	fsr2h,f,c
  8898  014156  0EFE               	movlw	254
  8899  014158  26DE               	addwf	postinc2,f,c
  8900  01415A  0EFF               	movlw	255
  8901  01415C  22DD               	addwfc	postdec2,f,c
  8902  01415E                     l9954:
  8903                           
  8904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8905                           ;stkvar	_d @ sp[(-20)+-10]
  8906  01415E  0EE2               	movlw	226
  8907  014160  24E1               	addwf	fsr1l,w,c
  8908  014162  6ED9               	movwf	fsr2l,c
  8909  014164  0EFF               	movlw	255
  8910  014166  20E2               	addwfc	fsr1h,w,c
  8911  014168  6EDA               	movwf	fsr2h,c
  8912                           
  8913                           ;stkvar	_n @ sp[(-20)+4]
  8914  01416A  0E08               	movlw	8
  8915  01416C  6E32               	movwf	btemp^0,c
  8916  01416E  0EF0               	movlw	-16
  8917  014170                     us986999:
  8918  014170  006F FF7B FFE3     	movff	postinc2,plusw1
  8919  014176  28E8               	incf	wreg,w,c
  8920  014178  2E32               	decfsz	btemp^0,f,c
  8921  01417A  D7FA               	bra	us986999
  8922                           
  8923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8924  01417C  0E4F               	movlw	79
  8925  01417E  6E3C               	movwf	(btemp+10)^0,c
  8926  014180  0E00               	movlw	0
  8927  014182  6E3D               	movwf	(btemp+11)^0,c
  8928                           
  8929                           ;stkvar	_i @ sp[(-20)+14]
  8930  014184  0EFA               	movlw	-6
  8931  014186  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8932  01418C  0EFB               	movlw	-5
  8933  01418E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8934                           
  8935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8936  014194  0101               	movlb	1	; () banked
  8937  014196  6BC7               	clrf	(_dbuf+79)& (0+255),b
  8938                           
  8939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8940  014198  D0EE               	goto	l9992
  8941  01419A                     l9960:
  8942                           
  8943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8944                           ;stkvar	_i @ sp[(-20)+14]
  8945  01419A  50E1               	movf	fsr1l,w,c
  8946  01419C  0FFA               	addlw	-6
  8947  01419E  6ED9               	movwf	fsr2l,c
  8948  0141A0  50E2               	movf	fsr1h,w,c
  8949  0141A2  6EDA               	movwf	fsr2h,c
  8950  0141A4  0EFF               	movlw	255
  8951  0141A6  22DA               	addwfc	fsr2h,f,c
  8952  0141A8  06DE               	decf	postinc2,f,c
  8953  0141AA  0E00               	movlw	0
  8954  0141AC  5ADD               	subwfb	postdec2,f,c
  8955                           
  8956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8957                           ;stkvar	_n @ sp[(-20)+4]
  8958  0141AE  0EF0               	movlw	-16
  8959  0141B0  006F FF8C  F03C    	movff	plusw1,btemp+10
  8960  0141B6  0EF1               	movlw	-15
  8961  0141B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  8962  0141BE  0E0F               	movlw	15
  8963  0141C0  163C               	andwf	(btemp+10)^0,f,c
  8964  0141C2  0E00               	movlw	0
  8965  0141C4  163D               	andwf	(btemp+11)^0,f,c
  8966                           
  8967                           ;stkvar	_c @ sp[(-20)+12]
  8968  0141C6  0EF8               	movlw	-8
  8969  0141C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8970  0141CE  0EF9               	movlw	-7
  8971  0141D0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8972                           
  8973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8974                           ;stkvar	_c @ sp[(-20)+12]
  8975  0141D6  0EF9               	movlw	-7
  8976  0141D8  BEE3               	btfsc	plusw1,7,c
  8977  0141DA  D00F               	goto	l9968
  8978  0141DC  0EF9               	movlw	-7
  8979  0141DE  50E3               	movf	plusw1,w,c
  8980  0141E0  E108               	bnz	u9870
  8981  0141E2  0EF8               	movlw	-8
  8982  0141E4  006F FF8C  F032    	movff	plusw1,btemp
  8983  0141EA  0E0A               	movlw	10
  8984  0141EC  5E32               	subwf	btemp^0,f,c
  8985  0141EE  A0D8               	btfss	status,0,c
  8986  0141F0  D004               	goto	l9968
  8987  0141F2                     u9870:
  8988                           
  8989                           ;stkvar	_c @ sp[(-20)+12]
  8990  0141F2  0EF8               	movlw	-8
  8991  0141F4  50E3               	movf	plusw1,w,c
  8992  0141F6  0F57               	addlw	87
  8993  0141F8  D003               	goto	L8
  8994  0141FA                     l9968:
  8995                           
  8996                           ;stkvar	_c @ sp[(-20)+12]
  8997  0141FA  0EF8               	movlw	-8
  8998  0141FC  50E3               	movf	plusw1,w,c
  8999  0141FE  0F30               	addlw	48
  9000  014200                     L8:
  9001  014200  6E3C               	movwf	(btemp+10)^0,c
  9002  014202  0EF9               	movlw	-7
  9003  014204  006F FF8C  F03D    	movff	plusw1,btemp+11
  9004  01420A  0E00               	movlw	0
  9005  01420C  223D               	addwfc	(btemp+11)^0,f,c
  9006                           
  9007                           ;stkvar	_c @ sp[(-20)+12]
  9008  01420E  0EF8               	movlw	-8
  9009  014210  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9010  014216  0EF9               	movlw	-7
  9011  014218  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9012  01421E  0EBF               	movlw	191
  9013  014220  6E3C               	movwf	(btemp+10)^0,c
  9014  014222  0EFF               	movlw	255
  9015  014224  6E3D               	movwf	(btemp+11)^0,c
  9016                           
  9017                           ;stkvar	_x @ sp[(-20)+-11]
  9018  014226  0EE1               	movlw	-31
  9019  014228  50E3               	movf	plusw1,w,c
  9020  01422A  6E3A               	movwf	(btemp+8)^0,c
  9021  01422C  6A3B               	clrf	(btemp+9)^0,c
  9022  01422E  503C               	movf	(btemp+10)^0,w,c
  9023  014230  263A               	addwf	(btemp+8)^0,f,c
  9024  014232  503D               	movf	(btemp+11)^0,w,c
  9025  014234  223B               	addwfc	(btemp+9)^0,f,c
  9026  014236  503B               	movf	(btemp+9)^0,w,c
  9027  014238  E106               	bnz	u9880
  9028  01423A  0E1A               	movlw	26
  9029  01423C  5C3A               	subwf	(btemp+8)^0,w,c
  9030  01423E  B0D8               	btfsc	status,0,c
  9031  014240  D002               	goto	u9880
  9032  014242  0E01               	movlw	1
  9033  014244  D001               	goto	u9890
  9034  014246                     u9880:
  9035  014246  0E00               	movlw	0
  9036  014248                     u9890:
  9037  014248  6E3C               	movwf	(btemp+10)^0,c
  9038  01424A  6A3D               	clrf	(btemp+11)^0,c
  9039                           
  9040                           ;stkvar	_xtoa$4520 @ sp[(-20)+2]
  9041  01424C  0EEE               	movlw	-18
  9042  01424E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9043  014254  0EEF               	movlw	-17
  9044  014256  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9045                           
  9046                           ;stkvar	_xtoa$4520 @ sp[(-20)+2]
  9047  01425C  0EEE               	movlw	-18
  9048  01425E  006F FF8C  F032    	movff	plusw1,btemp
  9049  014264  0EEF               	movlw	-17
  9050  014266  50E3               	movf	plusw1,w,c
  9051  014268  1032               	iorwf	btemp^0,w,c
  9052  01426A  B4D8               	btfsc	status,2,c
  9053  01426C  D041               	goto	l9984
  9054  01426E  0E9F               	movlw	159
  9055  014270  6E3C               	movwf	(btemp+10)^0,c
  9056  014272  0EFF               	movlw	255
  9057  014274  6E3D               	movwf	(btemp+11)^0,c
  9058                           
  9059                           ;stkvar	_c @ sp[(-20)+12]
  9060  014276  0EF8               	movlw	-8
  9061  014278  006F FF8C  F03A    	movff	plusw1,btemp+8
  9062  01427E  0EF9               	movlw	-7
  9063  014280  006F FF8C  F03B    	movff	plusw1,btemp+9
  9064  014286  0E20               	movlw	32
  9065  014288  123A               	iorwf	(btemp+8)^0,f,c
  9066  01428A  0E00               	movlw	0
  9067  01428C  123B               	iorwf	(btemp+9)^0,f,c
  9068  01428E  503C               	movf	(btemp+10)^0,w,c
  9069  014290  263A               	addwf	(btemp+8)^0,f,c
  9070  014292  503D               	movf	(btemp+11)^0,w,c
  9071  014294  223B               	addwfc	(btemp+9)^0,f,c
  9072  014296  503B               	movf	(btemp+9)^0,w,c
  9073  014298  E106               	bnz	u9910
  9074  01429A  0E1A               	movlw	26
  9075  01429C  5C3A               	subwf	(btemp+8)^0,w,c
  9076  01429E  B0D8               	btfsc	status,0,c
  9077  0142A0  D002               	goto	u9910
  9078  0142A2  0E01               	movlw	1
  9079  0142A4  D001               	goto	u9920
  9080  0142A6                     u9910:
  9081  0142A6  0E00               	movlw	0
  9082  0142A8                     u9920:
  9083  0142A8  6E3C               	movwf	(btemp+10)^0,c
  9084  0142AA  6A3D               	clrf	(btemp+11)^0,c
  9085                           
  9086                           ;stkvar	_xtoa$4521 @ sp[(-20)+0]
  9087  0142AC  0EEC               	movlw	-20
  9088  0142AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9089  0142B4  0EED               	movlw	-19
  9090  0142B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9091                           
  9092                           ;stkvar	_xtoa$4521 @ sp[(-20)+0]
  9093  0142BC  0EEC               	movlw	-20
  9094  0142BE  006F FF8C  F032    	movff	plusw1,btemp
  9095  0142C4  0EED               	movlw	-19
  9096  0142C6  50E3               	movf	plusw1,w,c
  9097  0142C8  1032               	iorwf	btemp^0,w,c
  9098  0142CA  B4D8               	btfsc	status,2,c
  9099  0142CC  D011               	goto	l9984
  9100                           
  9101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9102                           ;stkvar	_c @ sp[(-20)+12]
  9103  0142CE  0EF8               	movlw	-8
  9104  0142D0  006F FF8F FFE6     	movff	plusw1,postinc1
  9105  0142D6  006F FF8F FFE6     	movff	plusw1,postinc1
  9106  0142DC  EC67  F0BB         	call	_toupper	;wreg free
  9107                           
  9108                           ;stkvar	_c @ sp[(-20)+12]
  9109  0142E0  0EF8               	movlw	-8
  9110  0142E2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9111  0142E8  0EF9               	movlw	-7
  9112  0142EA  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9113  0142F0                     l9984:
  9114                           
  9115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9116                           ;stkvar	_c @ sp[(-20)+12]
  9117                           ;stkvar	_i @ sp[(-20)+14]
  9118  0142F0  0EFA               	movlw	-6
  9119  0142F2  006F FF8C  F03C    	movff	plusw1,btemp+10
  9120  0142F8  0EFB               	movlw	-5
  9121  0142FA  006F FF8C  F03D    	movff	plusw1,btemp+11
  9122  014300  0E78               	movlw	low _dbuf
  9123  014302  243C               	addwf	(btemp+10)^0,w,c
  9124  014304  6ED9               	movwf	fsr2l,c
  9125  014306  0E01               	movlw	high _dbuf
  9126  014308  203D               	addwfc	(btemp+11)^0,w,c
  9127  01430A  6EDA               	movwf	fsr2h,c
  9128  01430C  0EF8               	movlw	-8
  9129  01430E  006F FF8F FFDF     	movff	plusw1,indf2
  9130                           
  9131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9132                           ;stkvar	_p @ sp[(-20)+18]
  9133  014314  50E1               	movf	fsr1l,w,c
  9134  014316  0FFE               	addlw	-2
  9135  014318  6ED9               	movwf	fsr2l,c
  9136  01431A  50E2               	movf	fsr1h,w,c
  9137  01431C  6EDA               	movwf	fsr2h,c
  9138  01431E  0EFF               	movlw	255
  9139  014320  22DA               	addwfc	fsr2h,f,c
  9140  014322  06DE               	decf	postinc2,f,c
  9141  014324  0E00               	movlw	0
  9142  014326  5ADD               	subwfb	postdec2,f,c
  9143                           
  9144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9145                           ;stkvar	_w @ sp[(-20)+16]
  9146  014328  50E1               	movf	fsr1l,w,c
  9147  01432A  0FFC               	addlw	-4
  9148  01432C  6ED9               	movwf	fsr2l,c
  9149  01432E  50E2               	movf	fsr1h,w,c
  9150  014330  6EDA               	movwf	fsr2h,c
  9151  014332  0EFF               	movlw	255
  9152  014334  22DA               	addwfc	fsr2h,f,c
  9153  014336  06DE               	decf	postinc2,f,c
  9154  014338  0E00               	movlw	0
  9155  01433A  5ADD               	subwfb	postdec2,f,c
  9156                           
  9157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9158  01433C  0E04               	movlw	4
  9159  01433E  6E3D               	movwf	(btemp+11)^0,c
  9160                           
  9161                           ;stkvar	_n @ sp[(-20)+4]
  9162  014340  50E1               	movf	fsr1l,w,c
  9163  014342  0FF0               	addlw	-16
  9164  014344  6ED9               	movwf	fsr2l,c
  9165  014346  50E2               	movf	fsr1h,w,c
  9166  014348  6EDA               	movwf	fsr2h,c
  9167  01434A  0EFF               	movlw	255
  9168  01434C  22DA               	addwfc	fsr2h,f,c
  9169  01434E  283D               	incf	(btemp+11)^0,w,c
  9170  014350  52DE               	movf	postinc2,f,c
  9171  014352  D00F               	goto	u9940
  9172  014354                     u9945:
  9173  014354  52DE               	movf	postinc2,f,c
  9174  014356  52DE               	movf	postinc2,f,c
  9175  014358  52DE               	movf	postinc2,f,c
  9176  01435A  52DE               	movf	postinc2,f,c
  9177  01435C  52DE               	movf	postinc2,f,c
  9178  01435E  52DE               	movf	postinc2,f,c
  9179  014360  90D8               	bcf	status,0,c
  9180  014362  32DD               	rrcf	postdec2,f,c
  9181  014364  32DD               	rrcf	postdec2,f,c
  9182  014366  32DD               	rrcf	postdec2,f,c
  9183  014368  32DD               	rrcf	postdec2,f,c
  9184  01436A  32DD               	rrcf	postdec2,f,c
  9185  01436C  32DD               	rrcf	postdec2,f,c
  9186  01436E  32DD               	rrcf	postdec2,f,c
  9187  014370  32DE               	rrcf	postinc2,f,c
  9188  014372                     u9940:
  9189  014372  2EE8               	decfsz	wreg,f,c
  9190  014374  D7EF               	goto	u9945
  9191  014376                     l9992:
  9192                           
  9193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9194                           ;stkvar	_i @ sp[(-20)+14]
  9195  014376  0EFB               	movlw	-5
  9196  014378  BEE3               	btfsc	plusw1,7,c
  9197  01437A  D03A               	goto	u9990
  9198  01437C  0EFB               	movlw	-5
  9199  01437E  50E3               	movf	plusw1,w,c
  9200  014380  E108               	bnz	u9950
  9201  014382  0EFA               	movlw	-6
  9202  014384  006F FF8C  F032    	movff	plusw1,btemp
  9203  01438A  0E02               	movlw	2
  9204  01438C  5E32               	subwf	btemp^0,f,c
  9205  01438E  A0D8               	btfss	status,0,c
  9206  014390  D02F               	goto	u9990
  9207  014392                     u9950:
  9208                           
  9209                           ;stkvar	_n @ sp[(-20)+4]
  9210  014392  0EF0               	movlw	-16
  9211  014394  50E3               	movf	plusw1,w,c
  9212  014396  E115               	bnz	u9961
  9213  014398  0EF1               	movlw	-15
  9214  01439A  50E3               	movf	plusw1,w,c
  9215  01439C  E112               	bnz	u9961
  9216  01439E  0EF2               	movlw	-14
  9217  0143A0  50E3               	movf	plusw1,w,c
  9218  0143A2  E10F               	bnz	u9961
  9219  0143A4  0EF3               	movlw	-13
  9220  0143A6  50E3               	movf	plusw1,w,c
  9221  0143A8  E10C               	bnz	u9961
  9222  0143AA  0EF4               	movlw	-12
  9223  0143AC  50E3               	movf	plusw1,w,c
  9224  0143AE  E109               	bnz	u9961
  9225  0143B0  0EF5               	movlw	-11
  9226  0143B2  50E3               	movf	plusw1,w,c
  9227  0143B4  E106               	bnz	u9961
  9228  0143B6  0EF6               	movlw	-10
  9229  0143B8  50E3               	movf	plusw1,w,c
  9230  0143BA  E103               	bnz	u9961
  9231  0143BC  0EF7               	movlw	-9
  9232  0143BE  50E3               	movf	plusw1,w,c
  9233  0143C0  A4D8               	btfss	status,2,c
  9234  0143C2                     u9961:
  9235  0143C2  D6EB               	goto	l9960
  9236                           
  9237                           ;stkvar	_p @ sp[(-20)+18]
  9238  0143C4  0EFF               	movlw	-1
  9239  0143C6  BEE3               	btfsc	plusw1,7,c
  9240  0143C8  D007               	goto	u9970
  9241  0143CA  0EFF               	movlw	-1
  9242  0143CC  50E3               	movf	plusw1,w,c
  9243  0143CE  E103               	bnz	u9971
  9244  0143D0  0EFE               	movlw	-2
  9245  0143D2  04E3               	decf	plusw1,w,c
  9246  0143D4  B0D8               	btfsc	status,0,c
  9247  0143D6                     u9971:
  9248  0143D6  D6E1               	goto	l9960
  9249  0143D8                     u9970:
  9250                           
  9251                           ;stkvar	_w @ sp[(-20)+16]
  9252  0143D8  0EFD               	movlw	-3
  9253  0143DA  BEE3               	btfsc	plusw1,7,c
  9254  0143DC  D009               	goto	u9990
  9255  0143DE  0EFD               	movlw	-3
  9256  0143E0  50E3               	movf	plusw1,w,c
  9257  0143E2  E104               	bnz	u9980
  9258  0143E4  0EFC               	movlw	-4
  9259  0143E6  04E3               	decf	plusw1,w,c
  9260  0143E8  A0D8               	btfss	status,0,c
  9261  0143EA  D002               	goto	u9990
  9262  0143EC                     u9980:
  9263  0143EC  B21F               	btfsc	_flags^0,1,c
  9264  0143EE  D6D5               	goto	l9960
  9265  0143F0                     u9990:
  9266                           
  9267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9268  0143F0  A81F               	btfss	_flags^0,4,c
  9269  0143F2  D036               	goto	l10008
  9270                           
  9271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9272                           ;stkvar	_i @ sp[(-20)+14]
  9273  0143F4  50E1               	movf	fsr1l,w,c
  9274  0143F6  0FFA               	addlw	-6
  9275  0143F8  6ED9               	movwf	fsr2l,c
  9276  0143FA  50E2               	movf	fsr1h,w,c
  9277  0143FC  6EDA               	movwf	fsr2h,c
  9278  0143FE  0EFF               	movlw	255
  9279  014400  22DA               	addwfc	fsr2h,f,c
  9280  014402  06DE               	decf	postinc2,f,c
  9281  014404  0E00               	movlw	0
  9282  014406  5ADD               	subwfb	postdec2,f,c
  9283                           
  9284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9285                           ;stkvar	_x @ sp[(-20)+-11]
  9286                           ;stkvar	_i @ sp[(-20)+14]
  9287  014408  0EFA               	movlw	-6
  9288  01440A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9289  014410  0EFB               	movlw	-5
  9290  014412  006F FF8C  F03D    	movff	plusw1,btemp+11
  9291  014418  0E78               	movlw	low _dbuf
  9292  01441A  243C               	addwf	(btemp+10)^0,w,c
  9293  01441C  6ED9               	movwf	fsr2l,c
  9294  01441E  0E01               	movlw	high _dbuf
  9295  014420  203D               	addwfc	(btemp+11)^0,w,c
  9296  014422  6EDA               	movwf	fsr2h,c
  9297  014424  0EE1               	movlw	-31
  9298  014426  006F FF8F FFDF     	movff	plusw1,indf2
  9299                           
  9300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9301                           ;stkvar	_i @ sp[(-20)+14]
  9302  01442C  50E1               	movf	fsr1l,w,c
  9303  01442E  0FFA               	addlw	-6
  9304  014430  6ED9               	movwf	fsr2l,c
  9305  014432  50E2               	movf	fsr1h,w,c
  9306  014434  6EDA               	movwf	fsr2h,c
  9307  014436  0EFF               	movlw	255
  9308  014438  22DA               	addwfc	fsr2h,f,c
  9309  01443A  06DE               	decf	postinc2,f,c
  9310  01443C  0E00               	movlw	0
  9311  01443E  5ADD               	subwfb	postdec2,f,c
  9312                           
  9313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9314                           ;stkvar	_i @ sp[(-20)+14]
  9315  014440  0EFA               	movlw	-6
  9316  014442  006F FF8C  F03C    	movff	plusw1,btemp+10
  9317  014448  0EFB               	movlw	-5
  9318  01444A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9319  014450  0E78               	movlw	low _dbuf
  9320  014452  243C               	addwf	(btemp+10)^0,w,c
  9321  014454  6ED9               	movwf	fsr2l,c
  9322  014456  0E01               	movlw	high _dbuf
  9323  014458  203D               	addwfc	(btemp+11)^0,w,c
  9324  01445A  6EDA               	movwf	fsr2h,c
  9325  01445C  0E30               	movlw	48
  9326  01445E  6EDF               	movwf	indf2,c
  9327  014460                     l10008:
  9328                           
  9329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9330                           ;stkvar	_w @ sp[(-20)+16]
  9331  014460  0EFC               	movlw	-4
  9332  014462  006F FF8F FFE6     	movff	plusw1,postinc1
  9333  014468  006F FF8F FFE6     	movff	plusw1,postinc1
  9334                           
  9335                           ;stkvar	_i @ sp[(-22)+14]
  9336  01446E  0E78               	movlw	low _dbuf
  9337  014470  6E3C               	movwf	(btemp+10)^0,c
  9338  014472  0E01               	movlw	high _dbuf
  9339  014474  6E3D               	movwf	(btemp+11)^0,c
  9340  014476  0EF8               	movlw	-8
  9341  014478  50E3               	movf	plusw1,w,c
  9342  01447A  263C               	addwf	(btemp+10)^0,f,c
  9343  01447C  0EF9               	movlw	-7
  9344  01447E  50E3               	movf	plusw1,w,c
  9345  014480  223D               	addwfc	(btemp+11)^0,f,c
  9346  014482  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9347  014488  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9348                           
  9349                           ;stkvar	_fp @ sp[(-24)+-2]
  9350  01448E  0EE6               	movlw	-26
  9351  014490  006F FF8F FFE6     	movff	plusw1,postinc1
  9352  014496  006F FF8F FFE6     	movff	plusw1,postinc1
  9353  01449C  ECB3  F0B4         	call	_pad	;wreg free
  9354                           
  9355                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9356  0144A0  0EE1               	movlw	225
  9357  0144A2  26E1               	addwf	fsr1l,f,c
  9358  0144A4  0EFF               	movlw	255
  9359  0144A6  22E2               	addwfc	fsr1h,f,c
  9360  0144A8  0012               	return		;funcret
  9361  0144AA                     __end_of_xtoa:
  9362                           	opt callstack 0
  9363                           
  9364 ;; *************** function _toupper *****************
  9365 ;; Defined at:
  9366 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  c               2  [STACK] int 
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  2  [STACK] int 
  9373 ;; Registers used:
  9374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/1
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9384 ;;Total ram usage:        0 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    7
  9387 ;; This function calls:
  9388 ;;		_islower
  9389 ;; This function is called by:
  9390 ;;		_xtoa
  9391 ;; This function uses a reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text41
  9395  0176CE                     __ptext41:
  9396                           	opt callstack 0
  9397  0176CE                     _toupper:
  9398                           	opt callstack 0
  9399                           
  9400                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9401  0176CE  52E6               	movf	postinc1,f,c
  9402  0176D0  52E6               	movf	postinc1,f,c
  9403                           
  9404                           ;stkvar	_c @ sp[(-2)+-2]
  9405                           
  9406                           ;incstack = 0
  9407  0176D2  0EFC               	movlw	-4
  9408  0176D4  50E3               	movf	plusw1,w,c
  9409  0176D6  0F9F               	addlw	159
  9410  0176D8  6E3C               	movwf	(btemp+10)^0,c
  9411  0176DA  0EFD               	movlw	-3
  9412  0176DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  9413  0176E2  0EFF               	movlw	255
  9414  0176E4  223D               	addwfc	(btemp+11)^0,f,c
  9415  0176E6  503D               	movf	(btemp+11)^0,w,c
  9416  0176E8  E106               	bnz	u5310
  9417  0176EA  0E1A               	movlw	26
  9418  0176EC  5C3C               	subwf	(btemp+10)^0,w,c
  9419  0176EE  B0D8               	btfsc	status,0,c
  9420  0176F0  D002               	goto	u5310
  9421  0176F2  0E01               	movlw	1
  9422  0176F4  D001               	goto	u5320
  9423  0176F6                     u5310:
  9424  0176F6  0E00               	movlw	0
  9425  0176F8                     u5320:
  9426  0176F8  6E3C               	movwf	(btemp+10)^0,c
  9427  0176FA  6A3D               	clrf	(btemp+11)^0,c
  9428                           
  9429                           ;stkvar	_toupper$5181 @ sp[(-2)+0]
  9430  0176FC  0EFE               	movlw	-2
  9431  0176FE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9432  017704  0EFF               	movlw	-1
  9433  017706  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9434                           
  9435                           ;stkvar	_toupper$5181 @ sp[(-2)+0]
  9436  01770C  0EFE               	movlw	-2
  9437  01770E  006F FF8C  F032    	movff	plusw1,btemp
  9438  017714  0EFF               	movlw	-1
  9439  017716  50E3               	movf	plusw1,w,c
  9440  017718  1032               	iorwf	btemp^0,w,c
  9441  01771A  B4D8               	btfsc	status,2,c
  9442  01771C  D00D               	goto	l6620
  9443                           
  9444                           ;stkvar	_c @ sp[(-2)+-2]
  9445  01771E  0EFC               	movlw	-4
  9446  017720  006F FF8C  F032    	movff	plusw1,btemp
  9447  017726  0EFD               	movlw	-3
  9448  017728  006F FF8C  F033    	movff	plusw1,btemp+1
  9449  01772E  0E5F               	movlw	95
  9450  017730  1632               	andwf	btemp^0,f,c
  9451  017732  0E00               	movlw	0
  9452  017734  1633               	andwf	(btemp+1)^0,f,c
  9453  017736  D008               	goto	l2935
  9454  017738                     l6620:
  9455                           
  9456                           ;stkvar	_c @ sp[(-2)+-2]
  9457  017738  0EFC               	movlw	-4
  9458  01773A  006F FF8C  F032    	movff	plusw1,btemp
  9459  017740  0EFD               	movlw	-3
  9460  017742  006F FF8C  F033    	movff	plusw1,btemp+1
  9461  017748                     l2935:
  9462                           
  9463                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9464  017748  52E5               	movf	postdec1,f,c
  9465  01774A  52E5               	movf	postdec1,f,c
  9466  01774C  52E5               	movf	postdec1,f,c
  9467  01774E  52E5               	movf	postdec1,f,c
  9468  017750  0012               	return		;funcret
  9469  017752                     __end_of_toupper:
  9470                           	opt callstack 0
  9471                           
  9472 ;; *************** function _islower *****************
  9473 ;; Defined at:
  9474 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  c               2  [STACK] int 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  2  [STACK] int 
  9481 ;; Registers used:
  9482 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9492 ;;Total ram usage:        0 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; Hardware stack levels required when called:    6
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		_toupper
  9499 ;; This function uses a reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text42
  9503  018238                     __ptext42:
  9504                           	opt callstack 0
  9505  018238                     _islower:
  9506                           	opt callstack 16
  9507                           
  9508                           ;stkvar	_c @ sp[(0)+-2]
  9509                           
  9510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9511                           ;incstack = 0
  9512  018238  0EFE               	movlw	-2
  9513  01823A  50E3               	movf	plusw1,w,c
  9514  01823C  0F9F               	addlw	159
  9515  01823E  6E3C               	movwf	(btemp+10)^0,c
  9516  018240  0EFF               	movlw	-1
  9517  018242  006F FF8C  F03D    	movff	plusw1,btemp+11
  9518  018248  0EFF               	movlw	255
  9519  01824A  223D               	addwfc	(btemp+11)^0,f,c
  9520  01824C  503D               	movf	(btemp+11)^0,w,c
  9521  01824E  E106               	bnz	u5000
  9522  018250  0E1A               	movlw	26
  9523  018252  5C3C               	subwf	(btemp+10)^0,w,c
  9524  018254  B0D8               	btfsc	status,0,c
  9525  018256  D002               	goto	u5000
  9526  018258  0E01               	movlw	1
  9527  01825A  D001               	goto	u5010
  9528  01825C                     u5000:
  9529  01825C  0E00               	movlw	0
  9530  01825E                     u5010:
  9531  01825E  6E32               	movwf	btemp^0,c
  9532  018260  6A33               	clrf	(btemp+1)^0,c
  9533                           
  9534                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9535  018262  52E5               	movf	postdec1,f,c
  9536  018264  52E5               	movf	postdec1,f,c
  9537  018266  0012               	return		;funcret
  9538  018268                     __end_of_islower:
  9539                           	opt callstack 0
  9540                           
  9541 ;; *************** function _isalpha *****************
  9542 ;; Defined at:
  9543 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  c               2  [STACK] int 
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  2  [STACK] int 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9561 ;;Total ram usage:        0 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:    6
  9564 ;; This function calls:
  9565 ;;		Nothing
  9566 ;; This function is called by:
  9567 ;;		_xtoa
  9568 ;; This function uses a reentrant model
  9569 ;;
  9570                           
  9571                           	psect	text43
  9572  017FB6                     __ptext43:
  9573                           	opt callstack 0
  9574  017FB6                     _isalpha:
  9575                           	opt callstack 17
  9576                           
  9577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9578                           ;incstack = 0
  9579  017FB6  0E9F               	movlw	159
  9580  017FB8  6E3C               	movwf	(btemp+10)^0,c
  9581  017FBA  0EFF               	movlw	255
  9582  017FBC  6E3D               	movwf	(btemp+11)^0,c
  9583                           
  9584                           ;stkvar	_c @ sp[(0)+-2]
  9585  017FBE  0EFE               	movlw	-2
  9586  017FC0  006F FF8C  F03A    	movff	plusw1,btemp+8
  9587  017FC6  0EFF               	movlw	-1
  9588  017FC8  006F FF8C  F03B    	movff	plusw1,btemp+9
  9589  017FCE  0E20               	movlw	32
  9590  017FD0  123A               	iorwf	(btemp+8)^0,f,c
  9591  017FD2  0E00               	movlw	0
  9592  017FD4  123B               	iorwf	(btemp+9)^0,f,c
  9593  017FD6  503C               	movf	(btemp+10)^0,w,c
  9594  017FD8  263A               	addwf	(btemp+8)^0,f,c
  9595  017FDA  503D               	movf	(btemp+11)^0,w,c
  9596  017FDC  223B               	addwfc	(btemp+9)^0,f,c
  9597  017FDE  503B               	movf	(btemp+9)^0,w,c
  9598  017FE0  E106               	bnz	u5290
  9599  017FE2  0E1A               	movlw	26
  9600  017FE4  5C3A               	subwf	(btemp+8)^0,w,c
  9601  017FE6  B0D8               	btfsc	status,0,c
  9602  017FE8  D002               	goto	u5290
  9603  017FEA  0E01               	movlw	1
  9604  017FEC  D001               	goto	u5300
  9605  017FEE                     u5290:
  9606  017FEE  0E00               	movlw	0
  9607  017FF0                     u5300:
  9608  017FF0  6E32               	movwf	btemp^0,c
  9609  017FF2  6A33               	clrf	(btemp+1)^0,c
  9610                           
  9611                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9612  017FF4  52E5               	movf	postdec1,f,c
  9613  017FF6  52E5               	movf	postdec1,f,c
  9614  017FF8  0012               	return		;funcret
  9615  017FFA                     __end_of_isalpha:
  9616                           	opt callstack 0
  9617                           
  9618 ;; *************** function _strncmp *****************
  9619 ;; Defined at:
  9620 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  _l              2  [STACK] PTR const unsigned char 
  9623 ;;		 -> ct(3), 
  9624 ;;  _r              2  [STACK] PTR const unsigned char 
  9625 ;;		 -> STR_47(3), 
  9626 ;;  n               2  [STACK] unsigned int 
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;  r               2  [STACK] PTR const unsigned char 
  9629 ;;		 -> STR_47(3), 
  9630 ;;  l               2  [STACK] PTR const unsigned char 
  9631 ;;		 -> ct(3), 
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  2  [STACK] int 
  9634 ;; Registers used:
  9635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/5
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9645 ;;Total ram usage:        0 bytes
  9646 ;; Hardware stack levels used:    1
  9647 ;; Hardware stack levels required when called:    6
  9648 ;; This function calls:
  9649 ;;		Nothing
  9650 ;; This function is called by:
  9651 ;;		_vfpfcnvrt
  9652 ;; This function uses a reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text44
  9656  015B74                     __ptext44:
  9657                           	opt callstack 0
  9658  015B74                     _strncmp:
  9659                           	opt callstack 0
  9660                           
  9661                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9662  015B74  52E6               	movf	postinc1,f,c
  9663  015B76  52E6               	movf	postinc1,f,c
  9664  015B78  52E6               	movf	postinc1,f,c
  9665  015B7A  52E6               	movf	postinc1,f,c
  9666                           
  9667                           ;stkvar	__l @ sp[(-4)+-2]
  9668                           
  9669                           ;incstack = 0
  9670  015B7C  0EFA               	movlw	-6
  9671  015B7E  006F FF8C  F03C    	movff	plusw1,btemp+10
  9672  015B84  0EFB               	movlw	-5
  9673  015B86  006F FF8C  F03D    	movff	plusw1,btemp+11
  9674                           
  9675                           ;stkvar	_l @ sp[(-4)+2]
  9676  015B8C  0EFF               	movlw	-1
  9677  015B8E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9678  015B94  0EFE               	movlw	-2
  9679  015B96  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9680                           
  9681                           ;stkvar	__r @ sp[(-4)+-4]
  9682  015B9C  0EF8               	movlw	-8
  9683  015B9E  006F FF8C  F03C    	movff	plusw1,btemp+10
  9684  015BA4  0EF9               	movlw	-7
  9685  015BA6  006F FF8C  F03D    	movff	plusw1,btemp+11
  9686                           
  9687                           ;stkvar	_r @ sp[(-4)+0]
  9688  015BAC  0EFD               	movlw	-3
  9689  015BAE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9690  015BB4  0EFC               	movlw	-4
  9691  015BB6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9692                           
  9693                           ;stkvar	_n @ sp[(-4)+-6]
  9694  015BBC  0EF6               	movlw	-10
  9695  015BBE  006F FF8C  F032    	movff	plusw1,btemp
  9696  015BC4  0E01               	movlw	1
  9697  015BC6  5E32               	subwf	btemp^0,f,c
  9698  015BC8  0EF6               	movlw	-10
  9699  015BCA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9700  015BD0  0EF7               	movlw	-9
  9701  015BD2  006F FF8C  F032    	movff	plusw1,btemp
  9702  015BD8  0E00               	movlw	0
  9703  015BDA  5A32               	subwfb	btemp^0,f,c
  9704  015BDC  0EF7               	movlw	-9
  9705  015BDE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9706  015BE4  0EF6               	movlw	-10
  9707  015BE6  28E3               	incf	plusw1,w,c
  9708  015BE8  E13F               	bnz	l7778
  9709  015BEA  0EF7               	movlw	-9
  9710  015BEC  28E3               	incf	plusw1,w,c
  9711  015BEE  A4D8               	btfss	status,2,c
  9712  015BF0  D03B               	goto	l7778
  9713  015BF2  0E00               	movlw	0
  9714  015BF4  6E32               	movwf	btemp^0,c
  9715  015BF6  0E00               	movlw	0
  9716  015BF8  6E33               	movwf	(btemp+1)^0,c
  9717  015BFA  D09B               	goto	l2907
  9718  015BFC                     l7776:
  9719                           
  9720                           ;stkvar	_l @ sp[(-4)+2]
  9721  015BFC  0EFE               	movlw	-2
  9722  015BFE  50E3               	movf	plusw1,w,c
  9723  015C00  0F01               	addlw	1
  9724  015C02  6E32               	movwf	btemp^0,c
  9725  015C04  0EFE               	movlw	-2
  9726  015C06  0060  F0CB  FFE3   	movff	btemp,plusw1
  9727  015C0C  6A32               	clrf	btemp^0,c
  9728  015C0E  0EFF               	movlw	-1
  9729  015C10  50E3               	movf	plusw1,w,c
  9730  015C12  2032               	addwfc	btemp^0,w,c
  9731  015C14  6E32               	movwf	btemp^0,c
  9732  015C16  0EFF               	movlw	-1
  9733  015C18  0060  F0CB  FFE3   	movff	btemp,plusw1
  9734                           
  9735                           ;stkvar	_r @ sp[(-4)+0]
  9736  015C1E  0EFC               	movlw	-4
  9737  015C20  50E3               	movf	plusw1,w,c
  9738  015C22  0F01               	addlw	1
  9739  015C24  6E32               	movwf	btemp^0,c
  9740  015C26  0EFC               	movlw	-4
  9741  015C28  0060  F0CB  FFE3   	movff	btemp,plusw1
  9742  015C2E  6A32               	clrf	btemp^0,c
  9743  015C30  0EFD               	movlw	-3
  9744  015C32  50E3               	movf	plusw1,w,c
  9745  015C34  2032               	addwfc	btemp^0,w,c
  9746  015C36  6E32               	movwf	btemp^0,c
  9747  015C38  0EFD               	movlw	-3
  9748  015C3A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9749                           
  9750                           ;stkvar	_n @ sp[(-4)+-6]
  9751  015C40  0EF6               	movlw	-10
  9752  015C42  006F FF8C  F032    	movff	plusw1,btemp
  9753  015C48  0E01               	movlw	1
  9754  015C4A  5E32               	subwf	btemp^0,f,c
  9755  015C4C  0EF6               	movlw	-10
  9756  015C4E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9757  015C54  0EF7               	movlw	-9
  9758  015C56  006F FF8C  F032    	movff	plusw1,btemp
  9759  015C5C  0E00               	movlw	0
  9760  015C5E  5A32               	subwfb	btemp^0,f,c
  9761  015C60  0EF7               	movlw	-9
  9762  015C62  0060  F0CB  FFE3   	movff	btemp,plusw1
  9763  015C68                     l7778:
  9764                           
  9765                           ;stkvar	_l @ sp[(-4)+2]
  9766  015C68  0EFE               	movlw	-2
  9767  015C6A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9768  015C70  0EFF               	movlw	-1
  9769  015C72  006F FF8F FFDA     	movff	plusw1,fsr2h
  9770  015C78  50DF               	movf	indf2,w,c
  9771  015C7A  B4D8               	btfsc	status,2,c
  9772  015C7C  D03B               	goto	u7490
  9773                           
  9774                           ;stkvar	_r @ sp[(-4)+0]
  9775  015C7E  50E1               	movf	fsr1l,w,c
  9776  015C80  0FFC               	addlw	-4
  9777  015C82  6ED9               	movwf	fsr2l,c
  9778  015C84  50E2               	movf	fsr1h,w,c
  9779  015C86  6EDA               	movwf	fsr2h,c
  9780  015C88  0EFF               	movlw	255
  9781  015C8A  22DA               	addwfc	fsr2h,f,c
  9782  015C8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9783  015C92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9784  015C98                     	if	0	;tblptru may be non-zero
  9785  015C98                     	endif
  9786  015C98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9787  015C98  0E00               	movlw	low (__mediumconst shr (0+16))
  9788  015C9A  6EF8               	movwf	tblptru,c
  9789  015C9C                     	endif
  9790  015C9C  0008               	tblrd		*
  9791  015C9E  50F5               	movf	tablat,w,c
  9792  015CA0  0900               	iorlw	0
  9793  015CA2  B4D8               	btfsc	status,2,c
  9794  015CA4  D027               	goto	u7490
  9795                           
  9796                           ;stkvar	_n @ sp[(-4)+-6]
  9797  015CA6  0EF6               	movlw	-10
  9798  015CA8  006F FF8C  F032    	movff	plusw1,btemp
  9799  015CAE  0EF7               	movlw	-9
  9800  015CB0  50E3               	movf	plusw1,w,c
  9801  015CB2  1032               	iorwf	btemp^0,w,c
  9802  015CB4  B4D8               	btfsc	status,2,c
  9803  015CB6  D01E               	goto	u7490
  9804                           
  9805                           ;stkvar	_l @ sp[(-4)+2]
  9806  015CB8  0EFE               	movlw	-2
  9807  015CBA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9808  015CC0  0EFF               	movlw	-1
  9809  015CC2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9810  015CC8  50DF               	movf	indf2,w,c
  9811  015CCA  6E3D               	movwf	(btemp+11)^0,c
  9812                           
  9813                           ;stkvar	_r @ sp[(-4)+0]
  9814  015CCC  50E1               	movf	fsr1l,w,c
  9815  015CCE  0FFC               	addlw	-4
  9816  015CD0  6ED9               	movwf	fsr2l,c
  9817  015CD2  50E2               	movf	fsr1h,w,c
  9818  015CD4  6EDA               	movwf	fsr2h,c
  9819  015CD6  0EFF               	movlw	255
  9820  015CD8  22DA               	addwfc	fsr2h,f,c
  9821  015CDA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9822  015CE0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9823  015CE6                     	if	0	;tblptru may be non-zero
  9824  015CE6                     	endif
  9825  015CE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9826  015CE6  0E00               	movlw	low (__mediumconst shr (0+16))
  9827  015CE8  6EF8               	movwf	tblptru,c
  9828  015CEA                     	endif
  9829  015CEA  0008               	tblrd		*
  9830  015CEC  50F5               	movf	tablat,w,c
  9831  015CEE  183D               	xorwf	(btemp+11)^0,w,c
  9832  015CF0  B4D8               	btfsc	status,2,c
  9833  015CF2  D784               	goto	l7776
  9834  015CF4                     u7490:
  9835                           
  9836                           ;stkvar	_l @ sp[(-4)+2]
  9837  015CF4  0EFE               	movlw	-2
  9838  015CF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9839  015CFC  0EFF               	movlw	-1
  9840  015CFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9841  015D04  50DF               	movf	indf2,w,c
  9842  015D06  6E32               	movwf	btemp^0,c
  9843  015D08  6A33               	clrf	(btemp+1)^0,c
  9844                           
  9845                           ;stkvar	_r @ sp[(-4)+0]
  9846  015D0A  50E1               	movf	fsr1l,w,c
  9847  015D0C  0FFC               	addlw	-4
  9848  015D0E  6ED9               	movwf	fsr2l,c
  9849  015D10  50E2               	movf	fsr1h,w,c
  9850  015D12  6EDA               	movwf	fsr2h,c
  9851  015D14  0EFF               	movlw	255
  9852  015D16  22DA               	addwfc	fsr2h,f,c
  9853  015D18  006F FF7B FFF6     	movff	postinc2,tblptrl
  9854  015D1E  006F FF77 FFF7     	movff	postdec2,tblptrh
  9855  015D24                     	if	0	;tblptru may be non-zero
  9856  015D24                     	endif
  9857  015D24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9858  015D24  0E00               	movlw	low (__mediumconst shr (0+16))
  9859  015D26  6EF8               	movwf	tblptru,c
  9860  015D28                     	endif
  9861  015D28  0008               	tblrd		*
  9862  015D2A  50F5               	movf	tablat,w,c
  9863  015D2C  5E32               	subwf	btemp^0,f,c
  9864  015D2E  0E00               	movlw	0
  9865  015D30  5A33               	subwfb	(btemp+1)^0,f,c
  9866  015D32                     l2907:
  9867                           
  9868                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9869  015D32  0EF6               	movlw	246
  9870  015D34  26E1               	addwf	fsr1l,f,c
  9871  015D36  0EFF               	movlw	255
  9872  015D38  22E2               	addwfc	fsr1h,f,c
  9873  015D3A  0012               	return		;funcret
  9874  015D3C                     __end_of_strncmp:
  9875                           	opt callstack 0
  9876                           
  9877 ;; *************** function _stoa *****************
  9878 ;; Defined at:
  9879 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9882 ;;		 -> f(6), NULL(0), 
  9883 ;;  s               2  [STACK] PTR unsigned char 
  9884 ;;		 -> ?_printf(2), ?_sprintf(2), STR_19(9), STR_18(12), 
  9885 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  9886 ;;		 -> STR_3(6), V(187), 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;  nuls            7  [STACK] unsigned char [7]
  9889 ;;  l               2  [STACK] int 
  9890 ;;  p               2  [STACK] int 
  9891 ;;  cp              2  [STACK] PTR unsigned char 
  9892 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_19(9), 
  9893 ;;		 -> STR_18(12), D.lcd(216), D(218), T(144), 
  9894 ;;		 -> STR_7(6), STR_3(6), V(187), 
  9895 ;;  w               2  [STACK] int 
  9896 ;;  i               2  [STACK] int 
  9897 ;; Return value:  Size  Location     Type
  9898 ;;                  2  [STACK] int 
  9899 ;; Registers used:
  9900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/5
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9910 ;;Total ram usage:        0 bytes
  9911 ;; Hardware stack levels used:    1
  9912 ;; Hardware stack levels required when called:    9
  9913 ;; This function calls:
  9914 ;;		_fputc
  9915 ;;		_strlen
  9916 ;; This function is called by:
  9917 ;;		_vfpfcnvrt
  9918 ;; This function uses a reentrant model
  9919 ;;
  9920                           
  9921                           	psect	text45
  9922  014B02                     __ptext45:
  9923                           	opt callstack 0
  9924  014B02                     _stoa:
  9925                           	opt callstack 0
  9926                           
  9927                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9928  014B02  0E11               	movlw	17
  9929  014B04  26E1               	addwf	fsr1l,f,c
  9930  014B06  0E00               	movlw	0
  9931  014B08  22E2               	addwfc	fsr1h,f,c
  9932                           
  9933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9934                           
  9935                           ;incstack = 0
  9936  014B0A  EE20  F0EF         	lfsr	2,stoa@F1166
  9937                           
  9938                           ;stkvar	_nuls @ sp[(-17)+0]
  9939  014B0E  0E07               	movlw	7
  9940  014B10  6E32               	movwf	btemp^0,c
  9941  014B12  0EEF               	movlw	-17
  9942  014B14                     us973999:
  9943  014B14  006F FF7B FFE3     	movff	postinc2,plusw1
  9944  014B1A  28E8               	incf	wreg,w,c
  9945  014B1C  2E32               	decfsz	btemp^0,f,c
  9946  014B1E  D7FA               	bra	us973999
  9947                           
  9948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9949                           ;stkvar	_s @ sp[(-17)+-4]
  9950  014B20  0EEB               	movlw	-21
  9951  014B22  006F FF8C  F03C    	movff	plusw1,btemp+10
  9952  014B28  0EEC               	movlw	-20
  9953  014B2A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9954                           
  9955                           ;stkvar	_cp @ sp[(-17)+11]
  9956  014B30  0EFB               	movlw	-5
  9957  014B32  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9958  014B38  0EFA               	movlw	-6
  9959  014B3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9960                           
  9961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9962                           ;stkvar	_cp @ sp[(-17)+11]
  9963  014B40  0EFA               	movlw	-6
  9964  014B42  006F FF8C  F032    	movff	plusw1,btemp
  9965  014B48  0EFB               	movlw	-5
  9966  014B4A  50E3               	movf	plusw1,w,c
  9967  014B4C  1032               	iorwf	btemp^0,w,c
  9968  014B4E  A4D8               	btfss	status,2,c
  9969  014B50  D00E               	goto	l9896
  9970                           
  9971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9972                           ;stkvar	_nuls @ sp[(-17)+0]
  9973  014B52  0EEF               	movlw	239
  9974  014B54  24E1               	addwf	fsr1l,w,c
  9975  014B56  6E3C               	movwf	(btemp+10)^0,c
  9976  014B58  0EFF               	movlw	255
  9977  014B5A  20E2               	addwfc	fsr1h,w,c
  9978  014B5C  6E3D               	movwf	(btemp+11)^0,c
  9979                           
  9980                           ;stkvar	_cp @ sp[(-17)+11]
  9981  014B5E  0EFB               	movlw	-5
  9982  014B60  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9983  014B66  0EFA               	movlw	-6
  9984  014B68  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9985  014B6E                     l9896:
  9986                           
  9987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9988                           ;stkvar	_cp @ sp[(-17)+11]
  9989  014B6E  0EFA               	movlw	-6
  9990  014B70  006F FF8F FFE6     	movff	plusw1,postinc1
  9991  014B76  006F FF8F FFE6     	movff	plusw1,postinc1
  9992  014B7C  EC5E  F0B9         	call	_strlen	;wreg free
  9993                           
  9994                           ;stkvar	_l @ sp[(-17)+7]
  9995  014B80  0EF6               	movlw	-10
  9996  014B82  0060  F0CB  FFE3   	movff	btemp,plusw1
  9997  014B88  0EF7               	movlw	-9
  9998  014B8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9999                           
 10000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10001                           ;stkvar	_p @ sp[(-17)+9]
 10002  014B90  0EF8               	movlw	-8
 10003  014B92  0060  F077  FFE3   	movff	_prec,plusw1
 10004  014B98  0EF9               	movlw	-7
 10005  014B9A  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10006                           
 10007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10008                           ;stkvar	_p @ sp[(-17)+9]
 10009  014BA0  0EF9               	movlw	-7
 10010  014BA2  BEE3               	btfsc	plusw1,7,c
 10011  014BA4  D023               	goto	l1981
 10012                           
 10013                           ;stkvar	_l @ sp[(-17)+7]
 10014                           ;stkvar	_p @ sp[(-17)+9]
 10015  014BA6  50E1               	movf	fsr1l,w,c
 10016  014BA8  0FF8               	addlw	-8
 10017  014BAA  6ED9               	movwf	fsr2l,c
 10018  014BAC  50E2               	movf	fsr1h,w,c
 10019  014BAE  6EDA               	movwf	fsr2h,c
 10020  014BB0  0EFF               	movlw	255
 10021  014BB2  22DA               	addwfc	fsr2h,f,c
 10022  014BB4  0EF6               	movlw	-10
 10023  014BB6  50E3               	movf	plusw1,w,c
 10024  014BB8  5CDE               	subwf	postinc2,w,c
 10025  014BBA  50DE               	movf	postinc2,w,c
 10026  014BBC  0A80               	xorlw	128
 10027  014BBE  6E32               	movwf	btemp^0,c
 10028  014BC0  0EF7               	movlw	-9
 10029  014BC2  50E3               	movf	plusw1,w,c
 10030  014BC4  0A80               	xorlw	128
 10031  014BC6  5832               	subwfb	btemp^0,w,c
 10032  014BC8  B0D8               	btfsc	status,0,c
 10033  014BCA  D010               	goto	l1981
 10034                           
 10035                           ;stkvar	_p @ sp[(-17)+9]
 10036                           ;stkvar	_l @ sp[(-17)+7]
 10037  014BCC  0EF8               	movlw	-8
 10038  014BCE  006F FF8C  F032    	movff	plusw1,btemp
 10039  014BD4  0EF6               	movlw	-10
 10040  014BD6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10041  014BDC  0EF9               	movlw	-7
 10042  014BDE  006F FF8C  F032    	movff	plusw1,btemp
 10043  014BE4  0EF7               	movlw	-9
 10044  014BE6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10045  014BEC                     l1981:
 10046                           
 10047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10048                           ;stkvar	_l @ sp[(-17)+7]
 10049                           ;stkvar	_p @ sp[(-17)+9]
 10050  014BEC  0EF6               	movlw	-10
 10051  014BEE  006F FF8C  F032    	movff	plusw1,btemp
 10052  014BF4  0EF8               	movlw	-8
 10053  014BF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10054  014BFC  0EF7               	movlw	-9
 10055  014BFE  006F FF8C  F032    	movff	plusw1,btemp
 10056  014C04  0EF9               	movlw	-7
 10057  014C06  0060  F0CB  FFE3   	movff	btemp,plusw1
 10058                           
 10059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10060                           ;stkvar	_w @ sp[(-17)+13]
 10061  014C0C  0EFC               	movlw	-4
 10062  014C0E  0060  F06F  FFE3   	movff	_width,plusw1
 10063  014C14  0EFD               	movlw	-3
 10064  014C16  0060  F073  FFE3   	movff	_width+1,plusw1
 10065                           
 10066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10067  014C1C  A01F               	btfss	_flags^0,0,c
 10068  014C1E  D01F               	goto	l9916
 10069  014C20  D031               	goto	u9780
 10070  014C22                     l9912:
 10071                           
 10072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10073                           ;stkvar	_fp @ sp[(-17)+-2]
 10074  014C22  0EED               	movlw	-19
 10075  014C24  006F FF8F FFE6     	movff	plusw1,postinc1
 10076  014C2A  006F FF8F FFE6     	movff	plusw1,postinc1
 10077  014C30  0E20               	movlw	32
 10078  014C32  6EE6               	movwf	postinc1,c
 10079  014C34  0E00               	movlw	0
 10080  014C36  6EE6               	movwf	postinc1,c
 10081  014C38  EC95  F0B3         	call	_fputc	;wreg free
 10082                           
 10083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10084                           ;stkvar	_l @ sp[(-17)+7]
 10085  014C3C  0EF6               	movlw	-10
 10086  014C3E  50E3               	movf	plusw1,w,c
 10087  014C40  0F01               	addlw	1
 10088  014C42  6E32               	movwf	btemp^0,c
 10089  014C44  0EF6               	movlw	-10
 10090  014C46  0060  F0CB  FFE3   	movff	btemp,plusw1
 10091  014C4C  6A32               	clrf	btemp^0,c
 10092  014C4E  0EF7               	movlw	-9
 10093  014C50  50E3               	movf	plusw1,w,c
 10094  014C52  2032               	addwfc	btemp^0,w,c
 10095  014C54  6E32               	movwf	btemp^0,c
 10096  014C56  0EF7               	movlw	-9
 10097  014C58  0060  F0CB  FFE3   	movff	btemp,plusw1
 10098  014C5E                     l9916:
 10099                           
 10100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10101                           ;stkvar	_w @ sp[(-17)+13]
 10102                           ;stkvar	_l @ sp[(-17)+7]
 10103  014C5E  50E1               	movf	fsr1l,w,c
 10104  014C60  0FF6               	addlw	-10
 10105  014C62  6ED9               	movwf	fsr2l,c
 10106  014C64  50E2               	movf	fsr1h,w,c
 10107  014C66  6EDA               	movwf	fsr2h,c
 10108  014C68  0EFF               	movlw	255
 10109  014C6A  22DA               	addwfc	fsr2h,f,c
 10110  014C6C  0EFC               	movlw	-4
 10111  014C6E  50E3               	movf	plusw1,w,c
 10112  014C70  5CDE               	subwf	postinc2,w,c
 10113  014C72  50DE               	movf	postinc2,w,c
 10114  014C74  0A80               	xorlw	128
 10115  014C76  6E32               	movwf	btemp^0,c
 10116  014C78  0EFD               	movlw	-3
 10117  014C7A  50E3               	movf	plusw1,w,c
 10118  014C7C  0A80               	xorlw	128
 10119  014C7E  5832               	subwfb	btemp^0,w,c
 10120  014C80  A0D8               	btfss	status,0,c
 10121  014C82  D7CF               	goto	l9912
 10122  014C84                     u9780:
 10123                           
 10124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10125                           ;stkvar	_i @ sp[(-17)+15]
 10126  014C84  0EFE               	movlw	-2
 10127  014C86  6AE3               	clrf	plusw1,c
 10128  014C88  0EFF               	movlw	-1
 10129  014C8A  6AE3               	clrf	plusw1,c
 10130                           
 10131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10132  014C8C  D045               	goto	l9926
 10133  014C8E                     l9920:
 10134                           
 10135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10136                           ;stkvar	_fp @ sp[(-17)+-2]
 10137  014C8E  0EED               	movlw	-19
 10138  014C90  006F FF8F FFE6     	movff	plusw1,postinc1
 10139  014C96  006F FF8F FFE6     	movff	plusw1,postinc1
 10140                           
 10141                           ;stkvar	_cp @ sp[(-19)+11]
 10142  014C9C  0EF8               	movlw	-8
 10143  014C9E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10144  014CA4  0EF9               	movlw	-7
 10145  014CA6  006F FF8F FFF7     	movff	plusw1,tblptrh
 10146  014CAC  0E00               	movlw	low (__mediumconst shr (0+16))
 10147  014CAE  6EF8               	movwf	tblptru,c
 10148  014CB0  0E1F               	movlw	(high __ramtop+-1)
 10149  014CB2  64F7               	cpfsgt	tblptrh,c
 10150  014CB4  D003               	bra	u9797
 10151  014CB6  0008               	tblrd		*
 10152  014CB8  50F5               	movf	tablat,w,c
 10153  014CBA  D007               	bra	u9790
 10154  014CBC                     u9797:
 10155  014CBC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10156  014CC2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10157  014CC8  50EF               	movf	indf0,w,c
 10158  014CCA                     u9790:
 10159  014CCA  6EE6               	movwf	postinc1,c
 10160  014CCC  0E00               	movlw	0
 10161  014CCE  6EE6               	movwf	postinc1,c
 10162  014CD0  EC95  F0B3         	call	_fputc	;wreg free
 10163                           
 10164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10165                           ;stkvar	_cp @ sp[(-17)+11]
 10166  014CD4  0EFA               	movlw	-6
 10167  014CD6  50E3               	movf	plusw1,w,c
 10168  014CD8  0F01               	addlw	1
 10169  014CDA  6E32               	movwf	btemp^0,c
 10170  014CDC  0EFA               	movlw	-6
 10171  014CDE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10172  014CE4  6A32               	clrf	btemp^0,c
 10173  014CE6  0EFB               	movlw	-5
 10174  014CE8  50E3               	movf	plusw1,w,c
 10175  014CEA  2032               	addwfc	btemp^0,w,c
 10176  014CEC  6E32               	movwf	btemp^0,c
 10177  014CEE  0EFB               	movlw	-5
 10178  014CF0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10179                           
 10180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10181                           ;stkvar	_i @ sp[(-17)+15]
 10182  014CF6  0EFE               	movlw	-2
 10183  014CF8  50E3               	movf	plusw1,w,c
 10184  014CFA  0F01               	addlw	1
 10185  014CFC  6E32               	movwf	btemp^0,c
 10186  014CFE  0EFE               	movlw	-2
 10187  014D00  0060  F0CB  FFE3   	movff	btemp,plusw1
 10188  014D06  6A32               	clrf	btemp^0,c
 10189  014D08  0EFF               	movlw	-1
 10190  014D0A  50E3               	movf	plusw1,w,c
 10191  014D0C  2032               	addwfc	btemp^0,w,c
 10192  014D0E  6E32               	movwf	btemp^0,c
 10193  014D10  0EFF               	movlw	-1
 10194  014D12  0060  F0CB  FFE3   	movff	btemp,plusw1
 10195  014D18                     l9926:
 10196                           
 10197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10198                           ;stkvar	_p @ sp[(-17)+9]
 10199                           ;stkvar	_i @ sp[(-17)+15]
 10200  014D18  50E1               	movf	fsr1l,w,c
 10201  014D1A  0FFE               	addlw	-2
 10202  014D1C  6ED9               	movwf	fsr2l,c
 10203  014D1E  50E2               	movf	fsr1h,w,c
 10204  014D20  6EDA               	movwf	fsr2h,c
 10205  014D22  0EFF               	movlw	255
 10206  014D24  22DA               	addwfc	fsr2h,f,c
 10207  014D26  0EF8               	movlw	-8
 10208  014D28  50E3               	movf	plusw1,w,c
 10209  014D2A  5CDE               	subwf	postinc2,w,c
 10210  014D2C  50DE               	movf	postinc2,w,c
 10211  014D2E  0A80               	xorlw	128
 10212  014D30  6E32               	movwf	btemp^0,c
 10213  014D32  0EF9               	movlw	-7
 10214  014D34  50E3               	movf	plusw1,w,c
 10215  014D36  0A80               	xorlw	128
 10216  014D38  5832               	subwfb	btemp^0,w,c
 10217  014D3A  A0D8               	btfss	status,0,c
 10218  014D3C  D7A8               	goto	l9920
 10219                           
 10220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10221  014D3E  B01F               	btfsc	_flags^0,0,c
 10222  014D40  D01F               	goto	l9934
 10223  014D42  D031               	goto	u9820
 10224  014D44                     l9930:
 10225                           
 10226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10227                           ;stkvar	_fp @ sp[(-17)+-2]
 10228  014D44  0EED               	movlw	-19
 10229  014D46  006F FF8F FFE6     	movff	plusw1,postinc1
 10230  014D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 10231  014D52  0E20               	movlw	32
 10232  014D54  6EE6               	movwf	postinc1,c
 10233  014D56  0E00               	movlw	0
 10234  014D58  6EE6               	movwf	postinc1,c
 10235  014D5A  EC95  F0B3         	call	_fputc	;wreg free
 10236                           
 10237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10238                           ;stkvar	_l @ sp[(-17)+7]
 10239  014D5E  0EF6               	movlw	-10
 10240  014D60  50E3               	movf	plusw1,w,c
 10241  014D62  0F01               	addlw	1
 10242  014D64  6E32               	movwf	btemp^0,c
 10243  014D66  0EF6               	movlw	-10
 10244  014D68  0060  F0CB  FFE3   	movff	btemp,plusw1
 10245  014D6E  6A32               	clrf	btemp^0,c
 10246  014D70  0EF7               	movlw	-9
 10247  014D72  50E3               	movf	plusw1,w,c
 10248  014D74  2032               	addwfc	btemp^0,w,c
 10249  014D76  6E32               	movwf	btemp^0,c
 10250  014D78  0EF7               	movlw	-9
 10251  014D7A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10252  014D80                     l9934:
 10253                           
 10254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10255                           ;stkvar	_w @ sp[(-17)+13]
 10256                           ;stkvar	_l @ sp[(-17)+7]
 10257  014D80  50E1               	movf	fsr1l,w,c
 10258  014D82  0FF6               	addlw	-10
 10259  014D84  6ED9               	movwf	fsr2l,c
 10260  014D86  50E2               	movf	fsr1h,w,c
 10261  014D88  6EDA               	movwf	fsr2h,c
 10262  014D8A  0EFF               	movlw	255
 10263  014D8C  22DA               	addwfc	fsr2h,f,c
 10264  014D8E  0EFC               	movlw	-4
 10265  014D90  50E3               	movf	plusw1,w,c
 10266  014D92  5CDE               	subwf	postinc2,w,c
 10267  014D94  50DE               	movf	postinc2,w,c
 10268  014D96  0A80               	xorlw	128
 10269  014D98  6E32               	movwf	btemp^0,c
 10270  014D9A  0EFD               	movlw	-3
 10271  014D9C  50E3               	movf	plusw1,w,c
 10272  014D9E  0A80               	xorlw	128
 10273  014DA0  5832               	subwfb	btemp^0,w,c
 10274  014DA2  A0D8               	btfss	status,0,c
 10275  014DA4  D7CF               	goto	l9930
 10276  014DA6                     u9820:
 10277                           
 10278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10279                           ;stkvar	_l @ sp[(-17)+7]
 10280  014DA6  0EF6               	movlw	-10
 10281  014DA8  006F FF8C  F032    	movff	plusw1,btemp
 10282  014DAE  0EF7               	movlw	-9
 10283  014DB0  006F FF8C  F033    	movff	plusw1,btemp+1
 10284                           
 10285                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10286  014DB6  0EEB               	movlw	235
 10287  014DB8  26E1               	addwf	fsr1l,f,c
 10288  014DBA  0EFF               	movlw	255
 10289  014DBC  22E2               	addwfc	fsr1h,f,c
 10290  014DBE  0012               	return		;funcret
 10291  014DC0                     __end_of_stoa:
 10292                           	opt callstack 0
 10293                           
 10294 ;; *************** function _efgtoa *****************
 10295 ;; Defined at:
 10296 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10299 ;;		 -> f(6), NULL(0), 
 10300 ;;  f               4  [STACK] PTR struct _IO_FILE
 10301 ;;  c               1  [STACK] unsigned char 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  u               4  [STACK] unsigned char 
 10304 ;;  g               4  [STACK] unsigned char 
 10305 ;;  l               4  [STACK] unsigned char 
 10306 ;;  h               4  [STACK] unsigned char 
 10307 ;;  ou              4  [STACK] unsigned char 
 10308 ;;  n               2  [STACK] int 
 10309 ;;  e               2  [STACK] int 
 10310 ;;  i               2  [STACK] int 
 10311 ;;  w               2  [STACK] int 
 10312 ;;  p               2  [STACK] int 
 10313 ;;  sign            2  [STACK] int 
 10314 ;;  d               2  [STACK] int 
 10315 ;;  ne              2  [STACK] int 
 10316 ;;  m               2  [STACK] int 
 10317 ;;  pp              2  [STACK] int 
 10318 ;;  t               2  [STACK] int 
 10319 ;;  mode            1  [STACK] unsigned char 
 10320 ;;  nmode           1  [STACK] unsigned char 
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  2  [STACK] int 
 10323 ;; Registers used:
 10324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/5
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10334 ;;Total ram usage:        0 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:   11
 10337 ;; This function calls:
 10338 ;;		___awdiv
 10339 ;;		___awmod
 10340 ;;		___fladd
 10341 ;;		___fldiv
 10342 ;;		___fleq
 10343 ;;		___flge
 10344 ;;		___flmul
 10345 ;;		___flneg
 10346 ;;		___flsub
 10347 ;;		___fltol
 10348 ;;		___fpclassifyf
 10349 ;;		_floorf
 10350 ;;		_isupper
 10351 ;;		_pad
 10352 ;;		_strcpy
 10353 ;;		_tolower
 10354 ;; This function is called by:
 10355 ;;		_vfpfcnvrt
 10356 ;; This function uses a reentrant model
 10357 ;;
 10358                           
 10359                           	psect	text46
 10360  010000                     __ptext46:
 10361                           	opt callstack 0
 10362  010000                     _efgtoa:
 10363                           	opt callstack 0
 10364                           
 10365                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10366  010000  0E38               	movlw	56
 10367  010002  26E1               	addwf	fsr1l,f,c
 10368  010004  0E00               	movlw	0
 10369  010006  22E2               	addwfc	fsr1h,f,c
 10370                           
 10371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10372                           ;stkvar	_sign @ sp[(-56)+42]
 10373                           
 10374                           ;incstack = 0
 10375  010008  0EF2               	movlw	-14
 10376  01000A  6AE3               	clrf	plusw1,c
 10377  01000C  0EF3               	movlw	-13
 10378  01000E  6AE3               	clrf	plusw1,c
 10379                           
 10380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10381                           ;stkvar	_f @ sp[(-56)+-6]
 10382  010010  0EC2               	movlw	-62
 10383  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10384  010018  0EC3               	movlw	-61
 10385  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10386  010020  0EC4               	movlw	-60
 10387  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10388  010028  0EC5               	movlw	-59
 10389  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10390                           
 10391                           ;stkvar	_g @ sp[(-56)+16]
 10392  010030  0ED8               	movlw	-40
 10393  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10394  010038  0ED9               	movlw	-39
 10395  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10396  010040  0EDA               	movlw	-38
 10397  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10398  010048  0EDB               	movlw	-37
 10399  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10400                           
 10401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10402                           ;stkvar	_g @ sp[(-56)+16]
 10403  010050  0EDB               	movlw	-37
 10404  010052  AEE3               	btfss	plusw1,7,c
 10405  010054  D02B               	goto	l9594
 10406                           
 10407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10408  010056  0E01               	movlw	1
 10409  010058  6E3C               	movwf	(btemp+10)^0,c
 10410  01005A  0E00               	movlw	0
 10411  01005C  6E3D               	movwf	(btemp+11)^0,c
 10412                           
 10413                           ;stkvar	_sign @ sp[(-56)+42]
 10414  01005E  0EF2               	movlw	-14
 10415  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10416  010066  0EF3               	movlw	-13
 10417  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10418                           
 10419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10420                           ;stkvar	_g @ sp[(-56)+16]
 10421  01006E  0ED8               	movlw	-40
 10422  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10423  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10424  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10425  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10426  010088  EC08  F0BF         	call	___flneg	;wreg free
 10427                           
 10428                           ;stkvar	_g @ sp[(-56)+16]
 10429  01008C  0ED8               	movlw	-40
 10430  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10431  010094  0ED9               	movlw	-39
 10432  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10433  01009C  0EDA               	movlw	-38
 10434  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10435  0100A4  0EDB               	movlw	-37
 10436  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10437  0100AC                     l9594:
 10438                           
 10439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10440                           ;stkvar	_n @ sp[(-56)+32]
 10441  0100AC  0EE8               	movlw	-24
 10442  0100AE  6AE3               	clrf	plusw1,c
 10443  0100B0  0EE9               	movlw	-23
 10444  0100B2  6AE3               	clrf	plusw1,c
 10445                           
 10446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10447                           ;stkvar	_w @ sp[(-56)+38]
 10448  0100B4  0EEE               	movlw	-18
 10449  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10450  0100BC  0EEF               	movlw	-17
 10451  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10452                           
 10453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10454                           ;stkvar	_sign @ sp[(-56)+42]
 10455  0100C4  0EF2               	movlw	-14
 10456  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10457  0100CC  0EF3               	movlw	-13
 10458  0100CE  50E3               	movf	plusw1,w,c
 10459  0100D0  1032               	iorwf	btemp^0,w,c
 10460  0100D2  A4D8               	btfss	status,2,c
 10461  0100D4  D002               	goto	u9230
 10462  0100D6  A41F               	btfss	_flags^0,2,c
 10463  0100D8  D036               	goto	l9614
 10464  0100DA                     u9230:
 10465                           
 10466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10467                           ;stkvar	_sign @ sp[(-56)+42]
 10468  0100DA  0EF2               	movlw	-14
 10469  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10470  0100E2  0EF3               	movlw	-13
 10471  0100E4  50E3               	movf	plusw1,w,c
 10472  0100E6  1032               	iorwf	btemp^0,w,c
 10473  0100E8  A4D8               	btfss	status,2,c
 10474  0100EA  D002               	goto	l9606
 10475  0100EC  0E2B               	movlw	43
 10476  0100EE  D001               	goto	L9
 10477  0100F0                     l9606:
 10478  0100F0  0E2D               	movlw	45
 10479  0100F2                     L9:
 10480  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10481  0100F4  0E00               	movlw	0
 10482  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10483                           
 10484                           ;stkvar	_efgtoa$4489 @ sp[(-56)+10]
 10485  0100F8  0ED2               	movlw	-46
 10486  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10487  010100  0ED3               	movlw	-45
 10488  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10489                           
 10490                           ;stkvar	_efgtoa$4489 @ sp[(-56)+10]
 10491  010108  0ED2               	movlw	-46
 10492  01010A  006F FF8C  F178    	movff	plusw1,_dbuf
 10493                           
 10494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10495                           ;stkvar	_n @ sp[(-56)+32]
 10496  010110  0EE8               	movlw	-24
 10497  010112  50E3               	movf	plusw1,w,c
 10498  010114  0F01               	addlw	1
 10499  010116  6E32               	movwf	btemp^0,c
 10500  010118  0EE8               	movlw	-24
 10501  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10502  010120  6A32               	clrf	btemp^0,c
 10503  010122  0EE9               	movlw	-23
 10504  010124  50E3               	movf	plusw1,w,c
 10505  010126  2032               	addwfc	btemp^0,w,c
 10506  010128  6E32               	movwf	btemp^0,c
 10507  01012A  0EE9               	movlw	-23
 10508  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10509                           
 10510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10511                           ;stkvar	_w @ sp[(-56)+38]
 10512  010132  50E1               	movf	fsr1l,w,c
 10513  010134  0FEE               	addlw	-18
 10514  010136  6ED9               	movwf	fsr2l,c
 10515  010138  50E2               	movf	fsr1h,w,c
 10516  01013A  6EDA               	movwf	fsr2h,c
 10517  01013C  0EFF               	movlw	255
 10518  01013E  22DA               	addwfc	fsr2h,f,c
 10519  010140  06DE               	decf	postinc2,f,c
 10520  010142  0E00               	movlw	0
 10521  010144  5ADD               	subwfb	postdec2,f,c
 10522  010146                     l9614:
 10523                           
 10524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10525                           ;stkvar	_g @ sp[(-56)+16]
 10526  010146  0ED8               	movlw	-40
 10527  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10528  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10529  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10530  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10531  010160  EC7E  F0AF         	call	___fpclassifyf	;wreg free
 10532  010164  0432               	decf	btemp^0,w,c
 10533  010166  1033               	iorwf	(btemp+1)^0,w,c
 10534  010168  A4D8               	btfss	status,2,c
 10535  01016A  D076               	goto	l9632
 10536  01016C  0EBF               	movlw	191
 10537  01016E  6E3C               	movwf	(btemp+10)^0,c
 10538  010170  0EFF               	movlw	255
 10539  010172  6E3D               	movwf	(btemp+11)^0,c
 10540                           
 10541                           ;stkvar	_c @ sp[(-56)+-7]
 10542  010174  0EC1               	movlw	-63
 10543  010176  50E3               	movf	plusw1,w,c
 10544  010178  6E3A               	movwf	(btemp+8)^0,c
 10545  01017A  6A3B               	clrf	(btemp+9)^0,c
 10546  01017C  503C               	movf	(btemp+10)^0,w,c
 10547  01017E  263A               	addwf	(btemp+8)^0,f,c
 10548  010180  503D               	movf	(btemp+11)^0,w,c
 10549  010182  223B               	addwfc	(btemp+9)^0,f,c
 10550  010184  503B               	movf	(btemp+9)^0,w,c
 10551  010186  E106               	bnz	u9260
 10552  010188  0E1A               	movlw	26
 10553  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10554  01018C  B0D8               	btfsc	status,0,c
 10555  01018E  D002               	goto	u9260
 10556  010190  0E01               	movlw	1
 10557  010192  D001               	goto	u9270
 10558  010194                     u9260:
 10559  010194  0E00               	movlw	0
 10560  010196                     u9270:
 10561  010196  6E3C               	movwf	(btemp+10)^0,c
 10562  010198  6A3D               	clrf	(btemp+11)^0,c
 10563                           
 10564                           ;stkvar	_efgtoa$4490 @ sp[(-56)+8]
 10565  01019A  0ED0               	movlw	-48
 10566  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10567  0101A2  0ED1               	movlw	-47
 10568  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10569                           
 10570                           ;stkvar	_efgtoa$4490 @ sp[(-56)+8]
 10571  0101AA  0ED0               	movlw	-48
 10572  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10573  0101B2  0ED1               	movlw	-47
 10574  0101B4  50E3               	movf	plusw1,w,c
 10575  0101B6  1032               	iorwf	btemp^0,w,c
 10576  0101B8  B4D8               	btfsc	status,2,c
 10577  0101BA  D017               	goto	l9624
 10578                           
 10579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10580  0101BC  0EE5               	movlw	low STR_37
 10581  0101BE  6EE6               	movwf	postinc1,c
 10582  0101C0  0EFF               	movlw	high STR_37
 10583  0101C2  6EE6               	movwf	postinc1,c
 10584                           
 10585                           ;stkvar	_n @ sp[(-58)+32]
 10586  0101C4  0E78               	movlw	low _dbuf
 10587  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10588  0101C8  0E01               	movlw	high _dbuf
 10589  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10590  0101CC  0EE6               	movlw	-26
 10591  0101CE  50E3               	movf	plusw1,w,c
 10592  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10593  0101D2  0EE7               	movlw	-25
 10594  0101D4  50E3               	movf	plusw1,w,c
 10595  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10596  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10597  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10598  0101E4  EC38  F0B7         	call	_strcpy	;wreg free
 10599                           
 10600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10601  0101E8  D016               	goto	l9626
 10602  0101EA                     l9624:
 10603                           
 10604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10605  0101EA  0EED               	movlw	low STR_38
 10606  0101EC  6EE6               	movwf	postinc1,c
 10607  0101EE  0EFF               	movlw	high STR_38
 10608  0101F0  6EE6               	movwf	postinc1,c
 10609                           
 10610                           ;stkvar	_n @ sp[(-58)+32]
 10611  0101F2  0E78               	movlw	low _dbuf
 10612  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10613  0101F6  0E01               	movlw	high _dbuf
 10614  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10615  0101FA  0EE6               	movlw	-26
 10616  0101FC  50E3               	movf	plusw1,w,c
 10617  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10618  010200  0EE7               	movlw	-25
 10619  010202  50E3               	movf	plusw1,w,c
 10620  010204  223D               	addwfc	(btemp+11)^0,f,c
 10621  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10622  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10623  010212  EC38  F0B7         	call	_strcpy	;wreg free
 10624  010216                     l9626:
 10625                           
 10626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10627                           ;stkvar	_w @ sp[(-56)+38]
 10628  010216  50E1               	movf	fsr1l,w,c
 10629  010218  0FEE               	addlw	-18
 10630  01021A  6ED9               	movwf	fsr2l,c
 10631  01021C  50E2               	movf	fsr1h,w,c
 10632  01021E  6EDA               	movwf	fsr2h,c
 10633  010220  0EFF               	movlw	255
 10634  010222  22DA               	addwfc	fsr2h,f,c
 10635  010224  0EFD               	movlw	253
 10636  010226  26DE               	addwf	postinc2,f,c
 10637  010228  0EFF               	movlw	255
 10638  01022A  22DD               	addwfc	postdec2,f,c
 10639  01022C                     l9628:
 10640                           
 10641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10642                           ;stkvar	_w @ sp[(-56)+38]
 10643  01022C  0EEE               	movlw	-18
 10644  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10645  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10646  01023A  0E78               	movlw	low _dbuf
 10647  01023C  6EE6               	movwf	postinc1,c
 10648  01023E  0E01               	movlw	high _dbuf
 10649  010240  6EE6               	movwf	postinc1,c
 10650                           
 10651                           ;stkvar	_fp @ sp[(-60)+-2]
 10652  010242  0EC2               	movlw	-62
 10653  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10654  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10655  010250  ECB3  F0B4         	call	_pad	;wreg free
 10656  010254  EF1D  F089         	goto	l1899
 10657  010258                     l9632:
 10658                           
 10659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10660                           ;stkvar	_g @ sp[(-56)+16]
 10661  010258  0ED8               	movlw	-40
 10662  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10663  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10664  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10665  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10666  010272  EC7E  F0AF         	call	___fpclassifyf	;wreg free
 10667  010276  5032               	movf	btemp^0,w,c
 10668  010278  1033               	iorwf	(btemp+1)^0,w,c
 10669  01027A  A4D8               	btfss	status,2,c
 10670  01027C  D056               	goto	l9650
 10671  01027E  0EBF               	movlw	191
 10672  010280  6E3C               	movwf	(btemp+10)^0,c
 10673  010282  0EFF               	movlw	255
 10674  010284  6E3D               	movwf	(btemp+11)^0,c
 10675                           
 10676                           ;stkvar	_c @ sp[(-56)+-7]
 10677  010286  0EC1               	movlw	-63
 10678  010288  50E3               	movf	plusw1,w,c
 10679  01028A  6E3A               	movwf	(btemp+8)^0,c
 10680  01028C  6A3B               	clrf	(btemp+9)^0,c
 10681  01028E  503C               	movf	(btemp+10)^0,w,c
 10682  010290  263A               	addwf	(btemp+8)^0,f,c
 10683  010292  503D               	movf	(btemp+11)^0,w,c
 10684  010294  223B               	addwfc	(btemp+9)^0,f,c
 10685  010296  503B               	movf	(btemp+9)^0,w,c
 10686  010298  E106               	bnz	u9300
 10687  01029A  0E1A               	movlw	26
 10688  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10689  01029E  B0D8               	btfsc	status,0,c
 10690  0102A0  D002               	goto	u9300
 10691  0102A2  0E01               	movlw	1
 10692  0102A4  D001               	goto	u9310
 10693  0102A6                     u9300:
 10694  0102A6  0E00               	movlw	0
 10695  0102A8                     u9310:
 10696  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10697  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10698                           
 10699                           ;stkvar	_efgtoa$4494 @ sp[(-56)+6]
 10700  0102AC  0ECE               	movlw	-50
 10701  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10702  0102B4  0ECF               	movlw	-49
 10703  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10704                           
 10705                           ;stkvar	_efgtoa$4494 @ sp[(-56)+6]
 10706  0102BC  0ECE               	movlw	-50
 10707  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10708  0102C4  0ECF               	movlw	-49
 10709  0102C6  50E3               	movf	plusw1,w,c
 10710  0102C8  1032               	iorwf	btemp^0,w,c
 10711  0102CA  B4D8               	btfsc	status,2,c
 10712  0102CC  D017               	goto	l9642
 10713                           
 10714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10715  0102CE  0EE9               	movlw	low STR_41
 10716  0102D0  6EE6               	movwf	postinc1,c
 10717  0102D2  0EFF               	movlw	high STR_41
 10718  0102D4  6EE6               	movwf	postinc1,c
 10719                           
 10720                           ;stkvar	_n @ sp[(-58)+32]
 10721  0102D6  0E78               	movlw	low _dbuf
 10722  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10723  0102DA  0E01               	movlw	high _dbuf
 10724  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10725  0102DE  0EE6               	movlw	-26
 10726  0102E0  50E3               	movf	plusw1,w,c
 10727  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10728  0102E4  0EE7               	movlw	-25
 10729  0102E6  50E3               	movf	plusw1,w,c
 10730  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10731  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10732  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10733  0102F6  EC38  F0B7         	call	_strcpy	;wreg free
 10734                           
 10735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10736  0102FA  D78D               	goto	l9626
 10737  0102FC                     l9642:
 10738                           
 10739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10740  0102FC  0EF1               	movlw	low STR_42
 10741  0102FE  6EE6               	movwf	postinc1,c
 10742  010300  0EFF               	movlw	high STR_42
 10743  010302  6EE6               	movwf	postinc1,c
 10744                           
 10745                           ;stkvar	_n @ sp[(-58)+32]
 10746  010304  0E78               	movlw	low _dbuf
 10747  010306  6E3C               	movwf	(btemp+10)^0,c
 10748  010308  0E01               	movlw	high _dbuf
 10749  01030A  6E3D               	movwf	(btemp+11)^0,c
 10750  01030C  0EE6               	movlw	-26
 10751  01030E  50E3               	movf	plusw1,w,c
 10752  010310  263C               	addwf	(btemp+10)^0,f,c
 10753  010312  0EE7               	movlw	-25
 10754  010314  50E3               	movf	plusw1,w,c
 10755  010316  223D               	addwfc	(btemp+11)^0,f,c
 10756  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10757  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10758  010324  EC38  F0B7         	call	_strcpy	;wreg free
 10759  010328  D776               	goto	l9626
 10760  01032A                     l9650:
 10761                           
 10762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10763  01032A  0E00               	movlw	0
 10764  01032C  6E3A               	movwf	(btemp+8)^0,c
 10765  01032E  0E00               	movlw	0
 10766  010330  6E3B               	movwf	(btemp+9)^0,c
 10767  010332  0E80               	movlw	128
 10768  010334  6E3C               	movwf	(btemp+10)^0,c
 10769  010336  0E3F               	movlw	63
 10770  010338  6E3D               	movwf	(btemp+11)^0,c
 10771                           
 10772                           ;stkvar	_u @ sp[(-56)+12]
 10773  01033A  0ED4               	movlw	-44
 10774  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10775  010342  0ED5               	movlw	-43
 10776  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10777  01034A  0ED6               	movlw	-42
 10778  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10779  010352  0ED7               	movlw	-41
 10780  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10781                           
 10782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10783                           ;stkvar	_e @ sp[(-56)+34]
 10784  01035A  0EEA               	movlw	-22
 10785  01035C  6AE3               	clrf	plusw1,c
 10786  01035E  0EEB               	movlw	-21
 10787  010360  6AE3               	clrf	plusw1,c
 10788                           
 10789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10790  010362  0E00               	movlw	0
 10791  010364  6EE6               	movwf	postinc1,c
 10792  010366  0E00               	movlw	0
 10793  010368  6EE6               	movwf	postinc1,c
 10794  01036A  0E00               	movlw	0
 10795  01036C  6EE6               	movwf	postinc1,c
 10796  01036E  0E00               	movlw	0
 10797  010370  6EE6               	movwf	postinc1,c
 10798                           
 10799                           ;stkvar	_g @ sp[(-60)+16]
 10800  010372  0ED4               	movlw	-44
 10801  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10802  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10803  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10804  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10805  01038C  ECA2  F0B7         	call	___fleq	;wreg free
 10806  010390  A032               	btfss	btemp& (0+255),0,c
 10807  010392  D039               	goto	l9662
 10808  010394  D0BC               	goto	u9350
 10809  010396                     l9658:
 10810                           
 10811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10812  010396  0E00               	movlw	0
 10813  010398  6EE6               	movwf	postinc1,c
 10814  01039A  0E00               	movlw	0
 10815  01039C  6EE6               	movwf	postinc1,c
 10816  01039E  0E20               	movlw	32
 10817  0103A0  6EE6               	movwf	postinc1,c
 10818  0103A2  0E41               	movlw	65
 10819  0103A4  6EE6               	movwf	postinc1,c
 10820                           
 10821                           ;stkvar	_u @ sp[(-60)+12]
 10822  0103A6  0ED0               	movlw	-48
 10823  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10824  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10825  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10826  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10827  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10828                           
 10829                           ;stkvar	_u @ sp[(-56)+12]
 10830  0103C4  0ED4               	movlw	-44
 10831  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10832  0103CC  0ED5               	movlw	-43
 10833  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10834  0103D4  0ED6               	movlw	-42
 10835  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10836  0103DC  0ED7               	movlw	-41
 10837  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10838                           
 10839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10840                           ;stkvar	_e @ sp[(-56)+34]
 10841  0103E4  0EEA               	movlw	-22
 10842  0103E6  50E3               	movf	plusw1,w,c
 10843  0103E8  0F01               	addlw	1
 10844  0103EA  6E32               	movwf	btemp^0,c
 10845  0103EC  0EEA               	movlw	-22
 10846  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10847  0103F4  6A32               	clrf	btemp^0,c
 10848  0103F6  0EEB               	movlw	-21
 10849  0103F8  50E3               	movf	plusw1,w,c
 10850  0103FA  2032               	addwfc	btemp^0,w,c
 10851  0103FC  6E32               	movwf	btemp^0,c
 10852  0103FE  0EEB               	movlw	-21
 10853  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10854  010406                     l9662:
 10855                           
 10856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10857  010406  0E00               	movlw	0
 10858  010408  6EE6               	movwf	postinc1,c
 10859  01040A  0E00               	movlw	0
 10860  01040C  6EE6               	movwf	postinc1,c
 10861  01040E  0E20               	movlw	32
 10862  010410  6EE6               	movwf	postinc1,c
 10863  010412  0E41               	movlw	65
 10864  010414  6EE6               	movwf	postinc1,c
 10865                           
 10866                           ;stkvar	_u @ sp[(-60)+12]
 10867  010416  0ED0               	movlw	-48
 10868  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10869  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10870  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10871  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10872  010430  ECC1  F08E         	call	___flmul	;wreg free
 10873  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10874  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10875  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10876  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10877                           
 10878                           ;stkvar	_g @ sp[(-60)+16]
 10879  01044C  0ED4               	movlw	-44
 10880  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10881  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10882  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10883  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10884  010466  EC02  F0B1         	call	___flge	;wreg free
 10885  01046A  A032               	btfss	btemp& (0+255),0,c
 10886  01046C  D032               	goto	l9668
 10887  01046E  D793               	goto	l9658
 10888  010470                     l9664:
 10889                           
 10890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10891  010470  0E00               	movlw	0
 10892  010472  6EE6               	movwf	postinc1,c
 10893  010474  0E00               	movlw	0
 10894  010476  6EE6               	movwf	postinc1,c
 10895  010478  0E20               	movlw	32
 10896  01047A  6EE6               	movwf	postinc1,c
 10897  01047C  0E41               	movlw	65
 10898  01047E  6EE6               	movwf	postinc1,c
 10899                           
 10900                           ;stkvar	_u @ sp[(-60)+12]
 10901  010480  0ED0               	movlw	-48
 10902  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10903  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10904  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10905  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10906  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10907                           
 10908                           ;stkvar	_u @ sp[(-56)+12]
 10909  01049E  0ED4               	movlw	-44
 10910  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10911  0104A6  0ED5               	movlw	-43
 10912  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10913  0104AE  0ED6               	movlw	-42
 10914  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10915  0104B6  0ED7               	movlw	-41
 10916  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10917                           
 10918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10919                           ;stkvar	_e @ sp[(-56)+34]
 10920  0104BE  50E1               	movf	fsr1l,w,c
 10921  0104C0  0FEA               	addlw	-22
 10922  0104C2  6ED9               	movwf	fsr2l,c
 10923  0104C4  50E2               	movf	fsr1h,w,c
 10924  0104C6  6EDA               	movwf	fsr2h,c
 10925  0104C8  0EFF               	movlw	255
 10926  0104CA  22DA               	addwfc	fsr2h,f,c
 10927  0104CC  06DE               	decf	postinc2,f,c
 10928  0104CE  0E00               	movlw	0
 10929  0104D0  5ADD               	subwfb	postdec2,f,c
 10930  0104D2                     l9668:
 10931                           
 10932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10933                           ;stkvar	_u @ sp[(-56)+12]
 10934  0104D2  0ED4               	movlw	-44
 10935  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10936  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10937  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10938  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10939                           
 10940                           ;stkvar	_g @ sp[(-60)+16]
 10941  0104EC  0ED4               	movlw	-44
 10942  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10943  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10944  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10945  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10946  010506  EC02  F0B1         	call	___flge	;wreg free
 10947  01050A  A032               	btfss	btemp& (0+255),0,c
 10948  01050C  D7B1               	goto	l9664
 10949  01050E                     u9350:
 10950                           
 10951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10952                           ;stkvar	_c @ sp[(-56)+-7]
 10953  01050E  0EC1               	movlw	-63
 10954  010510  50E3               	movf	plusw1,w,c
 10955  010512  6EE6               	movwf	postinc1,c
 10956  010514  0E00               	movlw	0
 10957  010516  6EE6               	movwf	postinc1,c
 10958  010518  ECA9  F0BB         	call	_tolower	;wreg free
 10959                           
 10960                           ;stkvar	_mode @ sp[(-56)+54]
 10961  01051C  0EFE               	movlw	-2
 10962  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10963                           
 10964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10965                           ;stkvar	_mode @ sp[(-56)+54]
 10966                           ;stkvar	_nmode @ sp[(-56)+55]
 10967  010524  0EFE               	movlw	-2
 10968  010526  006F FF8C  F032    	movff	plusw1,btemp
 10969  01052C  0EFF               	movlw	-1
 10970  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10971                           
 10972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10973                           ;stkvar	_mode @ sp[(-56)+54]
 10974  010534  0EFE               	movlw	-2
 10975  010536  006F FF8C  F032    	movff	plusw1,btemp
 10976  01053C  0E67               	movlw	103
 10977  01053E  1832               	xorwf	btemp^0,w,c
 10978  010540  A4D8               	btfss	status,2,c
 10979  010542  D025               	goto	l9686
 10980                           
 10981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10982  010544  501D               	movf	_prec^0,w,c
 10983  010546  101E               	iorwf	(_prec+1)^0,w,c
 10984  010548  A4D8               	btfss	status,2,c
 10985  01054A  D004               	goto	l9680
 10986                           
 10987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10988  01054C  0E00               	movlw	0
 10989  01054E  6E1E               	movwf	(_prec+1)^0,c
 10990  010550  0E01               	movlw	1
 10991  010552  6E1D               	movwf	_prec^0,c
 10992  010554                     l9680:
 10993                           
 10994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10995  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10996  010556  D005               	goto	u9380
 10997  010558  501E               	movf	(_prec+1)^0,w,c
 10998  01055A  E110               	bnz	l9684
 10999  01055C  041D               	decf	_prec^0,w,c
 11000  01055E  B0D8               	btfsc	status,0,c
 11001  010560  D00D               	goto	l9684
 11002  010562                     u9380:
 11003  010562  0E06               	movlw	6
 11004  010564  6E3C               	movwf	(btemp+10)^0,c
 11005  010566  0E00               	movlw	0
 11006  010568  6E3D               	movwf	(btemp+11)^0,c
 11007                           
 11008                           ;stkvar	_p @ sp[(-56)+40]
 11009  01056A  0EF0               	movlw	-16
 11010  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11011  010572  0EF1               	movlw	-15
 11012  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11013  01057A  D00C               	goto	l9692
 11014  01057C                     l9684:
 11015                           
 11016                           ;stkvar	_p @ sp[(-56)+40]
 11017  01057C  0EF0               	movlw	-16
 11018  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 11019  010584  0EF1               	movlw	-15
 11020  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11021  01058C  D003               	goto	l9692
 11022  01058E                     l9686:
 11023                           
 11024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11025  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 11026  010590  D7F5               	goto	l9684
 11027  010592  D7E7               	goto	u9380
 11028  010594                     l9692:
 11029                           
 11030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11031                           ;stkvar	_mode @ sp[(-56)+54]
 11032  010594  0EFE               	movlw	-2
 11033  010596  006F FF8C  F032    	movff	plusw1,btemp
 11034  01059C  0E67               	movlw	103
 11035  01059E  1832               	xorwf	btemp^0,w,c
 11036  0105A0  A4D8               	btfss	status,2,c
 11037  0105A2  D02F               	goto	l9702
 11038                           
 11039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11040                           ;stkvar	_e @ sp[(-56)+34]
 11041  0105A4  0EEB               	movlw	-21
 11042  0105A6  AEE3               	btfss	plusw1,7,c
 11043  0105A8  D00E               	goto	u9410
 11044  0105AA  0EEA               	movlw	-22
 11045  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 11046  0105B2  0EFC               	movlw	252
 11047  0105B4  5E32               	subwf	btemp^0,f,c
 11048  0105B6  0EEB               	movlw	-21
 11049  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 11050  0105BE  0EFF               	movlw	255
 11051  0105C0  5A32               	subwfb	btemp^0,f,c
 11052  0105C2  A0D8               	btfss	status,0,c
 11053  0105C4  D018               	goto	l9700
 11054  0105C6                     u9410:
 11055                           
 11056                           ;stkvar	_e @ sp[(-56)+34]
 11057                           ;stkvar	_p @ sp[(-56)+40]
 11058  0105C6  0EF0               	movlw	-16
 11059  0105C8  50E3               	movf	plusw1,w,c
 11060  0105CA  0FFF               	addlw	255
 11061  0105CC  6E3C               	movwf	(btemp+10)^0,c
 11062  0105CE  0EF1               	movlw	-15
 11063  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 11064  0105D6  0EFF               	movlw	255
 11065  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 11066  0105DA  0EEA               	movlw	-22
 11067  0105DC  50E3               	movf	plusw1,w,c
 11068  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 11069  0105E0  503D               	movf	(btemp+11)^0,w,c
 11070  0105E2  0A80               	xorlw	128
 11071  0105E4  6E32               	movwf	btemp^0,c
 11072  0105E6  0EEB               	movlw	-21
 11073  0105E8  50E3               	movf	plusw1,w,c
 11074  0105EA  0A80               	xorlw	128
 11075  0105EC  5832               	subwfb	btemp^0,w,c
 11076  0105EE  A0D8               	btfss	status,0,c
 11077  0105F0  D002               	goto	l9700
 11078                           
 11079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11080  0105F2  0E66               	movlw	102
 11081  0105F4  D001               	goto	L10
 11082  0105F6                     l9700:
 11083                           
 11084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11085  0105F6  0E65               	movlw	101
 11086  0105F8                     L10:
 11087  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11088                           
 11089                           ;stkvar	_nmode @ sp[(-56)+55]
 11090  0105FA  0EFF               	movlw	-1
 11091  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11092  010602                     l9702:
 11093                           
 11094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11095                           ;stkvar	_p @ sp[(-56)+40]
 11096                           ;stkvar	_m @ sp[(-56)+48]
 11097  010602  0EF0               	movlw	-16
 11098  010604  006F FF8C  F032    	movff	plusw1,btemp
 11099  01060A  0EF8               	movlw	-8
 11100  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11101  010612  0EF1               	movlw	-15
 11102  010614  006F FF8C  F032    	movff	plusw1,btemp
 11103  01061A  0EF9               	movlw	-7
 11104  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11105                           
 11106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11107                           ;stkvar	_mode @ sp[(-56)+54]
 11108  010622  0EFE               	movlw	-2
 11109  010624  006F FF8C  F032    	movff	plusw1,btemp
 11110  01062A  0E67               	movlw	103
 11111  01062C  1832               	xorwf	btemp^0,w,c
 11112  01062E  A4D8               	btfss	status,2,c
 11113  010630  D00B               	goto	u9450
 11114                           
 11115                           ;stkvar	_nmode @ sp[(-56)+55]
 11116  010632  0EFF               	movlw	-1
 11117  010634  006F FF8C  F032    	movff	plusw1,btemp
 11118  01063A  0E66               	movlw	102
 11119  01063C  1832               	xorwf	btemp^0,w,c
 11120  01063E  A4D8               	btfss	status,2,c
 11121  010640  D014               	goto	l1928
 11122                           
 11123                           ;stkvar	_e @ sp[(-56)+34]
 11124  010642  0EEB               	movlw	-21
 11125  010644  AEE3               	btfss	plusw1,7,c
 11126  010646  D011               	goto	l1928
 11127  010648                     u9450:
 11128                           
 11129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11130                           ;stkvar	_m @ sp[(-56)+48]
 11131  010648  0EF8               	movlw	-8
 11132  01064A  50E3               	movf	plusw1,w,c
 11133  01064C  0F01               	addlw	1
 11134  01064E  6E32               	movwf	btemp^0,c
 11135  010650  0EF8               	movlw	-8
 11136  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11137  010658  6A32               	clrf	btemp^0,c
 11138  01065A  0EF9               	movlw	-7
 11139  01065C  50E3               	movf	plusw1,w,c
 11140  01065E  2032               	addwfc	btemp^0,w,c
 11141  010660  6E32               	movwf	btemp^0,c
 11142  010662  0EF9               	movlw	-7
 11143  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11144  01066A                     l1928:
 11145                           
 11146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11147                           ;stkvar	_nmode @ sp[(-56)+55]
 11148  01066A  0EFF               	movlw	-1
 11149  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11150  010672  0E66               	movlw	102
 11151  010674  1832               	xorwf	btemp^0,w,c
 11152  010676  A4D8               	btfss	status,2,c
 11153  010678  D03B               	goto	l9722
 11154                           
 11155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11156                           ;stkvar	_e @ sp[(-56)+34]
 11157  01067A  0EEB               	movlw	-21
 11158  01067C  AEE3               	btfss	plusw1,7,c
 11159  01067E  D01C               	goto	l9718
 11160                           
 11161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11162  010680  0E00               	movlw	0
 11163  010682  6E3A               	movwf	(btemp+8)^0,c
 11164  010684  0E00               	movlw	0
 11165  010686  6E3B               	movwf	(btemp+9)^0,c
 11166  010688  0E80               	movlw	128
 11167  01068A  6E3C               	movwf	(btemp+10)^0,c
 11168  01068C  0E3F               	movlw	63
 11169  01068E  6E3D               	movwf	(btemp+11)^0,c
 11170                           
 11171                           ;stkvar	_u @ sp[(-56)+12]
 11172  010690  0ED4               	movlw	-44
 11173  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11174  010698  0ED5               	movlw	-43
 11175  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11176  0106A0  0ED6               	movlw	-42
 11177  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11178  0106A8  0ED7               	movlw	-41
 11179  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11180                           
 11181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11182                           ;stkvar	_e @ sp[(-56)+34]
 11183  0106B0  0EEA               	movlw	-22
 11184  0106B2  6AE3               	clrf	plusw1,c
 11185  0106B4  0EEB               	movlw	-21
 11186  0106B6  6AE3               	clrf	plusw1,c
 11187  0106B8                     l9718:
 11188                           
 11189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11190                           ;stkvar	_mode @ sp[(-56)+54]
 11191  0106B8  0EFE               	movlw	-2
 11192  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11193  0106C0  0E67               	movlw	103
 11194  0106C2  1832               	xorwf	btemp^0,w,c
 11195  0106C4  B4D8               	btfsc	status,2,c
 11196  0106C6  D014               	goto	l9722
 11197                           
 11198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11199                           ;stkvar	_e @ sp[(-56)+34]
 11200                           ;stkvar	_m @ sp[(-56)+48]
 11201  0106C8  0EF8               	movlw	-8
 11202  0106CA  50E3               	movf	plusw1,w,c
 11203  0106CC  6E32               	movwf	btemp^0,c
 11204  0106CE  0EEA               	movlw	-22
 11205  0106D0  50E3               	movf	plusw1,w,c
 11206  0106D2  2632               	addwf	btemp^0,f,c
 11207  0106D4  0EF8               	movlw	-8
 11208  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11209  0106DC  0EF9               	movlw	-7
 11210  0106DE  50E3               	movf	plusw1,w,c
 11211  0106E0  6E32               	movwf	btemp^0,c
 11212  0106E2  0EEB               	movlw	-21
 11213  0106E4  50E3               	movf	plusw1,w,c
 11214  0106E6  2232               	addwfc	btemp^0,f,c
 11215  0106E8  0EF9               	movlw	-7
 11216  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11217  0106F0                     l9722:
 11218                           
 11219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11220                           ;stkvar	_i @ sp[(-56)+36]
 11221  0106F0  0EEC               	movlw	-20
 11222  0106F2  6AE3               	clrf	plusw1,c
 11223  0106F4  0EED               	movlw	-19
 11224  0106F6  6AE3               	clrf	plusw1,c
 11225                           
 11226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11227                           ;stkvar	_g @ sp[(-56)+16]
 11228  0106F8  0ED8               	movlw	-40
 11229  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11230  010700  0ED9               	movlw	-39
 11231  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11232  010708  0EDA               	movlw	-38
 11233  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11234  010710  0EDB               	movlw	-37
 11235  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11236                           
 11237                           ;stkvar	_h @ sp[(-56)+24]
 11238  010718  0EE0               	movlw	-32
 11239  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11240  010720  0EE1               	movlw	-31
 11241  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11242  010728  0EE2               	movlw	-30
 11243  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11244  010730  0EE3               	movlw	-29
 11245  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11246                           
 11247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11248                           ;stkvar	_u @ sp[(-56)+12]
 11249  010738  0ED4               	movlw	-44
 11250  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11251  010740  0ED5               	movlw	-43
 11252  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11253  010748  0ED6               	movlw	-42
 11254  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11255  010750  0ED7               	movlw	-41
 11256  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11257                           
 11258                           ;stkvar	_ou @ sp[(-56)+28]
 11259  010758  0EE4               	movlw	-28
 11260  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11261  010760  0EE5               	movlw	-27
 11262  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11263  010768  0EE6               	movlw	-26
 11264  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11265  010770  0EE7               	movlw	-25
 11266  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11267                           
 11268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11269  010778  D0D6               	goto	l9738
 11270  01077A                     l9728:
 11271                           
 11272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11273                           ;stkvar	_u @ sp[(-56)+12]
 11274  01077A  0ED4               	movlw	-44
 11275  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11276  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11277  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11278  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11279                           
 11280                           ;stkvar	_h @ sp[(-60)+24]
 11281  010794  0EDC               	movlw	-36
 11282  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11283  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11284  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11285  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11286  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 11287  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11288  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11289  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11290  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11291  0107CA  EC55  F0A2         	call	_floorf	;wreg free
 11292                           
 11293                           ;stkvar	_l @ sp[(-56)+20]
 11294  0107CE  0EDC               	movlw	-36
 11295  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11296  0107D6  0EDD               	movlw	-35
 11297  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11298  0107DE  0EDE               	movlw	-34
 11299  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11300  0107E6  0EDF               	movlw	-33
 11301  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11302                           
 11303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11304                           ;stkvar	_l @ sp[(-56)+20]
 11305  0107EE  0EDC               	movlw	-36
 11306  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11307  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11308  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11309  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11310  010808  EC49  F0B0         	call	___fltol	;wreg free
 11311  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11312  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11313                           
 11314                           ;stkvar	_d @ sp[(-56)+44]
 11315  010818  0EF4               	movlw	-12
 11316  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11317  010820  0EF5               	movlw	-11
 11318  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11319                           
 11320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11321                           ;stkvar	_u @ sp[(-56)+12]
 11322  010828  0ED4               	movlw	-44
 11323  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11324  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11325  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11326  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11327                           
 11328                           ;stkvar	_l @ sp[(-60)+20]
 11329  010842  0ED8               	movlw	-40
 11330  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11331  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11332  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11333  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11334  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11335  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11336  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11337  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11338  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11339                           
 11340                           ;stkvar	_h @ sp[(-60)+24]
 11341  010878  0EDC               	movlw	-36
 11342  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11343  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11344  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11345  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11346  010892  EC4F  F0BF         	call	___flsub	;wreg free
 11347                           
 11348                           ;stkvar	_h @ sp[(-56)+24]
 11349  010896  0EE0               	movlw	-32
 11350  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11351  01089E  0EE1               	movlw	-31
 11352  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11353  0108A6  0EE2               	movlw	-30
 11354  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11355  0108AE  0EE3               	movlw	-29
 11356  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11357                           
 11358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11359  0108B6  0E00               	movlw	0
 11360  0108B8  6EE6               	movwf	postinc1,c
 11361  0108BA  0E00               	movlw	0
 11362  0108BC  6EE6               	movwf	postinc1,c
 11363  0108BE  0E20               	movlw	32
 11364  0108C0  6EE6               	movwf	postinc1,c
 11365  0108C2  0E41               	movlw	65
 11366  0108C4  6EE6               	movwf	postinc1,c
 11367                           
 11368                           ;stkvar	_u @ sp[(-60)+12]
 11369  0108C6  0ED0               	movlw	-48
 11370  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11371  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11372  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11373  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11374  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 11375                           
 11376                           ;stkvar	_u @ sp[(-56)+12]
 11377  0108E4  0ED4               	movlw	-44
 11378  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11379  0108EC  0ED5               	movlw	-43
 11380  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11381  0108F4  0ED6               	movlw	-42
 11382  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11383  0108FC  0ED7               	movlw	-41
 11384  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11385                           
 11386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11387                           ;stkvar	_i @ sp[(-56)+36]
 11388  010904  0EEC               	movlw	-20
 11389  010906  50E3               	movf	plusw1,w,c
 11390  010908  0F01               	addlw	1
 11391  01090A  6E32               	movwf	btemp^0,c
 11392  01090C  0EEC               	movlw	-20
 11393  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11394  010914  6A32               	clrf	btemp^0,c
 11395  010916  0EED               	movlw	-19
 11396  010918  50E3               	movf	plusw1,w,c
 11397  01091A  2032               	addwfc	btemp^0,w,c
 11398  01091C  6E32               	movwf	btemp^0,c
 11399  01091E  0EED               	movlw	-19
 11400  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11401  010926                     l9738:
 11402                           
 11403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11404                           ;stkvar	_m @ sp[(-56)+48]
 11405                           ;stkvar	_i @ sp[(-56)+36]
 11406  010926  50E1               	movf	fsr1l,w,c
 11407  010928  0FEC               	addlw	-20
 11408  01092A  6ED9               	movwf	fsr2l,c
 11409  01092C  50E2               	movf	fsr1h,w,c
 11410  01092E  6EDA               	movwf	fsr2h,c
 11411  010930  0EFF               	movlw	255
 11412  010932  22DA               	addwfc	fsr2h,f,c
 11413  010934  0EF8               	movlw	-8
 11414  010936  50E3               	movf	plusw1,w,c
 11415  010938  5CDE               	subwf	postinc2,w,c
 11416  01093A  50DE               	movf	postinc2,w,c
 11417  01093C  0A80               	xorlw	128
 11418  01093E  6E32               	movwf	btemp^0,c
 11419  010940  0EF9               	movlw	-7
 11420  010942  50E3               	movf	plusw1,w,c
 11421  010944  0A80               	xorlw	128
 11422  010946  5832               	subwfb	btemp^0,w,c
 11423  010948  A0D8               	btfss	status,0,c
 11424  01094A  D717               	goto	l9728
 11425                           
 11426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11427  01094C  0E00               	movlw	0
 11428  01094E  6EE6               	movwf	postinc1,c
 11429  010950  0E00               	movlw	0
 11430  010952  6EE6               	movwf	postinc1,c
 11431  010954  0EA0               	movlw	160
 11432  010956  6EE6               	movwf	postinc1,c
 11433  010958  0E40               	movlw	64
 11434  01095A  6EE6               	movwf	postinc1,c
 11435                           
 11436                           ;stkvar	_u @ sp[(-60)+12]
 11437  01095C  0ED0               	movlw	-48
 11438  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11439  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11440  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11441  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11442  010976  ECC1  F08E         	call	___flmul	;wreg free
 11443                           
 11444                           ;stkvar	_l @ sp[(-56)+20]
 11445  01097A  0EDC               	movlw	-36
 11446  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11447  010982  0EDD               	movlw	-35
 11448  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11449  01098A  0EDE               	movlw	-34
 11450  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11451  010992  0EDF               	movlw	-33
 11452  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11453                           
 11454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11455                           ;stkvar	_l @ sp[(-56)+20]
 11456  01099A  0EDC               	movlw	-36
 11457  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11458  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11459  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11460  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11461                           
 11462                           ;stkvar	_h @ sp[(-60)+24]
 11463  0109B4  0EDC               	movlw	-36
 11464  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11465  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11466  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11467  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11468  0109CE  EC02  F0B1         	call	___flge	;wreg free
 11469  0109D2  A032               	btfss	btemp& (0+255),0,c
 11470  0109D4  D021               	goto	u9520
 11471                           
 11472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11473                           ;stkvar	_l @ sp[(-56)+20]
 11474                           
 11475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11476                           
 11477                           ;stkvar	_l @ sp[(-56)+20]
 11478                           
 11479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11480  0109D6  0EDC               	movlw	-36
 11481  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11482  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11483  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11484  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11485                           
 11486                           ;stkvar	_h @ sp[(-60)+24]
 11487  0109F0  0EDC               	movlw	-36
 11488  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11489  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11490  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11491  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11492  010A0A  ECA2  F0B7         	call	___fleq	;wreg free
 11493  010A0E  A032               	btfss	btemp& (0+255),0,c
 11494  010A10  D01B               	goto	l9752
 11495                           
 11496                           ;stkvar	_d @ sp[(-56)+44]
 11497  010A12  0EF4               	movlw	-12
 11498  010A14  B0E3               	btfsc	plusw1,0,c
 11499  010A16  D018               	goto	l9752
 11500  010A18                     u9520:
 11501                           
 11502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11503  010A18  0E00               	movlw	0
 11504  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11505  010A1C  0E00               	movlw	0
 11506  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11507  010A20  0E00               	movlw	0
 11508  010A22  6E3C               	movwf	(btemp+10)^0,c
 11509  010A24  0E00               	movlw	0
 11510  010A26  6E3D               	movwf	(btemp+11)^0,c
 11511                           
 11512                           ;stkvar	_l @ sp[(-56)+20]
 11513  010A28  0EDC               	movlw	-36
 11514  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11515  010A30  0EDD               	movlw	-35
 11516  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11517  010A38  0EDE               	movlw	-34
 11518  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11519  010A40  0EDF               	movlw	-33
 11520  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11521  010A48                     l9752:
 11522                           
 11523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11524                           ;stkvar	_l @ sp[(-56)+20]
 11525  010A48  0EDC               	movlw	-36
 11526  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11527  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11528  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11529  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11530                           
 11531                           ;stkvar	_g @ sp[(-60)+16]
 11532  010A62  0ED4               	movlw	-44
 11533  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11534  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11535  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11536  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11537  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11538                           
 11539                           ;stkvar	_h @ sp[(-56)+24]
 11540  010A80  0EE0               	movlw	-32
 11541  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11542  010A88  0EE1               	movlw	-31
 11543  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11544  010A90  0EE2               	movlw	-30
 11545  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11546  010A98  0EE3               	movlw	-29
 11547  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11548                           
 11549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11550                           ;stkvar	_ou @ sp[(-56)+28]
 11551  010AA0  0EE4               	movlw	-28
 11552  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11553  010AA8  0EE5               	movlw	-27
 11554  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11555  010AB0  0EE6               	movlw	-26
 11556  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11557  010AB8  0EE7               	movlw	-25
 11558  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11559                           
 11560                           ;stkvar	_u @ sp[(-56)+12]
 11561  010AC0  0ED4               	movlw	-44
 11562  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11563  010AC8  0ED5               	movlw	-43
 11564  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11565  010AD0  0ED6               	movlw	-42
 11566  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11567  010AD8  0ED7               	movlw	-41
 11568  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11569                           
 11570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11571                           ;stkvar	_nmode @ sp[(-56)+55]
 11572  010AE0  0EFF               	movlw	-1
 11573  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11574  010AE8  0E65               	movlw	101
 11575  010AEA  1832               	xorwf	btemp^0,w,c
 11576  010AEC  B4D8               	btfsc	status,2,c
 11577  010AEE  D011               	goto	l9760
 11578                           
 11579                           ;stkvar	_e @ sp[(-56)+34]
 11580                           ;stkvar	_ne @ sp[(-56)+46]
 11581  010AF0  0EEA               	movlw	-22
 11582  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11583  010AF8  0EF6               	movlw	-10
 11584  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11585  010B00  0EEB               	movlw	-21
 11586  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11587  010B08  0EF7               	movlw	-9
 11588  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11589  010B10  D004               	goto	l1943
 11590  010B12                     l9760:
 11591                           
 11592                           ;stkvar	_ne @ sp[(-56)+46]
 11593  010B12  0EF6               	movlw	-10
 11594  010B14  6AE3               	clrf	plusw1,c
 11595  010B16  0EF7               	movlw	-9
 11596  010B18  6AE3               	clrf	plusw1,c
 11597  010B1A                     l1943:
 11598                           
 11599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11600                           ;stkvar	_pp @ sp[(-56)+50]
 11601  010B1A  0EFA               	movlw	-6
 11602  010B1C  6AE3               	clrf	plusw1,c
 11603  010B1E  0EFB               	movlw	-5
 11604  010B20  6AE3               	clrf	plusw1,c
 11605                           
 11606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11607                           ;stkvar	_t @ sp[(-56)+52]
 11608  010B22  0EFC               	movlw	-4
 11609  010B24  6AE3               	clrf	plusw1,c
 11610  010B26  0EFD               	movlw	-3
 11611  010B28  6AE3               	clrf	plusw1,c
 11612                           
 11613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11614                           ;stkvar	_i @ sp[(-56)+36]
 11615  010B2A  0EEC               	movlw	-20
 11616  010B2C  6AE3               	clrf	plusw1,c
 11617  010B2E  0EED               	movlw	-19
 11618  010B30  6AE3               	clrf	plusw1,c
 11619                           
 11620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11621  010B32  D1B7               	goto	l9812
 11622  010B34                     l9762:
 11623                           
 11624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11625                           ;stkvar	_u @ sp[(-56)+12]
 11626  010B34  0ED4               	movlw	-44
 11627  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11628  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11629  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11630  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11631                           
 11632                           ;stkvar	_h @ sp[(-60)+24]
 11633  010B4E  0EDC               	movlw	-36
 11634  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11635  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11636  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11637  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11638  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11639  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11640  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11641  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11642  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11643  010B84  EC55  F0A2         	call	_floorf	;wreg free
 11644                           
 11645                           ;stkvar	_l @ sp[(-56)+20]
 11646  010B88  0EDC               	movlw	-36
 11647  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11648  010B90  0EDD               	movlw	-35
 11649  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11650  010B98  0EDE               	movlw	-34
 11651  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11652  010BA0  0EDF               	movlw	-33
 11653  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11654                           
 11655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11656                           ;stkvar	_l @ sp[(-56)+20]
 11657  010BA8  0EDC               	movlw	-36
 11658  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11659  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11660  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11661  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11662  010BC2  EC49  F0B0         	call	___fltol	;wreg free
 11663  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11664  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11665                           
 11666                           ;stkvar	_d @ sp[(-56)+44]
 11667  010BD2  0EF4               	movlw	-12
 11668  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11669  010BDA  0EF5               	movlw	-11
 11670  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11671                           
 11672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11673  010BE2  B81F               	btfsc	_flags^0,4,c
 11674  010BE4  D026               	goto	l9776
 11675                           
 11676                           ;stkvar	_d @ sp[(-56)+44]
 11677  010BE6  0EF4               	movlw	-12
 11678  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11679  010BEE  0EF5               	movlw	-11
 11680  010BF0  50E3               	movf	plusw1,w,c
 11681  010BF2  1032               	iorwf	btemp^0,w,c
 11682  010BF4  A4D8               	btfss	status,2,c
 11683  010BF6  D01D               	goto	l9776
 11684                           
 11685                           ;stkvar	_mode @ sp[(-56)+54]
 11686  010BF8  0EFE               	movlw	-2
 11687  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11688  010C00  0E67               	movlw	103
 11689  010C02  1832               	xorwf	btemp^0,w,c
 11690  010C04  A4D8               	btfss	status,2,c
 11691  010C06  D015               	goto	l9776
 11692                           
 11693                           ;stkvar	_ne @ sp[(-56)+46]
 11694  010C08  0EF7               	movlw	-9
 11695  010C0A  AEE3               	btfss	plusw1,7,c
 11696  010C0C  D012               	goto	l9776
 11697                           
 11698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11699                           ;stkvar	_t @ sp[(-56)+52]
 11700  010C0E  0EFC               	movlw	-4
 11701  010C10  50E3               	movf	plusw1,w,c
 11702  010C12  0F01               	addlw	1
 11703  010C14  6E32               	movwf	btemp^0,c
 11704  010C16  0EFC               	movlw	-4
 11705  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11706  010C1E  6A32               	clrf	btemp^0,c
 11707  010C20  0EFD               	movlw	-3
 11708  010C22  50E3               	movf	plusw1,w,c
 11709  010C24  2032               	addwfc	btemp^0,w,c
 11710  010C26  6E32               	movwf	btemp^0,c
 11711  010C28  0EFD               	movlw	-3
 11712  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11713                           
 11714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11715  010C30  D0AF               	goto	l9804
 11716  010C32                     l9776:
 11717                           
 11718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11719                           ;stkvar	_pp @ sp[(-56)+50]
 11720  010C32  0EFA               	movlw	-6
 11721  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11722  010C3A  0EFB               	movlw	-5
 11723  010C3C  50E3               	movf	plusw1,w,c
 11724  010C3E  1032               	iorwf	btemp^0,w,c
 11725  010C40  A4D8               	btfss	status,2,c
 11726  010C42  D070               	goto	l9796
 11727                           
 11728                           ;stkvar	_ne @ sp[(-56)+46]
 11729  010C44  0EF7               	movlw	-9
 11730  010C46  AEE3               	btfss	plusw1,7,c
 11731  010C48  D06D               	goto	l9796
 11732                           
 11733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11734                           ;stkvar	_n @ sp[(-56)+32]
 11735  010C4A  0EE8               	movlw	-24
 11736  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11737  010C52  0EE9               	movlw	-23
 11738  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11739  010C5A  0E78               	movlw	low _dbuf
 11740  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11741  010C5E  6ED9               	movwf	fsr2l,c
 11742  010C60  0E01               	movlw	high _dbuf
 11743  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11744  010C64  6EDA               	movwf	fsr2h,c
 11745  010C66  0E2E               	movlw	46
 11746  010C68  6EDF               	movwf	indf2,c
 11747                           
 11748                           ;stkvar	_n @ sp[(-56)+32]
 11749  010C6A  0EE8               	movlw	-24
 11750  010C6C  50E3               	movf	plusw1,w,c
 11751  010C6E  0F01               	addlw	1
 11752  010C70  6E32               	movwf	btemp^0,c
 11753  010C72  0EE8               	movlw	-24
 11754  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11755  010C7A  6A32               	clrf	btemp^0,c
 11756  010C7C  0EE9               	movlw	-23
 11757  010C7E  50E3               	movf	plusw1,w,c
 11758  010C80  2032               	addwfc	btemp^0,w,c
 11759  010C82  6E32               	movwf	btemp^0,c
 11760  010C84  0EE9               	movlw	-23
 11761  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11762                           
 11763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11764                           ;stkvar	_w @ sp[(-56)+38]
 11765  010C8C  50E1               	movf	fsr1l,w,c
 11766  010C8E  0FEE               	addlw	-18
 11767  010C90  6ED9               	movwf	fsr2l,c
 11768  010C92  50E2               	movf	fsr1h,w,c
 11769  010C94  6EDA               	movwf	fsr2h,c
 11770  010C96  0EFF               	movlw	255
 11771  010C98  22DA               	addwfc	fsr2h,f,c
 11772  010C9A  06DE               	decf	postinc2,f,c
 11773  010C9C  0E00               	movlw	0
 11774  010C9E  5ADD               	subwfb	postdec2,f,c
 11775                           
 11776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11777  010CA0  0E01               	movlw	1
 11778  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11779  010CA4  0E00               	movlw	0
 11780  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11781                           
 11782                           ;stkvar	_pp @ sp[(-56)+50]
 11783  010CA8  0EFA               	movlw	-6
 11784  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11785  010CB0  0EFB               	movlw	-5
 11786  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11787  010CB8  D035               	goto	l9796
 11788  010CBA                     l9788:
 11789                           
 11790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11791                           ;stkvar	_n @ sp[(-56)+32]
 11792  010CBA  0EE8               	movlw	-24
 11793  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11794  010CC2  0EE9               	movlw	-23
 11795  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11796  010CCA  0E78               	movlw	low _dbuf
 11797  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11798  010CCE  6ED9               	movwf	fsr2l,c
 11799  010CD0  0E01               	movlw	high _dbuf
 11800  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11801  010CD4  6EDA               	movwf	fsr2h,c
 11802  010CD6  0E30               	movlw	48
 11803  010CD8  6EDF               	movwf	indf2,c
 11804                           
 11805                           ;stkvar	_n @ sp[(-56)+32]
 11806  010CDA  0EE8               	movlw	-24
 11807  010CDC  50E3               	movf	plusw1,w,c
 11808  010CDE  0F01               	addlw	1
 11809  010CE0  6E32               	movwf	btemp^0,c
 11810  010CE2  0EE8               	movlw	-24
 11811  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11812  010CEA  6A32               	clrf	btemp^0,c
 11813  010CEC  0EE9               	movlw	-23
 11814  010CEE  50E3               	movf	plusw1,w,c
 11815  010CF0  2032               	addwfc	btemp^0,w,c
 11816  010CF2  6E32               	movwf	btemp^0,c
 11817  010CF4  0EE9               	movlw	-23
 11818  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11819                           
 11820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11821                           ;stkvar	_w @ sp[(-56)+38]
 11822  010CFC  50E1               	movf	fsr1l,w,c
 11823  010CFE  0FEE               	addlw	-18
 11824  010D00  6ED9               	movwf	fsr2l,c
 11825  010D02  50E2               	movf	fsr1h,w,c
 11826  010D04  6EDA               	movwf	fsr2h,c
 11827  010D06  0EFF               	movlw	255
 11828  010D08  22DA               	addwfc	fsr2h,f,c
 11829  010D0A  06DE               	decf	postinc2,f,c
 11830  010D0C  0E00               	movlw	0
 11831  010D0E  5ADD               	subwfb	postdec2,f,c
 11832                           
 11833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11834                           ;stkvar	_t @ sp[(-56)+52]
 11835  010D10  50E1               	movf	fsr1l,w,c
 11836  010D12  0FFC               	addlw	-4
 11837  010D14  6ED9               	movwf	fsr2l,c
 11838  010D16  50E2               	movf	fsr1h,w,c
 11839  010D18  6EDA               	movwf	fsr2h,c
 11840  010D1A  0EFF               	movlw	255
 11841  010D1C  22DA               	addwfc	fsr2h,f,c
 11842  010D1E  06DE               	decf	postinc2,f,c
 11843  010D20  0E00               	movlw	0
 11844  010D22  5ADD               	subwfb	postdec2,f,c
 11845  010D24                     l9796:
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11848                           ;stkvar	_t @ sp[(-56)+52]
 11849  010D24  0EFC               	movlw	-4
 11850  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11851  010D2C  0EFD               	movlw	-3
 11852  010D2E  50E3               	movf	plusw1,w,c
 11853  010D30  1032               	iorwf	btemp^0,w,c
 11854  010D32  A4D8               	btfss	status,2,c
 11855  010D34  D7C2               	goto	l9788
 11856                           
 11857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11858                           ;stkvar	_n @ sp[(-56)+32]
 11859  010D36  0EE8               	movlw	-24
 11860  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11861  010D3E  0EE9               	movlw	-23
 11862  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11863  010D46  0E78               	movlw	low _dbuf
 11864  010D48  243C               	addwf	(btemp+10)^0,w,c
 11865  010D4A  6ED9               	movwf	fsr2l,c
 11866  010D4C  0E01               	movlw	high _dbuf
 11867  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11868  010D50  6EDA               	movwf	fsr2h,c
 11869                           
 11870                           ;stkvar	_d @ sp[(-56)+44]
 11871  010D52  0EF4               	movlw	-12
 11872  010D54  50E3               	movf	plusw1,w,c
 11873  010D56  0F30               	addlw	48
 11874  010D58  6EDF               	movwf	indf2,c
 11875                           
 11876                           ;stkvar	_n @ sp[(-56)+32]
 11877  010D5A  0EE8               	movlw	-24
 11878  010D5C  50E3               	movf	plusw1,w,c
 11879  010D5E  0F01               	addlw	1
 11880  010D60  6E32               	movwf	btemp^0,c
 11881  010D62  0EE8               	movlw	-24
 11882  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11883  010D6A  6A32               	clrf	btemp^0,c
 11884  010D6C  0EE9               	movlw	-23
 11885  010D6E  50E3               	movf	plusw1,w,c
 11886  010D70  2032               	addwfc	btemp^0,w,c
 11887  010D72  6E32               	movwf	btemp^0,c
 11888  010D74  0EE9               	movlw	-23
 11889  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11890                           
 11891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11892                           ;stkvar	_w @ sp[(-56)+38]
 11893  010D7C  50E1               	movf	fsr1l,w,c
 11894  010D7E  0FEE               	addlw	-18
 11895  010D80  6ED9               	movwf	fsr2l,c
 11896  010D82  50E2               	movf	fsr1h,w,c
 11897  010D84  6EDA               	movwf	fsr2h,c
 11898  010D86  0EFF               	movlw	255
 11899  010D88  22DA               	addwfc	fsr2h,f,c
 11900  010D8A  06DE               	decf	postinc2,f,c
 11901  010D8C  0E00               	movlw	0
 11902  010D8E  5ADD               	subwfb	postdec2,f,c
 11903  010D90                     l9804:
 11904                           
 11905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11906                           ;stkvar	_u @ sp[(-56)+12]
 11907  010D90  0ED4               	movlw	-44
 11908  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11909  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11910  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11911  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11912                           
 11913                           ;stkvar	_l @ sp[(-60)+20]
 11914  010DAA  0ED8               	movlw	-40
 11915  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11916  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11917  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11918  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11919  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11920  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11921  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11922  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11923  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11924                           
 11925                           ;stkvar	_h @ sp[(-60)+24]
 11926  010DE0  0EDC               	movlw	-36
 11927  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11928  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11929  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11930  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11931  010DFA  EC4F  F0BF         	call	___flsub	;wreg free
 11932                           
 11933                           ;stkvar	_h @ sp[(-56)+24]
 11934  010DFE  0EE0               	movlw	-32
 11935  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11936  010E06  0EE1               	movlw	-31
 11937  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11938  010E0E  0EE2               	movlw	-30
 11939  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11940  010E16  0EE3               	movlw	-29
 11941  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11942                           
 11943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11944  010E1E  0E00               	movlw	0
 11945  010E20  6EE6               	movwf	postinc1,c
 11946  010E22  0E00               	movlw	0
 11947  010E24  6EE6               	movwf	postinc1,c
 11948  010E26  0E20               	movlw	32
 11949  010E28  6EE6               	movwf	postinc1,c
 11950  010E2A  0E41               	movlw	65
 11951  010E2C  6EE6               	movwf	postinc1,c
 11952                           
 11953                           ;stkvar	_u @ sp[(-60)+12]
 11954  010E2E  0ED0               	movlw	-48
 11955  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11956  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11957  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11958  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11959  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11960                           
 11961                           ;stkvar	_u @ sp[(-56)+12]
 11962  010E4C  0ED4               	movlw	-44
 11963  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11964  010E54  0ED5               	movlw	-43
 11965  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11966  010E5C  0ED6               	movlw	-42
 11967  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11968  010E64  0ED7               	movlw	-41
 11969  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11970                           
 11971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11972                           ;stkvar	_ne @ sp[(-56)+46]
 11973  010E6C  50E1               	movf	fsr1l,w,c
 11974  010E6E  0FF6               	addlw	-10
 11975  010E70  6ED9               	movwf	fsr2l,c
 11976  010E72  50E2               	movf	fsr1h,w,c
 11977  010E74  6EDA               	movwf	fsr2h,c
 11978  010E76  0EFF               	movlw	255
 11979  010E78  22DA               	addwfc	fsr2h,f,c
 11980  010E7A  06DE               	decf	postinc2,f,c
 11981  010E7C  0E00               	movlw	0
 11982  010E7E  5ADD               	subwfb	postdec2,f,c
 11983                           
 11984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11985                           ;stkvar	_i @ sp[(-56)+36]
 11986  010E80  0EEC               	movlw	-20
 11987  010E82  50E3               	movf	plusw1,w,c
 11988  010E84  0F01               	addlw	1
 11989  010E86  6E32               	movwf	btemp^0,c
 11990  010E88  0EEC               	movlw	-20
 11991  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11992  010E90  6A32               	clrf	btemp^0,c
 11993  010E92  0EED               	movlw	-19
 11994  010E94  50E3               	movf	plusw1,w,c
 11995  010E96  2032               	addwfc	btemp^0,w,c
 11996  010E98  6E32               	movwf	btemp^0,c
 11997  010E9A  0EED               	movlw	-19
 11998  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11999  010EA2                     l9812:
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12002                           ;stkvar	_m @ sp[(-56)+48]
 12003                           ;stkvar	_i @ sp[(-56)+36]
 12004  010EA2  50E1               	movf	fsr1l,w,c
 12005  010EA4  0FEC               	addlw	-20
 12006  010EA6  6ED9               	movwf	fsr2l,c
 12007  010EA8  50E2               	movf	fsr1h,w,c
 12008  010EAA  6EDA               	movwf	fsr2h,c
 12009  010EAC  0EFF               	movlw	255
 12010  010EAE  22DA               	addwfc	fsr2h,f,c
 12011  010EB0  0EF8               	movlw	-8
 12012  010EB2  50E3               	movf	plusw1,w,c
 12013  010EB4  5CDE               	subwf	postinc2,w,c
 12014  010EB6  50DE               	movf	postinc2,w,c
 12015  010EB8  0A80               	xorlw	128
 12016  010EBA  6E32               	movwf	btemp^0,c
 12017  010EBC  0EF9               	movlw	-7
 12018  010EBE  50E3               	movf	plusw1,w,c
 12019  010EC0  0A80               	xorlw	128
 12020  010EC2  5832               	subwfb	btemp^0,w,c
 12021  010EC4  B0D8               	btfsc	status,0,c
 12022  010EC6  D00E               	goto	u9620
 12023                           
 12024                           ;stkvar	_n @ sp[(-56)+32]
 12025  010EC8  0EE9               	movlw	-23
 12026  010ECA  BEE3               	btfsc	plusw1,7,c
 12027  010ECC  D633               	goto	l9762
 12028  010ECE  0EE9               	movlw	-23
 12029  010ED0  50E3               	movf	plusw1,w,c
 12030  010ED2  E108               	bnz	u9620
 12031  010ED4  0EE8               	movlw	-24
 12032  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 12033  010EDC  0E4B               	movlw	75
 12034  010EDE  5E32               	subwf	btemp^0,f,c
 12035  010EE0  A0D8               	btfss	status,0,c
 12036  010EE2  D628               	goto	l9762
 12037  010EE4                     u9620:
 12038                           
 12039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12040                           ;stkvar	_pp @ sp[(-56)+50]
 12041  010EE4  0EFA               	movlw	-6
 12042  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 12043  010EEC  0EFB               	movlw	-5
 12044  010EEE  50E3               	movf	plusw1,w,c
 12045  010EF0  1032               	iorwf	btemp^0,w,c
 12046  010EF2  B4D8               	btfsc	status,2,c
 12047  010EF4  A81F               	btfss	_flags^0,4,c
 12048  010EF6  D021               	goto	l9824
 12049                           
 12050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12051                           ;stkvar	_n @ sp[(-56)+32]
 12052  010EF8  0EE8               	movlw	-24
 12053  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12054  010F00  0EE9               	movlw	-23
 12055  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 12056  010F08  0E78               	movlw	low _dbuf
 12057  010F0A  243C               	addwf	(btemp+10)^0,w,c
 12058  010F0C  6ED9               	movwf	fsr2l,c
 12059  010F0E  0E01               	movlw	high _dbuf
 12060  010F10  203D               	addwfc	(btemp+11)^0,w,c
 12061  010F12  6EDA               	movwf	fsr2h,c
 12062  010F14  0E2E               	movlw	46
 12063  010F16  6EDF               	movwf	indf2,c
 12064                           
 12065                           ;stkvar	_n @ sp[(-56)+32]
 12066  010F18  0EE8               	movlw	-24
 12067  010F1A  50E3               	movf	plusw1,w,c
 12068  010F1C  0F01               	addlw	1
 12069  010F1E  6E32               	movwf	btemp^0,c
 12070  010F20  0EE8               	movlw	-24
 12071  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 12072  010F28  6A32               	clrf	btemp^0,c
 12073  010F2A  0EE9               	movlw	-23
 12074  010F2C  50E3               	movf	plusw1,w,c
 12075  010F2E  2032               	addwfc	btemp^0,w,c
 12076  010F30  6E32               	movwf	btemp^0,c
 12077  010F32  0EE9               	movlw	-23
 12078  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12079  010F3A                     l9824:
 12080                           
 12081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12082                           ;stkvar	_n @ sp[(-56)+32]
 12083  010F3A  0EE8               	movlw	-24
 12084  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12085  010F42  0EE9               	movlw	-23
 12086  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12087  010F4A  0E78               	movlw	low _dbuf
 12088  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12089  010F4E  6ED9               	movwf	fsr2l,c
 12090  010F50  0E01               	movlw	high _dbuf
 12091  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12092  010F54  6EDA               	movwf	fsr2h,c
 12093  010F56  0E00               	movlw	0
 12094  010F58  6EDF               	movwf	indf2,c
 12095                           
 12096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12097                           ;stkvar	_nmode @ sp[(-56)+55]
 12098  010F5A  0EFF               	movlw	-1
 12099  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12100  010F62  0E65               	movlw	101
 12101  010F64  1832               	xorwf	btemp^0,w,c
 12102  010F66  A4D8               	btfss	status,2,c
 12103  010F68  EF16  F081         	goto	l9628
 12104                           
 12105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12106  010F6C  0E4F               	movlw	79
 12107  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12108  010F70  0E00               	movlw	0
 12109  010F72  6E3D               	movwf	(btemp+11)^0,c
 12110                           
 12111                           ;stkvar	_i @ sp[(-56)+36]
 12112  010F74  0EEC               	movlw	-20
 12113  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12114  010F7C  0EED               	movlw	-19
 12115  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12116                           
 12117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12118                           ;stkvar	_i @ sp[(-56)+36]
 12119  010F84  0EEC               	movlw	-20
 12120  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12121  010F8C  0EED               	movlw	-19
 12122  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12123  010F94  0E78               	movlw	low _dbuf
 12124  010F96  243C               	addwf	(btemp+10)^0,w,c
 12125  010F98  6ED9               	movwf	fsr2l,c
 12126  010F9A  0E01               	movlw	high _dbuf
 12127  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12128  010F9E  6EDA               	movwf	fsr2h,c
 12129  010FA0  0E00               	movlw	0
 12130  010FA2  6EDF               	movwf	indf2,c
 12131                           
 12132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12133                           ;stkvar	_sign @ sp[(-56)+42]
 12134  010FA4  0EF2               	movlw	-14
 12135  010FA6  6AE3               	clrf	plusw1,c
 12136  010FA8  0EF3               	movlw	-13
 12137  010FAA  6AE3               	clrf	plusw1,c
 12138                           
 12139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12140                           ;stkvar	_e @ sp[(-56)+34]
 12141  010FAC  0EEB               	movlw	-21
 12142  010FAE  AEE3               	btfss	plusw1,7,c
 12143  010FB0  D012               	goto	l9838
 12144                           
 12145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12146  010FB2  0E01               	movlw	1
 12147  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12148  010FB6  0E00               	movlw	0
 12149  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12150                           
 12151                           ;stkvar	_sign @ sp[(-56)+42]
 12152  010FBA  0EF2               	movlw	-14
 12153  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12154  010FC2  0EF3               	movlw	-13
 12155  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12156                           
 12157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12158                           ;stkvar	_e @ sp[(-56)+34]
 12159                           ;stkvar	_e @ sp[(-56)+34]
 12160  010FCA  0EEA               	movlw	-22
 12161  010FCC  6CE3               	negf	plusw1,c
 12162  010FCE  0EEB               	movlw	-21
 12163  010FD0  1EE3               	comf	plusw1,f,c
 12164  010FD2  B0D8               	btfsc	status,0,c
 12165  010FD4  2AE3               	incf	plusw1,f,c
 12166  010FD6                     l9838:
 12167                           
 12168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12169  010FD6  0E02               	movlw	2
 12170  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12171  010FDA  0E00               	movlw	0
 12172  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12173                           
 12174                           ;stkvar	_p @ sp[(-56)+40]
 12175  010FDE  0EF0               	movlw	-16
 12176  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12177  010FE6  0EF1               	movlw	-15
 12178  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12179                           
 12180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12181  010FEE  D051               	goto	l9850
 12182  010FF0                     l9840:
 12183                           
 12184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12185                           ;stkvar	_i @ sp[(-56)+36]
 12186  010FF0  50E1               	movf	fsr1l,w,c
 12187  010FF2  0FEC               	addlw	-20
 12188  010FF4  6ED9               	movwf	fsr2l,c
 12189  010FF6  50E2               	movf	fsr1h,w,c
 12190  010FF8  6EDA               	movwf	fsr2h,c
 12191  010FFA  0EFF               	movlw	255
 12192  010FFC  22DA               	addwfc	fsr2h,f,c
 12193  010FFE  06DE               	decf	postinc2,f,c
 12194  011000  0E00               	movlw	0
 12195  011002  5ADD               	subwfb	postdec2,f,c
 12196                           
 12197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12198                           ;stkvar	_i @ sp[(-56)+36]
 12199  011004  0EEC               	movlw	-20
 12200  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12201  01100C  0EED               	movlw	-19
 12202  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12203  011014  0E78               	movlw	low _dbuf
 12204  011016  243C               	addwf	(btemp+10)^0,w,c
 12205  011018  6ED9               	movwf	fsr2l,c
 12206  01101A  0E01               	movlw	high _dbuf
 12207  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12208  01101E  6EDA               	movwf	fsr2h,c
 12209  011020  0E0A               	movlw	10
 12210  011022  6EE6               	movwf	postinc1,c
 12211  011024  0E00               	movlw	0
 12212  011026  6EE6               	movwf	postinc1,c
 12213                           
 12214                           ;stkvar	_e @ sp[(-58)+34]
 12215  011028  0EE8               	movlw	-24
 12216  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12217  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12218  011036  EC27  F0B4         	call	___awmod	;wreg free
 12219  01103A  5032               	movf	btemp^0,w,c
 12220  01103C  0F30               	addlw	48
 12221  01103E  6EDF               	movwf	indf2,c
 12222                           
 12223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12224  011040  0E0A               	movlw	10
 12225  011042  6EE6               	movwf	postinc1,c
 12226  011044  0E00               	movlw	0
 12227  011046  6EE6               	movwf	postinc1,c
 12228                           
 12229                           ;stkvar	_e @ sp[(-58)+34]
 12230  011048  0EE8               	movlw	-24
 12231  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12232  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12233  011056  ECB3  F0B1         	call	___awdiv	;wreg free
 12234                           
 12235                           ;stkvar	_e @ sp[(-56)+34]
 12236  01105A  0EEA               	movlw	-22
 12237  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12238  011062  0EEB               	movlw	-21
 12239  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12240                           
 12241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12242                           ;stkvar	_p @ sp[(-56)+40]
 12243  01106A  50E1               	movf	fsr1l,w,c
 12244  01106C  0FF0               	addlw	-16
 12245  01106E  6ED9               	movwf	fsr2l,c
 12246  011070  50E2               	movf	fsr1h,w,c
 12247  011072  6EDA               	movwf	fsr2h,c
 12248  011074  0EFF               	movlw	255
 12249  011076  22DA               	addwfc	fsr2h,f,c
 12250  011078  06DE               	decf	postinc2,f,c
 12251  01107A  0E00               	movlw	0
 12252  01107C  5ADD               	subwfb	postdec2,f,c
 12253                           
 12254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12255                           ;stkvar	_w @ sp[(-56)+38]
 12256  01107E  50E1               	movf	fsr1l,w,c
 12257  011080  0FEE               	addlw	-18
 12258  011082  6ED9               	movwf	fsr2l,c
 12259  011084  50E2               	movf	fsr1h,w,c
 12260  011086  6EDA               	movwf	fsr2h,c
 12261  011088  0EFF               	movlw	255
 12262  01108A  22DA               	addwfc	fsr2h,f,c
 12263  01108C  06DE               	decf	postinc2,f,c
 12264  01108E  0E00               	movlw	0
 12265  011090  5ADD               	subwfb	postdec2,f,c
 12266  011092                     l9850:
 12267                           
 12268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12269                           ;stkvar	_e @ sp[(-56)+34]
 12270  011092  0EEA               	movlw	-22
 12271  011094  006F FF8C  F032    	movff	plusw1,btemp
 12272  01109A  0EEB               	movlw	-21
 12273  01109C  50E3               	movf	plusw1,w,c
 12274  01109E  1032               	iorwf	btemp^0,w,c
 12275  0110A0  A4D8               	btfss	status,2,c
 12276  0110A2  D7A6               	goto	l9840
 12277                           
 12278                           ;stkvar	_p @ sp[(-56)+40]
 12279  0110A4  0EF1               	movlw	-15
 12280  0110A6  BEE3               	btfsc	plusw1,7,c
 12281  0110A8  D007               	goto	u9680
 12282  0110AA  0EF1               	movlw	-15
 12283  0110AC  50E3               	movf	plusw1,w,c
 12284  0110AE  E1A0               	bnz	l9840
 12285  0110B0  0EF0               	movlw	-16
 12286  0110B2  04E3               	decf	plusw1,w,c
 12287  0110B4  B0D8               	btfsc	status,0,c
 12288  0110B6  D79C               	goto	l9840
 12289  0110B8                     u9680:
 12290                           
 12291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12292                           ;stkvar	_i @ sp[(-56)+36]
 12293  0110B8  50E1               	movf	fsr1l,w,c
 12294  0110BA  0FEC               	addlw	-20
 12295  0110BC  6ED9               	movwf	fsr2l,c
 12296  0110BE  50E2               	movf	fsr1h,w,c
 12297  0110C0  6EDA               	movwf	fsr2h,c
 12298  0110C2  0EFF               	movlw	255
 12299  0110C4  22DA               	addwfc	fsr2h,f,c
 12300  0110C6  06DE               	decf	postinc2,f,c
 12301  0110C8  0E00               	movlw	0
 12302  0110CA  5ADD               	subwfb	postdec2,f,c
 12303                           
 12304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12305                           ;stkvar	_sign @ sp[(-56)+42]
 12306  0110CC  0EF2               	movlw	-14
 12307  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12308  0110D4  0EF3               	movlw	-13
 12309  0110D6  50E3               	movf	plusw1,w,c
 12310  0110D8  1032               	iorwf	btemp^0,w,c
 12311  0110DA  A4D8               	btfss	status,2,c
 12312  0110DC  D002               	goto	l9860
 12313  0110DE  0E2B               	movlw	43
 12314  0110E0  D001               	goto	L11
 12315  0110E2                     l9860:
 12316  0110E2  0E2D               	movlw	45
 12317  0110E4                     L11:
 12318  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12319  0110E6  0E00               	movlw	0
 12320  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12321                           
 12322                           ;stkvar	_efgtoa$4498 @ sp[(-56)+4]
 12323  0110EA  0ECC               	movlw	-52
 12324  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12325  0110F2  0ECD               	movlw	-51
 12326  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12327                           
 12328                           ;stkvar	_efgtoa$4498 @ sp[(-56)+4]
 12329                           ;stkvar	_i @ sp[(-56)+36]
 12330  0110FA  0EEC               	movlw	-20
 12331  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12332  011102  0EED               	movlw	-19
 12333  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12334  01110A  0E78               	movlw	low _dbuf
 12335  01110C  243C               	addwf	(btemp+10)^0,w,c
 12336  01110E  6ED9               	movwf	fsr2l,c
 12337  011110  0E01               	movlw	high _dbuf
 12338  011112  203D               	addwfc	(btemp+11)^0,w,c
 12339  011114  6EDA               	movwf	fsr2h,c
 12340  011116  0ECC               	movlw	-52
 12341  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12342                           
 12343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12344                           ;stkvar	_w @ sp[(-56)+38]
 12345  01111E  50E1               	movf	fsr1l,w,c
 12346  011120  0FEE               	addlw	-18
 12347  011122  6ED9               	movwf	fsr2l,c
 12348  011124  50E2               	movf	fsr1h,w,c
 12349  011126  6EDA               	movwf	fsr2h,c
 12350  011128  0EFF               	movlw	255
 12351  01112A  22DA               	addwfc	fsr2h,f,c
 12352  01112C  06DE               	decf	postinc2,f,c
 12353  01112E  0E00               	movlw	0
 12354  011130  5ADD               	subwfb	postdec2,f,c
 12355                           
 12356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12357                           ;stkvar	_i @ sp[(-56)+36]
 12358  011132  50E1               	movf	fsr1l,w,c
 12359  011134  0FEC               	addlw	-20
 12360  011136  6ED9               	movwf	fsr2l,c
 12361  011138  50E2               	movf	fsr1h,w,c
 12362  01113A  6EDA               	movwf	fsr2h,c
 12363  01113C  0EFF               	movlw	255
 12364  01113E  22DA               	addwfc	fsr2h,f,c
 12365  011140  06DE               	decf	postinc2,f,c
 12366  011142  0E00               	movlw	0
 12367  011144  5ADD               	subwfb	postdec2,f,c
 12368  011146  0EBF               	movlw	191
 12369  011148  6E3C               	movwf	(btemp+10)^0,c
 12370  01114A  0EFF               	movlw	255
 12371  01114C  6E3D               	movwf	(btemp+11)^0,c
 12372                           
 12373                           ;stkvar	_c @ sp[(-56)+-7]
 12374  01114E  0EC1               	movlw	-63
 12375  011150  50E3               	movf	plusw1,w,c
 12376  011152  6E3A               	movwf	(btemp+8)^0,c
 12377  011154  6A3B               	clrf	(btemp+9)^0,c
 12378  011156  503C               	movf	(btemp+10)^0,w,c
 12379  011158  263A               	addwf	(btemp+8)^0,f,c
 12380  01115A  503D               	movf	(btemp+11)^0,w,c
 12381  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12382  01115E  503B               	movf	(btemp+9)^0,w,c
 12383  011160  E106               	bnz	u9700
 12384  011162  0E1A               	movlw	26
 12385  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12386  011166  B0D8               	btfsc	status,0,c
 12387  011168  D002               	goto	u9700
 12388  01116A  0E01               	movlw	1
 12389  01116C  D001               	goto	u9710
 12390  01116E                     u9700:
 12391  01116E  0E00               	movlw	0
 12392  011170                     u9710:
 12393  011170  6E3C               	movwf	(btemp+10)^0,c
 12394  011172  6A3D               	clrf	(btemp+11)^0,c
 12395                           
 12396                           ;stkvar	_efgtoa$4500 @ sp[(-56)+0]
 12397  011174  0EC8               	movlw	-56
 12398  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12399  01117C  0EC9               	movlw	-55
 12400  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12401                           
 12402                           ;stkvar	_efgtoa$4500 @ sp[(-56)+0]
 12403  011184  0EC8               	movlw	-56
 12404  011186  006F FF8C  F032    	movff	plusw1,btemp
 12405  01118C  0EC9               	movlw	-55
 12406  01118E  50E3               	movf	plusw1,w,c
 12407  011190  1032               	iorwf	btemp^0,w,c
 12408  011192  A4D8               	btfss	status,2,c
 12409  011194  D002               	goto	l9876
 12410  011196  0E65               	movlw	101
 12411  011198  D001               	goto	L12
 12412  01119A                     l9876:
 12413  01119A  0E45               	movlw	69
 12414  01119C                     L12:
 12415  01119C  6E3C               	movwf	(btemp+10)^0,c
 12416  01119E  0E00               	movlw	0
 12417  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12418                           
 12419                           ;stkvar	_efgtoa$4499 @ sp[(-56)+2]
 12420  0111A2  0ECA               	movlw	-54
 12421  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12422  0111AA  0ECB               	movlw	-53
 12423  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12424                           
 12425                           ;stkvar	_efgtoa$4499 @ sp[(-56)+2]
 12426                           ;stkvar	_i @ sp[(-56)+36]
 12427  0111B2  0EEC               	movlw	-20
 12428  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12429  0111BA  0EED               	movlw	-19
 12430  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12431  0111C2  0E78               	movlw	low _dbuf
 12432  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12433  0111C6  6ED9               	movwf	fsr2l,c
 12434  0111C8  0E01               	movlw	high _dbuf
 12435  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12436  0111CC  6EDA               	movwf	fsr2h,c
 12437  0111CE  0ECA               	movlw	-54
 12438  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12439                           
 12440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12441                           ;stkvar	_w @ sp[(-56)+38]
 12442  0111D6  50E1               	movf	fsr1l,w,c
 12443  0111D8  0FEE               	addlw	-18
 12444  0111DA  6ED9               	movwf	fsr2l,c
 12445  0111DC  50E2               	movf	fsr1h,w,c
 12446  0111DE  6EDA               	movwf	fsr2h,c
 12447  0111E0  0EFF               	movlw	255
 12448  0111E2  22DA               	addwfc	fsr2h,f,c
 12449  0111E4  06DE               	decf	postinc2,f,c
 12450  0111E6  0E00               	movlw	0
 12451  0111E8  5ADD               	subwfb	postdec2,f,c
 12452                           
 12453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12454                           ;stkvar	_i @ sp[(-56)+36]
 12455  0111EA  0EEC               	movlw	-20
 12456  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12457  0111F2  0EED               	movlw	-19
 12458  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12459  0111FA  0E78               	movlw	low _dbuf
 12460  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12461  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12462  011200  0E01               	movlw	high _dbuf
 12463  011202  203D               	addwfc	(btemp+11)^0,w,c
 12464  011204  6E3B               	movwf	(btemp+9)^0,c
 12465  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12466  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12467                           
 12468                           ;stkvar	_n @ sp[(-58)+32]
 12469  011212  0E78               	movlw	low _dbuf
 12470  011214  6E3C               	movwf	(btemp+10)^0,c
 12471  011216  0E01               	movlw	high _dbuf
 12472  011218  6E3D               	movwf	(btemp+11)^0,c
 12473  01121A  0EE6               	movlw	-26
 12474  01121C  50E3               	movf	plusw1,w,c
 12475  01121E  263C               	addwf	(btemp+10)^0,f,c
 12476  011220  0EE7               	movlw	-25
 12477  011222  50E3               	movf	plusw1,w,c
 12478  011224  223D               	addwfc	(btemp+11)^0,f,c
 12479  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12480  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12481  011232  EC38  F0B7         	call	_strcpy	;wreg free
 12482  011236  EF16  F081         	goto	l9628
 12483  01123A                     l1899:
 12484                           
 12485                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12486  01123A  0EC1               	movlw	193
 12487  01123C  26E1               	addwf	fsr1l,f,c
 12488  01123E  0EFF               	movlw	255
 12489  011240  22E2               	addwfc	fsr1h,f,c
 12490  011242  0012               	return		;funcret
 12491  011244                     __end_of_efgtoa:
 12492                           	opt callstack 0
 12493                           
 12494 ;; *************** function _tolower *****************
 12495 ;; Defined at:
 12496 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  c               2  [STACK] int 
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  2  [STACK] int 
 12503 ;; Registers used:
 12504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/5
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12514 ;;Total ram usage:        0 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:    7
 12517 ;; This function calls:
 12518 ;;		_isupper
 12519 ;; This function is called by:
 12520 ;;		_efgtoa
 12521 ;;		_vfpfcnvrt
 12522 ;; This function uses a reentrant model
 12523 ;;
 12524                           
 12525                           	psect	text47
 12526  017752                     __ptext47:
 12527                           	opt callstack 0
 12528  017752                     _tolower:
 12529                           	opt callstack 0
 12530                           
 12531                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12532  017752  52E6               	movf	postinc1,f,c
 12533  017754  52E6               	movf	postinc1,f,c
 12534                           
 12535                           ;stkvar	_c @ sp[(-2)+-2]
 12536                           
 12537                           ;incstack = 0
 12538  017756  0EFC               	movlw	-4
 12539  017758  50E3               	movf	plusw1,w,c
 12540  01775A  0FBF               	addlw	191
 12541  01775C  6E3C               	movwf	(btemp+10)^0,c
 12542  01775E  0EFD               	movlw	-3
 12543  017760  006F FF8C  F03D    	movff	plusw1,btemp+11
 12544  017766  0EFF               	movlw	255
 12545  017768  223D               	addwfc	(btemp+11)^0,f,c
 12546  01776A  503D               	movf	(btemp+11)^0,w,c
 12547  01776C  E106               	bnz	u5160
 12548  01776E  0E1A               	movlw	26
 12549  017770  5C3C               	subwf	(btemp+10)^0,w,c
 12550  017772  B0D8               	btfsc	status,0,c
 12551  017774  D002               	goto	u5160
 12552  017776  0E01               	movlw	1
 12553  017778  D001               	goto	u5170
 12554  01777A                     u5160:
 12555  01777A  0E00               	movlw	0
 12556  01777C                     u5170:
 12557  01777C  6E3C               	movwf	(btemp+10)^0,c
 12558  01777E  6A3D               	clrf	(btemp+11)^0,c
 12559                           
 12560                           ;stkvar	_tolower$5166 @ sp[(-2)+0]
 12561  017780  0EFE               	movlw	-2
 12562  017782  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12563  017788  0EFF               	movlw	-1
 12564  01778A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12565                           
 12566                           ;stkvar	_tolower$5166 @ sp[(-2)+0]
 12567  017790  0EFE               	movlw	-2
 12568  017792  006F FF8C  F032    	movff	plusw1,btemp
 12569  017798  0EFF               	movlw	-1
 12570  01779A  50E3               	movf	plusw1,w,c
 12571  01779C  1032               	iorwf	btemp^0,w,c
 12572  01779E  B4D8               	btfsc	status,2,c
 12573  0177A0  D00D               	goto	l6564
 12574                           
 12575                           ;stkvar	_c @ sp[(-2)+-2]
 12576  0177A2  0EFC               	movlw	-4
 12577  0177A4  006F FF8C  F032    	movff	plusw1,btemp
 12578  0177AA  0EFD               	movlw	-3
 12579  0177AC  006F FF8C  F033    	movff	plusw1,btemp+1
 12580  0177B2  0E20               	movlw	32
 12581  0177B4  1232               	iorwf	btemp^0,f,c
 12582  0177B6  0E00               	movlw	0
 12583  0177B8  1233               	iorwf	(btemp+1)^0,f,c
 12584  0177BA  D008               	goto	l2922
 12585  0177BC                     l6564:
 12586                           
 12587                           ;stkvar	_c @ sp[(-2)+-2]
 12588  0177BC  0EFC               	movlw	-4
 12589  0177BE  006F FF8C  F032    	movff	plusw1,btemp
 12590  0177C4  0EFD               	movlw	-3
 12591  0177C6  006F FF8C  F033    	movff	plusw1,btemp+1
 12592  0177CC                     l2922:
 12593                           
 12594                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12595  0177CC  52E5               	movf	postdec1,f,c
 12596  0177CE  52E5               	movf	postdec1,f,c
 12597  0177D0  52E5               	movf	postdec1,f,c
 12598  0177D2  52E5               	movf	postdec1,f,c
 12599  0177D4  0012               	return		;funcret
 12600  0177D6                     __end_of_tolower:
 12601                           	opt callstack 0
 12602                           
 12603 ;; *************** function _isupper *****************
 12604 ;; Defined at:
 12605 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  c               2  [STACK] int 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  2  [STACK] int 
 12612 ;; Registers used:
 12613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12623 ;;Total ram usage:        0 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    6
 12626 ;; This function calls:
 12627 ;;		Nothing
 12628 ;; This function is called by:
 12629 ;;		_efgtoa
 12630 ;;		_xtoa
 12631 ;;		_vfpfcnvrt
 12632 ;;		_tolower
 12633 ;; This function uses a reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text48
 12637  018268                     __ptext48:
 12638                           	opt callstack 0
 12639  018268                     _isupper:
 12640                           	opt callstack 17
 12641                           
 12642                           ;stkvar	_c @ sp[(0)+-2]
 12643                           
 12644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12645                           ;incstack = 0
 12646  018268  0EFE               	movlw	-2
 12647  01826A  50E3               	movf	plusw1,w,c
 12648  01826C  0FBF               	addlw	191
 12649  01826E  6E3C               	movwf	(btemp+10)^0,c
 12650  018270  0EFF               	movlw	-1
 12651  018272  006F FF8C  F03D    	movff	plusw1,btemp+11
 12652  018278  0EFF               	movlw	255
 12653  01827A  223D               	addwfc	(btemp+11)^0,f,c
 12654  01827C  503D               	movf	(btemp+11)^0,w,c
 12655  01827E  E106               	bnz	u4560
 12656  018280  0E1A               	movlw	26
 12657  018282  5C3C               	subwf	(btemp+10)^0,w,c
 12658  018284  B0D8               	btfsc	status,0,c
 12659  018286  D002               	goto	u4560
 12660  018288  0E01               	movlw	1
 12661  01828A  D001               	goto	u4570
 12662  01828C                     u4560:
 12663  01828C  0E00               	movlw	0
 12664  01828E                     u4570:
 12665  01828E  6E32               	movwf	btemp^0,c
 12666  018290  6A33               	clrf	(btemp+1)^0,c
 12667                           
 12668                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12669  018292  52E5               	movf	postdec1,f,c
 12670  018294  52E5               	movf	postdec1,f,c
 12671  018296  0012               	return		;funcret
 12672  018298                     __end_of_isupper:
 12673                           	opt callstack 0
 12674                           
 12675 ;; *************** function _strcpy *****************
 12676 ;; Defined at:
 12677 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;  dest            2  [STACK] PTR unsigned char 
 12680 ;;		 -> dbuf(80), 
 12681 ;;  src             2  [STACK] PTR const unsigned char 
 12682 ;;		 -> STR_42(4), STR_41(4), STR_38(4), STR_37(4), 
 12683 ;;		 -> dbuf(80), 
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;  d               2  [STACK] PTR unsigned char 
 12686 ;;		 -> dbuf(80), 
 12687 ;;  s               2  [STACK] PTR const unsigned char 
 12688 ;;		 -> STR_42(4), STR_41(4), STR_38(4), STR_37(4), 
 12689 ;;		 -> dbuf(80), 
 12690 ;; Return value:  Size  Location     Type
 12691 ;;                  2  [STACK] PTR unsigned char 
 12692 ;; Registers used:
 12693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12694 ;; Tracked objects:
 12695 ;;		On entry : 0/5
 12696 ;;		On exit  : 0/0
 12697 ;;		Unchanged: 0/0
 12698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12703 ;;Total ram usage:        0 bytes
 12704 ;; Hardware stack levels used:    1
 12705 ;; Hardware stack levels required when called:    6
 12706 ;; This function calls:
 12707 ;;		Nothing
 12708 ;; This function is called by:
 12709 ;;		_efgtoa
 12710 ;; This function uses a reentrant model
 12711 ;;
 12712                           
 12713                           	psect	text49
 12714  016E70                     __ptext49:
 12715                           	opt callstack 0
 12716  016E70                     _strcpy:
 12717                           	opt callstack 0
 12718                           
 12719                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12720  016E70  52E6               	movf	postinc1,f,c
 12721  016E72  52E6               	movf	postinc1,f,c
 12722  016E74  52E6               	movf	postinc1,f,c
 12723  016E76  52E6               	movf	postinc1,f,c
 12724                           
 12725                           ;stkvar	_src @ sp[(-4)+-4]
 12726                           
 12727                           ;incstack = 0
 12728  016E78  0EF8               	movlw	-8
 12729  016E7A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12730  016E80  0EF9               	movlw	-7
 12731  016E82  006F FF8C  F03D    	movff	plusw1,btemp+11
 12732                           
 12733                           ;stkvar	_s @ sp[(-4)+2]
 12734  016E88  0EFF               	movlw	-1
 12735  016E8A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12736  016E90  0EFE               	movlw	-2
 12737  016E92  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12738                           
 12739                           ;stkvar	_dest @ sp[(-4)+-2]
 12740  016E98  0EFA               	movlw	-6
 12741  016E9A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12742  016EA0  0EFB               	movlw	-5
 12743  016EA2  006F FF8C  F03D    	movff	plusw1,btemp+11
 12744                           
 12745                           ;stkvar	_d @ sp[(-4)+0]
 12746  016EA8  0EFD               	movlw	-3
 12747  016EAA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12748  016EB0  0EFC               	movlw	-4
 12749  016EB2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12750  016EB8                     l9502:
 12751                           
 12752                           ;stkvar	_s @ sp[(-4)+2]
 12753  016EB8  50E1               	movf	fsr1l,w,c
 12754  016EBA  0FFE               	addlw	-2
 12755  016EBC  6ED9               	movwf	fsr2l,c
 12756  016EBE  50E2               	movf	fsr1h,w,c
 12757  016EC0  6EDA               	movwf	fsr2h,c
 12758  016EC2  0EFF               	movlw	255
 12759  016EC4  22DA               	addwfc	fsr2h,f,c
 12760  016EC6  006F FF7C  F03C    	movff	indf2,btemp+10
 12761  016ECC  0E01               	movlw	1
 12762  016ECE  26DE               	addwf	postinc2,f,c
 12763  016ED0  006F FF7C  F03D    	movff	indf2,btemp+11
 12764  016ED6  0E00               	movlw	0
 12765  016ED8  22DD               	addwfc	postdec2,f,c
 12766  016EDA  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12767  016EE0  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12768  016EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 12769  016EE8  6EF8               	movwf	tblptru,c
 12770                           
 12771                           ;stkvar	_d @ sp[(-4)+0]
 12772  016EEA  50E1               	movf	fsr1l,w,c
 12773  016EEC  0FFC               	addlw	-4
 12774  016EEE  6ED9               	movwf	fsr2l,c
 12775  016EF0  50E2               	movf	fsr1h,w,c
 12776  016EF2  6EDA               	movwf	fsr2h,c
 12777  016EF4  0EFF               	movlw	255
 12778  016EF6  22DA               	addwfc	fsr2h,f,c
 12779  016EF8  006F FF7C  F03C    	movff	indf2,btemp+10
 12780  016EFE  0E01               	movlw	1
 12781  016F00  26DE               	addwf	postinc2,f,c
 12782  016F02  006F FF7C  F03D    	movff	indf2,btemp+11
 12783  016F08  0E00               	movlw	0
 12784  016F0A  22DD               	addwfc	postdec2,f,c
 12785  016F0C  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12786  016F12  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12787  016F18  0E1F               	movlw	(high __ramtop+-1)
 12788  016F1A  64F7               	cpfsgt	tblptrh,c
 12789  016F1C  D003               	bra	u9017
 12790  016F1E  0008               	tblrd		*
 12791  016F20  50F5               	movf	tablat,w,c
 12792  016F22  D007               	bra	u9010
 12793  016F24                     u9017:
 12794  016F24  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12795  016F2A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12796  016F30  50EF               	movf	indf0,w,c
 12797  016F32                     u9010:
 12798  016F32  6EDF               	movwf	indf2,c
 12799  016F34  50DF               	movf	indf2,w,c
 12800  016F36  A4D8               	btfss	status,2,c
 12801  016F38  D7BF               	goto	l9502
 12802                           
 12803                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12804  016F3A  0EF8               	movlw	248
 12805  016F3C  26E1               	addwf	fsr1l,f,c
 12806  016F3E  0EFF               	movlw	255
 12807  016F40  22E2               	addwfc	fsr1h,f,c
 12808  016F42  0012               	return		;funcret
 12809  016F44                     __end_of_strcpy:
 12810                           	opt callstack 0
 12811                           
 12812 ;; *************** function _floorf *****************
 12813 ;; Defined at:
 12814 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;  x               4  [STACK] float 
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;  u               4  [STACK] struct .
 12819 ;;  m               4  [STACK] unsigned long 
 12820 ;;  e               2  [STACK] int 
 12821 ;; Return value:  Size  Location     Type
 12822 ;;                  4  [STACK] float 
 12823 ;; Registers used:
 12824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12825 ;; Tracked objects:
 12826 ;;		On entry : 0/5
 12827 ;;		On exit  : 0/0
 12828 ;;		Unchanged: 0/0
 12829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12834 ;;Total ram usage:        0 bytes
 12835 ;; Hardware stack levels used:    1
 12836 ;; Hardware stack levels required when called:    6
 12837 ;; This function calls:
 12838 ;;		Nothing
 12839 ;; This function is called by:
 12840 ;;		_efgtoa
 12841 ;; This function uses a reentrant model
 12842 ;;
 12843                           
 12844                           	psect	text50
 12845  0144AA                     __ptext50:
 12846                           	opt callstack 0
 12847  0144AA                     _floorf:
 12848                           	opt callstack 0
 12849                           
 12850                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12851  0144AA  0E0A               	movlw	10
 12852  0144AC  26E1               	addwf	fsr1l,f,c
 12853  0144AE  0E00               	movlw	0
 12854  0144B0  22E2               	addwfc	fsr1h,f,c
 12855                           
 12856                           ;incstack = 0
 12857  0144B2  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12858  0144B8  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12859  0144BE  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12860  0144C4  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12861                           
 12862                           ;stkvar	_u @ sp[(-10)+0]
 12863  0144CA  0EF6               	movlw	-10
 12864  0144CC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12865  0144D2  0EF7               	movlw	-9
 12866  0144D4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12867  0144DA  0EF8               	movlw	-8
 12868  0144DC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12869  0144E2  0EF9               	movlw	-7
 12870  0144E4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12871                           
 12872                           ;stkvar	_x @ sp[(-10)+-4]
 12873  0144EA  0EF2               	movlw	-14
 12874  0144EC  006F FF8C  F03A    	movff	plusw1,btemp+8
 12875  0144F2  0EF3               	movlw	-13
 12876  0144F4  006F FF8C  F03B    	movff	plusw1,btemp+9
 12877  0144FA  0EF4               	movlw	-12
 12878  0144FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12879  014502  0EF5               	movlw	-11
 12880  014504  006F FF8C  F03D    	movff	plusw1,btemp+11
 12881                           
 12882                           ;stkvar	_u @ sp[(-10)+0]
 12883  01450A  0EF6               	movlw	-10
 12884  01450C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12885  014512  0EF7               	movlw	-9
 12886  014514  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12887  01451A  0EF8               	movlw	-8
 12888  01451C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12889  014522  0EF9               	movlw	-7
 12890  014524  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12891  01452A  0E81               	movlw	129
 12892  01452C  6E3C               	movwf	(btemp+10)^0,c
 12893  01452E  0EFF               	movlw	255
 12894  014530  6E3D               	movwf	(btemp+11)^0,c
 12895                           
 12896                           ;stkvar	_u @ sp[(-10)+0]
 12897  014532  0EF6               	movlw	-10
 12898  014534  006F FF8C  F036    	movff	plusw1,btemp+4
 12899  01453A  0EF7               	movlw	-9
 12900  01453C  006F FF8C  F037    	movff	plusw1,btemp+5
 12901  014542  0EF8               	movlw	-8
 12902  014544  006F FF8C  F038    	movff	plusw1,btemp+6
 12903  01454A  0EF9               	movlw	-7
 12904  01454C  006F FF8C  F039    	movff	plusw1,btemp+7
 12905  014552  0E18               	movlw	24
 12906  014554  D005               	goto	u5190
 12907  014556                     u5195:
 12908  014556  90D8               	bcf	status,0,c
 12909  014558  3239               	rrcf	(btemp+7)^0,f,c
 12910  01455A  3238               	rrcf	(btemp+6)^0,f,c
 12911  01455C  3237               	rrcf	(btemp+5)^0,f,c
 12912  01455E  3236               	rrcf	(btemp+4)^0,f,c
 12913  014560                     u5190:
 12914  014560  2EE8               	decfsz	wreg,f,c
 12915  014562  D7F9               	goto	u5195
 12916  014564  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12917  01456A  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12918  014570  0EFF               	movlw	255
 12919  014572  163A               	andwf	(btemp+8)^0,f,c
 12920  014574  0E00               	movlw	0
 12921  014576  163B               	andwf	(btemp+9)^0,f,c
 12922  014578  503C               	movf	(btemp+10)^0,w,c
 12923  01457A  263A               	addwf	(btemp+8)^0,f,c
 12924  01457C  503D               	movf	(btemp+11)^0,w,c
 12925  01457E  223B               	addwfc	(btemp+9)^0,f,c
 12926                           
 12927                           ;stkvar	_e @ sp[(-10)+8]
 12928  014580  0EFE               	movlw	-2
 12929  014582  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12930  014588  0EFF               	movlw	-1
 12931  01458A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12932                           
 12933                           ;stkvar	_e @ sp[(-10)+8]
 12934  014590  0EFF               	movlw	-1
 12935  014592  BEE3               	btfsc	plusw1,7,c
 12936  014594  D019               	goto	l6578
 12937  014596  0EFF               	movlw	-1
 12938  014598  50E3               	movf	plusw1,w,c
 12939  01459A  E108               	bnz	u5200
 12940  01459C  0EFE               	movlw	-2
 12941  01459E  006F FF8C  F032    	movff	plusw1,btemp
 12942  0145A4  0E17               	movlw	23
 12943  0145A6  5E32               	subwf	btemp^0,f,c
 12944  0145A8  A0D8               	btfss	status,0,c
 12945  0145AA  D00E               	goto	l6578
 12946  0145AC                     u5200:
 12947                           
 12948                           ;stkvar	_x @ sp[(-10)+-4]
 12949  0145AC  0EF2               	movlw	-14
 12950  0145AE  006F FF8C  F032    	movff	plusw1,btemp
 12951  0145B4  0EF3               	movlw	-13
 12952  0145B6  006F FF8C  F033    	movff	plusw1,btemp+1
 12953  0145BC  0EF4               	movlw	-12
 12954  0145BE  006F FF8C  F034    	movff	plusw1,btemp+2
 12955  0145C4  0EF5               	movlw	-11
 12956  0145C6  D11F               	goto	L13
 12957  0145C8                     l6578:
 12958                           
 12959                           ;stkvar	_e @ sp[(-10)+8]
 12960  0145C8  0EFF               	movlw	-1
 12961  0145CA  BEE3               	btfsc	plusw1,7,c
 12962  0145CC  D0B4               	goto	l6594
 12963                           
 12964                           ;stkvar	_e @ sp[(-10)+8]
 12965  0145CE  0EFE               	movlw	-2
 12966  0145D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 12967  0145D6  0EFF               	movlw	255
 12968  0145D8  6E36               	movwf	(btemp+4)^0,c
 12969  0145DA  0EFF               	movlw	255
 12970  0145DC  6E37               	movwf	(btemp+5)^0,c
 12971  0145DE  0E7F               	movlw	127
 12972  0145E0  6E38               	movwf	(btemp+6)^0,c
 12973  0145E2  0E00               	movlw	0
 12974  0145E4  6E39               	movwf	(btemp+7)^0,c
 12975  0145E6                     u5225:
 12976  0145E6  663D               	tstfsz	(btemp+11)^0,c
 12977  0145E8  D001               	goto	u5226
 12978  0145EA  D007               	goto	u5227
 12979  0145EC                     u5226:
 12980  0145EC  3439               	rlcf	(btemp+7)^0,w,c
 12981  0145EE  3239               	rrcf	(btemp+7)^0,f,c
 12982  0145F0  3238               	rrcf	(btemp+6)^0,f,c
 12983  0145F2  3237               	rrcf	(btemp+5)^0,f,c
 12984  0145F4  3236               	rrcf	(btemp+4)^0,f,c
 12985  0145F6  2E3D               	decfsz	(btemp+11)^0,f,c
 12986  0145F8  D7F6               	goto	u5225
 12987  0145FA                     u5227:
 12988                           
 12989                           ;stkvar	_m @ sp[(-10)+4]
 12990  0145FA  0EFA               	movlw	-6
 12991  0145FC  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12992  014602  0EFB               	movlw	-5
 12993  014604  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12994  01460A  0EFC               	movlw	-4
 12995  01460C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12996  014612  0EFD               	movlw	-3
 12997  014614  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12998                           
 12999                           ;stkvar	_m @ sp[(-10)+4]
 13000                           ;stkvar	_u @ sp[(-10)+0]
 13001  01461A  0EF6               	movlw	-10
 13002  01461C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13003  014622  0EF7               	movlw	-9
 13004  014624  006F FF8C  F03B    	movff	plusw1,btemp+9
 13005  01462A  0EF8               	movlw	-8
 13006  01462C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13007  014632  0EF9               	movlw	-7
 13008  014634  006F FF8C  F03D    	movff	plusw1,btemp+11
 13009  01463A  0EFA               	movlw	-6
 13010  01463C  50E3               	movf	plusw1,w,c
 13011  01463E  163A               	andwf	(btemp+8)^0,f,c
 13012  014640  0EFB               	movlw	-5
 13013  014642  50E3               	movf	plusw1,w,c
 13014  014644  163B               	andwf	(btemp+9)^0,f,c
 13015  014646  0EFC               	movlw	-4
 13016  014648  50E3               	movf	plusw1,w,c
 13017  01464A  163C               	andwf	(btemp+10)^0,f,c
 13018  01464C  0EFD               	movlw	-3
 13019  01464E  50E3               	movf	plusw1,w,c
 13020  014650  163D               	andwf	(btemp+11)^0,f,c
 13021  014652  503A               	movf	(btemp+8)^0,w,c
 13022  014654  103B               	iorwf	(btemp+9)^0,w,c
 13023  014656  103C               	iorwf	(btemp+10)^0,w,c
 13024  014658  103D               	iorwf	(btemp+11)^0,w,c
 13025  01465A  B4D8               	btfsc	status,2,c
 13026  01465C  D7A7               	goto	u5200
 13027                           
 13028                           ;stkvar	_u @ sp[(-10)+0]
 13029  01465E  0EF6               	movlw	-10
 13030  014660  006F FF8C  F03A    	movff	plusw1,btemp+8
 13031  014666  0EF7               	movlw	-9
 13032  014668  006F FF8C  F03B    	movff	plusw1,btemp+9
 13033  01466E  0EF8               	movlw	-8
 13034  014670  006F FF8C  F03C    	movff	plusw1,btemp+10
 13035  014676  0EF9               	movlw	-7
 13036  014678  006F FF8C  F03D    	movff	plusw1,btemp+11
 13037  01467E  0E20               	movlw	32
 13038  014680  D005               	goto	u5240
 13039  014682                     u5245:
 13040  014682  90D8               	bcf	status,0,c
 13041  014684  323D               	rrcf	(btemp+11)^0,f,c
 13042  014686  323C               	rrcf	(btemp+10)^0,f,c
 13043  014688  323B               	rrcf	(btemp+9)^0,f,c
 13044  01468A  323A               	rrcf	(btemp+8)^0,f,c
 13045  01468C                     u5240:
 13046  01468C  2EE8               	decfsz	wreg,f,c
 13047  01468E  D7F9               	goto	u5245
 13048  014690  503A               	movf	(btemp+8)^0,w,c
 13049  014692  B4D8               	btfsc	status,2,c
 13050  014694  D028               	goto	l6592
 13051                           
 13052                           ;stkvar	_m @ sp[(-10)+4]
 13053                           ;stkvar	_u @ sp[(-10)+0]
 13054  014696  0EF6               	movlw	-10
 13055  014698  50E3               	movf	plusw1,w,c
 13056  01469A  6E32               	movwf	btemp^0,c
 13057  01469C  0EFA               	movlw	-6
 13058  01469E  50E3               	movf	plusw1,w,c
 13059  0146A0  2632               	addwf	btemp^0,f,c
 13060  0146A2  0EF6               	movlw	-10
 13061  0146A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13062  0146AA  0EF7               	movlw	-9
 13063  0146AC  50E3               	movf	plusw1,w,c
 13064  0146AE  6E32               	movwf	btemp^0,c
 13065  0146B0  0EFB               	movlw	-5
 13066  0146B2  50E3               	movf	plusw1,w,c
 13067  0146B4  2232               	addwfc	btemp^0,f,c
 13068  0146B6  0EF7               	movlw	-9
 13069  0146B8  0060  F0CB  FFE3   	movff	btemp,plusw1
 13070  0146BE  0EF8               	movlw	-8
 13071  0146C0  50E3               	movf	plusw1,w,c
 13072  0146C2  6E32               	movwf	btemp^0,c
 13073  0146C4  0EFC               	movlw	-4
 13074  0146C6  50E3               	movf	plusw1,w,c
 13075  0146C8  2232               	addwfc	btemp^0,f,c
 13076  0146CA  0EF8               	movlw	-8
 13077  0146CC  0060  F0CB  FFE3   	movff	btemp,plusw1
 13078  0146D2  0EF9               	movlw	-7
 13079  0146D4  50E3               	movf	plusw1,w,c
 13080  0146D6  6E32               	movwf	btemp^0,c
 13081  0146D8  0EFD               	movlw	-3
 13082  0146DA  50E3               	movf	plusw1,w,c
 13083  0146DC  2232               	addwfc	btemp^0,f,c
 13084  0146DE  0EF9               	movlw	-7
 13085  0146E0  0060  F0CB  FFE3   	movff	btemp,plusw1
 13086  0146E6                     l6592:
 13087                           
 13088                           ;stkvar	_m @ sp[(-10)+4]
 13089  0146E6  0EFA               	movlw	-6
 13090  0146E8  006F FF8C  F03A    	movff	plusw1,btemp+8
 13091  0146EE  0EFB               	movlw	-5
 13092  0146F0  006F FF8C  F03B    	movff	plusw1,btemp+9
 13093  0146F6  0EFC               	movlw	-4
 13094  0146F8  006F FF8C  F03C    	movff	plusw1,btemp+10
 13095  0146FE  0EFD               	movlw	-3
 13096  014700  006F FF8C  F03D    	movff	plusw1,btemp+11
 13097  014706  1C3A               	comf	(btemp+8)^0,w,c
 13098  014708  6E36               	movwf	(btemp+4)^0,c
 13099  01470A  1C3B               	comf	(btemp+9)^0,w,c
 13100  01470C  6E37               	movwf	(btemp+5)^0,c
 13101  01470E  1C3C               	comf	(btemp+10)^0,w,c
 13102  014710  6E38               	movwf	(btemp+6)^0,c
 13103  014712  1C3D               	comf	(btemp+11)^0,w,c
 13104  014714  6E39               	movwf	(btemp+7)^0,c
 13105                           
 13106                           ;stkvar	_u @ sp[(-10)+0]
 13107  014716  50E1               	movf	fsr1l,w,c
 13108  014718  0FF6               	addlw	-10
 13109  01471A  6ED9               	movwf	fsr2l,c
 13110  01471C  50E2               	movf	fsr1h,w,c
 13111  01471E  6EDA               	movwf	fsr2h,c
 13112  014720  0EFF               	movlw	255
 13113  014722  22DA               	addwfc	fsr2h,f,c
 13114  014724  5036               	movf	(btemp+4)^0,w,c
 13115  014726  16DE               	andwf	postinc2,f,c
 13116  014728  5037               	movf	(btemp+5)^0,w,c
 13117  01472A  16DE               	andwf	postinc2,f,c
 13118  01472C  5038               	movf	(btemp+6)^0,w,c
 13119  01472E  16DE               	andwf	postinc2,f,c
 13120  014730  5039               	movf	(btemp+7)^0,w,c
 13121  014732  16DE               	andwf	postinc2,f,c
 13122  014734  D05B               	goto	l6602
 13123  014736                     l6594:
 13124                           
 13125                           ;stkvar	_u @ sp[(-10)+0]
 13126  014736  0EF6               	movlw	-10
 13127  014738  006F FF8C  F03A    	movff	plusw1,btemp+8
 13128  01473E  0EF7               	movlw	-9
 13129  014740  006F FF8C  F03B    	movff	plusw1,btemp+9
 13130  014746  0EF8               	movlw	-8
 13131  014748  006F FF8C  F03C    	movff	plusw1,btemp+10
 13132  01474E  0EF9               	movlw	-7
 13133  014750  006F FF8C  F03D    	movff	plusw1,btemp+11
 13134  014756  0E20               	movlw	32
 13135  014758  D005               	goto	u5260
 13136  01475A                     u5265:
 13137  01475A  90D8               	bcf	status,0,c
 13138  01475C  323D               	rrcf	(btemp+11)^0,f,c
 13139  01475E  323C               	rrcf	(btemp+10)^0,f,c
 13140  014760  323B               	rrcf	(btemp+9)^0,f,c
 13141  014762  323A               	rrcf	(btemp+8)^0,f,c
 13142  014764                     u5260:
 13143  014764  2EE8               	decfsz	wreg,f,c
 13144  014766  D7F9               	goto	u5265
 13145  014768  663A               	tstfsz	(btemp+8)^0,c
 13146  01476A  D009               	goto	l6598
 13147                           
 13148                           ;stkvar	_u @ sp[(-10)+0]
 13149  01476C  0EF6               	movlw	-10
 13150  01476E  6AE3               	clrf	plusw1,c
 13151  014770  0EF7               	movlw	-9
 13152  014772  6AE3               	clrf	plusw1,c
 13153  014774  0EF8               	movlw	-8
 13154  014776  6AE3               	clrf	plusw1,c
 13155  014778  0EF9               	movlw	-7
 13156  01477A  6AE3               	clrf	plusw1,c
 13157  01477C  D037               	goto	l6602
 13158  01477E                     l6598:
 13159                           
 13160                           ;stkvar	_u @ sp[(-10)+0]
 13161  01477E  0EF6               	movlw	-10
 13162  014780  006F FF8C  F03A    	movff	plusw1,btemp+8
 13163  014786  0EF7               	movlw	-9
 13164  014788  006F FF8C  F03B    	movff	plusw1,btemp+9
 13165  01478E  0EF8               	movlw	-8
 13166  014790  006F FF8C  F03C    	movff	plusw1,btemp+10
 13167  014796  0EF9               	movlw	-7
 13168  014798  006F FF8C  F03D    	movff	plusw1,btemp+11
 13169  01479E  90D8               	bcf	status,0,c
 13170  0147A0  343A               	rlcf	(btemp+8)^0,w,c
 13171  0147A2  6E36               	movwf	(btemp+4)^0,c
 13172  0147A4  343B               	rlcf	(btemp+9)^0,w,c
 13173  0147A6  6E37               	movwf	(btemp+5)^0,c
 13174  0147A8  343C               	rlcf	(btemp+10)^0,w,c
 13175  0147AA  6E38               	movwf	(btemp+6)^0,c
 13176  0147AC  343D               	rlcf	(btemp+11)^0,w,c
 13177  0147AE  6E39               	movwf	(btemp+7)^0,c
 13178  0147B0  5036               	movf	(btemp+4)^0,w,c
 13179  0147B2  1037               	iorwf	(btemp+5)^0,w,c
 13180  0147B4  1038               	iorwf	(btemp+6)^0,w,c
 13181  0147B6  1039               	iorwf	(btemp+7)^0,w,c
 13182  0147B8  B4D8               	btfsc	status,2,c
 13183  0147BA  D018               	goto	l6602
 13184  0147BC  0E00               	movlw	0
 13185  0147BE  6E3A               	movwf	(btemp+8)^0,c
 13186  0147C0  0E00               	movlw	0
 13187  0147C2  6E3B               	movwf	(btemp+9)^0,c
 13188  0147C4  0E80               	movlw	128
 13189  0147C6  6E3C               	movwf	(btemp+10)^0,c
 13190  0147C8  0EBF               	movlw	191
 13191  0147CA  6E3D               	movwf	(btemp+11)^0,c
 13192                           
 13193                           ;stkvar	_u @ sp[(-10)+0]
 13194  0147CC  0EF6               	movlw	-10
 13195  0147CE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13196  0147D4  0EF7               	movlw	-9
 13197  0147D6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13198  0147DC  0EF8               	movlw	-8
 13199  0147DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13200  0147E4  0EF9               	movlw	-7
 13201  0147E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13202  0147EC                     l6602:
 13203                           
 13204                           ;stkvar	_u @ sp[(-10)+0]
 13205  0147EC  0EF6               	movlw	-10
 13206  0147EE  006F FF8C  F032    	movff	plusw1,btemp
 13207  0147F4  0EF7               	movlw	-9
 13208  0147F6  006F FF8C  F033    	movff	plusw1,btemp+1
 13209  0147FC  0EF8               	movlw	-8
 13210  0147FE  006F FF8C  F034    	movff	plusw1,btemp+2
 13211  014804  0EF9               	movlw	-7
 13212  014806                     L13:
 13213  014806  006F FF8C  F035    	movff	plusw1,btemp+3
 13214                           
 13215                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13216  01480C  0EF2               	movlw	242
 13217  01480E  26E1               	addwf	fsr1l,f,c
 13218  014810  0EFF               	movlw	255
 13219  014812  22E2               	addwfc	fsr1h,f,c
 13220  014814  0012               	return		;funcret
 13221  014816                     __end_of_floorf:
 13222                           	opt callstack 0
 13223                           
 13224 ;; *************** function ___fpclassifyf *****************
 13225 ;; Defined at:
 13226 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13227 ;; Parameters:    Size  Location     Type
 13228 ;;  x               4  [STACK] float 
 13229 ;; Auto vars:     Size  Location     Type
 13230 ;;  u               4  [STACK] struct .
 13231 ;;  e               2  [STACK] int 
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  2  [STACK] int 
 13234 ;; Registers used:
 13235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/5
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13245 ;;Total ram usage:        0 bytes
 13246 ;; Hardware stack levels used:    1
 13247 ;; Hardware stack levels required when called:    6
 13248 ;; This function calls:
 13249 ;;		Nothing
 13250 ;; This function is called by:
 13251 ;;		_efgtoa
 13252 ;; This function uses a reentrant model
 13253 ;;
 13254                           
 13255                           	psect	text51
 13256  015EFC                     __ptext51:
 13257                           	opt callstack 0
 13258  015EFC                     ___fpclassifyf:
 13259                           	opt callstack 0
 13260                           
 13261                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13262  015EFC  0E06               	movlw	6
 13263  015EFE  26E1               	addwf	fsr1l,f,c
 13264  015F00  0E00               	movlw	0
 13265  015F02  22E2               	addwfc	fsr1h,f,c
 13266                           
 13267                           ;incstack = 0
 13268  015F04  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13269  015F0A  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13270  015F10  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13271  015F16  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13272                           
 13273                           ;stkvar	_u @ sp[(-6)+0]
 13274  015F1C  0EFA               	movlw	-6
 13275  015F1E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13276  015F24  0EFB               	movlw	-5
 13277  015F26  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13278  015F2C  0EFC               	movlw	-4
 13279  015F2E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13280  015F34  0EFD               	movlw	-3
 13281  015F36  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13282                           
 13283                           ;stkvar	_x @ sp[(-6)+-4]
 13284  015F3C  0EF6               	movlw	-10
 13285  015F3E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13286  015F44  0EF7               	movlw	-9
 13287  015F46  006F FF8C  F03B    	movff	plusw1,btemp+9
 13288  015F4C  0EF8               	movlw	-8
 13289  015F4E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13290  015F54  0EF9               	movlw	-7
 13291  015F56  006F FF8C  F03D    	movff	plusw1,btemp+11
 13292                           
 13293                           ;stkvar	_u @ sp[(-6)+0]
 13294  015F5C  0EFA               	movlw	-6
 13295  015F5E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13296  015F64  0EFB               	movlw	-5
 13297  015F66  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13298  015F6C  0EFC               	movlw	-4
 13299  015F6E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13300  015F74  0EFD               	movlw	-3
 13301  015F76  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13302                           
 13303                           ;stkvar	_u @ sp[(-6)+0]
 13304  015F7C  0EFA               	movlw	-6
 13305  015F7E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13306  015F84  0EFB               	movlw	-5
 13307  015F86  006F FF8C  F03B    	movff	plusw1,btemp+9
 13308  015F8C  0EFC               	movlw	-4
 13309  015F8E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13310  015F94  0EFD               	movlw	-3
 13311  015F96  006F FF8C  F03D    	movff	plusw1,btemp+11
 13312  015F9C  0E18               	movlw	24
 13313  015F9E  D005               	goto	u5070
 13314  015FA0                     u5075:
 13315  015FA0  90D8               	bcf	status,0,c
 13316  015FA2  323D               	rrcf	(btemp+11)^0,f,c
 13317  015FA4  323C               	rrcf	(btemp+10)^0,f,c
 13318  015FA6  323B               	rrcf	(btemp+9)^0,f,c
 13319  015FA8  323A               	rrcf	(btemp+8)^0,f,c
 13320  015FAA                     u5070:
 13321  015FAA  2EE8               	decfsz	wreg,f,c
 13322  015FAC  D7F9               	goto	u5075
 13323  015FAE  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13324  015FB4  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13325  015FBA  0EFF               	movlw	255
 13326  015FBC  1638               	andwf	(btemp+6)^0,f,c
 13327  015FBE  0E00               	movlw	0
 13328  015FC0  1639               	andwf	(btemp+7)^0,f,c
 13329                           
 13330                           ;stkvar	_e @ sp[(-6)+4]
 13331  015FC2  0EFE               	movlw	-2
 13332  015FC4  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13333  015FCA  0EFF               	movlw	-1
 13334  015FCC  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13335                           
 13336                           ;stkvar	_e @ sp[(-6)+4]
 13337  015FD2  0EFE               	movlw	-2
 13338  015FD4  006F FF8C  F032    	movff	plusw1,btemp
 13339  015FDA  0EFF               	movlw	-1
 13340  015FDC  50E3               	movf	plusw1,w,c
 13341  015FDE  1032               	iorwf	btemp^0,w,c
 13342  015FE0  A4D8               	btfss	status,2,c
 13343  015FE2  D023               	goto	l6540
 13344                           
 13345                           ;stkvar	_u @ sp[(-6)+0]
 13346  015FE4  0EFA               	movlw	-6
 13347  015FE6  006F FF8C  F03A    	movff	plusw1,btemp+8
 13348  015FEC  0EFB               	movlw	-5
 13349  015FEE  006F FF8C  F03B    	movff	plusw1,btemp+9
 13350  015FF4  0EFC               	movlw	-4
 13351  015FF6  006F FF8C  F03C    	movff	plusw1,btemp+10
 13352  015FFC  0EFD               	movlw	-3
 13353  015FFE  006F FF8C  F03D    	movff	plusw1,btemp+11
 13354  016004  90D8               	bcf	status,0,c
 13355  016006  343A               	rlcf	(btemp+8)^0,w,c
 13356  016008  6E36               	movwf	(btemp+4)^0,c
 13357  01600A  343B               	rlcf	(btemp+9)^0,w,c
 13358  01600C  6E37               	movwf	(btemp+5)^0,c
 13359  01600E  343C               	rlcf	(btemp+10)^0,w,c
 13360  016010  6E38               	movwf	(btemp+6)^0,c
 13361  016012  343D               	rlcf	(btemp+11)^0,w,c
 13362  016014  6E39               	movwf	(btemp+7)^0,c
 13363  016016  5036               	movf	(btemp+4)^0,w,c
 13364  016018  1037               	iorwf	(btemp+5)^0,w,c
 13365  01601A  1038               	iorwf	(btemp+6)^0,w,c
 13366  01601C  1039               	iorwf	(btemp+7)^0,w,c
 13367  01601E  A4D8               	btfss	status,2,c
 13368  016020  D002               	goto	l6536
 13369  016022  0E02               	movlw	2
 13370  016024  D02E               	goto	L14
 13371  016026                     l6536:
 13372  016026  0E03               	movlw	3
 13373  016028  D02C               	goto	L14
 13374  01602A                     l6540:
 13375                           
 13376                           ;stkvar	_e @ sp[(-6)+4]
 13377  01602A  0EFE               	movlw	-2
 13378  01602C  28E3               	incf	plusw1,w,c
 13379  01602E  E128               	bnz	l6546
 13380  016030  0EFF               	movlw	-1
 13381  016032  50E3               	movf	plusw1,w,c
 13382  016034  A4D8               	btfss	status,2,c
 13383  016036  D024               	goto	l6546
 13384                           
 13385                           ;stkvar	_u @ sp[(-6)+0]
 13386  016038  0EFA               	movlw	-6
 13387  01603A  006F FF8C  F03A    	movff	plusw1,btemp+8
 13388  016040  0EFB               	movlw	-5
 13389  016042  006F FF8C  F03B    	movff	plusw1,btemp+9
 13390  016048  0EFC               	movlw	-4
 13391  01604A  006F FF8C  F03C    	movff	plusw1,btemp+10
 13392  016050  0EFD               	movlw	-3
 13393  016052  006F FF8C  F03D    	movff	plusw1,btemp+11
 13394  016058  0E09               	movlw	9
 13395  01605A                     u5115:
 13396  01605A  90D8               	bcf	status,0,c
 13397  01605C  363A               	rlcf	(btemp+8)^0,f,c
 13398  01605E  363B               	rlcf	(btemp+9)^0,f,c
 13399  016060  363C               	rlcf	(btemp+10)^0,f,c
 13400  016062  363D               	rlcf	(btemp+11)^0,f,c
 13401  016064  2EE8               	decfsz	wreg,f,c
 13402  016066  D7F9               	goto	u5115
 13403  016068  503A               	movf	(btemp+8)^0,w,c
 13404  01606A  103B               	iorwf	(btemp+9)^0,w,c
 13405  01606C  103C               	iorwf	(btemp+10)^0,w,c
 13406  01606E  103D               	iorwf	(btemp+11)^0,w,c
 13407  016070  A4D8               	btfss	status,2,c
 13408  016072  D002               	goto	u5120
 13409  016074  0E01               	movlw	1
 13410  016076  D001               	goto	u5130
 13411  016078                     u5120:
 13412  016078  0E00               	movlw	0
 13413  01607A                     u5130:
 13414  01607A  6E32               	movwf	btemp^0,c
 13415  01607C  6A33               	clrf	(btemp+1)^0,c
 13416  01607E  D004               	goto	l2758
 13417  016080                     l6546:
 13418  016080  0E04               	movlw	4
 13419  016082                     L14:
 13420  016082  6E32               	movwf	btemp^0,c
 13421  016084  0E00               	movlw	0
 13422  016086  6E33               	movwf	(btemp+1)^0,c
 13423  016088                     l2758:
 13424                           
 13425                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13426  016088  0EF6               	movlw	246
 13427  01608A  26E1               	addwf	fsr1l,f,c
 13428  01608C  0EFF               	movlw	255
 13429  01608E  22E2               	addwfc	fsr1h,f,c
 13430  016090  0012               	return		;funcret
 13431  016092                     __end_of___fpclassifyf:
 13432                           	opt callstack 0
 13433                           
 13434 ;; *************** function ___fltol *****************
 13435 ;; Defined at:
 13436 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;  f1              4  [STACK] int 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;  exp1            1  [STACK] unsigned char 
 13441 ;;  sign1           1  [STACK] unsigned char 
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  4  [STACK] long 
 13444 ;; Registers used:
 13445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/5
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13455 ;;Total ram usage:        0 bytes
 13456 ;; Hardware stack levels used:    1
 13457 ;; Hardware stack levels required when called:    6
 13458 ;; This function calls:
 13459 ;;		Nothing
 13460 ;; This function is called by:
 13461 ;;		_efgtoa
 13462 ;; This function uses a reentrant model
 13463 ;;
 13464                           
 13465                           	psect	text52
 13466  016092                     __ptext52:
 13467                           	opt callstack 0
 13468  016092                     ___fltol:
 13469                           	opt callstack 0
 13470                           
 13471                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13472  016092  52E6               	movf	postinc1,f,c
 13473  016094  52E6               	movf	postinc1,f,c
 13474                           
 13475                           ;stkvar	_f1 @ sp[(-2)+-4]
 13476                           
 13477                           ;incstack = 0
 13478  016096  0EFA               	movlw	-6
 13479  016098  006F FF8C  F03A    	movff	plusw1,btemp+8
 13480  01609E  0EFB               	movlw	-5
 13481  0160A0  006F FF8C  F03B    	movff	plusw1,btemp+9
 13482  0160A6  0EFC               	movlw	-4
 13483  0160A8  006F FF8C  F03C    	movff	plusw1,btemp+10
 13484  0160AE  0EFD               	movlw	-3
 13485  0160B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 13486  0160B6  0E18               	movlw	24
 13487  0160B8  D005               	goto	u6280
 13488  0160BA                     u6285:
 13489  0160BA  90D8               	bcf	status,0,c
 13490  0160BC  323D               	rrcf	(btemp+11)^0,f,c
 13491  0160BE  323C               	rrcf	(btemp+10)^0,f,c
 13492  0160C0  323B               	rrcf	(btemp+9)^0,f,c
 13493  0160C2  323A               	rrcf	(btemp+8)^0,f,c
 13494  0160C4                     u6280:
 13495  0160C4  2EE8               	decfsz	wreg,f,c
 13496  0160C6  D7F9               	goto	u6285
 13497                           
 13498                           ;stkvar	_exp1 @ sp[(-2)+0]
 13499  0160C8  0EFE               	movlw	-2
 13500  0160CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13501  0160D0  0EFE               	movlw	-2
 13502  0160D2  50E3               	movf	plusw1,w,c
 13503  0160D4  A4D8               	btfss	status,2,c
 13504  0160D6  D006               	goto	l7166
 13505  0160D8                     u6290:
 13506  0160D8  0E00               	movlw	0
 13507  0160DA  6E32               	movwf	btemp^0,c
 13508  0160DC  6A33               	clrf	(btemp+1)^0,c
 13509  0160DE  6A34               	clrf	(btemp+2)^0,c
 13510  0160E0  6A35               	clrf	(btemp+3)^0,c
 13511  0160E2  D08B               	goto	l2374
 13512  0160E4                     l7166:
 13513                           
 13514                           ;stkvar	_f1 @ sp[(-2)+-4]
 13515  0160E4  0EFA               	movlw	-6
 13516  0160E6  006F FF8C  F03A    	movff	plusw1,btemp+8
 13517  0160EC  0EFB               	movlw	-5
 13518  0160EE  006F FF8C  F03B    	movff	plusw1,btemp+9
 13519  0160F4  0EFC               	movlw	-4
 13520  0160F6  006F FF8C  F03C    	movff	plusw1,btemp+10
 13521  0160FC  0EFD               	movlw	-3
 13522  0160FE  006F FF8C  F03D    	movff	plusw1,btemp+11
 13523  016104  0E20               	movlw	32
 13524  016106  D005               	goto	u6300
 13525  016108                     u6305:
 13526  016108  90D8               	bcf	status,0,c
 13527  01610A  323D               	rrcf	(btemp+11)^0,f,c
 13528  01610C  323C               	rrcf	(btemp+10)^0,f,c
 13529  01610E  323B               	rrcf	(btemp+9)^0,f,c
 13530  016110  323A               	rrcf	(btemp+8)^0,f,c
 13531  016112                     u6300:
 13532  016112  2EE8               	decfsz	wreg,f,c
 13533  016114  D7F9               	goto	u6305
 13534                           
 13535                           ;stkvar	_sign1 @ sp[(-2)+1]
 13536  016116  0EFF               	movlw	-1
 13537  016118  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13538                           
 13539                           ;stkvar	_f1 @ sp[(-2)+-4]
 13540  01611E  0EFC               	movlw	-4
 13541  016120  8EE3               	bsf	plusw1,7,c
 13542                           
 13543                           ;stkvar	_f1 @ sp[(-2)+-4]
 13544  016122  50E1               	movf	fsr1l,w,c
 13545  016124  0FFA               	addlw	-6
 13546  016126  6ED9               	movwf	fsr2l,c
 13547  016128  50E2               	movf	fsr1h,w,c
 13548  01612A  6EDA               	movwf	fsr2h,c
 13549  01612C  0EFF               	movlw	255
 13550  01612E  22DA               	addwfc	fsr2h,f,c
 13551  016130  0EFF               	movlw	255
 13552  016132  16DE               	andwf	postinc2,f,c
 13553  016134  0EFF               	movlw	255
 13554  016136  16DE               	andwf	postinc2,f,c
 13555  016138  0EFF               	movlw	255
 13556  01613A  16DE               	andwf	postinc2,f,c
 13557  01613C  0E00               	movlw	0
 13558  01613E  16DE               	andwf	postinc2,f,c
 13559                           
 13560                           ;stkvar	_exp1 @ sp[(-2)+0]
 13561  016140  0EFE               	movlw	-2
 13562  016142  006F FF8C  F032    	movff	plusw1,btemp
 13563  016148  0E96               	movlw	150
 13564  01614A  5E32               	subwf	btemp^0,f,c
 13565  01614C  0EFE               	movlw	-2
 13566  01614E  0060  F0CB  FFE3   	movff	btemp,plusw1
 13567                           
 13568                           ;stkvar	_exp1 @ sp[(-2)+0]
 13569  016154  0EFE               	movlw	-2
 13570  016156  AEE3               	btfss	plusw1,7,c
 13571  016158  D014               	goto	l7184
 13572                           
 13573                           ;stkvar	_exp1 @ sp[(-2)+0]
 13574  01615A  0EFE               	movlw	-2
 13575  01615C  50E3               	movf	plusw1,w,c
 13576  01615E  0A80               	xorlw	128
 13577  016160  0F97               	addlw	151
 13578  016162  A0D8               	btfss	status,0,c
 13579  016164  D7B9               	goto	u6290
 13580  016166                     l7182:
 13581                           
 13582                           ;stkvar	_f1 @ sp[(-2)+-4]
 13583  016166  90D8               	bcf	status,0,c
 13584  016168  0EFD               	movlw	-3
 13585  01616A  32E3               	rrcf	plusw1,f,c
 13586  01616C  0EFC               	movlw	-4
 13587  01616E  32E3               	rrcf	plusw1,f,c
 13588  016170  0EFB               	movlw	-5
 13589  016172  32E3               	rrcf	plusw1,f,c
 13590  016174  0EFA               	movlw	-6
 13591  016176  32E3               	rrcf	plusw1,f,c
 13592                           
 13593                           ;stkvar	_exp1 @ sp[(-2)+0]
 13594  016178  0EFE               	movlw	-2
 13595  01617A  2AE3               	incf	plusw1,f,c
 13596  01617C  B4D8               	btfsc	status,2,c
 13597  01617E  D018               	goto	u6350
 13598  016180  D7F2               	goto	l7182
 13599  016182                     l7184:
 13600                           
 13601                           ;stkvar	_exp1 @ sp[(-2)+0]
 13602  016182  0EFE               	movlw	-2
 13603  016184  006F FF8C  F032    	movff	plusw1,btemp
 13604  01618A  0E1F               	movlw	31
 13605  01618C  6432               	cpfsgt	btemp^0,c
 13606  01618E  D00C               	goto	l7192
 13607  016190  D7A3               	goto	u6290
 13608  016192                     l7190:
 13609                           
 13610                           ;stkvar	_f1 @ sp[(-2)+-4]
 13611  016192  90D8               	bcf	status,0,c
 13612  016194  0EFA               	movlw	-6
 13613  016196  36E3               	rlcf	plusw1,f,c
 13614  016198  0EFB               	movlw	-5
 13615  01619A  36E3               	rlcf	plusw1,f,c
 13616  01619C  0EFC               	movlw	-4
 13617  01619E  36E3               	rlcf	plusw1,f,c
 13618  0161A0  0EFD               	movlw	-3
 13619  0161A2  36E3               	rlcf	plusw1,f,c
 13620                           
 13621                           ;stkvar	_exp1 @ sp[(-2)+0]
 13622  0161A4  0EFE               	movlw	-2
 13623  0161A6  06E3               	decf	plusw1,f,c
 13624  0161A8                     l7192:
 13625                           
 13626                           ;stkvar	_exp1 @ sp[(-2)+0]
 13627  0161A8  0EFE               	movlw	-2
 13628  0161AA  50E3               	movf	plusw1,w,c
 13629  0161AC  A4D8               	btfss	status,2,c
 13630  0161AE  D7F1               	goto	l7190
 13631  0161B0                     u6350:
 13632                           
 13633                           ;stkvar	_sign1 @ sp[(-2)+1]
 13634  0161B0  0EFF               	movlw	-1
 13635  0161B2  50E3               	movf	plusw1,w,c
 13636  0161B4  B4D8               	btfsc	status,2,c
 13637  0161B6  D011               	goto	u6370
 13638                           
 13639                           ;stkvar	_f1 @ sp[(-2)+-4]
 13640                           ;stkvar	_f1 @ sp[(-2)+-4]
 13641  0161B8  0EFA               	movlw	-6
 13642  0161BA  6CE3               	negf	plusw1,c
 13643  0161BC  0EFB               	movlw	-5
 13644  0161BE  1EE3               	comf	plusw1,f,c
 13645  0161C0  0EFC               	movlw	-4
 13646  0161C2  1EE3               	comf	plusw1,f,c
 13647  0161C4  0EFD               	movlw	-3
 13648  0161C6  1EE3               	comf	plusw1,f,c
 13649  0161C8  E308               	bnc	u6370
 13650  0161CA  0EFB               	movlw	-5
 13651  0161CC  2AE3               	incf	plusw1,f,c
 13652  0161CE  E305               	bnc	u6370
 13653  0161D0  0EFC               	movlw	-4
 13654  0161D2  2AE3               	incf	plusw1,f,c
 13655  0161D4  E302               	bnc	u6370
 13656  0161D6  0EFD               	movlw	-3
 13657  0161D8  2AE3               	incf	plusw1,f,c
 13658  0161DA                     u6370:
 13659                           
 13660                           ;stkvar	_f1 @ sp[(-2)+-4]
 13661  0161DA  0EFA               	movlw	-6
 13662  0161DC  006F FF8C  F032    	movff	plusw1,btemp
 13663  0161E2  0EFB               	movlw	-5
 13664  0161E4  006F FF8C  F033    	movff	plusw1,btemp+1
 13665  0161EA  0EFC               	movlw	-4
 13666  0161EC  006F FF8C  F034    	movff	plusw1,btemp+2
 13667  0161F2  0EFD               	movlw	-3
 13668  0161F4  006F FF8C  F035    	movff	plusw1,btemp+3
 13669  0161FA                     l2374:
 13670                           
 13671                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13672  0161FA  0EFA               	movlw	250
 13673  0161FC  26E1               	addwf	fsr1l,f,c
 13674  0161FE  0EFF               	movlw	255
 13675  016200  22E2               	addwfc	fsr1h,f,c
 13676  016202  0012               	return		;funcret
 13677  016204                     __end_of___fltol:
 13678                           	opt callstack 0
 13679                           
 13680 ;; *************** function ___flneg *****************
 13681 ;; Defined at:
 13682 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13683 ;; Parameters:    Size  Location     Type
 13684 ;;  f1              4  [STACK] long 
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;		None
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  4  [STACK] long 
 13689 ;; Registers used:
 13690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13691 ;; Tracked objects:
 13692 ;;		On entry : 0/5
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13700 ;;Total ram usage:        0 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; Hardware stack levels required when called:    6
 13703 ;; This function calls:
 13704 ;;		Nothing
 13705 ;; This function is called by:
 13706 ;;		_efgtoa
 13707 ;; This function uses a reentrant model
 13708 ;;
 13709                           
 13710                           	psect	text53
 13711  017E10                     __ptext53:
 13712                           	opt callstack 0
 13713  017E10                     ___flneg:
 13714                           	opt callstack 17
 13715                           
 13716                           ;stkvar	_f1 @ sp[(0)+-4]
 13717                           
 13718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13719                           ;incstack = 0
 13720  017E10  0EFC               	movlw	-4
 13721  017E12  50E3               	movf	plusw1,w,c
 13722  017E14  E10A               	bnz	u6270
 13723  017E16  0EFD               	movlw	-3
 13724  017E18  50E3               	movf	plusw1,w,c
 13725  017E1A  E107               	bnz	u6270
 13726  017E1C  0EFE               	movlw	-2
 13727  017E1E  50E3               	movf	plusw1,w,c
 13728  017E20  E104               	bnz	u6270
 13729  017E22  0EFF               	movlw	-1
 13730  017E24  50E3               	movf	plusw1,w,c
 13731  017E26  B4D8               	btfsc	status,2,c
 13732  017E28  D002               	goto	l7156
 13733  017E2A                     u6270:
 13734                           
 13735                           ;stkvar	_f1 @ sp[(0)+-4]
 13736  017E2A  0EFF               	movlw	-1
 13737  017E2C  7EE3               	btg	plusw1,7,c
 13738  017E2E                     l7156:
 13739                           
 13740                           ;stkvar	_f1 @ sp[(0)+-4]
 13741  017E2E  0EFC               	movlw	-4
 13742  017E30  006F FF8C  F032    	movff	plusw1,btemp
 13743  017E36  0EFD               	movlw	-3
 13744  017E38  006F FF8C  F033    	movff	plusw1,btemp+1
 13745  017E3E  0EFE               	movlw	-2
 13746  017E40  006F FF8C  F034    	movff	plusw1,btemp+2
 13747  017E46  0EFF               	movlw	-1
 13748  017E48  006F FF8C  F035    	movff	plusw1,btemp+3
 13749                           
 13750                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13751  017E4E  52E5               	movf	postdec1,f,c
 13752  017E50  52E5               	movf	postdec1,f,c
 13753  017E52  52E5               	movf	postdec1,f,c
 13754  017E54  52E5               	movf	postdec1,f,c
 13755  017E56  0012               	return		;funcret
 13756  017E58                     __end_of___flneg:
 13757                           	opt callstack 0
 13758                           
 13759 ;; *************** function ___flge *****************
 13760 ;; Defined at:
 13761 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 13762 ;; Parameters:    Size  Location     Type
 13763 ;;  ff1             4  [STACK] long 
 13764 ;;  ff2             4  [STACK] long 
 13765 ;; Auto vars:     Size  Location     Type
 13766 ;;		None
 13767 ;; Return value:  Size  Location     Type
 13768 ;;		None               void
 13769 ;; Registers used:
 13770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13771 ;; Tracked objects:
 13772 ;;		On entry : 0/5
 13773 ;;		On exit  : 0/0
 13774 ;;		Unchanged: 0/0
 13775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13780 ;;Total ram usage:        0 bytes
 13781 ;; Hardware stack levels used:    1
 13782 ;; Hardware stack levels required when called:    6
 13783 ;; This function calls:
 13784 ;;		Nothing
 13785 ;; This function is called by:
 13786 ;;		_efgtoa
 13787 ;; This function uses a reentrant model
 13788 ;;
 13789                           
 13790                           	psect	text54
 13791  016204                     __ptext54:
 13792                           	opt callstack 0
 13793  016204                     ___flge:
 13794                           	opt callstack 17
 13795                           
 13796                           ;stkvar	_ff1 @ sp[(0)+-4]
 13797                           
 13798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13799                           ;incstack = 0
 13800  016204  50E1               	movf	fsr1l,w,c
 13801  016206  0FFC               	addlw	-4
 13802  016208  6ED9               	movwf	fsr2l,c
 13803  01620A  50E2               	movf	fsr1h,w,c
 13804  01620C  6EDA               	movwf	fsr2h,c
 13805  01620E  0EFF               	movlw	255
 13806  016210  22DA               	addwfc	fsr2h,f,c
 13807  016212  0E00               	movlw	0
 13808  016214  14DE               	andwf	postinc2,w,c
 13809  016216  6E3A               	movwf	(btemp+8)^0,c
 13810  016218  0E00               	movlw	0
 13811  01621A  14DE               	andwf	postinc2,w,c
 13812  01621C  6E3B               	movwf	(btemp+9)^0,c
 13813  01621E  0E80               	movlw	128
 13814  016220  14DE               	andwf	postinc2,w,c
 13815  016222  6E3C               	movwf	(btemp+10)^0,c
 13816  016224  0E7F               	movlw	127
 13817  016226  14DE               	andwf	postinc2,w,c
 13818  016228  6E3D               	movwf	(btemp+11)^0,c
 13819  01622A  503A               	movf	(btemp+8)^0,w,c
 13820  01622C  103B               	iorwf	(btemp+9)^0,w,c
 13821  01622E  103C               	iorwf	(btemp+10)^0,w,c
 13822  016230  103D               	iorwf	(btemp+11)^0,w,c
 13823  016232  A4D8               	btfss	status,2,c
 13824  016234  D008               	goto	l7130
 13825                           
 13826                           ;stkvar	_ff1 @ sp[(0)+-4]
 13827  016236  0EFC               	movlw	-4
 13828  016238  6AE3               	clrf	plusw1,c
 13829  01623A  0EFD               	movlw	-3
 13830  01623C  6AE3               	clrf	plusw1,c
 13831  01623E  0EFE               	movlw	-2
 13832  016240  6AE3               	clrf	plusw1,c
 13833  016242  0EFF               	movlw	-1
 13834  016244  6AE3               	clrf	plusw1,c
 13835  016246                     l7130:
 13836                           
 13837                           ;stkvar	_ff2 @ sp[(0)+-8]
 13838  016246  50E1               	movf	fsr1l,w,c
 13839  016248  0FF8               	addlw	-8
 13840  01624A  6ED9               	movwf	fsr2l,c
 13841  01624C  50E2               	movf	fsr1h,w,c
 13842  01624E  6EDA               	movwf	fsr2h,c
 13843  016250  0EFF               	movlw	255
 13844  016252  22DA               	addwfc	fsr2h,f,c
 13845  016254  0E00               	movlw	0
 13846  016256  14DE               	andwf	postinc2,w,c
 13847  016258  6E3A               	movwf	(btemp+8)^0,c
 13848  01625A  0E00               	movlw	0
 13849  01625C  14DE               	andwf	postinc2,w,c
 13850  01625E  6E3B               	movwf	(btemp+9)^0,c
 13851  016260  0E80               	movlw	128
 13852  016262  14DE               	andwf	postinc2,w,c
 13853  016264  6E3C               	movwf	(btemp+10)^0,c
 13854  016266  0E7F               	movlw	127
 13855  016268  14DE               	andwf	postinc2,w,c
 13856  01626A  6E3D               	movwf	(btemp+11)^0,c
 13857  01626C  503A               	movf	(btemp+8)^0,w,c
 13858  01626E  103B               	iorwf	(btemp+9)^0,w,c
 13859  016270  103C               	iorwf	(btemp+10)^0,w,c
 13860  016272  103D               	iorwf	(btemp+11)^0,w,c
 13861  016274  A4D8               	btfss	status,2,c
 13862  016276  D008               	goto	l2340
 13863                           
 13864                           ;stkvar	_ff2 @ sp[(0)+-8]
 13865  016278  0EF8               	movlw	-8
 13866  01627A  6AE3               	clrf	plusw1,c
 13867  01627C  0EF9               	movlw	-7
 13868  01627E  6AE3               	clrf	plusw1,c
 13869  016280  0EFA               	movlw	-6
 13870  016282  6AE3               	clrf	plusw1,c
 13871  016284  0EFB               	movlw	-5
 13872  016286  6AE3               	clrf	plusw1,c
 13873  016288                     l2340:
 13874                           
 13875                           ;stkvar	_ff1 @ sp[(0)+-4]
 13876  016288  0EFF               	movlw	-1
 13877  01628A  AEE3               	btfss	plusw1,7,c
 13878  01628C  D024               	goto	l7136
 13879                           
 13880                           ;stkvar	_ff1 @ sp[(0)+-4]
 13881  01628E  0E00               	movlw	0
 13882  016290  6E3A               	movwf	(btemp+8)^0,c
 13883  016292  0E00               	movlw	0
 13884  016294  6E3B               	movwf	(btemp+9)^0,c
 13885  016296  0E00               	movlw	0
 13886  016298  6E3C               	movwf	(btemp+10)^0,c
 13887  01629A  0E80               	movlw	128
 13888  01629C  6E3D               	movwf	(btemp+11)^0,c
 13889  01629E  0EFC               	movlw	-4
 13890  0162A0  50E3               	movf	plusw1,w,c
 13891  0162A2  5E3A               	subwf	(btemp+8)^0,f,c
 13892  0162A4  0EFD               	movlw	-3
 13893  0162A6  50E3               	movf	plusw1,w,c
 13894  0162A8  5A3B               	subwfb	(btemp+9)^0,f,c
 13895  0162AA  0EFE               	movlw	-2
 13896  0162AC  50E3               	movf	plusw1,w,c
 13897  0162AE  5A3C               	subwfb	(btemp+10)^0,f,c
 13898  0162B0  0EFF               	movlw	-1
 13899  0162B2  50E3               	movf	plusw1,w,c
 13900  0162B4  5A3D               	subwfb	(btemp+11)^0,f,c
 13901                           
 13902                           ;stkvar	_ff1 @ sp[(0)+-4]
 13903  0162B6  0EFC               	movlw	-4
 13904  0162B8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13905  0162BE  0EFD               	movlw	-3
 13906  0162C0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13907  0162C6  0EFE               	movlw	-2
 13908  0162C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13909  0162CE  0EFF               	movlw	-1
 13910  0162D0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13911  0162D6                     l7136:
 13912                           
 13913                           ;stkvar	_ff2 @ sp[(0)+-8]
 13914  0162D6  0EFB               	movlw	-5
 13915  0162D8  AEE3               	btfss	plusw1,7,c
 13916  0162DA  D024               	goto	l7140
 13917                           
 13918                           ;stkvar	_ff2 @ sp[(0)+-8]
 13919  0162DC  0E00               	movlw	0
 13920  0162DE  6E3A               	movwf	(btemp+8)^0,c
 13921  0162E0  0E00               	movlw	0
 13922  0162E2  6E3B               	movwf	(btemp+9)^0,c
 13923  0162E4  0E00               	movlw	0
 13924  0162E6  6E3C               	movwf	(btemp+10)^0,c
 13925  0162E8  0E80               	movlw	128
 13926  0162EA  6E3D               	movwf	(btemp+11)^0,c
 13927  0162EC  0EF8               	movlw	-8
 13928  0162EE  50E3               	movf	plusw1,w,c
 13929  0162F0  5E3A               	subwf	(btemp+8)^0,f,c
 13930  0162F2  0EF9               	movlw	-7
 13931  0162F4  50E3               	movf	plusw1,w,c
 13932  0162F6  5A3B               	subwfb	(btemp+9)^0,f,c
 13933  0162F8  0EFA               	movlw	-6
 13934  0162FA  50E3               	movf	plusw1,w,c
 13935  0162FC  5A3C               	subwfb	(btemp+10)^0,f,c
 13936  0162FE  0EFB               	movlw	-5
 13937  016300  50E3               	movf	plusw1,w,c
 13938  016302  5A3D               	subwfb	(btemp+11)^0,f,c
 13939                           
 13940                           ;stkvar	_ff2 @ sp[(0)+-8]
 13941  016304  0EF8               	movlw	-8
 13942  016306  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13943  01630C  0EF9               	movlw	-7
 13944  01630E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13945  016314  0EFA               	movlw	-6
 13946  016316  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13947  01631C  0EFB               	movlw	-5
 13948  01631E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13949  016324                     l7140:
 13950                           
 13951                           ;stkvar	_ff1 @ sp[(0)+-4]
 13952  016324  0EFF               	movlw	-1
 13953  016326  7EE3               	btg	plusw1,7,c
 13954                           
 13955                           ;stkvar	_ff2 @ sp[(0)+-8]
 13956  016328  0EFB               	movlw	-5
 13957  01632A  7EE3               	btg	plusw1,7,c
 13958                           
 13959                           ;stkvar	_ff2 @ sp[(0)+-8]
 13960                           ;stkvar	_ff1 @ sp[(0)+-4]
 13961  01632C  50E1               	movf	fsr1l,w,c
 13962  01632E  0FFC               	addlw	-4
 13963  016330  6ED9               	movwf	fsr2l,c
 13964  016332  50E2               	movf	fsr1h,w,c
 13965  016334  6EDA               	movwf	fsr2h,c
 13966  016336  0EFF               	movlw	255
 13967  016338  22DA               	addwfc	fsr2h,f,c
 13968  01633A  0EF8               	movlw	-8
 13969  01633C  50E3               	movf	plusw1,w,c
 13970  01633E  5CDE               	subwf	postinc2,w,c
 13971  016340  0EF9               	movlw	-7
 13972  016342  50E3               	movf	plusw1,w,c
 13973  016344  58DE               	subwfb	postinc2,w,c
 13974  016346  0EFA               	movlw	-6
 13975  016348  50E3               	movf	plusw1,w,c
 13976  01634A  58DE               	subwfb	postinc2,w,c
 13977  01634C  0EFB               	movlw	-5
 13978  01634E  50E3               	movf	plusw1,w,c
 13979  016350  58DE               	subwfb	postinc2,w,c
 13980  016352  B0D8               	btfsc	status,0,c
 13981  016354  D002               	goto	l7148
 13982  016356  9032               	bcf	btemp& (0+255),0,c
 13983  016358  D001               	goto	l2347
 13984  01635A                     l7148:
 13985  01635A  8032               	bsf	btemp& (0+255),0,c
 13986  01635C                     l2347:
 13987                           
 13988                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 13989  01635C  0EF8               	movlw	248
 13990  01635E  26E1               	addwf	fsr1l,f,c
 13991  016360  0EFF               	movlw	255
 13992  016362  22E2               	addwfc	fsr1h,f,c
 13993  016364  0012               	return		;funcret
 13994  016366                     __end_of___flge:
 13995                           	opt callstack 0
 13996                           
 13997 ;; *************** function ___fleq *****************
 13998 ;; Defined at:
 13999 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14000 ;; Parameters:    Size  Location     Type
 14001 ;;  ff1             4  [STACK] long 
 14002 ;;  ff2             4  [STACK] long 
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;		None
 14005 ;; Return value:  Size  Location     Type
 14006 ;;		None               void
 14007 ;; Registers used:
 14008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/5
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14018 ;;Total ram usage:        0 bytes
 14019 ;; Hardware stack levels used:    1
 14020 ;; Hardware stack levels required when called:    6
 14021 ;; This function calls:
 14022 ;;		Nothing
 14023 ;; This function is called by:
 14024 ;;		_efgtoa
 14025 ;; This function uses a reentrant model
 14026 ;;
 14027                           
 14028                           	psect	text55
 14029  016F44                     __ptext55:
 14030                           	opt callstack 0
 14031  016F44                     ___fleq:
 14032                           	opt callstack 17
 14033                           
 14034                           ;stkvar	_ff1 @ sp[(0)+-4]
 14035                           
 14036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14037                           ;incstack = 0
 14038  016F44  50E1               	movf	fsr1l,w,c
 14039  016F46  0FFC               	addlw	-4
 14040  016F48  6ED9               	movwf	fsr2l,c
 14041  016F4A  50E2               	movf	fsr1h,w,c
 14042  016F4C  6EDA               	movwf	fsr2h,c
 14043  016F4E  0EFF               	movlw	255
 14044  016F50  22DA               	addwfc	fsr2h,f,c
 14045  016F52  0E00               	movlw	0
 14046  016F54  14DE               	andwf	postinc2,w,c
 14047  016F56  6E3A               	movwf	(btemp+8)^0,c
 14048  016F58  0E00               	movlw	0
 14049  016F5A  14DE               	andwf	postinc2,w,c
 14050  016F5C  6E3B               	movwf	(btemp+9)^0,c
 14051  016F5E  0E80               	movlw	128
 14052  016F60  14DE               	andwf	postinc2,w,c
 14053  016F62  6E3C               	movwf	(btemp+10)^0,c
 14054  016F64  0E7F               	movlw	127
 14055  016F66  14DE               	andwf	postinc2,w,c
 14056  016F68  6E3D               	movwf	(btemp+11)^0,c
 14057  016F6A  503A               	movf	(btemp+8)^0,w,c
 14058  016F6C  103B               	iorwf	(btemp+9)^0,w,c
 14059  016F6E  103C               	iorwf	(btemp+10)^0,w,c
 14060  016F70  103D               	iorwf	(btemp+11)^0,w,c
 14061  016F72  A4D8               	btfss	status,2,c
 14062  016F74  D008               	goto	l7114
 14063                           
 14064                           ;stkvar	_ff1 @ sp[(0)+-4]
 14065  016F76  0EFC               	movlw	-4
 14066  016F78  6AE3               	clrf	plusw1,c
 14067  016F7A  0EFD               	movlw	-3
 14068  016F7C  6AE3               	clrf	plusw1,c
 14069  016F7E  0EFE               	movlw	-2
 14070  016F80  6AE3               	clrf	plusw1,c
 14071  016F82  0EFF               	movlw	-1
 14072  016F84  6AE3               	clrf	plusw1,c
 14073  016F86                     l7114:
 14074                           
 14075                           ;stkvar	_ff2 @ sp[(0)+-8]
 14076  016F86  50E1               	movf	fsr1l,w,c
 14077  016F88  0FF8               	addlw	-8
 14078  016F8A  6ED9               	movwf	fsr2l,c
 14079  016F8C  50E2               	movf	fsr1h,w,c
 14080  016F8E  6EDA               	movwf	fsr2h,c
 14081  016F90  0EFF               	movlw	255
 14082  016F92  22DA               	addwfc	fsr2h,f,c
 14083  016F94  0E00               	movlw	0
 14084  016F96  14DE               	andwf	postinc2,w,c
 14085  016F98  6E3A               	movwf	(btemp+8)^0,c
 14086  016F9A  0E00               	movlw	0
 14087  016F9C  14DE               	andwf	postinc2,w,c
 14088  016F9E  6E3B               	movwf	(btemp+9)^0,c
 14089  016FA0  0E80               	movlw	128
 14090  016FA2  14DE               	andwf	postinc2,w,c
 14091  016FA4  6E3C               	movwf	(btemp+10)^0,c
 14092  016FA6  0E7F               	movlw	127
 14093  016FA8  14DE               	andwf	postinc2,w,c
 14094  016FAA  6E3D               	movwf	(btemp+11)^0,c
 14095  016FAC  503A               	movf	(btemp+8)^0,w,c
 14096  016FAE  103B               	iorwf	(btemp+9)^0,w,c
 14097  016FB0  103C               	iorwf	(btemp+10)^0,w,c
 14098  016FB2  103D               	iorwf	(btemp+11)^0,w,c
 14099  016FB4  A4D8               	btfss	status,2,c
 14100  016FB6  D008               	goto	l7118
 14101                           
 14102                           ;stkvar	_ff2 @ sp[(0)+-8]
 14103  016FB8  0EF8               	movlw	-8
 14104  016FBA  6AE3               	clrf	plusw1,c
 14105  016FBC  0EF9               	movlw	-7
 14106  016FBE  6AE3               	clrf	plusw1,c
 14107  016FC0  0EFA               	movlw	-6
 14108  016FC2  6AE3               	clrf	plusw1,c
 14109  016FC4  0EFB               	movlw	-5
 14110  016FC6  6AE3               	clrf	plusw1,c
 14111  016FC8                     l7118:
 14112                           
 14113                           ;stkvar	_ff2 @ sp[(0)+-8]
 14114                           ;stkvar	_ff1 @ sp[(0)+-4]
 14115  016FC8  50E1               	movf	fsr1l,w,c
 14116  016FCA  0FFC               	addlw	-4
 14117  016FCC  6ED9               	movwf	fsr2l,c
 14118  016FCE  50E2               	movf	fsr1h,w,c
 14119  016FD0  6EDA               	movwf	fsr2h,c
 14120  016FD2  0EFF               	movlw	255
 14121  016FD4  22DA               	addwfc	fsr2h,f,c
 14122  016FD6  0EF8               	movlw	-8
 14123  016FD8  50E3               	movf	plusw1,w,c
 14124  016FDA  18DE               	xorwf	postinc2,w,c
 14125  016FDC  E10D               	bnz	u6210
 14126  016FDE  0EF9               	movlw	-7
 14127  016FE0  50E3               	movf	plusw1,w,c
 14128  016FE2  18DE               	xorwf	postinc2,w,c
 14129  016FE4  E109               	bnz	u6210
 14130  016FE6  0EFA               	movlw	-6
 14131  016FE8  50E3               	movf	plusw1,w,c
 14132  016FEA  18DE               	xorwf	postinc2,w,c
 14133  016FEC  E105               	bnz	u6210
 14134  016FEE  0EFB               	movlw	-5
 14135  016FF0  50E3               	movf	plusw1,w,c
 14136  016FF2  18DE               	xorwf	postinc2,w,c
 14137  016FF4  B4D8               	btfsc	status,2,c
 14138  016FF6  D002               	goto	l7122
 14139  016FF8                     u6210:
 14140  016FF8  9032               	bcf	btemp& (0+255),0,c
 14141  016FFA  D001               	goto	l2336
 14142  016FFC                     l7122:
 14143  016FFC  8032               	bsf	btemp& (0+255),0,c
 14144  016FFE                     l2336:
 14145                           
 14146                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14147  016FFE  0EF8               	movlw	248
 14148  017000  26E1               	addwf	fsr1l,f,c
 14149  017002  0EFF               	movlw	255
 14150  017004  22E2               	addwfc	fsr1h,f,c
 14151  017006  0012               	return		;funcret
 14152  017008                     __end_of___fleq:
 14153                           	opt callstack 0
 14154                           
 14155 ;; *************** function ___fldiv *****************
 14156 ;; Defined at:
 14157 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;  b               4  [STACK] long 
 14160 ;;  a               4  [STACK] long 
 14161 ;; Auto vars:     Size  Location     Type
 14162 ;;  grs             4  [STACK] unsigned long 
 14163 ;;  rem             4  [STACK] unsigned long 
 14164 ;;  new_exp         2  [STACK] short 
 14165 ;;  aexp            1  [STACK] unsigned char 
 14166 ;;  bexp            1  [STACK] unsigned char 
 14167 ;;  sign            1  [STACK] unsigned char 
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  4  [STACK] unsigned char 
 14170 ;; Registers used:
 14171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14172 ;; Tracked objects:
 14173 ;;		On entry : 0/39
 14174 ;;		On exit  : 0/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14181 ;;Total ram usage:        0 bytes
 14182 ;; Hardware stack levels used:    1
 14183 ;; Hardware stack levels required when called:    6
 14184 ;; This function calls:
 14185 ;;		Nothing
 14186 ;; This function is called by:
 14187 ;;		_conv_raw_result
 14188 ;;		_efgtoa
 14189 ;; This function uses a reentrant model
 14190 ;;
 14191                           
 14192                           	psect	text56
 14193  012D68                     __ptext56:
 14194                           	opt callstack 0
 14195  012D68                     ___fldiv:
 14196                           	opt callstack 0
 14197                           
 14198                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14199  012D68  0E0D               	movlw	13
 14200  012D6A  26E1               	addwf	fsr1l,f,c
 14201  012D6C  0E00               	movlw	0
 14202  012D6E  22E2               	addwfc	fsr1h,f,c
 14203                           
 14204                           ;stkvar	_b @ sp[(-13)+-4]
 14205                           
 14206                           ;incstack = 0
 14207  012D70  0EF2               	movlw	242
 14208  012D72  24E1               	addwf	fsr1l,w,c
 14209  012D74  6ED9               	movwf	fsr2l,c
 14210  012D76  0EFF               	movlw	255
 14211  012D78  20E2               	addwfc	fsr1h,w,c
 14212  012D7A  6EDA               	movwf	fsr2h,c
 14213  012D7C  50DF               	movf	indf2,w,c
 14214  012D7E  6E3D               	movwf	(btemp+11)^0,c
 14215  012D80  0E80               	movlw	128
 14216  012D82  163D               	andwf	(btemp+11)^0,f,c
 14217                           
 14218                           ;stkvar	_sign @ sp[(-13)+12]
 14219  012D84  0EFF               	movlw	-1
 14220  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14221                           
 14222                           ;stkvar	_b @ sp[(-13)+-4]
 14223  012D8C  0EF2               	movlw	242
 14224  012D8E  24E1               	addwf	fsr1l,w,c
 14225  012D90  6ED9               	movwf	fsr2l,c
 14226  012D92  0EFF               	movlw	255
 14227  012D94  20E2               	addwfc	fsr1h,w,c
 14228  012D96  6EDA               	movwf	fsr2h,c
 14229  012D98  50DF               	movf	indf2,w,c
 14230  012D9A  6E3D               	movwf	(btemp+11)^0,c
 14231  012D9C  90D8               	bcf	status,0,c
 14232  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 14233  012DA0  6E3C               	movwf	(btemp+10)^0,c
 14234                           
 14235                           ;stkvar	_bexp @ sp[(-13)+11]
 14236  012DA2  0EFE               	movlw	-2
 14237  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14238                           
 14239                           ;stkvar	_b @ sp[(-13)+-4]
 14240  012DAA  0EF1               	movlw	241
 14241  012DAC  24E1               	addwf	fsr1l,w,c
 14242  012DAE  6ED9               	movwf	fsr2l,c
 14243  012DB0  0EFF               	movlw	255
 14244  012DB2  20E2               	addwfc	fsr1h,w,c
 14245  012DB4  6EDA               	movwf	fsr2h,c
 14246  012DB6  AEDF               	btfss	indf2,7,c
 14247  012DB8  D002               	goto	l6716
 14248                           
 14249                           ;stkvar	_bexp @ sp[(-13)+11]
 14250  012DBA  0EFE               	movlw	-2
 14251  012DBC  80E3               	bsf	plusw1,0,c
 14252  012DBE                     l6716:
 14253                           
 14254                           ;stkvar	_bexp @ sp[(-13)+11]
 14255  012DBE  0EFE               	movlw	-2
 14256  012DC0  50E3               	movf	plusw1,w,c
 14257  012DC2  B4D8               	btfsc	status,2,c
 14258  012DC4  D027               	goto	l6726
 14259                           
 14260                           ;stkvar	_bexp @ sp[(-13)+11]
 14261  012DC6  0EFE               	movlw	-2
 14262  012DC8  28E3               	incf	plusw1,w,c
 14263  012DCA  A4D8               	btfss	status,2,c
 14264  012DCC  D018               	goto	l6722
 14265  012DCE  0E00               	movlw	0
 14266  012DD0  6E3A               	movwf	(btemp+8)^0,c
 14267  012DD2  0E00               	movlw	0
 14268  012DD4  6E3B               	movwf	(btemp+9)^0,c
 14269  012DD6  0E00               	movlw	0
 14270  012DD8  6E3C               	movwf	(btemp+10)^0,c
 14271  012DDA  0E00               	movlw	0
 14272  012DDC  6E3D               	movwf	(btemp+11)^0,c
 14273                           
 14274                           ;stkvar	_b @ sp[(-13)+-4]
 14275  012DDE  0EEF               	movlw	-17
 14276  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14277  012DE6  0EF0               	movlw	-16
 14278  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14279  012DEE  0EF1               	movlw	-15
 14280  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14281  012DF6  0EF2               	movlw	-14
 14282  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14283  012DFE                     l6722:
 14284                           
 14285                           ;stkvar	_b @ sp[(-13)+-4]
 14286  012DFE  0EF1               	movlw	-15
 14287  012E00  8EE3               	bsf	plusw1,7,c
 14288                           
 14289                           ;stkvar	_b @ sp[(-13)+-4]
 14290  012E02  0EF2               	movlw	242
 14291  012E04  24E1               	addwf	fsr1l,w,c
 14292  012E06  6ED9               	movwf	fsr2l,c
 14293  012E08  0EFF               	movlw	255
 14294  012E0A  20E2               	addwfc	fsr1h,w,c
 14295  012E0C  6EDA               	movwf	fsr2h,c
 14296  012E0E  0E00               	movlw	0
 14297  012E10  6EDF               	movwf	indf2,c
 14298  012E12  D018               	goto	l6728
 14299  012E14                     l6726:
 14300  012E14  0E00               	movlw	0
 14301  012E16  6E3A               	movwf	(btemp+8)^0,c
 14302  012E18  0E00               	movlw	0
 14303  012E1A  6E3B               	movwf	(btemp+9)^0,c
 14304  012E1C  0E00               	movlw	0
 14305  012E1E  6E3C               	movwf	(btemp+10)^0,c
 14306  012E20  0E00               	movlw	0
 14307  012E22  6E3D               	movwf	(btemp+11)^0,c
 14308                           
 14309                           ;stkvar	_b @ sp[(-13)+-4]
 14310  012E24  0EEF               	movlw	-17
 14311  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14312  012E2C  0EF0               	movlw	-16
 14313  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14314  012E34  0EF1               	movlw	-15
 14315  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14316  012E3C  0EF2               	movlw	-14
 14317  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14318  012E44                     l6728:
 14319                           
 14320                           ;stkvar	_a @ sp[(-13)+-8]
 14321  012E44  0EEE               	movlw	238
 14322  012E46  24E1               	addwf	fsr1l,w,c
 14323  012E48  6ED9               	movwf	fsr2l,c
 14324  012E4A  0EFF               	movlw	255
 14325  012E4C  20E2               	addwfc	fsr1h,w,c
 14326  012E4E  6EDA               	movwf	fsr2h,c
 14327  012E50  50DF               	movf	indf2,w,c
 14328  012E52  6E3D               	movwf	(btemp+11)^0,c
 14329  012E54  0E80               	movlw	128
 14330  012E56  163D               	andwf	(btemp+11)^0,f,c
 14331                           
 14332                           ;stkvar	_sign @ sp[(-13)+12]
 14333  012E58  50E1               	movf	fsr1l,w,c
 14334  012E5A  0FFF               	addlw	-1
 14335  012E5C  6ED9               	movwf	fsr2l,c
 14336  012E5E  50E2               	movf	fsr1h,w,c
 14337  012E60  6EDA               	movwf	fsr2h,c
 14338  012E62  0EFF               	movlw	255
 14339  012E64  22DA               	addwfc	fsr2h,f,c
 14340  012E66  503D               	movf	(btemp+11)^0,w,c
 14341  012E68  1ADF               	xorwf	indf2,f,c
 14342                           
 14343                           ;stkvar	_a @ sp[(-13)+-8]
 14344  012E6A  0EEE               	movlw	238
 14345  012E6C  24E1               	addwf	fsr1l,w,c
 14346  012E6E  6ED9               	movwf	fsr2l,c
 14347  012E70  0EFF               	movlw	255
 14348  012E72  20E2               	addwfc	fsr1h,w,c
 14349  012E74  6EDA               	movwf	fsr2h,c
 14350  012E76  50DF               	movf	indf2,w,c
 14351  012E78  6E3D               	movwf	(btemp+11)^0,c
 14352  012E7A  90D8               	bcf	status,0,c
 14353  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 14354  012E7E  6E3C               	movwf	(btemp+10)^0,c
 14355                           
 14356                           ;stkvar	_aexp @ sp[(-13)+10]
 14357  012E80  0EFD               	movlw	-3
 14358  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14359                           
 14360                           ;stkvar	_a @ sp[(-13)+-8]
 14361  012E88  0EED               	movlw	237
 14362  012E8A  24E1               	addwf	fsr1l,w,c
 14363  012E8C  6ED9               	movwf	fsr2l,c
 14364  012E8E  0EFF               	movlw	255
 14365  012E90  20E2               	addwfc	fsr1h,w,c
 14366  012E92  6EDA               	movwf	fsr2h,c
 14367  012E94  AEDF               	btfss	indf2,7,c
 14368  012E96  D002               	goto	l6736
 14369                           
 14370                           ;stkvar	_aexp @ sp[(-13)+10]
 14371  012E98  0EFD               	movlw	-3
 14372  012E9A  80E3               	bsf	plusw1,0,c
 14373  012E9C                     l6736:
 14374                           
 14375                           ;stkvar	_aexp @ sp[(-13)+10]
 14376  012E9C  0EFD               	movlw	-3
 14377  012E9E  50E3               	movf	plusw1,w,c
 14378  012EA0  B4D8               	btfsc	status,2,c
 14379  012EA2  D027               	goto	l6746
 14380                           
 14381                           ;stkvar	_aexp @ sp[(-13)+10]
 14382  012EA4  0EFD               	movlw	-3
 14383  012EA6  28E3               	incf	plusw1,w,c
 14384  012EA8  A4D8               	btfss	status,2,c
 14385  012EAA  D018               	goto	l6742
 14386  012EAC  0E00               	movlw	0
 14387  012EAE  6E3A               	movwf	(btemp+8)^0,c
 14388  012EB0  0E00               	movlw	0
 14389  012EB2  6E3B               	movwf	(btemp+9)^0,c
 14390  012EB4  0E00               	movlw	0
 14391  012EB6  6E3C               	movwf	(btemp+10)^0,c
 14392  012EB8  0E00               	movlw	0
 14393  012EBA  6E3D               	movwf	(btemp+11)^0,c
 14394                           
 14395                           ;stkvar	_a @ sp[(-13)+-8]
 14396  012EBC  0EEB               	movlw	-21
 14397  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14398  012EC4  0EEC               	movlw	-20
 14399  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14400  012ECC  0EED               	movlw	-19
 14401  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14402  012ED4  0EEE               	movlw	-18
 14403  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14404  012EDC                     l6742:
 14405                           
 14406                           ;stkvar	_a @ sp[(-13)+-8]
 14407  012EDC  0EED               	movlw	-19
 14408  012EDE  8EE3               	bsf	plusw1,7,c
 14409                           
 14410                           ;stkvar	_a @ sp[(-13)+-8]
 14411  012EE0  0EEE               	movlw	238
 14412  012EE2  24E1               	addwf	fsr1l,w,c
 14413  012EE4  6ED9               	movwf	fsr2l,c
 14414  012EE6  0EFF               	movlw	255
 14415  012EE8  20E2               	addwfc	fsr1h,w,c
 14416  012EEA  6EDA               	movwf	fsr2h,c
 14417  012EEC  0E00               	movlw	0
 14418  012EEE  6EDF               	movwf	indf2,c
 14419  012EF0  D018               	goto	l6748
 14420  012EF2                     l6746:
 14421  012EF2  0E00               	movlw	0
 14422  012EF4  6E3A               	movwf	(btemp+8)^0,c
 14423  012EF6  0E00               	movlw	0
 14424  012EF8  6E3B               	movwf	(btemp+9)^0,c
 14425  012EFA  0E00               	movlw	0
 14426  012EFC  6E3C               	movwf	(btemp+10)^0,c
 14427  012EFE  0E00               	movlw	0
 14428  012F00  6E3D               	movwf	(btemp+11)^0,c
 14429                           
 14430                           ;stkvar	_a @ sp[(-13)+-8]
 14431  012F02  0EEB               	movlw	-21
 14432  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14433  012F0A  0EEC               	movlw	-20
 14434  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14435  012F12  0EED               	movlw	-19
 14436  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14437  012F1A  0EEE               	movlw	-18
 14438  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14439  012F22                     l6748:
 14440                           
 14441                           ;stkvar	_a @ sp[(-13)+-8]
 14442  012F22  0EEB               	movlw	-21
 14443  012F24  50E3               	movf	plusw1,w,c
 14444  012F26  E139               	bnz	l6760
 14445  012F28  0EEC               	movlw	-20
 14446  012F2A  50E3               	movf	plusw1,w,c
 14447  012F2C  E136               	bnz	l6760
 14448  012F2E  0EED               	movlw	-19
 14449  012F30  50E3               	movf	plusw1,w,c
 14450  012F32  E133               	bnz	l6760
 14451  012F34  0EEE               	movlw	-18
 14452  012F36  50E3               	movf	plusw1,w,c
 14453  012F38  A4D8               	btfss	status,2,c
 14454  012F3A  D02F               	goto	l6760
 14455                           
 14456                           ;stkvar	_b @ sp[(-13)+-4]
 14457  012F3C  0EEF               	movlw	-17
 14458  012F3E  6AE3               	clrf	plusw1,c
 14459  012F40  0EF0               	movlw	-16
 14460  012F42  6AE3               	clrf	plusw1,c
 14461  012F44  0EF1               	movlw	-15
 14462  012F46  6AE3               	clrf	plusw1,c
 14463  012F48  0EF2               	movlw	-14
 14464  012F4A  6AE3               	clrf	plusw1,c
 14465                           
 14466                           ;stkvar	_b @ sp[(-13)+-4]
 14467  012F4C  0EF1               	movlw	241
 14468  012F4E  24E1               	addwf	fsr1l,w,c
 14469  012F50  6ED9               	movwf	fsr2l,c
 14470  012F52  0EFF               	movlw	255
 14471  012F54  20E2               	addwfc	fsr1h,w,c
 14472  012F56  6EDA               	movwf	fsr2h,c
 14473  012F58  0E80               	movlw	128
 14474  012F5A  12DE               	iorwf	postinc2,f,c
 14475  012F5C  0E7F               	movlw	127
 14476  012F5E  12DD               	iorwf	postdec2,f,c
 14477  012F60                     l6754:
 14478                           
 14479                           ;stkvar	_sign @ sp[(-13)+12]
 14480  012F60  0EFF               	movlw	-1
 14481  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 14482                           
 14483                           ;stkvar	_b @ sp[(-13)+-4]
 14484  012F68  0EF2               	movlw	242
 14485  012F6A  24E1               	addwf	fsr1l,w,c
 14486  012F6C  6ED9               	movwf	fsr2l,c
 14487  012F6E  0EFF               	movlw	255
 14488  012F70  20E2               	addwfc	fsr1h,w,c
 14489  012F72  6EDA               	movwf	fsr2h,c
 14490  012F74  503D               	movf	(btemp+11)^0,w,c
 14491  012F76  12DF               	iorwf	indf2,f,c
 14492                           
 14493                           ;stkvar	_b @ sp[(-13)+-4]
 14494  012F78  0EEF               	movlw	-17
 14495  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 14496  012F80  0EF0               	movlw	-16
 14497  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 14498  012F88  0EF1               	movlw	-15
 14499  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 14500  012F90  0EF2               	movlw	-14
 14501  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 14502  012F98  D19F               	goto	l2659
 14503  012F9A                     l6760:
 14504                           
 14505                           ;stkvar	_bexp @ sp[(-13)+11]
 14506  012F9A  0EFE               	movlw	-2
 14507  012F9C  50E3               	movf	plusw1,w,c
 14508  012F9E  A4D8               	btfss	status,2,c
 14509  012FA0  D009               	goto	l6768
 14510  012FA2  0E00               	movlw	0
 14511  012FA4  6E32               	movwf	btemp^0,c
 14512  012FA6  0E00               	movlw	0
 14513  012FA8  6E33               	movwf	(btemp+1)^0,c
 14514  012FAA  0E00               	movlw	0
 14515  012FAC  6E34               	movwf	(btemp+2)^0,c
 14516  012FAE  0E00               	movlw	0
 14517  012FB0  6E35               	movwf	(btemp+3)^0,c
 14518  012FB2  D192               	goto	l2659
 14519  012FB4                     l6768:
 14520                           
 14521                           ;stkvar	_bexp @ sp[(-13)+11]
 14522  012FB4  0EFE               	movlw	-2
 14523  012FB6  50E3               	movf	plusw1,w,c
 14524  012FB8  6E3C               	movwf	(btemp+10)^0,c
 14525  012FBA  6A3D               	clrf	(btemp+11)^0,c
 14526                           
 14527                           ;stkvar	_aexp @ sp[(-13)+10]
 14528  012FBC  0EFD               	movlw	-3
 14529  012FBE  50E3               	movf	plusw1,w,c
 14530  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 14531  012FC2  0E00               	movlw	0
 14532  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 14533  012FC6  0E7F               	movlw	127
 14534  012FC8  263C               	addwf	(btemp+10)^0,f,c
 14535  012FCA  0E00               	movlw	0
 14536  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 14537                           
 14538                           ;stkvar	_new_exp @ sp[(-13)+8]
 14539  012FCE  0EFB               	movlw	-5
 14540  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14541  012FD6  0EFC               	movlw	-4
 14542  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14543                           
 14544                           ;stkvar	_b @ sp[(-13)+-4]
 14545  012FDE  0EEF               	movlw	-17
 14546  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 14547  012FE6  0EF0               	movlw	-16
 14548  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 14549  012FEE  0EF1               	movlw	-15
 14550  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 14551  012FF6  0EF2               	movlw	-14
 14552  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 14553                           
 14554                           ;stkvar	_rem @ sp[(-13)+4]
 14555  012FFE  0EF7               	movlw	-9
 14556  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14557  013006  0EF8               	movlw	-8
 14558  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14559  01300E  0EF9               	movlw	-7
 14560  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14561  013016  0EFA               	movlw	-6
 14562  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14563                           
 14564                           ;stkvar	_b @ sp[(-13)+-4]
 14565  01301E  0EEF               	movlw	-17
 14566  013020  6AE3               	clrf	plusw1,c
 14567  013022  0EF0               	movlw	-16
 14568  013024  6AE3               	clrf	plusw1,c
 14569  013026  0EF1               	movlw	-15
 14570  013028  6AE3               	clrf	plusw1,c
 14571  01302A  0EF2               	movlw	-14
 14572  01302C  6AE3               	clrf	plusw1,c
 14573                           
 14574                           ;stkvar	_grs @ sp[(-13)+0]
 14575  01302E  0EF3               	movlw	-13
 14576  013030  6AE3               	clrf	plusw1,c
 14577  013032  0EF4               	movlw	-12
 14578  013034  6AE3               	clrf	plusw1,c
 14579  013036  0EF5               	movlw	-11
 14580  013038  6AE3               	clrf	plusw1,c
 14581  01303A  0EF6               	movlw	-10
 14582  01303C  6AE3               	clrf	plusw1,c
 14583                           
 14584                           ;stkvar	_aexp @ sp[(-13)+10]
 14585  01303E  0EFD               	movlw	-3
 14586  013040  6AE3               	clrf	plusw1,c
 14587  013042  D050               	goto	l6796
 14588  013044                     l6778:
 14589                           
 14590                           ;stkvar	_aexp @ sp[(-13)+10]
 14591  013044  0EFD               	movlw	-3
 14592  013046  50E3               	movf	plusw1,w,c
 14593  013048  B4D8               	btfsc	status,2,c
 14594  01304A  D020               	goto	l6788
 14595                           
 14596                           ;stkvar	_rem @ sp[(-13)+4]
 14597  01304C  90D8               	bcf	status,0,c
 14598  01304E  0EF7               	movlw	-9
 14599  013050  36E3               	rlcf	plusw1,f,c
 14600  013052  0EF8               	movlw	-8
 14601  013054  36E3               	rlcf	plusw1,f,c
 14602  013056  0EF9               	movlw	-7
 14603  013058  36E3               	rlcf	plusw1,f,c
 14604  01305A  0EFA               	movlw	-6
 14605  01305C  36E3               	rlcf	plusw1,f,c
 14606                           
 14607                           ;stkvar	_b @ sp[(-13)+-4]
 14608  01305E  90D8               	bcf	status,0,c
 14609  013060  0EEF               	movlw	-17
 14610  013062  36E3               	rlcf	plusw1,f,c
 14611  013064  0EF0               	movlw	-16
 14612  013066  36E3               	rlcf	plusw1,f,c
 14613  013068  0EF1               	movlw	-15
 14614  01306A  36E3               	rlcf	plusw1,f,c
 14615  01306C  0EF2               	movlw	-14
 14616  01306E  36E3               	rlcf	plusw1,f,c
 14617                           
 14618                           ;stkvar	_grs @ sp[(-13)+0]
 14619  013070  0EF6               	movlw	-10
 14620  013072  AEE3               	btfss	plusw1,7,c
 14621  013074  D002               	goto	l6786
 14622                           
 14623                           ;stkvar	_b @ sp[(-13)+-4]
 14624  013076  0EEF               	movlw	-17
 14625  013078  80E3               	bsf	plusw1,0,c
 14626  01307A                     l6786:
 14627                           
 14628                           ;stkvar	_grs @ sp[(-13)+0]
 14629  01307A  90D8               	bcf	status,0,c
 14630  01307C  0EF3               	movlw	-13
 14631  01307E  36E3               	rlcf	plusw1,f,c
 14632  013080  0EF4               	movlw	-12
 14633  013082  36E3               	rlcf	plusw1,f,c
 14634  013084  0EF5               	movlw	-11
 14635  013086  36E3               	rlcf	plusw1,f,c
 14636  013088  0EF6               	movlw	-10
 14637  01308A  36E3               	rlcf	plusw1,f,c
 14638  01308C                     l6788:
 14639                           
 14640                           ;stkvar	_a @ sp[(-13)+-8]
 14641                           ;stkvar	_rem @ sp[(-13)+4]
 14642  01308C  50E1               	movf	fsr1l,w,c
 14643  01308E  0FF7               	addlw	-9
 14644  013090  6ED9               	movwf	fsr2l,c
 14645  013092  50E2               	movf	fsr1h,w,c
 14646  013094  6EDA               	movwf	fsr2h,c
 14647  013096  0EFF               	movlw	255
 14648  013098  22DA               	addwfc	fsr2h,f,c
 14649  01309A  0EEB               	movlw	-21
 14650  01309C  50E3               	movf	plusw1,w,c
 14651  01309E  5CDE               	subwf	postinc2,w,c
 14652  0130A0  0EEC               	movlw	-20
 14653  0130A2  50E3               	movf	plusw1,w,c
 14654  0130A4  58DE               	subwfb	postinc2,w,c
 14655  0130A6  0EED               	movlw	-19
 14656  0130A8  50E3               	movf	plusw1,w,c
 14657  0130AA  58DE               	subwfb	postinc2,w,c
 14658  0130AC  0EEE               	movlw	-18
 14659  0130AE  50E3               	movf	plusw1,w,c
 14660  0130B0  58DE               	subwfb	postinc2,w,c
 14661  0130B2  A0D8               	btfss	status,0,c
 14662  0130B4  D015               	goto	l6794
 14663                           
 14664                           ;stkvar	_grs @ sp[(-13)+0]
 14665  0130B6  0EF6               	movlw	-10
 14666  0130B8  8CE3               	bsf	plusw1,6,c
 14667                           
 14668                           ;stkvar	_a @ sp[(-13)+-8]
 14669                           ;stkvar	_rem @ sp[(-13)+4]
 14670  0130BA  50E1               	movf	fsr1l,w,c
 14671  0130BC  0FF7               	addlw	-9
 14672  0130BE  6ED9               	movwf	fsr2l,c
 14673  0130C0  50E2               	movf	fsr1h,w,c
 14674  0130C2  6EDA               	movwf	fsr2h,c
 14675  0130C4  0EFF               	movlw	255
 14676  0130C6  22DA               	addwfc	fsr2h,f,c
 14677  0130C8  0EEB               	movlw	-21
 14678  0130CA  50E3               	movf	plusw1,w,c
 14679  0130CC  5EDE               	subwf	postinc2,f,c
 14680  0130CE  0EEC               	movlw	-20
 14681  0130D0  50E3               	movf	plusw1,w,c
 14682  0130D2  5ADE               	subwfb	postinc2,f,c
 14683  0130D4  0EED               	movlw	-19
 14684  0130D6  50E3               	movf	plusw1,w,c
 14685  0130D8  5ADE               	subwfb	postinc2,f,c
 14686  0130DA  0EEE               	movlw	-18
 14687  0130DC  50E3               	movf	plusw1,w,c
 14688  0130DE  5ADE               	subwfb	postinc2,f,c
 14689  0130E0                     l6794:
 14690                           
 14691                           ;stkvar	_aexp @ sp[(-13)+10]
 14692  0130E0  0EFD               	movlw	-3
 14693  0130E2  2AE3               	incf	plusw1,f,c
 14694  0130E4                     l6796:
 14695                           
 14696                           ;stkvar	_aexp @ sp[(-13)+10]
 14697  0130E4  0EFD               	movlw	-3
 14698  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 14699  0130EC  0E19               	movlw	25
 14700  0130EE  6432               	cpfsgt	btemp^0,c
 14701  0130F0  D7A9               	goto	l6778
 14702                           
 14703                           ;stkvar	_rem @ sp[(-13)+4]
 14704  0130F2  0EF7               	movlw	-9
 14705  0130F4  50E3               	movf	plusw1,w,c
 14706  0130F6  E10A               	bnz	u5710
 14707  0130F8  0EF8               	movlw	-8
 14708  0130FA  50E3               	movf	plusw1,w,c
 14709  0130FC  E107               	bnz	u5710
 14710  0130FE  0EF9               	movlw	-7
 14711  013100  50E3               	movf	plusw1,w,c
 14712  013102  E104               	bnz	u5710
 14713  013104  0EFA               	movlw	-6
 14714  013106  50E3               	movf	plusw1,w,c
 14715  013108  B4D8               	btfsc	status,2,c
 14716  01310A  D024               	goto	l6812
 14717  01310C                     u5710:
 14718                           
 14719                           ;stkvar	_grs @ sp[(-13)+0]
 14720  01310C  0EF3               	movlw	-13
 14721  01310E  80E3               	bsf	plusw1,0,c
 14722  013110  D021               	goto	l6812
 14723  013112                     l6802:
 14724                           
 14725                           ;stkvar	_b @ sp[(-13)+-4]
 14726  013112  90D8               	bcf	status,0,c
 14727  013114  0EEF               	movlw	-17
 14728  013116  36E3               	rlcf	plusw1,f,c
 14729  013118  0EF0               	movlw	-16
 14730  01311A  36E3               	rlcf	plusw1,f,c
 14731  01311C  0EF1               	movlw	-15
 14732  01311E  36E3               	rlcf	plusw1,f,c
 14733  013120  0EF2               	movlw	-14
 14734  013122  36E3               	rlcf	plusw1,f,c
 14735                           
 14736                           ;stkvar	_grs @ sp[(-13)+0]
 14737  013124  0EF6               	movlw	-10
 14738  013126  AEE3               	btfss	plusw1,7,c
 14739  013128  D002               	goto	l6808
 14740                           
 14741                           ;stkvar	_b @ sp[(-13)+-4]
 14742  01312A  0EEF               	movlw	-17
 14743  01312C  80E3               	bsf	plusw1,0,c
 14744  01312E                     l6808:
 14745                           
 14746                           ;stkvar	_grs @ sp[(-13)+0]
 14747  01312E  90D8               	bcf	status,0,c
 14748  013130  0EF3               	movlw	-13
 14749  013132  36E3               	rlcf	plusw1,f,c
 14750  013134  0EF4               	movlw	-12
 14751  013136  36E3               	rlcf	plusw1,f,c
 14752  013138  0EF5               	movlw	-11
 14753  01313A  36E3               	rlcf	plusw1,f,c
 14754  01313C  0EF6               	movlw	-10
 14755  01313E  36E3               	rlcf	plusw1,f,c
 14756                           
 14757                           ;stkvar	_new_exp @ sp[(-13)+8]
 14758  013140  50E1               	movf	fsr1l,w,c
 14759  013142  0FFB               	addlw	-5
 14760  013144  6ED9               	movwf	fsr2l,c
 14761  013146  50E2               	movf	fsr1h,w,c
 14762  013148  6EDA               	movwf	fsr2h,c
 14763  01314A  0EFF               	movlw	255
 14764  01314C  22DA               	addwfc	fsr2h,f,c
 14765  01314E  06DE               	decf	postinc2,f,c
 14766  013150  0E00               	movlw	0
 14767  013152  5ADD               	subwfb	postdec2,f,c
 14768  013154                     l6812:
 14769                           
 14770                           ;stkvar	_b @ sp[(-13)+-4]
 14771  013154  0EF1               	movlw	-15
 14772  013156  AEE3               	btfss	plusw1,7,c
 14773  013158  D7DC               	goto	l6802
 14774                           
 14775                           ;stkvar	_aexp @ sp[(-13)+10]
 14776  01315A  0EFD               	movlw	-3
 14777  01315C  6AE3               	clrf	plusw1,c
 14778                           
 14779                           ;stkvar	_grs @ sp[(-13)+0]
 14780  01315E  0EF6               	movlw	-10
 14781  013160  AEE3               	btfss	plusw1,7,c
 14782  013162  D020               	goto	l6826
 14783                           
 14784                           ;stkvar	_grs @ sp[(-13)+0]
 14785  013164  50E1               	movf	fsr1l,w,c
 14786  013166  0FF3               	addlw	-13
 14787  013168  6ED9               	movwf	fsr2l,c
 14788  01316A  50E2               	movf	fsr1h,w,c
 14789  01316C  6EDA               	movwf	fsr2h,c
 14790  01316E  0EFF               	movlw	255
 14791  013170  22DA               	addwfc	fsr2h,f,c
 14792  013172  0EFF               	movlw	255
 14793  013174  14DE               	andwf	postinc2,w,c
 14794  013176  6E3A               	movwf	(btemp+8)^0,c
 14795  013178  0EFF               	movlw	255
 14796  01317A  14DE               	andwf	postinc2,w,c
 14797  01317C  6E3B               	movwf	(btemp+9)^0,c
 14798  01317E  0EFF               	movlw	255
 14799  013180  14DE               	andwf	postinc2,w,c
 14800  013182  6E3C               	movwf	(btemp+10)^0,c
 14801  013184  0E7F               	movlw	127
 14802  013186  14DE               	andwf	postinc2,w,c
 14803  013188  6E3D               	movwf	(btemp+11)^0,c
 14804  01318A  503A               	movf	(btemp+8)^0,w,c
 14805  01318C  103B               	iorwf	(btemp+9)^0,w,c
 14806  01318E  103C               	iorwf	(btemp+10)^0,w,c
 14807  013190  103D               	iorwf	(btemp+11)^0,w,c
 14808  013192  B4D8               	btfsc	status,2,c
 14809  013194  D004               	goto	l6822
 14810  013196                     u5750:
 14811                           
 14812                           ;stkvar	_aexp @ sp[(-13)+10]
 14813  013196  0EFD               	movlw	-3
 14814  013198  6AE3               	clrf	plusw1,c
 14815  01319A  2AE3               	incf	plusw1,f,c
 14816  01319C  D003               	goto	l6826
 14817  01319E                     l6822:
 14818                           
 14819                           ;stkvar	_b @ sp[(-13)+-4]
 14820  01319E  0EEF               	movlw	-17
 14821  0131A0  B0E3               	btfsc	plusw1,0,c
 14822  0131A2  D7F9               	goto	u5750
 14823  0131A4                     l6826:
 14824                           
 14825                           ;stkvar	_aexp @ sp[(-13)+10]
 14826  0131A4  0EFD               	movlw	-3
 14827  0131A6  50E3               	movf	plusw1,w,c
 14828  0131A8  B4D8               	btfsc	status,2,c
 14829  0131AA  D036               	goto	l6836
 14830                           
 14831                           ;stkvar	_b @ sp[(-13)+-4]
 14832  0131AC  50E1               	movf	fsr1l,w,c
 14833  0131AE  0FEF               	addlw	-17
 14834  0131B0  6ED9               	movwf	fsr2l,c
 14835  0131B2  50E2               	movf	fsr1h,w,c
 14836  0131B4  6EDA               	movwf	fsr2h,c
 14837  0131B6  0EFF               	movlw	255
 14838  0131B8  22DA               	addwfc	fsr2h,f,c
 14839  0131BA  2ADE               	incf	postinc2,f,c
 14840  0131BC  0E00               	movlw	0
 14841  0131BE  22DE               	addwfc	postinc2,f,c
 14842  0131C0  22DE               	addwfc	postinc2,f,c
 14843  0131C2  22DE               	addwfc	postinc2,f,c
 14844                           
 14845                           ;stkvar	_b @ sp[(-13)+-4]
 14846  0131C4  0EF2               	movlw	-14
 14847  0131C6  A0E3               	btfss	plusw1,0,c
 14848  0131C8  D027               	goto	l6836
 14849  0131CA  0E01               	movlw	1
 14850  0131CC  6E3D               	movwf	(btemp+11)^0,c
 14851                           
 14852                           ;stkvar	_b @ sp[(-13)+-4]
 14853  0131CE  50E1               	movf	fsr1l,w,c
 14854  0131D0  0FEF               	addlw	-17
 14855  0131D2  6ED9               	movwf	fsr2l,c
 14856  0131D4  50E2               	movf	fsr1h,w,c
 14857  0131D6  6EDA               	movwf	fsr2h,c
 14858  0131D8  0EFF               	movlw	255
 14859  0131DA  22DA               	addwfc	fsr2h,f,c
 14860  0131DC  283D               	incf	(btemp+11)^0,w,c
 14861  0131DE  52DE               	movf	postinc2,f,c
 14862  0131E0  D008               	goto	u5790
 14863  0131E2                     u5795:
 14864  0131E2  52DE               	movf	postinc2,f,c
 14865  0131E4  90D8               	bcf	status,0,c
 14866  0131E6  BEDC               	btfsc	preinc2,7,c
 14867  0131E8  80D8               	bsf	status,0,c
 14868  0131EA  32DD               	rrcf	postdec2,f,c
 14869  0131EC  32DD               	rrcf	postdec2,f,c
 14870  0131EE  32DD               	rrcf	postdec2,f,c
 14871  0131F0  32DE               	rrcf	postinc2,f,c
 14872  0131F2                     u5790:
 14873  0131F2  2EE8               	decfsz	wreg,f,c
 14874  0131F4  D7F6               	goto	u5795
 14875                           
 14876                           ;stkvar	_new_exp @ sp[(-13)+8]
 14877  0131F6  0EFB               	movlw	-5
 14878  0131F8  50E3               	movf	plusw1,w,c
 14879  0131FA  0F01               	addlw	1
 14880  0131FC  6E32               	movwf	btemp^0,c
 14881  0131FE  0EFB               	movlw	-5
 14882  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 14883  013206  6A32               	clrf	btemp^0,c
 14884  013208  0EFC               	movlw	-4
 14885  01320A  50E3               	movf	plusw1,w,c
 14886  01320C  2032               	addwfc	btemp^0,w,c
 14887  01320E  6E32               	movwf	btemp^0,c
 14888  013210  0EFC               	movlw	-4
 14889  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 14890  013218                     l6836:
 14891                           
 14892                           ;stkvar	_new_exp @ sp[(-13)+8]
 14893  013218  0EFC               	movlw	-4
 14894  01321A  BEE3               	btfsc	plusw1,7,c
 14895  01321C  D01B               	goto	l6842
 14896  01321E  0EFC               	movlw	-4
 14897  013220  50E3               	movf	plusw1,w,c
 14898  013222  E104               	bnz	u5800
 14899  013224  0EFB               	movlw	-5
 14900  013226  28E3               	incf	plusw1,w,c
 14901  013228  A0D8               	btfss	status,0,c
 14902  01322A  D014               	goto	l6842
 14903  01322C                     u5800:
 14904  01322C  0EFF               	movlw	255
 14905  01322E  6E3C               	movwf	(btemp+10)^0,c
 14906  013230  0E00               	movlw	0
 14907  013232  6E3D               	movwf	(btemp+11)^0,c
 14908                           
 14909                           ;stkvar	_new_exp @ sp[(-13)+8]
 14910  013234  0EFB               	movlw	-5
 14911  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14912  01323C  0EFC               	movlw	-4
 14913  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14914                           
 14915                           ;stkvar	_b @ sp[(-13)+-4]
 14916  013244  0EEF               	movlw	-17
 14917  013246  6AE3               	clrf	plusw1,c
 14918  013248  0EF0               	movlw	-16
 14919  01324A  6AE3               	clrf	plusw1,c
 14920  01324C  0EF1               	movlw	-15
 14921  01324E  6AE3               	clrf	plusw1,c
 14922  013250  0EF2               	movlw	-14
 14923  013252  6AE3               	clrf	plusw1,c
 14924  013254                     l6842:
 14925                           
 14926                           ;stkvar	_new_exp @ sp[(-13)+8]
 14927  013254  0EFC               	movlw	-4
 14928  013256  BEE3               	btfsc	plusw1,7,c
 14929  013258  D007               	goto	u5810
 14930  01325A  0EFC               	movlw	-4
 14931  01325C  50E3               	movf	plusw1,w,c
 14932  01325E  E112               	bnz	l6848
 14933  013260  0EFB               	movlw	-5
 14934  013262  04E3               	decf	plusw1,w,c
 14935  013264  B0D8               	btfsc	status,0,c
 14936  013266  D00E               	goto	l6848
 14937  013268                     u5810:
 14938                           
 14939                           ;stkvar	_new_exp @ sp[(-13)+8]
 14940  013268  0EFB               	movlw	-5
 14941  01326A  6AE3               	clrf	plusw1,c
 14942  01326C  0EFC               	movlw	-4
 14943  01326E  6AE3               	clrf	plusw1,c
 14944                           
 14945                           ;stkvar	_b @ sp[(-13)+-4]
 14946  013270  0EEF               	movlw	-17
 14947  013272  6AE3               	clrf	plusw1,c
 14948  013274  0EF0               	movlw	-16
 14949  013276  6AE3               	clrf	plusw1,c
 14950  013278  0EF1               	movlw	-15
 14951  01327A  6AE3               	clrf	plusw1,c
 14952  01327C  0EF2               	movlw	-14
 14953  01327E  6AE3               	clrf	plusw1,c
 14954                           
 14955                           ;stkvar	_sign @ sp[(-13)+12]
 14956  013280  0EFF               	movlw	-1
 14957  013282  6AE3               	clrf	plusw1,c
 14958  013284                     l6848:
 14959                           
 14960                           ;stkvar	_new_exp @ sp[(-13)+8]
 14961                           ;stkvar	_bexp @ sp[(-13)+11]
 14962  013284  0EFB               	movlw	-5
 14963  013286  006F FF8C  F032    	movff	plusw1,btemp
 14964  01328C  0EFE               	movlw	-2
 14965  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 14966                           
 14967                           ;stkvar	_bexp @ sp[(-13)+11]
 14968  013294  0EFE               	movlw	-2
 14969  013296  A0E3               	btfss	plusw1,0,c
 14970  013298  D009               	goto	l6854
 14971                           
 14972                           ;stkvar	_b @ sp[(-13)+-4]
 14973  01329A  0EF1               	movlw	241
 14974  01329C  24E1               	addwf	fsr1l,w,c
 14975  01329E  6ED9               	movwf	fsr2l,c
 14976  0132A0  0EFF               	movlw	255
 14977  0132A2  20E2               	addwfc	fsr1h,w,c
 14978  0132A4  6EDA               	movwf	fsr2h,c
 14979  0132A6  0E00               	movlw	0
 14980  0132A8  8EDB               	bsf	plusw2,7,c
 14981  0132AA  D008               	goto	l6856
 14982  0132AC                     l6854:
 14983                           
 14984                           ;stkvar	_b @ sp[(-13)+-4]
 14985  0132AC  0EF1               	movlw	241
 14986  0132AE  24E1               	addwf	fsr1l,w,c
 14987  0132B0  6ED9               	movwf	fsr2l,c
 14988  0132B2  0EFF               	movlw	255
 14989  0132B4  20E2               	addwfc	fsr1h,w,c
 14990  0132B6  6EDA               	movwf	fsr2h,c
 14991  0132B8  0E7F               	movlw	127
 14992  0132BA  16DF               	andwf	indf2,f,c
 14993  0132BC                     l6856:
 14994                           
 14995                           ;stkvar	_b @ sp[(-13)+-4]
 14996  0132BC  0EF2               	movlw	242
 14997  0132BE  24E1               	addwf	fsr1l,w,c
 14998  0132C0  6ED9               	movwf	fsr2l,c
 14999  0132C2  0EFF               	movlw	255
 15000  0132C4  20E2               	addwfc	fsr1h,w,c
 15001  0132C6  6EDA               	movwf	fsr2h,c
 15002                           
 15003                           ;stkvar	_bexp @ sp[(-13)+11]
 15004  0132C8  0EFE               	movlw	-2
 15005  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 15006  0132D0  90D8               	bcf	status,0,c
 15007  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 15008  0132D4  6EDF               	movwf	indf2,c
 15009  0132D6  D644               	goto	l6754
 15010  0132D8                     l2659:
 15011                           
 15012                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15013  0132D8  0EEB               	movlw	235
 15014  0132DA  26E1               	addwf	fsr1l,f,c
 15015  0132DC  0EFF               	movlw	255
 15016  0132DE  22E2               	addwfc	fsr1h,f,c
 15017  0132E0  0012               	return		;funcret
 15018  0132E2                     __end_of___fldiv:
 15019                           	opt callstack 0
 15020                           
 15021 ;; *************** function ___awmod *****************
 15022 ;; Defined at:
 15023 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15024 ;; Parameters:    Size  Location     Type
 15025 ;;  dividend        2  [STACK] int 
 15026 ;;  divisor         2  [STACK] int 
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;  sign            1  [STACK] unsigned char 
 15029 ;;  counter         1  [STACK] unsigned char 
 15030 ;; Return value:  Size  Location     Type
 15031 ;;                  2  [STACK] int 
 15032 ;; Registers used:
 15033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/5
 15036 ;;		On exit  : 0/0
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15043 ;;Total ram usage:        0 bytes
 15044 ;; Hardware stack levels used:    1
 15045 ;; Hardware stack levels required when called:    6
 15046 ;; This function calls:
 15047 ;;		Nothing
 15048 ;; This function is called by:
 15049 ;;		_efgtoa
 15050 ;; This function uses a reentrant model
 15051 ;;
 15052                           
 15053                           	psect	text57
 15054  01684E                     __ptext57:
 15055                           	opt callstack 0
 15056  01684E                     ___awmod:
 15057                           	opt callstack 0
 15058                           
 15059                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15060  01684E  52E6               	movf	postinc1,f,c
 15061  016850  52E6               	movf	postinc1,f,c
 15062                           
 15063                           ;stkvar	_sign @ sp[(-2)+0]
 15064                           
 15065                           ;incstack = 0
 15066  016852  0EFE               	movlw	-2
 15067  016854  6AE3               	clrf	plusw1,c
 15068                           
 15069                           ;stkvar	_dividend @ sp[(-2)+-2]
 15070  016856  0EFD               	movlw	-3
 15071  016858  AEE3               	btfss	plusw1,7,c
 15072  01685A  D009               	goto	l7080
 15073                           
 15074                           ;stkvar	_dividend @ sp[(-2)+-2]
 15075                           ;stkvar	_dividend @ sp[(-2)+-2]
 15076  01685C  0EFC               	movlw	-4
 15077  01685E  6CE3               	negf	plusw1,c
 15078  016860  0EFD               	movlw	-3
 15079  016862  1EE3               	comf	plusw1,f,c
 15080  016864  B0D8               	btfsc	status,0,c
 15081  016866  2AE3               	incf	plusw1,f,c
 15082                           
 15083                           ;stkvar	_sign @ sp[(-2)+0]
 15084  016868  0EFE               	movlw	-2
 15085  01686A  6AE3               	clrf	plusw1,c
 15086  01686C  2AE3               	incf	plusw1,f,c
 15087  01686E                     l7080:
 15088                           
 15089                           ;stkvar	_divisor @ sp[(-2)+-4]
 15090  01686E  0EFB               	movlw	-5
 15091  016870  AEE3               	btfss	plusw1,7,c
 15092  016872  D006               	goto	l7084
 15093                           
 15094                           ;stkvar	_divisor @ sp[(-2)+-4]
 15095                           ;stkvar	_divisor @ sp[(-2)+-4]
 15096  016874  0EFA               	movlw	-6
 15097  016876  6CE3               	negf	plusw1,c
 15098  016878  0EFB               	movlw	-5
 15099  01687A  1EE3               	comf	plusw1,f,c
 15100  01687C  B0D8               	btfsc	status,0,c
 15101  01687E  2AE3               	incf	plusw1,f,c
 15102  016880                     l7084:
 15103                           
 15104                           ;stkvar	_divisor @ sp[(-2)+-4]
 15105  016880  0EFA               	movlw	-6
 15106  016882  006F FF8C  F032    	movff	plusw1,btemp
 15107  016888  0EFB               	movlw	-5
 15108  01688A  50E3               	movf	plusw1,w,c
 15109  01688C  1032               	iorwf	btemp^0,w,c
 15110  01688E  B4D8               	btfsc	status,2,c
 15111  016890  D053               	goto	u6170
 15112                           
 15113                           ;stkvar	_counter @ sp[(-2)+1]
 15114  016892  0EFF               	movlw	-1
 15115  016894  6AE3               	clrf	plusw1,c
 15116  016896  D012               	goto	L15
 15117  016898                     l7088:
 15118                           
 15119                           ;stkvar	_divisor @ sp[(-2)+-4]
 15120  016898  0EFA               	movlw	-6
 15121  01689A  50E3               	movf	plusw1,w,c
 15122  01689C  90D8               	bcf	status,0,c
 15123  01689E  34E8               	rlcf	wreg,w,c
 15124  0168A0  6E32               	movwf	btemp^0,c
 15125  0168A2  0EFA               	movlw	-6
 15126  0168A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 15127  0168AA  0EFB               	movlw	-5
 15128  0168AC  50E3               	movf	plusw1,w,c
 15129  0168AE  34E8               	rlcf	wreg,w,c
 15130  0168B0  6E32               	movwf	btemp^0,c
 15131  0168B2  0EFB               	movlw	-5
 15132  0168B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 15133                           
 15134                           ;stkvar	_counter @ sp[(-2)+1]
 15135  0168BA  0EFF               	movlw	-1
 15136  0168BC                     L15:
 15137  0168BC  2AE3               	incf	plusw1,f,c
 15138                           
 15139                           ;stkvar	_divisor @ sp[(-2)+-4]
 15140  0168BE  0EFB               	movlw	-5
 15141  0168C0  AEE3               	btfss	plusw1,7,c
 15142  0168C2  D7EA               	goto	l7088
 15143  0168C4                     u6150:
 15144                           
 15145                           ;stkvar	_divisor @ sp[(-2)+-4]
 15146  0168C4  0EFA               	movlw	-6
 15147  0168C6  006F FF8C  F03C    	movff	plusw1,btemp+10
 15148  0168CC  0EFB               	movlw	-5
 15149  0168CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 15150                           
 15151                           ;stkvar	_dividend @ sp[(-2)+-2]
 15152  0168D4  0EFC               	movlw	-4
 15153  0168D6  006F FF8C  F03A    	movff	plusw1,btemp+8
 15154  0168DC  0EFD               	movlw	-3
 15155  0168DE  006F FF8C  F03B    	movff	plusw1,btemp+9
 15156  0168E4  503C               	movf	(btemp+10)^0,w,c
 15157  0168E6  5C3A               	subwf	(btemp+8)^0,w,c
 15158  0168E8  503D               	movf	(btemp+11)^0,w,c
 15159  0168EA  583B               	subwfb	(btemp+9)^0,w,c
 15160  0168EC  A0D8               	btfss	status,0,c
 15161  0168EE  D014               	goto	l7098
 15162                           
 15163                           ;stkvar	_divisor @ sp[(-2)+-4]
 15164                           ;stkvar	_dividend @ sp[(-2)+-2]
 15165  0168F0  0EFC               	movlw	-4
 15166  0168F2  50E3               	movf	plusw1,w,c
 15167  0168F4  6E32               	movwf	btemp^0,c
 15168  0168F6  0EFA               	movlw	-6
 15169  0168F8  50E3               	movf	plusw1,w,c
 15170  0168FA  5E32               	subwf	btemp^0,f,c
 15171  0168FC  0EFC               	movlw	-4
 15172  0168FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 15173  016904  0EFD               	movlw	-3
 15174  016906  50E3               	movf	plusw1,w,c
 15175  016908  6E32               	movwf	btemp^0,c
 15176  01690A  0EFB               	movlw	-5
 15177  01690C  50E3               	movf	plusw1,w,c
 15178  01690E  5A32               	subwfb	btemp^0,f,c
 15179  016910  0EFD               	movlw	-3
 15180  016912  0060  F0CB  FFE3   	movff	btemp,plusw1
 15181  016918                     l7098:
 15182                           
 15183                           ;stkvar	_divisor @ sp[(-2)+-4]
 15184  016918  90D8               	bcf	status,0,c
 15185  01691A  0EFB               	movlw	-5
 15186  01691C  32E3               	rrcf	plusw1,f,c
 15187  01691E  0EFA               	movlw	-6
 15188  016920  32E3               	rrcf	plusw1,f,c
 15189                           
 15190                           ;stkvar	_counter @ sp[(-2)+1]
 15191  016922  0EFF               	movlw	-1
 15192  016924  50E3               	movf	plusw1,w,c
 15193  016926  6E32               	movwf	btemp^0,c
 15194  016928  0E01               	movlw	1
 15195  01692A  5E32               	subwf	btemp^0,f,c
 15196  01692C  0EFF               	movlw	-1
 15197  01692E  0060  F0CB  FFE3   	movff	btemp,plusw1
 15198  016934  A4D8               	btfss	status,2,c
 15199  016936  D7C6               	goto	u6150
 15200  016938                     u6170:
 15201                           
 15202                           ;stkvar	_sign @ sp[(-2)+0]
 15203  016938  0EFE               	movlw	-2
 15204  01693A  50E3               	movf	plusw1,w,c
 15205  01693C  B4D8               	btfsc	status,2,c
 15206  01693E  D006               	goto	l7106
 15207                           
 15208                           ;stkvar	_dividend @ sp[(-2)+-2]
 15209                           ;stkvar	_dividend @ sp[(-2)+-2]
 15210  016940  0EFC               	movlw	-4
 15211  016942  6CE3               	negf	plusw1,c
 15212  016944  0EFD               	movlw	-3
 15213  016946  1EE3               	comf	plusw1,f,c
 15214  016948  B0D8               	btfsc	status,0,c
 15215  01694A  2AE3               	incf	plusw1,f,c
 15216  01694C                     l7106:
 15217                           
 15218                           ;stkvar	_dividend @ sp[(-2)+-2]
 15219  01694C  0EFC               	movlw	-4
 15220  01694E  006F FF8C  F032    	movff	plusw1,btemp
 15221  016954  0EFD               	movlw	-3
 15222  016956  006F FF8C  F033    	movff	plusw1,btemp+1
 15223                           
 15224                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15225  01695C  0EFA               	movlw	250
 15226  01695E  26E1               	addwf	fsr1l,f,c
 15227  016960  0EFF               	movlw	255
 15228  016962  22E2               	addwfc	fsr1h,f,c
 15229  016964  0012               	return		;funcret
 15230  016966                     __end_of___awmod:
 15231                           	opt callstack 0
 15232                           
 15233 ;; *************** function ___awdiv *****************
 15234 ;; Defined at:
 15235 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 15236 ;; Parameters:    Size  Location     Type
 15237 ;;  dividend        2  [STACK] int 
 15238 ;;  divisor         2  [STACK] int 
 15239 ;; Auto vars:     Size  Location     Type
 15240 ;;  quotient        2  [STACK] int 
 15241 ;;  sign            1  [STACK] unsigned char 
 15242 ;;  counter         1  [STACK] unsigned char 
 15243 ;; Return value:  Size  Location     Type
 15244 ;;                  2  [STACK] int 
 15245 ;; Registers used:
 15246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15247 ;; Tracked objects:
 15248 ;;		On entry : 0/5
 15249 ;;		On exit  : 0/0
 15250 ;;		Unchanged: 0/0
 15251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15256 ;;Total ram usage:        0 bytes
 15257 ;; Hardware stack levels used:    1
 15258 ;; Hardware stack levels required when called:    6
 15259 ;; This function calls:
 15260 ;;		Nothing
 15261 ;; This function is called by:
 15262 ;;		_efgtoa
 15263 ;; This function uses a reentrant model
 15264 ;;
 15265                           
 15266                           	psect	text58
 15267  016366                     __ptext58:
 15268                           	opt callstack 0
 15269  016366                     ___awdiv:
 15270                           	opt callstack 0
 15271                           
 15272                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15273  016366  52E6               	movf	postinc1,f,c
 15274  016368  52E6               	movf	postinc1,f,c
 15275  01636A  52E6               	movf	postinc1,f,c
 15276  01636C  52E6               	movf	postinc1,f,c
 15277                           
 15278                           ;stkvar	_sign @ sp[(-4)+2]
 15279                           
 15280                           ;incstack = 0
 15281  01636E  0EFE               	movlw	-2
 15282  016370  6AE3               	clrf	plusw1,c
 15283                           
 15284                           ;stkvar	_divisor @ sp[(-4)+-4]
 15285  016372  0EF9               	movlw	-7
 15286  016374  AEE3               	btfss	plusw1,7,c
 15287  016376  D009               	goto	l7034
 15288                           
 15289                           ;stkvar	_divisor @ sp[(-4)+-4]
 15290                           ;stkvar	_divisor @ sp[(-4)+-4]
 15291  016378  0EF8               	movlw	-8
 15292  01637A  6CE3               	negf	plusw1,c
 15293  01637C  0EF9               	movlw	-7
 15294  01637E  1EE3               	comf	plusw1,f,c
 15295  016380  B0D8               	btfsc	status,0,c
 15296  016382  2AE3               	incf	plusw1,f,c
 15297                           
 15298                           ;stkvar	_sign @ sp[(-4)+2]
 15299  016384  0EFE               	movlw	-2
 15300  016386  6AE3               	clrf	plusw1,c
 15301  016388  2AE3               	incf	plusw1,f,c
 15302  01638A                     l7034:
 15303                           
 15304                           ;stkvar	_dividend @ sp[(-4)+-2]
 15305  01638A  0EFB               	movlw	-5
 15306  01638C  AEE3               	btfss	plusw1,7,c
 15307  01638E  D008               	goto	l7040
 15308                           
 15309                           ;stkvar	_dividend @ sp[(-4)+-2]
 15310                           ;stkvar	_dividend @ sp[(-4)+-2]
 15311  016390  0EFA               	movlw	-6
 15312  016392  6CE3               	negf	plusw1,c
 15313  016394  0EFB               	movlw	-5
 15314  016396  1EE3               	comf	plusw1,f,c
 15315  016398  B0D8               	btfsc	status,0,c
 15316  01639A  2AE3               	incf	plusw1,f,c
 15317                           
 15318                           ;stkvar	_sign @ sp[(-4)+2]
 15319  01639C  0EFE               	movlw	-2
 15320  01639E  70E3               	btg	plusw1,0,c
 15321  0163A0                     l7040:
 15322                           
 15323                           ;stkvar	_quotient @ sp[(-4)+0]
 15324  0163A0  0EFC               	movlw	-4
 15325  0163A2  6AE3               	clrf	plusw1,c
 15326  0163A4  0EFD               	movlw	-3
 15327  0163A6  6AE3               	clrf	plusw1,c
 15328                           
 15329                           ;stkvar	_divisor @ sp[(-4)+-4]
 15330  0163A8  0EF8               	movlw	-8
 15331  0163AA  006F FF8C  F032    	movff	plusw1,btemp
 15332  0163B0  0EF9               	movlw	-7
 15333  0163B2  50E3               	movf	plusw1,w,c
 15334  0163B4  1032               	iorwf	btemp^0,w,c
 15335  0163B6  B4D8               	btfsc	status,2,c
 15336  0163B8  D066               	goto	u6100
 15337                           
 15338                           ;stkvar	_counter @ sp[(-4)+3]
 15339  0163BA  0EFF               	movlw	-1
 15340  0163BC  6AE3               	clrf	plusw1,c
 15341  0163BE  D012               	goto	L16
 15342  0163C0                     l7046:
 15343                           
 15344                           ;stkvar	_divisor @ sp[(-4)+-4]
 15345  0163C0  0EF8               	movlw	-8
 15346  0163C2  50E3               	movf	plusw1,w,c
 15347  0163C4  90D8               	bcf	status,0,c
 15348  0163C6  34E8               	rlcf	wreg,w,c
 15349  0163C8  6E32               	movwf	btemp^0,c
 15350  0163CA  0EF8               	movlw	-8
 15351  0163CC  0060  F0CB  FFE3   	movff	btemp,plusw1
 15352  0163D2  0EF9               	movlw	-7
 15353  0163D4  50E3               	movf	plusw1,w,c
 15354  0163D6  34E8               	rlcf	wreg,w,c
 15355  0163D8  6E32               	movwf	btemp^0,c
 15356  0163DA  0EF9               	movlw	-7
 15357  0163DC  0060  F0CB  FFE3   	movff	btemp,plusw1
 15358                           
 15359                           ;stkvar	_counter @ sp[(-4)+3]
 15360  0163E2  0EFF               	movlw	-1
 15361  0163E4                     L16:
 15362  0163E4  2AE3               	incf	plusw1,f,c
 15363                           
 15364                           ;stkvar	_divisor @ sp[(-4)+-4]
 15365  0163E6  0EF9               	movlw	-7
 15366  0163E8  AEE3               	btfss	plusw1,7,c
 15367  0163EA  D7EA               	goto	l7046
 15368  0163EC                     u6080:
 15369                           
 15370                           ;stkvar	_quotient @ sp[(-4)+0]
 15371  0163EC  0EFC               	movlw	-4
 15372  0163EE  50E3               	movf	plusw1,w,c
 15373  0163F0  90D8               	bcf	status,0,c
 15374  0163F2  34E8               	rlcf	wreg,w,c
 15375  0163F4  6E32               	movwf	btemp^0,c
 15376  0163F6  0EFC               	movlw	-4
 15377  0163F8  0060  F0CB  FFE3   	movff	btemp,plusw1
 15378  0163FE  0EFD               	movlw	-3
 15379  016400  50E3               	movf	plusw1,w,c
 15380  016402  34E8               	rlcf	wreg,w,c
 15381  016404  6E32               	movwf	btemp^0,c
 15382  016406  0EFD               	movlw	-3
 15383  016408  0060  F0CB  FFE3   	movff	btemp,plusw1
 15384                           
 15385                           ;stkvar	_divisor @ sp[(-4)+-4]
 15386  01640E  0EF8               	movlw	-8
 15387  016410  006F FF8C  F03C    	movff	plusw1,btemp+10
 15388  016416  0EF9               	movlw	-7
 15389  016418  006F FF8C  F03D    	movff	plusw1,btemp+11
 15390                           
 15391                           ;stkvar	_dividend @ sp[(-4)+-2]
 15392  01641E  0EFA               	movlw	-6
 15393  016420  006F FF8C  F03A    	movff	plusw1,btemp+8
 15394  016426  0EFB               	movlw	-5
 15395  016428  006F FF8C  F03B    	movff	plusw1,btemp+9
 15396  01642E  503C               	movf	(btemp+10)^0,w,c
 15397  016430  5C3A               	subwf	(btemp+8)^0,w,c
 15398  016432  503D               	movf	(btemp+11)^0,w,c
 15399  016434  583B               	subwfb	(btemp+9)^0,w,c
 15400  016436  A0D8               	btfss	status,0,c
 15401  016438  D016               	goto	l7060
 15402                           
 15403                           ;stkvar	_divisor @ sp[(-4)+-4]
 15404                           ;stkvar	_dividend @ sp[(-4)+-2]
 15405  01643A  0EFA               	movlw	-6
 15406  01643C  50E3               	movf	plusw1,w,c
 15407  01643E  6E32               	movwf	btemp^0,c
 15408  016440  0EF8               	movlw	-8
 15409  016442  50E3               	movf	plusw1,w,c
 15410  016444  5E32               	subwf	btemp^0,f,c
 15411  016446  0EFA               	movlw	-6
 15412  016448  0060  F0CB  FFE3   	movff	btemp,plusw1
 15413  01644E  0EFB               	movlw	-5
 15414  016450  50E3               	movf	plusw1,w,c
 15415  016452  6E32               	movwf	btemp^0,c
 15416  016454  0EF9               	movlw	-7
 15417  016456  50E3               	movf	plusw1,w,c
 15418  016458  5A32               	subwfb	btemp^0,f,c
 15419  01645A  0EFB               	movlw	-5
 15420  01645C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15421                           
 15422                           ;stkvar	_quotient @ sp[(-4)+0]
 15423  016462  0EFC               	movlw	-4
 15424  016464  80E3               	bsf	plusw1,0,c
 15425  016466                     l7060:
 15426                           
 15427                           ;stkvar	_divisor @ sp[(-4)+-4]
 15428  016466  90D8               	bcf	status,0,c
 15429  016468  0EF9               	movlw	-7
 15430  01646A  32E3               	rrcf	plusw1,f,c
 15431  01646C  0EF8               	movlw	-8
 15432  01646E  32E3               	rrcf	plusw1,f,c
 15433                           
 15434                           ;stkvar	_counter @ sp[(-4)+3]
 15435  016470  0EFF               	movlw	-1
 15436  016472  50E3               	movf	plusw1,w,c
 15437  016474  6E32               	movwf	btemp^0,c
 15438  016476  0E01               	movlw	1
 15439  016478  5E32               	subwf	btemp^0,f,c
 15440  01647A  0EFF               	movlw	-1
 15441  01647C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15442  016482  A4D8               	btfss	status,2,c
 15443  016484  D7B3               	goto	u6080
 15444  016486                     u6100:
 15445                           
 15446                           ;stkvar	_sign @ sp[(-4)+2]
 15447  016486  0EFE               	movlw	-2
 15448  016488  50E3               	movf	plusw1,w,c
 15449  01648A  B4D8               	btfsc	status,2,c
 15450  01648C  D006               	goto	l7068
 15451                           
 15452                           ;stkvar	_quotient @ sp[(-4)+0]
 15453                           ;stkvar	_quotient @ sp[(-4)+0]
 15454  01648E  0EFC               	movlw	-4
 15455  016490  6CE3               	negf	plusw1,c
 15456  016492  0EFD               	movlw	-3
 15457  016494  1EE3               	comf	plusw1,f,c
 15458  016496  B0D8               	btfsc	status,0,c
 15459  016498  2AE3               	incf	plusw1,f,c
 15460  01649A                     l7068:
 15461                           
 15462                           ;stkvar	_quotient @ sp[(-4)+0]
 15463  01649A  0EFC               	movlw	-4
 15464  01649C  006F FF8C  F032    	movff	plusw1,btemp
 15465  0164A2  0EFD               	movlw	-3
 15466  0164A4  006F FF8C  F033    	movff	plusw1,btemp+1
 15467                           
 15468                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15469  0164AA  0EF8               	movlw	248
 15470  0164AC  26E1               	addwf	fsr1l,f,c
 15471  0164AE  0EFF               	movlw	255
 15472  0164B0  22E2               	addwfc	fsr1h,f,c
 15473  0164B2  0012               	return		;funcret
 15474  0164B4                     __end_of___awdiv:
 15475                           	opt callstack 0
 15476                           
 15477 ;; *************** function _dtoa *****************
 15478 ;; Defined at:
 15479 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15480 ;; Parameters:    Size  Location     Type
 15481 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15482 ;;		 -> f(6), NULL(0), 
 15483 ;;  d               8  [STACK] long long 
 15484 ;; Auto vars:     Size  Location     Type
 15485 ;;  n               8  [STACK] long long 
 15486 ;;  i               2  [STACK] int 
 15487 ;;  s               2  [STACK] int 
 15488 ;;  w               2  [STACK] int 
 15489 ;;  p               2  [STACK] int 
 15490 ;; Return value:  Size  Location     Type
 15491 ;;                  2  [STACK] int 
 15492 ;; Registers used:
 15493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/5
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;Total ram usage:        0 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; Hardware stack levels required when called:   11
 15506 ;; This function calls:
 15507 ;;		___aodiv
 15508 ;;		___aomod
 15509 ;;		_abs
 15510 ;;		_pad
 15511 ;; This function is called by:
 15512 ;;		_vfpfcnvrt
 15513 ;; This function uses a reentrant model
 15514 ;;
 15515                           
 15516                           	psect	text59
 15517  013C70                     __ptext59:
 15518                           	opt callstack 0
 15519  013C70                     _dtoa:
 15520                           	opt callstack 0
 15521                           
 15522                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15523  013C70  0E12               	movlw	18
 15524  013C72  26E1               	addwf	fsr1l,f,c
 15525  013C74  0E00               	movlw	0
 15526  013C76  22E2               	addwfc	fsr1h,f,c
 15527                           
 15528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 15529                           ;stkvar	_d @ sp[(-18)+-10]
 15530                           
 15531                           ;incstack = 0
 15532  013C78  0EE4               	movlw	228
 15533  013C7A  24E1               	addwf	fsr1l,w,c
 15534  013C7C  6ED9               	movwf	fsr2l,c
 15535  013C7E  0EFF               	movlw	255
 15536  013C80  20E2               	addwfc	fsr1h,w,c
 15537  013C82  6EDA               	movwf	fsr2h,c
 15538                           
 15539                           ;stkvar	_n @ sp[(-18)+2]
 15540  013C84  0E08               	movlw	8
 15541  013C86  6E32               	movwf	btemp^0,c
 15542  013C88  0EF0               	movlw	-16
 15543  013C8A                     us904999:
 15544  013C8A  006F FF7B FFE3     	movff	postinc2,plusw1
 15545  013C90  28E8               	incf	wreg,w,c
 15546  013C92  2E32               	decfsz	btemp^0,f,c
 15547  013C94  D7FA               	bra	us904999
 15548                           
 15549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 15550                           ;stkvar	_n @ sp[(-18)+2]
 15551  013C96  0EF7               	movlw	-9
 15552  013C98  AEE3               	btfss	plusw1,7,c
 15553  013C9A  D002               	goto	u9050
 15554  013C9C  0E01               	movlw	1
 15555  013C9E  D001               	goto	u9060
 15556  013CA0                     u9050:
 15557  013CA0  0E00               	movlw	0
 15558  013CA2                     u9060:
 15559  013CA2  6E3C               	movwf	(btemp+10)^0,c
 15560  013CA4  6A3D               	clrf	(btemp+11)^0,c
 15561                           
 15562                           ;stkvar	_s @ sp[(-18)+12]
 15563  013CA6  0EFA               	movlw	-6
 15564  013CA8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15565  013CAE  0EFB               	movlw	-5
 15566  013CB0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15567                           
 15568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 15569                           ;stkvar	_s @ sp[(-18)+12]
 15570  013CB6  0EFA               	movlw	-6
 15571  013CB8  006F FF8C  F032    	movff	plusw1,btemp
 15572  013CBE  0EFB               	movlw	-5
 15573  013CC0  50E3               	movf	plusw1,w,c
 15574  013CC2  1032               	iorwf	btemp^0,w,c
 15575  013CC4  B4D8               	btfsc	status,2,c
 15576  013CC6  D025               	goto	u9080
 15577                           
 15578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 15579                           ;stkvar	_n @ sp[(-18)+2]
 15580                           ;stkvar	_n @ sp[(-18)+2]
 15581  013CC8  0EF0               	movlw	-16
 15582  013CCA  6CE3               	negf	plusw1,c
 15583  013CCC  0EF1               	movlw	-15
 15584  013CCE  1EE3               	comf	plusw1,f,c
 15585  013CD0  0EF2               	movlw	-14
 15586  013CD2  1EE3               	comf	plusw1,f,c
 15587  013CD4  0EF3               	movlw	-13
 15588  013CD6  1EE3               	comf	plusw1,f,c
 15589  013CD8  0EF4               	movlw	-12
 15590  013CDA  1EE3               	comf	plusw1,f,c
 15591  013CDC  0EF5               	movlw	-11
 15592  013CDE  1EE3               	comf	plusw1,f,c
 15593  013CE0  0EF6               	movlw	-10
 15594  013CE2  1EE3               	comf	plusw1,f,c
 15595  013CE4  0EF7               	movlw	-9
 15596  013CE6  1EE3               	comf	plusw1,f,c
 15597  013CE8  E314               	bnc	u9080
 15598  013CEA  0EF1               	movlw	-15
 15599  013CEC  2AE3               	incf	plusw1,f,c
 15600  013CEE  E311               	bnc	u9080
 15601  013CF0  0EF2               	movlw	-14
 15602  013CF2  2AE3               	incf	plusw1,f,c
 15603  013CF4  E30E               	bnc	u9080
 15604  013CF6  0EF3               	movlw	-13
 15605  013CF8  2AE3               	incf	plusw1,f,c
 15606  013CFA  E30B               	bnc	u9080
 15607  013CFC  0EF4               	movlw	-12
 15608  013CFE  2AE3               	incf	plusw1,f,c
 15609  013D00  E308               	bnc	u9080
 15610  013D02  0EF5               	movlw	-11
 15611  013D04  2AE3               	incf	plusw1,f,c
 15612  013D06  E305               	bnc	u9080
 15613  013D08  0EF6               	movlw	-10
 15614  013D0A  2AE3               	incf	plusw1,f,c
 15615  013D0C  E302               	bnc	u9080
 15616  013D0E  0EF7               	movlw	-9
 15617  013D10  2AE3               	incf	plusw1,f,c
 15618  013D12                     u9080:
 15619                           
 15620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 15621  013D12  AE1E               	btfss	(_prec+1)^0,7,c
 15622                           
 15623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 15624  013D14  921F               	bcf	_flags^0,1,c
 15625                           
 15626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 15627  013D16  BE1E               	btfsc	(_prec+1)^0,7,c
 15628  013D18  D005               	goto	u9100
 15629  013D1A  501E               	movf	(_prec+1)^0,w,c
 15630  013D1C  E110               	bnz	l9534
 15631  013D1E  041D               	decf	_prec^0,w,c
 15632  013D20  B0D8               	btfsc	status,0,c
 15633  013D22  D00D               	goto	l9534
 15634  013D24                     u9100:
 15635  013D24  0E01               	movlw	1
 15636  013D26  6E3C               	movwf	(btemp+10)^0,c
 15637  013D28  0E00               	movlw	0
 15638  013D2A  6E3D               	movwf	(btemp+11)^0,c
 15639                           
 15640                           ;stkvar	_p @ sp[(-18)+16]
 15641  013D2C  0EFE               	movlw	-2
 15642  013D2E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15643  013D34  0EFF               	movlw	-1
 15644  013D36  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15645  013D3C  D008               	goto	l1863
 15646  013D3E                     l9534:
 15647                           
 15648                           ;stkvar	_p @ sp[(-18)+16]
 15649  013D3E  0EFE               	movlw	-2
 15650  013D40  0060  F077  FFE3   	movff	_prec,plusw1
 15651  013D46  0EFF               	movlw	-1
 15652  013D48  0060  F07B  FFE3   	movff	_prec+1,plusw1
 15653  013D4E                     l1863:
 15654                           
 15655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 15656                           ;stkvar	_w @ sp[(-18)+14]
 15657  013D4E  0EFC               	movlw	-4
 15658  013D50  0060  F06F  FFE3   	movff	_width,plusw1
 15659  013D56  0EFD               	movlw	-3
 15660  013D58  0060  F073  FFE3   	movff	_width+1,plusw1
 15661                           
 15662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 15663                           ;stkvar	_s @ sp[(-18)+12]
 15664  013D5E  0EFA               	movlw	-6
 15665  013D60  006F FF8C  F032    	movff	plusw1,btemp
 15666  013D66  0EFB               	movlw	-5
 15667  013D68  50E3               	movf	plusw1,w,c
 15668  013D6A  1032               	iorwf	btemp^0,w,c
 15669  013D6C  A4D8               	btfss	status,2,c
 15670  013D6E  D002               	goto	u9120
 15671  013D70  A41F               	btfss	_flags^0,2,c
 15672  013D72  D00A               	goto	l9542
 15673  013D74                     u9120:
 15674                           
 15675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 15676                           ;stkvar	_w @ sp[(-18)+14]
 15677  013D74  50E1               	movf	fsr1l,w,c
 15678  013D76  0FFC               	addlw	-4
 15679  013D78  6ED9               	movwf	fsr2l,c
 15680  013D7A  50E2               	movf	fsr1h,w,c
 15681  013D7C  6EDA               	movwf	fsr2h,c
 15682  013D7E  0EFF               	movlw	255
 15683  013D80  22DA               	addwfc	fsr2h,f,c
 15684  013D82  06DE               	decf	postinc2,f,c
 15685  013D84  0E00               	movlw	0
 15686  013D86  5ADD               	subwfb	postdec2,f,c
 15687  013D88                     l9542:
 15688                           
 15689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 15690  013D88  0E4F               	movlw	79
 15691  013D8A  6E3C               	movwf	(btemp+10)^0,c
 15692  013D8C  0E00               	movlw	0
 15693  013D8E  6E3D               	movwf	(btemp+11)^0,c
 15694                           
 15695                           ;stkvar	_i @ sp[(-18)+10]
 15696  013D90  0EF8               	movlw	-8
 15697  013D92  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15698  013D98  0EF9               	movlw	-7
 15699  013D9A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15700                           
 15701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 15702  013DA0  0101               	movlb	1	; () banked
 15703  013DA2  6BC7               	clrf	(_dbuf+79)& (0+255),b
 15704                           
 15705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15706  013DA4  D109               	goto	l9556
 15707  013DA6                     l9546:
 15708                           
 15709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 15710                           ;stkvar	_i @ sp[(-18)+10]
 15711  013DA6  50E1               	movf	fsr1l,w,c
 15712  013DA8  0FF8               	addlw	-8
 15713  013DAA  6ED9               	movwf	fsr2l,c
 15714  013DAC  50E2               	movf	fsr1h,w,c
 15715  013DAE  6EDA               	movwf	fsr2h,c
 15716  013DB0  0EFF               	movlw	255
 15717  013DB2  22DA               	addwfc	fsr2h,f,c
 15718  013DB4  06DE               	decf	postinc2,f,c
 15719  013DB6  0E00               	movlw	0
 15720  013DB8  5ADD               	subwfb	postdec2,f,c
 15721                           
 15722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 15723  013DBA  0E0A               	movlw	10
 15724  013DBC  6EE6               	movwf	postinc1,c
 15725  013DBE  0E00               	movlw	0
 15726  013DC0  6EE6               	movwf	postinc1,c
 15727  013DC2  0E00               	movlw	0
 15728  013DC4  6EE6               	movwf	postinc1,c
 15729  013DC6  0E00               	movlw	0
 15730  013DC8  6EE6               	movwf	postinc1,c
 15731  013DCA  0E00               	movlw	0
 15732  013DCC  6EE6               	movwf	postinc1,c
 15733  013DCE  0E00               	movlw	0
 15734  013DD0  6EE6               	movwf	postinc1,c
 15735  013DD2  0E00               	movlw	0
 15736  013DD4  6EE6               	movwf	postinc1,c
 15737  013DD6  0E00               	movlw	0
 15738  013DD8  6EE6               	movwf	postinc1,c
 15739                           
 15740                           ;stkvar	_n @ sp[(-26)+2]
 15741  013DDA  50E1               	movf	fsr1l,w,c
 15742  013DDC  0FE8               	addlw	-24
 15743  013DDE  6ED9               	movwf	fsr2l,c
 15744  013DE0  50E2               	movf	fsr1h,w,c
 15745  013DE2  6EDA               	movwf	fsr2h,c
 15746  013DE4  0EFF               	movlw	255
 15747  013DE6  22DA               	addwfc	fsr2h,f,c
 15748  013DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 15749  013DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 15750  013DF4  006F FF7B FFE6     	movff	postinc2,postinc1
 15751  013DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 15752  013E00  006F FF7B FFE6     	movff	postinc2,postinc1
 15753  013E06  006F FF7B FFE6     	movff	postinc2,postinc1
 15754  013E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 15755  013E12  006F FF7B FFE6     	movff	postinc2,postinc1
 15756  013E18  EC84  F0AA         	call	___aomod	;wreg free
 15757  013E1C  52E5               	movf	postdec1,f,c
 15758  013E1E  006F FF9C  F049    	movff	indf1,btemp+23
 15759  013E24  52E5               	movf	postdec1,f,c
 15760  013E26  006F FF9C  F048    	movff	indf1,btemp+22
 15761  013E2C  52E5               	movf	postdec1,f,c
 15762  013E2E  006F FF9C  F047    	movff	indf1,btemp+21
 15763  013E34  52E5               	movf	postdec1,f,c
 15764  013E36  006F FF9C  F046    	movff	indf1,btemp+20
 15765  013E3C  52E5               	movf	postdec1,f,c
 15766  013E3E  006F FF9C  F045    	movff	indf1,btemp+19
 15767  013E44  52E5               	movf	postdec1,f,c
 15768  013E46  006F FF9C  F044    	movff	indf1,btemp+18
 15769  013E4C  52E5               	movf	postdec1,f,c
 15770  013E4E  006F FF9C  F043    	movff	indf1,btemp+17
 15771  013E54  52E5               	movf	postdec1,f,c
 15772  013E56  006F FF9C  F042    	movff	indf1,btemp+16
 15773  013E5C  0EF8               	movlw	248
 15774  013E5E  26E1               	addwf	fsr1l,f,c
 15775  013E60  0EFF               	movlw	255
 15776  013E62  22E2               	addwfc	fsr1h,f,c
 15777  013E64  0060  F108  F03C   	movff	btemp+16,btemp+10
 15778  013E6A  0060  F10C  F03D   	movff	btemp+17,btemp+11
 15779  013E70  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 15780  013E76  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 15781  013E7C  EC2C  F0BF         	call	_abs	;wreg free
 15782  013E80  0E30               	movlw	48
 15783  013E82  2632               	addwf	btemp^0,f,c
 15784                           
 15785                           ;stkvar	_i @ sp[(-18)+10]
 15786  013E84  0EF8               	movlw	-8
 15787  013E86  006F FF8C  F03C    	movff	plusw1,btemp+10
 15788  013E8C  0EF9               	movlw	-7
 15789  013E8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15790  013E94  0E78               	movlw	low _dbuf
 15791  013E96  243C               	addwf	(btemp+10)^0,w,c
 15792  013E98  6ED9               	movwf	fsr2l,c
 15793  013E9A  0E01               	movlw	high _dbuf
 15794  013E9C  203D               	addwfc	(btemp+11)^0,w,c
 15795  013E9E  6EDA               	movwf	fsr2h,c
 15796  013EA0  0060  F0CB  FFDF   	movff	btemp,indf2
 15797                           
 15798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 15799                           ;stkvar	_p @ sp[(-18)+16]
 15800  013EA6  50E1               	movf	fsr1l,w,c
 15801  013EA8  0FFE               	addlw	-2
 15802  013EAA  6ED9               	movwf	fsr2l,c
 15803  013EAC  50E2               	movf	fsr1h,w,c
 15804  013EAE  6EDA               	movwf	fsr2h,c
 15805  013EB0  0EFF               	movlw	255
 15806  013EB2  22DA               	addwfc	fsr2h,f,c
 15807  013EB4  06DE               	decf	postinc2,f,c
 15808  013EB6  0E00               	movlw	0
 15809  013EB8  5ADD               	subwfb	postdec2,f,c
 15810                           
 15811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 15812                           ;stkvar	_w @ sp[(-18)+14]
 15813  013EBA  50E1               	movf	fsr1l,w,c
 15814  013EBC  0FFC               	addlw	-4
 15815  013EBE  6ED9               	movwf	fsr2l,c
 15816  013EC0  50E2               	movf	fsr1h,w,c
 15817  013EC2  6EDA               	movwf	fsr2h,c
 15818  013EC4  0EFF               	movlw	255
 15819  013EC6  22DA               	addwfc	fsr2h,f,c
 15820  013EC8  06DE               	decf	postinc2,f,c
 15821  013ECA  0E00               	movlw	0
 15822  013ECC  5ADD               	subwfb	postdec2,f,c
 15823                           
 15824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 15825  013ECE  0E0A               	movlw	10
 15826  013ED0  6EE6               	movwf	postinc1,c
 15827  013ED2  0E00               	movlw	0
 15828  013ED4  6EE6               	movwf	postinc1,c
 15829  013ED6  0E00               	movlw	0
 15830  013ED8  6EE6               	movwf	postinc1,c
 15831  013EDA  0E00               	movlw	0
 15832  013EDC  6EE6               	movwf	postinc1,c
 15833  013EDE  0E00               	movlw	0
 15834  013EE0  6EE6               	movwf	postinc1,c
 15835  013EE2  0E00               	movlw	0
 15836  013EE4  6EE6               	movwf	postinc1,c
 15837  013EE6  0E00               	movlw	0
 15838  013EE8  6EE6               	movwf	postinc1,c
 15839  013EEA  0E00               	movlw	0
 15840  013EEC  6EE6               	movwf	postinc1,c
 15841                           
 15842                           ;stkvar	_n @ sp[(-26)+2]
 15843  013EEE  50E1               	movf	fsr1l,w,c
 15844  013EF0  0FE8               	addlw	-24
 15845  013EF2  6ED9               	movwf	fsr2l,c
 15846  013EF4  50E2               	movf	fsr1h,w,c
 15847  013EF6  6EDA               	movwf	fsr2h,c
 15848  013EF8  0EFF               	movlw	255
 15849  013EFA  22DA               	addwfc	fsr2h,f,c
 15850  013EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 15851  013F02  006F FF7B FFE6     	movff	postinc2,postinc1
 15852  013F08  006F FF7B FFE6     	movff	postinc2,postinc1
 15853  013F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 15854  013F14  006F FF7B FFE6     	movff	postinc2,postinc1
 15855  013F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 15856  013F20  006F FF7B FFE6     	movff	postinc2,postinc1
 15857  013F26  006F FF7B FFE6     	movff	postinc2,postinc1
 15858  013F2C  ECE0  F0A6         	call	___aodiv	;wreg free
 15859  013F30  52E5               	movf	postdec1,f,c
 15860  013F32  006F FF9C  F049    	movff	indf1,btemp+23
 15861  013F38  52E5               	movf	postdec1,f,c
 15862  013F3A  006F FF9C  F048    	movff	indf1,btemp+22
 15863  013F40  52E5               	movf	postdec1,f,c
 15864  013F42  006F FF9C  F047    	movff	indf1,btemp+21
 15865  013F48  52E5               	movf	postdec1,f,c
 15866  013F4A  006F FF9C  F046    	movff	indf1,btemp+20
 15867  013F50  52E5               	movf	postdec1,f,c
 15868  013F52  006F FF9C  F045    	movff	indf1,btemp+19
 15869  013F58  52E5               	movf	postdec1,f,c
 15870  013F5A  006F FF9C  F044    	movff	indf1,btemp+18
 15871  013F60  52E5               	movf	postdec1,f,c
 15872  013F62  006F FF9C  F043    	movff	indf1,btemp+17
 15873  013F68  52E5               	movf	postdec1,f,c
 15874  013F6A  006F FF9C  F042    	movff	indf1,btemp+16
 15875  013F70  0EF8               	movlw	248
 15876  013F72  26E1               	addwf	fsr1l,f,c
 15877  013F74  0EFF               	movlw	255
 15878  013F76  22E2               	addwfc	fsr1h,f,c
 15879                           
 15880                           ;stkvar	_n @ sp[(-18)+2]
 15881  013F78  0EF0               	movlw	-16
 15882  013F7A  0060  F10B  FFE3   	movff	btemp+16,plusw1
 15883  013F80  0EF1               	movlw	-15
 15884  013F82  0060  F10F  FFE3   	movff	btemp+17,plusw1
 15885  013F88  0EF2               	movlw	-14
 15886  013F8A  0060  F113  FFE3   	movff	btemp+18,plusw1
 15887  013F90  0EF3               	movlw	-13
 15888  013F92  0060  F117  FFE3   	movff	btemp+19,plusw1
 15889  013F98  0EF4               	movlw	-12
 15890  013F9A  0060  F11B  FFE3   	movff	btemp+20,plusw1
 15891  013FA0  0EF5               	movlw	-11
 15892  013FA2  0060  F11F  FFE3   	movff	btemp+21,plusw1
 15893  013FA8  0EF6               	movlw	-10
 15894  013FAA  0060  F123  FFE3   	movff	btemp+22,plusw1
 15895  013FB0  0EF7               	movlw	-9
 15896  013FB2  0060  F127  FFE3   	movff	btemp+23,plusw1
 15897  013FB8                     l9556:
 15898                           
 15899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15900                           ;stkvar	_i @ sp[(-18)+10]
 15901  013FB8  0EF9               	movlw	-7
 15902  013FBA  BEE3               	btfsc	plusw1,7,c
 15903  013FBC  D036               	goto	u9170
 15904  013FBE  0EF9               	movlw	-7
 15905  013FC0  50E3               	movf	plusw1,w,c
 15906  013FC2  E104               	bnz	u9130
 15907  013FC4  0EF8               	movlw	-8
 15908  013FC6  04E3               	decf	plusw1,w,c
 15909  013FC8  A0D8               	btfss	status,0,c
 15910  013FCA  D02F               	goto	u9170
 15911  013FCC                     u9130:
 15912                           
 15913                           ;stkvar	_n @ sp[(-18)+2]
 15914  013FCC  0EF0               	movlw	-16
 15915  013FCE  50E3               	movf	plusw1,w,c
 15916  013FD0  E115               	bnz	u9141
 15917  013FD2  0EF1               	movlw	-15
 15918  013FD4  50E3               	movf	plusw1,w,c
 15919  013FD6  E112               	bnz	u9141
 15920  013FD8  0EF2               	movlw	-14
 15921  013FDA  50E3               	movf	plusw1,w,c
 15922  013FDC  E10F               	bnz	u9141
 15923  013FDE  0EF3               	movlw	-13
 15924  013FE0  50E3               	movf	plusw1,w,c
 15925  013FE2  E10C               	bnz	u9141
 15926  013FE4  0EF4               	movlw	-12
 15927  013FE6  50E3               	movf	plusw1,w,c
 15928  013FE8  E109               	bnz	u9141
 15929  013FEA  0EF5               	movlw	-11
 15930  013FEC  50E3               	movf	plusw1,w,c
 15931  013FEE  E106               	bnz	u9141
 15932  013FF0  0EF6               	movlw	-10
 15933  013FF2  50E3               	movf	plusw1,w,c
 15934  013FF4  E103               	bnz	u9141
 15935  013FF6  0EF7               	movlw	-9
 15936  013FF8  50E3               	movf	plusw1,w,c
 15937  013FFA  A4D8               	btfss	status,2,c
 15938  013FFC                     u9141:
 15939  013FFC  D6D4               	goto	l9546
 15940                           
 15941                           ;stkvar	_p @ sp[(-18)+16]
 15942  013FFE  0EFF               	movlw	-1
 15943  014000  BEE3               	btfsc	plusw1,7,c
 15944  014002  D007               	goto	u9150
 15945  014004  0EFF               	movlw	-1
 15946  014006  50E3               	movf	plusw1,w,c
 15947  014008  E103               	bnz	u9151
 15948  01400A  0EFE               	movlw	-2
 15949  01400C  04E3               	decf	plusw1,w,c
 15950  01400E  B0D8               	btfsc	status,0,c
 15951  014010                     u9151:
 15952  014010  D6CA               	goto	l9546
 15953  014012                     u9150:
 15954                           
 15955                           ;stkvar	_w @ sp[(-18)+14]
 15956  014012  0EFD               	movlw	-3
 15957  014014  BEE3               	btfsc	plusw1,7,c
 15958  014016  D009               	goto	u9170
 15959  014018  0EFD               	movlw	-3
 15960  01401A  50E3               	movf	plusw1,w,c
 15961  01401C  E104               	bnz	u9160
 15962  01401E  0EFC               	movlw	-4
 15963  014020  04E3               	decf	plusw1,w,c
 15964  014022  A0D8               	btfss	status,0,c
 15965  014024  D002               	goto	u9170
 15966  014026                     u9160:
 15967  014026  B21F               	btfsc	_flags^0,1,c
 15968  014028  D6BE               	goto	l9546
 15969  01402A                     u9170:
 15970                           
 15971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 15972                           ;stkvar	_s @ sp[(-18)+12]
 15973  01402A  0EFA               	movlw	-6
 15974  01402C  006F FF8C  F032    	movff	plusw1,btemp
 15975  014032  0EFB               	movlw	-5
 15976  014034  50E3               	movf	plusw1,w,c
 15977  014036  1032               	iorwf	btemp^0,w,c
 15978  014038  A4D8               	btfss	status,2,c
 15979  01403A  D002               	goto	u9190
 15980  01403C  A41F               	btfss	_flags^0,2,c
 15981  01403E  D033               	goto	l9580
 15982  014040                     u9190:
 15983                           
 15984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 15985                           ;stkvar	_i @ sp[(-18)+10]
 15986  014040  50E1               	movf	fsr1l,w,c
 15987  014042  0FF8               	addlw	-8
 15988  014044  6ED9               	movwf	fsr2l,c
 15989  014046  50E2               	movf	fsr1h,w,c
 15990  014048  6EDA               	movwf	fsr2h,c
 15991  01404A  0EFF               	movlw	255
 15992  01404C  22DA               	addwfc	fsr2h,f,c
 15993  01404E  06DE               	decf	postinc2,f,c
 15994  014050  0E00               	movlw	0
 15995  014052  5ADD               	subwfb	postdec2,f,c
 15996                           
 15997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 15998                           ;stkvar	_s @ sp[(-18)+12]
 15999  014054  0EFA               	movlw	-6
 16000  014056  006F FF8C  F032    	movff	plusw1,btemp
 16001  01405C  0EFB               	movlw	-5
 16002  01405E  50E3               	movf	plusw1,w,c
 16003  014060  1032               	iorwf	btemp^0,w,c
 16004  014062  A4D8               	btfss	status,2,c
 16005  014064  D002               	goto	l9576
 16006  014066  0E2B               	movlw	43
 16007  014068  D001               	goto	L17
 16008  01406A                     l9576:
 16009  01406A  0E2D               	movlw	45
 16010  01406C                     L17:
 16011  01406C  6E3C               	movwf	(btemp+10)^0,c
 16012  01406E  0E00               	movlw	0
 16013  014070  6E3D               	movwf	(btemp+11)^0,c
 16014                           
 16015                           ;stkvar	_dtoa$4466 @ sp[(-18)+0]
 16016  014072  0EEE               	movlw	-18
 16017  014074  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16018  01407A  0EEF               	movlw	-17
 16019  01407C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16020                           
 16021                           ;stkvar	_dtoa$4466 @ sp[(-18)+0]
 16022                           ;stkvar	_i @ sp[(-18)+10]
 16023  014082  0EF8               	movlw	-8
 16024  014084  006F FF8C  F03C    	movff	plusw1,btemp+10
 16025  01408A  0EF9               	movlw	-7
 16026  01408C  006F FF8C  F03D    	movff	plusw1,btemp+11
 16027  014092  0E78               	movlw	low _dbuf
 16028  014094  243C               	addwf	(btemp+10)^0,w,c
 16029  014096  6ED9               	movwf	fsr2l,c
 16030  014098  0E01               	movlw	high _dbuf
 16031  01409A  203D               	addwfc	(btemp+11)^0,w,c
 16032  01409C  6EDA               	movwf	fsr2h,c
 16033  01409E  0EEE               	movlw	-18
 16034  0140A0  006F FF8F FFDF     	movff	plusw1,indf2
 16035  0140A6                     l9580:
 16036                           
 16037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16038                           ;stkvar	_w @ sp[(-18)+14]
 16039  0140A6  0EFC               	movlw	-4
 16040  0140A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16041  0140AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16042                           
 16043                           ;stkvar	_i @ sp[(-20)+10]
 16044  0140B4  0E78               	movlw	low _dbuf
 16045  0140B6  6E3C               	movwf	(btemp+10)^0,c
 16046  0140B8  0E01               	movlw	high _dbuf
 16047  0140BA  6E3D               	movwf	(btemp+11)^0,c
 16048  0140BC  0EF6               	movlw	-10
 16049  0140BE  50E3               	movf	plusw1,w,c
 16050  0140C0  263C               	addwf	(btemp+10)^0,f,c
 16051  0140C2  0EF7               	movlw	-9
 16052  0140C4  50E3               	movf	plusw1,w,c
 16053  0140C6  223D               	addwfc	(btemp+11)^0,f,c
 16054  0140C8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16055  0140CE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16056                           
 16057                           ;stkvar	_fp @ sp[(-22)+-2]
 16058  0140D4  0EE8               	movlw	-24
 16059  0140D6  006F FF8F FFE6     	movff	plusw1,postinc1
 16060  0140DC  006F FF8F FFE6     	movff	plusw1,postinc1
 16061  0140E2  ECB3  F0B4         	call	_pad	;wreg free
 16062                           
 16063                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16064  0140E6  0EE4               	movlw	228
 16065  0140E8  26E1               	addwf	fsr1l,f,c
 16066  0140EA  0EFF               	movlw	255
 16067  0140EC  22E2               	addwfc	fsr1h,f,c
 16068  0140EE  0012               	return		;funcret
 16069  0140F0                     __end_of_dtoa:
 16070                           	opt callstack 0
 16071                           
 16072 ;; *************** function _abs *****************
 16073 ;; Defined at:
 16074 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;  a               2  [STACK] int 
 16077 ;; Auto vars:     Size  Location     Type
 16078 ;;		None
 16079 ;; Return value:  Size  Location     Type
 16080 ;;                  2  [STACK] int 
 16081 ;; Registers used:
 16082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16083 ;; Tracked objects:
 16084 ;;		On entry : 0/1
 16085 ;;		On exit  : 0/0
 16086 ;;		Unchanged: 0/0
 16087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16092 ;;Total ram usage:        0 bytes
 16093 ;; Hardware stack levels used:    1
 16094 ;; Hardware stack levels required when called:    6
 16095 ;; This function calls:
 16096 ;;		Nothing
 16097 ;; This function is called by:
 16098 ;;		_dtoa
 16099 ;; This function uses a reentrant model
 16100 ;;
 16101                           
 16102                           	psect	text60
 16103  017E58                     __ptext60:
 16104                           	opt callstack 0
 16105  017E58                     _abs:
 16106                           	opt callstack 17
 16107                           
 16108                           ;stkvar	_a @ sp[(0)+-2]
 16109                           
 16110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16111                           ;incstack = 0
 16112  017E58  0EFF               	movlw	-1
 16113  017E5A  BEE3               	btfsc	plusw1,7,c
 16114  017E5C  D007               	goto	u5060
 16115  017E5E  0EFF               	movlw	-1
 16116  017E60  50E3               	movf	plusw1,w,c
 16117  017E62  E112               	bnz	l6522
 16118  017E64  0EFE               	movlw	-2
 16119  017E66  04E3               	decf	plusw1,w,c
 16120  017E68  B0D8               	btfsc	status,0,c
 16121  017E6A  D00E               	goto	l6522
 16122  017E6C                     u5060:
 16123                           
 16124                           ;stkvar	_a @ sp[(0)+-2]
 16125  017E6C  0EFE               	movlw	-2
 16126  017E6E  006F FF8C  F032    	movff	plusw1,btemp
 16127  017E74  1E32               	comf	btemp^0,f,c
 16128  017E76  0EFF               	movlw	-1
 16129  017E78  006F FF8C  F033    	movff	plusw1,btemp+1
 16130  017E7E  1E33               	comf	(btemp+1)^0,f,c
 16131  017E80  2A32               	incf	btemp^0,f,c
 16132  017E82  B4D8               	btfsc	status,2,c
 16133  017E84  2A33               	incf	(btemp+1)^0,f,c
 16134  017E86  D008               	goto	l2766
 16135  017E88                     l6522:
 16136                           
 16137                           ;stkvar	_a @ sp[(0)+-2]
 16138  017E88  0EFE               	movlw	-2
 16139  017E8A  006F FF8C  F032    	movff	plusw1,btemp
 16140  017E90  0EFF               	movlw	-1
 16141  017E92  006F FF8C  F033    	movff	plusw1,btemp+1
 16142  017E98                     l2766:
 16143                           
 16144                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 16145  017E98  52E5               	movf	postdec1,f,c
 16146  017E9A  52E5               	movf	postdec1,f,c
 16147  017E9C  0012               	return		;funcret
 16148  017E9E                     __end_of_abs:
 16149                           	opt callstack 0
 16150                           
 16151 ;; *************** function ___aomod *****************
 16152 ;; Defined at:
 16153 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 16154 ;; Parameters:    Size  Location     Type
 16155 ;;  dividend        8  [STACK] long long 
 16156 ;;  divisor         8  [STACK] long long 
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;  sign            1  [STACK] unsigned char 
 16159 ;;  counter         1  [STACK] unsigned char 
 16160 ;; Return value:  Size  Location     Type
 16161 ;;                  8  [STACK] long long 
 16162 ;; Registers used:
 16163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16164 ;; Tracked objects:
 16165 ;;		On entry : 0/1
 16166 ;;		On exit  : 0/0
 16167 ;;		Unchanged: 0/0
 16168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16173 ;;Total ram usage:        0 bytes
 16174 ;; Hardware stack levels used:    1
 16175 ;; Hardware stack levels required when called:    6
 16176 ;; This function calls:
 16177 ;;		Nothing
 16178 ;; This function is called by:
 16179 ;;		_dtoa
 16180 ;; This function uses a reentrant model
 16181 ;;
 16182                           
 16183                           	psect	text61
 16184  015508                     __ptext61:
 16185                           	opt callstack 0
 16186  015508                     ___aomod:
 16187                           	opt callstack 0
 16188                           
 16189                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16190  015508  52E6               	movf	postinc1,f,c
 16191  01550A  52E6               	movf	postinc1,f,c
 16192                           
 16193                           ;stkvar	_sign @ sp[(-2)+0]
 16194                           
 16195                           ;incstack = 0
 16196  01550C  0EFE               	movlw	-2
 16197  01550E  6AE3               	clrf	plusw1,c
 16198                           
 16199                           ;stkvar	_dividend @ sp[(-2)+-8]
 16200  015510  0EFD               	movlw	-3
 16201  015512  AEE3               	btfss	plusw1,7,c
 16202  015514  D028               	goto	l6680
 16203                           
 16204                           ;stkvar	_dividend @ sp[(-2)+-8]
 16205                           ;stkvar	_dividend @ sp[(-2)+-8]
 16206  015516  0EF6               	movlw	-10
 16207  015518  6CE3               	negf	plusw1,c
 16208  01551A  0EF7               	movlw	-9
 16209  01551C  1EE3               	comf	plusw1,f,c
 16210  01551E  0EF8               	movlw	-8
 16211  015520  1EE3               	comf	plusw1,f,c
 16212  015522  0EF9               	movlw	-7
 16213  015524  1EE3               	comf	plusw1,f,c
 16214  015526  0EFA               	movlw	-6
 16215  015528  1EE3               	comf	plusw1,f,c
 16216  01552A  0EFB               	movlw	-5
 16217  01552C  1EE3               	comf	plusw1,f,c
 16218  01552E  0EFC               	movlw	-4
 16219  015530  1EE3               	comf	plusw1,f,c
 16220  015532  0EFD               	movlw	-3
 16221  015534  1EE3               	comf	plusw1,f,c
 16222  015536  E314               	bnc	u5490
 16223  015538  0EF7               	movlw	-9
 16224  01553A  2AE3               	incf	plusw1,f,c
 16225  01553C  E311               	bnc	u5490
 16226  01553E  0EF8               	movlw	-8
 16227  015540  2AE3               	incf	plusw1,f,c
 16228  015542  E30E               	bnc	u5490
 16229  015544  0EF9               	movlw	-7
 16230  015546  2AE3               	incf	plusw1,f,c
 16231  015548  E30B               	bnc	u5490
 16232  01554A  0EFA               	movlw	-6
 16233  01554C  2AE3               	incf	plusw1,f,c
 16234  01554E  E308               	bnc	u5490
 16235  015550  0EFB               	movlw	-5
 16236  015552  2AE3               	incf	plusw1,f,c
 16237  015554  E305               	bnc	u5490
 16238  015556  0EFC               	movlw	-4
 16239  015558  2AE3               	incf	plusw1,f,c
 16240  01555A  E302               	bnc	u5490
 16241  01555C  0EFD               	movlw	-3
 16242  01555E  2AE3               	incf	plusw1,f,c
 16243  015560                     u5490:
 16244                           
 16245                           ;stkvar	_sign @ sp[(-2)+0]
 16246  015560  0EFE               	movlw	-2
 16247  015562  6AE3               	clrf	plusw1,c
 16248  015564  2AE3               	incf	plusw1,f,c
 16249  015566                     l6680:
 16250                           
 16251                           ;stkvar	_divisor @ sp[(-2)+-16]
 16252  015566  0EF5               	movlw	-11
 16253  015568  AEE3               	btfss	plusw1,7,c
 16254  01556A  D025               	goto	u5510
 16255                           
 16256                           ;stkvar	_divisor @ sp[(-2)+-16]
 16257                           ;stkvar	_divisor @ sp[(-2)+-16]
 16258  01556C  0EEE               	movlw	-18
 16259  01556E  6CE3               	negf	plusw1,c
 16260  015570  0EEF               	movlw	-17
 16261  015572  1EE3               	comf	plusw1,f,c
 16262  015574  0EF0               	movlw	-16
 16263  015576  1EE3               	comf	plusw1,f,c
 16264  015578  0EF1               	movlw	-15
 16265  01557A  1EE3               	comf	plusw1,f,c
 16266  01557C  0EF2               	movlw	-14
 16267  01557E  1EE3               	comf	plusw1,f,c
 16268  015580  0EF3               	movlw	-13
 16269  015582  1EE3               	comf	plusw1,f,c
 16270  015584  0EF4               	movlw	-12
 16271  015586  1EE3               	comf	plusw1,f,c
 16272  015588  0EF5               	movlw	-11
 16273  01558A  1EE3               	comf	plusw1,f,c
 16274  01558C  E314               	bnc	u5510
 16275  01558E  0EEF               	movlw	-17
 16276  015590  2AE3               	incf	plusw1,f,c
 16277  015592  E311               	bnc	u5510
 16278  015594  0EF0               	movlw	-16
 16279  015596  2AE3               	incf	plusw1,f,c
 16280  015598  E30E               	bnc	u5510
 16281  01559A  0EF1               	movlw	-15
 16282  01559C  2AE3               	incf	plusw1,f,c
 16283  01559E  E30B               	bnc	u5510
 16284  0155A0  0EF2               	movlw	-14
 16285  0155A2  2AE3               	incf	plusw1,f,c
 16286  0155A4  E308               	bnc	u5510
 16287  0155A6  0EF3               	movlw	-13
 16288  0155A8  2AE3               	incf	plusw1,f,c
 16289  0155AA  E305               	bnc	u5510
 16290  0155AC  0EF4               	movlw	-12
 16291  0155AE  2AE3               	incf	plusw1,f,c
 16292  0155B0  E302               	bnc	u5510
 16293  0155B2  0EF5               	movlw	-11
 16294  0155B4  2AE3               	incf	plusw1,f,c
 16295  0155B6                     u5510:
 16296                           
 16297                           ;stkvar	_divisor @ sp[(-2)+-16]
 16298  0155B6  0EEE               	movlw	-18
 16299  0155B8  50E3               	movf	plusw1,w,c
 16300  0155BA  E116               	bnz	u5520
 16301  0155BC  0EEF               	movlw	-17
 16302  0155BE  50E3               	movf	plusw1,w,c
 16303  0155C0  E113               	bnz	u5520
 16304  0155C2  0EF0               	movlw	-16
 16305  0155C4  50E3               	movf	plusw1,w,c
 16306  0155C6  E110               	bnz	u5520
 16307  0155C8  0EF1               	movlw	-15
 16308  0155CA  50E3               	movf	plusw1,w,c
 16309  0155CC  E10D               	bnz	u5520
 16310  0155CE  0EF2               	movlw	-14
 16311  0155D0  50E3               	movf	plusw1,w,c
 16312  0155D2  E10A               	bnz	u5520
 16313  0155D4  0EF3               	movlw	-13
 16314  0155D6  50E3               	movf	plusw1,w,c
 16315  0155D8  E107               	bnz	u5520
 16316  0155DA  0EF4               	movlw	-12
 16317  0155DC  50E3               	movf	plusw1,w,c
 16318  0155DE  E104               	bnz	u5520
 16319  0155E0  0EF5               	movlw	-11
 16320  0155E2  50E3               	movf	plusw1,w,c
 16321  0155E4  B4D8               	btfsc	status,2,c
 16322  0155E6  D075               	goto	u5550
 16323  0155E8                     u5520:
 16324                           
 16325                           ;stkvar	_counter @ sp[(-2)+1]
 16326  0155E8  0EFF               	movlw	-1
 16327  0155EA  6AE3               	clrf	plusw1,c
 16328  0155EC  D012               	goto	L18
 16329  0155EE                     l6688:
 16330                           
 16331                           ;stkvar	_divisor @ sp[(-2)+-16]
 16332  0155EE  90D8               	bcf	status,0,c
 16333  0155F0  0EEE               	movlw	-18
 16334  0155F2  36E3               	rlcf	plusw1,f,c
 16335  0155F4  0EEF               	movlw	-17
 16336  0155F6  36E3               	rlcf	plusw1,f,c
 16337  0155F8  0EF0               	movlw	-16
 16338  0155FA  36E3               	rlcf	plusw1,f,c
 16339  0155FC  0EF1               	movlw	-15
 16340  0155FE  36E3               	rlcf	plusw1,f,c
 16341  015600  0EF2               	movlw	-14
 16342  015602  36E3               	rlcf	plusw1,f,c
 16343  015604  0EF3               	movlw	-13
 16344  015606  36E3               	rlcf	plusw1,f,c
 16345  015608  0EF4               	movlw	-12
 16346  01560A  36E3               	rlcf	plusw1,f,c
 16347  01560C  0EF5               	movlw	-11
 16348  01560E  36E3               	rlcf	plusw1,f,c
 16349                           
 16350                           ;stkvar	_counter @ sp[(-2)+1]
 16351  015610  0EFF               	movlw	-1
 16352  015612                     L18:
 16353  015612  2AE3               	incf	plusw1,f,c
 16354                           
 16355                           ;stkvar	_divisor @ sp[(-2)+-16]
 16356  015614  0EF5               	movlw	-11
 16357  015616  AEE3               	btfss	plusw1,7,c
 16358  015618  D7EA               	goto	l6688
 16359  01561A                     u5530:
 16360                           
 16361                           ;stkvar	_divisor @ sp[(-2)+-16]
 16362                           ;stkvar	_dividend @ sp[(-2)+-8]
 16363  01561A  50E1               	movf	fsr1l,w,c
 16364  01561C  0FF6               	addlw	-10
 16365  01561E  6ED9               	movwf	fsr2l,c
 16366  015620  50E2               	movf	fsr1h,w,c
 16367  015622  6EDA               	movwf	fsr2h,c
 16368  015624  0EFF               	movlw	255
 16369  015626  22DA               	addwfc	fsr2h,f,c
 16370  015628  0EEE               	movlw	-18
 16371  01562A  50E3               	movf	plusw1,w,c
 16372  01562C  5CDE               	subwf	postinc2,w,c
 16373  01562E  0EEF               	movlw	-17
 16374  015630  50E3               	movf	plusw1,w,c
 16375  015632  58DE               	subwfb	postinc2,w,c
 16376  015634  0EF0               	movlw	-16
 16377  015636  50E3               	movf	plusw1,w,c
 16378  015638  58DE               	subwfb	postinc2,w,c
 16379  01563A  0EF1               	movlw	-15
 16380  01563C  50E3               	movf	plusw1,w,c
 16381  01563E  58DE               	subwfb	postinc2,w,c
 16382  015640  0EF2               	movlw	-14
 16383  015642  50E3               	movf	plusw1,w,c
 16384  015644  58DE               	subwfb	postinc2,w,c
 16385  015646  0EF3               	movlw	-13
 16386  015648  50E3               	movf	plusw1,w,c
 16387  01564A  58DE               	subwfb	postinc2,w,c
 16388  01564C  0EF4               	movlw	-12
 16389  01564E  50E3               	movf	plusw1,w,c
 16390  015650  58DE               	subwfb	postinc2,w,c
 16391  015652  0EF5               	movlw	-11
 16392  015654  50E3               	movf	plusw1,w,c
 16393  015656  58DE               	subwfb	postinc2,w,c
 16394  015658  A0D8               	btfss	status,0,c
 16395  01565A  D01F               	goto	l6696
 16396                           
 16397                           ;stkvar	_divisor @ sp[(-2)+-16]
 16398                           ;stkvar	_dividend @ sp[(-2)+-8]
 16399  01565C  50E1               	movf	fsr1l,w,c
 16400  01565E  0FF6               	addlw	-10
 16401  015660  6ED9               	movwf	fsr2l,c
 16402  015662  50E2               	movf	fsr1h,w,c
 16403  015664  6EDA               	movwf	fsr2h,c
 16404  015666  0EFF               	movlw	255
 16405  015668  22DA               	addwfc	fsr2h,f,c
 16406  01566A  0EEE               	movlw	-18
 16407  01566C  50E3               	movf	plusw1,w,c
 16408  01566E  5EDE               	subwf	postinc2,f,c
 16409  015670  0EEF               	movlw	-17
 16410  015672  50E3               	movf	plusw1,w,c
 16411  015674  5ADE               	subwfb	postinc2,f,c
 16412  015676  0EF0               	movlw	-16
 16413  015678  50E3               	movf	plusw1,w,c
 16414  01567A  5ADE               	subwfb	postinc2,f,c
 16415  01567C  0EF1               	movlw	-15
 16416  01567E  50E3               	movf	plusw1,w,c
 16417  015680  5ADE               	subwfb	postinc2,f,c
 16418  015682  0EF2               	movlw	-14
 16419  015684  50E3               	movf	plusw1,w,c
 16420  015686  5ADE               	subwfb	postinc2,f,c
 16421  015688  0EF3               	movlw	-13
 16422  01568A  50E3               	movf	plusw1,w,c
 16423  01568C  5ADE               	subwfb	postinc2,f,c
 16424  01568E  0EF4               	movlw	-12
 16425  015690  50E3               	movf	plusw1,w,c
 16426  015692  5ADE               	subwfb	postinc2,f,c
 16427  015694  0EF5               	movlw	-11
 16428  015696  50E3               	movf	plusw1,w,c
 16429  015698  5ADE               	subwfb	postinc2,f,c
 16430  01569A                     l6696:
 16431                           
 16432                           ;stkvar	_divisor @ sp[(-2)+-16]
 16433  01569A  90D8               	bcf	status,0,c
 16434  01569C  0EF5               	movlw	-11
 16435  01569E  32E3               	rrcf	plusw1,f,c
 16436  0156A0  0EF4               	movlw	-12
 16437  0156A2  32E3               	rrcf	plusw1,f,c
 16438  0156A4  0EF3               	movlw	-13
 16439  0156A6  32E3               	rrcf	plusw1,f,c
 16440  0156A8  0EF2               	movlw	-14
 16441  0156AA  32E3               	rrcf	plusw1,f,c
 16442  0156AC  0EF1               	movlw	-15
 16443  0156AE  32E3               	rrcf	plusw1,f,c
 16444  0156B0  0EF0               	movlw	-16
 16445  0156B2  32E3               	rrcf	plusw1,f,c
 16446  0156B4  0EEF               	movlw	-17
 16447  0156B6  32E3               	rrcf	plusw1,f,c
 16448  0156B8  0EEE               	movlw	-18
 16449  0156BA  32E3               	rrcf	plusw1,f,c
 16450                           
 16451                           ;stkvar	_counter @ sp[(-2)+1]
 16452  0156BC  0EFF               	movlw	-1
 16453  0156BE  50E3               	movf	plusw1,w,c
 16454  0156C0  6E32               	movwf	btemp^0,c
 16455  0156C2  0E01               	movlw	1
 16456  0156C4  5E32               	subwf	btemp^0,f,c
 16457  0156C6  0EFF               	movlw	-1
 16458  0156C8  0060  F0CB  FFE3   	movff	btemp,plusw1
 16459  0156CE  A4D8               	btfss	status,2,c
 16460  0156D0  D7A4               	goto	u5530
 16461  0156D2                     u5550:
 16462                           
 16463                           ;stkvar	_sign @ sp[(-2)+0]
 16464  0156D2  0EFE               	movlw	-2
 16465  0156D4  50E3               	movf	plusw1,w,c
 16466  0156D6  B4D8               	btfsc	status,2,c
 16467  0156D8  D025               	goto	u5570
 16468                           
 16469                           ;stkvar	_dividend @ sp[(-2)+-8]
 16470                           ;stkvar	_dividend @ sp[(-2)+-8]
 16471  0156DA  0EF6               	movlw	-10
 16472  0156DC  6CE3               	negf	plusw1,c
 16473  0156DE  0EF7               	movlw	-9
 16474  0156E0  1EE3               	comf	plusw1,f,c
 16475  0156E2  0EF8               	movlw	-8
 16476  0156E4  1EE3               	comf	plusw1,f,c
 16477  0156E6  0EF9               	movlw	-7
 16478  0156E8  1EE3               	comf	plusw1,f,c
 16479  0156EA  0EFA               	movlw	-6
 16480  0156EC  1EE3               	comf	plusw1,f,c
 16481  0156EE  0EFB               	movlw	-5
 16482  0156F0  1EE3               	comf	plusw1,f,c
 16483  0156F2  0EFC               	movlw	-4
 16484  0156F4  1EE3               	comf	plusw1,f,c
 16485  0156F6  0EFD               	movlw	-3
 16486  0156F8  1EE3               	comf	plusw1,f,c
 16487  0156FA  E314               	bnc	u5570
 16488  0156FC  0EF7               	movlw	-9
 16489  0156FE  2AE3               	incf	plusw1,f,c
 16490  015700  E311               	bnc	u5570
 16491  015702  0EF8               	movlw	-8
 16492  015704  2AE3               	incf	plusw1,f,c
 16493  015706  E30E               	bnc	u5570
 16494  015708  0EF9               	movlw	-7
 16495  01570A  2AE3               	incf	plusw1,f,c
 16496  01570C  E30B               	bnc	u5570
 16497  01570E  0EFA               	movlw	-6
 16498  015710  2AE3               	incf	plusw1,f,c
 16499  015712  E308               	bnc	u5570
 16500  015714  0EFB               	movlw	-5
 16501  015716  2AE3               	incf	plusw1,f,c
 16502  015718  E305               	bnc	u5570
 16503  01571A  0EFC               	movlw	-4
 16504  01571C  2AE3               	incf	plusw1,f,c
 16505  01571E  E302               	bnc	u5570
 16506  015720  0EFD               	movlw	-3
 16507  015722  2AE3               	incf	plusw1,f,c
 16508  015724                     u5570:
 16509                           
 16510                           ;stkvar	_dividend @ sp[(-2)+-8]
 16511  015724  0EF6               	movlw	246
 16512  015726  24E1               	addwf	fsr1l,w,c
 16513  015728  6ED9               	movwf	fsr2l,c
 16514  01572A  0EFF               	movlw	255
 16515  01572C  20E2               	addwfc	fsr1h,w,c
 16516  01572E  6EDA               	movwf	fsr2h,c
 16517                           
 16518                           ;stkvar	?___aomod @ sp[(-2)+-8]
 16519  015730  0E08               	movlw	8
 16520  015732  6E32               	movwf	btemp^0,c
 16521  015734  0EF6               	movlw	-10
 16522  015736                     us558999:
 16523  015736  006F FF7B FFE3     	movff	postinc2,plusw1
 16524  01573C  28E8               	incf	wreg,w,c
 16525  01573E  2E32               	decfsz	btemp^0,f,c
 16526  015740  D7FA               	bra	us558999
 16527                           
 16528                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16529  015742  52E5               	movf	postdec1,f,c
 16530  015744  52E5               	movf	postdec1,f,c
 16531  015746  0012               	return		;funcret
 16532  015748                     __end_of___aomod:
 16533                           	opt callstack 0
 16534                           
 16535 ;; *************** function ___aodiv *****************
 16536 ;; Defined at:
 16537 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 16538 ;; Parameters:    Size  Location     Type
 16539 ;;  dividend        8  [STACK] long long 
 16540 ;;  divisor         8  [STACK] long long 
 16541 ;; Auto vars:     Size  Location     Type
 16542 ;;  quotient        8  [STACK] long long 
 16543 ;;  sign            1  [STACK] unsigned char 
 16544 ;;  counter         1  [STACK] unsigned char 
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  8  [STACK] long long 
 16547 ;; Registers used:
 16548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/1
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16558 ;;Total ram usage:        0 bytes
 16559 ;; Hardware stack levels used:    1
 16560 ;; Hardware stack levels required when called:    6
 16561 ;; This function calls:
 16562 ;;		Nothing
 16563 ;; This function is called by:
 16564 ;;		_dtoa
 16565 ;; This function uses a reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text62
 16569  014DC0                     __ptext62:
 16570                           	opt callstack 0
 16571  014DC0                     ___aodiv:
 16572                           	opt callstack 0
 16573                           
 16574                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 16575  014DC0  0E0A               	movlw	10
 16576  014DC2  26E1               	addwf	fsr1l,f,c
 16577  014DC4  0E00               	movlw	0
 16578  014DC6  22E2               	addwfc	fsr1h,f,c
 16579                           
 16580                           ;stkvar	_sign @ sp[(-10)+8]
 16581                           
 16582                           ;incstack = 0
 16583  014DC8  0EFE               	movlw	-2
 16584  014DCA  6AE3               	clrf	plusw1,c
 16585                           
 16586                           ;stkvar	_divisor @ sp[(-10)+-16]
 16587  014DCC  0EED               	movlw	-19
 16588  014DCE  AEE3               	btfss	plusw1,7,c
 16589  014DD0  D028               	goto	l6636
 16590                           
 16591                           ;stkvar	_divisor @ sp[(-10)+-16]
 16592                           ;stkvar	_divisor @ sp[(-10)+-16]
 16593  014DD2  0EE6               	movlw	-26
 16594  014DD4  6CE3               	negf	plusw1,c
 16595  014DD6  0EE7               	movlw	-25
 16596  014DD8  1EE3               	comf	plusw1,f,c
 16597  014DDA  0EE8               	movlw	-24
 16598  014DDC  1EE3               	comf	plusw1,f,c
 16599  014DDE  0EE9               	movlw	-23
 16600  014DE0  1EE3               	comf	plusw1,f,c
 16601  014DE2  0EEA               	movlw	-22
 16602  014DE4  1EE3               	comf	plusw1,f,c
 16603  014DE6  0EEB               	movlw	-21
 16604  014DE8  1EE3               	comf	plusw1,f,c
 16605  014DEA  0EEC               	movlw	-20
 16606  014DEC  1EE3               	comf	plusw1,f,c
 16607  014DEE  0EED               	movlw	-19
 16608  014DF0  1EE3               	comf	plusw1,f,c
 16609  014DF2  E314               	bnc	u5370
 16610  014DF4  0EE7               	movlw	-25
 16611  014DF6  2AE3               	incf	plusw1,f,c
 16612  014DF8  E311               	bnc	u5370
 16613  014DFA  0EE8               	movlw	-24
 16614  014DFC  2AE3               	incf	plusw1,f,c
 16615  014DFE  E30E               	bnc	u5370
 16616  014E00  0EE9               	movlw	-23
 16617  014E02  2AE3               	incf	plusw1,f,c
 16618  014E04  E30B               	bnc	u5370
 16619  014E06  0EEA               	movlw	-22
 16620  014E08  2AE3               	incf	plusw1,f,c
 16621  014E0A  E308               	bnc	u5370
 16622  014E0C  0EEB               	movlw	-21
 16623  014E0E  2AE3               	incf	plusw1,f,c
 16624  014E10  E305               	bnc	u5370
 16625  014E12  0EEC               	movlw	-20
 16626  014E14  2AE3               	incf	plusw1,f,c
 16627  014E16  E302               	bnc	u5370
 16628  014E18  0EED               	movlw	-19
 16629  014E1A  2AE3               	incf	plusw1,f,c
 16630  014E1C                     u5370:
 16631                           
 16632                           ;stkvar	_sign @ sp[(-10)+8]
 16633  014E1C  0EFE               	movlw	-2
 16634  014E1E  6AE3               	clrf	plusw1,c
 16635  014E20  2AE3               	incf	plusw1,f,c
 16636  014E22                     l6636:
 16637                           
 16638                           ;stkvar	_dividend @ sp[(-10)+-8]
 16639  014E22  0EF5               	movlw	-11
 16640  014E24  AEE3               	btfss	plusw1,7,c
 16641  014E26  D027               	goto	l6642
 16642                           
 16643                           ;stkvar	_dividend @ sp[(-10)+-8]
 16644                           ;stkvar	_dividend @ sp[(-10)+-8]
 16645  014E28  0EEE               	movlw	-18
 16646  014E2A  6CE3               	negf	plusw1,c
 16647  014E2C  0EEF               	movlw	-17
 16648  014E2E  1EE3               	comf	plusw1,f,c
 16649  014E30  0EF0               	movlw	-16
 16650  014E32  1EE3               	comf	plusw1,f,c
 16651  014E34  0EF1               	movlw	-15
 16652  014E36  1EE3               	comf	plusw1,f,c
 16653  014E38  0EF2               	movlw	-14
 16654  014E3A  1EE3               	comf	plusw1,f,c
 16655  014E3C  0EF3               	movlw	-13
 16656  014E3E  1EE3               	comf	plusw1,f,c
 16657  014E40  0EF4               	movlw	-12
 16658  014E42  1EE3               	comf	plusw1,f,c
 16659  014E44  0EF5               	movlw	-11
 16660  014E46  1EE3               	comf	plusw1,f,c
 16661  014E48  E314               	bnc	u5390
 16662  014E4A  0EEF               	movlw	-17
 16663  014E4C  2AE3               	incf	plusw1,f,c
 16664  014E4E  E311               	bnc	u5390
 16665  014E50  0EF0               	movlw	-16
 16666  014E52  2AE3               	incf	plusw1,f,c
 16667  014E54  E30E               	bnc	u5390
 16668  014E56  0EF1               	movlw	-15
 16669  014E58  2AE3               	incf	plusw1,f,c
 16670  014E5A  E30B               	bnc	u5390
 16671  014E5C  0EF2               	movlw	-14
 16672  014E5E  2AE3               	incf	plusw1,f,c
 16673  014E60  E308               	bnc	u5390
 16674  014E62  0EF3               	movlw	-13
 16675  014E64  2AE3               	incf	plusw1,f,c
 16676  014E66  E305               	bnc	u5390
 16677  014E68  0EF4               	movlw	-12
 16678  014E6A  2AE3               	incf	plusw1,f,c
 16679  014E6C  E302               	bnc	u5390
 16680  014E6E  0EF5               	movlw	-11
 16681  014E70  2AE3               	incf	plusw1,f,c
 16682  014E72                     u5390:
 16683                           
 16684                           ;stkvar	_sign @ sp[(-10)+8]
 16685  014E72  0EFE               	movlw	-2
 16686  014E74  70E3               	btg	plusw1,0,c
 16687  014E76                     l6642:
 16688                           
 16689                           ;stkvar	_quotient @ sp[(-10)+0]
 16690  014E76  0E07               	movlw	7
 16691  014E78  6E32               	movwf	btemp^0,c
 16692  014E7A  0EF6               	movlw	-10
 16693  014E7C                     u5401:
 16694  014E7C  6AE3               	clrf	plusw1,c
 16695  014E7E  2AE8               	incf	wreg,f,c
 16696  014E80  0632               	decf	btemp^0,f,c
 16697  014E82  E2FC               	bc	u5401
 16698                           
 16699                           ;stkvar	_divisor @ sp[(-10)+-16]
 16700  014E84  0EE6               	movlw	-26
 16701  014E86  50E3               	movf	plusw1,w,c
 16702  014E88  E116               	bnz	u5410
 16703  014E8A  0EE7               	movlw	-25
 16704  014E8C  50E3               	movf	plusw1,w,c
 16705  014E8E  E113               	bnz	u5410
 16706  014E90  0EE8               	movlw	-24
 16707  014E92  50E3               	movf	plusw1,w,c
 16708  014E94  E110               	bnz	u5410
 16709  014E96  0EE9               	movlw	-23
 16710  014E98  50E3               	movf	plusw1,w,c
 16711  014E9A  E10D               	bnz	u5410
 16712  014E9C  0EEA               	movlw	-22
 16713  014E9E  50E3               	movf	plusw1,w,c
 16714  014EA0  E10A               	bnz	u5410
 16715  014EA2  0EEB               	movlw	-21
 16716  014EA4  50E3               	movf	plusw1,w,c
 16717  014EA6  E107               	bnz	u5410
 16718  014EA8  0EEC               	movlw	-20
 16719  014EAA  50E3               	movf	plusw1,w,c
 16720  014EAC  E104               	bnz	u5410
 16721  014EAE  0EED               	movlw	-19
 16722  014EB0  50E3               	movf	plusw1,w,c
 16723  014EB2  B4D8               	btfsc	status,2,c
 16724  014EB4  D088               	goto	u5440
 16725  014EB6                     u5410:
 16726                           
 16727                           ;stkvar	_counter @ sp[(-10)+9]
 16728  014EB6  0EFF               	movlw	-1
 16729  014EB8  6AE3               	clrf	plusw1,c
 16730  014EBA  D012               	goto	L19
 16731  014EBC                     l6648:
 16732                           
 16733                           ;stkvar	_divisor @ sp[(-10)+-16]
 16734  014EBC  90D8               	bcf	status,0,c
 16735  014EBE  0EE6               	movlw	-26
 16736  014EC0  36E3               	rlcf	plusw1,f,c
 16737  014EC2  0EE7               	movlw	-25
 16738  014EC4  36E3               	rlcf	plusw1,f,c
 16739  014EC6  0EE8               	movlw	-24
 16740  014EC8  36E3               	rlcf	plusw1,f,c
 16741  014ECA  0EE9               	movlw	-23
 16742  014ECC  36E3               	rlcf	plusw1,f,c
 16743  014ECE  0EEA               	movlw	-22
 16744  014ED0  36E3               	rlcf	plusw1,f,c
 16745  014ED2  0EEB               	movlw	-21
 16746  014ED4  36E3               	rlcf	plusw1,f,c
 16747  014ED6  0EEC               	movlw	-20
 16748  014ED8  36E3               	rlcf	plusw1,f,c
 16749  014EDA  0EED               	movlw	-19
 16750  014EDC  36E3               	rlcf	plusw1,f,c
 16751                           
 16752                           ;stkvar	_counter @ sp[(-10)+9]
 16753  014EDE  0EFF               	movlw	-1
 16754  014EE0                     L19:
 16755  014EE0  2AE3               	incf	plusw1,f,c
 16756                           
 16757                           ;stkvar	_divisor @ sp[(-10)+-16]
 16758  014EE2  0EED               	movlw	-19
 16759  014EE4  AEE3               	btfss	plusw1,7,c
 16760  014EE6  D7EA               	goto	l6648
 16761  014EE8                     u5420:
 16762                           
 16763                           ;stkvar	_quotient @ sp[(-10)+0]
 16764  014EE8  90D8               	bcf	status,0,c
 16765  014EEA  0EF6               	movlw	-10
 16766  014EEC  36E3               	rlcf	plusw1,f,c
 16767  014EEE  0EF7               	movlw	-9
 16768  014EF0  36E3               	rlcf	plusw1,f,c
 16769  014EF2  0EF8               	movlw	-8
 16770  014EF4  36E3               	rlcf	plusw1,f,c
 16771  014EF6  0EF9               	movlw	-7
 16772  014EF8  36E3               	rlcf	plusw1,f,c
 16773  014EFA  0EFA               	movlw	-6
 16774  014EFC  36E3               	rlcf	plusw1,f,c
 16775  014EFE  0EFB               	movlw	-5
 16776  014F00  36E3               	rlcf	plusw1,f,c
 16777  014F02  0EFC               	movlw	-4
 16778  014F04  36E3               	rlcf	plusw1,f,c
 16779  014F06  0EFD               	movlw	-3
 16780  014F08  36E3               	rlcf	plusw1,f,c
 16781                           
 16782                           ;stkvar	_divisor @ sp[(-10)+-16]
 16783                           ;stkvar	_dividend @ sp[(-10)+-8]
 16784  014F0A  50E1               	movf	fsr1l,w,c
 16785  014F0C  0FEE               	addlw	-18
 16786  014F0E  6ED9               	movwf	fsr2l,c
 16787  014F10  50E2               	movf	fsr1h,w,c
 16788  014F12  6EDA               	movwf	fsr2h,c
 16789  014F14  0EFF               	movlw	255
 16790  014F16  22DA               	addwfc	fsr2h,f,c
 16791  014F18  0EE6               	movlw	-26
 16792  014F1A  50E3               	movf	plusw1,w,c
 16793  014F1C  5CDE               	subwf	postinc2,w,c
 16794  014F1E  0EE7               	movlw	-25
 16795  014F20  50E3               	movf	plusw1,w,c
 16796  014F22  58DE               	subwfb	postinc2,w,c
 16797  014F24  0EE8               	movlw	-24
 16798  014F26  50E3               	movf	plusw1,w,c
 16799  014F28  58DE               	subwfb	postinc2,w,c
 16800  014F2A  0EE9               	movlw	-23
 16801  014F2C  50E3               	movf	plusw1,w,c
 16802  014F2E  58DE               	subwfb	postinc2,w,c
 16803  014F30  0EEA               	movlw	-22
 16804  014F32  50E3               	movf	plusw1,w,c
 16805  014F34  58DE               	subwfb	postinc2,w,c
 16806  014F36  0EEB               	movlw	-21
 16807  014F38  50E3               	movf	plusw1,w,c
 16808  014F3A  58DE               	subwfb	postinc2,w,c
 16809  014F3C  0EEC               	movlw	-20
 16810  014F3E  50E3               	movf	plusw1,w,c
 16811  014F40  58DE               	subwfb	postinc2,w,c
 16812  014F42  0EED               	movlw	-19
 16813  014F44  50E3               	movf	plusw1,w,c
 16814  014F46  58DE               	subwfb	postinc2,w,c
 16815  014F48  A0D8               	btfss	status,0,c
 16816  014F4A  D021               	goto	l6660
 16817                           
 16818                           ;stkvar	_divisor @ sp[(-10)+-16]
 16819                           ;stkvar	_dividend @ sp[(-10)+-8]
 16820  014F4C  50E1               	movf	fsr1l,w,c
 16821  014F4E  0FEE               	addlw	-18
 16822  014F50  6ED9               	movwf	fsr2l,c
 16823  014F52  50E2               	movf	fsr1h,w,c
 16824  014F54  6EDA               	movwf	fsr2h,c
 16825  014F56  0EFF               	movlw	255
 16826  014F58  22DA               	addwfc	fsr2h,f,c
 16827  014F5A  0EE6               	movlw	-26
 16828  014F5C  50E3               	movf	plusw1,w,c
 16829  014F5E  5EDE               	subwf	postinc2,f,c
 16830  014F60  0EE7               	movlw	-25
 16831  014F62  50E3               	movf	plusw1,w,c
 16832  014F64  5ADE               	subwfb	postinc2,f,c
 16833  014F66  0EE8               	movlw	-24
 16834  014F68  50E3               	movf	plusw1,w,c
 16835  014F6A  5ADE               	subwfb	postinc2,f,c
 16836  014F6C  0EE9               	movlw	-23
 16837  014F6E  50E3               	movf	plusw1,w,c
 16838  014F70  5ADE               	subwfb	postinc2,f,c
 16839  014F72  0EEA               	movlw	-22
 16840  014F74  50E3               	movf	plusw1,w,c
 16841  014F76  5ADE               	subwfb	postinc2,f,c
 16842  014F78  0EEB               	movlw	-21
 16843  014F7A  50E3               	movf	plusw1,w,c
 16844  014F7C  5ADE               	subwfb	postinc2,f,c
 16845  014F7E  0EEC               	movlw	-20
 16846  014F80  50E3               	movf	plusw1,w,c
 16847  014F82  5ADE               	subwfb	postinc2,f,c
 16848  014F84  0EED               	movlw	-19
 16849  014F86  50E3               	movf	plusw1,w,c
 16850  014F88  5ADE               	subwfb	postinc2,f,c
 16851                           
 16852                           ;stkvar	_quotient @ sp[(-10)+0]
 16853  014F8A  0EF6               	movlw	-10
 16854  014F8C  80E3               	bsf	plusw1,0,c
 16855  014F8E                     l6660:
 16856                           
 16857                           ;stkvar	_divisor @ sp[(-10)+-16]
 16858  014F8E  90D8               	bcf	status,0,c
 16859  014F90  0EED               	movlw	-19
 16860  014F92  32E3               	rrcf	plusw1,f,c
 16861  014F94  0EEC               	movlw	-20
 16862  014F96  32E3               	rrcf	plusw1,f,c
 16863  014F98  0EEB               	movlw	-21
 16864  014F9A  32E3               	rrcf	plusw1,f,c
 16865  014F9C  0EEA               	movlw	-22
 16866  014F9E  32E3               	rrcf	plusw1,f,c
 16867  014FA0  0EE9               	movlw	-23
 16868  014FA2  32E3               	rrcf	plusw1,f,c
 16869  014FA4  0EE8               	movlw	-24
 16870  014FA6  32E3               	rrcf	plusw1,f,c
 16871  014FA8  0EE7               	movlw	-25
 16872  014FAA  32E3               	rrcf	plusw1,f,c
 16873  014FAC  0EE6               	movlw	-26
 16874  014FAE  32E3               	rrcf	plusw1,f,c
 16875                           
 16876                           ;stkvar	_counter @ sp[(-10)+9]
 16877  014FB0  0EFF               	movlw	-1
 16878  014FB2  50E3               	movf	plusw1,w,c
 16879  014FB4  6E32               	movwf	btemp^0,c
 16880  014FB6  0E01               	movlw	1
 16881  014FB8  5E32               	subwf	btemp^0,f,c
 16882  014FBA  0EFF               	movlw	-1
 16883  014FBC  0060  F0CB  FFE3   	movff	btemp,plusw1
 16884  014FC2  A4D8               	btfss	status,2,c
 16885  014FC4  D791               	goto	u5420
 16886  014FC6                     u5440:
 16887                           
 16888                           ;stkvar	_sign @ sp[(-10)+8]
 16889  014FC6  0EFE               	movlw	-2
 16890  014FC8  50E3               	movf	plusw1,w,c
 16891  014FCA  B4D8               	btfsc	status,2,c
 16892  014FCC  D025               	goto	u5460
 16893                           
 16894                           ;stkvar	_quotient @ sp[(-10)+0]
 16895                           ;stkvar	_quotient @ sp[(-10)+0]
 16896  014FCE  0EF6               	movlw	-10
 16897  014FD0  6CE3               	negf	plusw1,c
 16898  014FD2  0EF7               	movlw	-9
 16899  014FD4  1EE3               	comf	plusw1,f,c
 16900  014FD6  0EF8               	movlw	-8
 16901  014FD8  1EE3               	comf	plusw1,f,c
 16902  014FDA  0EF9               	movlw	-7
 16903  014FDC  1EE3               	comf	plusw1,f,c
 16904  014FDE  0EFA               	movlw	-6
 16905  014FE0  1EE3               	comf	plusw1,f,c
 16906  014FE2  0EFB               	movlw	-5
 16907  014FE4  1EE3               	comf	plusw1,f,c
 16908  014FE6  0EFC               	movlw	-4
 16909  014FE8  1EE3               	comf	plusw1,f,c
 16910  014FEA  0EFD               	movlw	-3
 16911  014FEC  1EE3               	comf	plusw1,f,c
 16912  014FEE  E314               	bnc	u5460
 16913  014FF0  0EF7               	movlw	-9
 16914  014FF2  2AE3               	incf	plusw1,f,c
 16915  014FF4  E311               	bnc	u5460
 16916  014FF6  0EF8               	movlw	-8
 16917  014FF8  2AE3               	incf	plusw1,f,c
 16918  014FFA  E30E               	bnc	u5460
 16919  014FFC  0EF9               	movlw	-7
 16920  014FFE  2AE3               	incf	plusw1,f,c
 16921  015000  E30B               	bnc	u5460
 16922  015002  0EFA               	movlw	-6
 16923  015004  2AE3               	incf	plusw1,f,c
 16924  015006  E308               	bnc	u5460
 16925  015008  0EFB               	movlw	-5
 16926  01500A  2AE3               	incf	plusw1,f,c
 16927  01500C  E305               	bnc	u5460
 16928  01500E  0EFC               	movlw	-4
 16929  015010  2AE3               	incf	plusw1,f,c
 16930  015012  E302               	bnc	u5460
 16931  015014  0EFD               	movlw	-3
 16932  015016  2AE3               	incf	plusw1,f,c
 16933  015018                     u5460:
 16934                           
 16935                           ;stkvar	_quotient @ sp[(-10)+0]
 16936  015018  0EF6               	movlw	246
 16937  01501A  24E1               	addwf	fsr1l,w,c
 16938  01501C  6ED9               	movwf	fsr2l,c
 16939  01501E  0EFF               	movlw	255
 16940  015020  20E2               	addwfc	fsr1h,w,c
 16941  015022  6EDA               	movwf	fsr2h,c
 16942                           
 16943                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 16944  015024  0E08               	movlw	8
 16945  015026  6E32               	movwf	btemp^0,c
 16946  015028  0EEE               	movlw	-18
 16947  01502A                     us547999:
 16948  01502A  006F FF7B FFE3     	movff	postinc2,plusw1
 16949  015030  28E8               	incf	wreg,w,c
 16950  015032  2E32               	decfsz	btemp^0,f,c
 16951  015034  D7FA               	bra	us547999
 16952                           
 16953                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 16954  015036  0EF6               	movlw	246
 16955  015038  26E1               	addwf	fsr1l,f,c
 16956  01503A  0EFF               	movlw	255
 16957  01503C  22E2               	addwfc	fsr1h,f,c
 16958  01503E  0012               	return		;funcret
 16959  015040                     __end_of___aodiv:
 16960                           	opt callstack 0
 16961                           
 16962 ;; *************** function _ctoa *****************
 16963 ;; Defined at:
 16964 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16965 ;; Parameters:    Size  Location     Type
 16966 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16967 ;;		 -> f(6), NULL(0), 
 16968 ;;  c               1  [STACK] unsigned char 
 16969 ;; Auto vars:     Size  Location     Type
 16970 ;;  w               2  [STACK] int 
 16971 ;;  l               2    0        int 
 16972 ;; Return value:  Size  Location     Type
 16973 ;;                  2  [STACK] int 
 16974 ;; Registers used:
 16975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16976 ;; Tracked objects:
 16977 ;;		On entry : 0/5
 16978 ;;		On exit  : 0/0
 16979 ;;		Unchanged: 0/0
 16980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16985 ;;Total ram usage:        0 bytes
 16986 ;; Hardware stack levels used:    1
 16987 ;; Hardware stack levels required when called:   11
 16988 ;; This function calls:
 16989 ;;		_pad
 16990 ;; This function is called by:
 16991 ;;		_vfpfcnvrt
 16992 ;; This function uses a reentrant model
 16993 ;;
 16994                           
 16995                           	psect	text63
 16996  017646                     __ptext63:
 16997                           	opt callstack 0
 16998  017646                     _ctoa:
 16999                           	opt callstack 0
 17000                           
 17001                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17002  017646  52E6               	movf	postinc1,f,c
 17003  017648  52E6               	movf	postinc1,f,c
 17004                           
 17005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17006                           
 17007                           ;incstack = 0
 17008  01764A  501B               	movf	_width^0,w,c
 17009  01764C  101C               	iorwf	(_width+1)^0,w,c
 17010  01764E  A4D8               	btfss	status,2,c
 17011  017650  D009               	goto	l9508
 17012                           
 17013                           ;stkvar	_w @ sp[(-2)+0]
 17014  017652  0EFE               	movlw	-2
 17015  017654  0060  F06F  FFE3   	movff	_width,plusw1
 17016  01765A  0EFF               	movlw	-1
 17017  01765C  0060  F073  FFE3   	movff	_width+1,plusw1
 17018  017662  D016               	goto	l9510
 17019  017664                     l9508:
 17020  017664  0EFF               	movlw	255
 17021  017666  6E3C               	movwf	(btemp+10)^0,c
 17022  017668  0EFF               	movlw	255
 17023  01766A  6E3D               	movwf	(btemp+11)^0,c
 17024  01766C  0060  F06C  F03A   	movff	_width,btemp+8
 17025  017672  0060  F070  F03B   	movff	_width+1,btemp+9
 17026  017678  503C               	movf	(btemp+10)^0,w,c
 17027  01767A  263A               	addwf	(btemp+8)^0,f,c
 17028  01767C  503D               	movf	(btemp+11)^0,w,c
 17029  01767E  223B               	addwfc	(btemp+9)^0,f,c
 17030                           
 17031                           ;stkvar	_w @ sp[(-2)+0]
 17032  017680  0EFE               	movlw	-2
 17033  017682  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17034  017688  0EFF               	movlw	-1
 17035  01768A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17036  017690                     l9510:
 17037                           
 17038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17039                           ;stkvar	_c @ sp[(-2)+-3]
 17040  017690  0EFB               	movlw	-5
 17041  017692  006F FF8C  F178    	movff	plusw1,_dbuf
 17042                           
 17043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17044  017698  0101               	movlb	1	; () banked
 17045  01769A  6B79               	clrf	(_dbuf+1)& (0+255),b
 17046                           
 17047                           ; BSR set to: 1
 17048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17049                           ;stkvar	_w @ sp[(-2)+0]
 17050  01769C  0EFE               	movlw	-2
 17051  01769E  006F FF8F FFE6     	movff	plusw1,postinc1
 17052  0176A4  006F FF8F FFE6     	movff	plusw1,postinc1
 17053  0176AA  0E78               	movlw	low _dbuf
 17054  0176AC  6EE6               	movwf	postinc1,c
 17055  0176AE  0E01               	movlw	high _dbuf
 17056  0176B0  6EE6               	movwf	postinc1,c
 17057                           
 17058                           ;stkvar	_fp @ sp[(-6)+-2]
 17059  0176B2  0EF8               	movlw	-8
 17060  0176B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17061  0176BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17062  0176C0  ECB3  F0B4         	call	_pad	;wreg free
 17063                           
 17064                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17065  0176C4  0EFB               	movlw	251
 17066  0176C6  26E1               	addwf	fsr1l,f,c
 17067  0176C8  0EFF               	movlw	255
 17068  0176CA  22E2               	addwfc	fsr1h,f,c
 17069  0176CC  0012               	return		;funcret
 17070  0176CE                     __end_of_ctoa:
 17071                           	opt callstack 0
 17072                           
 17073 ;; *************** function _pad *****************
 17074 ;; Defined at:
 17075 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17076 ;; Parameters:    Size  Location     Type
 17077 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17078 ;;		 -> f(6), NULL(0), 
 17079 ;;  buf             2  [STACK] PTR unsigned char 
 17080 ;;		 -> dbuf(80), 
 17081 ;;  p               2  [STACK] int 
 17082 ;; Auto vars:     Size  Location     Type
 17083 ;;  w               2  [STACK] int 
 17084 ;;  i               2  [STACK] int 
 17085 ;; Return value:  Size  Location     Type
 17086 ;;                  2  [STACK] int 
 17087 ;; Registers used:
 17088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17089 ;; Tracked objects:
 17090 ;;		On entry : 0/1
 17091 ;;		On exit  : 0/0
 17092 ;;		Unchanged: 0/0
 17093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17098 ;;Total ram usage:        0 bytes
 17099 ;; Hardware stack levels used:    1
 17100 ;; Hardware stack levels required when called:   10
 17101 ;; This function calls:
 17102 ;;		_fputc
 17103 ;;		_fputs
 17104 ;;		_strlen
 17105 ;; This function is called by:
 17106 ;;		_ctoa
 17107 ;;		_dtoa
 17108 ;;		_efgtoa
 17109 ;;		_xtoa
 17110 ;; This function uses a reentrant model
 17111 ;;
 17112                           
 17113                           	psect	text64
 17114  016966                     __ptext64:
 17115                           	opt callstack 0
 17116  016966                     _pad:
 17117                           	opt callstack 0
 17118                           
 17119                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17120  016966  52E6               	movf	postinc1,f,c
 17121  016968  52E6               	movf	postinc1,f,c
 17122  01696A  52E6               	movf	postinc1,f,c
 17123  01696C  52E6               	movf	postinc1,f,c
 17124                           
 17125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17126                           
 17127                           ;incstack = 0
 17128  01696E  A01F               	btfss	_flags^0,0,c
 17129  016970  D010               	goto	l9482
 17130                           
 17131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17132                           ;stkvar	_fp @ sp[(-4)+-2]
 17133  016972  0EFA               	movlw	-6
 17134  016974  006F FF8F FFE6     	movff	plusw1,postinc1
 17135  01697A  006F FF8F FFE6     	movff	plusw1,postinc1
 17136                           
 17137                           ;stkvar	_buf @ sp[(-6)+-4]
 17138  016980  0EF6               	movlw	-10
 17139  016982  006F FF8F FFE6     	movff	plusw1,postinc1
 17140  016988  006F FF8F FFE6     	movff	plusw1,postinc1
 17141  01698E  ECFD  F0B9         	call	_fputs	;wreg free
 17142  016992                     l9482:
 17143                           
 17144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17145                           ;stkvar	_p @ sp[(-4)+-6]
 17146  016992  0EF7               	movlw	-9
 17147  016994  BEE3               	btfsc	plusw1,7,c
 17148  016996  D011               	goto	l9486
 17149                           
 17150                           ;stkvar	_p @ sp[(-4)+-6]
 17151                           ;stkvar	_w @ sp[(-4)+0]
 17152  016998  0EF6               	movlw	-10
 17153  01699A  006F FF8C  F032    	movff	plusw1,btemp
 17154  0169A0  0EFC               	movlw	-4
 17155  0169A2  0060  F0CB  FFE3   	movff	btemp,plusw1
 17156  0169A8  0EF7               	movlw	-9
 17157  0169AA  006F FF8C  F032    	movff	plusw1,btemp
 17158  0169B0  0EFD               	movlw	-3
 17159  0169B2  0060  F0CB  FFE3   	movff	btemp,plusw1
 17160  0169B8  D004               	goto	l1843
 17161  0169BA                     l9486:
 17162                           
 17163                           ;stkvar	_w @ sp[(-4)+0]
 17164  0169BA  0EFC               	movlw	-4
 17165  0169BC  6AE3               	clrf	plusw1,c
 17166  0169BE  0EFD               	movlw	-3
 17167  0169C0  6AE3               	clrf	plusw1,c
 17168  0169C2                     l1843:
 17169                           
 17170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17171                           ;stkvar	_i @ sp[(-4)+2]
 17172  0169C2  0EFE               	movlw	-2
 17173  0169C4  6AE3               	clrf	plusw1,c
 17174  0169C6  0EFF               	movlw	-1
 17175  0169C8  6AE3               	clrf	plusw1,c
 17176                           
 17177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17178  0169CA  D01E               	goto	l9492
 17179  0169CC                     l9488:
 17180                           
 17181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17182                           ;stkvar	_fp @ sp[(-4)+-2]
 17183  0169CC  0EFA               	movlw	-6
 17184  0169CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17185  0169D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17186  0169DA  0E20               	movlw	32
 17187  0169DC  6EE6               	movwf	postinc1,c
 17188  0169DE  0E00               	movlw	0
 17189  0169E0  6EE6               	movwf	postinc1,c
 17190  0169E2  EC95  F0B3         	call	_fputc	;wreg free
 17191                           
 17192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17193                           ;stkvar	_i @ sp[(-4)+2]
 17194  0169E6  0EFE               	movlw	-2
 17195  0169E8  50E3               	movf	plusw1,w,c
 17196  0169EA  0F01               	addlw	1
 17197  0169EC  6E32               	movwf	btemp^0,c
 17198  0169EE  0EFE               	movlw	-2
 17199  0169F0  0060  F0CB  FFE3   	movff	btemp,plusw1
 17200  0169F6  6A32               	clrf	btemp^0,c
 17201  0169F8  0EFF               	movlw	-1
 17202  0169FA  50E3               	movf	plusw1,w,c
 17203  0169FC  2032               	addwfc	btemp^0,w,c
 17204  0169FE  6E32               	movwf	btemp^0,c
 17205  016A00  0EFF               	movlw	-1
 17206  016A02  0060  F0CB  FFE3   	movff	btemp,plusw1
 17207  016A08                     l9492:
 17208                           
 17209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17210                           ;stkvar	_w @ sp[(-4)+0]
 17211                           ;stkvar	_i @ sp[(-4)+2]
 17212  016A08  50E1               	movf	fsr1l,w,c
 17213  016A0A  0FFE               	addlw	-2
 17214  016A0C  6ED9               	movwf	fsr2l,c
 17215  016A0E  50E2               	movf	fsr1h,w,c
 17216  016A10  6EDA               	movwf	fsr2h,c
 17217  016A12  0EFF               	movlw	255
 17218  016A14  22DA               	addwfc	fsr2h,f,c
 17219  016A16  0EFC               	movlw	-4
 17220  016A18  50E3               	movf	plusw1,w,c
 17221  016A1A  5CDE               	subwf	postinc2,w,c
 17222  016A1C  50DE               	movf	postinc2,w,c
 17223  016A1E  0A80               	xorlw	128
 17224  016A20  6E32               	movwf	btemp^0,c
 17225  016A22  0EFD               	movlw	-3
 17226  016A24  50E3               	movf	plusw1,w,c
 17227  016A26  0A80               	xorlw	128
 17228  016A28  5832               	subwfb	btemp^0,w,c
 17229  016A2A  A0D8               	btfss	status,0,c
 17230  016A2C  D7CF               	goto	l9488
 17231                           
 17232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17233  016A2E  B01F               	btfsc	_flags^0,0,c
 17234  016A30  D010               	goto	l9496
 17235                           
 17236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17237                           ;stkvar	_fp @ sp[(-4)+-2]
 17238  016A32  0EFA               	movlw	-6
 17239  016A34  006F FF8F FFE6     	movff	plusw1,postinc1
 17240  016A3A  006F FF8F FFE6     	movff	plusw1,postinc1
 17241                           
 17242                           ;stkvar	_buf @ sp[(-6)+-4]
 17243  016A40  0EF6               	movlw	-10
 17244  016A42  006F FF8F FFE6     	movff	plusw1,postinc1
 17245  016A48  006F FF8F FFE6     	movff	plusw1,postinc1
 17246  016A4E  ECFD  F0B9         	call	_fputs	;wreg free
 17247  016A52                     l9496:
 17248                           
 17249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17250                           ;stkvar	_w @ sp[(-4)+0]
 17251                           ;stkvar	_buf @ sp[(-4)+-4]
 17252  016A52  0EF8               	movlw	-8
 17253  016A54  006F FF8F FFE6     	movff	plusw1,postinc1
 17254  016A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 17255  016A60  EC5E  F0B9         	call	_strlen	;wreg free
 17256  016A64  0EFC               	movlw	-4
 17257  016A66  50E3               	movf	plusw1,w,c
 17258  016A68  2632               	addwf	btemp^0,f,c
 17259  016A6A  0EFD               	movlw	-3
 17260  016A6C  50E3               	movf	plusw1,w,c
 17261  016A6E  2233               	addwfc	(btemp+1)^0,f,c
 17262                           
 17263                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 17264  016A70  0EF6               	movlw	246
 17265  016A72  26E1               	addwf	fsr1l,f,c
 17266  016A74  0EFF               	movlw	255
 17267  016A76  22E2               	addwfc	fsr1h,f,c
 17268  016A78  0012               	return		;funcret
 17269  016A7A                     __end_of_pad:
 17270                           	opt callstack 0
 17271                           
 17272 ;; *************** function _strlen *****************
 17273 ;; Defined at:
 17274 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;  s               2  [STACK] PTR const unsigned char 
 17277 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17278 ;;		 -> STR_19(9), STR_18(12), D.lcd(216), D(218), 
 17279 ;;		 -> T(144), STR_7(6), STR_3(6), V(187), 
 17280 ;; Auto vars:     Size  Location     Type
 17281 ;;  a               2  [STACK] PTR const unsigned char 
 17282 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17283 ;;		 -> STR_19(9), STR_18(12), D.lcd(216), D(218), 
 17284 ;;		 -> T(144), STR_7(6), STR_3(6), V(187), 
 17285 ;; Return value:  Size  Location     Type
 17286 ;;                  2  [STACK] unsigned int 
 17287 ;; Registers used:
 17288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 17289 ;; Tracked objects:
 17290 ;;		On entry : 0/0
 17291 ;;		On exit  : 0/0
 17292 ;;		Unchanged: 0/0
 17293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17298 ;;Total ram usage:        0 bytes
 17299 ;; Hardware stack levels used:    1
 17300 ;; Hardware stack levels required when called:    6
 17301 ;; This function calls:
 17302 ;;		Nothing
 17303 ;; This function is called by:
 17304 ;;		_eaDogM_WriteString
 17305 ;;		_pad
 17306 ;;		_stoa
 17307 ;; This function uses a reentrant model
 17308 ;;
 17309                           
 17310                           	psect	text65
 17311  0172BC                     __ptext65:
 17312                           	opt callstack 0
 17313  0172BC                     _strlen:
 17314                           	opt callstack 0
 17315                           
 17316                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17317  0172BC  52E6               	movf	postinc1,f,c
 17318  0172BE  52E6               	movf	postinc1,f,c
 17319                           
 17320                           ;stkvar	_s @ sp[(-2)+-2]
 17321                           
 17322                           ;incstack = 0
 17323  0172C0  0EFC               	movlw	-4
 17324  0172C2  006F FF8C  F03C    	movff	plusw1,btemp+10
 17325  0172C8  0EFD               	movlw	-3
 17326  0172CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 17327                           
 17328                           ;stkvar	_a @ sp[(-2)+0]
 17329  0172D0  0EFF               	movlw	-1
 17330  0172D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17331  0172D8  0EFE               	movlw	-2
 17332  0172DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17333  0172E0  D011               	goto	l6254
 17334  0172E2                     l6252:
 17335                           
 17336                           ;stkvar	_s @ sp[(-2)+-2]
 17337  0172E2  0EFC               	movlw	-4
 17338  0172E4  50E3               	movf	plusw1,w,c
 17339  0172E6  0F01               	addlw	1
 17340  0172E8  6E32               	movwf	btemp^0,c
 17341  0172EA  0EFC               	movlw	-4
 17342  0172EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17343  0172F2  6A32               	clrf	btemp^0,c
 17344  0172F4  0EFD               	movlw	-3
 17345  0172F6  50E3               	movf	plusw1,w,c
 17346  0172F8  2032               	addwfc	btemp^0,w,c
 17347  0172FA  6E32               	movwf	btemp^0,c
 17348  0172FC  0EFD               	movlw	-3
 17349  0172FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 17350  017304                     l6254:
 17351                           
 17352                           ;stkvar	_s @ sp[(-2)+-2]
 17353  017304  0EFC               	movlw	-4
 17354  017306  006F FF8F FFF6     	movff	plusw1,tblptrl
 17355  01730C  0EFD               	movlw	-3
 17356  01730E  006F FF8F FFF7     	movff	plusw1,tblptrh
 17357  017314  0E00               	movlw	low (__mediumconst shr (0+16))
 17358  017316  6EF8               	movwf	tblptru,c
 17359  017318  0E1F               	movlw	(high __ramtop+-1)
 17360  01731A  64F7               	cpfsgt	tblptrh,c
 17361  01731C  D003               	bra	u4537
 17362  01731E  0008               	tblrd		*
 17363  017320  50F5               	movf	tablat,w,c
 17364  017322  D007               	bra	u4530
 17365  017324                     u4537:
 17366  017324  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17367  01732A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17368  017330  50EF               	movf	indf0,w,c
 17369  017332                     u4530:
 17370  017332  0900               	iorlw	0
 17371  017334  A4D8               	btfss	status,2,c
 17372  017336  D7D5               	goto	l6252
 17373                           
 17374                           ;stkvar	_a @ sp[(-2)+0]
 17375                           ;stkvar	_s @ sp[(-2)+-2]
 17376  017338  0EFC               	movlw	-4
 17377  01733A  006F FF8C  F032    	movff	plusw1,btemp
 17378  017340  0EFD               	movlw	-3
 17379  017342  006F FF8C  F033    	movff	plusw1,btemp+1
 17380  017348  0EFE               	movlw	-2
 17381  01734A  50E3               	movf	plusw1,w,c
 17382  01734C  5E32               	subwf	btemp^0,f,c
 17383  01734E  0EFF               	movlw	-1
 17384  017350  50E3               	movf	plusw1,w,c
 17385  017352  5A33               	subwfb	(btemp+1)^0,f,c
 17386                           
 17387                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17388  017354  52E5               	movf	postdec1,f,c
 17389  017356  52E5               	movf	postdec1,f,c
 17390  017358  52E5               	movf	postdec1,f,c
 17391  01735A  52E5               	movf	postdec1,f,c
 17392  01735C  0012               	return		;funcret
 17393  01735E                     __end_of_strlen:
 17394                           	opt callstack 0
 17395                           
 17396 ;; *************** function _fputs *****************
 17397 ;; Defined at:
 17398 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  s               2  [STACK] PTR const unsigned char 
 17401 ;;		 -> dbuf(80), 
 17402 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17403 ;;		 -> f(6), NULL(0), 
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;  i               2  [STACK] int 
 17406 ;;  c               1  [STACK] unsigned char 
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  2  [STACK] int 
 17409 ;; Registers used:
 17410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/1
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17420 ;;Total ram usage:        0 bytes
 17421 ;; Hardware stack levels used:    1
 17422 ;; Hardware stack levels required when called:    9
 17423 ;; This function calls:
 17424 ;;		_fputc
 17425 ;; This function is called by:
 17426 ;;		_pad
 17427 ;; This function uses a reentrant model
 17428 ;;
 17429                           
 17430                           	psect	text66
 17431  0173FA                     __ptext66:
 17432                           	opt callstack 0
 17433  0173FA                     _fputs:
 17434                           	opt callstack 0
 17435                           
 17436                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17437  0173FA  52E6               	movf	postinc1,f,c
 17438  0173FC  52E6               	movf	postinc1,f,c
 17439  0173FE  52E6               	movf	postinc1,f,c
 17440                           
 17441                           ;stkvar	_i @ sp[(-3)+0]
 17442                           
 17443                           ;incstack = 0
 17444  017400  0EFD               	movlw	-3
 17445  017402  6AE3               	clrf	plusw1,c
 17446  017404  0EFE               	movlw	-2
 17447  017406  6AE3               	clrf	plusw1,c
 17448  017408  D01F               	goto	l9476
 17449  01740A                     l9472:
 17450                           
 17451                           ;stkvar	_fp @ sp[(-3)+-4]
 17452  01740A  0EF9               	movlw	-7
 17453  01740C  006F FF8F FFE6     	movff	plusw1,postinc1
 17454  017412  006F FF8F FFE6     	movff	plusw1,postinc1
 17455                           
 17456                           ;stkvar	_c @ sp[(-5)+2]
 17457  017418  0EFD               	movlw	-3
 17458  01741A  50E3               	movf	plusw1,w,c
 17459  01741C  6EE6               	movwf	postinc1,c
 17460  01741E  0E00               	movlw	0
 17461  017420  6EE6               	movwf	postinc1,c
 17462  017422  EC95  F0B3         	call	_fputc	;wreg free
 17463                           
 17464                           ;stkvar	_i @ sp[(-3)+0]
 17465  017426  0EFD               	movlw	-3
 17466  017428  50E3               	movf	plusw1,w,c
 17467  01742A  0F01               	addlw	1
 17468  01742C  6E32               	movwf	btemp^0,c
 17469  01742E  0EFD               	movlw	-3
 17470  017430  0060  F0CB  FFE3   	movff	btemp,plusw1
 17471  017436  6A32               	clrf	btemp^0,c
 17472  017438  0EFE               	movlw	-2
 17473  01743A  50E3               	movf	plusw1,w,c
 17474  01743C  2032               	addwfc	btemp^0,w,c
 17475  01743E  6E32               	movwf	btemp^0,c
 17476  017440  0EFE               	movlw	-2
 17477  017442  0060  F0CB  FFE3   	movff	btemp,plusw1
 17478  017448                     l9476:
 17479                           
 17480                           ;stkvar	_i @ sp[(-3)+0]
 17481  017448  0EFD               	movlw	-3
 17482  01744A  006F FF8C  F03C    	movff	plusw1,btemp+10
 17483  017450  0EFE               	movlw	-2
 17484  017452  006F FF8C  F03D    	movff	plusw1,btemp+11
 17485                           
 17486                           ;stkvar	_s @ sp[(-3)+-2]
 17487  017458  0EFB               	movlw	-5
 17488  01745A  006F FF8C  F03A    	movff	plusw1,btemp+8
 17489  017460  0EFC               	movlw	-4
 17490  017462  006F FF8C  F03B    	movff	plusw1,btemp+9
 17491  017468  503C               	movf	(btemp+10)^0,w,c
 17492  01746A  243A               	addwf	(btemp+8)^0,w,c
 17493  01746C  6ED9               	movwf	fsr2l,c
 17494  01746E  503D               	movf	(btemp+11)^0,w,c
 17495  017470  203B               	addwfc	(btemp+9)^0,w,c
 17496  017472  6EDA               	movwf	fsr2h,c
 17497  017474  50DF               	movf	indf2,w,c
 17498  017476  6E3D               	movwf	(btemp+11)^0,c
 17499                           
 17500                           ;stkvar	_c @ sp[(-3)+2]
 17501  017478  0EFF               	movlw	-1
 17502  01747A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17503  017480  0EFF               	movlw	-1
 17504  017482  50E3               	movf	plusw1,w,c
 17505  017484  A4D8               	btfss	status,2,c
 17506  017486  D7C1               	goto	l9472
 17507                           
 17508                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17509  017488  0EF9               	movlw	249
 17510  01748A  26E1               	addwf	fsr1l,f,c
 17511  01748C  0EFF               	movlw	255
 17512  01748E  22E2               	addwfc	fsr1h,f,c
 17513  017490  0012               	return		;funcret
 17514  017492                     __end_of_fputs:
 17515                           	opt callstack 0
 17516                           
 17517 ;; *************** function _fputc *****************
 17518 ;; Defined at:
 17519 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 17520 ;; Parameters:    Size  Location     Type
 17521 ;;  c               2  [STACK] int 
 17522 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17523 ;;		 -> f(6), NULL(0), 
 17524 ;; Auto vars:     Size  Location     Type
 17525 ;;		None
 17526 ;; Return value:  Size  Location     Type
 17527 ;;                  2  [STACK] int 
 17528 ;; Registers used:
 17529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 17530 ;; Tracked objects:
 17531 ;;		On entry : 0/5
 17532 ;;		On exit  : 0/0
 17533 ;;		Unchanged: 0/0
 17534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17539 ;;Total ram usage:        0 bytes
 17540 ;; Hardware stack levels used:    1
 17541 ;; Hardware stack levels required when called:    8
 17542 ;; This function calls:
 17543 ;;		_putch
 17544 ;; This function is called by:
 17545 ;;		_pad
 17546 ;;		_stoa
 17547 ;;		_vfpfcnvrt
 17548 ;;		_fputs
 17549 ;; This function uses a reentrant model
 17550 ;;
 17551                           
 17552                           	psect	text67
 17553  01672A                     __ptext67:
 17554                           	opt callstack 0
 17555  01672A                     _fputc:
 17556                           	opt callstack 13
 17557                           
 17558                           ;stkvar	_fp @ sp[(0)+-4]
 17559                           
 17560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17561                           ;incstack = 0
 17562  01672A  0EFC               	movlw	-4
 17563  01672C  006F FF8C  F032    	movff	plusw1,btemp
 17564  016732  0EFD               	movlw	-3
 17565  016734  50E3               	movf	plusw1,w,c
 17566  016736  1032               	iorwf	btemp^0,w,c
 17567  016738  B4D8               	btfsc	status,2,c
 17568  01673A  D009               	goto	u8930
 17569                           
 17570                           ;stkvar	_fp @ sp[(0)+-4]
 17571  01673C  0EFC               	movlw	-4
 17572  01673E  006F FF8C  F032    	movff	plusw1,btemp
 17573  016744  0EFD               	movlw	-3
 17574  016746  50E3               	movf	plusw1,w,c
 17575  016748  1032               	iorwf	btemp^0,w,c
 17576  01674A  A4D8               	btfss	status,2,c
 17577  01674C  D006               	goto	l9460
 17578  01674E                     u8930:
 17579                           
 17580                           ;stkvar	_c @ sp[(0)+-2]
 17581  01674E  0EFE               	movlw	-2
 17582  016750  50E3               	movf	plusw1,w,c
 17583  016752  6EE6               	movwf	postinc1,c
 17584  016754  EC2E  F0C4         	call	_putch	;wreg free
 17585  016758  D075               	goto	l2861
 17586  01675A                     l9460:
 17587                           
 17588                           ;stkvar	_fp @ sp[(0)+-4]
 17589  01675A  0EFC               	movlw	-4
 17590  01675C  006F FF8C  F03C    	movff	plusw1,btemp+10
 17591  016762  0EFD               	movlw	-3
 17592  016764  006F FF8C  F03D    	movff	plusw1,btemp+11
 17593  01676A  0E04               	movlw	4
 17594  01676C  243C               	addwf	(btemp+10)^0,w,c
 17595  01676E  6ED9               	movwf	fsr2l,c
 17596  016770  0E00               	movlw	0
 17597  016772  203D               	addwfc	(btemp+11)^0,w,c
 17598  016774  6EDA               	movwf	fsr2h,c
 17599  016776  50DE               	movf	postinc2,w,c
 17600  016778  10DE               	iorwf	postinc2,w,c
 17601  01677A  B4D8               	btfsc	status,2,c
 17602  01677C  D026               	goto	u8950
 17603                           
 17604                           ;stkvar	_fp @ sp[(0)+-4]
 17605  01677E  0EFC               	movlw	-4
 17606  016780  006F FF8C  F03C    	movff	plusw1,btemp+10
 17607  016786  0EFD               	movlw	-3
 17608  016788  006F FF8C  F03D    	movff	plusw1,btemp+11
 17609  01678E  0E04               	movlw	4
 17610  016790  243C               	addwf	(btemp+10)^0,w,c
 17611  016792  6ED9               	movwf	fsr2l,c
 17612  016794  0E00               	movlw	0
 17613  016796  203D               	addwfc	(btemp+11)^0,w,c
 17614  016798  6EDA               	movwf	fsr2h,c
 17615                           
 17616                           ;stkvar	_fp @ sp[(0)+-4]
 17617  01679A  0EFC               	movlw	-4
 17618  01679C  006F FF8C  F03C    	movff	plusw1,btemp+10
 17619  0167A2  0EFD               	movlw	-3
 17620  0167A4  006F FF8C  F03D    	movff	plusw1,btemp+11
 17621  0167AA  0E02               	movlw	2
 17622  0167AC  243C               	addwf	(btemp+10)^0,w,c
 17623  0167AE  6EE9               	movwf	fsr0l,c
 17624  0167B0  0E00               	movlw	0
 17625  0167B2  203D               	addwfc	(btemp+11)^0,w,c
 17626  0167B4  6EEA               	movwf	fsr0h,c
 17627  0167B6  50DE               	movf	postinc2,w,c
 17628  0167B8  5CEE               	subwf	postinc0,w,c
 17629  0167BA  50EE               	movf	postinc0,w,c
 17630  0167BC  0A80               	xorlw	128
 17631  0167BE  6E32               	movwf	btemp^0,c
 17632  0167C0  50DE               	movf	postinc2,w,c
 17633  0167C2  0A80               	xorlw	128
 17634  0167C4  5832               	subwfb	btemp^0,w,c
 17635  0167C6  B0D8               	btfsc	status,0,c
 17636  0167C8  D03D               	goto	l2861
 17637  0167CA                     u8950:
 17638                           
 17639                           ;stkvar	_c @ sp[(0)+-2]
 17640                           ;stkvar	_fp @ sp[(0)+-4]
 17641  0167CA  0EFC               	movlw	-4
 17642  0167CC  006F FF8C  F03C    	movff	plusw1,btemp+10
 17643  0167D2  0EFD               	movlw	-3
 17644  0167D4  006F FF8C  F03D    	movff	plusw1,btemp+11
 17645  0167DA  0E02               	movlw	2
 17646  0167DC  243C               	addwf	(btemp+10)^0,w,c
 17647  0167DE  6ED9               	movwf	fsr2l,c
 17648  0167E0  0E00               	movlw	0
 17649  0167E2  203D               	addwfc	(btemp+11)^0,w,c
 17650  0167E4  6EDA               	movwf	fsr2h,c
 17651  0167E6  006F FF78  F03C    	movff	postinc2,btemp+10
 17652  0167EC  006F FF74  F03D    	movff	postdec2,btemp+11
 17653                           
 17654                           ;stkvar	_fp @ sp[(0)+-4]
 17655  0167F2  0EFC               	movlw	-4
 17656  0167F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 17657  0167FA  0EFD               	movlw	-3
 17658  0167FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 17659  016802  006F FF78  F03A    	movff	postinc2,btemp+8
 17660  016808  006F FF74  F03B    	movff	postdec2,btemp+9
 17661  01680E  503C               	movf	(btemp+10)^0,w,c
 17662  016810  243A               	addwf	(btemp+8)^0,w,c
 17663  016812  6ED9               	movwf	fsr2l,c
 17664  016814  503D               	movf	(btemp+11)^0,w,c
 17665  016816  203B               	addwfc	(btemp+9)^0,w,c
 17666  016818  6EDA               	movwf	fsr2h,c
 17667  01681A  0EFE               	movlw	-2
 17668  01681C  006F FF8F FFDF     	movff	plusw1,indf2
 17669                           
 17670                           ;stkvar	_fp @ sp[(0)+-4]
 17671  016822  0EFC               	movlw	-4
 17672  016824  006F FF8C  F03C    	movff	plusw1,btemp+10
 17673  01682A  0EFD               	movlw	-3
 17674  01682C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17675  016832  0E02               	movlw	2
 17676  016834  243C               	addwf	(btemp+10)^0,w,c
 17677  016836  6ED9               	movwf	fsr2l,c
 17678  016838  0E00               	movlw	0
 17679  01683A  203D               	addwfc	(btemp+11)^0,w,c
 17680  01683C  6EDA               	movwf	fsr2h,c
 17681  01683E  2ADE               	incf	postinc2,f,c
 17682  016840  0E00               	movlw	0
 17683  016842  22DD               	addwfc	postdec2,f,c
 17684  016844                     l2861:
 17685                           
 17686                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17687  016844  52E5               	movf	postdec1,f,c
 17688  016846  52E5               	movf	postdec1,f,c
 17689  016848  52E5               	movf	postdec1,f,c
 17690  01684A  52E5               	movf	postdec1,f,c
 17691  01684C  0012               	return		;funcret
 17692  01684E                     __end_of_fputc:
 17693                           	opt callstack 0
 17694                           
 17695 ;; *************** function _putch *****************
 17696 ;; Defined at:
 17697 ;;		line 155 in file "eadog.c"
 17698 ;; Parameters:    Size  Location     Type
 17699 ;;  c               1  [STACK] unsigned char 
 17700 ;; Auto vars:     Size  Location     Type
 17701 ;;		None
 17702 ;; Return value:  Size  Location     Type
 17703 ;;                  1  [STACK] void 
 17704 ;; Registers used:
 17705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17706 ;; Tracked objects:
 17707 ;;		On entry : 0/5
 17708 ;;		On exit  : 0/0
 17709 ;;		Unchanged: 0/0
 17710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17715 ;;Total ram usage:        0 bytes
 17716 ;; Hardware stack levels used:    1
 17717 ;; Hardware stack levels required when called:    7
 17718 ;; This function calls:
 17719 ;;		_ringBufS_put_dma
 17720 ;; This function is called by:
 17721 ;;		_fputc
 17722 ;; This function uses a reentrant model
 17723 ;;
 17724                           
 17725                           	psect	text68
 17726  01885C                     __ptext68:
 17727                           	opt callstack 0
 17728  01885C                     _putch:
 17729                           	opt callstack 13
 17730                           
 17731                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 17732                           ;stkvar	_c @ sp[(0)+-1]
 17733                           
 17734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17735                           ;incstack = 0
 17736  01885C  0EFF               	movlw	-1
 17737  01885E  50E3               	movf	plusw1,w,c
 17738  018860  6EE6               	movwf	postinc1,c
 17739  018862  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 17740  018868  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 17741  01886E  EC62  F0B8         	call	_ringBufS_put_dma	;wreg free
 17742                           
 17743                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 17744  018872  52E5               	movf	postdec1,f,c
 17745  018874  0012               	return		;funcret
 17746  018876                     __end_of_putch:
 17747                           	opt callstack 0
 17748                           
 17749 ;; *************** function _ringBufS_put_dma *****************
 17750 ;; Defined at:
 17751 ;;		line 67 in file "ringbufs.c"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;  _this           2  [STACK] PTR struct ringBufS_t
 17754 ;;		 -> ring_buf1(67), 
 17755 ;;  c               1  [STACK] const unsigned char 
 17756 ;; Auto vars:     Size  Location     Type
 17757 ;;		None
 17758 ;; Return value:  Size  Location     Type
 17759 ;;                  1  [STACK] void 
 17760 ;; Registers used:
 17761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17762 ;; Tracked objects:
 17763 ;;		On entry : 0/5
 17764 ;;		On exit  : 0/0
 17765 ;;		Unchanged: 0/0
 17766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17771 ;;Total ram usage:        0 bytes
 17772 ;; Hardware stack levels used:    1
 17773 ;; Hardware stack levels required when called:    6
 17774 ;; This function calls:
 17775 ;;		Nothing
 17776 ;; This function is called by:
 17777 ;;		_putch
 17778 ;; This function uses a reentrant model
 17779 ;;
 17780                           
 17781                           	psect	text69
 17782  0170C4                     __ptext69:
 17783                           	opt callstack 0
 17784  0170C4                     _ringBufS_put_dma:
 17785                           	opt callstack 13
 17786                           
 17787                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 17788                           ;stkvar	__this @ sp[(0)+-2]
 17789                           
 17790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17791                           ;incstack = 0
 17792  0170C4  0EFE               	movlw	-2
 17793  0170C6  006F FF8C  F03C    	movff	plusw1,btemp+10
 17794  0170CC  0EFF               	movlw	-1
 17795  0170CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 17796  0170D4  0E42               	movlw	66
 17797  0170D6  243C               	addwf	(btemp+10)^0,w,c
 17798  0170D8  6ED9               	movwf	fsr2l,c
 17799  0170DA  0E00               	movlw	0
 17800  0170DC  203D               	addwfc	(btemp+11)^0,w,c
 17801  0170DE  6EDA               	movwf	fsr2h,c
 17802  0170E0  0E40               	movlw	64
 17803  0170E2  60DF               	cpfslt	indf2,c
 17804  0170E4  D040               	goto	l1479
 17805                           
 17806                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 17807                           ;stkvar	_c @ sp[(0)+-3]
 17808                           ;stkvar	__this @ sp[(0)+-2]
 17809  0170E6  0EFE               	movlw	-2
 17810  0170E8  006F FF8C  F03C    	movff	plusw1,btemp+10
 17811  0170EE  0EFF               	movlw	-1
 17812  0170F0  006F FF8C  F03D    	movff	plusw1,btemp+11
 17813  0170F6  0E40               	movlw	64
 17814  0170F8  243C               	addwf	(btemp+10)^0,w,c
 17815  0170FA  6ED9               	movwf	fsr2l,c
 17816  0170FC  0E00               	movlw	0
 17817  0170FE  203D               	addwfc	(btemp+11)^0,w,c
 17818  017100  6EDA               	movwf	fsr2h,c
 17819  017102  50DF               	movf	indf2,w,c
 17820  017104  6E3D               	movwf	(btemp+11)^0,c
 17821                           
 17822                           ;stkvar	__this @ sp[(0)+-2]
 17823  017106  0EFE               	movlw	-2
 17824  017108  006F FF8C  F03A    	movff	plusw1,btemp+8
 17825  01710E  0EFF               	movlw	-1
 17826  017110  006F FF8C  F03B    	movff	plusw1,btemp+9
 17827  017116  503D               	movf	(btemp+11)^0,w,c
 17828  017118  243A               	addwf	(btemp+8)^0,w,c
 17829  01711A  6ED9               	movwf	fsr2l,c
 17830  01711C  0E00               	movlw	0
 17831  01711E  203B               	addwfc	(btemp+9)^0,w,c
 17832  017120  6EDA               	movwf	fsr2h,c
 17833  017122  0EFD               	movlw	-3
 17834  017124  006F FF8F FFDF     	movff	plusw1,indf2
 17835                           
 17836                           ;ringbufs.c: 71:   ++_this->head;
 17837                           ;stkvar	__this @ sp[(0)+-2]
 17838  01712A  0EFE               	movlw	-2
 17839  01712C  006F FF8C  F03C    	movff	plusw1,btemp+10
 17840  017132  0EFF               	movlw	-1
 17841  017134  006F FF8C  F03D    	movff	plusw1,btemp+11
 17842  01713A  0E40               	movlw	64
 17843  01713C  243C               	addwf	(btemp+10)^0,w,c
 17844  01713E  6ED9               	movwf	fsr2l,c
 17845  017140  0E00               	movlw	0
 17846  017142  203D               	addwfc	(btemp+11)^0,w,c
 17847  017144  6EDA               	movwf	fsr2h,c
 17848  017146  2ADF               	incf	indf2,f,c
 17849                           
 17850                           ;ringbufs.c: 72:   ++_this->count;
 17851                           ;stkvar	__this @ sp[(0)+-2]
 17852  017148  0EFE               	movlw	-2
 17853  01714A  006F FF8C  F03C    	movff	plusw1,btemp+10
 17854  017150  0EFF               	movlw	-1
 17855  017152  006F FF8C  F03D    	movff	plusw1,btemp+11
 17856  017158  0E42               	movlw	66
 17857  01715A  243C               	addwf	(btemp+10)^0,w,c
 17858  01715C  6ED9               	movwf	fsr2l,c
 17859  01715E  0E00               	movlw	0
 17860  017160  203D               	addwfc	(btemp+11)^0,w,c
 17861  017162  6EDA               	movwf	fsr2h,c
 17862  017164  2ADF               	incf	indf2,f,c
 17863  017166                     l1479:
 17864                           
 17865                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 17866  017166  52E5               	movf	postdec1,f,c
 17867  017168  52E5               	movf	postdec1,f,c
 17868  01716A  52E5               	movf	postdec1,f,c
 17869  01716C  0012               	return		;funcret
 17870  01716E                     __end_of_ringBufS_put_dma:
 17871                           	opt callstack 0
 17872                           
 17873 ;; *************** function _atoi *****************
 17874 ;; Defined at:
 17875 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 17876 ;; Parameters:    Size  Location     Type
 17877 ;;  s               2  [STACK] PTR const unsigned char 
 17878 ;;		 -> STR_35(3), STR_34(3), STR_33(19), STR_32(19), 
 17879 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 17880 ;;		 -> STR_27(24), STR_26(15), STR_25(15), STR_24(15), 
 17881 ;;		 -> STR_23(10), STR_22(10), STR_21(19), STR_20(19), 
 17882 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(19), 
 17883 ;;		 -> STR_13(19), STR_12(19), STR_11(19), STR_10(19), 
 17884 ;;		 -> STR_9(19), STR_8(17), STR_6(15), STR_5(17), 
 17885 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;  n               2  [STACK] int 
 17888 ;;  neg             2  [STACK] int 
 17889 ;; Return value:  Size  Location     Type
 17890 ;;                  2  [STACK] int 
 17891 ;; Registers used:
 17892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 17893 ;; Tracked objects:
 17894 ;;		On entry : 0/5
 17895 ;;		On exit  : 0/0
 17896 ;;		Unchanged: 0/0
 17897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17902 ;;Total ram usage:        0 bytes
 17903 ;; Hardware stack levels used:    1
 17904 ;; Hardware stack levels required when called:    7
 17905 ;; This function calls:
 17906 ;;		_isdigit
 17907 ;;		_isspace
 17908 ;; This function is called by:
 17909 ;;		_vfpfcnvrt
 17910 ;; This function uses a reentrant model
 17911 ;;
 17912                           
 17913                           	psect	text70
 17914  015040                     __ptext70:
 17915                           	opt callstack 0
 17916  015040                     _atoi:
 17917                           	opt callstack 0
 17918                           
 17919                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17920  015040  0E09               	movlw	9
 17921  015042  26E1               	addwf	fsr1l,f,c
 17922  015044  0E00               	movlw	0
 17923  015046  22E2               	addwfc	fsr1h,f,c
 17924                           
 17925                           ;stkvar	_n @ sp[(-9)+5]
 17926                           
 17927                           ;incstack = 0
 17928  015048  0EFC               	movlw	-4
 17929  01504A  6AE3               	clrf	plusw1,c
 17930  01504C  0EFD               	movlw	-3
 17931  01504E  6AE3               	clrf	plusw1,c
 17932                           
 17933                           ;stkvar	_neg @ sp[(-9)+7]
 17934  015050  0EFE               	movlw	-2
 17935  015052  6AE3               	clrf	plusw1,c
 17936  015054  0EFF               	movlw	-1
 17937  015056  6AE3               	clrf	plusw1,c
 17938  015058  D011               	goto	l7726
 17939  01505A                     l7724:
 17940                           
 17941                           ;stkvar	_s @ sp[(-9)+-2]
 17942  01505A  0EF5               	movlw	-11
 17943  01505C  50E3               	movf	plusw1,w,c
 17944  01505E  0F01               	addlw	1
 17945  015060  6E32               	movwf	btemp^0,c
 17946  015062  0EF5               	movlw	-11
 17947  015064  0060  F0CB  FFE3   	movff	btemp,plusw1
 17948  01506A  6A32               	clrf	btemp^0,c
 17949  01506C  0EF6               	movlw	-10
 17950  01506E  50E3               	movf	plusw1,w,c
 17951  015070  2032               	addwfc	btemp^0,w,c
 17952  015072  6E32               	movwf	btemp^0,c
 17953  015074  0EF6               	movlw	-10
 17954  015076  0060  F0CB  FFE3   	movff	btemp,plusw1
 17955  01507C                     l7726:
 17956                           
 17957                           ;stkvar	_atoi$5018 @ sp[(-9)+4]
 17958  01507C  0EFB               	movlw	-5
 17959  01507E  6AE3               	clrf	plusw1,c
 17960  015080  2AE3               	incf	plusw1,f,c
 17961                           
 17962                           ;stkvar	_s @ sp[(-9)+-2]
 17963  015082  50E1               	movf	fsr1l,w,c
 17964  015084  0FF5               	addlw	-11
 17965  015086  6ED9               	movwf	fsr2l,c
 17966  015088  50E2               	movf	fsr1h,w,c
 17967  01508A  6EDA               	movwf	fsr2h,c
 17968  01508C  0EFF               	movlw	255
 17969  01508E  22DA               	addwfc	fsr2h,f,c
 17970  015090  006F FF7B FFF6     	movff	postinc2,tblptrl
 17971  015096  006F FF77 FFF7     	movff	postdec2,tblptrh
 17972  01509C                     	if	0	;tblptru may be non-zero
 17973  01509C                     	endif
 17974  01509C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17975  01509C  0E00               	movlw	low (__mediumconst shr (0+16))
 17976  01509E  6EF8               	movwf	tblptru,c
 17977  0150A0                     	endif
 17978  0150A0  0008               	tblrd		*
 17979  0150A2  50F5               	movf	tablat,w,c
 17980  0150A4  0A20               	xorlw	32
 17981  0150A6  B4D8               	btfsc	status,2,c
 17982  0150A8  D023               	goto	l7734
 17983  0150AA  0EF7               	movlw	247
 17984  0150AC  6E3C               	movwf	(btemp+10)^0,c
 17985  0150AE  0EFF               	movlw	255
 17986  0150B0  6E3D               	movwf	(btemp+11)^0,c
 17987                           
 17988                           ;stkvar	_s @ sp[(-9)+-2]
 17989  0150B2  50E1               	movf	fsr1l,w,c
 17990  0150B4  0FF5               	addlw	-11
 17991  0150B6  6ED9               	movwf	fsr2l,c
 17992  0150B8  50E2               	movf	fsr1h,w,c
 17993  0150BA  6EDA               	movwf	fsr2h,c
 17994  0150BC  0EFF               	movlw	255
 17995  0150BE  22DA               	addwfc	fsr2h,f,c
 17996  0150C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 17997  0150C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 17998  0150CC                     	if	0	;tblptru may be non-zero
 17999  0150CC                     	endif
 18000  0150CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18001  0150CC  0E00               	movlw	low (__mediumconst shr (0+16))
 18002  0150CE  6EF8               	movwf	tblptru,c
 18003  0150D0                     	endif
 18004  0150D0  0008               	tblrd		*
 18005  0150D2  50F5               	movf	tablat,w,c
 18006  0150D4  6E3A               	movwf	(btemp+8)^0,c
 18007  0150D6  6A3B               	clrf	(btemp+9)^0,c
 18008  0150D8  503C               	movf	(btemp+10)^0,w,c
 18009  0150DA  263A               	addwf	(btemp+8)^0,f,c
 18010  0150DC  503D               	movf	(btemp+11)^0,w,c
 18011  0150DE  223B               	addwfc	(btemp+9)^0,f,c
 18012  0150E0  503B               	movf	(btemp+9)^0,w,c
 18013  0150E2  E104               	bnz	u7390
 18014  0150E4  0E05               	movlw	5
 18015  0150E6  5C3A               	subwf	(btemp+8)^0,w,c
 18016  0150E8  A0D8               	btfss	status,0,c
 18017  0150EA  D002               	goto	l7734
 18018  0150EC                     u7390:
 18019                           
 18020                           ;stkvar	_atoi$5018 @ sp[(-9)+4]
 18021  0150EC  0EFB               	movlw	-5
 18022  0150EE  6AE3               	clrf	plusw1,c
 18023  0150F0                     l7734:
 18024                           
 18025                           ;stkvar	_atoi$5018 @ sp[(-9)+4]
 18026  0150F0  0EFB               	movlw	-5
 18027  0150F2  50E3               	movf	plusw1,w,c
 18028  0150F4  6E3C               	movwf	(btemp+10)^0,c
 18029  0150F6  6A3D               	clrf	(btemp+11)^0,c
 18030                           
 18031                           ;stkvar	_atoi$5017 @ sp[(-9)+2]
 18032  0150F8  0EF9               	movlw	-7
 18033  0150FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18034  015100  0EFA               	movlw	-6
 18035  015102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18036                           
 18037                           ;stkvar	_atoi$5017 @ sp[(-9)+2]
 18038  015108  0EF9               	movlw	-7
 18039  01510A  006F FF8C  F032    	movff	plusw1,btemp
 18040  015110  0EFA               	movlw	-6
 18041  015112  50E3               	movf	plusw1,w,c
 18042  015114  1032               	iorwf	btemp^0,w,c
 18043  015116  B4D8               	btfsc	status,2,c
 18044  015118  D01F               	goto	l7744
 18045  01511A  D79F               	goto	l7724
 18046  01511C                     l7740:
 18047  01511C  0E01               	movlw	1
 18048  01511E  6E3C               	movwf	(btemp+10)^0,c
 18049  015120  0E00               	movlw	0
 18050  015122  6E3D               	movwf	(btemp+11)^0,c
 18051                           
 18052                           ;stkvar	_neg @ sp[(-9)+7]
 18053  015124  0EFE               	movlw	-2
 18054  015126  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18055  01512C  0EFF               	movlw	-1
 18056  01512E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18057  015134                     l7742:
 18058                           
 18059                           ;stkvar	_s @ sp[(-9)+-2]
 18060  015134  0EF5               	movlw	-11
 18061  015136  50E3               	movf	plusw1,w,c
 18062  015138  0F01               	addlw	1
 18063  01513A  6E32               	movwf	btemp^0,c
 18064  01513C  0EF5               	movlw	-11
 18065  01513E  0060  F0CB  FFE3   	movff	btemp,plusw1
 18066  015144  6A32               	clrf	btemp^0,c
 18067  015146  0EF6               	movlw	-10
 18068  015148  50E3               	movf	plusw1,w,c
 18069  01514A  2032               	addwfc	btemp^0,w,c
 18070  01514C  6E32               	movwf	btemp^0,c
 18071  01514E  0EF6               	movlw	-10
 18072  015150  0060  F0CB  FFE3   	movff	btemp,plusw1
 18073  015156  D053               	goto	l7750
 18074  015158                     l7744:
 18075                           
 18076                           ;stkvar	_s @ sp[(-9)+-2]
 18077  015158  50E1               	movf	fsr1l,w,c
 18078  01515A  0FF5               	addlw	-11
 18079  01515C  6ED9               	movwf	fsr2l,c
 18080  01515E  50E2               	movf	fsr1h,w,c
 18081  015160  6EDA               	movwf	fsr2h,c
 18082  015162  0EFF               	movlw	255
 18083  015164  22DA               	addwfc	fsr2h,f,c
 18084  015166  006F FF7B FFF6     	movff	postinc2,tblptrl
 18085  01516C  006F FF77 FFF7     	movff	postdec2,tblptrh
 18086  015172                     	if	0	;tblptru may be non-zero
 18087  015172                     	endif
 18088  015172                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18089  015172  0E00               	movlw	low (__mediumconst shr (0+16))
 18090  015174  6EF8               	movwf	tblptru,c
 18091  015176                     	endif
 18092  015176  0008               	tblrd		*
 18093  015178  50F5               	movf	tablat,w,c
 18094  01517A  6E3C               	movwf	(btemp+10)^0,c
 18095  01517C  6A3D               	clrf	(btemp+11)^0,c
 18096                           
 18097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18098                           ; Switch size 1, requested type "simple"
 18099                           ; Number of cases is 1, Range of values is 0 to 0
 18100                           ; switch strategies available:
 18101                           ; Name         Instructions Cycles
 18102                           ; simple_byte            4     3 (average)
 18103                           ;	Chosen strategy is simple_byte
 18104  01517E  503D               	movf	(btemp+11)^0,w,c
 18105  015180  0A00               	xorlw	0	; case 0
 18106  015182  A4D8               	btfss	status,2,c
 18107  015184  D03C               	goto	l7750
 18108                           
 18109                           ; Switch size 1, requested type "simple"
 18110                           ; Number of cases is 2, Range of values is 43 to 45
 18111                           ; switch strategies available:
 18112                           ; Name         Instructions Cycles
 18113                           ; simple_byte            7     4 (average)
 18114                           ;	Chosen strategy is simple_byte
 18115  015186  503C               	movf	(btemp+10)^0,w,c
 18116  015188  0A2B               	xorlw	43	; case 43
 18117  01518A  B4D8               	btfsc	status,2,c
 18118  01518C  D7D3               	goto	l7742
 18119  01518E  0A06               	xorlw	6	; case 45
 18120  015190  B4D8               	btfsc	status,2,c
 18121  015192  D7C4               	goto	l7740
 18122  015194  D034               	goto	l7750
 18123  015196                     l7746:
 18124                           
 18125                           ;stkvar	_n @ sp[(-9)+5]
 18126  015196  0EFC               	movlw	-4
 18127  015198  006F FF8C  F03C    	movff	plusw1,btemp+10
 18128  01519E  0EFD               	movlw	-3
 18129  0151A0  006F FF8C  F03D    	movff	plusw1,btemp+11
 18130  0151A6  0E0A               	movlw	10
 18131  0151A8  023C               	mulwf	(btemp+10)^0,c
 18132  0151AA  006F FFCC  F03A    	movff	prodl,btemp+8
 18133  0151B0  006F FFD0  F03B    	movff	prodh,btemp+9
 18134  0151B6  023D               	mulwf	(btemp+11)^0,c
 18135  0151B8  50F3               	movf	prodl,w,c
 18136  0151BA  263B               	addwf	(btemp+9)^0,f,c
 18137                           
 18138                           ;stkvar	_s @ sp[(-9)+-2]
 18139  0151BC  50E1               	movf	fsr1l,w,c
 18140  0151BE  0FF5               	addlw	-11
 18141  0151C0  6ED9               	movwf	fsr2l,c
 18142  0151C2  50E2               	movf	fsr1h,w,c
 18143  0151C4  6EDA               	movwf	fsr2h,c
 18144  0151C6  0EFF               	movlw	255
 18145  0151C8  22DA               	addwfc	fsr2h,f,c
 18146  0151CA  006F FF7B FFF6     	movff	postinc2,tblptrl
 18147  0151D0  006F FF77 FFF7     	movff	postdec2,tblptrh
 18148  0151D6                     	if	0	;tblptru may be non-zero
 18149  0151D6                     	endif
 18150  0151D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18151  0151D6  0E00               	movlw	low (__mediumconst shr (0+16))
 18152  0151D8  6EF8               	movwf	tblptru,c
 18153  0151DA                     	endif
 18154  0151DA  0008               	tblrd		*
 18155  0151DC  50F5               	movf	tablat,w,c
 18156  0151DE  5E3A               	subwf	(btemp+8)^0,f,c
 18157  0151E0  0E00               	movlw	0
 18158  0151E2  5A3B               	subwfb	(btemp+9)^0,f,c
 18159  0151E4  0E30               	movlw	48
 18160  0151E6  263A               	addwf	(btemp+8)^0,f,c
 18161  0151E8  0E00               	movlw	0
 18162  0151EA  223B               	addwfc	(btemp+9)^0,f,c
 18163                           
 18164                           ;stkvar	_n @ sp[(-9)+5]
 18165  0151EC  0EFC               	movlw	-4
 18166  0151EE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 18167  0151F4  0EFD               	movlw	-3
 18168  0151F6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 18169  0151FC  D79B               	goto	l7742
 18170  0151FE                     l7750:
 18171  0151FE  0ED0               	movlw	208
 18172  015200  6E3C               	movwf	(btemp+10)^0,c
 18173  015202  0EFF               	movlw	255
 18174  015204  6E3D               	movwf	(btemp+11)^0,c
 18175                           
 18176                           ;stkvar	_s @ sp[(-9)+-2]
 18177  015206  50E1               	movf	fsr1l,w,c
 18178  015208  0FF5               	addlw	-11
 18179  01520A  6ED9               	movwf	fsr2l,c
 18180  01520C  50E2               	movf	fsr1h,w,c
 18181  01520E  6EDA               	movwf	fsr2h,c
 18182  015210  0EFF               	movlw	255
 18183  015212  22DA               	addwfc	fsr2h,f,c
 18184  015214  006F FF7B FFF6     	movff	postinc2,tblptrl
 18185  01521A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18186  015220                     	if	0	;tblptru may be non-zero
 18187  015220                     	endif
 18188  015220                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18189  015220  0E00               	movlw	low (__mediumconst shr (0+16))
 18190  015222  6EF8               	movwf	tblptru,c
 18191  015224                     	endif
 18192  015224  0008               	tblrd		*
 18193  015226  50F5               	movf	tablat,w,c
 18194  015228  6E3A               	movwf	(btemp+8)^0,c
 18195  01522A  6A3B               	clrf	(btemp+9)^0,c
 18196  01522C  503C               	movf	(btemp+10)^0,w,c
 18197  01522E  263A               	addwf	(btemp+8)^0,f,c
 18198  015230  503D               	movf	(btemp+11)^0,w,c
 18199  015232  223B               	addwfc	(btemp+9)^0,f,c
 18200  015234  503B               	movf	(btemp+9)^0,w,c
 18201  015236  E106               	bnz	u7410
 18202  015238  0E0A               	movlw	10
 18203  01523A  5C3A               	subwf	(btemp+8)^0,w,c
 18204  01523C  B0D8               	btfsc	status,0,c
 18205  01523E  D002               	goto	u7410
 18206  015240  0E01               	movlw	1
 18207  015242  D001               	goto	u7420
 18208  015244                     u7410:
 18209  015244  0E00               	movlw	0
 18210  015246                     u7420:
 18211  015246  6E3C               	movwf	(btemp+10)^0,c
 18212  015248  6A3D               	clrf	(btemp+11)^0,c
 18213                           
 18214                           ;stkvar	_atoi$5019 @ sp[(-9)+0]
 18215  01524A  0EF7               	movlw	-9
 18216  01524C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18217  015252  0EF8               	movlw	-8
 18218  015254  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18219                           
 18220                           ;stkvar	_atoi$5019 @ sp[(-9)+0]
 18221  01525A  0EF7               	movlw	-9
 18222  01525C  006F FF8C  F032    	movff	plusw1,btemp
 18223  015262  0EF8               	movlw	-8
 18224  015264  50E3               	movf	plusw1,w,c
 18225  015266  1032               	iorwf	btemp^0,w,c
 18226  015268  A4D8               	btfss	status,2,c
 18227  01526A  D795               	goto	l7746
 18228                           
 18229                           ;stkvar	_neg @ sp[(-9)+7]
 18230  01526C  0EFE               	movlw	-2
 18231  01526E  006F FF8C  F032    	movff	plusw1,btemp
 18232  015274  0EFF               	movlw	-1
 18233  015276  50E3               	movf	plusw1,w,c
 18234  015278  1032               	iorwf	btemp^0,w,c
 18235  01527A  A4D8               	btfss	status,2,c
 18236  01527C  D00E               	goto	l7760
 18237                           
 18238                           ;stkvar	_n @ sp[(-9)+5]
 18239  01527E  0EFC               	movlw	-4
 18240  015280  006F FF8C  F032    	movff	plusw1,btemp
 18241  015286  1E32               	comf	btemp^0,f,c
 18242  015288  0EFD               	movlw	-3
 18243  01528A  006F FF8C  F033    	movff	plusw1,btemp+1
 18244  015290  1E33               	comf	(btemp+1)^0,f,c
 18245  015292  2A32               	incf	btemp^0,f,c
 18246  015294  B4D8               	btfsc	status,2,c
 18247  015296  2A33               	incf	(btemp+1)^0,f,c
 18248  015298  D008               	goto	l2797
 18249  01529A                     l7760:
 18250                           
 18251                           ;stkvar	_n @ sp[(-9)+5]
 18252  01529A  0EFC               	movlw	-4
 18253  01529C  006F FF8C  F032    	movff	plusw1,btemp
 18254  0152A2  0EFD               	movlw	-3
 18255  0152A4  006F FF8C  F033    	movff	plusw1,btemp+1
 18256  0152AA                     l2797:
 18257                           
 18258                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 18259  0152AA  0EF5               	movlw	245
 18260  0152AC  26E1               	addwf	fsr1l,f,c
 18261  0152AE  0EFF               	movlw	255
 18262  0152B0  22E2               	addwfc	fsr1h,f,c
 18263  0152B2  0012               	return		;funcret
 18264  0152B4                     __end_of_atoi:
 18265                           	opt callstack 0
 18266                           
 18267 ;; *************** function _isspace *****************
 18268 ;; Defined at:
 18269 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 18270 ;; Parameters:    Size  Location     Type
 18271 ;;  c               2  [STACK] int 
 18272 ;; Auto vars:     Size  Location     Type
 18273 ;;		None
 18274 ;; Return value:  Size  Location     Type
 18275 ;;                  2  [STACK] int 
 18276 ;; Registers used:
 18277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18278 ;; Tracked objects:
 18279 ;;		On entry : 0/0
 18280 ;;		On exit  : 0/0
 18281 ;;		Unchanged: 0/0
 18282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18287 ;;Total ram usage:        0 bytes
 18288 ;; Hardware stack levels used:    1
 18289 ;; Hardware stack levels required when called:    6
 18290 ;; This function calls:
 18291 ;;		Nothing
 18292 ;; This function is called by:
 18293 ;;		_atoi
 18294 ;; This function uses a reentrant model
 18295 ;;
 18296                           
 18297                           	psect	text71
 18298  017DBE                     __ptext71:
 18299                           	opt callstack 0
 18300  017DBE                     _isspace:
 18301                           	opt callstack 0
 18302                           
 18303                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18304  017DBE  52E6               	movf	postinc1,f,c
 18305                           
 18306                           ;stkvar	_isspace$5057 @ sp[(-1)+0]
 18307                           
 18308                           ;incstack = 0
 18309  017DC0  0EFF               	movlw	-1
 18310  017DC2  6AE3               	clrf	plusw1,c
 18311  017DC4  2AE3               	incf	plusw1,f,c
 18312                           
 18313                           ;stkvar	_c @ sp[(-1)+-2]
 18314  017DC6  0EFD               	movlw	-3
 18315  017DC8  006F FF8C  F032    	movff	plusw1,btemp
 18316  017DCE  0E20               	movlw	32
 18317  017DD0  1832               	xorwf	btemp^0,w,c
 18318  017DD2  E104               	bnz	u6380
 18319  017DD4  0EFE               	movlw	-2
 18320  017DD6  50E3               	movf	plusw1,w,c
 18321  017DD8  B4D8               	btfsc	status,2,c
 18322  017DDA  D012               	goto	l7210
 18323  017DDC                     u6380:
 18324                           
 18325                           ;stkvar	_c @ sp[(-1)+-2]
 18326  017DDC  0EFD               	movlw	-3
 18327  017DDE  50E3               	movf	plusw1,w,c
 18328  017DE0  0FF7               	addlw	247
 18329  017DE2  6E3C               	movwf	(btemp+10)^0,c
 18330  017DE4  0EFE               	movlw	-2
 18331  017DE6  006F FF8C  F03D    	movff	plusw1,btemp+11
 18332  017DEC  0EFF               	movlw	255
 18333  017DEE  223D               	addwfc	(btemp+11)^0,f,c
 18334  017DF0  503D               	movf	(btemp+11)^0,w,c
 18335  017DF2  E104               	bnz	u6390
 18336  017DF4  0E05               	movlw	5
 18337  017DF6  5C3C               	subwf	(btemp+10)^0,w,c
 18338  017DF8  A0D8               	btfss	status,0,c
 18339  017DFA  D002               	goto	l7210
 18340  017DFC                     u6390:
 18341                           
 18342                           ;stkvar	_isspace$5057 @ sp[(-1)+0]
 18343  017DFC  0EFF               	movlw	-1
 18344  017DFE  6AE3               	clrf	plusw1,c
 18345  017E00                     l7210:
 18346                           
 18347                           ;stkvar	_isspace$5057 @ sp[(-1)+0]
 18348  017E00  0EFF               	movlw	-1
 18349  017E02  50E3               	movf	plusw1,w,c
 18350  017E04  6E32               	movwf	btemp^0,c
 18351  017E06  6A33               	clrf	(btemp+1)^0,c
 18352                           
 18353                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18354  017E08  52E5               	movf	postdec1,f,c
 18355  017E0A  52E5               	movf	postdec1,f,c
 18356  017E0C  52E5               	movf	postdec1,f,c
 18357  017E0E  0012               	return		;funcret
 18358  017E10                     __end_of_isspace:
 18359                           	opt callstack 0
 18360                           
 18361 ;; *************** function _isdigit *****************
 18362 ;; Defined at:
 18363 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 18364 ;; Parameters:    Size  Location     Type
 18365 ;;  c               2  [STACK] int 
 18366 ;; Auto vars:     Size  Location     Type
 18367 ;;		None
 18368 ;; Return value:  Size  Location     Type
 18369 ;;                  2  [STACK] int 
 18370 ;; Registers used:
 18371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18372 ;; Tracked objects:
 18373 ;;		On entry : 0/0
 18374 ;;		On exit  : 0/0
 18375 ;;		Unchanged: 0/0
 18376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18381 ;;Total ram usage:        0 bytes
 18382 ;; Hardware stack levels used:    1
 18383 ;; Hardware stack levels required when called:    6
 18384 ;; This function calls:
 18385 ;;		Nothing
 18386 ;; This function is called by:
 18387 ;;		_vfpfcnvrt
 18388 ;;		_atoi
 18389 ;; This function uses a reentrant model
 18390 ;;
 18391                           
 18392                           	psect	text72
 18393  018298                     __ptext72:
 18394                           	opt callstack 0
 18395  018298                     _isdigit:
 18396                           	opt callstack 18
 18397                           
 18398                           ;stkvar	_c @ sp[(0)+-2]
 18399                           
 18400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18401                           ;incstack = 0
 18402  018298  0EFE               	movlw	-2
 18403  01829A  50E3               	movf	plusw1,w,c
 18404  01829C  0FD0               	addlw	208
 18405  01829E  6E3C               	movwf	(btemp+10)^0,c
 18406  0182A0  0EFF               	movlw	-1
 18407  0182A2  006F FF8C  F03D    	movff	plusw1,btemp+11
 18408  0182A8  0EFF               	movlw	255
 18409  0182AA  223D               	addwfc	(btemp+11)^0,f,c
 18410  0182AC  503D               	movf	(btemp+11)^0,w,c
 18411  0182AE  E106               	bnz	u5340
 18412  0182B0  0E0A               	movlw	10
 18413  0182B2  5C3C               	subwf	(btemp+10)^0,w,c
 18414  0182B4  B0D8               	btfsc	status,0,c
 18415  0182B6  D002               	goto	u5340
 18416  0182B8  0E01               	movlw	1
 18417  0182BA  D001               	goto	u5350
 18418  0182BC                     u5340:
 18419  0182BC  0E00               	movlw	0
 18420  0182BE                     u5350:
 18421  0182BE  6E32               	movwf	btemp^0,c
 18422  0182C0  6A33               	clrf	(btemp+1)^0,c
 18423                           
 18424                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18425  0182C2  52E5               	movf	postdec1,f,c
 18426  0182C4  52E5               	movf	postdec1,f,c
 18427  0182C6  0012               	return		;funcret
 18428  0182C8                     __end_of_isdigit:
 18429                           	opt callstack 0
 18430                           
 18431 ;; *************** function _set_vterm *****************
 18432 ;; Defined at:
 18433 ;;		line 107 in file "mconfig.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;  vterm           1  [STACK] const unsigned char 
 18436 ;; Auto vars:     Size  Location     Type
 18437 ;;		None
 18438 ;; Return value:  Size  Location     Type
 18439 ;;                  1  [STACK] unsigned char 
 18440 ;; Registers used:
 18441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 18442 ;; Tracked objects:
 18443 ;;		On entry : 0/1
 18444 ;;		On exit  : 3F/5
 18445 ;;		Unchanged: 0/0
 18446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18451 ;;Total ram usage:        0 bytes
 18452 ;; Hardware stack levels used:    1
 18453 ;; Hardware stack levels required when called:    6
 18454 ;; This function calls:
 18455 ;;		Nothing
 18456 ;; This function is called by:
 18457 ;;		_main
 18458 ;;		_check_help
 18459 ;; This function uses a reentrant model
 18460 ;;
 18461                           
 18462                           	psect	text73
 18463  018840                     __ptext73:
 18464                           	opt callstack 0
 18465  018840                     _set_vterm:
 18466                           	opt callstack 24
 18467                           
 18468                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 18469                           ;stkvar	_vterm @ sp[(0)+-1]
 18470                           
 18471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18472                           ;incstack = 0
 18473  018840  0EFF               	movlw	-1
 18474  018842  006F FF8C  F03D    	movff	plusw1,btemp+11
 18475  018848  0E03               	movlw	3
 18476  01884A  163D               	andwf	(btemp+11)^0,f,c
 18477  01884C  0105               	movlb	5	; () banked
 18478  01884E  51D8               	movf	(_D+216)& (0+255),w,b
 18479  018850  183D               	xorwf	(btemp+11)^0,w,c
 18480  018852  0BFE               	andlw	-2
 18481  018854  183D               	xorwf	(btemp+11)^0,w,c
 18482  018856  6FD8               	movwf	(_D+216)& (0+255),b
 18483                           
 18484                           ; BSR set to: 5
 18485                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18486  018858  52E5               	movf	postdec1,f,c
 18487  01885A  0012               	return		;funcret
 18488  01885C                     __end_of_set_vterm:
 18489                           	opt callstack 0
 18490                           
 18491 ;; *************** function _set_temp_display_help *****************
 18492 ;; Defined at:
 18493 ;;		line 211 in file "mconfig.c"
 18494 ;; Parameters:    Size  Location     Type
 18495 ;;  new_response    1  [STACK] const enum E16501
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;		None
 18498 ;; Return value:  Size  Location     Type
 18499 ;;                  1  [STACK] enum E16501
 18500 ;; Registers used:
 18501 ;;		wreg, fsr1l, fsr1h
 18502 ;; Tracked objects:
 18503 ;;		On entry : 0/5
 18504 ;;		On exit  : 3F/2
 18505 ;;		Unchanged: 0/0
 18506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18511 ;;Total ram usage:        0 bytes
 18512 ;; Hardware stack levels used:    1
 18513 ;; Hardware stack levels required when called:    6
 18514 ;; This function calls:
 18515 ;;		Nothing
 18516 ;; This function is called by:
 18517 ;;		_check_help
 18518 ;; This function uses a reentrant model
 18519 ;;
 18520                           
 18521                           	psect	text74
 18522  01893A                     __ptext74:
 18523                           	opt callstack 0
 18524  01893A                     _set_temp_display_help:
 18525                           	opt callstack 23
 18526                           
 18527                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 18528                           
 18529                           ; BSR set to: 5
 18530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18531                           ;incstack = 0
 18532  01893A  0102               	movlb	2	; () banked
 18533  01893C  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 18534                           
 18535                           ; BSR set to: 2
 18536                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 18537                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18538  01893E  0EFF               	movlw	-1
 18539  018940  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 18540                           
 18541                           ; BSR set to: 2
 18542                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 18543  018946  52E5               	movf	postdec1,f,c
 18544  018948  0012               	return		;funcret
 18545  01894A                     __end_of_set_temp_display_help:
 18546                           	opt callstack 0
 18547                           
 18548 ;; *************** function _set_display_info *****************
 18549 ;; Defined at:
 18550 ;;		line 200 in file "mconfig.c"
 18551 ;; Parameters:    Size  Location     Type
 18552 ;;  new_response    1  [STACK] const enum E16501
 18553 ;; Auto vars:     Size  Location     Type
 18554 ;;		None
 18555 ;; Return value:  Size  Location     Type
 18556 ;;                  1  [STACK] enum E16986
 18557 ;; Registers used:
 18558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18559 ;; Tracked objects:
 18560 ;;		On entry : 0/39
 18561 ;;		On exit  : 0/0
 18562 ;;		Unchanged: 0/0
 18563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18568 ;;Total ram usage:        0 bytes
 18569 ;; Hardware stack levels used:    1
 18570 ;; Hardware stack levels required when called:    7
 18571 ;; This function calls:
 18572 ;;		_TimerDone
 18573 ;; This function is called by:
 18574 ;;		_main
 18575 ;;		_check_help
 18576 ;; This function uses a reentrant model
 18577 ;;
 18578                           
 18579                           	psect	text75
 18580  0187CA                     __ptext75:
 18581                           	opt callstack 0
 18582  0187CA                     _set_display_info:
 18583                           	opt callstack 23
 18584                           
 18585                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 18586                           
 18587                           ; BSR set to: 2
 18588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18589                           ;incstack = 0
 18590  0187CA  0E07               	movlw	7
 18591  0187CC  6EE6               	movwf	postinc1,c
 18592  0187CE  EC5F  F0C3         	call	_TimerDone	;wreg free
 18593  0187D2  5032               	movf	btemp^0,w,c
 18594  0187D4  B4D8               	btfsc	status,2,c
 18595  0187D6  D006               	goto	l1616
 18596                           
 18597                           ;mconfig.c: 205:   old_info = V.response.info;
 18598  0187D8  0102               	movlb	2	; () banked
 18599  0187DA  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 18600                           
 18601                           ; BSR set to: 2
 18602                           ;mconfig.c: 206:   V.response.info = new_response_info;
 18603                           ;stkvar	_new_response_info @ sp[(0)+-1]
 18604  0187DC  0EFF               	movlw	-1
 18605  0187DE  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 18606  0187E4                     l1616:
 18607                           
 18608                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 18609  0187E4  52E5               	movf	postdec1,f,c
 18610  0187E6  0012               	return		;funcret
 18611  0187E8                     __end_of_set_display_info:
 18612                           	opt callstack 0
 18613                           
 18614 ;; *************** function _mode_lamp_dim *****************
 18615 ;; Defined at:
 18616 ;;		line 13 in file "mconfig.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;  level           2  [STACK] const unsigned short 
 18619 ;; Auto vars:     Size  Location     Type
 18620 ;;		None
 18621 ;; Return value:  Size  Location     Type
 18622 ;;                  1  [STACK] void 
 18623 ;; Registers used:
 18624 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18625 ;; Tracked objects:
 18626 ;;		On entry : 0/2
 18627 ;;		On exit  : 0/0
 18628 ;;		Unchanged: 0/0
 18629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18634 ;;Total ram usage:        0 bytes
 18635 ;; Hardware stack levels used:    1
 18636 ;; Hardware stack levels required when called:    7
 18637 ;; This function calls:
 18638 ;;		_PWM8_LoadDutyValue
 18639 ;; This function is called by:
 18640 ;;		_main
 18641 ;;		_check_help
 18642 ;; This function uses a reentrant model
 18643 ;;
 18644                           
 18645                           	psect	text76
 18646  018892                     __ptext76:
 18647                           	opt callstack 0
 18648  018892                     _mode_lamp_dim:
 18649                           	opt callstack 23
 18650                           
 18651                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 18652                           ;stkvar	_level @ sp[(0)+-2]
 18653                           
 18654                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18655                           ;incstack = 0
 18656  018892  0EFE               	movlw	-2
 18657  018894  006F FF8F FFE6     	movff	plusw1,postinc1
 18658  01889A  006F FF8F FFE6     	movff	plusw1,postinc1
 18659  0188A0  ECFD  F0BF         	call	_PWM8_LoadDutyValue	;wreg free
 18660                           
 18661                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 18662  0188A4  52E5               	movf	postdec1,f,c
 18663  0188A6  52E5               	movf	postdec1,f,c
 18664  0188A8  0012               	return		;funcret
 18665  0188AA                     __end_of_mode_lamp_dim:
 18666                           	opt callstack 0
 18667                           
 18668 ;; *************** function _mode_lamp_bright *****************
 18669 ;; Defined at:
 18670 ;;		line 18 in file "mconfig.c"
 18671 ;; Parameters:    Size  Location     Type
 18672 ;;		None
 18673 ;; Auto vars:     Size  Location     Type
 18674 ;;		None
 18675 ;; Return value:  Size  Location     Type
 18676 ;;                  1  [STACK] void 
 18677 ;; Registers used:
 18678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18679 ;; Tracked objects:
 18680 ;;		On entry : 0/2
 18681 ;;		On exit  : 0/0
 18682 ;;		Unchanged: 0/0
 18683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18688 ;;Total ram usage:        0 bytes
 18689 ;; Hardware stack levels used:    1
 18690 ;; Hardware stack levels required when called:    7
 18691 ;; This function calls:
 18692 ;;		_PWM8_LoadDutyValue
 18693 ;; This function is called by:
 18694 ;;		_check_help
 18695 ;; This function uses a reentrant model
 18696 ;;
 18697                           
 18698                           	psect	text77
 18699  018958                     __ptext77:
 18700                           	opt callstack 0
 18701  018958                     _mode_lamp_bright:
 18702                           	opt callstack 22
 18703                           
 18704                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 18705                           
 18706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18707                           ;incstack = 0
 18708  018958  0E2C               	movlw	44
 18709  01895A  6EE6               	movwf	postinc1,c
 18710  01895C  0E01               	movlw	1
 18711  01895E  6EE6               	movwf	postinc1,c
 18712  018960  ECFD  F0BF         	call	_PWM8_LoadDutyValue	;wreg free
 18713                           
 18714                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 18715  018964  0012               	return		;funcret
 18716  018966                     __end_of_mode_lamp_bright:
 18717                           	opt callstack 0
 18718                           
 18719 ;; *************** function _PWM8_LoadDutyValue *****************
 18720 ;; Defined at:
 18721 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 18722 ;; Parameters:    Size  Location     Type
 18723 ;;  dutyValue       2  [STACK] unsigned short 
 18724 ;; Auto vars:     Size  Location     Type
 18725 ;;		None
 18726 ;; Return value:  Size  Location     Type
 18727 ;;                  1  [STACK] void 
 18728 ;; Registers used:
 18729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 18730 ;; Tracked objects:
 18731 ;;		On entry : 0/2
 18732 ;;		On exit  : 0/0
 18733 ;;		Unchanged: 0/0
 18734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18739 ;;Total ram usage:        0 bytes
 18740 ;; Hardware stack levels used:    1
 18741 ;; Hardware stack levels required when called:    6
 18742 ;; This function calls:
 18743 ;;		Nothing
 18744 ;; This function is called by:
 18745 ;;		_mode_lamp_dim
 18746 ;;		_mode_lamp_bright
 18747 ;; This function uses a reentrant model
 18748 ;;
 18749                           
 18750                           	psect	text78
 18751  017FFA                     __ptext78:
 18752                           	opt callstack 0
 18753  017FFA                     _PWM8_LoadDutyValue:
 18754                           	opt callstack 23
 18755                           
 18756                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18757                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18758                           
 18759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18760                           ;incstack = 0
 18761  017FFA  0EFE               	movlw	-2
 18762  017FFC  006F FF8C  F03C    	movff	plusw1,btemp+10
 18763  018002  0EFF               	movlw	-1
 18764  018004  006F FF8C  F03D    	movff	plusw1,btemp+11
 18765  01800A  90D8               	bcf	status,0,c
 18766  01800C  323D               	rrcf	(btemp+11)^0,f,c
 18767  01800E  323C               	rrcf	(btemp+10)^0,f,c
 18768  018010  90D8               	bcf	status,0,c
 18769  018012  323D               	rrcf	(btemp+11)^0,f,c
 18770  018014  323C               	rrcf	(btemp+10)^0,f,c
 18771  018016  503C               	movf	(btemp+10)^0,w,c
 18772  018018  6E61               	movwf	97,c	;volatile
 18773                           
 18774                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 18775                           ;stkvar	_dutyValue @ sp[(0)+-2]
 18776  01801A  0EFE               	movlw	-2
 18777  01801C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18778  018022  0E03               	movlw	3
 18779  018024  163D               	andwf	(btemp+11)^0,f,c
 18780  018026  0E06               	movlw	6
 18781  018028  6E32               	movwf	btemp^0,c
 18782  01802A                     u7875:
 18783  01802A  90D8               	bcf	status,0,c
 18784  01802C  363D               	rlcf	(btemp+11)^0,f,c
 18785  01802E  2E32               	decfsz	btemp^0,f,c
 18786  018030  D7FC               	goto	u7875
 18787  018032  503D               	movf	(btemp+11)^0,w,c
 18788  018034  6E60               	movwf	96,c	;volatile
 18789                           
 18790                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 18791  018036  52E5               	movf	postdec1,f,c
 18792  018038  52E5               	movf	postdec1,f,c
 18793  01803A  0012               	return		;funcret
 18794  01803C                     __end_of_PWM8_LoadDutyValue:
 18795                           	opt callstack 0
 18796                           
 18797 ;; *************** function _help_button *****************
 18798 ;; Defined at:
 18799 ;;		line 26 in file "mconfig.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1  [STACK] _Bool 
 18806 ;; Registers used:
 18807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/2
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18817 ;;Total ram usage:        0 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; Hardware stack levels required when called:    7
 18820 ;; This function calls:
 18821 ;;		_StartTimer
 18822 ;;		_TimerDone
 18823 ;; This function is called by:
 18824 ;;		_check_help
 18825 ;; This function uses a reentrant model
 18826 ;;
 18827                           
 18828                           	psect	text79
 18829  0180F6                     __ptext79:
 18830                           	opt callstack 0
 18831  0180F6                     _help_button:
 18832                           	opt callstack 22
 18833                           
 18834                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 18835                           
 18836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18837                           ;incstack = 0
 18838  0180F6  B0CB               	btfsc	203,0,c	;volatile
 18839  0180F8  D00C               	goto	l1559
 18840                           
 18841                           ;mconfig.c: 29:   V.help = 1;
 18842  0180FA  0102               	movlb	2	; () banked
 18843  0180FC  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 18844                           
 18845                           ; BSR set to: 2
 18846                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 18847  0180FE  0E08               	movlw	8
 18848  018100  6EE6               	movwf	postinc1,c
 18849  018102  EC5F  F0C3         	call	_TimerDone	;wreg free
 18850  018106  5032               	movf	btemp^0,w,c
 18851  018108  B4D8               	btfsc	status,2,c
 18852  01810A  D003               	goto	l1559
 18853                           
 18854                           ;mconfig.c: 31:    return 1;
 18855  01810C  0E01               	movlw	1
 18856  01810E  6E32               	movwf	btemp^0,c
 18857  018110  0012               	return	
 18858  018112                     l1559:
 18859                           
 18860                           ;mconfig.c: 34:  if (!V.help)
 18861  018112  0102               	movlb	2	; () banked
 18862  018114  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 18863  018116  D008               	goto	l8660
 18864                           
 18865                           ; BSR set to: 2
 18866                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 18867  018118  0E2C               	movlw	44
 18868  01811A  6EE6               	movwf	postinc1,c
 18869  01811C  0E01               	movlw	1
 18870  01811E  6EE6               	movwf	postinc1,c
 18871  018120  0E08               	movlw	8
 18872  018122  6EE6               	movwf	postinc1,c
 18873  018124  EC5D  F0C0         	call	_StartTimer	;wreg free
 18874  018128                     l8660:
 18875                           
 18876                           ;mconfig.c: 37:  return 0;
 18877  018128  0E00               	movlw	0
 18878  01812A  6E32               	movwf	btemp^0,c
 18879                           
 18880                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 18881  01812C  0012               	return		;funcret
 18882  01812E                     __end_of_help_button:
 18883                           	opt callstack 0
 18884                           
 18885 ;; *************** function _TimerDone *****************
 18886 ;; Defined at:
 18887 ;;		line 20 in file "timers.c"
 18888 ;; Parameters:    Size  Location     Type
 18889 ;;  timer           1  [STACK] const unsigned char 
 18890 ;; Auto vars:     Size  Location     Type
 18891 ;;		None
 18892 ;; Return value:  Size  Location     Type
 18893 ;;                  1  [STACK] _Bool 
 18894 ;; Registers used:
 18895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18896 ;; Tracked objects:
 18897 ;;		On entry : 0/39
 18898 ;;		On exit  : 0/0
 18899 ;;		Unchanged: 0/0
 18900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18905 ;;Total ram usage:        0 bytes
 18906 ;; Hardware stack levels used:    1
 18907 ;; Hardware stack levels required when called:    6
 18908 ;; This function calls:
 18909 ;;		Nothing
 18910 ;; This function is called by:
 18911 ;;		_main
 18912 ;;		_WaitMs
 18913 ;;		_help_button
 18914 ;;		_check_help
 18915 ;;		_set_display_info
 18916 ;; This function uses a reentrant model
 18917 ;;
 18918                           
 18919                           	psect	text80
 18920  0186BE                     __ptext80:
 18921                           	opt callstack 0
 18922  0186BE                     _TimerDone:
 18923                           	opt callstack 23
 18924                           
 18925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18926                           ;incstack = 0
 18927  0186BE  0004               	clrwdt		;# 
 18928                           
 18929                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 18930                           ;stkvar	_timer @ sp[(0)+-1]
 18931  0186C0  0EFF               	movlw	-1
 18932  0186C2  50E3               	movf	plusw1,w,c
 18933  0186C4  0D02               	mullw	2
 18934  0186C6  50F3               	movf	243,w,c
 18935  0186C8  0F89               	addlw	low _tickCount
 18936  0186CA  6ED9               	movwf	fsr2l,c
 18937  0186CC  6ADA               	clrf	fsr2h,c
 18938  0186CE  50DE               	movf	postinc2,w,c
 18939  0186D0  10DE               	iorwf	postinc2,w,c
 18940  0186D2  A4D8               	btfss	status,2,c
 18941  0186D4  D002               	goto	l8046
 18942                           
 18943                           ;timers.c: 24:   return 1;
 18944  0186D6  0E01               	movlw	1
 18945  0186D8  D001               	goto	L20
 18946  0186DA                     l8046:
 18947                           
 18948                           ;timers.c: 26:  return 0;
 18949  0186DA  0E00               	movlw	0
 18950  0186DC                     L20:
 18951  0186DC  6E32               	movwf	btemp^0,c
 18952                           
 18953                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 18954  0186DE  52E5               	movf	postdec1,f,c
 18955  0186E0  0012               	return		;funcret
 18956  0186E2                     __end_of_TimerDone:
 18957                           	opt callstack 0
 18958                           
 18959 ;; *************** function _StartTimer *****************
 18960 ;; Defined at:
 18961 ;;		line 12 in file "timers.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;  timer           1  [STACK] const unsigned char 
 18964 ;;  count           2  [STACK] const unsigned short 
 18965 ;; Auto vars:     Size  Location     Type
 18966 ;;		None
 18967 ;; Return value:  Size  Location     Type
 18968 ;;                  1  [STACK] void 
 18969 ;; Registers used:
 18970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/5
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18980 ;;Total ram usage:        0 bytes
 18981 ;; Hardware stack levels used:    1
 18982 ;; Hardware stack levels required when called:    6
 18983 ;; This function calls:
 18984 ;;		Nothing
 18985 ;; This function is called by:
 18986 ;;		_main
 18987 ;;		_WaitMs
 18988 ;;		_help_button
 18989 ;;		_check_help
 18990 ;; This function uses a reentrant model
 18991 ;;
 18992                           
 18993                           	psect	text81
 18994  0180BA                     __ptext81:
 18995                           	opt callstack 0
 18996  0180BA                     _StartTimer:
 18997                           	opt callstack 21
 18998                           
 18999                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19000                           ;stkvar	_count @ sp[(0)+-3]
 19001                           
 19002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19003                           ;incstack = 0
 19004  0180BA  0EFD               	movlw	-3
 19005  0180BC  006F FF8C  F03C    	movff	plusw1,btemp+10
 19006  0180C2  0EFE               	movlw	-2
 19007  0180C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 19008  0180CA  90D8               	bcf	status,0,c
 19009  0180CC  343C               	rlcf	(btemp+10)^0,w,c
 19010  0180CE  6E3A               	movwf	(btemp+8)^0,c
 19011  0180D0  343D               	rlcf	(btemp+11)^0,w,c
 19012  0180D2  6E3B               	movwf	(btemp+9)^0,c
 19013                           
 19014                           ;stkvar	_timer @ sp[(0)+-1]
 19015  0180D4  0EFF               	movlw	-1
 19016  0180D6  50E3               	movf	plusw1,w,c
 19017  0180D8  0D02               	mullw	2
 19018  0180DA  50F3               	movf	243,w,c
 19019  0180DC  0F89               	addlw	low _tickCount
 19020  0180DE  6ED9               	movwf	fsr2l,c
 19021  0180E0  6ADA               	clrf	fsr2h,c
 19022  0180E2  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 19023  0180E8  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 19024                           
 19025                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19026  0180EE  52E5               	movf	postdec1,f,c
 19027  0180F0  52E5               	movf	postdec1,f,c
 19028  0180F2  52E5               	movf	postdec1,f,c
 19029  0180F4  0012               	return		;funcret
 19030  0180F6                     __end_of_StartTimer:
 19031                           	opt callstack 0
 19032                           
 19033 ;; *************** function _display_info *****************
 19034 ;; Defined at:
 19035 ;;		line 190 in file "mconfig.c"
 19036 ;; Parameters:    Size  Location     Type
 19037 ;;		None
 19038 ;; Auto vars:     Size  Location     Type
 19039 ;;		None
 19040 ;; Return value:  Size  Location     Type
 19041 ;;                  1  [STACK] enum E16501
 19042 ;; Registers used:
 19043 ;;		btemp
 19044 ;; Tracked objects:
 19045 ;;		On entry : 0/2
 19046 ;;		On exit  : 0/0
 19047 ;;		Unchanged: 0/0
 19048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19053 ;;Total ram usage:        0 bytes
 19054 ;; Hardware stack levels used:    1
 19055 ;; Hardware stack levels required when called:    6
 19056 ;; This function calls:
 19057 ;;		Nothing
 19058 ;; This function is called by:
 19059 ;;		_check_help
 19060 ;; This function uses a reentrant model
 19061 ;;
 19062                           
 19063                           	psect	text82
 19064  0189BA                     __ptext82:
 19065                           	opt callstack 0
 19066  0189BA                     _display_info:
 19067                           	opt callstack 23
 19068                           
 19069                           ;mconfig.c: 192:  return V.response.info;
 19070                           
 19071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19072                           ;incstack = 0
 19073  0189BA  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 19074                           
 19075                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19076  0189C0  0012               	return		;funcret
 19077  0189C2                     __end_of_display_info:
 19078                           	opt callstack 0
 19079                           
 19080 ;; *************** function _display_help *****************
 19081 ;; Defined at:
 19082 ;;		line 195 in file "mconfig.c"
 19083 ;; Parameters:    Size  Location     Type
 19084 ;;		None
 19085 ;; Auto vars:     Size  Location     Type
 19086 ;;		None
 19087 ;; Return value:  Size  Location     Type
 19088 ;;                  1  [STACK] enum E16501
 19089 ;; Registers used:
 19090 ;;		btemp
 19091 ;; Tracked objects:
 19092 ;;		On entry : 3F/2
 19093 ;;		On exit  : 0/0
 19094 ;;		Unchanged: 0/0
 19095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19100 ;;Total ram usage:        0 bytes
 19101 ;; Hardware stack levels used:    1
 19102 ;; Hardware stack levels required when called:    6
 19103 ;; This function calls:
 19104 ;;		Nothing
 19105 ;; This function is called by:
 19106 ;;		_check_help
 19107 ;; This function uses a reentrant model
 19108 ;;
 19109                           
 19110                           	psect	text83
 19111  0189C2                     __ptext83:
 19112                           	opt callstack 0
 19113  0189C2                     _display_help:
 19114                           	opt callstack 23
 19115                           
 19116                           ;mconfig.c: 197:  return V.response.help_temp;
 19117                           
 19118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19119                           ;incstack = 0
 19120  0189C2  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19121                           
 19122                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19123  0189C8  0012               	return		;funcret
 19124  0189CA                     __end_of_display_help:
 19125                           	opt callstack 0
 19126                           
 19127 ;; *************** function _check_adc_scan *****************
 19128 ;; Defined at:
 19129 ;;		line 56 in file "daq.c"
 19130 ;; Parameters:    Size  Location     Type
 19131 ;;		None
 19132 ;; Auto vars:     Size  Location     Type
 19133 ;;		None
 19134 ;; Return value:  Size  Location     Type
 19135 ;;                  1  [STACK] _Bool 
 19136 ;; Registers used:
 19137 ;;		btemp
 19138 ;; Tracked objects:
 19139 ;;		On entry : 0/39
 19140 ;;		On exit  : 0/0
 19141 ;;		Unchanged: 0/0
 19142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19147 ;;Total ram usage:        0 bytes
 19148 ;; Hardware stack levels used:    1
 19149 ;; Hardware stack levels required when called:    6
 19150 ;; This function calls:
 19151 ;;		Nothing
 19152 ;; This function is called by:
 19153 ;;		_main
 19154 ;; This function uses a reentrant model
 19155 ;;
 19156                           
 19157                           	psect	text84
 19158  0189CA                     __ptext84:
 19159                           	opt callstack 0
 19160  0189CA                     _check_adc_scan:
 19161                           	opt callstack 24
 19162                           
 19163                           ;daq.c: 58:  return R.done;
 19164                           
 19165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19166                           ;incstack = 0
 19167  0189CA  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 19168                           
 19169                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19170  0189D0  0012               	return		;funcret
 19171  0189D2                     __end_of_check_adc_scan:
 19172                           	opt callstack 0
 19173                           
 19174 ;; *************** function _calc_model_data *****************
 19175 ;; Defined at:
 19176 ;;		line 54 in file "mbmc.c"
 19177 ;; Parameters:    Size  Location     Type
 19178 ;;		None
 19179 ;; Auto vars:     Size  Location     Type
 19180 ;;		None
 19181 ;; Return value:  Size  Location     Type
 19182 ;;                  1  [STACK] void 
 19183 ;; Registers used:
 19184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19185 ;; Tracked objects:
 19186 ;;		On entry : 0/39
 19187 ;;		On exit  : 3F/1
 19188 ;;		Unchanged: 0/0
 19189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19194 ;;Total ram usage:        0 bytes
 19195 ;; Hardware stack levels used:    1
 19196 ;; Hardware stack levels required when called:    9
 19197 ;; This function calls:
 19198 ;;		___fladd
 19199 ;;		___flmul
 19200 ;;		___flsub
 19201 ;;		_lp_filter
 19202 ;; This function is called by:
 19203 ;;		_main
 19204 ;; This function uses a reentrant model
 19205 ;;
 19206                           
 19207                           	psect	text85
 19208  0152B4                     __ptext85:
 19209                           	opt callstack 0
 19210  0152B4                     _calc_model_data:
 19211                           	opt callstack 21
 19212                           
 19213                           ;mbmc.c: 56:  C.c_bat = C.calc[C_BATT];
 19214                           
 19215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19216                           ;incstack = 0
 19217  0152B4  C100  F144         	movff	_C,_C+68
 19218  0152B8  C101  F145         	movff	_C+1,_C+69
 19219  0152BC  C102  F146         	movff	_C+2,_C+70
 19220  0152C0  C103  F147         	movff	_C+3,_C+71
 19221                           
 19222                           ;mbmc.c: 57:  C.c_pv = C.calc[C_PV];
 19223  0152C4  C104  F148         	movff	_C+4,_C+72
 19224  0152C8  C105  F149         	movff	_C+5,_C+73
 19225  0152CC  C106  F14A         	movff	_C+6,_C+74
 19226  0152D0  C107  F14B         	movff	_C+7,_C+75
 19227                           
 19228                           ;mbmc.c: 58:  C.v_bat = C.calc[V_BAT];
 19229  0152D4  C110  F154         	movff	_C+16,_C+84
 19230  0152D8  C111  F155         	movff	_C+17,_C+85
 19231  0152DC  C112  F156         	movff	_C+18,_C+86
 19232  0152E0  C113  F157         	movff	_C+19,_C+87
 19233                           
 19234                           ;mbmc.c: 59:  C.v_pv = C.calc[V_PV];
 19235  0152E4  C114  F150         	movff	_C+20,_C+80
 19236  0152E8  C115  F151         	movff	_C+21,_C+81
 19237  0152EC  C116  F152         	movff	_C+22,_C+82
 19238  0152F0  C117  F153         	movff	_C+23,_C+83
 19239                           
 19240                           ;mbmc.c: 60:  C.v_inverter = C.calc[V_INVERTER];
 19241  0152F4  C130  F164         	movff	_C+48,_C+100
 19242  0152F8  C131  F165         	movff	_C+49,_C+101
 19243  0152FC  C132  F166         	movff	_C+50,_C+102
 19244  015300  C133  F167         	movff	_C+51,_C+103
 19245                           
 19246                           ;mbmc.c: 61:  C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 19247  015304  0E01               	movlw	1
 19248  015306  6EE6               	movwf	postinc1,c
 19249  015308  0E10               	movlw	16
 19250  01530A  6EE6               	movwf	postinc1,c
 19251  01530C  0060  F403  FFE6   	movff	_C,postinc1
 19252  015312  0060  F407  FFE6   	movff	_C+1,postinc1
 19253  015318  0060  F40B  FFE6   	movff	_C+2,postinc1
 19254  01531E  0060  F40F  FFE6   	movff	_C+3,postinc1
 19255  015324  0060  F413  FFE6   	movff	_C+4,postinc1
 19256  01532A  0060  F417  FFE6   	movff	_C+5,postinc1
 19257  015330  0060  F41B  FFE6   	movff	_C+6,postinc1
 19258  015336  0060  F41F  FFE6   	movff	_C+7,postinc1
 19259  01533C  EC4F  F0BF         	call	___flsub	;wreg free
 19260  015340  0060  F0CB  FFE6   	movff	btemp,postinc1
 19261  015346  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19262  01534C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19263  015352  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19264  015358  EC9E  F0AE         	call	_lp_filter	;wreg free
 19265  01535C  0060  F0C8  F140   	movff	btemp,_C+64
 19266  015362  0060  F0CC  F141   	movff	btemp+1,_C+65
 19267  015368  0060  F0D0  F142   	movff	btemp+2,_C+66
 19268  01536E  0060  F0D4  F143   	movff	btemp+3,_C+67
 19269                           
 19270                           ;mbmc.c: 62:  C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 19271  015374  0E01               	movlw	1
 19272  015376  6EE6               	movwf	postinc1,c
 19273  015378  0E11               	movlw	17
 19274  01537A  6EE6               	movwf	postinc1,c
 19275  01537C  0060  F553  FFE6   	movff	_C+84,postinc1
 19276  015382  0060  F557  FFE6   	movff	_C+85,postinc1
 19277  015388  0060  F55B  FFE6   	movff	_C+86,postinc1
 19278  01538E  0060  F55F  FFE6   	movff	_C+87,postinc1
 19279  015394  0060  F503  FFE6   	movff	_C+64,postinc1
 19280  01539A  0060  F507  FFE6   	movff	_C+65,postinc1
 19281  0153A0  0060  F50B  FFE6   	movff	_C+66,postinc1
 19282  0153A6  0060  F50F  FFE6   	movff	_C+67,postinc1
 19283  0153AC  ECC1  F08E         	call	___flmul	;wreg free
 19284  0153B0  0060  F0CB  FFE6   	movff	btemp,postinc1
 19285  0153B6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19286  0153BC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19287  0153C2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19288  0153C8  EC9E  F0AE         	call	_lp_filter	;wreg free
 19289  0153CC  0060  F0C8  F168   	movff	btemp,_C+104
 19290  0153D2  0060  F0CC  F169   	movff	btemp+1,_C+105
 19291  0153D8  0060  F0D0  F16A   	movff	btemp+2,_C+106
 19292  0153DE  0060  F0D4  F16B   	movff	btemp+3,_C+107
 19293                           
 19294                           ;mbmc.c: 63:  C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 19295  0153E4  0E01               	movlw	1
 19296  0153E6  6EE6               	movwf	postinc1,c
 19297  0153E8  0E12               	movlw	18
 19298  0153EA  6EE6               	movwf	postinc1,c
 19299  0153EC  0060  F543  FFE6   	movff	_C+80,postinc1
 19300  0153F2  0060  F547  FFE6   	movff	_C+81,postinc1
 19301  0153F8  0060  F54B  FFE6   	movff	_C+82,postinc1
 19302  0153FE  0060  F54F  FFE6   	movff	_C+83,postinc1
 19303  015404  0060  F523  FFE6   	movff	_C+72,postinc1
 19304  01540A  0060  F527  FFE6   	movff	_C+73,postinc1
 19305  015410  0060  F52B  FFE6   	movff	_C+74,postinc1
 19306  015416  0060  F52F  FFE6   	movff	_C+75,postinc1
 19307  01541C  ECC1  F08E         	call	___flmul	;wreg free
 19308  015420  0060  F0CB  FFE6   	movff	btemp,postinc1
 19309  015426  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19310  01542C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19311  015432  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19312  015438  EC9E  F0AE         	call	_lp_filter	;wreg free
 19313  01543C  0060  F0C8  F170   	movff	btemp,_C+112
 19314  015442  0060  F0CC  F171   	movff	btemp+1,_C+113
 19315  015448  0060  F0D0  F172   	movff	btemp+2,_C+114
 19316  01544E  0060  F0D4  F173   	movff	btemp+3,_C+115
 19317                           
 19318                           ;mbmc.c: 64:  C.p_inverter = lp_filter((C.c_load * C.v_inverter)-14.00, 19, 1);
 19319  015454  0E01               	movlw	1
 19320  015456  6EE6               	movwf	postinc1,c
 19321  015458  0E13               	movlw	19
 19322  01545A  6EE6               	movwf	postinc1,c
 19323  01545C  0E00               	movlw	0
 19324  01545E  6EE6               	movwf	postinc1,c
 19325  015460  0E00               	movlw	0
 19326  015462  6EE6               	movwf	postinc1,c
 19327  015464  0E60               	movlw	96
 19328  015466  6EE6               	movwf	postinc1,c
 19329  015468  0EC1               	movlw	193
 19330  01546A  6EE6               	movwf	postinc1,c
 19331  01546C  0060  F593  FFE6   	movff	_C+100,postinc1
 19332  015472  0060  F597  FFE6   	movff	_C+101,postinc1
 19333  015478  0060  F59B  FFE6   	movff	_C+102,postinc1
 19334  01547E  0060  F59F  FFE6   	movff	_C+103,postinc1
 19335  015484  0060  F503  FFE6   	movff	_C+64,postinc1
 19336  01548A  0060  F507  FFE6   	movff	_C+65,postinc1
 19337  015490  0060  F50B  FFE6   	movff	_C+66,postinc1
 19338  015496  0060  F50F  FFE6   	movff	_C+67,postinc1
 19339  01549C  ECC1  F08E         	call	___flmul	;wreg free
 19340  0154A0  0060  F0CB  FFE6   	movff	btemp,postinc1
 19341  0154A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19342  0154AC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19343  0154B2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19344  0154B8  ECD6  F092         	call	___fladd	;wreg free
 19345  0154BC  0060  F0CB  FFE6   	movff	btemp,postinc1
 19346  0154C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19347  0154C8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19348  0154CE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19349  0154D4  EC9E  F0AE         	call	_lp_filter	;wreg free
 19350  0154D8  0060  F0C8  F16C   	movff	btemp,_C+108
 19351  0154DE  0060  F0CC  F16D   	movff	btemp+1,_C+109
 19352  0154E4  0060  F0D0  F16E   	movff	btemp+2,_C+110
 19353  0154EA  0060  F0D4  F16F   	movff	btemp+3,_C+111
 19354                           
 19355                           ;mbmc.c: 68:  if (C.p_inverter<0.0)
 19356  0154F0  0101               	movlb	1	; () banked
 19357  0154F2  AF6F               	btfss	(_C+111)& (0+255),7,b
 19358  0154F4  0012               	return	
 19359                           
 19360                           ; BSR set to: 1
 19361                           ;mbmc.c: 69:   C.p_inverter=0.0001;
 19362  0154F6  0E17               	movlw	23
 19363  0154F8  6F6C               	movwf	(_C+108)& (0+255),b
 19364  0154FA  0EB7               	movlw	183
 19365  0154FC  6F6D               	movwf	(_C+109)& (0+255),b
 19366  0154FE  0ED1               	movlw	209
 19367  015500  6F6E               	movwf	(_C+110)& (0+255),b
 19368  015502  0E38               	movlw	56
 19369  015504  6F6F               	movwf	(_C+111)& (0+255),b
 19370                           
 19371                           ; BSR set to: 1
 19372                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 19373  015506  0012               	return		;funcret
 19374  015508                     __end_of_calc_model_data:
 19375                           	opt callstack 0
 19376                           
 19377 ;; *************** function _lp_filter *****************
 19378 ;; Defined at:
 19379 ;;		line 16 in file "mbmc.c"
 19380 ;; Parameters:    Size  Location     Type
 19381 ;;  new             4  [STACK] const float 
 19382 ;;  bn              1  [STACK] const unsigned char 
 19383 ;;  slow            1  [STACK] const char 
 19384 ;; Auto vars:     Size  Location     Type
 19385 ;;  lp_speed        4  [STACK] float 
 19386 ;; Return value:  Size  Location     Type
 19387 ;;                  4  [STACK] float 
 19388 ;; Registers used:
 19389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19390 ;; Tracked objects:
 19391 ;;		On entry : 0/39
 19392 ;;		On exit  : 0/0
 19393 ;;		Unchanged: 0/0
 19394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19399 ;;Total ram usage:        0 bytes
 19400 ;; Hardware stack levels used:    1
 19401 ;; Hardware stack levels required when called:    8
 19402 ;; This function calls:
 19403 ;;		___fladd
 19404 ;;		___flmul
 19405 ;;		___flsub
 19406 ;; This function is called by:
 19407 ;;		_convert_adc_data
 19408 ;;		_calc_model_data
 19409 ;; This function uses a reentrant model
 19410 ;;
 19411                           
 19412                           	psect	text86
 19413  015D3C                     __ptext86:
 19414                           	opt callstack 0
 19415  015D3C                     _lp_filter:
 19416                           	opt callstack 0
 19417                           
 19418                           ; BSR set to: 1
 19419                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19420  015D3C  52E6               	movf	postinc1,f,c
 19421  015D3E  52E6               	movf	postinc1,f,c
 19422  015D40  52E6               	movf	postinc1,f,c
 19423  015D42  52E6               	movf	postinc1,f,c
 19424                           
 19425                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16 +4];;mbmc.c: 19:  float lp_speed;;mbmc.c: 2
      +                          1:  if (bn >= 16 +4)
 19426                           ;stkvar	_bn @ sp[(-4)+-5]
 19427                           
 19428                           ;incstack = 0
 19429  015D44  0EF7               	movlw	-9
 19430  015D46  006F FF8C  F032    	movff	plusw1,btemp
 19431  015D4C  0E13               	movlw	19
 19432  015D4E  6432               	cpfsgt	btemp^0,c
 19433  015D50  D011               	goto	l8766
 19434  015D52                     u8250:
 19435                           
 19436                           ;mbmc.c: 22:   return new;
 19437                           ;stkvar	_new @ sp[(-4)+-4]
 19438  015D52  0EF8               	movlw	-8
 19439  015D54  006F FF8C  F032    	movff	plusw1,btemp
 19440  015D5A  0EF9               	movlw	-7
 19441  015D5C  006F FF8C  F033    	movff	plusw1,btemp+1
 19442  015D62  0EFA               	movlw	-6
 19443  015D64  006F FF8C  F034    	movff	plusw1,btemp+2
 19444  015D6A  0EFB               	movlw	-5
 19445  015D6C  006F FF8C  F035    	movff	plusw1,btemp+3
 19446  015D72  D0BF               	goto	l1701
 19447  015D74                     l8766:
 19448                           
 19449                           ;mbmc.c: 24:  if (slow == (-1)) {
 19450                           ;stkvar	_slow @ sp[(-4)+-6]
 19451  015D74  0EF6               	movlw	-10
 19452  015D76  28E3               	incf	plusw1,w,c
 19453  015D78  A4D8               	btfss	status,2,c
 19454  015D7A  D012               	goto	l8774
 19455                           
 19456                           ;mbmc.c: 25:   smooth[bn] = 0.0;
 19457                           ;stkvar	_bn @ sp[(-4)+-5]
 19458  015D7C  0EF7               	movlw	-9
 19459  015D7E  50E3               	movf	plusw1,w,c
 19460  015D80  0D04               	mullw	4
 19461  015D82  0E00               	movlw	low lp_filter@smooth
 19462  015D84  24F3               	addwf	243,w,c
 19463  015D86  6ED9               	movwf	fsr2l,c
 19464  015D88  0E03               	movlw	high lp_filter@smooth
 19465  015D8A  20F4               	addwfc	prodh,w,c
 19466  015D8C  6EDA               	movwf	fsr2h,c
 19467  015D8E  0E00               	movlw	0
 19468  015D90  6EDE               	movwf	postinc2,c
 19469  015D92  0E00               	movlw	0
 19470  015D94  6EDE               	movwf	postinc2,c
 19471  015D96  0E00               	movlw	0
 19472  015D98  6EDE               	movwf	postinc2,c
 19473  015D9A  0E00               	movlw	0
 19474  015D9C  6EDD               	movwf	postdec2,c
 19475  015D9E  D7D9               	goto	u8250
 19476  015DA0                     l8774:
 19477                           
 19478                           ;mbmc.c: 29:  if (slow) {
 19479                           ;stkvar	_slow @ sp[(-4)+-6]
 19480  015DA0  0EF6               	movlw	-10
 19481  015DA2  50E3               	movf	plusw1,w,c
 19482  015DA4  B4D8               	btfsc	status,2,c
 19483  015DA6  D008               	goto	l8778
 19484                           
 19485                           ;mbmc.c: 30:   lp_speed = 0.033;
 19486  015DA8  0E02               	movlw	2
 19487  015DAA  6E3A               	movwf	(btemp+8)^0,c
 19488  015DAC  0E2B               	movlw	43
 19489  015DAE  6E3B               	movwf	(btemp+9)^0,c
 19490  015DB0  0E07               	movlw	7
 19491  015DB2  6E3C               	movwf	(btemp+10)^0,c
 19492  015DB4  0E3D               	movlw	61
 19493  015DB6  D007               	goto	L21
 19494  015DB8                     l8778:
 19495                           
 19496                           ;mbmc.c: 32:   lp_speed = 0.125;
 19497  015DB8  0E00               	movlw	0
 19498  015DBA  6E3A               	movwf	(btemp+8)^0,c
 19499  015DBC  0E00               	movlw	0
 19500  015DBE  6E3B               	movwf	(btemp+9)^0,c
 19501  015DC0  0E00               	movlw	0
 19502  015DC2  6E3C               	movwf	(btemp+10)^0,c
 19503  015DC4  0E3E               	movlw	62
 19504  015DC6                     L21:
 19505  015DC6  6E3D               	movwf	(btemp+11)^0,c
 19506                           
 19507                           ;stkvar	_lp_speed @ sp[(-4)+0]
 19508  015DC8  0EFC               	movlw	-4
 19509  015DCA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19510  015DD0  0EFD               	movlw	-3
 19511  015DD2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19512  015DD8  0EFE               	movlw	-2
 19513  015DDA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19514  015DE0  0EFF               	movlw	-1
 19515  015DE2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19516                           
 19517                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 19518                           ;stkvar	_bn @ sp[(-4)+-5]
 19519  015DE8  0EF7               	movlw	-9
 19520  015DEA  50E3               	movf	plusw1,w,c
 19521  015DEC  0D04               	mullw	4
 19522  015DEE  0E00               	movlw	low lp_filter@smooth
 19523  015DF0  24F3               	addwf	243,w,c
 19524  015DF2  6ED9               	movwf	fsr2l,c
 19525  015DF4  0E03               	movlw	high lp_filter@smooth
 19526  015DF6  20F4               	addwfc	prodh,w,c
 19527  015DF8  6EDA               	movwf	fsr2h,c
 19528  015DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 19529  015E00  006F FF7B FFE6     	movff	postinc2,postinc1
 19530  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 19531  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 19532                           
 19533                           ;stkvar	_lp_speed @ sp[(-8)+0]
 19534  015E12  0EF8               	movlw	-8
 19535  015E14  006F FF8F FFE6     	movff	plusw1,postinc1
 19536  015E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 19537  015E20  006F FF8F FFE6     	movff	plusw1,postinc1
 19538  015E26  006F FF8F FFE6     	movff	plusw1,postinc1
 19539                           
 19540                           ;stkvar	_bn @ sp[(-12)+-5]
 19541  015E2C  0EEF               	movlw	-17
 19542  015E2E  50E3               	movf	plusw1,w,c
 19543  015E30  0D04               	mullw	4
 19544  015E32  0E00               	movlw	low lp_filter@smooth
 19545  015E34  24F3               	addwf	243,w,c
 19546  015E36  6ED9               	movwf	fsr2l,c
 19547  015E38  0E03               	movlw	high lp_filter@smooth
 19548  015E3A  20F4               	addwfc	prodh,w,c
 19549  015E3C  6EDA               	movwf	fsr2h,c
 19550  015E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 19551  015E44  006F FF7B FFE6     	movff	postinc2,postinc1
 19552  015E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 19553  015E50  006F FF7B FFE6     	movff	postinc2,postinc1
 19554                           
 19555                           ;stkvar	_new @ sp[(-16)+-4]
 19556  015E56  0EEC               	movlw	-20
 19557  015E58  006F FF8F FFE6     	movff	plusw1,postinc1
 19558  015E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 19559  015E64  006F FF8F FFE6     	movff	plusw1,postinc1
 19560  015E6A  006F FF8F FFE6     	movff	plusw1,postinc1
 19561  015E70  EC4F  F0BF         	call	___flsub	;wreg free
 19562  015E74  0060  F0CB  FFE6   	movff	btemp,postinc1
 19563  015E7A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19564  015E80  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19565  015E86  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19566  015E8C  ECC1  F08E         	call	___flmul	;wreg free
 19567  015E90  0060  F0CB  FFE6   	movff	btemp,postinc1
 19568  015E96  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19569  015E9C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19570  015EA2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19571  015EA8  ECD6  F092         	call	___fladd	;wreg free
 19572                           
 19573                           ;stkvar	_bn @ sp[(-4)+-5]
 19574  015EAC  0EF7               	movlw	-9
 19575  015EAE  50E3               	movf	plusw1,w,c
 19576  015EB0  0D04               	mullw	4
 19577  015EB2  0E00               	movlw	low lp_filter@smooth
 19578  015EB4  24F3               	addwf	243,w,c
 19579  015EB6  6ED9               	movwf	fsr2l,c
 19580  015EB8  0E03               	movlw	high lp_filter@smooth
 19581  015EBA  20F4               	addwfc	prodh,w,c
 19582  015EBC  6EDA               	movwf	fsr2h,c
 19583  015EBE  0060  F0CB  FFDE   	movff	btemp,postinc2
 19584  015EC4  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 19585  015ECA  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 19586  015ED0  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 19587  015ED6  52DD               	movf	postdec2,f,c
 19588  015ED8  52DD               	movf	postdec2,f,c
 19589  015EDA  006F FF78  F032    	movff	postinc2,btemp
 19590  015EE0  006F FF78  F033    	movff	postinc2,btemp+1
 19591  015EE6  006F FF78  F034    	movff	postinc2,btemp+2
 19592  015EEC  006F FF78  F035    	movff	postinc2,btemp+3
 19593  015EF2                     l1701:
 19594                           
 19595                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 19596  015EF2  0EF6               	movlw	246
 19597  015EF4  26E1               	addwf	fsr1l,f,c
 19598  015EF6  0EFF               	movlw	255
 19599  015EF8  22E2               	addwfc	fsr1h,f,c
 19600  015EFA  0012               	return		;funcret
 19601  015EFC                     __end_of_lp_filter:
 19602                           	opt callstack 0
 19603                           
 19604 ;; *************** function ___flsub *****************
 19605 ;; Defined at:
 19606 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;  b               4  [STACK] float 
 19609 ;;  a               4  [STACK] float 
 19610 ;; Auto vars:     Size  Location     Type
 19611 ;;		None
 19612 ;; Return value:  Size  Location     Type
 19613 ;;                  4  [STACK] float 
 19614 ;; Registers used:
 19615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19616 ;; Tracked objects:
 19617 ;;		On entry : 0/39
 19618 ;;		On exit  : 0/0
 19619 ;;		Unchanged: 0/0
 19620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19625 ;;Total ram usage:        0 bytes
 19626 ;; Hardware stack levels used:    1
 19627 ;; Hardware stack levels required when called:    7
 19628 ;; This function calls:
 19629 ;;		___fladd
 19630 ;; This function is called by:
 19631 ;;		_conv_raw_result
 19632 ;;		_lp_filter
 19633 ;;		_calc_model_data
 19634 ;;		_efgtoa
 19635 ;; This function uses a reentrant model
 19636 ;;
 19637                           
 19638                           	psect	text87
 19639  017E9E                     __ptext87:
 19640                           	opt callstack 0
 19641  017E9E                     ___flsub:
 19642                           	opt callstack 16
 19643                           
 19644                           ;stkvar	_a @ sp[(0)+-8]
 19645                           
 19646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19647                           ;incstack = 0
 19648  017E9E  0EFB               	movlw	-5
 19649  017EA0  7EE3               	btg	plusw1,7,c
 19650                           
 19651                           ;stkvar	_a @ sp[(0)+-8]
 19652  017EA2  0EF8               	movlw	-8
 19653  017EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 19654  017EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 19655  017EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 19656  017EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 19657                           
 19658                           ;stkvar	_b @ sp[(-4)+-4]
 19659  017EBC  0EF8               	movlw	-8
 19660  017EBE  006F FF8F FFE6     	movff	plusw1,postinc1
 19661  017EC4  006F FF8F FFE6     	movff	plusw1,postinc1
 19662  017ECA  006F FF8F FFE6     	movff	plusw1,postinc1
 19663  017ED0  006F FF8F FFE6     	movff	plusw1,postinc1
 19664  017ED6  ECD6  F092         	call	___fladd	;wreg free
 19665                           
 19666                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19667  017EDA  0EF8               	movlw	248
 19668  017EDC  26E1               	addwf	fsr1l,f,c
 19669  017EDE  0EFF               	movlw	255
 19670  017EE0  22E2               	addwfc	fsr1h,f,c
 19671  017EE2  0012               	return		;funcret
 19672  017EE4                     __end_of___flsub:
 19673                           	opt callstack 0
 19674                           
 19675 ;; *************** function ___fladd *****************
 19676 ;; Defined at:
 19677 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 19678 ;; Parameters:    Size  Location     Type
 19679 ;;  b               4  [STACK] float 
 19680 ;;  a               4  [STACK] float 
 19681 ;; Auto vars:     Size  Location     Type
 19682 ;;  grs             1  [STACK] unsigned char 
 19683 ;;  bexp            1  [STACK] unsigned char 
 19684 ;;  aexp            1  [STACK] unsigned char 
 19685 ;;  signs           1  [STACK] unsigned char 
 19686 ;; Return value:  Size  Location     Type
 19687 ;;                  4  [STACK] unsigned char 
 19688 ;; Registers used:
 19689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19690 ;; Tracked objects:
 19691 ;;		On entry : 0/5
 19692 ;;		On exit  : 0/0
 19693 ;;		Unchanged: 0/0
 19694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19699 ;;Total ram usage:        0 bytes
 19700 ;; Hardware stack levels used:    1
 19701 ;; Hardware stack levels required when called:    6
 19702 ;; This function calls:
 19703 ;;		Nothing
 19704 ;; This function is called by:
 19705 ;;		_lp_filter
 19706 ;;		_calc_model_data
 19707 ;;		_efgtoa
 19708 ;;		___flsub
 19709 ;; This function uses a reentrant model
 19710 ;;
 19711                           
 19712                           	psect	text88
 19713  0125AC                     __ptext88:
 19714                           	opt callstack 0
 19715  0125AC                     ___fladd:
 19716                           	opt callstack 0
 19717                           
 19718                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19719  0125AC  52E6               	movf	postinc1,f,c
 19720  0125AE  52E6               	movf	postinc1,f,c
 19721  0125B0  52E6               	movf	postinc1,f,c
 19722  0125B2  52E6               	movf	postinc1,f,c
 19723                           
 19724                           ;stkvar	_b @ sp[(-4)+-4]
 19725                           
 19726                           ;incstack = 0
 19727  0125B4  0EFB               	movlw	251
 19728  0125B6  24E1               	addwf	fsr1l,w,c
 19729  0125B8  6ED9               	movwf	fsr2l,c
 19730  0125BA  0EFF               	movlw	255
 19731  0125BC  20E2               	addwfc	fsr1h,w,c
 19732  0125BE  6EDA               	movwf	fsr2h,c
 19733  0125C0  50DF               	movf	indf2,w,c
 19734  0125C2  6E3D               	movwf	(btemp+11)^0,c
 19735  0125C4  0E80               	movlw	128
 19736  0125C6  163D               	andwf	(btemp+11)^0,f,c
 19737                           
 19738                           ;stkvar	_signs @ sp[(-4)+3]
 19739  0125C8  0EFF               	movlw	-1
 19740  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19741                           
 19742                           ;stkvar	_b @ sp[(-4)+-4]
 19743  0125D0  0EFB               	movlw	251
 19744  0125D2  24E1               	addwf	fsr1l,w,c
 19745  0125D4  6ED9               	movwf	fsr2l,c
 19746  0125D6  0EFF               	movlw	255
 19747  0125D8  20E2               	addwfc	fsr1h,w,c
 19748  0125DA  6EDA               	movwf	fsr2h,c
 19749  0125DC  50DF               	movf	indf2,w,c
 19750  0125DE  6E3D               	movwf	(btemp+11)^0,c
 19751  0125E0  90D8               	bcf	status,0,c
 19752  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 19753  0125E4  6E3C               	movwf	(btemp+10)^0,c
 19754                           
 19755                           ;stkvar	_bexp @ sp[(-4)+1]
 19756  0125E6  0EFD               	movlw	-3
 19757  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19758                           
 19759                           ;stkvar	_b @ sp[(-4)+-4]
 19760  0125EE  0EFA               	movlw	250
 19761  0125F0  24E1               	addwf	fsr1l,w,c
 19762  0125F2  6ED9               	movwf	fsr2l,c
 19763  0125F4  0EFF               	movlw	255
 19764  0125F6  20E2               	addwfc	fsr1h,w,c
 19765  0125F8  6EDA               	movwf	fsr2h,c
 19766  0125FA  AEDF               	btfss	indf2,7,c
 19767  0125FC  D002               	goto	l6280
 19768                           
 19769                           ;stkvar	_bexp @ sp[(-4)+1]
 19770  0125FE  0EFD               	movlw	-3
 19771  012600  80E3               	bsf	plusw1,0,c
 19772  012602                     l6280:
 19773                           
 19774                           ;stkvar	_bexp @ sp[(-4)+1]
 19775  012602  0EFD               	movlw	-3
 19776  012604  50E3               	movf	plusw1,w,c
 19777  012606  B4D8               	btfsc	status,2,c
 19778  012608  D027               	goto	l6290
 19779                           
 19780                           ;stkvar	_bexp @ sp[(-4)+1]
 19781  01260A  0EFD               	movlw	-3
 19782  01260C  28E3               	incf	plusw1,w,c
 19783  01260E  A4D8               	btfss	status,2,c
 19784  012610  D018               	goto	l6286
 19785  012612  0E00               	movlw	0
 19786  012614  6E3A               	movwf	(btemp+8)^0,c
 19787  012616  0E00               	movlw	0
 19788  012618  6E3B               	movwf	(btemp+9)^0,c
 19789  01261A  0E00               	movlw	0
 19790  01261C  6E3C               	movwf	(btemp+10)^0,c
 19791  01261E  0E00               	movlw	0
 19792  012620  6E3D               	movwf	(btemp+11)^0,c
 19793                           
 19794                           ;stkvar	_b @ sp[(-4)+-4]
 19795  012622  0EF8               	movlw	-8
 19796  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19797  01262A  0EF9               	movlw	-7
 19798  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19799  012632  0EFA               	movlw	-6
 19800  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19801  01263A  0EFB               	movlw	-5
 19802  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19803  012642                     l6286:
 19804                           
 19805                           ;stkvar	_b @ sp[(-4)+-4]
 19806  012642  0EFA               	movlw	-6
 19807  012644  8EE3               	bsf	plusw1,7,c
 19808                           
 19809                           ;stkvar	_b @ sp[(-4)+-4]
 19810  012646  0EFB               	movlw	251
 19811  012648  24E1               	addwf	fsr1l,w,c
 19812  01264A  6ED9               	movwf	fsr2l,c
 19813  01264C  0EFF               	movlw	255
 19814  01264E  20E2               	addwfc	fsr1h,w,c
 19815  012650  6EDA               	movwf	fsr2h,c
 19816  012652  0E00               	movlw	0
 19817  012654  6EDF               	movwf	indf2,c
 19818  012656  D018               	goto	l6292
 19819  012658                     l6290:
 19820  012658  0E00               	movlw	0
 19821  01265A  6E3A               	movwf	(btemp+8)^0,c
 19822  01265C  0E00               	movlw	0
 19823  01265E  6E3B               	movwf	(btemp+9)^0,c
 19824  012660  0E00               	movlw	0
 19825  012662  6E3C               	movwf	(btemp+10)^0,c
 19826  012664  0E00               	movlw	0
 19827  012666  6E3D               	movwf	(btemp+11)^0,c
 19828                           
 19829                           ;stkvar	_b @ sp[(-4)+-4]
 19830  012668  0EF8               	movlw	-8
 19831  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19832  012670  0EF9               	movlw	-7
 19833  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19834  012678  0EFA               	movlw	-6
 19835  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19836  012680  0EFB               	movlw	-5
 19837  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19838  012688                     l6292:
 19839                           
 19840                           ;stkvar	_a @ sp[(-4)+-8]
 19841  012688  0EF7               	movlw	247
 19842  01268A  24E1               	addwf	fsr1l,w,c
 19843  01268C  6ED9               	movwf	fsr2l,c
 19844  01268E  0EFF               	movlw	255
 19845  012690  20E2               	addwfc	fsr1h,w,c
 19846  012692  6EDA               	movwf	fsr2h,c
 19847  012694  50DF               	movf	indf2,w,c
 19848  012696  6E3D               	movwf	(btemp+11)^0,c
 19849  012698  0E80               	movlw	128
 19850  01269A  163D               	andwf	(btemp+11)^0,f,c
 19851                           
 19852                           ;stkvar	_aexp @ sp[(-4)+2]
 19853  01269C  0EFE               	movlw	-2
 19854  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19855                           
 19856                           ;stkvar	_signs @ sp[(-4)+3]
 19857                           ;stkvar	_aexp @ sp[(-4)+2]
 19858  0126A4  50E1               	movf	fsr1l,w,c
 19859  0126A6  0FFE               	addlw	-2
 19860  0126A8  6ED9               	movwf	fsr2l,c
 19861  0126AA  50E2               	movf	fsr1h,w,c
 19862  0126AC  6EDA               	movwf	fsr2h,c
 19863  0126AE  0EFF               	movlw	255
 19864  0126B0  22DA               	addwfc	fsr2h,f,c
 19865  0126B2  0EFF               	movlw	-1
 19866  0126B4  50E3               	movf	plusw1,w,c
 19867  0126B6  18DE               	xorwf	postinc2,w,c
 19868  0126B8  B4D8               	btfsc	status,2,c
 19869  0126BA  D002               	goto	l6298
 19870                           
 19871                           ;stkvar	_signs @ sp[(-4)+3]
 19872  0126BC  0EFF               	movlw	-1
 19873  0126BE  8CE3               	bsf	plusw1,6,c
 19874  0126C0                     l6298:
 19875                           
 19876                           ;stkvar	_a @ sp[(-4)+-8]
 19877  0126C0  0EF7               	movlw	247
 19878  0126C2  24E1               	addwf	fsr1l,w,c
 19879  0126C4  6ED9               	movwf	fsr2l,c
 19880  0126C6  0EFF               	movlw	255
 19881  0126C8  20E2               	addwfc	fsr1h,w,c
 19882  0126CA  6EDA               	movwf	fsr2h,c
 19883  0126CC  50DF               	movf	indf2,w,c
 19884  0126CE  6E3D               	movwf	(btemp+11)^0,c
 19885  0126D0  90D8               	bcf	status,0,c
 19886  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 19887  0126D4  6E3C               	movwf	(btemp+10)^0,c
 19888                           
 19889                           ;stkvar	_aexp @ sp[(-4)+2]
 19890  0126D6  0EFE               	movlw	-2
 19891  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19892                           
 19893                           ;stkvar	_a @ sp[(-4)+-8]
 19894  0126DE  0EF6               	movlw	246
 19895  0126E0  24E1               	addwf	fsr1l,w,c
 19896  0126E2  6ED9               	movwf	fsr2l,c
 19897  0126E4  0EFF               	movlw	255
 19898  0126E6  20E2               	addwfc	fsr1h,w,c
 19899  0126E8  6EDA               	movwf	fsr2h,c
 19900  0126EA  AEDF               	btfss	indf2,7,c
 19901  0126EC  D002               	goto	l6304
 19902                           
 19903                           ;stkvar	_aexp @ sp[(-4)+2]
 19904  0126EE  0EFE               	movlw	-2
 19905  0126F0  80E3               	bsf	plusw1,0,c
 19906  0126F2                     l6304:
 19907                           
 19908                           ;stkvar	_aexp @ sp[(-4)+2]
 19909  0126F2  0EFE               	movlw	-2
 19910  0126F4  50E3               	movf	plusw1,w,c
 19911  0126F6  B4D8               	btfsc	status,2,c
 19912  0126F8  D027               	goto	l6314
 19913                           
 19914                           ;stkvar	_aexp @ sp[(-4)+2]
 19915  0126FA  0EFE               	movlw	-2
 19916  0126FC  28E3               	incf	plusw1,w,c
 19917  0126FE  A4D8               	btfss	status,2,c
 19918  012700  D018               	goto	l6310
 19919  012702  0E00               	movlw	0
 19920  012704  6E3A               	movwf	(btemp+8)^0,c
 19921  012706  0E00               	movlw	0
 19922  012708  6E3B               	movwf	(btemp+9)^0,c
 19923  01270A  0E00               	movlw	0
 19924  01270C  6E3C               	movwf	(btemp+10)^0,c
 19925  01270E  0E00               	movlw	0
 19926  012710  6E3D               	movwf	(btemp+11)^0,c
 19927                           
 19928                           ;stkvar	_a @ sp[(-4)+-8]
 19929  012712  0EF4               	movlw	-12
 19930  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19931  01271A  0EF5               	movlw	-11
 19932  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19933  012722  0EF6               	movlw	-10
 19934  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19935  01272A  0EF7               	movlw	-9
 19936  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19937  012732                     l6310:
 19938                           
 19939                           ;stkvar	_a @ sp[(-4)+-8]
 19940  012732  0EF6               	movlw	-10
 19941  012734  8EE3               	bsf	plusw1,7,c
 19942                           
 19943                           ;stkvar	_a @ sp[(-4)+-8]
 19944  012736  0EF7               	movlw	247
 19945  012738  24E1               	addwf	fsr1l,w,c
 19946  01273A  6ED9               	movwf	fsr2l,c
 19947  01273C  0EFF               	movlw	255
 19948  01273E  20E2               	addwfc	fsr1h,w,c
 19949  012740  6EDA               	movwf	fsr2h,c
 19950  012742  0E00               	movlw	0
 19951  012744  6EDF               	movwf	indf2,c
 19952  012746  D018               	goto	l6316
 19953  012748                     l6314:
 19954  012748  0E00               	movlw	0
 19955  01274A  6E3A               	movwf	(btemp+8)^0,c
 19956  01274C  0E00               	movlw	0
 19957  01274E  6E3B               	movwf	(btemp+9)^0,c
 19958  012750  0E00               	movlw	0
 19959  012752  6E3C               	movwf	(btemp+10)^0,c
 19960  012754  0E00               	movlw	0
 19961  012756  6E3D               	movwf	(btemp+11)^0,c
 19962                           
 19963                           ;stkvar	_a @ sp[(-4)+-8]
 19964  012758  0EF4               	movlw	-12
 19965  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19966  012760  0EF5               	movlw	-11
 19967  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19968  012768  0EF6               	movlw	-10
 19969  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19970  012770  0EF7               	movlw	-9
 19971  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19972  012778                     l6316:
 19973                           
 19974                           ;stkvar	_bexp @ sp[(-4)+1]
 19975                           ;stkvar	_aexp @ sp[(-4)+2]
 19976  012778  50E1               	movf	fsr1l,w,c
 19977  01277A  0FFE               	addlw	-2
 19978  01277C  6ED9               	movwf	fsr2l,c
 19979  01277E  50E2               	movf	fsr1h,w,c
 19980  012780  6EDA               	movwf	fsr2h,c
 19981  012782  0EFF               	movlw	255
 19982  012784  22DA               	addwfc	fsr2h,f,c
 19983  012786  0EFD               	movlw	-3
 19984  012788  50E3               	movf	plusw1,w,c
 19985  01278A  5CDE               	subwf	postinc2,w,c
 19986  01278C  B0D8               	btfsc	status,0,c
 19987  01278E  D0A4               	goto	l6352
 19988                           
 19989                           ;stkvar	_signs @ sp[(-4)+3]
 19990  012790  0EFF               	movlw	-1
 19991  012792  ACE3               	btfss	plusw1,6,c
 19992  012794  D002               	goto	l6322
 19993                           
 19994                           ;stkvar	_signs @ sp[(-4)+3]
 19995  012796  0EFF               	movlw	-1
 19996  012798  7EE3               	btg	plusw1,7,c
 19997  01279A                     l6322:
 19998                           
 19999                           ;stkvar	_bexp @ sp[(-4)+1]
 20000                           ;stkvar	_grs @ sp[(-4)+0]
 20001  01279A  0EFD               	movlw	-3
 20002  01279C  006F FF8C  F032    	movff	plusw1,btemp
 20003  0127A2  0EFC               	movlw	-4
 20004  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20005                           
 20006                           ;stkvar	_aexp @ sp[(-4)+2]
 20007                           ;stkvar	_bexp @ sp[(-4)+1]
 20008  0127AA  0EFE               	movlw	-2
 20009  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 20010  0127B2  0EFD               	movlw	-3
 20011  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20012                           
 20013                           ;stkvar	_grs @ sp[(-4)+0]
 20014                           ;stkvar	_aexp @ sp[(-4)+2]
 20015  0127BA  0EFC               	movlw	-4
 20016  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 20017  0127C2  0EFE               	movlw	-2
 20018  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20019                           
 20020                           ;stkvar	_b @ sp[(-4)+-4]
 20021                           ;stkvar	_grs @ sp[(-4)+0]
 20022  0127CA  0EF8               	movlw	-8
 20023  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 20024  0127D2  0EFC               	movlw	-4
 20025  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20026                           
 20027                           ;stkvar	_a @ sp[(-4)+-8]
 20028                           ;stkvar	_b @ sp[(-4)+-4]
 20029  0127DA  0EF4               	movlw	-12
 20030  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 20031  0127E2  0EF8               	movlw	-8
 20032  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20033                           
 20034                           ;stkvar	_grs @ sp[(-4)+0]
 20035                           ;stkvar	_a @ sp[(-4)+-8]
 20036  0127EA  0EFC               	movlw	-4
 20037  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 20038  0127F2  0EF4               	movlw	-12
 20039  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20040                           
 20041                           ;stkvar	_b @ sp[(-4)+-4]
 20042  0127FA  0EF9               	movlw	249
 20043  0127FC  24E1               	addwf	fsr1l,w,c
 20044  0127FE  6ED9               	movwf	fsr2l,c
 20045  012800  0EFF               	movlw	255
 20046  012802  20E2               	addwfc	fsr1h,w,c
 20047  012804  6EDA               	movwf	fsr2h,c
 20048  012806  50DF               	movf	indf2,w,c
 20049  012808  6E3D               	movwf	(btemp+11)^0,c
 20050                           
 20051                           ;stkvar	_grs @ sp[(-4)+0]
 20052  01280A  0EFC               	movlw	-4
 20053  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20054                           
 20055                           ;stkvar	_a @ sp[(-4)+-8]
 20056  012812  0EF5               	movlw	245
 20057  012814  24E1               	addwf	fsr1l,w,c
 20058  012816  6ED9               	movwf	fsr2l,c
 20059  012818  0EFF               	movlw	255
 20060  01281A  20E2               	addwfc	fsr1h,w,c
 20061  01281C  6EDA               	movwf	fsr2h,c
 20062                           
 20063                           ;stkvar	_b @ sp[(-4)+-4]
 20064  01281E  0EF9               	movlw	249
 20065  012820  24E1               	addwf	fsr1l,w,c
 20066  012822  6EE9               	movwf	fsr0l,c
 20067  012824  0EFF               	movlw	255
 20068  012826  20E2               	addwfc	fsr1h,w,c
 20069  012828  6EEA               	movwf	fsr0h,c
 20070  01282A  006F FF7F FFEF     	movff	indf2,indf0
 20071                           
 20072                           ;stkvar	_grs @ sp[(-4)+0]
 20073                           ;stkvar	_a @ sp[(-4)+-8]
 20074  012830  0EF5               	movlw	245
 20075  012832  24E1               	addwf	fsr1l,w,c
 20076  012834  6ED9               	movwf	fsr2l,c
 20077  012836  0EFF               	movlw	255
 20078  012838  20E2               	addwfc	fsr1h,w,c
 20079  01283A  6EDA               	movwf	fsr2h,c
 20080  01283C  0EFC               	movlw	-4
 20081  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 20082                           
 20083                           ;stkvar	_b @ sp[(-4)+-4]
 20084  012844  0EFA               	movlw	250
 20085  012846  24E1               	addwf	fsr1l,w,c
 20086  012848  6ED9               	movwf	fsr2l,c
 20087  01284A  0EFF               	movlw	255
 20088  01284C  20E2               	addwfc	fsr1h,w,c
 20089  01284E  6EDA               	movwf	fsr2h,c
 20090  012850  50DF               	movf	indf2,w,c
 20091  012852  6E3D               	movwf	(btemp+11)^0,c
 20092                           
 20093                           ;stkvar	_grs @ sp[(-4)+0]
 20094  012854  0EFC               	movlw	-4
 20095  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20096                           
 20097                           ;stkvar	_a @ sp[(-4)+-8]
 20098  01285C  0EF6               	movlw	246
 20099  01285E  24E1               	addwf	fsr1l,w,c
 20100  012860  6ED9               	movwf	fsr2l,c
 20101  012862  0EFF               	movlw	255
 20102  012864  20E2               	addwfc	fsr1h,w,c
 20103  012866  6EDA               	movwf	fsr2h,c
 20104                           
 20105                           ;stkvar	_b @ sp[(-4)+-4]
 20106  012868  0EFA               	movlw	250
 20107  01286A  24E1               	addwf	fsr1l,w,c
 20108  01286C  6EE9               	movwf	fsr0l,c
 20109  01286E  0EFF               	movlw	255
 20110  012870  20E2               	addwfc	fsr1h,w,c
 20111  012872  6EEA               	movwf	fsr0h,c
 20112  012874  006F FF7F FFEF     	movff	indf2,indf0
 20113                           
 20114                           ;stkvar	_grs @ sp[(-4)+0]
 20115                           ;stkvar	_a @ sp[(-4)+-8]
 20116  01287A  0EF6               	movlw	246
 20117  01287C  24E1               	addwf	fsr1l,w,c
 20118  01287E  6ED9               	movwf	fsr2l,c
 20119  012880  0EFF               	movlw	255
 20120  012882  20E2               	addwfc	fsr1h,w,c
 20121  012884  6EDA               	movwf	fsr2h,c
 20122  012886  0EFC               	movlw	-4
 20123  012888  006F FF8F FFDF     	movff	plusw1,indf2
 20124                           
 20125                           ;stkvar	_b @ sp[(-4)+-4]
 20126  01288E  0EFB               	movlw	251
 20127  012890  24E1               	addwf	fsr1l,w,c
 20128  012892  6ED9               	movwf	fsr2l,c
 20129  012894  0EFF               	movlw	255
 20130  012896  20E2               	addwfc	fsr1h,w,c
 20131  012898  6EDA               	movwf	fsr2h,c
 20132  01289A  50DF               	movf	indf2,w,c
 20133  01289C  6E3D               	movwf	(btemp+11)^0,c
 20134                           
 20135                           ;stkvar	_grs @ sp[(-4)+0]
 20136  01289E  0EFC               	movlw	-4
 20137  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20138                           
 20139                           ;stkvar	_a @ sp[(-4)+-8]
 20140  0128A6  0EF7               	movlw	247
 20141  0128A8  24E1               	addwf	fsr1l,w,c
 20142  0128AA  6ED9               	movwf	fsr2l,c
 20143  0128AC  0EFF               	movlw	255
 20144  0128AE  20E2               	addwfc	fsr1h,w,c
 20145  0128B0  6EDA               	movwf	fsr2h,c
 20146                           
 20147                           ;stkvar	_b @ sp[(-4)+-4]
 20148  0128B2  0EFB               	movlw	251
 20149  0128B4  24E1               	addwf	fsr1l,w,c
 20150  0128B6  6EE9               	movwf	fsr0l,c
 20151  0128B8  0EFF               	movlw	255
 20152  0128BA  20E2               	addwfc	fsr1h,w,c
 20153  0128BC  6EEA               	movwf	fsr0h,c
 20154  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 20155                           
 20156                           ;stkvar	_grs @ sp[(-4)+0]
 20157                           ;stkvar	_a @ sp[(-4)+-8]
 20158  0128C4  0EF7               	movlw	247
 20159  0128C6  24E1               	addwf	fsr1l,w,c
 20160  0128C8  6ED9               	movwf	fsr2l,c
 20161  0128CA  0EFF               	movlw	255
 20162  0128CC  20E2               	addwfc	fsr1h,w,c
 20163  0128CE  6EDA               	movwf	fsr2h,c
 20164  0128D0  0EFC               	movlw	-4
 20165  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 20166  0128D8                     l6352:
 20167                           
 20168                           ;stkvar	_grs @ sp[(-4)+0]
 20169  0128D8  0EFC               	movlw	-4
 20170  0128DA  6AE3               	clrf	plusw1,c
 20171                           
 20172                           ;stkvar	_aexp @ sp[(-4)+2]
 20173  0128DC  0EFE               	movlw	-2
 20174  0128DE  50E3               	movf	plusw1,w,c
 20175  0128E0  6E3C               	movwf	(btemp+10)^0,c
 20176  0128E2  6A3D               	clrf	(btemp+11)^0,c
 20177                           
 20178                           ;stkvar	_bexp @ sp[(-4)+1]
 20179  0128E4  0EFD               	movlw	-3
 20180  0128E6  50E3               	movf	plusw1,w,c
 20181  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 20182  0128EA  0E00               	movlw	0
 20183  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 20184  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 20185  0128F0  D062               	goto	l6376
 20186  0128F2  503D               	movf	(btemp+11)^0,w,c
 20187  0128F4  E104               	bnz	u4670
 20188  0128F6  0E1A               	movlw	26
 20189  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 20190  0128FA  A0D8               	btfss	status,0,c
 20191  0128FC  D05C               	goto	l6376
 20192  0128FE                     u4670:
 20193                           
 20194                           ;stkvar	_b @ sp[(-4)+-4]
 20195  0128FE  0EF8               	movlw	-8
 20196  012900  50E3               	movf	plusw1,w,c
 20197  012902  E10A               	bnz	u4681
 20198  012904  0EF9               	movlw	-7
 20199  012906  50E3               	movf	plusw1,w,c
 20200  012908  E107               	bnz	u4681
 20201  01290A  0EFA               	movlw	-6
 20202  01290C  50E3               	movf	plusw1,w,c
 20203  01290E  E104               	bnz	u4681
 20204  012910  0EFB               	movlw	-5
 20205  012912  50E3               	movf	plusw1,w,c
 20206  012914  B4D8               	btfsc	status,2,c
 20207  012916  D003               	goto	u4680
 20208  012918                     u4681:
 20209  012918  6A3D               	clrf	(btemp+11)^0,c
 20210  01291A  2A3D               	incf	(btemp+11)^0,f,c
 20211  01291C  D001               	goto	u4698
 20212  01291E                     u4680:
 20213  01291E  6A3D               	clrf	(btemp+11)^0,c
 20214  012920                     u4698:
 20215                           
 20216                           ;stkvar	_grs @ sp[(-4)+0]
 20217  012920  0EFC               	movlw	-4
 20218  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20219                           
 20220                           ;stkvar	_b @ sp[(-4)+-4]
 20221  012928  0EF8               	movlw	-8
 20222  01292A  6AE3               	clrf	plusw1,c
 20223  01292C  0EF9               	movlw	-7
 20224  01292E  6AE3               	clrf	plusw1,c
 20225  012930  0EFA               	movlw	-6
 20226  012932  6AE3               	clrf	plusw1,c
 20227  012934  0EFB               	movlw	-5
 20228  012936  6AE3               	clrf	plusw1,c
 20229                           
 20230                           ;stkvar	_aexp @ sp[(-4)+2]
 20231                           ;stkvar	_bexp @ sp[(-4)+1]
 20232  012938  0EFE               	movlw	-2
 20233  01293A  006F FF8C  F032    	movff	plusw1,btemp
 20234  012940  0EFD               	movlw	-3
 20235  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 20236  012948  D042               	goto	u4730
 20237  01294A                     l6362:
 20238                           
 20239                           ;stkvar	_grs @ sp[(-4)+0]
 20240  01294A  0EFC               	movlw	-4
 20241  01294C  A0E3               	btfss	plusw1,0,c
 20242  01294E  D00D               	goto	l6366
 20243                           
 20244                           ;stkvar	_grs @ sp[(-4)+0]
 20245  012950  0EFC               	movlw	-4
 20246  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 20247  012958  90D8               	bcf	status,0,c
 20248  01295A  323D               	rrcf	(btemp+11)^0,f,c
 20249  01295C  0E01               	movlw	1
 20250  01295E  123D               	iorwf	(btemp+11)^0,f,c
 20251                           
 20252                           ;stkvar	_grs @ sp[(-4)+0]
 20253  012960  0EFC               	movlw	-4
 20254  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20255  012968  D009               	goto	l6368
 20256  01296A                     l6366:
 20257                           
 20258                           ;stkvar	_grs @ sp[(-4)+0]
 20259  01296A  50E1               	movf	fsr1l,w,c
 20260  01296C  0FFC               	addlw	-4
 20261  01296E  6ED9               	movwf	fsr2l,c
 20262  012970  50E2               	movf	fsr1h,w,c
 20263  012972  6EDA               	movwf	fsr2h,c
 20264  012974  0EFF               	movlw	255
 20265  012976  22DA               	addwfc	fsr2h,f,c
 20266  012978  90D8               	bcf	status,0,c
 20267  01297A  32DF               	rrcf	indf2,f,c
 20268  01297C                     l6368:
 20269                           
 20270                           ;stkvar	_b @ sp[(-4)+-4]
 20271  01297C  0EF8               	movlw	-8
 20272  01297E  A0E3               	btfss	plusw1,0,c
 20273  012980  D002               	goto	l6372
 20274                           
 20275                           ;stkvar	_grs @ sp[(-4)+0]
 20276  012982  0EFC               	movlw	-4
 20277  012984  8EE3               	bsf	plusw1,7,c
 20278  012986                     l6372:
 20279  012986  0E01               	movlw	1
 20280  012988  6E3D               	movwf	(btemp+11)^0,c
 20281                           
 20282                           ;stkvar	_b @ sp[(-4)+-4]
 20283  01298A  50E1               	movf	fsr1l,w,c
 20284  01298C  0FF8               	addlw	-8
 20285  01298E  6ED9               	movwf	fsr2l,c
 20286  012990  50E2               	movf	fsr1h,w,c
 20287  012992  6EDA               	movwf	fsr2h,c
 20288  012994  0EFF               	movlw	255
 20289  012996  22DA               	addwfc	fsr2h,f,c
 20290  012998  283D               	incf	(btemp+11)^0,w,c
 20291  01299A  52DE               	movf	postinc2,f,c
 20292  01299C  D008               	goto	u4720
 20293  01299E                     u4725:
 20294  01299E  52DE               	movf	postinc2,f,c
 20295  0129A0  90D8               	bcf	status,0,c
 20296  0129A2  BEDC               	btfsc	preinc2,7,c
 20297  0129A4  80D8               	bsf	status,0,c
 20298  0129A6  32DD               	rrcf	postdec2,f,c
 20299  0129A8  32DD               	rrcf	postdec2,f,c
 20300  0129AA  32DD               	rrcf	postdec2,f,c
 20301  0129AC  32DE               	rrcf	postinc2,f,c
 20302  0129AE                     u4720:
 20303  0129AE  2EE8               	decfsz	wreg,f,c
 20304  0129B0  D7F6               	goto	u4725
 20305                           
 20306                           ;stkvar	_bexp @ sp[(-4)+1]
 20307  0129B2  0EFD               	movlw	-3
 20308  0129B4  2AE3               	incf	plusw1,f,c
 20309  0129B6                     l6376:
 20310                           
 20311                           ;stkvar	_aexp @ sp[(-4)+2]
 20312                           ;stkvar	_bexp @ sp[(-4)+1]
 20313  0129B6  50E1               	movf	fsr1l,w,c
 20314  0129B8  0FFD               	addlw	-3
 20315  0129BA  6ED9               	movwf	fsr2l,c
 20316  0129BC  50E2               	movf	fsr1h,w,c
 20317  0129BE  6EDA               	movwf	fsr2h,c
 20318  0129C0  0EFF               	movlw	255
 20319  0129C2  22DA               	addwfc	fsr2h,f,c
 20320  0129C4  0EFE               	movlw	-2
 20321  0129C6  50E3               	movf	plusw1,w,c
 20322  0129C8  5CDE               	subwf	postinc2,w,c
 20323  0129CA  A0D8               	btfss	status,0,c
 20324  0129CC  D7BE               	goto	l6362
 20325  0129CE                     u4730:
 20326                           
 20327                           ;stkvar	_signs @ sp[(-4)+3]
 20328  0129CE  0EFF               	movlw	-1
 20329  0129D0  BCE3               	btfsc	plusw1,6,c
 20330  0129D2  D066               	goto	l6404
 20331                           
 20332                           ;stkvar	_bexp @ sp[(-4)+1]
 20333  0129D4  0EFD               	movlw	-3
 20334  0129D6  50E3               	movf	plusw1,w,c
 20335  0129D8  B4D8               	btfsc	status,2,c
 20336  0129DA  D0F2               	goto	u4830
 20337                           
 20338                           ;stkvar	_a @ sp[(-4)+-8]
 20339                           ;stkvar	_b @ sp[(-4)+-4]
 20340  0129DC  0EF8               	movlw	-8
 20341  0129DE  50E3               	movf	plusw1,w,c
 20342  0129E0  6E32               	movwf	btemp^0,c
 20343  0129E2  0EF4               	movlw	-12
 20344  0129E4  50E3               	movf	plusw1,w,c
 20345  0129E6  2632               	addwf	btemp^0,f,c
 20346  0129E8  0EF8               	movlw	-8
 20347  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 20348  0129F0  0EF9               	movlw	-7
 20349  0129F2  50E3               	movf	plusw1,w,c
 20350  0129F4  6E32               	movwf	btemp^0,c
 20351  0129F6  0EF5               	movlw	-11
 20352  0129F8  50E3               	movf	plusw1,w,c
 20353  0129FA  2232               	addwfc	btemp^0,f,c
 20354  0129FC  0EF9               	movlw	-7
 20355  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 20356  012A04  0EFA               	movlw	-6
 20357  012A06  50E3               	movf	plusw1,w,c
 20358  012A08  6E32               	movwf	btemp^0,c
 20359  012A0A  0EF6               	movlw	-10
 20360  012A0C  50E3               	movf	plusw1,w,c
 20361  012A0E  2232               	addwfc	btemp^0,f,c
 20362  012A10  0EFA               	movlw	-6
 20363  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 20364  012A18  0EFB               	movlw	-5
 20365  012A1A  50E3               	movf	plusw1,w,c
 20366  012A1C  6E32               	movwf	btemp^0,c
 20367  012A1E  0EF7               	movlw	-9
 20368  012A20  50E3               	movf	plusw1,w,c
 20369  012A22  2232               	addwfc	btemp^0,f,c
 20370  012A24  0EFB               	movlw	-5
 20371  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 20372                           
 20373                           ;stkvar	_b @ sp[(-4)+-4]
 20374  012A2C  0EFB               	movlw	-5
 20375  012A2E  A0E3               	btfss	plusw1,0,c
 20376  012A30  D101               	goto	u4870
 20377                           
 20378                           ;stkvar	_grs @ sp[(-4)+0]
 20379  012A32  0EFC               	movlw	-4
 20380  012A34  A0E3               	btfss	plusw1,0,c
 20381  012A36  D00D               	goto	l6394
 20382                           
 20383                           ;stkvar	_grs @ sp[(-4)+0]
 20384  012A38  0EFC               	movlw	-4
 20385  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20386  012A40  90D8               	bcf	status,0,c
 20387  012A42  323D               	rrcf	(btemp+11)^0,f,c
 20388  012A44  0E01               	movlw	1
 20389  012A46  123D               	iorwf	(btemp+11)^0,f,c
 20390                           
 20391                           ;stkvar	_grs @ sp[(-4)+0]
 20392  012A48  0EFC               	movlw	-4
 20393  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20394  012A50  D009               	goto	l6396
 20395  012A52                     l6394:
 20396                           
 20397                           ;stkvar	_grs @ sp[(-4)+0]
 20398  012A52  50E1               	movf	fsr1l,w,c
 20399  012A54  0FFC               	addlw	-4
 20400  012A56  6ED9               	movwf	fsr2l,c
 20401  012A58  50E2               	movf	fsr1h,w,c
 20402  012A5A  6EDA               	movwf	fsr2h,c
 20403  012A5C  0EFF               	movlw	255
 20404  012A5E  22DA               	addwfc	fsr2h,f,c
 20405  012A60  90D8               	bcf	status,0,c
 20406  012A62  32DF               	rrcf	indf2,f,c
 20407  012A64                     l6396:
 20408                           
 20409                           ;stkvar	_b @ sp[(-4)+-4]
 20410  012A64  0EF8               	movlw	-8
 20411  012A66  A0E3               	btfss	plusw1,0,c
 20412  012A68  D002               	goto	l6400
 20413                           
 20414                           ;stkvar	_grs @ sp[(-4)+0]
 20415  012A6A  0EFC               	movlw	-4
 20416  012A6C  8EE3               	bsf	plusw1,7,c
 20417  012A6E                     l6400:
 20418  012A6E  0E01               	movlw	1
 20419  012A70  6E3D               	movwf	(btemp+11)^0,c
 20420                           
 20421                           ;stkvar	_b @ sp[(-4)+-4]
 20422  012A72  50E1               	movf	fsr1l,w,c
 20423  012A74  0FF8               	addlw	-8
 20424  012A76  6ED9               	movwf	fsr2l,c
 20425  012A78  50E2               	movf	fsr1h,w,c
 20426  012A7A  6EDA               	movwf	fsr2h,c
 20427  012A7C  0EFF               	movlw	255
 20428  012A7E  22DA               	addwfc	fsr2h,f,c
 20429  012A80  283D               	incf	(btemp+11)^0,w,c
 20430  012A82  52DE               	movf	postinc2,f,c
 20431  012A84  D008               	goto	u4790
 20432  012A86                     u4795:
 20433  012A86  52DE               	movf	postinc2,f,c
 20434  012A88  90D8               	bcf	status,0,c
 20435  012A8A  BEDC               	btfsc	preinc2,7,c
 20436  012A8C  80D8               	bsf	status,0,c
 20437  012A8E  32DD               	rrcf	postdec2,f,c
 20438  012A90  32DD               	rrcf	postdec2,f,c
 20439  012A92  32DD               	rrcf	postdec2,f,c
 20440  012A94  32DE               	rrcf	postinc2,f,c
 20441  012A96                     u4790:
 20442  012A96  2EE8               	decfsz	wreg,f,c
 20443  012A98  D7F6               	goto	u4795
 20444                           
 20445                           ;stkvar	_bexp @ sp[(-4)+1]
 20446  012A9A  0EFD               	movlw	-3
 20447  012A9C  2AE3               	incf	plusw1,f,c
 20448  012A9E  D0CA               	goto	u4870
 20449  012AA0                     l6404:
 20450                           
 20451                           ;stkvar	_a @ sp[(-4)+-8]
 20452                           ;stkvar	_b @ sp[(-4)+-4]
 20453  012AA0  50E1               	movf	fsr1l,w,c
 20454  012AA2  0FF8               	addlw	-8
 20455  012AA4  6ED9               	movwf	fsr2l,c
 20456  012AA6  50E2               	movf	fsr1h,w,c
 20457  012AA8  6EDA               	movwf	fsr2h,c
 20458  012AAA  0EFF               	movlw	255
 20459  012AAC  22DA               	addwfc	fsr2h,f,c
 20460  012AAE  0EF4               	movlw	-12
 20461  012AB0  50E3               	movf	plusw1,w,c
 20462  012AB2  5CDE               	subwf	postinc2,w,c
 20463  012AB4  0EF5               	movlw	-11
 20464  012AB6  50E3               	movf	plusw1,w,c
 20465  012AB8  58DE               	subwfb	postinc2,w,c
 20466  012ABA  0EF6               	movlw	-10
 20467  012ABC  50E3               	movf	plusw1,w,c
 20468  012ABE  58DE               	subwfb	postinc2,w,c
 20469  012AC0  50DE               	movf	postinc2,w,c
 20470  012AC2  0A80               	xorlw	128
 20471  012AC4  6E32               	movwf	btemp^0,c
 20472  012AC6  0EF7               	movlw	-9
 20473  012AC8  50E3               	movf	plusw1,w,c
 20474  012ACA  0A80               	xorlw	128
 20475  012ACC  5832               	subwfb	btemp^0,w,c
 20476  012ACE  B0D8               	btfsc	status,0,c
 20477  012AD0  D053               	goto	l6416
 20478                           
 20479                           ;stkvar	_b @ sp[(-4)+-4]
 20480                           ;stkvar	_a @ sp[(-4)+-8]
 20481  012AD2  0EF4               	movlw	-12
 20482  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 20483  012ADA  0EF5               	movlw	-11
 20484  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 20485  012AE2  0EF6               	movlw	-10
 20486  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20487  012AEA  0EF7               	movlw	-9
 20488  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20489  012AF2  0EF8               	movlw	-8
 20490  012AF4  50E3               	movf	plusw1,w,c
 20491  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 20492  012AF8  0EF9               	movlw	-7
 20493  012AFA  50E3               	movf	plusw1,w,c
 20494  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 20495  012AFE  0EFA               	movlw	-6
 20496  012B00  50E3               	movf	plusw1,w,c
 20497  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 20498  012B04  0EFB               	movlw	-5
 20499  012B06  50E3               	movf	plusw1,w,c
 20500  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 20501  012B0A  0EFF               	movlw	255
 20502  012B0C  243A               	addwf	(btemp+8)^0,w,c
 20503  012B0E  6E36               	movwf	(btemp+4)^0,c
 20504  012B10  0EFF               	movlw	255
 20505  012B12  203B               	addwfc	(btemp+9)^0,w,c
 20506  012B14  6E37               	movwf	(btemp+5)^0,c
 20507  012B16  0EFF               	movlw	255
 20508  012B18  203C               	addwfc	(btemp+10)^0,w,c
 20509  012B1A  6E38               	movwf	(btemp+6)^0,c
 20510  012B1C  0EFF               	movlw	255
 20511  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 20512  012B20  6E39               	movwf	(btemp+7)^0,c
 20513                           
 20514                           ;stkvar	_b @ sp[(-4)+-4]
 20515  012B22  0EF8               	movlw	-8
 20516  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 20517  012B2A  0EF9               	movlw	-7
 20518  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 20519  012B32  0EFA               	movlw	-6
 20520  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 20521  012B3A  0EFB               	movlw	-5
 20522  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 20523                           
 20524                           ;stkvar	_signs @ sp[(-4)+3]
 20525  012B42  0EFF               	movlw	-1
 20526  012B44  7EE3               	btg	plusw1,7,c
 20527                           
 20528                           ;stkvar	_grs @ sp[(-4)+0]
 20529  012B46  0EFC               	movlw	-4
 20530  012B48  50E3               	movf	plusw1,w,c
 20531  012B4A  0800               	sublw	0
 20532  012B4C  6E3D               	movwf	(btemp+11)^0,c
 20533                           
 20534                           ;stkvar	_grs @ sp[(-4)+0]
 20535  012B4E  0EFC               	movlw	-4
 20536  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20537                           
 20538                           ;stkvar	_grs @ sp[(-4)+0]
 20539  012B56  0EFC               	movlw	-4
 20540  012B58  50E3               	movf	plusw1,w,c
 20541  012B5A  A4D8               	btfss	status,2,c
 20542  012B5C  D020               	goto	l6418
 20543                           
 20544                           ;stkvar	_b @ sp[(-4)+-4]
 20545  012B5E  50E1               	movf	fsr1l,w,c
 20546  012B60  0FF8               	addlw	-8
 20547  012B62  6ED9               	movwf	fsr2l,c
 20548  012B64  50E2               	movf	fsr1h,w,c
 20549  012B66  6EDA               	movwf	fsr2h,c
 20550  012B68  0EFF               	movlw	255
 20551  012B6A  22DA               	addwfc	fsr2h,f,c
 20552  012B6C  2ADE               	incf	postinc2,f,c
 20553  012B6E  0E00               	movlw	0
 20554  012B70  22DE               	addwfc	postinc2,f,c
 20555  012B72  22DE               	addwfc	postinc2,f,c
 20556  012B74  22DE               	addwfc	postinc2,f,c
 20557  012B76  D013               	goto	l6418
 20558  012B78                     l6416:
 20559                           
 20560                           ;stkvar	_a @ sp[(-4)+-8]
 20561                           ;stkvar	_b @ sp[(-4)+-4]
 20562  012B78  50E1               	movf	fsr1l,w,c
 20563  012B7A  0FF8               	addlw	-8
 20564  012B7C  6ED9               	movwf	fsr2l,c
 20565  012B7E  50E2               	movf	fsr1h,w,c
 20566  012B80  6EDA               	movwf	fsr2h,c
 20567  012B82  0EFF               	movlw	255
 20568  012B84  22DA               	addwfc	fsr2h,f,c
 20569  012B86  0EF4               	movlw	-12
 20570  012B88  50E3               	movf	plusw1,w,c
 20571  012B8A  5EDE               	subwf	postinc2,f,c
 20572  012B8C  0EF5               	movlw	-11
 20573  012B8E  50E3               	movf	plusw1,w,c
 20574  012B90  5ADE               	subwfb	postinc2,f,c
 20575  012B92  0EF6               	movlw	-10
 20576  012B94  50E3               	movf	plusw1,w,c
 20577  012B96  5ADE               	subwfb	postinc2,f,c
 20578  012B98  0EF7               	movlw	-9
 20579  012B9A  50E3               	movf	plusw1,w,c
 20580  012B9C  5ADE               	subwfb	postinc2,f,c
 20581  012B9E                     l6418:
 20582                           
 20583                           ;stkvar	_b @ sp[(-4)+-4]
 20584  012B9E  0EF8               	movlw	-8
 20585  012BA0  50E3               	movf	plusw1,w,c
 20586  012BA2  E145               	bnz	l6440
 20587  012BA4  0EF9               	movlw	-7
 20588  012BA6  50E3               	movf	plusw1,w,c
 20589  012BA8  E142               	bnz	l6440
 20590  012BAA  0EFA               	movlw	-6
 20591  012BAC  50E3               	movf	plusw1,w,c
 20592  012BAE  E13F               	bnz	l6440
 20593  012BB0  0EFB               	movlw	-5
 20594  012BB2  50E3               	movf	plusw1,w,c
 20595  012BB4  A4D8               	btfss	status,2,c
 20596  012BB6  D03B               	goto	l6440
 20597                           
 20598                           ;stkvar	_grs @ sp[(-4)+0]
 20599  012BB8  0EFC               	movlw	-4
 20600  012BBA  50E3               	movf	plusw1,w,c
 20601  012BBC  A4D8               	btfss	status,2,c
 20602  012BBE  D037               	goto	l6440
 20603  012BC0                     u4830:
 20604  012BC0  0E00               	movlw	0
 20605  012BC2  6E32               	movwf	btemp^0,c
 20606  012BC4  0E00               	movlw	0
 20607  012BC6  6E33               	movwf	(btemp+1)^0,c
 20608  012BC8  0E00               	movlw	0
 20609  012BCA  6E34               	movwf	(btemp+2)^0,c
 20610  012BCC  0E00               	movlw	0
 20611  012BCE  6E35               	movwf	(btemp+3)^0,c
 20612  012BD0  D0C6               	goto	l2614
 20613  012BD2                     l6426:
 20614                           
 20615                           ;stkvar	_b @ sp[(-4)+-4]
 20616  012BD2  90D8               	bcf	status,0,c
 20617  012BD4  0EF8               	movlw	-8
 20618  012BD6  36E3               	rlcf	plusw1,f,c
 20619  012BD8  0EF9               	movlw	-7
 20620  012BDA  36E3               	rlcf	plusw1,f,c
 20621  012BDC  0EFA               	movlw	-6
 20622  012BDE  36E3               	rlcf	plusw1,f,c
 20623  012BE0  0EFB               	movlw	-5
 20624  012BE2  36E3               	rlcf	plusw1,f,c
 20625                           
 20626                           ;stkvar	_grs @ sp[(-4)+0]
 20627  012BE4  0EFC               	movlw	-4
 20628  012BE6  AEE3               	btfss	plusw1,7,c
 20629  012BE8  D002               	goto	l2626
 20630                           
 20631                           ;stkvar	_b @ sp[(-4)+-4]
 20632  012BEA  0EF8               	movlw	-8
 20633  012BEC  80E3               	bsf	plusw1,0,c
 20634  012BEE                     l2626:
 20635                           
 20636                           ;stkvar	_grs @ sp[(-4)+0]
 20637  012BEE  0EFC               	movlw	-4
 20638  012BF0  A0E3               	btfss	plusw1,0,c
 20639  012BF2  D00E               	goto	l6434
 20640                           
 20641                           ;stkvar	_grs @ sp[(-4)+0]
 20642  012BF4  0EFC               	movlw	-4
 20643  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 20644  012BFC  90D8               	bcf	status,0,c
 20645  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 20646  012C00  6E3C               	movwf	(btemp+10)^0,c
 20647  012C02  0E01               	movlw	1
 20648  012C04  123C               	iorwf	(btemp+10)^0,f,c
 20649                           
 20650                           ;stkvar	_grs @ sp[(-4)+0]
 20651  012C06  0EFC               	movlw	-4
 20652  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20653  012C0E  D009               	goto	l6436
 20654  012C10                     l6434:
 20655                           
 20656                           ;stkvar	_grs @ sp[(-4)+0]
 20657  012C10  50E1               	movf	fsr1l,w,c
 20658  012C12  0FFC               	addlw	-4
 20659  012C14  6ED9               	movwf	fsr2l,c
 20660  012C16  50E2               	movf	fsr1h,w,c
 20661  012C18  6EDA               	movwf	fsr2h,c
 20662  012C1A  0EFF               	movlw	255
 20663  012C1C  22DA               	addwfc	fsr2h,f,c
 20664  012C1E  90D8               	bcf	status,0,c
 20665  012C20  36DF               	rlcf	indf2,f,c
 20666  012C22                     l6436:
 20667                           
 20668                           ;stkvar	_bexp @ sp[(-4)+1]
 20669  012C22  0EFD               	movlw	-3
 20670  012C24  50E3               	movf	plusw1,w,c
 20671  012C26  B4D8               	btfsc	status,2,c
 20672  012C28  D002               	goto	l6440
 20673                           
 20674                           ;stkvar	_bexp @ sp[(-4)+1]
 20675  012C2A  0EFD               	movlw	-3
 20676  012C2C  06E3               	decf	plusw1,f,c
 20677  012C2E                     l6440:
 20678                           
 20679                           ;stkvar	_b @ sp[(-4)+-4]
 20680  012C2E  0EFA               	movlw	-6
 20681  012C30  AEE3               	btfss	plusw1,7,c
 20682  012C32  D7CF               	goto	l6426
 20683  012C34                     u4870:
 20684                           
 20685                           ;stkvar	_aexp @ sp[(-4)+2]
 20686  012C34  0EFE               	movlw	-2
 20687  012C36  6AE3               	clrf	plusw1,c
 20688                           
 20689                           ;stkvar	_grs @ sp[(-4)+0]
 20690  012C38  0EFC               	movlw	-4
 20691  012C3A  AEE3               	btfss	plusw1,7,c
 20692  012C3C  D00F               	goto	l6454
 20693                           
 20694                           ;stkvar	_grs @ sp[(-4)+0]
 20695  012C3E  0EFC               	movlw	-4
 20696  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20697  012C46  0E7F               	movlw	127
 20698  012C48  163D               	andwf	(btemp+11)^0,f,c
 20699  012C4A  B4D8               	btfsc	status,2,c
 20700  012C4C  D004               	goto	l6450
 20701  012C4E                     u4890:
 20702                           
 20703                           ;stkvar	_aexp @ sp[(-4)+2]
 20704  012C4E  0EFE               	movlw	-2
 20705  012C50  6AE3               	clrf	plusw1,c
 20706  012C52  2AE3               	incf	plusw1,f,c
 20707  012C54  D003               	goto	l6454
 20708  012C56                     l6450:
 20709                           
 20710                           ;stkvar	_b @ sp[(-4)+-4]
 20711  012C56  0EF8               	movlw	-8
 20712  012C58  B0E3               	btfsc	plusw1,0,c
 20713  012C5A  D7F9               	goto	u4890
 20714  012C5C                     l6454:
 20715                           
 20716                           ;stkvar	_aexp @ sp[(-4)+2]
 20717  012C5C  0EFE               	movlw	-2
 20718  012C5E  50E3               	movf	plusw1,w,c
 20719  012C60  B4D8               	btfsc	status,2,c
 20720  012C62  D02B               	goto	l6466
 20721                           
 20722                           ;stkvar	_b @ sp[(-4)+-4]
 20723  012C64  50E1               	movf	fsr1l,w,c
 20724  012C66  0FF8               	addlw	-8
 20725  012C68  6ED9               	movwf	fsr2l,c
 20726  012C6A  50E2               	movf	fsr1h,w,c
 20727  012C6C  6EDA               	movwf	fsr2h,c
 20728  012C6E  0EFF               	movlw	255
 20729  012C70  22DA               	addwfc	fsr2h,f,c
 20730  012C72  2ADE               	incf	postinc2,f,c
 20731  012C74  0E00               	movlw	0
 20732  012C76  22DE               	addwfc	postinc2,f,c
 20733  012C78  22DE               	addwfc	postinc2,f,c
 20734  012C7A  22DE               	addwfc	postinc2,f,c
 20735                           
 20736                           ;stkvar	_b @ sp[(-4)+-4]
 20737  012C7C  0EFB               	movlw	-5
 20738  012C7E  A0E3               	btfss	plusw1,0,c
 20739  012C80  D01C               	goto	l6466
 20740  012C82  0E01               	movlw	1
 20741  012C84  6E3D               	movwf	(btemp+11)^0,c
 20742                           
 20743                           ;stkvar	_b @ sp[(-4)+-4]
 20744  012C86  50E1               	movf	fsr1l,w,c
 20745  012C88  0FF8               	addlw	-8
 20746  012C8A  6ED9               	movwf	fsr2l,c
 20747  012C8C  50E2               	movf	fsr1h,w,c
 20748  012C8E  6EDA               	movwf	fsr2h,c
 20749  012C90  0EFF               	movlw	255
 20750  012C92  22DA               	addwfc	fsr2h,f,c
 20751  012C94  283D               	incf	(btemp+11)^0,w,c
 20752  012C96  52DE               	movf	postinc2,f,c
 20753  012C98  D008               	goto	u4930
 20754  012C9A                     u4935:
 20755  012C9A  52DE               	movf	postinc2,f,c
 20756  012C9C  90D8               	bcf	status,0,c
 20757  012C9E  BEDC               	btfsc	preinc2,7,c
 20758  012CA0  80D8               	bsf	status,0,c
 20759  012CA2  32DD               	rrcf	postdec2,f,c
 20760  012CA4  32DD               	rrcf	postdec2,f,c
 20761  012CA6  32DD               	rrcf	postdec2,f,c
 20762  012CA8  32DE               	rrcf	postinc2,f,c
 20763  012CAA                     u4930:
 20764  012CAA  2EE8               	decfsz	wreg,f,c
 20765  012CAC  D7F6               	goto	u4935
 20766                           
 20767                           ;stkvar	_bexp @ sp[(-4)+1]
 20768  012CAE  0EFD               	movlw	-3
 20769  012CB0  28E3               	incf	plusw1,w,c
 20770  012CB2  B4D8               	btfsc	status,2,c
 20771  012CB4  D002               	goto	l6466
 20772                           
 20773                           ;stkvar	_bexp @ sp[(-4)+1]
 20774  012CB6  0EFD               	movlw	-3
 20775  012CB8  2AE3               	incf	plusw1,f,c
 20776  012CBA                     l6466:
 20777                           
 20778                           ;stkvar	_bexp @ sp[(-4)+1]
 20779  012CBA  0EFD               	movlw	-3
 20780  012CBC  28E3               	incf	plusw1,w,c
 20781  012CBE  B4D8               	btfsc	status,2,c
 20782  012CC0  D004               	goto	u4960
 20783                           
 20784                           ;stkvar	_bexp @ sp[(-4)+1]
 20785  012CC2  0EFD               	movlw	-3
 20786  012CC4  50E3               	movf	plusw1,w,c
 20787  012CC6  A4D8               	btfss	status,2,c
 20788  012CC8  D00E               	goto	l6476
 20789  012CCA                     u4960:
 20790                           
 20791                           ;stkvar	_b @ sp[(-4)+-4]
 20792  012CCA  0EF8               	movlw	-8
 20793  012CCC  6AE3               	clrf	plusw1,c
 20794  012CCE  0EF9               	movlw	-7
 20795  012CD0  6AE3               	clrf	plusw1,c
 20796  012CD2  0EFA               	movlw	-6
 20797  012CD4  6AE3               	clrf	plusw1,c
 20798  012CD6  0EFB               	movlw	-5
 20799  012CD8  6AE3               	clrf	plusw1,c
 20800                           
 20801                           ;stkvar	_bexp @ sp[(-4)+1]
 20802  012CDA  0EFD               	movlw	-3
 20803  012CDC  50E3               	movf	plusw1,w,c
 20804  012CDE  A4D8               	btfss	status,2,c
 20805  012CE0  D002               	goto	l6476
 20806                           
 20807                           ;stkvar	_signs @ sp[(-4)+3]
 20808  012CE2  0EFF               	movlw	-1
 20809  012CE4  6AE3               	clrf	plusw1,c
 20810  012CE6                     l6476:
 20811                           
 20812                           ;stkvar	_bexp @ sp[(-4)+1]
 20813  012CE6  0EFD               	movlw	-3
 20814  012CE8  A0E3               	btfss	plusw1,0,c
 20815  012CEA  D009               	goto	l6480
 20816                           
 20817                           ;stkvar	_b @ sp[(-4)+-4]
 20818  012CEC  0EFA               	movlw	250
 20819  012CEE  24E1               	addwf	fsr1l,w,c
 20820  012CF0  6ED9               	movwf	fsr2l,c
 20821  012CF2  0EFF               	movlw	255
 20822  012CF4  20E2               	addwfc	fsr1h,w,c
 20823  012CF6  6EDA               	movwf	fsr2h,c
 20824  012CF8  0E00               	movlw	0
 20825  012CFA  8EDB               	bsf	plusw2,7,c
 20826  012CFC  D008               	goto	l6482
 20827  012CFE                     l6480:
 20828                           
 20829                           ;stkvar	_b @ sp[(-4)+-4]
 20830  012CFE  0EFA               	movlw	250
 20831  012D00  24E1               	addwf	fsr1l,w,c
 20832  012D02  6ED9               	movwf	fsr2l,c
 20833  012D04  0EFF               	movlw	255
 20834  012D06  20E2               	addwfc	fsr1h,w,c
 20835  012D08  6EDA               	movwf	fsr2h,c
 20836  012D0A  0E7F               	movlw	127
 20837  012D0C  16DF               	andwf	indf2,f,c
 20838  012D0E                     l6482:
 20839                           
 20840                           ;stkvar	_b @ sp[(-4)+-4]
 20841  012D0E  0EFB               	movlw	251
 20842  012D10  24E1               	addwf	fsr1l,w,c
 20843  012D12  6ED9               	movwf	fsr2l,c
 20844  012D14  0EFF               	movlw	255
 20845  012D16  20E2               	addwfc	fsr1h,w,c
 20846  012D18  6EDA               	movwf	fsr2h,c
 20847                           
 20848                           ;stkvar	_bexp @ sp[(-4)+1]
 20849  012D1A  0EFD               	movlw	-3
 20850  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 20851  012D22  90D8               	bcf	status,0,c
 20852  012D24  303D               	rrcf	(btemp+11)^0,w,c
 20853  012D26  6EDF               	movwf	indf2,c
 20854                           
 20855                           ;stkvar	_signs @ sp[(-4)+3]
 20856  012D28  0EFF               	movlw	-1
 20857  012D2A  AEE3               	btfss	plusw1,7,c
 20858  012D2C  D008               	goto	l6488
 20859                           
 20860                           ;stkvar	_b @ sp[(-4)+-4]
 20861  012D2E  0EFB               	movlw	251
 20862  012D30  24E1               	addwf	fsr1l,w,c
 20863  012D32  6ED9               	movwf	fsr2l,c
 20864  012D34  0EFF               	movlw	255
 20865  012D36  20E2               	addwfc	fsr1h,w,c
 20866  012D38  6EDA               	movwf	fsr2h,c
 20867  012D3A  0E00               	movlw	0
 20868  012D3C  8EDB               	bsf	plusw2,7,c
 20869  012D3E                     l6488:
 20870                           
 20871                           ;stkvar	_b @ sp[(-4)+-4]
 20872  012D3E  0EF8               	movlw	-8
 20873  012D40  006F FF8C  F032    	movff	plusw1,btemp
 20874  012D46  0EF9               	movlw	-7
 20875  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 20876  012D4E  0EFA               	movlw	-6
 20877  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 20878  012D56  0EFB               	movlw	-5
 20879  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 20880  012D5E                     l2614:
 20881                           
 20882                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20883  012D5E  0EF4               	movlw	244
 20884  012D60  26E1               	addwf	fsr1l,f,c
 20885  012D62  0EFF               	movlw	255
 20886  012D64  22E2               	addwfc	fsr1h,f,c
 20887  012D66  0012               	return		;funcret
 20888  012D68                     __end_of___fladd:
 20889                           	opt callstack 0
 20890                           
 20891 ;; *************** function ___flmul *****************
 20892 ;; Defined at:
 20893 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 20894 ;; Parameters:    Size  Location     Type
 20895 ;;  b               4  [STACK] unsigned char 
 20896 ;;  a               4  [STACK] unsigned char 
 20897 ;; Auto vars:     Size  Location     Type
 20898 ;;  prod            4  [STACK] struct .
 20899 ;;  grs             4  [STACK] unsigned long 
 20900 ;;  temp            2  [STACK] struct .
 20901 ;;  bexp            1  [STACK] unsigned char 
 20902 ;;  aexp            1  [STACK] unsigned char 
 20903 ;;  sign            1  [STACK] unsigned char 
 20904 ;; Return value:  Size  Location     Type
 20905 ;;                  4  [STACK] unsigned char 
 20906 ;; Registers used:
 20907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20908 ;; Tracked objects:
 20909 ;;		On entry : 0/39
 20910 ;;		On exit  : 0/0
 20911 ;;		Unchanged: 0/0
 20912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20917 ;;Total ram usage:        0 bytes
 20918 ;; Hardware stack levels used:    1
 20919 ;; Hardware stack levels required when called:    6
 20920 ;; This function calls:
 20921 ;;		Nothing
 20922 ;; This function is called by:
 20923 ;;		_conv_raw_result
 20924 ;;		_lp_filter
 20925 ;;		_calc_model_data
 20926 ;;		_efgtoa
 20927 ;; This function uses a reentrant model
 20928 ;;
 20929                           
 20930                           	psect	text89
 20931  011D82                     __ptext89:
 20932                           	opt callstack 0
 20933  011D82                     ___flmul:
 20934                           	opt callstack 0
 20935                           
 20936                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20937  011D82  0E0D               	movlw	13
 20938  011D84  26E1               	addwf	fsr1l,f,c
 20939  011D86  0E00               	movlw	0
 20940  011D88  22E2               	addwfc	fsr1h,f,c
 20941                           
 20942                           ;stkvar	_b @ sp[(-13)+-4]
 20943                           
 20944                           ;incstack = 0
 20945  011D8A  0EF2               	movlw	242
 20946  011D8C  24E1               	addwf	fsr1l,w,c
 20947  011D8E  6ED9               	movwf	fsr2l,c
 20948  011D90  0EFF               	movlw	255
 20949  011D92  20E2               	addwfc	fsr1h,w,c
 20950  011D94  6EDA               	movwf	fsr2h,c
 20951  011D96  50DF               	movf	indf2,w,c
 20952  011D98  6E3D               	movwf	(btemp+11)^0,c
 20953  011D9A  0E80               	movlw	128
 20954  011D9C  163D               	andwf	(btemp+11)^0,f,c
 20955                           
 20956                           ;stkvar	_sign @ sp[(-13)+12]
 20957  011D9E  0EFF               	movlw	-1
 20958  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20959                           
 20960                           ;stkvar	_b @ sp[(-13)+-4]
 20961  011DA6  0EF2               	movlw	242
 20962  011DA8  24E1               	addwf	fsr1l,w,c
 20963  011DAA  6ED9               	movwf	fsr2l,c
 20964  011DAC  0EFF               	movlw	255
 20965  011DAE  20E2               	addwfc	fsr1h,w,c
 20966  011DB0  6EDA               	movwf	fsr2h,c
 20967  011DB2  50DF               	movf	indf2,w,c
 20968  011DB4  6E3D               	movwf	(btemp+11)^0,c
 20969  011DB6  90D8               	bcf	status,0,c
 20970  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 20971  011DBA  6E3C               	movwf	(btemp+10)^0,c
 20972                           
 20973                           ;stkvar	_bexp @ sp[(-13)+10]
 20974  011DBC  0EFD               	movlw	-3
 20975  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20976                           
 20977                           ;stkvar	_b @ sp[(-13)+-4]
 20978  011DC4  0EF1               	movlw	241
 20979  011DC6  24E1               	addwf	fsr1l,w,c
 20980  011DC8  6ED9               	movwf	fsr2l,c
 20981  011DCA  0EFF               	movlw	255
 20982  011DCC  20E2               	addwfc	fsr1h,w,c
 20983  011DCE  6EDA               	movwf	fsr2h,c
 20984  011DD0  AEDF               	btfss	indf2,7,c
 20985  011DD2  D002               	goto	l6872
 20986                           
 20987                           ;stkvar	_bexp @ sp[(-13)+10]
 20988  011DD4  0EFD               	movlw	-3
 20989  011DD6  80E3               	bsf	plusw1,0,c
 20990  011DD8                     l6872:
 20991                           
 20992                           ;stkvar	_bexp @ sp[(-13)+10]
 20993  011DD8  0EFD               	movlw	-3
 20994  011DDA  50E3               	movf	plusw1,w,c
 20995  011DDC  B4D8               	btfsc	status,2,c
 20996  011DDE  D01F               	goto	l6880
 20997                           
 20998                           ;stkvar	_bexp @ sp[(-13)+10]
 20999  011DE0  0EFD               	movlw	-3
 21000  011DE2  28E3               	incf	plusw1,w,c
 21001  011DE4  A4D8               	btfss	status,2,c
 21002  011DE6  D018               	goto	l6878
 21003  011DE8  0E00               	movlw	0
 21004  011DEA  6E3A               	movwf	(btemp+8)^0,c
 21005  011DEC  0E00               	movlw	0
 21006  011DEE  6E3B               	movwf	(btemp+9)^0,c
 21007  011DF0  0E00               	movlw	0
 21008  011DF2  6E3C               	movwf	(btemp+10)^0,c
 21009  011DF4  0E00               	movlw	0
 21010  011DF6  6E3D               	movwf	(btemp+11)^0,c
 21011                           
 21012                           ;stkvar	_b @ sp[(-13)+-4]
 21013  011DF8  0EEF               	movlw	-17
 21014  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21015  011E00  0EF0               	movlw	-16
 21016  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21017  011E08  0EF1               	movlw	-15
 21018  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21019  011E10  0EF2               	movlw	-14
 21020  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21021  011E18                     l6878:
 21022                           
 21023                           ;stkvar	_b @ sp[(-13)+-4]
 21024  011E18  0EF1               	movlw	-15
 21025  011E1A  8EE3               	bsf	plusw1,7,c
 21026  011E1C  D018               	goto	l6882
 21027  011E1E                     l6880:
 21028  011E1E  0E00               	movlw	0
 21029  011E20  6E3A               	movwf	(btemp+8)^0,c
 21030  011E22  0E00               	movlw	0
 21031  011E24  6E3B               	movwf	(btemp+9)^0,c
 21032  011E26  0E00               	movlw	0
 21033  011E28  6E3C               	movwf	(btemp+10)^0,c
 21034  011E2A  0E00               	movlw	0
 21035  011E2C  6E3D               	movwf	(btemp+11)^0,c
 21036                           
 21037                           ;stkvar	_b @ sp[(-13)+-4]
 21038  011E2E  0EEF               	movlw	-17
 21039  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21040  011E36  0EF0               	movlw	-16
 21041  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21042  011E3E  0EF1               	movlw	-15
 21043  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21044  011E46  0EF2               	movlw	-14
 21045  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21046  011E4E                     l6882:
 21047                           
 21048                           ;stkvar	_a @ sp[(-13)+-8]
 21049  011E4E  0EEE               	movlw	238
 21050  011E50  24E1               	addwf	fsr1l,w,c
 21051  011E52  6ED9               	movwf	fsr2l,c
 21052  011E54  0EFF               	movlw	255
 21053  011E56  20E2               	addwfc	fsr1h,w,c
 21054  011E58  6EDA               	movwf	fsr2h,c
 21055  011E5A  50DF               	movf	indf2,w,c
 21056  011E5C  6E3D               	movwf	(btemp+11)^0,c
 21057  011E5E  0E80               	movlw	128
 21058  011E60  163D               	andwf	(btemp+11)^0,f,c
 21059                           
 21060                           ;stkvar	_sign @ sp[(-13)+12]
 21061  011E62  50E1               	movf	fsr1l,w,c
 21062  011E64  0FFF               	addlw	-1
 21063  011E66  6ED9               	movwf	fsr2l,c
 21064  011E68  50E2               	movf	fsr1h,w,c
 21065  011E6A  6EDA               	movwf	fsr2h,c
 21066  011E6C  0EFF               	movlw	255
 21067  011E6E  22DA               	addwfc	fsr2h,f,c
 21068  011E70  503D               	movf	(btemp+11)^0,w,c
 21069  011E72  1ADF               	xorwf	indf2,f,c
 21070                           
 21071                           ;stkvar	_a @ sp[(-13)+-8]
 21072  011E74  0EEE               	movlw	238
 21073  011E76  24E1               	addwf	fsr1l,w,c
 21074  011E78  6ED9               	movwf	fsr2l,c
 21075  011E7A  0EFF               	movlw	255
 21076  011E7C  20E2               	addwfc	fsr1h,w,c
 21077  011E7E  6EDA               	movwf	fsr2h,c
 21078  011E80  50DF               	movf	indf2,w,c
 21079  011E82  6E3D               	movwf	(btemp+11)^0,c
 21080  011E84  90D8               	bcf	status,0,c
 21081  011E86  343D               	rlcf	(btemp+11)^0,w,c
 21082  011E88  6E3C               	movwf	(btemp+10)^0,c
 21083                           
 21084                           ;stkvar	_aexp @ sp[(-13)+11]
 21085  011E8A  0EFE               	movlw	-2
 21086  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21087                           
 21088                           ;stkvar	_a @ sp[(-13)+-8]
 21089  011E92  0EED               	movlw	237
 21090  011E94  24E1               	addwf	fsr1l,w,c
 21091  011E96  6ED9               	movwf	fsr2l,c
 21092  011E98  0EFF               	movlw	255
 21093  011E9A  20E2               	addwfc	fsr1h,w,c
 21094  011E9C  6EDA               	movwf	fsr2h,c
 21095  011E9E  AEDF               	btfss	indf2,7,c
 21096  011EA0  D002               	goto	l6890
 21097                           
 21098                           ;stkvar	_aexp @ sp[(-13)+11]
 21099  011EA2  0EFE               	movlw	-2
 21100  011EA4  80E3               	bsf	plusw1,0,c
 21101  011EA6                     l6890:
 21102                           
 21103                           ;stkvar	_aexp @ sp[(-13)+11]
 21104  011EA6  0EFE               	movlw	-2
 21105  011EA8  50E3               	movf	plusw1,w,c
 21106  011EAA  B4D8               	btfsc	status,2,c
 21107  011EAC  D01F               	goto	l6898
 21108                           
 21109                           ;stkvar	_aexp @ sp[(-13)+11]
 21110  011EAE  0EFE               	movlw	-2
 21111  011EB0  28E3               	incf	plusw1,w,c
 21112  011EB2  A4D8               	btfss	status,2,c
 21113  011EB4  D018               	goto	l6896
 21114  011EB6  0E00               	movlw	0
 21115  011EB8  6E3A               	movwf	(btemp+8)^0,c
 21116  011EBA  0E00               	movlw	0
 21117  011EBC  6E3B               	movwf	(btemp+9)^0,c
 21118  011EBE  0E00               	movlw	0
 21119  011EC0  6E3C               	movwf	(btemp+10)^0,c
 21120  011EC2  0E00               	movlw	0
 21121  011EC4  6E3D               	movwf	(btemp+11)^0,c
 21122                           
 21123                           ;stkvar	_a @ sp[(-13)+-8]
 21124  011EC6  0EEB               	movlw	-21
 21125  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21126  011ECE  0EEC               	movlw	-20
 21127  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21128  011ED6  0EED               	movlw	-19
 21129  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21130  011EDE  0EEE               	movlw	-18
 21131  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21132  011EE6                     l6896:
 21133                           
 21134                           ;stkvar	_a @ sp[(-13)+-8]
 21135  011EE6  0EED               	movlw	-19
 21136  011EE8  8EE3               	bsf	plusw1,7,c
 21137  011EEA  D018               	goto	l6900
 21138  011EEC                     l6898:
 21139  011EEC  0E00               	movlw	0
 21140  011EEE  6E3A               	movwf	(btemp+8)^0,c
 21141  011EF0  0E00               	movlw	0
 21142  011EF2  6E3B               	movwf	(btemp+9)^0,c
 21143  011EF4  0E00               	movlw	0
 21144  011EF6  6E3C               	movwf	(btemp+10)^0,c
 21145  011EF8  0E00               	movlw	0
 21146  011EFA  6E3D               	movwf	(btemp+11)^0,c
 21147                           
 21148                           ;stkvar	_a @ sp[(-13)+-8]
 21149  011EFC  0EEB               	movlw	-21
 21150  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21151  011F04  0EEC               	movlw	-20
 21152  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21153  011F0C  0EED               	movlw	-19
 21154  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21155  011F14  0EEE               	movlw	-18
 21156  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21157  011F1C                     l6900:
 21158                           
 21159                           ;stkvar	_aexp @ sp[(-13)+11]
 21160  011F1C  0EFE               	movlw	-2
 21161  011F1E  50E3               	movf	plusw1,w,c
 21162  011F20  B4D8               	btfsc	status,2,c
 21163  011F22  D004               	goto	u5900
 21164                           
 21165                           ;stkvar	_bexp @ sp[(-13)+10]
 21166  011F24  0EFD               	movlw	-3
 21167  011F26  50E3               	movf	plusw1,w,c
 21168  011F28  A4D8               	btfss	status,2,c
 21169  011F2A  D009               	goto	l6908
 21170  011F2C                     u5900:
 21171  011F2C  0E00               	movlw	0
 21172  011F2E  6E32               	movwf	btemp^0,c
 21173  011F30  0E00               	movlw	0
 21174  011F32  6E33               	movwf	(btemp+1)^0,c
 21175  011F34  0E00               	movlw	0
 21176  011F36  6E34               	movwf	(btemp+2)^0,c
 21177  011F38  0E00               	movlw	0
 21178  011F3A  6E35               	movwf	(btemp+3)^0,c
 21179  011F3C  D332               	goto	l2695
 21180  011F3E                     l6908:
 21181                           
 21182                           ;stkvar	_b @ sp[(-13)+-4]
 21183  011F3E  0EEF               	movlw	-17
 21184  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 21185                           
 21186                           ;stkvar	_a @ sp[(-13)+-8]
 21187  011F46  0EED               	movlw	237
 21188  011F48  24E1               	addwf	fsr1l,w,c
 21189  011F4A  6ED9               	movwf	fsr2l,c
 21190  011F4C  0EFF               	movlw	255
 21191  011F4E  20E2               	addwfc	fsr1h,w,c
 21192  011F50  6EDA               	movwf	fsr2h,c
 21193  011F52  50DF               	movf	indf2,w,c
 21194  011F54  023D               	mulwf	(btemp+11)^0,c
 21195                           
 21196                           ;stkvar	_temp @ sp[(-13)+8]
 21197  011F56  0EFB               	movlw	-5
 21198  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 21199  011F5E  0EFC               	movlw	-4
 21200  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 21201                           
 21202                           ;stkvar	_temp @ sp[(-13)+8]
 21203  011F66  0EFB               	movlw	-5
 21204  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 21205  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21206  011F74  6A37               	clrf	(btemp+5)^0,c
 21207  011F76  6A38               	clrf	(btemp+6)^0,c
 21208  011F78  6A39               	clrf	(btemp+7)^0,c
 21209                           
 21210                           ;stkvar	_grs @ sp[(-13)+4]
 21211  011F7A  0EF7               	movlw	-9
 21212  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21213  011F82  0EF8               	movlw	-8
 21214  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21215  011F8A  0EF9               	movlw	-7
 21216  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21217  011F92  0EFA               	movlw	-6
 21218  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21219                           
 21220                           ;stkvar	_temp @ sp[(-13)+8]
 21221  011F9A  0EFC               	movlw	252
 21222  011F9C  24E1               	addwf	fsr1l,w,c
 21223  011F9E  6ED9               	movwf	fsr2l,c
 21224  011FA0  0EFF               	movlw	255
 21225  011FA2  20E2               	addwfc	fsr1h,w,c
 21226  011FA4  6EDA               	movwf	fsr2h,c
 21227  011FA6  50DF               	movf	indf2,w,c
 21228  011FA8  6E3D               	movwf	(btemp+11)^0,c
 21229  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21230  011FB0  6A37               	clrf	(btemp+5)^0,c
 21231  011FB2  6A38               	clrf	(btemp+6)^0,c
 21232  011FB4  6A39               	clrf	(btemp+7)^0,c
 21233                           
 21234                           ;stkvar	_prod @ sp[(-13)+0]
 21235  011FB6  0EF3               	movlw	-13
 21236  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21237  011FBE  0EF4               	movlw	-12
 21238  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21239  011FC6  0EF5               	movlw	-11
 21240  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21241  011FCE  0EF6               	movlw	-10
 21242  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21243                           
 21244                           ;stkvar	_b @ sp[(-13)+-4]
 21245  011FD6  0EF0               	movlw	240
 21246  011FD8  24E1               	addwf	fsr1l,w,c
 21247  011FDA  6ED9               	movwf	fsr2l,c
 21248  011FDC  0EFF               	movlw	255
 21249  011FDE  20E2               	addwfc	fsr1h,w,c
 21250  011FE0  6EDA               	movwf	fsr2h,c
 21251  011FE2  50DF               	movf	indf2,w,c
 21252  011FE4  6E3D               	movwf	(btemp+11)^0,c
 21253                           
 21254                           ;stkvar	_a @ sp[(-13)+-8]
 21255  011FE6  0EEC               	movlw	236
 21256  011FE8  24E1               	addwf	fsr1l,w,c
 21257  011FEA  6ED9               	movwf	fsr2l,c
 21258  011FEC  0EFF               	movlw	255
 21259  011FEE  20E2               	addwfc	fsr1h,w,c
 21260  011FF0  6EDA               	movwf	fsr2h,c
 21261  011FF2  50DF               	movf	indf2,w,c
 21262  011FF4  023D               	mulwf	(btemp+11)^0,c
 21263                           
 21264                           ;stkvar	_temp @ sp[(-13)+8]
 21265  011FF6  0EFB               	movlw	-5
 21266  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 21267  011FFE  0EFC               	movlw	-4
 21268  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 21269                           
 21270                           ;stkvar	_grs @ sp[(-13)+4]
 21271  012006  50E1               	movf	fsr1l,w,c
 21272  012008  0FF7               	addlw	-9
 21273  01200A  6ED9               	movwf	fsr2l,c
 21274  01200C  50E2               	movf	fsr1h,w,c
 21275  01200E  6EDA               	movwf	fsr2h,c
 21276  012010  0EFF               	movlw	255
 21277  012012  22DA               	addwfc	fsr2h,f,c
 21278                           
 21279                           ;stkvar	_temp @ sp[(-13)+8]
 21280  012014  0EFB               	movlw	-5
 21281  012016  50E3               	movf	plusw1,w,c
 21282  012018  26DE               	addwf	postinc2,f,c
 21283  01201A  0E00               	movlw	0
 21284  01201C  22DE               	addwfc	postinc2,f,c
 21285  01201E  22DE               	addwfc	postinc2,f,c
 21286  012020  22DE               	addwfc	postinc2,f,c
 21287                           
 21288                           ;stkvar	_prod @ sp[(-13)+0]
 21289  012022  50E1               	movf	fsr1l,w,c
 21290  012024  0FF3               	addlw	-13
 21291  012026  6ED9               	movwf	fsr2l,c
 21292  012028  50E2               	movf	fsr1h,w,c
 21293  01202A  6EDA               	movwf	fsr2h,c
 21294  01202C  0EFF               	movlw	255
 21295  01202E  22DA               	addwfc	fsr2h,f,c
 21296                           
 21297                           ;stkvar	_temp @ sp[(-13)+8]
 21298  012030  0EFC               	movlw	252
 21299  012032  24E1               	addwf	fsr1l,w,c
 21300  012034  6EE9               	movwf	fsr0l,c
 21301  012036  0EFF               	movlw	255
 21302  012038  20E2               	addwfc	fsr1h,w,c
 21303  01203A  6EEA               	movwf	fsr0h,c
 21304  01203C  50EF               	movf	indf0,w,c
 21305  01203E  26DE               	addwf	postinc2,f,c
 21306  012040  0E00               	movlw	0
 21307  012042  22DE               	addwfc	postinc2,f,c
 21308  012044  22DE               	addwfc	postinc2,f,c
 21309  012046  22DE               	addwfc	postinc2,f,c
 21310                           
 21311                           ;stkvar	_b @ sp[(-13)+-4]
 21312  012048  0EF1               	movlw	241
 21313  01204A  24E1               	addwf	fsr1l,w,c
 21314  01204C  6ED9               	movwf	fsr2l,c
 21315  01204E  0EFF               	movlw	255
 21316  012050  20E2               	addwfc	fsr1h,w,c
 21317  012052  6EDA               	movwf	fsr2h,c
 21318  012054  50DF               	movf	indf2,w,c
 21319  012056  6E3D               	movwf	(btemp+11)^0,c
 21320                           
 21321                           ;stkvar	_a @ sp[(-13)+-8]
 21322  012058  0EEB               	movlw	-21
 21323  01205A  50E3               	movf	plusw1,w,c
 21324  01205C  023D               	mulwf	(btemp+11)^0,c
 21325                           
 21326                           ;stkvar	_temp @ sp[(-13)+8]
 21327  01205E  0EFB               	movlw	-5
 21328  012060  006F FFCF FFE3     	movff	prodl,plusw1
 21329  012066  0EFC               	movlw	-4
 21330  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 21331                           
 21332                           ;stkvar	_grs @ sp[(-13)+4]
 21333  01206E  50E1               	movf	fsr1l,w,c
 21334  012070  0FF7               	addlw	-9
 21335  012072  6ED9               	movwf	fsr2l,c
 21336  012074  50E2               	movf	fsr1h,w,c
 21337  012076  6EDA               	movwf	fsr2h,c
 21338  012078  0EFF               	movlw	255
 21339  01207A  22DA               	addwfc	fsr2h,f,c
 21340                           
 21341                           ;stkvar	_temp @ sp[(-13)+8]
 21342  01207C  0EFB               	movlw	-5
 21343  01207E  50E3               	movf	plusw1,w,c
 21344  012080  26DE               	addwf	postinc2,f,c
 21345  012082  0E00               	movlw	0
 21346  012084  22DE               	addwfc	postinc2,f,c
 21347  012086  22DE               	addwfc	postinc2,f,c
 21348  012088  22DE               	addwfc	postinc2,f,c
 21349                           
 21350                           ;stkvar	_prod @ sp[(-13)+0]
 21351  01208A  50E1               	movf	fsr1l,w,c
 21352  01208C  0FF3               	addlw	-13
 21353  01208E  6ED9               	movwf	fsr2l,c
 21354  012090  50E2               	movf	fsr1h,w,c
 21355  012092  6EDA               	movwf	fsr2h,c
 21356  012094  0EFF               	movlw	255
 21357  012096  22DA               	addwfc	fsr2h,f,c
 21358                           
 21359                           ;stkvar	_temp @ sp[(-13)+8]
 21360  012098  0EFC               	movlw	252
 21361  01209A  24E1               	addwf	fsr1l,w,c
 21362  01209C  6EE9               	movwf	fsr0l,c
 21363  01209E  0EFF               	movlw	255
 21364  0120A0  20E2               	addwfc	fsr1h,w,c
 21365  0120A2  6EEA               	movwf	fsr0h,c
 21366  0120A4  50EF               	movf	indf0,w,c
 21367  0120A6  26DE               	addwf	postinc2,f,c
 21368  0120A8  0E00               	movlw	0
 21369  0120AA  22DE               	addwfc	postinc2,f,c
 21370  0120AC  22DE               	addwfc	postinc2,f,c
 21371  0120AE  22DE               	addwfc	postinc2,f,c
 21372                           
 21373                           ;stkvar	_grs @ sp[(-13)+4]
 21374  0120B0  50E1               	movf	fsr1l,w,c
 21375  0120B2  0FF7               	addlw	-9
 21376  0120B4  6ED9               	movwf	fsr2l,c
 21377  0120B6  50E2               	movf	fsr1h,w,c
 21378  0120B8  6EDA               	movwf	fsr2h,c
 21379  0120BA  0EFF               	movlw	255
 21380  0120BC  22DA               	addwfc	fsr2h,f,c
 21381  0120BE  0E08               	movlw	8
 21382  0120C0                     u5915:
 21383  0120C0  90D8               	bcf	status,0,c
 21384  0120C2  36DE               	rlcf	postinc2,f,c
 21385  0120C4  36DE               	rlcf	postinc2,f,c
 21386  0120C6  36DE               	rlcf	postinc2,f,c
 21387  0120C8  36DD               	rlcf	postdec2,f,c
 21388  0120CA  52DD               	movf	postdec2,f,c
 21389  0120CC  52DD               	movf	postdec2,f,c
 21390  0120CE  2EE8               	decfsz	wreg,f,c
 21391  0120D0  D7F7               	goto	u5915
 21392                           
 21393                           ;stkvar	_b @ sp[(-13)+-4]
 21394  0120D2  0EF0               	movlw	240
 21395  0120D4  24E1               	addwf	fsr1l,w,c
 21396  0120D6  6ED9               	movwf	fsr2l,c
 21397  0120D8  0EFF               	movlw	255
 21398  0120DA  20E2               	addwfc	fsr1h,w,c
 21399  0120DC  6EDA               	movwf	fsr2h,c
 21400  0120DE  50DF               	movf	indf2,w,c
 21401  0120E0  6E3D               	movwf	(btemp+11)^0,c
 21402                           
 21403                           ;stkvar	_a @ sp[(-13)+-8]
 21404  0120E2  0EEB               	movlw	-21
 21405  0120E4  50E3               	movf	plusw1,w,c
 21406  0120E6  023D               	mulwf	(btemp+11)^0,c
 21407                           
 21408                           ;stkvar	_temp @ sp[(-13)+8]
 21409  0120E8  0EFB               	movlw	-5
 21410  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 21411  0120F0  0EFC               	movlw	-4
 21412  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 21413                           
 21414                           ;stkvar	_temp @ sp[(-13)+8]
 21415  0120F8  0EFB               	movlw	-5
 21416  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21417  012100  0EFC               	movlw	-4
 21418  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 21419                           
 21420                           ;stkvar	_grs @ sp[(-13)+4]
 21421  012108  50E1               	movf	fsr1l,w,c
 21422  01210A  0FF7               	addlw	-9
 21423  01210C  6ED9               	movwf	fsr2l,c
 21424  01210E  50E2               	movf	fsr1h,w,c
 21425  012110  6EDA               	movwf	fsr2h,c
 21426  012112  0EFF               	movlw	255
 21427  012114  22DA               	addwfc	fsr2h,f,c
 21428  012116  503C               	movf	(btemp+10)^0,w,c
 21429  012118  26DE               	addwf	postinc2,f,c
 21430  01211A  503D               	movf	(btemp+11)^0,w,c
 21431  01211C  22DE               	addwfc	postinc2,f,c
 21432  01211E  0E00               	movlw	0
 21433  012120  22DE               	addwfc	postinc2,f,c
 21434  012122  22DE               	addwfc	postinc2,f,c
 21435                           
 21436                           ;stkvar	_b @ sp[(-13)+-4]
 21437  012124  0EEF               	movlw	-17
 21438  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 21439                           
 21440                           ;stkvar	_a @ sp[(-13)+-8]
 21441  01212C  0EEC               	movlw	236
 21442  01212E  24E1               	addwf	fsr1l,w,c
 21443  012130  6ED9               	movwf	fsr2l,c
 21444  012132  0EFF               	movlw	255
 21445  012134  20E2               	addwfc	fsr1h,w,c
 21446  012136  6EDA               	movwf	fsr2h,c
 21447  012138  50DF               	movf	indf2,w,c
 21448  01213A  023D               	mulwf	(btemp+11)^0,c
 21449                           
 21450                           ;stkvar	_temp @ sp[(-13)+8]
 21451  01213C  0EFB               	movlw	-5
 21452  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 21453  012144  0EFC               	movlw	-4
 21454  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 21455                           
 21456                           ;stkvar	_temp @ sp[(-13)+8]
 21457  01214C  0EFB               	movlw	-5
 21458  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 21459  012154  0EFC               	movlw	-4
 21460  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 21461                           
 21462                           ;stkvar	_grs @ sp[(-13)+4]
 21463  01215C  50E1               	movf	fsr1l,w,c
 21464  01215E  0FF7               	addlw	-9
 21465  012160  6ED9               	movwf	fsr2l,c
 21466  012162  50E2               	movf	fsr1h,w,c
 21467  012164  6EDA               	movwf	fsr2h,c
 21468  012166  0EFF               	movlw	255
 21469  012168  22DA               	addwfc	fsr2h,f,c
 21470  01216A  503C               	movf	(btemp+10)^0,w,c
 21471  01216C  26DE               	addwf	postinc2,f,c
 21472  01216E  503D               	movf	(btemp+11)^0,w,c
 21473  012170  22DE               	addwfc	postinc2,f,c
 21474  012172  0E00               	movlw	0
 21475  012174  22DE               	addwfc	postinc2,f,c
 21476  012176  22DE               	addwfc	postinc2,f,c
 21477                           
 21478                           ;stkvar	_grs @ sp[(-13)+4]
 21479  012178  50E1               	movf	fsr1l,w,c
 21480  01217A  0FF7               	addlw	-9
 21481  01217C  6ED9               	movwf	fsr2l,c
 21482  01217E  50E2               	movf	fsr1h,w,c
 21483  012180  6EDA               	movwf	fsr2h,c
 21484  012182  0EFF               	movlw	255
 21485  012184  22DA               	addwfc	fsr2h,f,c
 21486  012186  0E08               	movlw	8
 21487  012188                     u5925:
 21488  012188  90D8               	bcf	status,0,c
 21489  01218A  36DE               	rlcf	postinc2,f,c
 21490  01218C  36DE               	rlcf	postinc2,f,c
 21491  01218E  36DE               	rlcf	postinc2,f,c
 21492  012190  36DD               	rlcf	postdec2,f,c
 21493  012192  52DD               	movf	postdec2,f,c
 21494  012194  52DD               	movf	postdec2,f,c
 21495  012196  2EE8               	decfsz	wreg,f,c
 21496  012198  D7F7               	goto	u5925
 21497                           
 21498                           ;stkvar	_b @ sp[(-13)+-4]
 21499  01219A  0EEF               	movlw	-17
 21500  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21501                           
 21502                           ;stkvar	_a @ sp[(-13)+-8]
 21503  0121A2  0EEB               	movlw	-21
 21504  0121A4  50E3               	movf	plusw1,w,c
 21505  0121A6  023D               	mulwf	(btemp+11)^0,c
 21506                           
 21507                           ;stkvar	_temp @ sp[(-13)+8]
 21508  0121A8  0EFB               	movlw	-5
 21509  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 21510  0121B0  0EFC               	movlw	-4
 21511  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 21512                           
 21513                           ;stkvar	_temp @ sp[(-13)+8]
 21514  0121B8  0EFB               	movlw	-5
 21515  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21516  0121C0  0EFC               	movlw	-4
 21517  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 21518                           
 21519                           ;stkvar	_grs @ sp[(-13)+4]
 21520  0121C8  50E1               	movf	fsr1l,w,c
 21521  0121CA  0FF7               	addlw	-9
 21522  0121CC  6ED9               	movwf	fsr2l,c
 21523  0121CE  50E2               	movf	fsr1h,w,c
 21524  0121D0  6EDA               	movwf	fsr2h,c
 21525  0121D2  0EFF               	movlw	255
 21526  0121D4  22DA               	addwfc	fsr2h,f,c
 21527  0121D6  503C               	movf	(btemp+10)^0,w,c
 21528  0121D8  26DE               	addwf	postinc2,f,c
 21529  0121DA  503D               	movf	(btemp+11)^0,w,c
 21530  0121DC  22DE               	addwfc	postinc2,f,c
 21531  0121DE  0E00               	movlw	0
 21532  0121E0  22DE               	addwfc	postinc2,f,c
 21533  0121E2  22DE               	addwfc	postinc2,f,c
 21534                           
 21535                           ;stkvar	_b @ sp[(-13)+-4]
 21536  0121E4  0EF0               	movlw	240
 21537  0121E6  24E1               	addwf	fsr1l,w,c
 21538  0121E8  6ED9               	movwf	fsr2l,c
 21539  0121EA  0EFF               	movlw	255
 21540  0121EC  20E2               	addwfc	fsr1h,w,c
 21541  0121EE  6EDA               	movwf	fsr2h,c
 21542  0121F0  50DF               	movf	indf2,w,c
 21543  0121F2  6E3D               	movwf	(btemp+11)^0,c
 21544                           
 21545                           ;stkvar	_a @ sp[(-13)+-8]
 21546  0121F4  0EED               	movlw	237
 21547  0121F6  24E1               	addwf	fsr1l,w,c
 21548  0121F8  6ED9               	movwf	fsr2l,c
 21549  0121FA  0EFF               	movlw	255
 21550  0121FC  20E2               	addwfc	fsr1h,w,c
 21551  0121FE  6EDA               	movwf	fsr2h,c
 21552  012200  50DF               	movf	indf2,w,c
 21553  012202  023D               	mulwf	(btemp+11)^0,c
 21554                           
 21555                           ;stkvar	_temp @ sp[(-13)+8]
 21556  012204  0EFB               	movlw	-5
 21557  012206  006F FFCF FFE3     	movff	prodl,plusw1
 21558  01220C  0EFC               	movlw	-4
 21559  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 21560                           
 21561                           ;stkvar	_temp @ sp[(-13)+8]
 21562  012214  0EFB               	movlw	-5
 21563  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 21564  01221C  0EFC               	movlw	-4
 21565  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21566                           
 21567                           ;stkvar	_prod @ sp[(-13)+0]
 21568  012224  50E1               	movf	fsr1l,w,c
 21569  012226  0FF3               	addlw	-13
 21570  012228  6ED9               	movwf	fsr2l,c
 21571  01222A  50E2               	movf	fsr1h,w,c
 21572  01222C  6EDA               	movwf	fsr2h,c
 21573  01222E  0EFF               	movlw	255
 21574  012230  22DA               	addwfc	fsr2h,f,c
 21575  012232  503C               	movf	(btemp+10)^0,w,c
 21576  012234  26DE               	addwf	postinc2,f,c
 21577  012236  503D               	movf	(btemp+11)^0,w,c
 21578  012238  22DE               	addwfc	postinc2,f,c
 21579  01223A  0E00               	movlw	0
 21580  01223C  22DE               	addwfc	postinc2,f,c
 21581  01223E  22DE               	addwfc	postinc2,f,c
 21582                           
 21583                           ;stkvar	_b @ sp[(-13)+-4]
 21584  012240  0EF1               	movlw	241
 21585  012242  24E1               	addwf	fsr1l,w,c
 21586  012244  6ED9               	movwf	fsr2l,c
 21587  012246  0EFF               	movlw	255
 21588  012248  20E2               	addwfc	fsr1h,w,c
 21589  01224A  6EDA               	movwf	fsr2h,c
 21590  01224C  50DF               	movf	indf2,w,c
 21591  01224E  6E3D               	movwf	(btemp+11)^0,c
 21592                           
 21593                           ;stkvar	_a @ sp[(-13)+-8]
 21594  012250  0EEC               	movlw	236
 21595  012252  24E1               	addwf	fsr1l,w,c
 21596  012254  6ED9               	movwf	fsr2l,c
 21597  012256  0EFF               	movlw	255
 21598  012258  20E2               	addwfc	fsr1h,w,c
 21599  01225A  6EDA               	movwf	fsr2h,c
 21600  01225C  50DF               	movf	indf2,w,c
 21601  01225E  023D               	mulwf	(btemp+11)^0,c
 21602                           
 21603                           ;stkvar	_temp @ sp[(-13)+8]
 21604  012260  0EFB               	movlw	-5
 21605  012262  006F FFCF FFE3     	movff	prodl,plusw1
 21606  012268  0EFC               	movlw	-4
 21607  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 21608                           
 21609                           ;stkvar	_temp @ sp[(-13)+8]
 21610  012270  0EFB               	movlw	-5
 21611  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 21612  012278  0EFC               	movlw	-4
 21613  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 21614                           
 21615                           ;stkvar	_prod @ sp[(-13)+0]
 21616  012280  50E1               	movf	fsr1l,w,c
 21617  012282  0FF3               	addlw	-13
 21618  012284  6ED9               	movwf	fsr2l,c
 21619  012286  50E2               	movf	fsr1h,w,c
 21620  012288  6EDA               	movwf	fsr2h,c
 21621  01228A  0EFF               	movlw	255
 21622  01228C  22DA               	addwfc	fsr2h,f,c
 21623  01228E  503C               	movf	(btemp+10)^0,w,c
 21624  012290  26DE               	addwf	postinc2,f,c
 21625  012292  503D               	movf	(btemp+11)^0,w,c
 21626  012294  22DE               	addwfc	postinc2,f,c
 21627  012296  0E00               	movlw	0
 21628  012298  22DE               	addwfc	postinc2,f,c
 21629  01229A  22DE               	addwfc	postinc2,f,c
 21630                           
 21631                           ;stkvar	_b @ sp[(-13)+-4]
 21632  01229C  0EF1               	movlw	241
 21633  01229E  24E1               	addwf	fsr1l,w,c
 21634  0122A0  6ED9               	movwf	fsr2l,c
 21635  0122A2  0EFF               	movlw	255
 21636  0122A4  20E2               	addwfc	fsr1h,w,c
 21637  0122A6  6EDA               	movwf	fsr2h,c
 21638  0122A8  50DF               	movf	indf2,w,c
 21639  0122AA  6E3D               	movwf	(btemp+11)^0,c
 21640                           
 21641                           ;stkvar	_a @ sp[(-13)+-8]
 21642  0122AC  0EED               	movlw	237
 21643  0122AE  24E1               	addwf	fsr1l,w,c
 21644  0122B0  6ED9               	movwf	fsr2l,c
 21645  0122B2  0EFF               	movlw	255
 21646  0122B4  20E2               	addwfc	fsr1h,w,c
 21647  0122B6  6EDA               	movwf	fsr2h,c
 21648  0122B8  50DF               	movf	indf2,w,c
 21649  0122BA  023D               	mulwf	(btemp+11)^0,c
 21650                           
 21651                           ;stkvar	_temp @ sp[(-13)+8]
 21652  0122BC  0EFB               	movlw	-5
 21653  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 21654  0122C4  0EFC               	movlw	-4
 21655  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 21656                           
 21657                           ;stkvar	_temp @ sp[(-13)+8]
 21658  0122CC  0EFB               	movlw	-5
 21659  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 21660  0122D4  0EFC               	movlw	-4
 21661  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21662  0122DC  503C               	movf	(btemp+10)^0,w,c
 21663  0122DE  6E36               	movwf	(btemp+4)^0,c
 21664  0122E0  503D               	movf	(btemp+11)^0,w,c
 21665  0122E2  6E37               	movwf	(btemp+5)^0,c
 21666  0122E4  6A38               	clrf	(btemp+6)^0,c
 21667  0122E6  6A39               	clrf	(btemp+7)^0,c
 21668  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 21669  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 21670  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 21671  0122FA  6A36               	clrf	(btemp+4)^0,c
 21672                           
 21673                           ;stkvar	_prod @ sp[(-13)+0]
 21674  0122FC  50E1               	movf	fsr1l,w,c
 21675  0122FE  0FF3               	addlw	-13
 21676  012300  6ED9               	movwf	fsr2l,c
 21677  012302  50E2               	movf	fsr1h,w,c
 21678  012304  6EDA               	movwf	fsr2h,c
 21679  012306  0EFF               	movlw	255
 21680  012308  22DA               	addwfc	fsr2h,f,c
 21681  01230A  5036               	movf	(btemp+4)^0,w,c
 21682  01230C  26DE               	addwf	postinc2,f,c
 21683  01230E  5037               	movf	(btemp+5)^0,w,c
 21684  012310  22DE               	addwfc	postinc2,f,c
 21685  012312  5038               	movf	(btemp+6)^0,w,c
 21686  012314  22DE               	addwfc	postinc2,f,c
 21687  012316  5039               	movf	(btemp+7)^0,w,c
 21688  012318  22DE               	addwfc	postinc2,f,c
 21689                           
 21690                           ;stkvar	_prod @ sp[(-13)+0]
 21691  01231A  50E1               	movf	fsr1l,w,c
 21692  01231C  0FF3               	addlw	-13
 21693  01231E  6ED9               	movwf	fsr2l,c
 21694  012320  50E2               	movf	fsr1h,w,c
 21695  012322  6EDA               	movwf	fsr2h,c
 21696  012324  0EFF               	movlw	255
 21697  012326  22DA               	addwfc	fsr2h,f,c
 21698                           
 21699                           ;stkvar	_grs @ sp[(-13)+4]
 21700  012328  0EFA               	movlw	250
 21701  01232A  24E1               	addwf	fsr1l,w,c
 21702  01232C  6EE9               	movwf	fsr0l,c
 21703  01232E  0EFF               	movlw	255
 21704  012330  20E2               	addwfc	fsr1h,w,c
 21705  012332  6EEA               	movwf	fsr0h,c
 21706  012334  50EF               	movf	indf0,w,c
 21707  012336  26DE               	addwf	postinc2,f,c
 21708  012338  0E00               	movlw	0
 21709  01233A  22DE               	addwfc	postinc2,f,c
 21710  01233C  22DE               	addwfc	postinc2,f,c
 21711  01233E  22DE               	addwfc	postinc2,f,c
 21712                           
 21713                           ;stkvar	_grs @ sp[(-13)+4]
 21714  012340  50E1               	movf	fsr1l,w,c
 21715  012342  0FF7               	addlw	-9
 21716  012344  6ED9               	movwf	fsr2l,c
 21717  012346  50E2               	movf	fsr1h,w,c
 21718  012348  6EDA               	movwf	fsr2h,c
 21719  01234A  0EFF               	movlw	255
 21720  01234C  22DA               	addwfc	fsr2h,f,c
 21721  01234E  0E08               	movlw	8
 21722  012350                     u5935:
 21723  012350  90D8               	bcf	status,0,c
 21724  012352  36DE               	rlcf	postinc2,f,c
 21725  012354  36DE               	rlcf	postinc2,f,c
 21726  012356  36DE               	rlcf	postinc2,f,c
 21727  012358  36DD               	rlcf	postdec2,f,c
 21728  01235A  52DD               	movf	postdec2,f,c
 21729  01235C  52DD               	movf	postdec2,f,c
 21730  01235E  2EE8               	decfsz	wreg,f,c
 21731  012360  D7F7               	goto	u5935
 21732  012362  0E82               	movlw	130
 21733  012364  6E3C               	movwf	(btemp+10)^0,c
 21734  012366  0EFF               	movlw	255
 21735  012368  6E3D               	movwf	(btemp+11)^0,c
 21736                           
 21737                           ;stkvar	_bexp @ sp[(-13)+10]
 21738  01236A  0EFD               	movlw	-3
 21739  01236C  50E3               	movf	plusw1,w,c
 21740  01236E  6E3A               	movwf	(btemp+8)^0,c
 21741  012370  6A3B               	clrf	(btemp+9)^0,c
 21742                           
 21743                           ;stkvar	_aexp @ sp[(-13)+11]
 21744  012372  0EFE               	movlw	-2
 21745  012374  50E3               	movf	plusw1,w,c
 21746  012376  263A               	addwf	(btemp+8)^0,f,c
 21747  012378  0E00               	movlw	0
 21748  01237A  223B               	addwfc	(btemp+9)^0,f,c
 21749  01237C  503C               	movf	(btemp+10)^0,w,c
 21750  01237E  263A               	addwf	(btemp+8)^0,f,c
 21751  012380  503D               	movf	(btemp+11)^0,w,c
 21752  012382  223B               	addwfc	(btemp+9)^0,f,c
 21753                           
 21754                           ;stkvar	_temp @ sp[(-13)+8]
 21755  012384  0EFB               	movlw	-5
 21756  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21757  01238C  0EFC               	movlw	-4
 21758  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21759  012394  D021               	goto	l6970
 21760  012396                     l6960:
 21761                           
 21762                           ;stkvar	_prod @ sp[(-13)+0]
 21763  012396  90D8               	bcf	status,0,c
 21764  012398  0EF3               	movlw	-13
 21765  01239A  36E3               	rlcf	plusw1,f,c
 21766  01239C  0EF4               	movlw	-12
 21767  01239E  36E3               	rlcf	plusw1,f,c
 21768  0123A0  0EF5               	movlw	-11
 21769  0123A2  36E3               	rlcf	plusw1,f,c
 21770  0123A4  0EF6               	movlw	-10
 21771  0123A6  36E3               	rlcf	plusw1,f,c
 21772                           
 21773                           ;stkvar	_grs @ sp[(-13)+4]
 21774  0123A8  0EFA               	movlw	-6
 21775  0123AA  AEE3               	btfss	plusw1,7,c
 21776  0123AC  D002               	goto	l6966
 21777                           
 21778                           ;stkvar	_prod @ sp[(-13)+0]
 21779  0123AE  0EF3               	movlw	-13
 21780  0123B0  80E3               	bsf	plusw1,0,c
 21781  0123B2                     l6966:
 21782                           
 21783                           ;stkvar	_grs @ sp[(-13)+4]
 21784  0123B2  90D8               	bcf	status,0,c
 21785  0123B4  0EF7               	movlw	-9
 21786  0123B6  36E3               	rlcf	plusw1,f,c
 21787  0123B8  0EF8               	movlw	-8
 21788  0123BA  36E3               	rlcf	plusw1,f,c
 21789  0123BC  0EF9               	movlw	-7
 21790  0123BE  36E3               	rlcf	plusw1,f,c
 21791  0123C0  0EFA               	movlw	-6
 21792  0123C2  36E3               	rlcf	plusw1,f,c
 21793                           
 21794                           ;stkvar	_temp @ sp[(-13)+8]
 21795  0123C4  50E1               	movf	fsr1l,w,c
 21796  0123C6  0FFB               	addlw	-5
 21797  0123C8  6ED9               	movwf	fsr2l,c
 21798  0123CA  50E2               	movf	fsr1h,w,c
 21799  0123CC  6EDA               	movwf	fsr2h,c
 21800  0123CE  0EFF               	movlw	255
 21801  0123D0  22DA               	addwfc	fsr2h,f,c
 21802  0123D2  06DE               	decf	postinc2,f,c
 21803  0123D4  0E00               	movlw	0
 21804  0123D6  5ADD               	subwfb	postdec2,f,c
 21805  0123D8                     l6970:
 21806                           
 21807                           ;stkvar	_prod @ sp[(-13)+0]
 21808  0123D8  0EF5               	movlw	-11
 21809  0123DA  AEE3               	btfss	plusw1,7,c
 21810  0123DC  D7DC               	goto	l6960
 21811                           
 21812                           ;stkvar	_aexp @ sp[(-13)+11]
 21813  0123DE  0EFE               	movlw	-2
 21814  0123E0  6AE3               	clrf	plusw1,c
 21815                           
 21816                           ;stkvar	_grs @ sp[(-13)+4]
 21817  0123E2  0EFA               	movlw	-6
 21818  0123E4  AEE3               	btfss	plusw1,7,c
 21819  0123E6  D020               	goto	l6984
 21820                           
 21821                           ;stkvar	_grs @ sp[(-13)+4]
 21822  0123E8  50E1               	movf	fsr1l,w,c
 21823  0123EA  0FF7               	addlw	-9
 21824  0123EC  6ED9               	movwf	fsr2l,c
 21825  0123EE  50E2               	movf	fsr1h,w,c
 21826  0123F0  6EDA               	movwf	fsr2h,c
 21827  0123F2  0EFF               	movlw	255
 21828  0123F4  22DA               	addwfc	fsr2h,f,c
 21829  0123F6  0EFF               	movlw	255
 21830  0123F8  14DE               	andwf	postinc2,w,c
 21831  0123FA  6E3A               	movwf	(btemp+8)^0,c
 21832  0123FC  0EFF               	movlw	255
 21833  0123FE  14DE               	andwf	postinc2,w,c
 21834  012400  6E3B               	movwf	(btemp+9)^0,c
 21835  012402  0EFF               	movlw	255
 21836  012404  14DE               	andwf	postinc2,w,c
 21837  012406  6E3C               	movwf	(btemp+10)^0,c
 21838  012408  0E7F               	movlw	127
 21839  01240A  14DE               	andwf	postinc2,w,c
 21840  01240C  6E3D               	movwf	(btemp+11)^0,c
 21841  01240E  503A               	movf	(btemp+8)^0,w,c
 21842  012410  103B               	iorwf	(btemp+9)^0,w,c
 21843  012412  103C               	iorwf	(btemp+10)^0,w,c
 21844  012414  103D               	iorwf	(btemp+11)^0,w,c
 21845  012416  B4D8               	btfsc	status,2,c
 21846  012418  D004               	goto	l6980
 21847  01241A                     u5970:
 21848                           
 21849                           ;stkvar	_aexp @ sp[(-13)+11]
 21850  01241A  0EFE               	movlw	-2
 21851  01241C  6AE3               	clrf	plusw1,c
 21852  01241E  2AE3               	incf	plusw1,f,c
 21853  012420  D003               	goto	l6984
 21854  012422                     l6980:
 21855                           
 21856                           ;stkvar	_prod @ sp[(-13)+0]
 21857  012422  0EF3               	movlw	-13
 21858  012424  B0E3               	btfsc	plusw1,0,c
 21859  012426  D7F9               	goto	u5970
 21860  012428                     l6984:
 21861                           
 21862                           ;stkvar	_aexp @ sp[(-13)+11]
 21863  012428  0EFE               	movlw	-2
 21864  01242A  50E3               	movf	plusw1,w,c
 21865  01242C  B4D8               	btfsc	status,2,c
 21866  01242E  D036               	goto	l6994
 21867                           
 21868                           ;stkvar	_prod @ sp[(-13)+0]
 21869  012430  50E1               	movf	fsr1l,w,c
 21870  012432  0FF3               	addlw	-13
 21871  012434  6ED9               	movwf	fsr2l,c
 21872  012436  50E2               	movf	fsr1h,w,c
 21873  012438  6EDA               	movwf	fsr2h,c
 21874  01243A  0EFF               	movlw	255
 21875  01243C  22DA               	addwfc	fsr2h,f,c
 21876  01243E  2ADE               	incf	postinc2,f,c
 21877  012440  0E00               	movlw	0
 21878  012442  22DE               	addwfc	postinc2,f,c
 21879  012444  22DE               	addwfc	postinc2,f,c
 21880  012446  22DE               	addwfc	postinc2,f,c
 21881                           
 21882                           ;stkvar	_prod @ sp[(-13)+0]
 21883  012448  0EF6               	movlw	-10
 21884  01244A  A0E3               	btfss	plusw1,0,c
 21885  01244C  D027               	goto	l6994
 21886  01244E  0E01               	movlw	1
 21887  012450  6E3D               	movwf	(btemp+11)^0,c
 21888                           
 21889                           ;stkvar	_prod @ sp[(-13)+0]
 21890  012452  50E1               	movf	fsr1l,w,c
 21891  012454  0FF3               	addlw	-13
 21892  012456  6ED9               	movwf	fsr2l,c
 21893  012458  50E2               	movf	fsr1h,w,c
 21894  01245A  6EDA               	movwf	fsr2h,c
 21895  01245C  0EFF               	movlw	255
 21896  01245E  22DA               	addwfc	fsr2h,f,c
 21897  012460  283D               	incf	(btemp+11)^0,w,c
 21898  012462  52DE               	movf	postinc2,f,c
 21899  012464  D008               	goto	u6010
 21900  012466                     u6015:
 21901  012466  52DE               	movf	postinc2,f,c
 21902  012468  90D8               	bcf	status,0,c
 21903  01246A  BEDC               	btfsc	preinc2,7,c
 21904  01246C  80D8               	bsf	status,0,c
 21905  01246E  32DD               	rrcf	postdec2,f,c
 21906  012470  32DD               	rrcf	postdec2,f,c
 21907  012472  32DD               	rrcf	postdec2,f,c
 21908  012474  32DE               	rrcf	postinc2,f,c
 21909  012476                     u6010:
 21910  012476  2EE8               	decfsz	wreg,f,c
 21911  012478  D7F6               	goto	u6015
 21912                           
 21913                           ;stkvar	_temp @ sp[(-13)+8]
 21914  01247A  0EFB               	movlw	-5
 21915  01247C  50E3               	movf	plusw1,w,c
 21916  01247E  0F01               	addlw	1
 21917  012480  6E32               	movwf	btemp^0,c
 21918  012482  0EFB               	movlw	-5
 21919  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 21920  01248A  6A32               	clrf	btemp^0,c
 21921  01248C  0EFC               	movlw	-4
 21922  01248E  50E3               	movf	plusw1,w,c
 21923  012490  2032               	addwfc	btemp^0,w,c
 21924  012492  6E32               	movwf	btemp^0,c
 21925  012494  0EFC               	movlw	-4
 21926  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 21927  01249C                     l6994:
 21928                           
 21929                           ;stkvar	_temp @ sp[(-13)+8]
 21930  01249C  0EFC               	movlw	-4
 21931  01249E  BEE3               	btfsc	plusw1,7,c
 21932  0124A0  D020               	goto	l6998
 21933  0124A2  0EFC               	movlw	-4
 21934  0124A4  50E3               	movf	plusw1,w,c
 21935  0124A6  E104               	bnz	u6020
 21936  0124A8  0EFB               	movlw	-5
 21937  0124AA  28E3               	incf	plusw1,w,c
 21938  0124AC  A0D8               	btfss	status,0,c
 21939  0124AE  D019               	goto	l6998
 21940  0124B0                     u6020:
 21941  0124B0  0E00               	movlw	0
 21942  0124B2  6E3A               	movwf	(btemp+8)^0,c
 21943  0124B4  0E00               	movlw	0
 21944  0124B6  6E3B               	movwf	(btemp+9)^0,c
 21945  0124B8  0E80               	movlw	128
 21946  0124BA  6E3C               	movwf	(btemp+10)^0,c
 21947  0124BC  0E7F               	movlw	127
 21948  0124BE  6E3D               	movwf	(btemp+11)^0,c
 21949                           
 21950                           ;stkvar	_prod @ sp[(-13)+0]
 21951  0124C0  0EF3               	movlw	-13
 21952  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21953  0124C8  0EF4               	movlw	-12
 21954  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21955  0124D0  0EF5               	movlw	-11
 21956  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21957  0124D8  0EF6               	movlw	-10
 21958  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21959  0124E0  D044               	goto	l7014
 21960  0124E2                     l6998:
 21961                           
 21962                           ;stkvar	_temp @ sp[(-13)+8]
 21963  0124E2  0EFC               	movlw	-4
 21964  0124E4  BEE3               	btfsc	plusw1,7,c
 21965  0124E6  D007               	goto	u6030
 21966  0124E8  0EFC               	movlw	-4
 21967  0124EA  50E3               	movf	plusw1,w,c
 21968  0124EC  E10F               	bnz	l7004
 21969  0124EE  0EFB               	movlw	-5
 21970  0124F0  04E3               	decf	plusw1,w,c
 21971  0124F2  B0D8               	btfsc	status,0,c
 21972  0124F4  D00B               	goto	l7004
 21973  0124F6                     u6030:
 21974                           
 21975                           ;stkvar	_prod @ sp[(-13)+0]
 21976  0124F6  0EF3               	movlw	-13
 21977  0124F8  6AE3               	clrf	plusw1,c
 21978  0124FA  0EF4               	movlw	-12
 21979  0124FC  6AE3               	clrf	plusw1,c
 21980  0124FE  0EF5               	movlw	-11
 21981  012500  6AE3               	clrf	plusw1,c
 21982  012502  0EF6               	movlw	-10
 21983  012504  6AE3               	clrf	plusw1,c
 21984                           
 21985                           ;stkvar	_sign @ sp[(-13)+12]
 21986  012506  0EFF               	movlw	-1
 21987  012508  6AE3               	clrf	plusw1,c
 21988  01250A  D02F               	goto	l7014
 21989  01250C                     l7004:
 21990                           
 21991                           ;stkvar	_temp @ sp[(-13)+8]
 21992                           ;stkvar	_bexp @ sp[(-13)+10]
 21993  01250C  0EFB               	movlw	-5
 21994  01250E  006F FF8C  F032    	movff	plusw1,btemp
 21995  012514  0EFD               	movlw	-3
 21996  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 21997                           
 21998                           ;stkvar	_prod @ sp[(-13)+0]
 21999  01251C  50E1               	movf	fsr1l,w,c
 22000  01251E  0FF3               	addlw	-13
 22001  012520  6ED9               	movwf	fsr2l,c
 22002  012522  50E2               	movf	fsr1h,w,c
 22003  012524  6EDA               	movwf	fsr2h,c
 22004  012526  0EFF               	movlw	255
 22005  012528  22DA               	addwfc	fsr2h,f,c
 22006  01252A  0EFF               	movlw	255
 22007  01252C  16DE               	andwf	postinc2,f,c
 22008  01252E  0EFF               	movlw	255
 22009  012530  16DE               	andwf	postinc2,f,c
 22010  012532  0E7F               	movlw	127
 22011  012534  16DE               	andwf	postinc2,f,c
 22012  012536  0E00               	movlw	0
 22013  012538  16DE               	andwf	postinc2,f,c
 22014                           
 22015                           ;stkvar	_bexp @ sp[(-13)+10]
 22016  01253A  0EFD               	movlw	-3
 22017  01253C  A0E3               	btfss	plusw1,0,c
 22018  01253E  D008               	goto	l7012
 22019                           
 22020                           ;stkvar	_prod @ sp[(-13)+0]
 22021  012540  0EF5               	movlw	245
 22022  012542  24E1               	addwf	fsr1l,w,c
 22023  012544  6ED9               	movwf	fsr2l,c
 22024  012546  0EFF               	movlw	255
 22025  012548  20E2               	addwfc	fsr1h,w,c
 22026  01254A  6EDA               	movwf	fsr2h,c
 22027  01254C  0E00               	movlw	0
 22028  01254E  8EDB               	bsf	plusw2,7,c
 22029  012550                     l7012:
 22030                           
 22031                           ;stkvar	_prod @ sp[(-13)+0]
 22032  012550  0EF6               	movlw	246
 22033  012552  24E1               	addwf	fsr1l,w,c
 22034  012554  6ED9               	movwf	fsr2l,c
 22035  012556  0EFF               	movlw	255
 22036  012558  20E2               	addwfc	fsr1h,w,c
 22037  01255A  6EDA               	movwf	fsr2h,c
 22038                           
 22039                           ;stkvar	_bexp @ sp[(-13)+10]
 22040  01255C  0EFD               	movlw	-3
 22041  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 22042  012564  90D8               	bcf	status,0,c
 22043  012566  303D               	rrcf	(btemp+11)^0,w,c
 22044  012568  6EDF               	movwf	indf2,c
 22045  01256A                     l7014:
 22046                           
 22047                           ;stkvar	_sign @ sp[(-13)+12]
 22048  01256A  0EFF               	movlw	-1
 22049  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22050                           
 22051                           ;stkvar	_prod @ sp[(-13)+0]
 22052  012572  0EF6               	movlw	246
 22053  012574  24E1               	addwf	fsr1l,w,c
 22054  012576  6ED9               	movwf	fsr2l,c
 22055  012578  0EFF               	movlw	255
 22056  01257A  20E2               	addwfc	fsr1h,w,c
 22057  01257C  6EDA               	movwf	fsr2h,c
 22058  01257E  503D               	movf	(btemp+11)^0,w,c
 22059  012580  12DF               	iorwf	indf2,f,c
 22060                           
 22061                           ;stkvar	_prod @ sp[(-13)+0]
 22062  012582  0EF3               	movlw	-13
 22063  012584  006F FF8C  F032    	movff	plusw1,btemp
 22064  01258A  0EF4               	movlw	-12
 22065  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 22066  012592  0EF5               	movlw	-11
 22067  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 22068  01259A  0EF6               	movlw	-10
 22069  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 22070  0125A2                     l2695:
 22071                           
 22072                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 22073  0125A2  0EEB               	movlw	235
 22074  0125A4  26E1               	addwf	fsr1l,f,c
 22075  0125A6  0EFF               	movlw	255
 22076  0125A8  22E2               	addwfc	fsr1h,f,c
 22077  0125AA  0012               	return		;funcret
 22078  0125AC                     __end_of___flmul:
 22079                           	opt callstack 0
 22080                           
 22081 ;; *************** function _SYSTEM_Initialize *****************
 22082 ;; Defined at:
 22083 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22084 ;; Parameters:    Size  Location     Type
 22085 ;;		None
 22086 ;; Auto vars:     Size  Location     Type
 22087 ;;		None
 22088 ;; Return value:  Size  Location     Type
 22089 ;;                  1  [STACK] void 
 22090 ;; Registers used:
 22091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22092 ;; Tracked objects:
 22093 ;;		On entry : 0/0
 22094 ;;		On exit  : 3F/3C
 22095 ;;		Unchanged: 0/0
 22096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22101 ;;Total ram usage:        0 bytes
 22102 ;; Hardware stack levels used:    1
 22103 ;; Hardware stack levels required when called:    8
 22104 ;; This function calls:
 22105 ;;		_ADCC_Initialize
 22106 ;;		_CLKREF_Initialize
 22107 ;;		_DMA1_Initialize
 22108 ;;		_DMA2_Initialize
 22109 ;;		_EXT_INT_Initialize
 22110 ;;		_FVR_Initialize
 22111 ;;		_INTERRUPT_Initialize
 22112 ;;		_OSCILLATOR_Initialize
 22113 ;;		_PIN_MANAGER_Initialize
 22114 ;;		_PMD_Initialize
 22115 ;;		_PWM8_Initialize
 22116 ;;		_SPI1_Initialize
 22117 ;;		_TMR2_Initialize
 22118 ;;		_TMR5_Initialize
 22119 ;;		_TMR6_Initialize
 22120 ;;		_UART1_Initialize
 22121 ;;		_UART2_Initialize
 22122 ;; This function is called by:
 22123 ;;		_main
 22124 ;; This function uses a reentrant model
 22125 ;;
 22126                           
 22127                           	psect	text90
 22128  017EE4                     __ptext90:
 22129                           	opt callstack 0
 22130  017EE4                     _SYSTEM_Initialize:
 22131                           	opt callstack 22
 22132                           
 22133                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22134                           
 22135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22136                           ;incstack = 0
 22137  017EE4  EC06  F0BD         	call	_INTERRUPT_Initialize	;wreg free
 22138                           
 22139                           ; BSR set to: 57
 22140                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22141  017EE8  EC82  F0C4         	call	_PMD_Initialize	;wreg free
 22142                           
 22143                           ; BSR set to: 57
 22144                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22145  017EEC  EC92  F0BA         	call	_PIN_MANAGER_Initialize	;wreg free
 22146                           
 22147                           ; BSR set to: 58
 22148                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22149  017EF0  EC77  F0C4         	call	_OSCILLATOR_Initialize	;wreg free
 22150                           
 22151                           ; BSR set to: 57
 22152                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22153  017EF4  ECE9  F0C4         	call	_FVR_Initialize	;wreg free
 22154                           
 22155                           ; BSR set to: 62
 22156                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22157  017EF8  EC9C  F0BC         	call	_ADCC_Initialize	;wreg free
 22158                           
 22159                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22160  017EFC  EC55  F0C4         	call	_TMR2_Initialize	;wreg free
 22161                           
 22162                           ; BSR set to: 57
 22163                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22164  017F00  EC6C  F0C4         	call	_PWM8_Initialize	;wreg free
 22165                           
 22166                           ; BSR set to: 63
 22167                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22168  017F04  EC02  F0C1         	call	_EXT_INT_Initialize	;wreg free
 22169                           
 22170                           ; BSR set to: 57
 22171                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22172  017F08  ECA7  F0C1         	call	_TMR6_Initialize	;wreg free
 22173                           
 22174                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22175  017F0C  EC95  F0BF         	call	_TMR5_Initialize	;wreg free
 22176                           
 22177                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22178  017F10  EC6B  F0BD         	call	_UART1_Initialize	;wreg free
 22179                           
 22180                           ; BSR set to: 57
 22181                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22182  017F14  ECFF  F0BD         	call	_UART2_Initialize	;wreg free
 22183                           
 22184                           ; BSR set to: 57
 22185                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22186  017F18  EC61  F0C4         	call	_SPI1_Initialize	;wreg free
 22187                           
 22188                           ; BSR set to: 61
 22189                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22190  017F1C  EC89  F0BE         	call	_DMA2_Initialize	;wreg free
 22191                           
 22192                           ; BSR set to: 59
 22193                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22194  017F20  EC67  F0BC         	call	_DMA1_Initialize	;wreg free
 22195                           
 22196                           ; BSR set to: 59
 22197                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22198  017F24  ECC3  F0C4         	call	_CLKREF_Initialize	;wreg free
 22199                           
 22200                           ; BSR set to: 60
 22201                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22202  017F28  0012               	return		;funcret
 22203  017F2A                     __end_of_SYSTEM_Initialize:
 22204                           	opt callstack 0
 22205                           
 22206 ;; *************** function _UART2_Initialize *****************
 22207 ;; Defined at:
 22208 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22209 ;; Parameters:    Size  Location     Type
 22210 ;;		None
 22211 ;; Auto vars:     Size  Location     Type
 22212 ;;		None
 22213 ;; Return value:  Size  Location     Type
 22214 ;;                  1  [STACK] void 
 22215 ;; Registers used:
 22216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22217 ;; Tracked objects:
 22218 ;;		On entry : 3F/39
 22219 ;;		On exit  : 3F/39
 22220 ;;		Unchanged: 0/0
 22221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22226 ;;Total ram usage:        0 bytes
 22227 ;; Hardware stack levels used:    1
 22228 ;; Hardware stack levels required when called:    7
 22229 ;; This function calls:
 22230 ;;		_UART2_SetRxInterruptHandler
 22231 ;;		_UART2_SetTxInterruptHandler
 22232 ;; This function is called by:
 22233 ;;		_SYSTEM_Initialize
 22234 ;; This function uses a reentrant model
 22235 ;;
 22236                           
 22237                           	psect	text91
 22238  017BFE                     __ptext91:
 22239                           	opt callstack 0
 22240  017BFE                     _UART2_Initialize:
 22241                           	opt callstack 22
 22242                           
 22243                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22244                           
 22245                           ; BSR set to: 60
 22246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22247                           ;incstack = 0
 22248  017BFE  0139               	movlb	57	; () banked
 22249  017C00  9596               	bcf	150,2,b	;volatile
 22250                           
 22251                           ; BSR set to: 57
 22252                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22253  017C02  0E06               	movlw	low _UART2_Receive_ISR
 22254  017C04  6EE6               	movwf	postinc1,c
 22255  017C06  0E88               	movlw	high _UART2_Receive_ISR
 22256  017C08  6EE6               	movwf	postinc1,c
 22257  017C0A  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22258  017C0C  6EE6               	movwf	postinc1,c
 22259  017C0E  EC35  F0C2         	call	_UART2_SetRxInterruptHandler	;wreg free
 22260                           
 22261                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22262  017C12  0139               	movlb	57	; () banked
 22263  017C14  9796               	bcf	150,3,b	;volatile
 22264                           
 22265                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22266  017C16  0E22               	movlw	low _UART2_Transmit_ISR
 22267  017C18  6EE6               	movwf	postinc1,c
 22268  017C1A  0E83               	movlw	high _UART2_Transmit_ISR
 22269  017C1C  6EE6               	movwf	postinc1,c
 22270  017C1E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22271  017C20  6EE6               	movwf	postinc1,c
 22272  017C22  EC21  F0C2         	call	_UART2_SetTxInterruptHandler	;wreg free
 22273                           
 22274                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22275  017C26  013D               	movlb	61	; () banked
 22276  017C28  6BD4               	clrf	212,b	;volatile
 22277                           
 22278                           ; BSR set to: 61
 22279                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22280  017C2A  6BD6               	clrf	214,b	;volatile
 22281                           
 22282                           ; BSR set to: 61
 22283                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22284  017C2C  6BD8               	clrf	216,b	;volatile
 22285                           
 22286                           ; BSR set to: 61
 22287                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22288  017C2E  0EB0               	movlw	176
 22289  017C30  6FDA               	movwf	218,b	;volatile
 22290                           
 22291                           ; BSR set to: 61
 22292                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22293  017C32  0E80               	movlw	128
 22294  017C34  6FDB               	movwf	219,b	;volatile
 22295                           
 22296                           ; BSR set to: 61
 22297                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22298  017C36  6BDC               	clrf	220,b	;volatile
 22299                           
 22300                           ; BSR set to: 61
 22301                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22302  017C38  0E82               	movlw	130
 22303  017C3A  6FDD               	movwf	221,b	;volatile
 22304                           
 22305                           ; BSR set to: 61
 22306                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22307  017C3C  0E06               	movlw	6
 22308  017C3E  6FDE               	movwf	222,b	;volatile
 22309                           
 22310                           ; BSR set to: 61
 22311                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22312  017C40  6BDF               	clrf	223,b	;volatile
 22313                           
 22314                           ; BSR set to: 61
 22315                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22316  017C42  6BE0               	clrf	224,b	;volatile
 22317                           
 22318                           ; BSR set to: 61
 22319                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22320  017C44  6BE1               	clrf	225,b	;volatile
 22321                           
 22322                           ; BSR set to: 61
 22323                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22324  017C46  6BE2               	clrf	226,b	;volatile
 22325                           
 22326                           ; BSR set to: 61
 22327                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22328  017C48  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 22329                           
 22330                           ; BSR set to: 61
 22331                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22332  017C4A  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 22333                           
 22334                           ; BSR set to: 61
 22335                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22336  017C4C  0E40               	movlw	64
 22337  017C4E  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22338                           
 22339                           ; BSR set to: 61
 22340                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22341  017C50  6A28               	clrf	_uart2RxHead^0,c	;volatile
 22342                           
 22343                           ; BSR set to: 61
 22344                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22345  017C52  6A27               	clrf	_uart2RxTail^0,c	;volatile
 22346                           
 22347                           ; BSR set to: 61
 22348                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22349  017C54  6A26               	clrf	_uart2RxCount^0,c	;volatile
 22350                           
 22351                           ; BSR set to: 61
 22352                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22353  017C56  0139               	movlb	57	; () banked
 22354  017C58  8596               	bsf	150,2,b	;volatile
 22355                           
 22356                           ; BSR set to: 57
 22357                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22358  017C5A  0012               	return		;funcret
 22359  017C5C                     __end_of_UART2_Initialize:
 22360                           	opt callstack 0
 22361                           
 22362 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22363 ;; Defined at:
 22364 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22365 ;; Parameters:    Size  Location     Type
 22366 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22367 ;;		 -> UART2_Transmit_ISR(1), 
 22368 ;; Auto vars:     Size  Location     Type
 22369 ;;		None
 22370 ;; Return value:  Size  Location     Type
 22371 ;;                  1  [STACK] void 
 22372 ;; Registers used:
 22373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22374 ;; Tracked objects:
 22375 ;;		On entry : 3F/39
 22376 ;;		On exit  : 0/0
 22377 ;;		Unchanged: 0/0
 22378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22383 ;;Total ram usage:        0 bytes
 22384 ;; Hardware stack levels used:    1
 22385 ;; Hardware stack levels required when called:    6
 22386 ;; This function calls:
 22387 ;;		Nothing
 22388 ;; This function is called by:
 22389 ;;		_UART2_Initialize
 22390 ;; This function uses a reentrant model
 22391 ;;
 22392                           
 22393                           	psect	text92
 22394  018442                     __ptext92:
 22395                           	opt callstack 0
 22396  018442                     _UART2_SetTxInterruptHandler:
 22397                           	opt callstack 22
 22398                           
 22399                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22400                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22401                           
 22402                           ; BSR set to: 57
 22403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22404                           ;incstack = 0
 22405  018442  50E1               	movf	fsr1l,w,c
 22406  018444  0FFD               	addlw	-3
 22407  018446  6ED9               	movwf	fsr2l,c
 22408  018448  50E2               	movf	fsr1h,w,c
 22409  01844A  6EDA               	movwf	fsr2h,c
 22410  01844C  0EFF               	movlw	255
 22411  01844E  22DA               	addwfc	fsr2h,f,c
 22412  018450  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 22413  018456  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 22414  01845C  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 22415                           
 22416                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22417  018462  52E5               	movf	postdec1,f,c
 22418  018464  52E5               	movf	postdec1,f,c
 22419  018466  52E5               	movf	postdec1,f,c
 22420  018468  0012               	return		;funcret
 22421  01846A                     __end_of_UART2_SetTxInterruptHandler:
 22422                           	opt callstack 0
 22423                           
 22424 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22425 ;; Defined at:
 22426 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22427 ;; Parameters:    Size  Location     Type
 22428 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22429 ;;		 -> UART2_Receive_ISR(1), 
 22430 ;; Auto vars:     Size  Location     Type
 22431 ;;		None
 22432 ;; Return value:  Size  Location     Type
 22433 ;;                  1  [STACK] void 
 22434 ;; Registers used:
 22435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22436 ;; Tracked objects:
 22437 ;;		On entry : 3F/39
 22438 ;;		On exit  : 0/0
 22439 ;;		Unchanged: 0/0
 22440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22445 ;;Total ram usage:        0 bytes
 22446 ;; Hardware stack levels used:    1
 22447 ;; Hardware stack levels required when called:    6
 22448 ;; This function calls:
 22449 ;;		Nothing
 22450 ;; This function is called by:
 22451 ;;		_UART2_Initialize
 22452 ;; This function uses a reentrant model
 22453 ;;
 22454                           
 22455                           	psect	text93
 22456  01846A                     __ptext93:
 22457                           	opt callstack 0
 22458  01846A                     _UART2_SetRxInterruptHandler:
 22459                           	opt callstack 22
 22460                           
 22461                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22462                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22463                           
 22464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22465                           ;incstack = 0
 22466  01846A  50E1               	movf	fsr1l,w,c
 22467  01846C  0FFD               	addlw	-3
 22468  01846E  6ED9               	movwf	fsr2l,c
 22469  018470  50E2               	movf	fsr1h,w,c
 22470  018472  6EDA               	movwf	fsr2h,c
 22471  018474  0EFF               	movlw	255
 22472  018476  22DA               	addwfc	fsr2h,f,c
 22473  018478  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 22474  01847E  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 22475  018484  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 22476                           
 22477                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22478  01848A  52E5               	movf	postdec1,f,c
 22479  01848C  52E5               	movf	postdec1,f,c
 22480  01848E  52E5               	movf	postdec1,f,c
 22481  018490  0012               	return		;funcret
 22482  018492                     __end_of_UART2_SetRxInterruptHandler:
 22483                           	opt callstack 0
 22484                           
 22485 ;; *************** function _UART1_Initialize *****************
 22486 ;; Defined at:
 22487 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22488 ;; Parameters:    Size  Location     Type
 22489 ;;		None
 22490 ;; Auto vars:     Size  Location     Type
 22491 ;;		None
 22492 ;; Return value:  Size  Location     Type
 22493 ;;                  1  [STACK] void 
 22494 ;; Registers used:
 22495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22496 ;; Tracked objects:
 22497 ;;		On entry : 0/39
 22498 ;;		On exit  : 3F/39
 22499 ;;		Unchanged: 0/0
 22500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22505 ;;Total ram usage:        0 bytes
 22506 ;; Hardware stack levels used:    1
 22507 ;; Hardware stack levels required when called:    7
 22508 ;; This function calls:
 22509 ;;		_UART1_SetRxInterruptHandler
 22510 ;;		_UART1_SetTxInterruptHandler
 22511 ;; This function is called by:
 22512 ;;		_SYSTEM_Initialize
 22513 ;; This function uses a reentrant model
 22514 ;;
 22515                           
 22516                           	psect	text94
 22517  017AD6                     __ptext94:
 22518                           	opt callstack 0
 22519  017AD6                     _UART1_Initialize:
 22520                           	opt callstack 22
 22521                           
 22522                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22523                           
 22524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22525                           ;incstack = 0
 22526  017AD6  0139               	movlb	57	; () banked
 22527  017AD8  9793               	bcf	147,3,b	;volatile
 22528                           
 22529                           ; BSR set to: 57
 22530                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22531  017ADA  0EE8               	movlw	low _UART1_Receive_ISR
 22532  017ADC  6EE6               	movwf	postinc1,c
 22533  017ADE  0E87               	movlw	high _UART1_Receive_ISR
 22534  017AE0  6EE6               	movwf	postinc1,c
 22535  017AE2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22536  017AE4  6EE6               	movwf	postinc1,c
 22537  017AE6  EC5D  F0C2         	call	_UART1_SetRxInterruptHandler	;wreg free
 22538                           
 22539                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22540  017AEA  0139               	movlb	57	; () banked
 22541  017AEC  9993               	bcf	147,4,b	;volatile
 22542                           
 22543                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22544  017AEE  0EF6               	movlw	low _UART1_Transmit_ISR
 22545  017AF0  6EE6               	movwf	postinc1,c
 22546  017AF2  0E82               	movlw	high _UART1_Transmit_ISR
 22547  017AF4  6EE6               	movwf	postinc1,c
 22548  017AF6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22549  017AF8  6EE6               	movwf	postinc1,c
 22550  017AFA  EC49  F0C2         	call	_UART1_SetTxInterruptHandler	;wreg free
 22551                           
 22552                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 22553  017AFE  013D               	movlb	61	; () banked
 22554  017B00  6BEC               	clrf	236,b	;volatile
 22555                           
 22556                           ; BSR set to: 61
 22557                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22558  017B02  6BED               	clrf	237,b	;volatile
 22559                           
 22560                           ; BSR set to: 61
 22561                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22562  017B04  6BEE               	clrf	238,b	;volatile
 22563                           
 22564                           ; BSR set to: 61
 22565                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22566  017B06  6BEF               	clrf	239,b	;volatile
 22567                           
 22568                           ; BSR set to: 61
 22569                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22570  017B08  6BF0               	clrf	240,b	;volatile
 22571                           
 22572                           ; BSR set to: 61
 22573                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22574  017B0A  6BF1               	clrf	241,b	;volatile
 22575                           
 22576                           ; BSR set to: 61
 22577                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22578  017B0C  0EB0               	movlw	176
 22579  017B0E  6FF2               	movwf	242,b	;volatile
 22580                           
 22581                           ; BSR set to: 61
 22582                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22583  017B10  0E80               	movlw	128
 22584  017B12  6FF3               	movwf	243,b	;volatile
 22585                           
 22586                           ; BSR set to: 61
 22587                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22588  017B14  6BF4               	clrf	244,b	;volatile
 22589                           
 22590                           ; BSR set to: 61
 22591                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22592  017B16  0E82               	movlw	130
 22593  017B18  6FF5               	movwf	245,b	;volatile
 22594                           
 22595                           ; BSR set to: 61
 22596                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22597  017B1A  0E06               	movlw	6
 22598  017B1C  6FF6               	movwf	246,b	;volatile
 22599                           
 22600                           ; BSR set to: 61
 22601                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22602  017B1E  6BF7               	clrf	247,b	;volatile
 22603                           
 22604                           ; BSR set to: 61
 22605                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22606  017B20  6BF8               	clrf	248,b	;volatile
 22607                           
 22608                           ; BSR set to: 61
 22609                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22610  017B22  6BF9               	clrf	249,b	;volatile
 22611                           
 22612                           ; BSR set to: 61
 22613                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22614  017B24  6BFA               	clrf	250,b	;volatile
 22615                           
 22616                           ; BSR set to: 61
 22617                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22618  017B26  6A31               	clrf	_uart1TxHead^0,c	;volatile
 22619                           
 22620                           ; BSR set to: 61
 22621                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22622  017B28  6A30               	clrf	_uart1TxTail^0,c	;volatile
 22623                           
 22624                           ; BSR set to: 61
 22625                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22626  017B2A  0E40               	movlw	64
 22627  017B2C  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22628                           
 22629                           ; BSR set to: 61
 22630                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22631  017B2E  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 22632                           
 22633                           ; BSR set to: 61
 22634                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22635  017B30  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 22636                           
 22637                           ; BSR set to: 61
 22638                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22639  017B32  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 22640                           
 22641                           ; BSR set to: 61
 22642                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22643  017B34  0139               	movlb	57	; () banked
 22644  017B36  8793               	bsf	147,3,b	;volatile
 22645                           
 22646                           ; BSR set to: 57
 22647                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22648  017B38  0012               	return		;funcret
 22649  017B3A                     __end_of_UART1_Initialize:
 22650                           	opt callstack 0
 22651                           
 22652 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22653 ;; Defined at:
 22654 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22655 ;; Parameters:    Size  Location     Type
 22656 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22657 ;;		 -> UART1_Transmit_ISR(1), 
 22658 ;; Auto vars:     Size  Location     Type
 22659 ;;		None
 22660 ;; Return value:  Size  Location     Type
 22661 ;;                  1  [STACK] void 
 22662 ;; Registers used:
 22663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22664 ;; Tracked objects:
 22665 ;;		On entry : 3F/39
 22666 ;;		On exit  : 0/0
 22667 ;;		Unchanged: 0/0
 22668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22673 ;;Total ram usage:        0 bytes
 22674 ;; Hardware stack levels used:    1
 22675 ;; Hardware stack levels required when called:    6
 22676 ;; This function calls:
 22677 ;;		Nothing
 22678 ;; This function is called by:
 22679 ;;		_UART1_Initialize
 22680 ;; This function uses a reentrant model
 22681 ;;
 22682                           
 22683                           	psect	text95
 22684  018492                     __ptext95:
 22685                           	opt callstack 0
 22686  018492                     _UART1_SetTxInterruptHandler:
 22687                           	opt callstack 22
 22688                           
 22689                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22690                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22691                           
 22692                           ; BSR set to: 57
 22693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22694                           ;incstack = 0
 22695  018492  50E1               	movf	fsr1l,w,c
 22696  018494  0FFD               	addlw	-3
 22697  018496  6ED9               	movwf	fsr2l,c
 22698  018498  50E2               	movf	fsr1h,w,c
 22699  01849A  6EDA               	movwf	fsr2h,c
 22700  01849C  0EFF               	movlw	255
 22701  01849E  22DA               	addwfc	fsr2h,f,c
 22702  0184A0  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22703  0184A6  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22704  0184AC  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22705                           
 22706                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22707  0184B2  52E5               	movf	postdec1,f,c
 22708  0184B4  52E5               	movf	postdec1,f,c
 22709  0184B6  52E5               	movf	postdec1,f,c
 22710  0184B8  0012               	return		;funcret
 22711  0184BA                     __end_of_UART1_SetTxInterruptHandler:
 22712                           	opt callstack 0
 22713                           
 22714 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22715 ;; Defined at:
 22716 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22717 ;; Parameters:    Size  Location     Type
 22718 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22719 ;;		 -> UART1_Receive_ISR(1), 
 22720 ;; Auto vars:     Size  Location     Type
 22721 ;;		None
 22722 ;; Return value:  Size  Location     Type
 22723 ;;                  1  [STACK] void 
 22724 ;; Registers used:
 22725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22726 ;; Tracked objects:
 22727 ;;		On entry : 3F/39
 22728 ;;		On exit  : 0/0
 22729 ;;		Unchanged: 0/0
 22730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22735 ;;Total ram usage:        0 bytes
 22736 ;; Hardware stack levels used:    1
 22737 ;; Hardware stack levels required when called:    6
 22738 ;; This function calls:
 22739 ;;		Nothing
 22740 ;; This function is called by:
 22741 ;;		_UART1_Initialize
 22742 ;; This function uses a reentrant model
 22743 ;;
 22744                           
 22745                           	psect	text96
 22746  0184BA                     __ptext96:
 22747                           	opt callstack 0
 22748  0184BA                     _UART1_SetRxInterruptHandler:
 22749                           	opt callstack 22
 22750                           
 22751                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22752                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22753                           
 22754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22755                           ;incstack = 0
 22756  0184BA  50E1               	movf	fsr1l,w,c
 22757  0184BC  0FFD               	addlw	-3
 22758  0184BE  6ED9               	movwf	fsr2l,c
 22759  0184C0  50E2               	movf	fsr1h,w,c
 22760  0184C2  6EDA               	movwf	fsr2h,c
 22761  0184C4  0EFF               	movlw	255
 22762  0184C6  22DA               	addwfc	fsr2h,f,c
 22763  0184C8  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22764  0184CE  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22765  0184D4  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22766                           
 22767                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22768  0184DA  52E5               	movf	postdec1,f,c
 22769  0184DC  52E5               	movf	postdec1,f,c
 22770  0184DE  52E5               	movf	postdec1,f,c
 22771  0184E0  0012               	return		;funcret
 22772  0184E2                     __end_of_UART1_SetRxInterruptHandler:
 22773                           	opt callstack 0
 22774                           
 22775 ;; *************** function _TMR6_Initialize *****************
 22776 ;; Defined at:
 22777 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22778 ;; Parameters:    Size  Location     Type
 22779 ;;		None
 22780 ;; Auto vars:     Size  Location     Type
 22781 ;;		None
 22782 ;; Return value:  Size  Location     Type
 22783 ;;                  1  [STACK] void 
 22784 ;; Registers used:
 22785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22786 ;; Tracked objects:
 22787 ;;		On entry : 3F/39
 22788 ;;		On exit  : 0/0
 22789 ;;		Unchanged: 0/0
 22790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22795 ;;Total ram usage:        0 bytes
 22796 ;; Hardware stack levels used:    1
 22797 ;; Hardware stack levels required when called:    7
 22798 ;; This function calls:
 22799 ;;		_TMR6_SetInterruptHandler
 22800 ;; This function is called by:
 22801 ;;		_SYSTEM_Initialize
 22802 ;; This function uses a reentrant model
 22803 ;;
 22804                           
 22805                           	psect	text97
 22806  01834E                     __ptext97:
 22807                           	opt callstack 0
 22808  01834E                     _TMR6_Initialize:
 22809                           	opt callstack 22
 22810                           
 22811                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22812                           
 22813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22814                           ;incstack = 0
 22815  01834E  0E01               	movlw	1
 22816  018350  6E96               	movwf	150,c	;volatile
 22817                           
 22818                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22819  018352  6A95               	clrf	149,c	;volatile
 22820                           
 22821                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22822  018354  6A97               	clrf	151,c	;volatile
 22823                           
 22824                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22825  018356  0E7C               	movlw	124
 22826  018358  6E93               	movwf	147,c	;volatile
 22827                           
 22828                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22829  01835A  6A92               	clrf	146,c	;volatile
 22830                           
 22831                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22832  01835C  0139               	movlb	57	; () banked
 22833  01835E  91A9               	bcf	169,0,b	;volatile
 22834                           
 22835                           ; BSR set to: 57
 22836                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22837  018360  8199               	bsf	153,0,b	;volatile
 22838                           
 22839                           ; BSR set to: 57
 22840                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22841  018362  0E70               	movlw	low _TMR6_DefaultInterruptHandler
 22842  018364  6EE6               	movwf	postinc1,c
 22843  018366  0E7F               	movlw	high _TMR6_DefaultInterruptHandler
 22844  018368  6EE6               	movwf	postinc1,c
 22845  01836A  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22846  01836C  6EE6               	movwf	postinc1,c
 22847  01836E  EC71  F0C2         	call	_TMR6_SetInterruptHandler	;wreg free
 22848                           
 22849                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22850  018372  0EE0               	movlw	224
 22851  018374  6E94               	movwf	148,c	;volatile
 22852                           
 22853                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22854  018376  0012               	return		;funcret
 22855  018378                     __end_of_TMR6_Initialize:
 22856                           	opt callstack 0
 22857                           
 22858 ;; *************** function _TMR6_SetInterruptHandler *****************
 22859 ;; Defined at:
 22860 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22861 ;; Parameters:    Size  Location     Type
 22862 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22863 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22864 ;; Auto vars:     Size  Location     Type
 22865 ;;		None
 22866 ;; Return value:  Size  Location     Type
 22867 ;;                  1  [STACK] void 
 22868 ;; Registers used:
 22869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22870 ;; Tracked objects:
 22871 ;;		On entry : 3F/39
 22872 ;;		On exit  : 0/0
 22873 ;;		Unchanged: 0/0
 22874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22879 ;;Total ram usage:        0 bytes
 22880 ;; Hardware stack levels used:    1
 22881 ;; Hardware stack levels required when called:    6
 22882 ;; This function calls:
 22883 ;;		Nothing
 22884 ;; This function is called by:
 22885 ;;		_TMR6_Initialize
 22886 ;; This function uses a reentrant model
 22887 ;;
 22888                           
 22889                           	psect	text98
 22890  0184E2                     __ptext98:
 22891                           	opt callstack 0
 22892  0184E2                     _TMR6_SetInterruptHandler:
 22893                           	opt callstack 22
 22894                           
 22895                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22896                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22897                           
 22898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22899                           ;incstack = 0
 22900  0184E2  50E1               	movf	fsr1l,w,c
 22901  0184E4  0FFD               	addlw	-3
 22902  0184E6  6ED9               	movwf	fsr2l,c
 22903  0184E8  50E2               	movf	fsr1h,w,c
 22904  0184EA  6EDA               	movwf	fsr2h,c
 22905  0184EC  0EFF               	movlw	255
 22906  0184EE  22DA               	addwfc	fsr2h,f,c
 22907  0184F0  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22908  0184F6  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22909  0184FC  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22910                           
 22911                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22912  018502  52E5               	movf	postdec1,f,c
 22913  018504  52E5               	movf	postdec1,f,c
 22914  018506  52E5               	movf	postdec1,f,c
 22915  018508  0012               	return		;funcret
 22916  01850A                     __end_of_TMR6_SetInterruptHandler:
 22917                           	opt callstack 0
 22918                           
 22919 ;; *************** function _TMR5_Initialize *****************
 22920 ;; Defined at:
 22921 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22922 ;; Parameters:    Size  Location     Type
 22923 ;;		None
 22924 ;; Auto vars:     Size  Location     Type
 22925 ;;		None
 22926 ;; Return value:  Size  Location     Type
 22927 ;;                  1  [STACK] void 
 22928 ;; Registers used:
 22929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22930 ;; Tracked objects:
 22931 ;;		On entry : 0/39
 22932 ;;		On exit  : 0/0
 22933 ;;		Unchanged: 0/0
 22934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22939 ;;Total ram usage:        0 bytes
 22940 ;; Hardware stack levels used:    1
 22941 ;; Hardware stack levels required when called:    7
 22942 ;; This function calls:
 22943 ;;		_TMR5_SetInterruptHandler
 22944 ;; This function is called by:
 22945 ;;		_SYSTEM_Initialize
 22946 ;; This function uses a reentrant model
 22947 ;;
 22948                           
 22949                           	psect	text99
 22950  017F2A                     __ptext99:
 22951                           	opt callstack 0
 22952  017F2A                     _TMR5_Initialize:
 22953                           	opt callstack 22
 22954                           
 22955                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22956                           
 22957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22958                           ;incstack = 0
 22959  017F2A  6A9B               	clrf	155,c	;volatile
 22960                           
 22961                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22962  017F2C  6A9C               	clrf	156,c	;volatile
 22963                           
 22964                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22965  017F2E  0E01               	movlw	1
 22966  017F30  6E9D               	movwf	157,c	;volatile
 22967                           
 22968                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22969  017F32  0E63               	movlw	99
 22970  017F34  6E99               	movwf	153,c	;volatile
 22971                           
 22972                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22973  017F36  0EC0               	movlw	192
 22974  017F38  6E98               	movwf	152,c	;volatile
 22975                           
 22976                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22977  017F3A  5098               	movf	152,w,c	;volatile
 22978  017F3C  006F FE64  F032    	movff	16281,btemp	;volatile
 22979  017F42  6A33               	clrf	(btemp+1)^0,c
 22980  017F44  0060  F0C8  F033   	movff	btemp,btemp+1
 22981  017F4A  6A32               	clrf	btemp^0,c
 22982  017F4C  1032               	iorwf	btemp^0,w,c
 22983  017F4E  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22984  017F50  5033               	movf	(btemp+1)^0,w,c
 22985  017F52  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22986                           
 22987                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22988  017F54  0139               	movlb	57	; () banked
 22989  017F56  9DA8               	bcf	168,6,b	;volatile
 22990                           
 22991                           ; BSR set to: 57
 22992                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22993  017F58  8D98               	bsf	152,6,b	;volatile
 22994                           
 22995                           ; BSR set to: 57
 22996                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22997  017F5A  0ED2               	movlw	low _TMR5_DefaultInterruptHandler
 22998  017F5C  6EE6               	movwf	postinc1,c
 22999  017F5E  0E85               	movlw	high _TMR5_DefaultInterruptHandler
 23000  017F60  6EE6               	movwf	postinc1,c
 23001  017F62  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23002  017F64  6EE6               	movwf	postinc1,c
 23003  017F66  EC85  F0C2         	call	_TMR5_SetInterruptHandler	;wreg free
 23004                           
 23005                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23006  017F6A  0E31               	movlw	49
 23007  017F6C  6E9A               	movwf	154,c	;volatile
 23008                           
 23009                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23010  017F6E  0012               	return		;funcret
 23011  017F70                     __end_of_TMR5_Initialize:
 23012                           	opt callstack 0
 23013                           
 23014 ;; *************** function _TMR5_SetInterruptHandler *****************
 23015 ;; Defined at:
 23016 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23017 ;; Parameters:    Size  Location     Type
 23018 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23019 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23020 ;; Auto vars:     Size  Location     Type
 23021 ;;		None
 23022 ;; Return value:  Size  Location     Type
 23023 ;;                  1  [STACK] void 
 23024 ;; Registers used:
 23025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23026 ;; Tracked objects:
 23027 ;;		On entry : 3F/39
 23028 ;;		On exit  : 0/0
 23029 ;;		Unchanged: 0/0
 23030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23035 ;;Total ram usage:        0 bytes
 23036 ;; Hardware stack levels used:    1
 23037 ;; Hardware stack levels required when called:    6
 23038 ;; This function calls:
 23039 ;;		Nothing
 23040 ;; This function is called by:
 23041 ;;		_TMR5_Initialize
 23042 ;; This function uses a reentrant model
 23043 ;;
 23044                           
 23045                           	psect	text100
 23046  01850A                     __ptext100:
 23047                           	opt callstack 0
 23048  01850A                     _TMR5_SetInterruptHandler:
 23049                           	opt callstack 22
 23050                           
 23051                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23052                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23053                           
 23054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23055                           ;incstack = 0
 23056  01850A  50E1               	movf	fsr1l,w,c
 23057  01850C  0FFD               	addlw	-3
 23058  01850E  6ED9               	movwf	fsr2l,c
 23059  018510  50E2               	movf	fsr1h,w,c
 23060  018512  6EDA               	movwf	fsr2h,c
 23061  018514  0EFF               	movlw	255
 23062  018516  22DA               	addwfc	fsr2h,f,c
 23063  018518  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 23064  01851E  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 23065  018524  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 23066                           
 23067                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23068  01852A  52E5               	movf	postdec1,f,c
 23069  01852C  52E5               	movf	postdec1,f,c
 23070  01852E  52E5               	movf	postdec1,f,c
 23071  018530  0012               	return		;funcret
 23072  018532                     __end_of_TMR5_SetInterruptHandler:
 23073                           	opt callstack 0
 23074                           
 23075 ;; *************** function _TMR2_Initialize *****************
 23076 ;; Defined at:
 23077 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23078 ;; Parameters:    Size  Location     Type
 23079 ;;		None
 23080 ;; Auto vars:     Size  Location     Type
 23081 ;;		None
 23082 ;; Return value:  Size  Location     Type
 23083 ;;                  1  [STACK] void 
 23084 ;; Registers used:
 23085 ;;		wreg, status,2
 23086 ;; Tracked objects:
 23087 ;;		On entry : 0/3E
 23088 ;;		On exit  : 3F/39
 23089 ;;		Unchanged: 0/0
 23090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23095 ;;Total ram usage:        0 bytes
 23096 ;; Hardware stack levels used:    1
 23097 ;; Hardware stack levels required when called:    6
 23098 ;; This function calls:
 23099 ;;		Nothing
 23100 ;; This function is called by:
 23101 ;;		_SYSTEM_Initialize
 23102 ;; This function uses a reentrant model
 23103 ;;
 23104                           
 23105                           	psect	text101
 23106  0188AA                     __ptext101:
 23107                           	opt callstack 0
 23108  0188AA                     _TMR2_Initialize:
 23109                           	opt callstack 23
 23110                           
 23111                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23112                           
 23113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23114                           ;incstack = 0
 23115  0188AA  0E01               	movlw	1
 23116  0188AC  6EAE               	movwf	174,c	;volatile
 23117                           
 23118                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23119  0188AE  6AAD               	clrf	173,c	;volatile
 23120                           
 23121                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23122  0188B0  6AAF               	clrf	175,c	;volatile
 23123                           
 23124                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23125  0188B2  0E63               	movlw	99
 23126  0188B4  6EAB               	movwf	171,c	;volatile
 23127                           
 23128                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23129  0188B6  6AAA               	clrf	170,c	;volatile
 23130                           
 23131                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23132  0188B8  0139               	movlb	57	; () banked
 23133  0188BA  95A4               	bcf	164,2,b	;volatile
 23134                           
 23135                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23136  0188BC  0EC0               	movlw	192
 23137  0188BE  6EAC               	movwf	172,c	;volatile
 23138                           
 23139                           ; BSR set to: 57
 23140                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23141  0188C0  0012               	return		;funcret
 23142  0188C2                     __end_of_TMR2_Initialize:
 23143                           	opt callstack 0
 23144                           
 23145 ;; *************** function _SPI1_Initialize *****************
 23146 ;; Defined at:
 23147 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23148 ;; Parameters:    Size  Location     Type
 23149 ;;		None
 23150 ;; Auto vars:     Size  Location     Type
 23151 ;;		None
 23152 ;; Return value:  Size  Location     Type
 23153 ;;                  1  [STACK] void 
 23154 ;; Registers used:
 23155 ;;		wreg, status,2
 23156 ;; Tracked objects:
 23157 ;;		On entry : 3F/39
 23158 ;;		On exit  : 3F/3D
 23159 ;;		Unchanged: 0/0
 23160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23165 ;;Total ram usage:        0 bytes
 23166 ;; Hardware stack levels used:    1
 23167 ;; Hardware stack levels required when called:    6
 23168 ;; This function calls:
 23169 ;;		Nothing
 23170 ;; This function is called by:
 23171 ;;		_SYSTEM_Initialize
 23172 ;; This function uses a reentrant model
 23173 ;;
 23174                           
 23175                           	psect	text102
 23176  0188C2                     __ptext102:
 23177                           	opt callstack 0
 23178  0188C2                     _SPI1_Initialize:
 23179                           	opt callstack 23
 23180                           
 23181                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23182                           
 23183                           ; BSR set to: 57
 23184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23185                           ;incstack = 0
 23186  0188C2  0E40               	movlw	64
 23187  0188C4  013D               	movlb	61	; () banked
 23188  0188C6  6F15               	movwf	21,b	;volatile
 23189                           
 23190                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23191  0188C8  0E03               	movlw	3
 23192  0188CA  6F16               	movwf	22,b	;volatile
 23193                           
 23194                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23195  0188CC  0E4F               	movlw	79
 23196  0188CE  6F19               	movwf	25,b	;volatile
 23197                           
 23198                           ; BSR set to: 61
 23199                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23200  0188D0  6B1C               	clrf	28,b	;volatile
 23201                           
 23202                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23203  0188D2  0E83               	movlw	131
 23204  0188D4  6F14               	movwf	20,b	;volatile
 23205                           
 23206                           ; BSR set to: 61
 23207                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23208  0188D6  0012               	return		;funcret
 23209  0188D8                     __end_of_SPI1_Initialize:
 23210                           	opt callstack 0
 23211                           
 23212 ;; *************** function _PWM8_Initialize *****************
 23213 ;; Defined at:
 23214 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23215 ;; Parameters:    Size  Location     Type
 23216 ;;		None
 23217 ;; Auto vars:     Size  Location     Type
 23218 ;;		None
 23219 ;; Return value:  Size  Location     Type
 23220 ;;                  1  [STACK] void 
 23221 ;; Registers used:
 23222 ;;		wreg, status,2
 23223 ;; Tracked objects:
 23224 ;;		On entry : 3F/39
 23225 ;;		On exit  : 3F/3F
 23226 ;;		Unchanged: 0/0
 23227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23232 ;;Total ram usage:        0 bytes
 23233 ;; Hardware stack levels used:    1
 23234 ;; Hardware stack levels required when called:    6
 23235 ;; This function calls:
 23236 ;;		Nothing
 23237 ;; This function is called by:
 23238 ;;		_SYSTEM_Initialize
 23239 ;; This function uses a reentrant model
 23240 ;;
 23241                           
 23242                           	psect	text103
 23243  0188D8                     __ptext103:
 23244                           	opt callstack 0
 23245  0188D8                     _PWM8_Initialize:
 23246                           	opt callstack 23
 23247                           
 23248                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23249                           
 23250                           ; BSR set to: 61
 23251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23252                           ;incstack = 0
 23253  0188D8  0E80               	movlw	128
 23254  0188DA  6E62               	movwf	98,c	;volatile
 23255                           
 23256                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23257  0188DC  6A61               	clrf	97,c	;volatile
 23258                           
 23259                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23260  0188DE  0E40               	movlw	64
 23261  0188E0  6E60               	movwf	96,c	;volatile
 23262                           
 23263                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23264  0188E2  013F               	movlb	63	; () banked
 23265  0188E4  515F               	movf	95,w,b	;volatile
 23266  0188E6  0B3F               	andlw	-193
 23267  0188E8  0940               	iorlw	64
 23268  0188EA  6F5F               	movwf	95,b	;volatile
 23269                           
 23270                           ; BSR set to: 63
 23271                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23272  0188EC  0012               	return		;funcret
 23273  0188EE                     __end_of_PWM8_Initialize:
 23274                           	opt callstack 0
 23275                           
 23276 ;; *************** function _PMD_Initialize *****************
 23277 ;; Defined at:
 23278 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23279 ;; Parameters:    Size  Location     Type
 23280 ;;		None
 23281 ;; Auto vars:     Size  Location     Type
 23282 ;;		None
 23283 ;; Return value:  Size  Location     Type
 23284 ;;                  1  [STACK] void 
 23285 ;; Registers used:
 23286 ;;		None
 23287 ;; Tracked objects:
 23288 ;;		On entry : 3F/39
 23289 ;;		On exit  : 3F/39
 23290 ;;		Unchanged: 0/0
 23291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23296 ;;Total ram usage:        0 bytes
 23297 ;; Hardware stack levels used:    1
 23298 ;; Hardware stack levels required when called:    6
 23299 ;; This function calls:
 23300 ;;		Nothing
 23301 ;; This function is called by:
 23302 ;;		_SYSTEM_Initialize
 23303 ;; This function uses a reentrant model
 23304 ;;
 23305                           
 23306                           	psect	text104
 23307  018904                     __ptext104:
 23308                           	opt callstack 0
 23309  018904                     _PMD_Initialize:
 23310                           	opt callstack 23
 23311                           
 23312                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23313                           
 23314                           ; BSR set to: 63
 23315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23316                           ;incstack = 0
 23317  018904  0139               	movlb	57	; () banked
 23318  018906  6BC0               	clrf	192,b	;volatile
 23319                           
 23320                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23321  018908  6BC1               	clrf	193,b	;volatile
 23322                           
 23323                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23324  01890A  6BC2               	clrf	194,b	;volatile
 23325                           
 23326                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23327  01890C  6BC3               	clrf	195,b	;volatile
 23328                           
 23329                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23330  01890E  6BC4               	clrf	196,b	;volatile
 23331                           
 23332                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23333  018910  6BC5               	clrf	197,b	;volatile
 23334                           
 23335                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23336  018912  6BC6               	clrf	198,b	;volatile
 23337                           
 23338                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23339  018914  6BC7               	clrf	199,b	;volatile
 23340                           
 23341                           ; BSR set to: 57
 23342                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23343  018916  0012               	return		;funcret
 23344  018918                     __end_of_PMD_Initialize:
 23345                           	opt callstack 0
 23346                           
 23347 ;; *************** function _PIN_MANAGER_Initialize *****************
 23348 ;; Defined at:
 23349 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23350 ;; Parameters:    Size  Location     Type
 23351 ;;		None
 23352 ;; Auto vars:     Size  Location     Type
 23353 ;;		None
 23354 ;; Return value:  Size  Location     Type
 23355 ;;                  1  [STACK] void 
 23356 ;; Registers used:
 23357 ;;		wreg, status,2
 23358 ;; Tracked objects:
 23359 ;;		On entry : 3F/39
 23360 ;;		On exit  : 3F/3A
 23361 ;;		Unchanged: 0/0
 23362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23367 ;;Total ram usage:        0 bytes
 23368 ;; Hardware stack levels used:    1
 23369 ;; Hardware stack levels required when called:    6
 23370 ;; This function calls:
 23371 ;;		Nothing
 23372 ;; This function is called by:
 23373 ;;		_SYSTEM_Initialize
 23374 ;; This function uses a reentrant model
 23375 ;;
 23376                           
 23377                           	psect	text105
 23378  017524                     __ptext105:
 23379                           	opt callstack 0
 23380  017524                     _PIN_MANAGER_Initialize:
 23381                           	opt callstack 23
 23382                           
 23383                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23384                           
 23385                           ; BSR set to: 57
 23386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23387                           ;incstack = 0
 23388  017524  0E07               	movlw	7
 23389  017526  6EBE               	movwf	190,c	;volatile
 23390                           
 23391                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 23392  017528  0E80               	movlw	128
 23393  01752A  6EBD               	movwf	189,c	;volatile
 23394                           
 23395                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23396  01752C  6ABA               	clrf	186,c	;volatile
 23397                           
 23398                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23399  01752E  6ABF               	clrf	191,c	;volatile
 23400                           
 23401                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23402  017530  6ABB               	clrf	187,c	;volatile
 23403                           
 23404                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23405  017532  0E07               	movlw	7
 23406  017534  6EBC               	movwf	188,c	;volatile
 23407                           
 23408                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23409  017536  6AC6               	clrf	198,c	;volatile
 23410                           
 23411                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23412  017538  0E0F               	movlw	15
 23413  01753A  6EC7               	movwf	199,c	;volatile
 23414                           
 23415                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23416  01753C  68C2               	setf	194,c	;volatile
 23417                           
 23418                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23419  01753E  0EBF               	movlw	191
 23420  017540  6EC3               	movwf	195,c	;volatile
 23421                           
 23422                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23423  017542  0E90               	movlw	144
 23424  017544  6EC4               	movwf	196,c	;volatile
 23425                           
 23426                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23427  017546  0E0C               	movlw	12
 23428  017548  6EC5               	movwf	197,c	;volatile
 23429                           
 23430                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23431  01754A  013A               	movlb	58	; () banked
 23432  01754C  6B70               	clrf	112,b	;volatile
 23433                           
 23434                           ; BSR set to: 58
 23435                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23436  01754E  6B60               	clrf	96,b	;volatile
 23437                           
 23438                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23439  017550  0E3C               	movlw	60
 23440  017552  6F50               	movwf	80,b	;volatile
 23441                           
 23442                           ; BSR set to: 58
 23443                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23444  017554  6B80               	clrf	128,b	;volatile
 23445                           
 23446                           ; BSR set to: 58
 23447                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23448  017556  6B90               	clrf	144,b	;volatile
 23449                           
 23450                           ; BSR set to: 58
 23451                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23452  017558  6940               	setf	64,b	;volatile
 23453                           
 23454                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23455  01755A  0E0C               	movlw	12
 23456  01755C  6F71               	movwf	113,b	;volatile
 23457                           
 23458                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23459  01755E  0E0F               	movlw	15
 23460  017560  6F91               	movwf	145,b	;volatile
 23461                           
 23462                           ; BSR set to: 58
 23463                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23464  017562  6B81               	clrf	129,b	;volatile
 23465                           
 23466                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 23467  017564  0E83               	movlw	131
 23468  017566  6F51               	movwf	81,b	;volatile
 23469                           
 23470                           ; BSR set to: 58
 23471                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23472  017568  6B41               	clrf	65,b	;volatile
 23473                           
 23474                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23475  01756A  0E97               	movlw	151
 23476  01756C  6F61               	movwf	97,b	;volatile
 23477                           
 23478                           ; BSR set to: 58
 23479                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23480  01756E  6B82               	clrf	130,b	;volatile
 23481                           
 23482                           ; BSR set to: 58
 23483                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23484  017570  6B92               	clrf	146,b	;volatile
 23485                           
 23486                           ; BSR set to: 58
 23487                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23488  017572  6B42               	clrf	66,b	;volatile
 23489                           
 23490                           ; BSR set to: 58
 23491                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23492  017574  6B52               	clrf	82,b	;volatile
 23493                           
 23494                           ; BSR set to: 58
 23495                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23496  017576  6B62               	clrf	98,b	;volatile
 23497                           
 23498                           ; BSR set to: 58
 23499                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23500  017578  6B72               	clrf	114,b	;volatile
 23501                           
 23502                           ; BSR set to: 58
 23503                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23504  01757A  6943               	setf	67,b	;volatile
 23505                           
 23506                           ; BSR set to: 58
 23507                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23508  01757C  6953               	setf	83,b	;volatile
 23509                           
 23510                           ; BSR set to: 58
 23511                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23512  01757E  6963               	setf	99,b	;volatile
 23513                           
 23514                           ; BSR set to: 58
 23515                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23516  017580  6973               	setf	115,b	;volatile
 23517                           
 23518                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23519  017582  0E07               	movlw	7
 23520  017584  6F83               	movwf	131,b	;volatile
 23521                           
 23522                           ; BSR set to: 58
 23523                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23524  017586  6993               	setf	147,b	;volatile
 23525                           
 23526                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23527  017588  0E0F               	movlw	15
 23528  01758A  6FE8               	movwf	232,b	;volatile
 23529                           
 23530                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23531  01758C  0E13               	movlw	19
 23532  01758E  6FDE               	movwf	222,b	;volatile
 23533                           
 23534                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23535  017590  0E16               	movlw	22
 23536  017592  6F0E               	movwf	14,b	;volatile
 23537                           
 23538                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23539  017594  0E1E               	movlw	30
 23540  017596  6F13               	movwf	19,b	;volatile
 23541                           
 23542                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23543  017598  0E08               	movlw	8
 23544  01759A  6FC0               	movwf	192,b	;volatile
 23545                           
 23546                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23547  01759C  0E10               	movlw	16
 23548  01759E  6F19               	movwf	25,b	;volatile
 23549                           
 23550                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23551  0175A0  0E09               	movlw	9
 23552  0175A2  6FC1               	movwf	193,b	;volatile
 23553                           
 23554                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 23555  0175A4  0E1F               	movlw	31
 23556  0175A6  6F15               	movwf	21,b	;volatile
 23557                           
 23558                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23559  0175A8  0E13               	movlw	19
 23560  0175AA  6F16               	movwf	22,b	;volatile
 23561                           
 23562                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23563  0175AC  0E17               	movlw	23
 23564  0175AE  6FE5               	movwf	229,b	;volatile
 23565                           
 23566                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23567  0175B0  0E14               	movlw	20
 23568  0175B2  6FDF               	movwf	223,b	;volatile
 23569                           
 23570                           ; BSR set to: 58
 23571                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23572  0175B4  0012               	return		;funcret
 23573  0175B6                     __end_of_PIN_MANAGER_Initialize:
 23574                           	opt callstack 0
 23575                           
 23576 ;; *************** function _OSCILLATOR_Initialize *****************
 23577 ;; Defined at:
 23578 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23579 ;; Parameters:    Size  Location     Type
 23580 ;;		None
 23581 ;; Auto vars:     Size  Location     Type
 23582 ;;		None
 23583 ;; Return value:  Size  Location     Type
 23584 ;;                  1  [STACK] void 
 23585 ;; Registers used:
 23586 ;;		wreg, status,2
 23587 ;; Tracked objects:
 23588 ;;		On entry : 3F/3A
 23589 ;;		On exit  : 3F/39
 23590 ;;		Unchanged: 0/0
 23591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23596 ;;Total ram usage:        0 bytes
 23597 ;; Hardware stack levels used:    1
 23598 ;; Hardware stack levels required when called:    6
 23599 ;; This function calls:
 23600 ;;		Nothing
 23601 ;; This function is called by:
 23602 ;;		_SYSTEM_Initialize
 23603 ;; This function uses a reentrant model
 23604 ;;
 23605                           
 23606                           	psect	text106
 23607  0188EE                     __ptext106:
 23608                           	opt callstack 0
 23609  0188EE                     _OSCILLATOR_Initialize:
 23610                           	opt callstack 23
 23611                           
 23612                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23613                           
 23614                           ; BSR set to: 58
 23615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23616                           ;incstack = 0
 23617  0188EE  0E20               	movlw	32
 23618  0188F0  0139               	movlb	57	; () banked
 23619  0188F2  6FD9               	movwf	217,b	;volatile
 23620                           
 23621                           ; BSR set to: 57
 23622                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23623  0188F4  6BDB               	clrf	219,b	;volatile
 23624                           
 23625                           ; BSR set to: 57
 23626                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23627  0188F6  6BDD               	clrf	221,b	;volatile
 23628                           
 23629                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23630  0188F8  0E02               	movlw	2
 23631  0188FA  6FDF               	movwf	223,b	;volatile
 23632                           
 23633                           ; BSR set to: 57
 23634                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23635  0188FC  6BDE               	clrf	222,b	;volatile
 23636  0188FE                     l171:
 23637                           
 23638                           ; BSR set to: 57
 23639                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23640  0188FE  B1DC               	btfsc	220,0,b	;volatile
 23641  018900  0012               	return	
 23642  018902  D7FD               	goto	l171
 23643  018904                     __end_of_OSCILLATOR_Initialize:
 23644                           	opt callstack 0
 23645                           
 23646 ;; *************** function _INTERRUPT_Initialize *****************
 23647 ;; Defined at:
 23648 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23649 ;; Parameters:    Size  Location     Type
 23650 ;;		None
 23651 ;; Auto vars:     Size  Location     Type
 23652 ;;  state           1  [STACK] _Bool 
 23653 ;; Return value:  Size  Location     Type
 23654 ;;                  1  [STACK] void 
 23655 ;; Registers used:
 23656 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23657 ;; Tracked objects:
 23658 ;;		On entry : 0/0
 23659 ;;		On exit  : 3F/39
 23660 ;;		Unchanged: 0/0
 23661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23666 ;;Total ram usage:        0 bytes
 23667 ;; Hardware stack levels used:    1
 23668 ;; Hardware stack levels required when called:    6
 23669 ;; This function calls:
 23670 ;;		Nothing
 23671 ;; This function is called by:
 23672 ;;		_SYSTEM_Initialize
 23673 ;; This function uses a reentrant model
 23674 ;;
 23675                           
 23676                           	psect	text107
 23677  017A0C                     __ptext107:
 23678                           	opt callstack 0
 23679  017A0C                     _INTERRUPT_Initialize:
 23680                           	opt callstack 0
 23681                           
 23682                           ; BSR set to: 57
 23683                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23684  017A0C  52E6               	movf	postinc1,f,c
 23685                           
 23686                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23687                           
 23688                           ;incstack = 0
 23689  017A0E  8AD2               	bsf	210,5,c	;volatile
 23690                           
 23691                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23692  017A10  AED2               	btfss	16338,7,c	;volatile
 23693  017A12  D003               	goto	u8000
 23694  017A14  6A3D               	clrf	(btemp+11)^0,c
 23695  017A16  2A3D               	incf	(btemp+11)^0,f,c
 23696  017A18  D001               	goto	u8018
 23697  017A1A                     u8000:
 23698  017A1A  6A3D               	clrf	(btemp+11)^0,c
 23699  017A1C                     u8018:
 23700                           
 23701                           ;stkvar	_state @ sp[(-1)+0]
 23702  017A1C  0EFF               	movlw	-1
 23703  017A1E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23704                           
 23705                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23706  017A24  9ED2               	bcf	16338,7,c	;volatile
 23707                           
 23708                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23709  017A26  0E55               	movlw	85
 23710  017A28  6ED4               	movwf	212,c	;volatile
 23711                           
 23712                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23713  017A2A  0EAA               	movlw	170
 23714  017A2C  6ED4               	movwf	212,c	;volatile
 23715                           
 23716                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23717  017A2E  90D4               	bcf	212,0,c	;volatile
 23718                           
 23719                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23720  017A30  0138               	movlb	56	; () banked
 23721  017A32  6B9F               	clrf	159,b	;volatile
 23722                           
 23723                           ; BSR set to: 56
 23724                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23725  017A34  6B9E               	clrf	158,b	;volatile
 23726                           
 23727                           ; BSR set to: 56
 23728                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23729  017A36  0E08               	movlw	8
 23730  017A38  6F9D               	movwf	157,b	;volatile
 23731                           
 23732                           ; BSR set to: 56
 23733                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23734  017A3A  0E55               	movlw	85
 23735  017A3C  6ED4               	movwf	212,c	;volatile
 23736                           
 23737                           ; BSR set to: 56
 23738                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23739  017A3E  0EAA               	movlw	170
 23740  017A40  6ED4               	movwf	212,c	;volatile
 23741                           
 23742                           ; BSR set to: 56
 23743                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23744  017A42  80D4               	bsf	212,0,c	;volatile
 23745                           
 23746                           ; BSR set to: 56
 23747                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23748                           ;stkvar	_state @ sp[(-1)+0]
 23749  017A44  0EFF               	movlw	-1
 23750  017A46  B0E3               	btfsc	plusw1,0,c
 23751  017A48  D002               	bra	u8025
 23752  017A4A  9ED2               	bcf	16338,7,c	;volatile
 23753  017A4C  D001               	bra	u8026
 23754  017A4E                     u8025:
 23755  017A4E  8ED2               	bsf	16338,7,c	;volatile
 23756  017A50                     u8026:
 23757                           
 23758                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23759  017A50  0139               	movlb	57	; () banked
 23760  017A52  8782               	bsf	130,3,b	;volatile
 23761                           
 23762                           ; BSR set to: 57
 23763                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23764  017A54  8382               	bsf	130,1,b	;volatile
 23765                           
 23766                           ; BSR set to: 57
 23767                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23768  017A56  8182               	bsf	130,0,b	;volatile
 23769                           
 23770                           ; BSR set to: 57
 23771                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23772  017A58  8582               	bsf	130,2,b	;volatile
 23773                           
 23774                           ; BSR set to: 57
 23775                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23776  017A5A  8786               	bsf	134,3,b	;volatile
 23777                           
 23778                           ; BSR set to: 57
 23779                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23780  017A5C  8586               	bsf	134,2,b	;volatile
 23781                           
 23782                           ; BSR set to: 57
 23783                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23784  017A5E  8983               	bsf	131,4,b	;volatile
 23785                           
 23786                           ; BSR set to: 57
 23787                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23788  017A60  8783               	bsf	131,3,b	;volatile
 23789                           
 23790                           ; BSR set to: 57
 23791                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23792  017A62  8181               	bsf	129,0,b	;volatile
 23793                           
 23794                           ; BSR set to: 57
 23795                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23796  017A64  9185               	bcf	133,0,b	;volatile
 23797                           
 23798                           ; BSR set to: 57
 23799                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23800  017A66  8189               	bsf	137,0,b	;volatile
 23801                           
 23802                           ; BSR set to: 57
 23803                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23804  017A68  9D88               	bcf	136,6,b	;volatile
 23805                           
 23806                           ; BSR set to: 57
 23807                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23808  017A6A  8581               	bsf	129,2,b	;volatile
 23809                           
 23810                           ; BSR set to: 57
 23811                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23812  017A6C  8781               	bsf	129,3,b	;volatile
 23813                           
 23814                           ; BSR set to: 57
 23815                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23816  017A6E  52E5               	movf	postdec1,f,c
 23817  017A70  0012               	return		;funcret
 23818  017A72                     __end_of_INTERRUPT_Initialize:
 23819                           	opt callstack 0
 23820                           
 23821 ;; *************** function _FVR_Initialize *****************
 23822 ;; Defined at:
 23823 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23824 ;; Parameters:    Size  Location     Type
 23825 ;;		None
 23826 ;; Auto vars:     Size  Location     Type
 23827 ;;		None
 23828 ;; Return value:  Size  Location     Type
 23829 ;;                  1  [STACK] void 
 23830 ;; Registers used:
 23831 ;;		wreg, status,2
 23832 ;; Tracked objects:
 23833 ;;		On entry : 3F/39
 23834 ;;		On exit  : 3F/3E
 23835 ;;		Unchanged: 0/0
 23836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23841 ;;Total ram usage:        0 bytes
 23842 ;; Hardware stack levels used:    1
 23843 ;; Hardware stack levels required when called:    6
 23844 ;; This function calls:
 23845 ;;		Nothing
 23846 ;; This function is called by:
 23847 ;;		_SYSTEM_Initialize
 23848 ;; This function uses a reentrant model
 23849 ;;
 23850                           
 23851                           	psect	text108
 23852  0189D2                     __ptext108:
 23853                           	opt callstack 0
 23854  0189D2                     _FVR_Initialize:
 23855                           	opt callstack 23
 23856                           
 23857                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23858                           
 23859                           ; BSR set to: 57
 23860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23861                           ;incstack = 0
 23862  0189D2  0EAF               	movlw	175
 23863  0189D4  013E               	movlb	62	; () banked
 23864  0189D6  6FC1               	movwf	193,b	;volatile
 23865                           
 23866                           ; BSR set to: 62
 23867                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23868  0189D8  0012               	return		;funcret
 23869  0189DA                     __end_of_FVR_Initialize:
 23870                           	opt callstack 0
 23871                           
 23872 ;; *************** function _EXT_INT_Initialize *****************
 23873 ;; Defined at:
 23874 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23875 ;; Parameters:    Size  Location     Type
 23876 ;;		None
 23877 ;; Auto vars:     Size  Location     Type
 23878 ;;		None
 23879 ;; Return value:  Size  Location     Type
 23880 ;;                  1  [STACK] void 
 23881 ;; Registers used:
 23882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23883 ;; Tracked objects:
 23884 ;;		On entry : 3F/3F
 23885 ;;		On exit  : 3F/39
 23886 ;;		Unchanged: 0/0
 23887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23892 ;;Total ram usage:        0 bytes
 23893 ;; Hardware stack levels used:    1
 23894 ;; Hardware stack levels required when called:    7
 23895 ;; This function calls:
 23896 ;;		_INT0_SetInterruptHandler
 23897 ;;		_INT1_SetInterruptHandler
 23898 ;; This function is called by:
 23899 ;;		_SYSTEM_Initialize
 23900 ;; This function uses a reentrant model
 23901 ;;
 23902                           
 23903                           	psect	text109
 23904  018204                     __ptext109:
 23905                           	opt callstack 0
 23906  018204                     _EXT_INT_Initialize:
 23907                           	opt callstack 22
 23908                           
 23909                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23910                           
 23911                           ; BSR set to: 62
 23912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23913                           ;incstack = 0
 23914  018204  0139               	movlb	57	; () banked
 23915  018206  91A1               	bcf	161,0,b	;volatile
 23916                           
 23917                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23918  018208  90D2               	bcf	210,0,c	;volatile
 23919                           
 23920                           ; BSR set to: 57
 23921                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23922  01820A  0EF4               	movlw	low _INT0_DefaultInterruptHandler
 23923  01820C  6EE6               	movwf	postinc1,c
 23924  01820E  0E89               	movlw	high _INT0_DefaultInterruptHandler
 23925  018210  6EE6               	movwf	postinc1,c
 23926  018212  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23927  018214  6EE6               	movwf	postinc1,c
 23928  018216  ECAD  F0C2         	call	_INT0_SetInterruptHandler	;wreg free
 23929                           
 23930                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23931  01821A  0139               	movlb	57	; () banked
 23932  01821C  8191               	bsf	145,0,b	;volatile
 23933                           
 23934                           ; BSR set to: 57
 23935                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23936  01821E  91A5               	bcf	165,0,b	;volatile
 23937                           
 23938                           ; BSR set to: 57
 23939                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23940  018220  92D2               	bcf	210,1,c	;volatile
 23941                           
 23942                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23943  018222  0EF2               	movlw	low _INT1_DefaultInterruptHandler
 23944  018224  6EE6               	movwf	postinc1,c
 23945  018226  0E89               	movlw	high _INT1_DefaultInterruptHandler
 23946  018228  6EE6               	movwf	postinc1,c
 23947  01822A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23948  01822C  6EE6               	movwf	postinc1,c
 23949  01822E  EC99  F0C2         	call	_INT1_SetInterruptHandler	;wreg free
 23950                           
 23951                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23952  018232  0139               	movlb	57	; () banked
 23953  018234  8195               	bsf	149,0,b	;volatile
 23954                           
 23955                           ; BSR set to: 57
 23956                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23957  018236  0012               	return		;funcret
 23958  018238                     __end_of_EXT_INT_Initialize:
 23959                           	opt callstack 0
 23960                           
 23961 ;; *************** function _INT1_SetInterruptHandler *****************
 23962 ;; Defined at:
 23963 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23964 ;; Parameters:    Size  Location     Type
 23965 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23966 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;		None
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  1  [STACK] void 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23973 ;; Tracked objects:
 23974 ;;		On entry : 3F/39
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;Total ram usage:        0 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:    6
 23985 ;; This function calls:
 23986 ;;		Nothing
 23987 ;; This function is called by:
 23988 ;;		_EXT_INT_Initialize
 23989 ;;		_start_switch_handler
 23990 ;; This function uses a reentrant model
 23991 ;;
 23992                           
 23993                           	psect	text110
 23994  018532                     __ptext110:
 23995                           	opt callstack 0
 23996  018532                     _INT1_SetInterruptHandler:
 23997                           	opt callstack 23
 23998                           
 23999                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24000                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24001                           
 24002                           ; BSR set to: 57
 24003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24004                           ;incstack = 0
 24005  018532  50E1               	movf	fsr1l,w,c
 24006  018534  0FFD               	addlw	-3
 24007  018536  6ED9               	movwf	fsr2l,c
 24008  018538  50E2               	movf	fsr1h,w,c
 24009  01853A  6EDA               	movwf	fsr2h,c
 24010  01853C  0EFF               	movlw	255
 24011  01853E  22DA               	addwfc	fsr2h,f,c
 24012  018540  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 24013  018546  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 24014  01854C  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 24015                           
 24016                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24017  018552  52E5               	movf	postdec1,f,c
 24018  018554  52E5               	movf	postdec1,f,c
 24019  018556  52E5               	movf	postdec1,f,c
 24020  018558  0012               	return		;funcret
 24021  01855A                     __end_of_INT1_SetInterruptHandler:
 24022                           	opt callstack 0
 24023                           
 24024 ;; *************** function _INT0_SetInterruptHandler *****************
 24025 ;; Defined at:
 24026 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24027 ;; Parameters:    Size  Location     Type
 24028 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24029 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24030 ;; Auto vars:     Size  Location     Type
 24031 ;;		None
 24032 ;; Return value:  Size  Location     Type
 24033 ;;                  1  [STACK] void 
 24034 ;; Registers used:
 24035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24036 ;; Tracked objects:
 24037 ;;		On entry : 3F/39
 24038 ;;		On exit  : 0/0
 24039 ;;		Unchanged: 0/0
 24040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24045 ;;Total ram usage:        0 bytes
 24046 ;; Hardware stack levels used:    1
 24047 ;; Hardware stack levels required when called:    6
 24048 ;; This function calls:
 24049 ;;		Nothing
 24050 ;; This function is called by:
 24051 ;;		_EXT_INT_Initialize
 24052 ;; This function uses a reentrant model
 24053 ;;
 24054                           
 24055                           	psect	text111
 24056  01855A                     __ptext111:
 24057                           	opt callstack 0
 24058  01855A                     _INT0_SetInterruptHandler:
 24059                           	opt callstack 22
 24060                           
 24061                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24062                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24063                           
 24064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24065                           ;incstack = 0
 24066  01855A  50E1               	movf	fsr1l,w,c
 24067  01855C  0FFD               	addlw	-3
 24068  01855E  6ED9               	movwf	fsr2l,c
 24069  018560  50E2               	movf	fsr1h,w,c
 24070  018562  6EDA               	movwf	fsr2h,c
 24071  018564  0EFF               	movlw	255
 24072  018566  22DA               	addwfc	fsr2h,f,c
 24073  018568  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 24074  01856E  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 24075  018574  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 24076                           
 24077                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24078  01857A  52E5               	movf	postdec1,f,c
 24079  01857C  52E5               	movf	postdec1,f,c
 24080  01857E  52E5               	movf	postdec1,f,c
 24081  018580  0012               	return		;funcret
 24082  018582                     __end_of_INT0_SetInterruptHandler:
 24083                           	opt callstack 0
 24084                           
 24085 ;; *************** function _DMA2_Initialize *****************
 24086 ;; Defined at:
 24087 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24088 ;; Parameters:    Size  Location     Type
 24089 ;;		None
 24090 ;; Auto vars:     Size  Location     Type
 24091 ;;		None
 24092 ;; Return value:  Size  Location     Type
 24093 ;;                  1  [STACK] void 
 24094 ;; Registers used:
 24095 ;;		wreg, status,2
 24096 ;; Tracked objects:
 24097 ;;		On entry : 3F/3D
 24098 ;;		On exit  : 3F/3B
 24099 ;;		Unchanged: 0/0
 24100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24105 ;;Total ram usage:        0 bytes
 24106 ;; Hardware stack levels used:    1
 24107 ;; Hardware stack levels required when called:    6
 24108 ;; This function calls:
 24109 ;;		Nothing
 24110 ;; This function is called by:
 24111 ;;		_SYSTEM_Initialize
 24112 ;; This function uses a reentrant model
 24113 ;;
 24114                           
 24115                           	psect	text112
 24116  017D12                     __ptext112:
 24117                           	opt callstack 0
 24118  017D12                     _DMA2_Initialize:
 24119                           	opt callstack 23
 24120                           
 24121                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24122                           
 24123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24124                           ;incstack = 0
 24125  017D12  0E00               	movlw	0
 24126  017D14  013B               	movlb	59	; () banked
 24127  017D16  6FD9               	movwf	217,b	;volatile
 24128  017D18  0E10               	movlw	16
 24129  017D1A  6FDA               	movwf	218,b	;volatile
 24130  017D1C  0E00               	movlw	0
 24131  017D1E  6FDB               	movwf	219,b	;volatile
 24132                           
 24133                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24134  017D20  0E3F               	movlw	63
 24135  017D22  6FD1               	movwf	209,b	;volatile
 24136  017D24  0EBB               	movlw	187
 24137  017D26  6FD0               	movwf	208,b	;volatile
 24138                           
 24139                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24140  017D28  0E03               	movlw	3
 24141  017D2A  6FDD               	movwf	221,b	;volatile
 24142                           
 24143                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24144  017D2C  0E00               	movlw	0
 24145  017D2E  6FD8               	movwf	216,b	;volatile
 24146  017D30  0E01               	movlw	1
 24147  017D32  6FD7               	movwf	215,b	;volatile
 24148                           
 24149                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24150  017D34  0E00               	movlw	0
 24151  017D36  6FCF               	movwf	207,b	;volatile
 24152  017D38  0E01               	movlw	1
 24153  017D3A  6FCE               	movwf	206,b	;volatile
 24154                           
 24155                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24156  017D3C  0E46               	movlw	70
 24157  017D3E  6FDF               	movwf	223,b	;volatile
 24158                           
 24159                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24160  017D40  0E3D               	movlw	61
 24161  017D42  6FDE               	movwf	222,b	;volatile
 24162                           
 24163                           ; BSR set to: 59
 24164                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24165  017D44  0139               	movlb	57	; () banked
 24166  017D46  97A5               	bcf	165,3,b	;volatile
 24167                           
 24168                           ; BSR set to: 57
 24169                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24170  017D48  95A5               	bcf	165,2,b	;volatile
 24171                           
 24172                           ; BSR set to: 57
 24173                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24174  017D4A  9BA5               	bcf	165,5,b	;volatile
 24175                           
 24176                           ; BSR set to: 57
 24177                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24178  017D4C  99A5               	bcf	165,4,b	;volatile
 24179                           
 24180                           ; BSR set to: 57
 24181                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24182  017D4E  9795               	bcf	149,3,b	;volatile
 24183                           
 24184                           ; BSR set to: 57
 24185                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24186  017D50  9595               	bcf	149,2,b	;volatile
 24187                           
 24188                           ; BSR set to: 57
 24189                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24190  017D52  9B95               	bcf	149,5,b	;volatile
 24191                           
 24192                           ; BSR set to: 57
 24193                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24194  017D54  9995               	bcf	149,4,b	;volatile
 24195  017D56  9ED2               	bcf	16338,7,c	;# 
 24196  017D58  0139               	banksel	14831	;# 
 24197  017D5A  0E55               	movlw	85	;# 
 24198  017D5C  6FEF               	movwf	14831,b	;# 
 24199  017D5E  0EAA               	movlw	170	;# 
 24200  017D60  6FEF               	movwf	14831,b	;# 
 24201  017D62  81EF               	bsf	14831,0,b	;# 
 24202  017D64  8ED2               	bsf	16338,7,c	;# 
 24203                           
 24204                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24205  017D66  013B               	movlb	59	; () banked
 24206  017D68  6BDC               	clrf	220,b	;volatile
 24207                           
 24208                           ; BSR set to: 59
 24209                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24210  017D6A  0012               	return		;funcret
 24211  017D6C                     __end_of_DMA2_Initialize:
 24212                           	opt callstack 0
 24213                           
 24214 ;; *************** function _DMA1_Initialize *****************
 24215 ;; Defined at:
 24216 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24217 ;; Parameters:    Size  Location     Type
 24218 ;;		None
 24219 ;; Auto vars:     Size  Location     Type
 24220 ;;		None
 24221 ;; Return value:  Size  Location     Type
 24222 ;;                  1  [STACK] void 
 24223 ;; Registers used:
 24224 ;;		wreg, status,2
 24225 ;; Tracked objects:
 24226 ;;		On entry : 3F/3B
 24227 ;;		On exit  : 3F/3B
 24228 ;;		Unchanged: 0/0
 24229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24234 ;;Total ram usage:        0 bytes
 24235 ;; Hardware stack levels used:    1
 24236 ;; Hardware stack levels required when called:    6
 24237 ;; This function calls:
 24238 ;;		Nothing
 24239 ;; This function is called by:
 24240 ;;		_SYSTEM_Initialize
 24241 ;; This function uses a reentrant model
 24242 ;;
 24243                           
 24244                           	psect	text113
 24245  0178CE                     __ptext113:
 24246                           	opt callstack 0
 24247  0178CE                     _DMA1_Initialize:
 24248                           	opt callstack 23
 24249                           
 24250                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24251                           
 24252                           ; BSR set to: 59
 24253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24254                           ;incstack = 0
 24255  0178CE  0E00               	movlw	0
 24256  0178D0  013B               	movlb	59	; () banked
 24257  0178D2  6FF9               	movwf	249,b	;volatile
 24258  0178D4  0E10               	movlw	16
 24259  0178D6  6FFA               	movwf	250,b	;volatile
 24260  0178D8  0E00               	movlw	0
 24261  0178DA  6FFB               	movwf	251,b	;volatile
 24262                           
 24263                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24264  0178DC  0E3D               	movlw	61
 24265  0178DE  6FF1               	movwf	241,b	;volatile
 24266  0178E0  0E11               	movlw	17
 24267  0178E2  6FF0               	movwf	240,b	;volatile
 24268                           
 24269                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24270  0178E4  0E03               	movlw	3
 24271  0178E6  6FFD               	movwf	253,b	;volatile
 24272                           
 24273                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24274  0178E8  0E00               	movlw	0
 24275  0178EA  6FF8               	movwf	248,b	;volatile
 24276  0178EC  0E01               	movlw	1
 24277  0178EE  6FF7               	movwf	247,b	;volatile
 24278                           
 24279                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24280  0178F0  0E00               	movlw	0
 24281  0178F2  6FEF               	movwf	239,b	;volatile
 24282  0178F4  0E01               	movlw	1
 24283  0178F6  6FEE               	movwf	238,b	;volatile
 24284                           
 24285                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24286  0178F8  0E15               	movlw	21
 24287  0178FA  6FFF               	movwf	255,b	;volatile
 24288                           
 24289                           ; BSR set to: 59
 24290                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24291  0178FC  6BFE               	clrf	254,b	;volatile
 24292                           
 24293                           ; BSR set to: 59
 24294                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24295  0178FE  0139               	movlb	57	; () banked
 24296  017900  93A2               	bcf	162,1,b	;volatile
 24297                           
 24298                           ; BSR set to: 57
 24299                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24300  017902  91A2               	bcf	162,0,b	;volatile
 24301                           
 24302                           ; BSR set to: 57
 24303                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24304  017904  97A2               	bcf	162,3,b	;volatile
 24305                           
 24306                           ; BSR set to: 57
 24307                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24308  017906  95A2               	bcf	162,2,b	;volatile
 24309                           
 24310                           ; BSR set to: 57
 24311                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24312  017908  8392               	bsf	146,1,b	;volatile
 24313                           
 24314                           ; BSR set to: 57
 24315                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24316  01790A  8192               	bsf	146,0,b	;volatile
 24317                           
 24318                           ; BSR set to: 57
 24319                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24320  01790C  8792               	bsf	146,3,b	;volatile
 24321                           
 24322                           ; BSR set to: 57
 24323                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24324  01790E  8592               	bsf	146,2,b	;volatile
 24325                           
 24326                           ; BSR set to: 57
 24327                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24328  017910  6BF1               	clrf	241,b	;volatile
 24329                           
 24330                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24331  017912  0E01               	movlw	1
 24332  017914  6FF2               	movwf	242,b	;volatile
 24333                           
 24334                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24335  017916  0E04               	movlw	4
 24336  017918  6FF3               	movwf	243,b	;volatile
 24337                           
 24338                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24339  01791A  0E02               	movlw	2
 24340  01791C  6FF4               	movwf	244,b	;volatile
 24341                           
 24342                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24343  01791E  0E03               	movlw	3
 24344  017920  6FF7               	movwf	247,b	;volatile
 24345  017922  9ED2               	bcf	16338,7,c	;# 
 24346  017924  0139               	banksel	14831	;# 
 24347  017926  0E55               	movlw	85	;# 
 24348  017928  6FEF               	movwf	14831,b	;# 
 24349  01792A  0EAA               	movlw	170	;# 
 24350  01792C  6FEF               	movwf	14831,b	;# 
 24351  01792E  81EF               	bsf	14831,0,b	;# 
 24352  017930  8ED2               	bsf	16338,7,c	;# 
 24353                           
 24354                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24355  017932  013B               	movlb	59	; () banked
 24356  017934  6BFC               	clrf	252,b	;volatile
 24357                           
 24358                           ; BSR set to: 59
 24359                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24360  017936  0012               	return		;funcret
 24361  017938                     __end_of_DMA1_Initialize:
 24362                           	opt callstack 0
 24363                           
 24364 ;; *************** function _CLKREF_Initialize *****************
 24365 ;; Defined at:
 24366 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24367 ;; Parameters:    Size  Location     Type
 24368 ;;		None
 24369 ;; Auto vars:     Size  Location     Type
 24370 ;;		None
 24371 ;; Return value:  Size  Location     Type
 24372 ;;                  1  [STACK] void 
 24373 ;; Registers used:
 24374 ;;		wreg, status,2
 24375 ;; Tracked objects:
 24376 ;;		On entry : 3F/3B
 24377 ;;		On exit  : 3F/3C
 24378 ;;		Unchanged: 0/0
 24379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24384 ;;Total ram usage:        0 bytes
 24385 ;; Hardware stack levels used:    1
 24386 ;; Hardware stack levels required when called:    6
 24387 ;; This function calls:
 24388 ;;		Nothing
 24389 ;; This function is called by:
 24390 ;;		_SYSTEM_Initialize
 24391 ;; This function uses a reentrant model
 24392 ;;
 24393                           
 24394                           	psect	text114
 24395  018986                     __ptext114:
 24396                           	opt callstack 0
 24397  018986                     _CLKREF_Initialize:
 24398                           	opt callstack 23
 24399                           
 24400                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24401                           
 24402                           ; BSR set to: 59
 24403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24404                           ;incstack = 0
 24405  018986  013C               	movlb	60	; () banked
 24406  018988  6BE6               	clrf	230,b	;volatile
 24407                           
 24408                           ; BSR set to: 60
 24409                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24410  01898A  0E94               	movlw	148
 24411  01898C  6FE5               	movwf	229,b	;volatile
 24412                           
 24413                           ; BSR set to: 60
 24414                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24415  01898E  0012               	return		;funcret
 24416  018990                     __end_of_CLKREF_Initialize:
 24417                           	opt callstack 0
 24418                           
 24419 ;; *************** function _ADCC_Initialize *****************
 24420 ;; Defined at:
 24421 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24422 ;; Parameters:    Size  Location     Type
 24423 ;;		None
 24424 ;; Auto vars:     Size  Location     Type
 24425 ;;		None
 24426 ;; Return value:  Size  Location     Type
 24427 ;;                  1  [STACK] void 
 24428 ;; Registers used:
 24429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24430 ;; Tracked objects:
 24431 ;;		On entry : 3F/3E
 24432 ;;		On exit  : 0/0
 24433 ;;		Unchanged: 0/0
 24434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24439 ;;Total ram usage:        0 bytes
 24440 ;; Hardware stack levels used:    1
 24441 ;; Hardware stack levels required when called:    7
 24442 ;; This function calls:
 24443 ;;		_ADCC_SetADIInterruptHandler
 24444 ;;		_ADCC_SetADTIInterruptHandler
 24445 ;; This function is called by:
 24446 ;;		_SYSTEM_Initialize
 24447 ;; This function uses a reentrant model
 24448 ;;
 24449                           
 24450                           	psect	text115
 24451  017938                     __ptext115:
 24452                           	opt callstack 0
 24453  017938                     _ADCC_Initialize:
 24454                           	opt callstack 22
 24455                           
 24456                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24457                           
 24458                           ; BSR set to: 60
 24459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24460                           ;incstack = 0
 24461  017938  013E               	movlb	62	; () banked
 24462  01793A  6BDE               	clrf	222,b	;volatile
 24463                           
 24464                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24465  01793C  6BDF               	clrf	223,b	;volatile
 24466                           
 24467                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24468  01793E  6BE0               	clrf	224,b	;volatile
 24469                           
 24470                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24471  017940  6BE1               	clrf	225,b	;volatile
 24472                           
 24473                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24474  017942  6BE4               	clrf	228,b	;volatile
 24475                           
 24476                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24477  017944  6BE5               	clrf	229,b	;volatile
 24478                           
 24479                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24480  017946  6BEA               	clrf	234,b	;volatile
 24481                           
 24482                           ; BSR set to: 62
 24483                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24484  017948  0E40               	movlw	64
 24485  01794A  6FEC               	movwf	236,b	;volatile
 24486                           
 24487                           ; BSR set to: 62
 24488                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24489  01794C  6BF1               	clrf	241,b	;volatile
 24490                           
 24491                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 24492  01794E  0E20               	movlw	32
 24493  017950  6FF3               	movwf	243,b	;volatile
 24494                           
 24495                           ; BSR set to: 62
 24496                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24497  017952  6BF4               	clrf	244,b	;volatile
 24498                           
 24499                           ; BSR set to: 62
 24500                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24501  017954  6BF5               	clrf	245,b	;volatile
 24502                           
 24503                           ; BSR set to: 62
 24504                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24505  017956  6BF6               	clrf	246,b	;volatile
 24506                           
 24507                           ; BSR set to: 62
 24508                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24509  017958  6BF7               	clrf	247,b	;volatile
 24510                           
 24511                           ; BSR set to: 62
 24512                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24513  01795A  6BF9               	clrf	249,b	;volatile
 24514                           
 24515                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24516  01795C  0E5B               	movlw	91
 24517  01795E  6FFA               	movwf	250,b	;volatile
 24518                           
 24519                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24520  017960  0E27               	movlw	39
 24521  017962  6FFB               	movwf	251,b	;volatile
 24522                           
 24523                           ; BSR set to: 62
 24524                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24525  017964  6BFC               	clrf	252,b	;volatile
 24526                           
 24527                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24528  017966  0E02               	movlw	2
 24529  017968  6FFD               	movwf	253,b	;volatile
 24530                           
 24531                           ; BSR set to: 62
 24532                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24533  01796A  6BFE               	clrf	254,b	;volatile
 24534                           
 24535                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 24536  01796C  0E07               	movlw	7
 24537  01796E  6FFF               	movwf	255,b	;volatile
 24538                           
 24539                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 24540  017970  0E84               	movlw	132
 24541  017972  6FF8               	movwf	248,b	;volatile
 24542                           
 24543                           ; BSR set to: 62
 24544                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24545  017974  0139               	movlb	57	; () banked
 24546  017976  95A1               	bcf	161,2,b	;volatile
 24547                           
 24548                           ; BSR set to: 57
 24549                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24550  017978  8591               	bsf	145,2,b	;volatile
 24551                           
 24552                           ; BSR set to: 57
 24553                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 24554  01797A  0EF6               	movlw	low _ADCC_DefaultInterruptHandler
 24555  01797C  6EE6               	movwf	postinc1,c
 24556  01797E  0E89               	movlw	high _ADCC_DefaultInterruptHandler
 24557  017980  6EE6               	movwf	postinc1,c
 24558  017982  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24559  017984  6EE6               	movwf	postinc1,c
 24560  017986  ECD5  F0C2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24561                           
 24562                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24563  01798A  0139               	movlb	57	; () banked
 24564  01798C  97A1               	bcf	161,3,b	;volatile
 24565                           
 24566                           ; BSR set to: 57
 24567                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24568  01798E  8791               	bsf	145,3,b	;volatile
 24569                           
 24570                           ; BSR set to: 57
 24571                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24572  017990  0EF6               	movlw	low _ADCC_DefaultInterruptHandler
 24573  017992  6EE6               	movwf	postinc1,c
 24574  017994  0E89               	movlw	high _ADCC_DefaultInterruptHandler
 24575  017996  6EE6               	movwf	postinc1,c
 24576  017998  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24577  01799A  6EE6               	movwf	postinc1,c
 24578  01799C  ECC1  F0C2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24579                           
 24580                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24581  0179A0  0012               	return		;funcret
 24582  0179A2                     __end_of_ADCC_Initialize:
 24583                           	opt callstack 0
 24584                           
 24585 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24586 ;; Defined at:
 24587 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24588 ;; Parameters:    Size  Location     Type
 24589 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24590 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24591 ;; Auto vars:     Size  Location     Type
 24592 ;;		None
 24593 ;; Return value:  Size  Location     Type
 24594 ;;                  1  [STACK] void 
 24595 ;; Registers used:
 24596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24597 ;; Tracked objects:
 24598 ;;		On entry : 0/0
 24599 ;;		On exit  : 0/0
 24600 ;;		Unchanged: 0/0
 24601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24606 ;;Total ram usage:        0 bytes
 24607 ;; Hardware stack levels used:    1
 24608 ;; Hardware stack levels required when called:    6
 24609 ;; This function calls:
 24610 ;;		Nothing
 24611 ;; This function is called by:
 24612 ;;		_ADCC_Initialize
 24613 ;;		_start_adc_scan
 24614 ;; This function uses a reentrant model
 24615 ;;
 24616                           
 24617                           	psect	text116
 24618  018582                     __ptext116:
 24619                           	opt callstack 0
 24620  018582                     _ADCC_SetADTIInterruptHandler:
 24621                           	opt callstack 23
 24622                           
 24623                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24624                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24625                           
 24626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24627                           ;incstack = 0
 24628  018582  50E1               	movf	fsr1l,w,c
 24629  018584  0FFD               	addlw	-3
 24630  018586  6ED9               	movwf	fsr2l,c
 24631  018588  50E2               	movf	fsr1h,w,c
 24632  01858A  6EDA               	movwf	fsr2h,c
 24633  01858C  0EFF               	movlw	255
 24634  01858E  22DA               	addwfc	fsr2h,f,c
 24635  018590  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24636  018596  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24637  01859C  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24638                           
 24639                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24640  0185A2  52E5               	movf	postdec1,f,c
 24641  0185A4  52E5               	movf	postdec1,f,c
 24642  0185A6  52E5               	movf	postdec1,f,c
 24643  0185A8  0012               	return		;funcret
 24644  0185AA                     __end_of_ADCC_SetADTIInterruptHandler:
 24645                           	opt callstack 0
 24646                           
 24647 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24648 ;; Defined at:
 24649 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24650 ;; Parameters:    Size  Location     Type
 24651 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24652 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24653 ;; Auto vars:     Size  Location     Type
 24654 ;;		None
 24655 ;; Return value:  Size  Location     Type
 24656 ;;                  1  [STACK] void 
 24657 ;; Registers used:
 24658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24659 ;; Tracked objects:
 24660 ;;		On entry : 6/0
 24661 ;;		On exit  : 0/0
 24662 ;;		Unchanged: 0/0
 24663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24668 ;;Total ram usage:        0 bytes
 24669 ;; Hardware stack levels used:    1
 24670 ;; Hardware stack levels required when called:    6
 24671 ;; This function calls:
 24672 ;;		Nothing
 24673 ;; This function is called by:
 24674 ;;		_ADCC_Initialize
 24675 ;;		_start_adc_scan
 24676 ;; This function uses a reentrant model
 24677 ;;
 24678                           
 24679                           	psect	text117
 24680  0185AA                     __ptext117:
 24681                           	opt callstack 0
 24682  0185AA                     _ADCC_SetADIInterruptHandler:
 24683                           	opt callstack 23
 24684                           
 24685                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24686                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24687                           
 24688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24689                           ;incstack = 0
 24690  0185AA  50E1               	movf	fsr1l,w,c
 24691  0185AC  0FFD               	addlw	-3
 24692  0185AE  6ED9               	movwf	fsr2l,c
 24693  0185B0  50E2               	movf	fsr1h,w,c
 24694  0185B2  6EDA               	movwf	fsr2h,c
 24695  0185B4  0EFF               	movlw	255
 24696  0185B6  22DA               	addwfc	fsr2h,f,c
 24697  0185B8  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24698  0185BE  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24699  0185C4  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24700                           
 24701                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24702  0185CA  52E5               	movf	postdec1,f,c
 24703  0185CC  52E5               	movf	postdec1,f,c
 24704  0185CE  52E5               	movf	postdec1,f,c
 24705  0185D0  0012               	return		;funcret
 24706  0185D2                     __end_of_ADCC_SetADIInterruptHandler:
 24707                           	opt callstack 0
 24708                           
 24709 ;; *************** function _INT1_ISR *****************
 24710 ;; Defined at:
 24711 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24712 ;; Parameters:    Size  Location     Type
 24713 ;;		None
 24714 ;; Auto vars:     Size  Location     Type
 24715 ;;		None
 24716 ;; Return value:  Size  Location     Type
 24717 ;;                  1    wreg      void 
 24718 ;; Registers used:
 24719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24720 ;; Tracked objects:
 24721 ;;		On entry : 0/0
 24722 ;;		On exit  : 0/0
 24723 ;;		Unchanged: 0/0
 24724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24727 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24728 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24729 ;;Total ram usage:        4 bytes
 24730 ;; Hardware stack levels used:    1
 24731 ;; Hardware stack levels required when called:    5
 24732 ;; This function calls:
 24733 ;;		_INT1_CallBack
 24734 ;; This function is called by:
 24735 ;;		Interrupt level 1
 24736 ;; This function uses a non-reentrant model
 24737 ;;
 24738                           
 24739                           	psect	text118
 24740  01807C                     __ptext118:
 24741                           	opt callstack 0
 24742  01807C                     _INT1_ISR:
 24743                           	opt callstack 12
 24744                           
 24745                           ;incstack = 0
 24746  01807C  006F FF60  F0FC    	movff	status,??_INT1_ISR
 24747  018082  0060  F0C8  F0FD   	movff	btemp,??_INT1_ISR+1
 24748  018088  0060  F0F0  F0FE   	movff	btemp+10,??_INT1_ISR+2
 24749  01808E  0060  F0F4  F0FF   	movff	btemp+11,??_INT1_ISR+3
 24750  018094  EE16  F000         	lfsr	1,___intlo_sp
 24751                           
 24752                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24753  018098  0139               	movlb	57	; () banked
 24754  01809A  91A5               	bcf	165,0,b	;volatile
 24755                           
 24756                           ; BSR set to: 57
 24757                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24758  01809C  EC95  F0C3         	call	_INT1_CallBack	;wreg free
 24759  0180A0  0060  F3FC  F03D   	movff	??_INT1_ISR+3,btemp+11
 24760  0180A6  0060  F3F8  F03C   	movff	??_INT1_ISR+2,btemp+10
 24761  0180AC  0060  F3F4  F032   	movff	??_INT1_ISR+1,btemp
 24762  0180B2  0060  F3F3  FFD8   	movff	??_INT1_ISR,status
 24763  0180B8  0011               	retfie		f
 24764  0180BA                     __end_of_INT1_ISR:
 24765                           	opt callstack 0
 24766                           
 24767 ;; *************** function _INT1_CallBack *****************
 24768 ;; Defined at:
 24769 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24770 ;; Parameters:    Size  Location     Type
 24771 ;;		None
 24772 ;; Auto vars:     Size  Location     Type
 24773 ;;		None
 24774 ;; Return value:  Size  Location     Type
 24775 ;;                  1  [STACK] void 
 24776 ;; Registers used:
 24777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24778 ;; Tracked objects:
 24779 ;;		On entry : 3F/39
 24780 ;;		On exit  : 0/0
 24781 ;;		Unchanged: 0/0
 24782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24787 ;;Total ram usage:        0 bytes
 24788 ;; Hardware stack levels used:    1
 24789 ;; Hardware stack levels required when called:    4
 24790 ;; This function calls:
 24791 ;;		Absolute function
 24792 ;;		_INT1_DefaultInterruptHandler
 24793 ;;		_switch_handler
 24794 ;; This function is called by:
 24795 ;;		_INT1_ISR
 24796 ;; This function uses a reentrant model
 24797 ;;
 24798                           
 24799                           	psect	text119
 24800  01872A                     __ptext119:
 24801                           	opt callstack 0
 24802  01872A                     _INT1_CallBack:
 24803                           	opt callstack 12
 24804                           
 24805                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24806                           
 24807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24808                           ;incstack = 0
 24809  01872A  5013               	movf	_INT1_InterruptHandler^0,w,c
 24810  01872C  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24811  01872E  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24812  018730  B4D8               	btfsc	status,2,c
 24813  018732  0012               	return	
 24814                           
 24815                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24816  018734  D801               	call	u845_28
 24817  018736  0012               	return	
 24818  018738                     u845_28:
 24819  018738  0005               	push	
 24820  01873A  6EFA               	movwf	pclath,c
 24821  01873C  5013               	movf	_INT1_InterruptHandler^0,w,c
 24822  01873E  6EFD               	movwf	tosl,c
 24823  018740  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24824  018742  6EFE               	movwf	tosh,c
 24825  018744  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24826  018746  6EFF               	movwf	tosu,c
 24827  018748  50FA               	movf	pclath,w,c
 24828  01874A  0012               	return		;indir
 24829  01874C                     __end_of_INT1_CallBack:
 24830                           	opt callstack 0
 24831                           
 24832 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24833 ;; Defined at:
 24834 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24835 ;; Parameters:    Size  Location     Type
 24836 ;;		None
 24837 ;; Auto vars:     Size  Location     Type
 24838 ;;		None
 24839 ;; Return value:  Size  Location     Type
 24840 ;;                  1  [STACK] void 
 24841 ;; Registers used:
 24842 ;;		None
 24843 ;; Tracked objects:
 24844 ;;		On entry : 0/39
 24845 ;;		On exit  : 0/0
 24846 ;;		Unchanged: 0/0
 24847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24852 ;;Total ram usage:        0 bytes
 24853 ;; Hardware stack levels used:    1
 24854 ;; Hardware stack levels required when called:    3
 24855 ;; This function calls:
 24856 ;;		Nothing
 24857 ;; This function is called by:
 24858 ;;		_EXT_INT_Initialize
 24859 ;;		_INT1_CallBack
 24860 ;; This function uses a reentrant model
 24861 ;;
 24862                           
 24863                           	psect	text120
 24864  0189F2                     __ptext120:
 24865                           	opt callstack 0
 24866  0189F2                     _INT1_DefaultInterruptHandler:
 24867                           	opt callstack 12
 24868                           
 24869                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24870                           
 24871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24872                           ;incstack = 0
 24873  0189F2  0012               	return		;funcret
 24874  0189F4                     __end_of_INT1_DefaultInterruptHandler:
 24875                           	opt callstack 0
 24876                           
 24877 ;; *************** function _switch_handler *****************
 24878 ;; Defined at:
 24879 ;;		line 58 in file "dio.c"
 24880 ;; Parameters:    Size  Location     Type
 24881 ;;		None
 24882 ;; Auto vars:     Size  Location     Type
 24883 ;;  i               1  [STACK] unsigned char 
 24884 ;;  sw_value        1  [STACK] unsigned char 
 24885 ;; Return value:  Size  Location     Type
 24886 ;;                  1  [STACK] void 
 24887 ;; Registers used:
 24888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24889 ;; Tracked objects:
 24890 ;;		On entry : 0/39
 24891 ;;		On exit  : 0/0
 24892 ;;		Unchanged: 0/0
 24893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24898 ;;Total ram usage:        0 bytes
 24899 ;; Hardware stack levels used:    1
 24900 ;; Hardware stack levels required when called:    3
 24901 ;; This function calls:
 24902 ;;		Nothing
 24903 ;; This function is called by:
 24904 ;;		_start_switch_handler
 24905 ;;		_INT1_CallBack
 24906 ;; This function uses a reentrant model
 24907 ;;
 24908                           
 24909                           	psect	text121
 24910  0164B4                     __ptext121:
 24911                           	opt callstack 0
 24912  0164B4                     _switch_handler:
 24913                           	opt callstack 0
 24914                           
 24915                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24916  0164B4  52E6               	movf	postinc1,f,c
 24917  0164B6  52E6               	movf	postinc1,f,c
 24918                           
 24919                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24920                           ;stkvar	_i @ sp[(-2)+0]
 24921                           
 24922                           ;incstack = 0
 24923  0164B8  0EFE               	movlw	-2
 24924  0164BA  6AE3               	clrf	plusw1,c
 24925  0164BC  9EBD               	bcf	189,7,c	;volatile
 24926  0164BE  82BE               	bsf	190,1,c	;volatile
 24927                           
 24928                           ;dio.c: 72:  __nop();
 24929  0164C0  F000               	nop	
 24930                           
 24931                           ;dio.c: 73:  __nop();
 24932  0164C2  F000               	nop	
 24933                           
 24934                           ;dio.c: 74:  __nop();
 24935  0164C4  F000               	nop	
 24936  0164C6  D019               	goto	l8808
 24937  0164C8                     l8796:
 24938                           
 24939                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24940  0164C8  A6CF               	btfss	207,3,c	;volatile
 24941  0164CA  D011               	goto	u831_20
 24942  0164CC  D00D               	goto	u831_21
 24943  0164CE                     u828_28:
 24944                           
 24945                           ;stkvar	_sw_value @ sp[(-2)+1]
 24946  0164CE  0EFF               	movlw	-1
 24947  0164D0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24948                           
 24949                           ;dio.c: 80:    break;
 24950  0164D6  D027               	goto	l8810
 24951  0164D8                     l8798:
 24952                           
 24953                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24954  0164D8  A4CF               	btfss	207,2,c	;volatile
 24955  0164DA  D009               	goto	u831_20
 24956  0164DC  D005               	goto	u831_21
 24957  0164DE                     l8800:
 24958                           
 24959                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24960  0164DE  A2CF               	btfss	207,1,c	;volatile
 24961  0164E0  D006               	goto	u831_20
 24962  0164E2  D002               	goto	u831_21
 24963  0164E4                     l8802:
 24964                           
 24965                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24966  0164E4  A0CF               	btfss	207,0,c	;volatile
 24967  0164E6  D003               	goto	u831_20
 24968  0164E8                     u831_21:
 24969  0164E8  6A3D               	clrf	(btemp+11)^0,c
 24970  0164EA  2A3D               	incf	(btemp+11)^0,f,c
 24971  0164EC  D7F0               	goto	u828_28
 24972  0164EE                     u831_20:
 24973  0164EE  6A3D               	clrf	(btemp+11)^0,c
 24974  0164F0  D7EE               	goto	u828_28
 24975  0164F2                     l8804:
 24976                           
 24977                           ;dio.c: 91:    sw_value = 1;
 24978                           ;stkvar	_sw_value @ sp[(-2)+1]
 24979  0164F2  0EFF               	movlw	-1
 24980  0164F4  6AE3               	clrf	plusw1,c
 24981  0164F6  2AE3               	incf	plusw1,f,c
 24982                           
 24983                           ;dio.c: 92:    break;
 24984  0164F8  D016               	goto	l8810
 24985  0164FA                     l8808:
 24986                           
 24987                           ;stkvar	_i @ sp[(-2)+0]
 24988  0164FA  0EFE               	movlw	-2
 24989  0164FC  50E3               	movf	plusw1,w,c
 24990  0164FE  6E3C               	movwf	(btemp+10)^0,c
 24991  016500  6A3D               	clrf	(btemp+11)^0,c
 24992                           
 24993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24994                           ; Switch size 1, requested type "simple"
 24995                           ; Number of cases is 1, Range of values is 0 to 0
 24996                           ; switch strategies available:
 24997                           ; Name         Instructions Cycles
 24998                           ; simple_byte            4     3 (average)
 24999                           ;	Chosen strategy is simple_byte
 25000  016502  503D               	movf	(btemp+11)^0,w,c
 25001  016504  0A00               	xorlw	0	; case 0
 25002  016506  A4D8               	btfss	status,2,c
 25003  016508  D7F4               	goto	l8804
 25004                           
 25005                           ; Switch size 1, requested type "simple"
 25006                           ; Number of cases is 4, Range of values is 0 to 3
 25007                           ; switch strategies available:
 25008                           ; Name         Instructions Cycles
 25009                           ; simple_byte           13     7 (average)
 25010                           ;	Chosen strategy is simple_byte
 25011  01650A  503C               	movf	(btemp+10)^0,w,c
 25012  01650C  0A00               	xorlw	0	; case 0
 25013  01650E  B4D8               	btfsc	status,2,c
 25014  016510  D7E9               	goto	l8802
 25015  016512  0A01               	xorlw	1	; case 1
 25016  016514  B4D8               	btfsc	status,2,c
 25017  016516  D7E3               	goto	l8800
 25018  016518  0A03               	xorlw	3	; case 2
 25019  01651A  B4D8               	btfsc	status,2,c
 25020  01651C  D7DD               	goto	l8798
 25021  01651E  0A01               	xorlw	1	; case 3
 25022  016520  B4D8               	btfsc	status,2,c
 25023  016522  D7D2               	goto	l8796
 25024  016524  D7E6               	goto	l8804
 25025  016526                     l8810:
 25026                           
 25027                           ;dio.c: 96:   if (sw_value) {
 25028                           ;stkvar	_sw_value @ sp[(-2)+1]
 25029  016526  0EFF               	movlw	-1
 25030  016528  50E3               	movf	plusw1,w,c
 25031  01652A  B4D8               	btfsc	status,2,c
 25032  01652C  D014               	goto	l8816
 25033                           
 25034                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 25035                           ;stkvar	_i @ sp[(-2)+0]
 25036  01652E  0EFE               	movlw	-2
 25037  016530  50E3               	movf	plusw1,w,c
 25038  016532  0D05               	mullw	5
 25039  016534  50F3               	movf	243,w,c
 25040  016536  0F60               	addlw	low _S
 25041  016538  6ED9               	movwf	fsr2l,c
 25042  01653A  6ADA               	clrf	fsr2h,c
 25043  01653C  04DE               	decf	postinc2,w,c
 25044  01653E  A4D8               	btfss	status,2,c
 25045  016540  D041               	goto	l8824
 25046                           
 25047                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 25048                           ;stkvar	_i @ sp[(-2)+0]
 25049  016542  0EFE               	movlw	-2
 25050  016544  50E3               	movf	plusw1,w,c
 25051  016546  0D05               	mullw	5
 25052  016548  50F3               	movf	243,w,c
 25053  01654A  0F60               	addlw	low _S
 25054  01654C  6ED9               	movwf	fsr2l,c
 25055  01654E  6ADA               	clrf	fsr2h,c
 25056  016550  0E00               	movlw	0
 25057  016552  6EDF               	movwf	indf2,c
 25058  016554  D037               	goto	l8824
 25059  016556                     l8816:
 25060                           
 25061                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 25062                           ;stkvar	_i @ sp[(-2)+0]
 25063  016556  0EFE               	movlw	-2
 25064  016558  50E3               	movf	plusw1,w,c
 25065  01655A  0D05               	mullw	5
 25066  01655C  50F3               	movf	243,w,c
 25067  01655E  0F60               	addlw	low _S
 25068  016560  6ED9               	movwf	fsr2l,c
 25069  016562  6ADA               	clrf	fsr2h,c
 25070  016564  50DF               	movf	indf2,w,c
 25071  016566  A4D8               	btfss	status,2,c
 25072  016568  D02D               	goto	l8824
 25073                           
 25074                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 25075                           ;stkvar	_i @ sp[(-2)+0]
 25076  01656A  0EFE               	movlw	-2
 25077  01656C  50E3               	movf	plusw1,w,c
 25078  01656E  0D05               	mullw	5
 25079  016570  50F3               	movf	243,w,c
 25080  016572  0F60               	addlw	low _S
 25081  016574  6ED9               	movwf	fsr2l,c
 25082  016576  6ADA               	clrf	fsr2h,c
 25083  016578  0E01               	movlw	1
 25084  01657A  6EDF               	movwf	indf2,c
 25085                           
 25086                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 25087  01657C  EE20  F2B7         	lfsr	2,_V+183	;volatile
 25088                           
 25089                           ;stkvar	_i @ sp[(-2)+0]
 25090  016580  0EFE               	movlw	-2
 25091  016582  50E3               	movf	plusw1,w,c
 25092  016584  0D05               	mullw	5
 25093  016586  50F3               	movf	243,w,c
 25094  016588  0F61               	addlw	low (_S+1)
 25095  01658A  6EE9               	movwf	fsr0l,c
 25096  01658C  6AEA               	clrf	fsr0h,c
 25097  01658E  006F FF7B FFEE     	movff	postinc2,postinc0
 25098  016594  006F FF7B FFEE     	movff	postinc2,postinc0
 25099  01659A  006F FF7B FFEE     	movff	postinc2,postinc0
 25100  0165A0  006F FF7B FFEE     	movff	postinc2,postinc0
 25101                           
 25102                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 25103                           ;stkvar	_i @ sp[(-2)+0]
 25104  0165A6  0EFE               	movlw	-2
 25105  0165A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 25106  0165AE  0E01               	movlw	1
 25107  0165B0  6E3C               	movwf	(btemp+10)^0,c
 25108  0165B2  2A3D               	incf	(btemp+11)^0,f,c
 25109  0165B4  D002               	goto	u835_24
 25110  0165B6                     u835_25:
 25111  0165B6  90D8               	bcf	status,0,c
 25112  0165B8  363C               	rlcf	(btemp+10)^0,f,c
 25113  0165BA                     u835_24:
 25114  0165BA  2E3D               	decfsz	(btemp+11)^0,f,c
 25115  0165BC  D7FC               	goto	u835_25
 25116  0165BE  503C               	movf	(btemp+10)^0,w,c
 25117  0165C0  0100               	movlb	0	; () banked
 25118  0165C2  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 25119  0165C4                     l8824:
 25120                           
 25121                           ;dio.c: 107:  } while (++i < 4);
 25122                           ;stkvar	_i @ sp[(-2)+0]
 25123  0165C4  0EFE               	movlw	-2
 25124  0165C6  2AE3               	incf	plusw1,f,c
 25125  0165C8  0EFE               	movlw	-2
 25126  0165CA  006F FF8C  F032    	movff	plusw1,btemp
 25127  0165D0  0E03               	movlw	3
 25128  0165D2  6432               	cpfsgt	btemp^0,c
 25129  0165D4  D792               	goto	l8808
 25130                           
 25131                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 25132  0165D6  92BE               	bcf	190,1,c	;volatile
 25133  0165D8  A4BE               	btfss	190,2,c	;volatile
 25134  0165DA  D002               	goto	u837_20
 25135  0165DC  0E01               	movlw	1
 25136  0165DE  D001               	goto	u837_26
 25137  0165E0                     u837_20:
 25138  0165E0  0E00               	movlw	0
 25139  0165E2                     u837_26:
 25140  0165E2  0AFF               	xorlw	255
 25141  0165E4  6E3D               	movwf	(btemp+11)^0,c
 25142  0165E6  463D               	rlncf	(btemp+11)^0,f,c
 25143  0165E8  463D               	rlncf	(btemp+11)^0,f,c
 25144  0165EA  50BE               	movf	190,w,c	;volatile
 25145  0165EC  183D               	xorwf	(btemp+11)^0,w,c
 25146  0165EE  0BFB               	andlw	-5
 25147  0165F0  183D               	xorwf	(btemp+11)^0,w,c
 25148  0165F2  6EBE               	movwf	190,c	;volatile
 25149  0165F4  8EBD               	bsf	189,7,c	;volatile
 25150                           
 25151                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25152  0165F6  52E5               	movf	postdec1,f,c
 25153  0165F8  52E5               	movf	postdec1,f,c
 25154  0165FA  0012               	return		;funcret
 25155  0165FC                     __end_of_switch_handler:
 25156                           	opt callstack 0
 25157                           
 25158 ;; *************** function _TMR5_ISR *****************
 25159 ;; Defined at:
 25160 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25161 ;; Parameters:    Size  Location     Type
 25162 ;;		None
 25163 ;; Auto vars:     Size  Location     Type
 25164 ;;		None
 25165 ;; Return value:  Size  Location     Type
 25166 ;;                  1    wreg      void 
 25167 ;; Registers used:
 25168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25169 ;; Tracked objects:
 25170 ;;		On entry : 0/0
 25171 ;;		On exit  : 0/0
 25172 ;;		Unchanged: 0/0
 25173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25176 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25177 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25178 ;;Total ram usage:        4 bytes
 25179 ;; Hardware stack levels used:    1
 25180 ;; Hardware stack levels required when called:    5
 25181 ;; This function calls:
 25182 ;;		_TMR5_CallBack
 25183 ;;		_TMR5_WriteTimer
 25184 ;; This function is called by:
 25185 ;;		Interrupt level 1
 25186 ;; This function uses a non-reentrant model
 25187 ;;
 25188                           
 25189                           	psect	text122
 25190  017C5C                     __ptext122:
 25191                           	opt callstack 0
 25192  017C5C                     _TMR5_ISR:
 25193                           	opt callstack 12
 25194                           
 25195                           ;incstack = 0
 25196  017C5C  006F FF60  F1E2    	movff	status,??_TMR5_ISR+2
 25197  017C62  0060  F0F4  F1E3   	movff	btemp+11,??_TMR5_ISR+3
 25198  017C68  EE16  F000         	lfsr	1,___intlo_sp
 25199                           
 25200                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25201  017C6C  0139               	movlb	57	; () banked
 25202  017C6E  9DA8               	bcf	168,6,b	;volatile
 25203                           
 25204                           ; BSR set to: 57
 25205                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25206  017C70  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 25207  017C76  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25208  017C7C  EC1E  F0C0         	call	_TMR5_WriteTimer	;wreg free
 25209                           
 25210                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25211  017C80  0102               	movlb	2	; () banked
 25212  017C82  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25213  017C84  0101               	movlb	1	; () banked
 25214  017C86  6FE0               	movwf	??_TMR5_ISR& (0+255),b
 25215  017C88  6BE1               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25216  017C8A  0E05               	movlw	5
 25217  017C8C  27E0               	addwf	??_TMR5_ISR& (0+255),f,b
 25218  017C8E  0E00               	movlw	0
 25219  017C90  23E1               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25220  017C92  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25221  017C94  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25222  017C96  51E0               	movf	??_TMR5_ISR& (0+255),w,b
 25223  017C98  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25224  017C9A  51E1               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25225  017C9C  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25226  017C9E  A0D8               	btfss	status,0,c
 25227  017CA0  D004               	goto	i1l1045
 25228                           
 25229                           ; BSR set to: 1
 25230                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25231  017CA2  EC71  F0C3         	call	_TMR5_CallBack	;wreg free
 25232                           
 25233                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25234  017CA6  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25235  017CA8  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25236  017CAA                     i1l1045:
 25237  017CAA  0060  F78C  F03D   	movff	??_TMR5_ISR+3,btemp+11
 25238  017CB0  0060  F78B  FFD8   	movff	??_TMR5_ISR+2,status
 25239  017CB6  0011               	retfie		f
 25240  017CB8                     __end_of_TMR5_ISR:
 25241                           	opt callstack 0
 25242                           
 25243 ;; *************** function _TMR5_WriteTimer *****************
 25244 ;; Defined at:
 25245 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25246 ;; Parameters:    Size  Location     Type
 25247 ;;  timerVal        2  [STACK] unsigned short 
 25248 ;; Auto vars:     Size  Location     Type
 25249 ;;		None
 25250 ;; Return value:  Size  Location     Type
 25251 ;;                  1  [STACK] void 
 25252 ;; Registers used:
 25253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25254 ;; Tracked objects:
 25255 ;;		On entry : 3F/39
 25256 ;;		On exit  : 0/0
 25257 ;;		Unchanged: 0/0
 25258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25263 ;;Total ram usage:        0 bytes
 25264 ;; Hardware stack levels used:    1
 25265 ;; Hardware stack levels required when called:    3
 25266 ;; This function calls:
 25267 ;;		Nothing
 25268 ;; This function is called by:
 25269 ;;		_TMR5_ISR
 25270 ;; This function uses a reentrant model
 25271 ;;
 25272                           
 25273                           	psect	text123
 25274  01803C                     __ptext123:
 25275                           	opt callstack 0
 25276  01803C                     _TMR5_WriteTimer:
 25277                           	opt callstack 13
 25278                           
 25279                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25280                           
 25281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25282                           ;incstack = 0
 25283  01803C  A49A               	btfss	154,2,c	;volatile
 25284  01803E  D00F               	goto	l8944
 25285                           
 25286                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25287  018040  909A               	bcf	154,0,c	;volatile
 25288                           
 25289                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25290                           ;stkvar	_timerVal @ sp[(0)+-2]
 25291  018042  0EFF               	movlw	255
 25292  018044  24E1               	addwf	fsr1l,w,c
 25293  018046  6ED9               	movwf	fsr2l,c
 25294  018048  0EFF               	movlw	255
 25295  01804A  20E2               	addwfc	fsr1h,w,c
 25296  01804C  6EDA               	movwf	fsr2h,c
 25297  01804E  50DF               	movf	indf2,w,c
 25298  018050  6E99               	movwf	153,c	;volatile
 25299                           
 25300                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25301                           ;stkvar	_timerVal @ sp[(0)+-2]
 25302  018052  0EFE               	movlw	-2
 25303  018054  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25304                           
 25305                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25306  01805A  809A               	bsf	154,0,c	;volatile
 25307                           
 25308                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25309  01805C  D00C               	goto	l1028
 25310  01805E                     l8944:
 25311                           
 25312                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25313                           ;stkvar	_timerVal @ sp[(0)+-2]
 25314  01805E  0EFF               	movlw	255
 25315  018060  24E1               	addwf	fsr1l,w,c
 25316  018062  6ED9               	movwf	fsr2l,c
 25317  018064  0EFF               	movlw	255
 25318  018066  20E2               	addwfc	fsr1h,w,c
 25319  018068  6EDA               	movwf	fsr2h,c
 25320  01806A  50DF               	movf	indf2,w,c
 25321  01806C  6E99               	movwf	153,c	;volatile
 25322                           
 25323                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25324                           ;stkvar	_timerVal @ sp[(0)+-2]
 25325  01806E  0EFE               	movlw	-2
 25326  018070  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25327  018076                     l1028:
 25328                           
 25329                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25330  018076  52E5               	movf	postdec1,f,c
 25331  018078  52E5               	movf	postdec1,f,c
 25332  01807A  0012               	return		;funcret
 25333  01807C                     __end_of_TMR5_WriteTimer:
 25334                           	opt callstack 0
 25335                           
 25336 ;; *************** function _TMR5_CallBack *****************
 25337 ;; Defined at:
 25338 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25339 ;; Parameters:    Size  Location     Type
 25340 ;;		None
 25341 ;; Auto vars:     Size  Location     Type
 25342 ;;		None
 25343 ;; Return value:  Size  Location     Type
 25344 ;;                  1  [STACK] void 
 25345 ;; Registers used:
 25346 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25347 ;; Tracked objects:
 25348 ;;		On entry : 3F/1
 25349 ;;		On exit  : 0/0
 25350 ;;		Unchanged: 0/0
 25351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25356 ;;Total ram usage:        0 bytes
 25357 ;; Hardware stack levels used:    1
 25358 ;; Hardware stack levels required when called:    4
 25359 ;; This function calls:
 25360 ;;		Absolute function
 25361 ;;		_TMR5_DefaultInterruptHandler
 25362 ;; This function is called by:
 25363 ;;		_TMR5_ISR
 25364 ;; This function uses a reentrant model
 25365 ;;
 25366                           
 25367                           	psect	text124
 25368  0186E2                     __ptext124:
 25369                           	opt callstack 0
 25370  0186E2                     _TMR5_CallBack:
 25371                           	opt callstack 12
 25372                           
 25373                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25374                           
 25375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25376                           ;incstack = 0
 25377  0186E2  0100               	movlb	0	; () banked
 25378  0186E4  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25379  0186E6  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25380  0186E8  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25381  0186EA  B4D8               	btfsc	status,2,c
 25382  0186EC  0012               	return	
 25383                           
 25384                           ; BSR set to: 0
 25385                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25386  0186EE  D801               	call	u856_28
 25387  0186F0  0012               	return	
 25388  0186F2                     u856_28:
 25389  0186F2  0005               	push	
 25390  0186F4  6EFA               	movwf	pclath,c
 25391  0186F6  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25392  0186F8  6EFD               	movwf	tosl,c
 25393  0186FA  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25394  0186FC  6EFE               	movwf	tosh,c
 25395  0186FE  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25396  018700  6EFF               	movwf	tosu,c
 25397  018702  50FA               	movf	pclath,w,c
 25398  018704  0012               	return		;indir
 25399  018706                     __end_of_TMR5_CallBack:
 25400                           	opt callstack 0
 25401                           
 25402 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25403 ;; Defined at:
 25404 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25405 ;; Parameters:    Size  Location     Type
 25406 ;;		None
 25407 ;; Auto vars:     Size  Location     Type
 25408 ;;		None
 25409 ;; Return value:  Size  Location     Type
 25410 ;;                  1  [STACK] void 
 25411 ;; Registers used:
 25412 ;;		wreg, status,2, status,0, btemp+11
 25413 ;; Tracked objects:
 25414 ;;		On entry : 3F/0
 25415 ;;		On exit  : 3F/2
 25416 ;;		Unchanged: 0/0
 25417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25422 ;;Total ram usage:        0 bytes
 25423 ;; Hardware stack levels used:    1
 25424 ;; Hardware stack levels required when called:    3
 25425 ;; This function calls:
 25426 ;;		Nothing
 25427 ;; This function is called by:
 25428 ;;		_TMR5_Initialize
 25429 ;;		_TMR5_CallBack
 25430 ;; This function uses a reentrant model
 25431 ;;
 25432                           
 25433                           	psect	text125
 25434  0185D2                     __ptext125:
 25435                           	opt callstack 0
 25436  0185D2                     _TMR5_DefaultInterruptHandler:
 25437                           	opt callstack 12
 25438                           
 25439                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25440                           
 25441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25442                           ;incstack = 0
 25443  0185D2  A0BE               	btfss	190,0,c	;volatile
 25444  0185D4  D002               	goto	u806_20
 25445  0185D6  0E01               	movlw	1
 25446  0185D8  D001               	goto	u806_26
 25447  0185DA                     u806_20:
 25448  0185DA  0E00               	movlw	0
 25449  0185DC                     u806_26:
 25450  0185DC  0AFF               	xorlw	255
 25451  0185DE  6E3D               	movwf	(btemp+11)^0,c
 25452  0185E0  50BE               	movf	190,w,c	;volatile
 25453  0185E2  183D               	xorwf	(btemp+11)^0,w,c
 25454  0185E4  0BFE               	andlw	-2
 25455  0185E6  183D               	xorwf	(btemp+11)^0,w,c
 25456  0185E8  6EBE               	movwf	190,c	;volatile
 25457                           
 25458                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25459  0185EA  0E01               	movlw	1
 25460  0185EC  0102               	movlb	2	; () banked
 25461  0185EE  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25462  0185F0  0E00               	movlw	0
 25463  0185F2  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25464  0185F4  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25465  0185F6  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25466                           
 25467                           ; BSR set to: 2
 25468                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25469  0185F8  0012               	return		;funcret
 25470  0185FA                     __end_of_TMR5_DefaultInterruptHandler:
 25471                           	opt callstack 0
 25472                           
 25473 ;; *************** function _INT0_ISR *****************
 25474 ;; Defined at:
 25475 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25476 ;; Parameters:    Size  Location     Type
 25477 ;;		None
 25478 ;; Auto vars:     Size  Location     Type
 25479 ;;		None
 25480 ;; Return value:  Size  Location     Type
 25481 ;;                  1    wreg      void 
 25482 ;; Registers used:
 25483 ;;		wreg, status,2, status,0, pclath, tosl
 25484 ;; Tracked objects:
 25485 ;;		On entry : 0/0
 25486 ;;		On exit  : 0/0
 25487 ;;		Unchanged: 0/0
 25488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25493 ;;Total ram usage:        0 bytes
 25494 ;; Hardware stack levels used:    1
 25495 ;; Hardware stack levels required when called:    2
 25496 ;; This function calls:
 25497 ;;		_INT0_CallBack
 25498 ;; This function is called by:
 25499 ;;		Interrupt level 2
 25500 ;; This function uses a non-reentrant model
 25501 ;;
 25502                           
 25503                           	psect	text126
 25504  018968                     __ptext126:
 25505                           	opt callstack 0
 25506  018968                     _INT0_ISR:
 25507                           	opt callstack 12
 25508                           
 25509                           ; BSR set to: 2
 25510                           ;incstack = 0
 25511  018968  EE14  F000         	lfsr	1,___inthi_sp
 25512                           
 25513                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25514  01896C  0139               	movlb	57	; () banked
 25515  01896E  91A1               	bcf	161,0,b	;volatile
 25516                           
 25517                           ; BSR set to: 57
 25518                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25519  018970  ECA6  F0C3         	call	_INT0_CallBack	;wreg free
 25520  018974  0011               	retfie		f
 25521  018976                     __end_of_INT0_ISR:
 25522                           	opt callstack 0
 25523                           
 25524 ;; *************** function _INT0_CallBack *****************
 25525 ;; Defined at:
 25526 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25527 ;; Parameters:    Size  Location     Type
 25528 ;;		None
 25529 ;; Auto vars:     Size  Location     Type
 25530 ;;		None
 25531 ;; Return value:  Size  Location     Type
 25532 ;;                  1  [STACK] void 
 25533 ;; Registers used:
 25534 ;;		wreg, status,2, status,0, pclath, tosl
 25535 ;; Tracked objects:
 25536 ;;		On entry : 3F/39
 25537 ;;		On exit  : 0/0
 25538 ;;		Unchanged: 0/0
 25539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25544 ;;Total ram usage:        0 bytes
 25545 ;; Hardware stack levels used:    1
 25546 ;; Hardware stack levels required when called:    1
 25547 ;; This function calls:
 25548 ;;		Absolute function
 25549 ;;		_INT0_DefaultInterruptHandler
 25550 ;; This function is called by:
 25551 ;;		_INT0_ISR
 25552 ;; This function uses a reentrant model
 25553 ;;
 25554                           
 25555                           	psect	text127
 25556  01874C                     __ptext127:
 25557                           	opt callstack 0
 25558  01874C                     _INT0_CallBack:
 25559                           	opt callstack 12
 25560                           
 25561                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25562                           
 25563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25564                           ;incstack = 0
 25565  01874C  5016               	movf	_INT0_InterruptHandler^0,w,c
 25566  01874E  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25567  018750  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25568  018752  B4D8               	btfsc	status,2,c
 25569  018754  0012               	return	
 25570                           
 25571                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25572  018756  D801               	call	u398_48
 25573  018758  0012               	return	
 25574  01875A                     u398_48:
 25575  01875A  0005               	push	
 25576  01875C  6EFA               	movwf	pclath,c
 25577  01875E  5016               	movf	_INT0_InterruptHandler^0,w,c
 25578  018760  6EFD               	movwf	tosl,c
 25579  018762  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25580  018764  6EFE               	movwf	tosh,c
 25581  018766  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25582  018768  6EFF               	movwf	tosu,c
 25583  01876A  50FA               	movf	pclath,w,c
 25584  01876C  0012               	return		;indir
 25585  01876E                     __end_of_INT0_CallBack:
 25586                           	opt callstack 0
 25587                           
 25588 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25589 ;; Defined at:
 25590 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25591 ;; Parameters:    Size  Location     Type
 25592 ;;		None
 25593 ;; Auto vars:     Size  Location     Type
 25594 ;;		None
 25595 ;; Return value:  Size  Location     Type
 25596 ;;                  1  [STACK] void 
 25597 ;; Registers used:
 25598 ;;		None
 25599 ;; Tracked objects:
 25600 ;;		On entry : 0/39
 25601 ;;		On exit  : 0/0
 25602 ;;		Unchanged: 0/0
 25603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25608 ;;Total ram usage:        0 bytes
 25609 ;; Hardware stack levels used:    1
 25610 ;; This function calls:
 25611 ;;		Nothing
 25612 ;; This function is called by:
 25613 ;;		_EXT_INT_Initialize
 25614 ;;		_INT0_CallBack
 25615 ;; This function uses a reentrant model
 25616 ;;
 25617                           
 25618                           	psect	text128
 25619  0189F4                     __ptext128:
 25620                           	opt callstack 0
 25621  0189F4                     _INT0_DefaultInterruptHandler:
 25622                           	opt callstack 12
 25623                           
 25624                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25625                           
 25626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25627                           ;incstack = 0
 25628  0189F4  0012               	return		;funcret
 25629  0189F6                     __end_of_INT0_DefaultInterruptHandler:
 25630                           	opt callstack 0
 25631                           
 25632 ;; *************** function _Default_ISR *****************
 25633 ;; Defined at:
 25634 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25635 ;; Parameters:    Size  Location     Type
 25636 ;;		None
 25637 ;; Auto vars:     Size  Location     Type
 25638 ;;		None
 25639 ;; Return value:  Size  Location     Type
 25640 ;;                  1    wreg      void 
 25641 ;; Registers used:
 25642 ;;		None
 25643 ;; Tracked objects:
 25644 ;;		On entry : 0/0
 25645 ;;		On exit  : 0/0
 25646 ;;		Unchanged: 0/0
 25647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25652 ;;Total ram usage:        0 bytes
 25653 ;; Hardware stack levels used:    1
 25654 ;; This function calls:
 25655 ;;		Nothing
 25656 ;; This function is called by:
 25657 ;;		Interrupt level 2
 25658 ;; This function uses a non-reentrant model
 25659 ;;
 25660                           
 25661                           	psect	text129
 25662  0189EC                     __ptext129:
 25663                           	opt callstack 0
 25664  0189EC                     _Default_ISR:
 25665                           	opt callstack 14
 25666                           
 25667                           ;incstack = 0
 25668  0189EC  EE14  F000         	lfsr	1,___inthi_sp
 25669  0189F0  0011               	retfie		f
 25670  0189F2                     __end_of_Default_ISR:
 25671                           	opt callstack 0
 25672                           
 25673 ;; *************** function _ADCC_ISR *****************
 25674 ;; Defined at:
 25675 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25676 ;; Parameters:    Size  Location     Type
 25677 ;;		None
 25678 ;; Auto vars:     Size  Location     Type
 25679 ;;		None
 25680 ;; Return value:  Size  Location     Type
 25681 ;;                  1    wreg      void 
 25682 ;; Registers used:
 25683 ;;		wreg, status,2, status,0, pclath, tosl
 25684 ;; Tracked objects:
 25685 ;;		On entry : 0/0
 25686 ;;		On exit  : 0/0
 25687 ;;		Unchanged: 0/0
 25688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25693 ;;Total ram usage:        0 bytes
 25694 ;; Hardware stack levels used:    1
 25695 ;; Hardware stack levels required when called:    1
 25696 ;; This function calls:
 25697 ;;		Absolute function
 25698 ;;		_ADCC_DefaultInterruptHandler
 25699 ;;		_adc_int_handler
 25700 ;; This function is called by:
 25701 ;;		Interrupt level 2
 25702 ;; This function uses a non-reentrant model
 25703 ;;
 25704                           
 25705                           	psect	text130
 25706  018378                     __ptext130:
 25707                           	opt callstack 0
 25708  018378                     _ADCC_ISR:
 25709                           	opt callstack 13
 25710                           
 25711                           ;incstack = 0
 25712  018378  EE14  F000         	lfsr	1,___inthi_sp
 25713                           
 25714                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25715  01837C  0139               	movlb	57	; () banked
 25716  01837E  95A1               	bcf	161,2,b	;volatile
 25717                           
 25718                           ; BSR set to: 57
 25719                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25720  018380  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25721  018382  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25722  018384  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25723  018386  B4D8               	btfsc	status,2,c
 25724  018388  0011               	retfie		f
 25725                           
 25726                           ; BSR set to: 57
 25727                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25728  01838A  D801               	call	i2u428_48
 25729  01838C  0011               	retfie		f
 25730  01838E                     i2u428_48:
 25731  01838E  0005               	push	
 25732  018390  6EFA               	movwf	pclath,c
 25733  018392  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25734  018394  6EFD               	movwf	tosl,c
 25735  018396  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25736  018398  6EFE               	movwf	tosh,c
 25737  01839A  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25738  01839C  6EFF               	movwf	tosu,c
 25739  01839E  50FA               	movf	pclath,w,c
 25740  0183A0  0012               	return		;indir
 25741  0183A2                     __end_of_ADCC_ISR:
 25742                           	opt callstack 0
 25743                           
 25744 ;; *************** function _adc_int_t_handler *****************
 25745 ;; Defined at:
 25746 ;;		line 128 in file "daq.c"
 25747 ;; Parameters:    Size  Location     Type
 25748 ;;		None
 25749 ;; Auto vars:     Size  Location     Type
 25750 ;;		None
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  1  [STACK] void 
 25753 ;; Registers used:
 25754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25755 ;; Tracked objects:
 25756 ;;		On entry : 3F/39
 25757 ;;		On exit  : 1/0
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25764 ;;Total ram usage:        0 bytes
 25765 ;; Hardware stack levels used:    1
 25766 ;; Hardware stack levels required when called:    1
 25767 ;; This function calls:
 25768 ;;		_ADCC_DischargeSampleCapacitor
 25769 ;;		_ADCC_StartConversion
 25770 ;; This function is called by:
 25771 ;;		_start_adc_scan
 25772 ;;		_ADCC_ThresholdISR
 25773 ;; This function uses a reentrant model
 25774 ;;
 25775                           
 25776                           	psect	text131
 25777  0177D6                     __ptext131:
 25778                           	opt callstack 0
 25779  0177D6                     _adc_int_t_handler:
 25780                           	opt callstack 12
 25781                           
 25782                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25783                           
 25784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25785                           ;incstack = 0
 25786  0177D6  013E               	movlb	62	; () banked
 25787  0177D8  51E6               	movf	230,w,b	;volatile
 25788  0177DA  006F FB9C  F032    	movff	16103,btemp	;volatile
 25789  0177E0  6A33               	clrf	(btemp+1)^0,c
 25790  0177E2  0060  F0C8  F033   	movff	btemp,btemp+1
 25791  0177E8  6A32               	clrf	btemp^0,c
 25792  0177EA  2632               	addwf	btemp^0,f,c
 25793  0177EC  0E00               	movlw	0
 25794  0177EE  2233               	addwfc	(btemp+1)^0,f,c
 25795  0177F0  0100               	movlb	0	; () banked
 25796  0177F2  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25797  0177F4  0D02               	mullw	2
 25798  0177F6  50F3               	movf	243,w,c
 25799  0177F8  0FC7               	addlw	low _R
 25800  0177FA  6ED9               	movwf	fsr2l,c
 25801  0177FC  6ADA               	clrf	fsr2h,c
 25802  0177FE  0060  F0CB  FFDE   	movff	btemp,postinc2
 25803  017804  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25804  01780A                     l9144:
 25805                           
 25806                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 25807  01780A  0100               	movlb	0	; () banked
 25808  01780C  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25809  01780E  0E0D               	movlw	13
 25810  017810  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25811  017812  D003               	goto	l9150
 25812                           
 25813                           ; BSR set to: 0
 25814                           ;daq.c: 136:    R.done = 1;
 25815  017814  0E01               	movlw	1
 25816  017816  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25817  017818  0012               	return	
 25818  01781A                     l9150:
 25819                           
 25820                           ; BSR set to: 0
 25821                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25822  01781A  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25823  017820  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25824  017824  006F FF78  F03A    	movff	postinc2,btemp+8
 25825  01782A  006F FF74  F03B    	movff	postdec2,btemp+9
 25826  017830  2A3D               	incf	(btemp+11)^0,f,c
 25827  017832  D003               	goto	u870_44
 25828  017834                     u870_45:
 25829  017834  90D8               	bcf	status,0,c
 25830  017836  323B               	rrcf	(btemp+9)^0,f,c
 25831  017838  323A               	rrcf	(btemp+8)^0,f,c
 25832  01783A                     u870_44:
 25833  01783A  2E3D               	decfsz	(btemp+11)^0,f,c
 25834  01783C  D7FB               	goto	u870_45
 25835  01783E  A03A               	btfss	(btemp+8)^0,0,c
 25836  017840  D7E4               	goto	l9144
 25837                           
 25838                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 25839  017842  ECD9  F0C4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25840                           
 25841                           ; BSR set to: 62
 25842                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 25843  017846  0100               	movlb	0	; () banked
 25844  017848  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25845  01784A  0B0F               	andlw	15
 25846  01784C  6EE6               	movwf	postinc1,c
 25847  01784E  EC8C  F0C4         	call	_ADCC_StartConversion	;wreg free
 25848                           
 25849                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25850  017852  0012               	return		;funcret
 25851  017854                     __end_of_adc_int_t_handler:
 25852                           	opt callstack 0
 25853                           
 25854 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25855 ;; Defined at:
 25856 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25857 ;; Parameters:    Size  Location     Type
 25858 ;;		None
 25859 ;; Auto vars:     Size  Location     Type
 25860 ;;		None
 25861 ;; Return value:  Size  Location     Type
 25862 ;;                  1  [STACK] void 
 25863 ;; Registers used:
 25864 ;;		None
 25865 ;; Tracked objects:
 25866 ;;		On entry : 3F/39
 25867 ;;		On exit  : 0/0
 25868 ;;		Unchanged: 0/0
 25869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25874 ;;Total ram usage:        0 bytes
 25875 ;; Hardware stack levels used:    1
 25876 ;; This function calls:
 25877 ;;		Nothing
 25878 ;; This function is called by:
 25879 ;;		_ADCC_Initialize
 25880 ;;		_ADCC_ISR
 25881 ;;		_ADCC_ThresholdISR
 25882 ;; This function uses a reentrant model
 25883 ;;
 25884                           
 25885                           	psect	text132
 25886  0189F6                     __ptext132:
 25887                           	opt callstack 0
 25888  0189F6                     _ADCC_DefaultInterruptHandler:
 25889                           	opt callstack 13
 25890                           
 25891                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25892                           
 25893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25894                           ;incstack = 0
 25895  0189F6  0012               	return		;funcret
 25896  0189F8                     __end_of_ADCC_DefaultInterruptHandler:
 25897                           	opt callstack 0
 25898                           
 25899 ;; *************** function _adc_int_handler *****************
 25900 ;; Defined at:
 25901 ;;		line 118 in file "daq.c"
 25902 ;; Parameters:    Size  Location     Type
 25903 ;;		None
 25904 ;; Auto vars:     Size  Location     Type
 25905 ;;		None
 25906 ;; Return value:  Size  Location     Type
 25907 ;;                  1  [STACK] void 
 25908 ;; Registers used:
 25909 ;;		None
 25910 ;; Tracked objects:
 25911 ;;		On entry : 3F/39
 25912 ;;		On exit  : 0/0
 25913 ;;		Unchanged: 0/0
 25914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25919 ;;Total ram usage:        0 bytes
 25920 ;; Hardware stack levels used:    1
 25921 ;; This function calls:
 25922 ;;		Nothing
 25923 ;; This function is called by:
 25924 ;;		_start_adc_scan
 25925 ;;		_ADCC_ISR
 25926 ;; This function uses a reentrant model
 25927 ;;
 25928                           
 25929                           	psect	text133
 25930  0189F8                     __ptext133:
 25931                           	opt callstack 0
 25932  0189F8                     _adc_int_handler:
 25933                           	opt callstack 13
 25934                           
 25935                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25936                           
 25937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25938                           ;incstack = 0
 25939  0189F8  0012               	return		;funcret
 25940  0189FA                     __end_of_adc_int_handler:
 25941                           	opt callstack 0
 25942                           
 25943 ;; *************** function _ADCC_ThresholdISR *****************
 25944 ;; Defined at:
 25945 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25946 ;; Parameters:    Size  Location     Type
 25947 ;;		None
 25948 ;; Auto vars:     Size  Location     Type
 25949 ;;		None
 25950 ;; Return value:  Size  Location     Type
 25951 ;;                  1    wreg      void 
 25952 ;; Registers used:
 25953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25954 ;; Tracked objects:
 25955 ;;		On entry : 0/0
 25956 ;;		On exit  : 0/0
 25957 ;;		Unchanged: 0/0
 25958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25961 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25962 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25963 ;;Total ram usage:        5 bytes
 25964 ;; Hardware stack levels used:    1
 25965 ;; Hardware stack levels required when called:    2
 25966 ;; This function calls:
 25967 ;;		Absolute function
 25968 ;;		_ADCC_DefaultInterruptHandler
 25969 ;;		_adc_int_t_handler
 25970 ;; This function is called by:
 25971 ;;		Interrupt level 2
 25972 ;; This function uses a non-reentrant model
 25973 ;;
 25974                           
 25975                           	psect	text134
 25976  0179A4                     __ptext134:
 25977                           	opt callstack 0
 25978  0179A4                     _ADCC_ThresholdISR:
 25979                           	opt callstack 12
 25980                           
 25981                           ;incstack = 0
 25982  0179A4  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25983  0179AA  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25984  0179B0  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25985  0179B6  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25986  0179BC  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25987  0179C2  EE14  F000         	lfsr	1,___inthi_sp
 25988                           
 25989                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25990  0179C6  0139               	movlb	57	; () banked
 25991  0179C8  97A1               	bcf	161,3,b	;volatile
 25992                           
 25993                           ; BSR set to: 57
 25994                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25995  0179CA  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25996  0179CC  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25997  0179CE  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25998  0179D0  B4D8               	btfsc	status,2,c
 25999  0179D2  D00C               	goto	i2u873_49
 26000                           
 26001                           ; BSR set to: 57
 26002                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26003  0179D4  D801               	call	i2u873_48
 26004  0179D6  D00A               	goto	i2u873_49
 26005  0179D8                     i2u873_48:
 26006  0179D8  0005               	push	
 26007  0179DA  6EFA               	movwf	pclath,c
 26008  0179DC  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26009  0179DE  6EFD               	movwf	tosl,c
 26010  0179E0  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26011  0179E2  6EFE               	movwf	tosh,c
 26012  0179E4  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26013  0179E6  6EFF               	movwf	tosu,c
 26014  0179E8  50FA               	movf	pclath,w,c
 26015  0179EA  0012               	return		;indir
 26016  0179EC                     i2u873_49:
 26017  0179EC  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26018  0179F2  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26019  0179F8  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26020  0179FE  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26021  017A04  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 26022  017A0A  0011               	retfie		f
 26023  017A0C                     __end_of_ADCC_ThresholdISR:
 26024                           	opt callstack 0
 26025                           
 26026 ;; *************** function _UART1_tx_vect_isr *****************
 26027 ;; Defined at:
 26028 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26029 ;; Parameters:    Size  Location     Type
 26030 ;;		None
 26031 ;; Auto vars:     Size  Location     Type
 26032 ;;		None
 26033 ;; Return value:  Size  Location     Type
 26034 ;;                  1    wreg      void 
 26035 ;; Registers used:
 26036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26037 ;; Tracked objects:
 26038 ;;		On entry : 0/0
 26039 ;;		On exit  : 0/0
 26040 ;;		Unchanged: 0/0
 26041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26046 ;;Total ram usage:        0 bytes
 26047 ;; Hardware stack levels used:    1
 26048 ;; Hardware stack levels required when called:    1
 26049 ;; This function calls:
 26050 ;;		Absolute function
 26051 ;;		_UART1_Transmit_ISR
 26052 ;; This function is called by:
 26053 ;;		Interrupt level 2
 26054 ;; This function uses a non-reentrant model
 26055 ;;
 26056                           
 26057                           	psect	text135
 26058  0185FC                     __ptext135:
 26059                           	opt callstack 0
 26060  0185FC                     _UART1_tx_vect_isr:
 26061                           	opt callstack 13
 26062                           
 26063                           ;incstack = 0
 26064  0185FC  EE14  F000         	lfsr	1,___inthi_sp
 26065                           
 26066                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26067  018600  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26068  018602  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26069  018604  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26070  018606  B4D8               	btfsc	status,2,c
 26071  018608  0011               	retfie		f
 26072                           
 26073                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26074  01860A  D801               	call	i2u875_48
 26075  01860C  0011               	retfie		f
 26076  01860E                     i2u875_48:
 26077  01860E  0005               	push	
 26078  018610  6EFA               	movwf	pclath,c
 26079  018612  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26080  018614  6EFD               	movwf	tosl,c
 26081  018616  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26082  018618  6EFE               	movwf	tosh,c
 26083  01861A  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26084  01861C  6EFF               	movwf	tosu,c
 26085  01861E  50FA               	movf	pclath,w,c
 26086  018620  0012               	return		;indir
 26087  018622                     __end_of_UART1_tx_vect_isr:
 26088                           	opt callstack 0
 26089                           
 26090 ;; *************** function _UART1_Transmit_ISR *****************
 26091 ;; Defined at:
 26092 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26093 ;; Parameters:    Size  Location     Type
 26094 ;;		None
 26095 ;; Auto vars:     Size  Location     Type
 26096 ;;		None
 26097 ;; Return value:  Size  Location     Type
 26098 ;;                  1  [STACK] void 
 26099 ;; Registers used:
 26100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26101 ;; Tracked objects:
 26102 ;;		On entry : 0/0
 26103 ;;		On exit  : 3B/39
 26104 ;;		Unchanged: 0/0
 26105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26110 ;;Total ram usage:        0 bytes
 26111 ;; Hardware stack levels used:    1
 26112 ;; This function calls:
 26113 ;;		Nothing
 26114 ;; This function is called by:
 26115 ;;		_UART1_Initialize
 26116 ;;		_UART1_tx_vect_isr
 26117 ;; This function uses a reentrant model
 26118 ;;
 26119                           
 26120                           	psect	text136
 26121  0182F6                     __ptext136:
 26122                           	opt callstack 0
 26123  0182F6                     _UART1_Transmit_ISR:
 26124                           	opt callstack 13
 26125                           
 26126                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26127                           
 26128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26129                           ;incstack = 0
 26130  0182F6  0E40               	movlw	64
 26131  0182F8  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 26132  0182FA  D010               	goto	l581
 26133                           
 26134                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26135  0182FC  0EBB               	movlw	low _uart1TxBuffer
 26136  0182FE  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 26137  018300  6ED9               	movwf	fsr2l,c
 26138  018302  6ADA               	clrf	fsr2h,c
 26139  018304  0E02               	movlw	high _uart1TxBuffer
 26140  018306  22DA               	addwfc	fsr2h,f,c
 26141  018308  50DF               	movf	indf2,w,c
 26142  01830A  013D               	movlb	61	; () banked
 26143  01830C  6FEA               	movwf	234,b	;volatile
 26144                           
 26145                           ; BSR set to: 61
 26146  01830E  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 26147                           
 26148                           ; BSR set to: 61
 26149                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26150  018310  0E3F               	movlw	63
 26151  018312  6430               	cpfsgt	_uart1TxTail^0,c
 26152  018314  D001               	goto	l8896
 26153                           
 26154                           ; BSR set to: 61
 26155                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26156  018316  6A30               	clrf	_uart1TxTail^0,c	;volatile
 26157  018318                     l8896:
 26158                           
 26159                           ; BSR set to: 61
 26160                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26161  018318  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26162                           
 26163                           ;mcc_generated_files/uart1.c: 222:  } else {
 26164  01831A  0012               	return	
 26165  01831C                     l581:
 26166                           
 26167                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26168  01831C  0139               	movlb	57	; () banked
 26169  01831E  9993               	bcf	147,4,b	;volatile
 26170                           
 26171                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26172  018320  0012               	return		;funcret
 26173  018322                     __end_of_UART1_Transmit_ISR:
 26174                           	opt callstack 0
 26175                           
 26176 ;; *************** function _UART1_rx_vect_isr *****************
 26177 ;; Defined at:
 26178 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26179 ;; Parameters:    Size  Location     Type
 26180 ;;		None
 26181 ;; Auto vars:     Size  Location     Type
 26182 ;;		None
 26183 ;; Return value:  Size  Location     Type
 26184 ;;                  1    wreg      void 
 26185 ;; Registers used:
 26186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26187 ;; Tracked objects:
 26188 ;;		On entry : 0/0
 26189 ;;		On exit  : 0/0
 26190 ;;		Unchanged: 0/0
 26191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26196 ;;Total ram usage:        0 bytes
 26197 ;; Hardware stack levels used:    1
 26198 ;; Hardware stack levels required when called:    1
 26199 ;; This function calls:
 26200 ;;		Absolute function
 26201 ;;		_UART1_Receive_ISR
 26202 ;; This function is called by:
 26203 ;;		Interrupt level 2
 26204 ;; This function uses a non-reentrant model
 26205 ;;
 26206                           
 26207                           	psect	text137
 26208  018624                     __ptext137:
 26209                           	opt callstack 0
 26210  018624                     _UART1_rx_vect_isr:
 26211                           	opt callstack 13
 26212                           
 26213                           ;incstack = 0
 26214  018624  EE14  F000         	lfsr	1,___inthi_sp
 26215                           
 26216                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26217  018628  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26218  01862A  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26219  01862C  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26220  01862E  B4D8               	btfsc	status,2,c
 26221  018630  0011               	retfie		f
 26222                           
 26223                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26224  018632  D801               	call	i2u877_48
 26225  018634  0011               	retfie		f
 26226  018636                     i2u877_48:
 26227  018636  0005               	push	
 26228  018638  6EFA               	movwf	pclath,c
 26229  01863A  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26230  01863C  6EFD               	movwf	tosl,c
 26231  01863E  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26232  018640  6EFE               	movwf	tosh,c
 26233  018642  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26234  018644  6EFF               	movwf	tosu,c
 26235  018646  50FA               	movf	pclath,w,c
 26236  018648  0012               	return		;indir
 26237  01864A                     __end_of_UART1_rx_vect_isr:
 26238                           	opt callstack 0
 26239                           
 26240 ;; *************** function _UART1_Receive_ISR *****************
 26241 ;; Defined at:
 26242 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26243 ;; Parameters:    Size  Location     Type
 26244 ;;		None
 26245 ;; Auto vars:     Size  Location     Type
 26246 ;;		None
 26247 ;; Return value:  Size  Location     Type
 26248 ;;                  1  [STACK] void 
 26249 ;; Registers used:
 26250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26251 ;; Tracked objects:
 26252 ;;		On entry : 0/0
 26253 ;;		On exit  : 0/0
 26254 ;;		Unchanged: 0/0
 26255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26260 ;;Total ram usage:        0 bytes
 26261 ;; Hardware stack levels used:    1
 26262 ;; This function calls:
 26263 ;;		Nothing
 26264 ;; This function is called by:
 26265 ;;		_UART1_Initialize
 26266 ;;		_UART1_rx_vect_isr
 26267 ;; This function uses a reentrant model
 26268 ;;
 26269                           
 26270                           	psect	text138
 26271  0187E8                     __ptext138:
 26272                           	opt callstack 0
 26273  0187E8                     _UART1_Receive_ISR:
 26274                           	opt callstack 13
 26275                           
 26276                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26277                           
 26278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26279                           ;incstack = 0
 26280  0187E8  0E00               	movlw	low _uart1RxBuffer
 26281  0187EA  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 26282  0187EC  6ED9               	movwf	fsr2l,c
 26283  0187EE  6ADA               	clrf	fsr2h,c
 26284  0187F0  0E06               	movlw	high _uart1RxBuffer
 26285  0187F2  22DA               	addwfc	fsr2h,f,c
 26286  0187F4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26287  0187FA  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 26288                           
 26289                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26290  0187FC  282E               	incf	_uart1RxHead^0,w,c
 26291  0187FE  B4D8               	btfsc	status,2,c
 26292                           
 26293                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26294  018800  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 26295                           
 26296                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26297  018802  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 26298                           
 26299                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26300  018804  0012               	return		;funcret
 26301  018806                     __end_of_UART1_Receive_ISR:
 26302                           	opt callstack 0
 26303                           
 26304 ;; *************** function _UART2_tx_vect_isr *****************
 26305 ;; Defined at:
 26306 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26307 ;; Parameters:    Size  Location     Type
 26308 ;;		None
 26309 ;; Auto vars:     Size  Location     Type
 26310 ;;		None
 26311 ;; Return value:  Size  Location     Type
 26312 ;;                  1    wreg      void 
 26313 ;; Registers used:
 26314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26315 ;; Tracked objects:
 26316 ;;		On entry : 0/0
 26317 ;;		On exit  : 0/0
 26318 ;;		Unchanged: 0/0
 26319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26324 ;;Total ram usage:        0 bytes
 26325 ;; Hardware stack levels used:    1
 26326 ;; Hardware stack levels required when called:    1
 26327 ;; This function calls:
 26328 ;;		Absolute function
 26329 ;;		_UART2_Transmit_ISR
 26330 ;; This function is called by:
 26331 ;;		Interrupt level 2
 26332 ;; This function uses a non-reentrant model
 26333 ;;
 26334                           
 26335                           	psect	text139
 26336  01864C                     __ptext139:
 26337                           	opt callstack 0
 26338  01864C                     _UART2_tx_vect_isr:
 26339                           	opt callstack 13
 26340                           
 26341                           ;incstack = 0
 26342  01864C  EE14  F000         	lfsr	1,___inthi_sp
 26343                           
 26344                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26345  018650  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26346  018652  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26347  018654  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26348  018656  B4D8               	btfsc	status,2,c
 26349  018658  0011               	retfie		f
 26350                           
 26351                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26352  01865A  D801               	call	i2u879_48
 26353  01865C  0011               	retfie		f
 26354  01865E                     i2u879_48:
 26355  01865E  0005               	push	
 26356  018660  6EFA               	movwf	pclath,c
 26357  018662  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26358  018664  6EFD               	movwf	tosl,c
 26359  018666  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26360  018668  6EFE               	movwf	tosh,c
 26361  01866A  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26362  01866C  6EFF               	movwf	tosu,c
 26363  01866E  50FA               	movf	pclath,w,c
 26364  018670  0012               	return		;indir
 26365  018672                     __end_of_UART2_tx_vect_isr:
 26366                           	opt callstack 0
 26367                           
 26368 ;; *************** function _UART2_Transmit_ISR *****************
 26369 ;; Defined at:
 26370 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26371 ;; Parameters:    Size  Location     Type
 26372 ;;		None
 26373 ;; Auto vars:     Size  Location     Type
 26374 ;;		None
 26375 ;; Return value:  Size  Location     Type
 26376 ;;                  1  [STACK] void 
 26377 ;; Registers used:
 26378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26379 ;; Tracked objects:
 26380 ;;		On entry : 0/0
 26381 ;;		On exit  : 3B/39
 26382 ;;		Unchanged: 0/0
 26383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26388 ;;Total ram usage:        0 bytes
 26389 ;; Hardware stack levels used:    1
 26390 ;; This function calls:
 26391 ;;		Nothing
 26392 ;; This function is called by:
 26393 ;;		_UART2_Initialize
 26394 ;;		_UART2_tx_vect_isr
 26395 ;; This function uses a reentrant model
 26396 ;;
 26397                           
 26398                           	psect	text140
 26399  018322                     __ptext140:
 26400                           	opt callstack 0
 26401  018322                     _UART2_Transmit_ISR:
 26402                           	opt callstack 13
 26403                           
 26404                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26405                           
 26406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26407                           ;incstack = 0
 26408  018322  0E40               	movlw	64
 26409  018324  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 26410  018326  D010               	goto	l701
 26411                           
 26412                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26413  018328  0E50               	movlw	low _uart2TxBuffer
 26414  01832A  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 26415  01832C  6ED9               	movwf	fsr2l,c
 26416  01832E  6ADA               	clrf	fsr2h,c
 26417  018330  0E03               	movlw	high _uart2TxBuffer
 26418  018332  22DA               	addwfc	fsr2h,f,c
 26419  018334  50DF               	movf	indf2,w,c
 26420  018336  013D               	movlb	61	; () banked
 26421  018338  6FD2               	movwf	210,b	;volatile
 26422                           
 26423                           ; BSR set to: 61
 26424  01833A  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 26425                           
 26426                           ; BSR set to: 61
 26427                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26428  01833C  0E3F               	movlw	63
 26429  01833E  642A               	cpfsgt	_uart2TxTail^0,c
 26430  018340  D001               	goto	l8918
 26431                           
 26432                           ; BSR set to: 61
 26433                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26434  018342  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 26435  018344                     l8918:
 26436                           
 26437                           ; BSR set to: 61
 26438                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26439  018344  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26440                           
 26441                           ;mcc_generated_files/uart2.c: 224:     }
 26442  018346  0012               	return	
 26443  018348                     l701:
 26444                           
 26445                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26446  018348  0139               	movlb	57	; () banked
 26447  01834A  9796               	bcf	150,3,b	;volatile
 26448                           
 26449                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26450  01834C  0012               	return		;funcret
 26451  01834E                     __end_of_UART2_Transmit_ISR:
 26452                           	opt callstack 0
 26453                           
 26454 ;; *************** function _UART2_rx_vect_isr *****************
 26455 ;; Defined at:
 26456 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26457 ;; Parameters:    Size  Location     Type
 26458 ;;		None
 26459 ;; Auto vars:     Size  Location     Type
 26460 ;;		None
 26461 ;; Return value:  Size  Location     Type
 26462 ;;                  1    wreg      void 
 26463 ;; Registers used:
 26464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26465 ;; Tracked objects:
 26466 ;;		On entry : 0/0
 26467 ;;		On exit  : 0/0
 26468 ;;		Unchanged: 0/0
 26469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26474 ;;Total ram usage:        0 bytes
 26475 ;; Hardware stack levels used:    1
 26476 ;; Hardware stack levels required when called:    1
 26477 ;; This function calls:
 26478 ;;		Absolute function
 26479 ;;		_UART2_Receive_ISR
 26480 ;; This function is called by:
 26481 ;;		Interrupt level 2
 26482 ;; This function uses a non-reentrant model
 26483 ;;
 26484                           
 26485                           	psect	text141
 26486  018674                     __ptext141:
 26487                           	opt callstack 0
 26488  018674                     _UART2_rx_vect_isr:
 26489                           	opt callstack 13
 26490                           
 26491                           ;incstack = 0
 26492  018674  EE14  F000         	lfsr	1,___inthi_sp
 26493                           
 26494                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26495  018678  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26496  01867A  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26497  01867C  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26498  01867E  B4D8               	btfsc	status,2,c
 26499  018680  0011               	retfie		f
 26500                           
 26501                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26502  018682  D801               	call	i2u881_48
 26503  018684  0011               	retfie		f
 26504  018686                     i2u881_48:
 26505  018686  0005               	push	
 26506  018688  6EFA               	movwf	pclath,c
 26507  01868A  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 26508  01868C  6EFD               	movwf	tosl,c
 26509  01868E  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26510  018690  6EFE               	movwf	tosh,c
 26511  018692  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26512  018694  6EFF               	movwf	tosu,c
 26513  018696  50FA               	movf	pclath,w,c
 26514  018698  0012               	return		;indir
 26515  01869A                     __end_of_UART2_rx_vect_isr:
 26516                           	opt callstack 0
 26517                           
 26518 ;; *************** function _UART2_Receive_ISR *****************
 26519 ;; Defined at:
 26520 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26521 ;; Parameters:    Size  Location     Type
 26522 ;;		None
 26523 ;; Auto vars:     Size  Location     Type
 26524 ;;		None
 26525 ;; Return value:  Size  Location     Type
 26526 ;;                  1  [STACK] void 
 26527 ;; Registers used:
 26528 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26529 ;; Tracked objects:
 26530 ;;		On entry : 0/0
 26531 ;;		On exit  : 0/0
 26532 ;;		Unchanged: 0/0
 26533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26538 ;;Total ram usage:        0 bytes
 26539 ;; Hardware stack levels used:    1
 26540 ;; This function calls:
 26541 ;;		Nothing
 26542 ;; This function is called by:
 26543 ;;		_UART2_Initialize
 26544 ;;		_UART2_rx_vect_isr
 26545 ;; This function uses a reentrant model
 26546 ;;
 26547                           
 26548                           	psect	text142
 26549  018806                     __ptext142:
 26550                           	opt callstack 0
 26551  018806                     _UART2_Receive_ISR:
 26552                           	opt callstack 13
 26553                           
 26554                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26555                           
 26556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26557                           ;incstack = 0
 26558  018806  0E00               	movlw	low _uart2RxBuffer
 26559  018808  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 26560  01880A  6ED9               	movwf	fsr2l,c
 26561  01880C  6ADA               	clrf	fsr2h,c
 26562  01880E  0E07               	movlw	high _uart2RxBuffer
 26563  018810  22DA               	addwfc	fsr2h,f,c
 26564  018812  006F F743 FFDF     	movff	15824,indf2	;volatile
 26565  018818  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 26566                           
 26567                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26568  01881A  2828               	incf	_uart2RxHead^0,w,c
 26569  01881C  B4D8               	btfsc	status,2,c
 26570                           
 26571                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26572  01881E  6A28               	clrf	_uart2RxHead^0,c	;volatile
 26573                           
 26574                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26575  018820  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 26576                           
 26577                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26578  018822  0012               	return		;funcret
 26579  018824                     __end_of_UART2_Receive_ISR:
 26580                           	opt callstack 0
 26581                           
 26582 ;; *************** function _TMR6_ISR *****************
 26583 ;; Defined at:
 26584 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26585 ;; Parameters:    Size  Location     Type
 26586 ;;		None
 26587 ;; Auto vars:     Size  Location     Type
 26588 ;;		None
 26589 ;; Return value:  Size  Location     Type
 26590 ;;                  1    wreg      void 
 26591 ;; Registers used:
 26592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26593 ;; Tracked objects:
 26594 ;;		On entry : 0/0
 26595 ;;		On exit  : 0/0
 26596 ;;		Unchanged: 0/0
 26597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26602 ;;Total ram usage:        1 bytes
 26603 ;; Hardware stack levels used:    1
 26604 ;; Hardware stack levels required when called:    2
 26605 ;; This function calls:
 26606 ;;		_TMR6_CallBack
 26607 ;; This function is called by:
 26608 ;;		Interrupt level 2
 26609 ;; This function uses a non-reentrant model
 26610 ;;
 26611                           
 26612                           	psect	text143
 26613  018878                     __ptext143:
 26614                           	opt callstack 0
 26615  018878                     _TMR6_ISR:
 26616                           	opt callstack 12
 26617                           
 26618                           ;incstack = 0
 26619  018878  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 26620  01887E  EE14  F000         	lfsr	1,___inthi_sp
 26621                           
 26622                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26623  018882  0139               	movlb	57	; () banked
 26624  018884  91A9               	bcf	169,0,b	;volatile
 26625                           
 26626                           ; BSR set to: 57
 26627                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26628  018886  EC83  F0C3         	call	_TMR6_CallBack	;wreg free
 26629  01888A  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 26630  018890  0011               	retfie		f
 26631  018892                     __end_of_TMR6_ISR:
 26632                           	opt callstack 0
 26633                           
 26634 ;; *************** function _TMR6_CallBack *****************
 26635 ;; Defined at:
 26636 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26637 ;; Parameters:    Size  Location     Type
 26638 ;;		None
 26639 ;; Auto vars:     Size  Location     Type
 26640 ;;		None
 26641 ;; Return value:  Size  Location     Type
 26642 ;;                  1  [STACK] void 
 26643 ;; Registers used:
 26644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26645 ;; Tracked objects:
 26646 ;;		On entry : 3F/39
 26647 ;;		On exit  : 0/0
 26648 ;;		Unchanged: 0/0
 26649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26654 ;;Total ram usage:        0 bytes
 26655 ;; Hardware stack levels used:    1
 26656 ;; Hardware stack levels required when called:    1
 26657 ;; This function calls:
 26658 ;;		Absolute function
 26659 ;;		_TMR6_DefaultInterruptHandler
 26660 ;; This function is called by:
 26661 ;;		_TMR6_ISR
 26662 ;; This function uses a reentrant model
 26663 ;;
 26664                           
 26665                           	psect	text144
 26666  018706                     __ptext144:
 26667                           	opt callstack 0
 26668  018706                     _TMR6_CallBack:
 26669                           	opt callstack 12
 26670                           
 26671                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26672                           
 26673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26674                           ;incstack = 0
 26675  018706  0100               	movlb	0	; () banked
 26676  018708  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26677  01870A  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26678  01870C  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26679  01870E  B4D8               	btfsc	status,2,c
 26680  018710  0012               	return	
 26681                           
 26682                           ; BSR set to: 0
 26683                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26684  018712  D801               	call	u853_48
 26685  018714  0012               	return	
 26686  018716                     u853_48:
 26687  018716  0005               	push	
 26688  018718  6EFA               	movwf	pclath,c
 26689  01871A  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26690  01871C  6EFD               	movwf	tosl,c
 26691  01871E  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26692  018720  6EFE               	movwf	tosh,c
 26693  018722  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26694  018724  6EFF               	movwf	tosu,c
 26695  018726  50FA               	movf	pclath,w,c
 26696  018728  0012               	return		;indir
 26697  01872A                     __end_of_TMR6_CallBack:
 26698                           	opt callstack 0
 26699                           
 26700 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26701 ;; Defined at:
 26702 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26703 ;; Parameters:    Size  Location     Type
 26704 ;;		None
 26705 ;; Auto vars:     Size  Location     Type
 26706 ;;  i               1  [STACK] unsigned char 
 26707 ;; Return value:  Size  Location     Type
 26708 ;;                  1  [STACK] void 
 26709 ;; Registers used:
 26710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26711 ;; Tracked objects:
 26712 ;;		On entry : 3F/0
 26713 ;;		On exit  : 0/0
 26714 ;;		Unchanged: 0/0
 26715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26720 ;;Total ram usage:        0 bytes
 26721 ;; Hardware stack levels used:    1
 26722 ;; This function calls:
 26723 ;;		Nothing
 26724 ;; This function is called by:
 26725 ;;		_TMR6_Initialize
 26726 ;;		_TMR6_CallBack
 26727 ;; This function uses a reentrant model
 26728 ;;
 26729                           
 26730                           	psect	text145
 26731  017F70                     __ptext145:
 26732                           	opt callstack 0
 26733  017F70                     _TMR6_DefaultInterruptHandler:
 26734                           	opt callstack 0
 26735                           
 26736                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26737  017F70  52E6               	movf	postinc1,f,c
 26738                           
 26739                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26740                           ;stkvar	_i @ sp[(-1)+0]
 26741                           
 26742                           ;incstack = 0
 26743  017F72  0EFF               	movlw	-1
 26744  017F74  6AE3               	clrf	plusw1,c
 26745  017F76                     l8582:
 26746                           
 26747                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26748                           ;stkvar	_i @ sp[(-1)+0]
 26749  017F76  0EFF               	movlw	-1
 26750  017F78  50E3               	movf	plusw1,w,c
 26751  017F7A  0D02               	mullw	2
 26752  017F7C  50F3               	movf	243,w,c
 26753  017F7E  0F89               	addlw	low _tickCount
 26754  017F80  6ED9               	movwf	fsr2l,c
 26755  017F82  6ADA               	clrf	fsr2h,c
 26756  017F84  50DE               	movf	postinc2,w,c
 26757  017F86  10DE               	iorwf	postinc2,w,c
 26758  017F88  B4D8               	btfsc	status,2,c
 26759  017F8A  D00A               	goto	l8586
 26760                           
 26761                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26762                           ;stkvar	_i @ sp[(-1)+0]
 26763  017F8C  0EFF               	movlw	-1
 26764  017F8E  50E3               	movf	plusw1,w,c
 26765  017F90  0D02               	mullw	2
 26766  017F92  50F3               	movf	243,w,c
 26767  017F94  0F89               	addlw	low _tickCount
 26768  017F96  6ED9               	movwf	fsr2l,c
 26769  017F98  6ADA               	clrf	fsr2h,c
 26770  017F9A  06DE               	decf	postinc2,f,c
 26771  017F9C  0E00               	movlw	0
 26772  017F9E  5ADD               	subwfb	postdec2,f,c
 26773  017FA0                     l8586:
 26774                           
 26775                           ;mcc_generated_files/tmr6.c: 207:  }
 26776                           ;stkvar	_i @ sp[(-1)+0]
 26777  017FA0  0EFF               	movlw	-1
 26778  017FA2  2AE3               	incf	plusw1,f,c
 26779                           
 26780                           ;stkvar	_i @ sp[(-1)+0]
 26781  017FA4  0EFF               	movlw	-1
 26782  017FA6  006F FF8C  F032    	movff	plusw1,btemp
 26783  017FAC  0E0B               	movlw	11
 26784  017FAE  6432               	cpfsgt	btemp^0,c
 26785  017FB0  D7E2               	goto	l8582
 26786                           
 26787                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26788  017FB2  52E5               	movf	postdec1,f,c
 26789  017FB4  0012               	return		;funcret
 26790  017FB6                     __end_of_TMR6_DefaultInterruptHandler:
 26791                           	opt callstack 0
 26792                           
 26793 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26794 ;; Defined at:
 26795 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26796 ;; Parameters:    Size  Location     Type
 26797 ;;		None
 26798 ;; Auto vars:     Size  Location     Type
 26799 ;;		None
 26800 ;; Return value:  Size  Location     Type
 26801 ;;                  1    wreg      void 
 26802 ;; Registers used:
 26803 ;;		None
 26804 ;; Tracked objects:
 26805 ;;		On entry : 0/0
 26806 ;;		On exit  : 3F/0
 26807 ;;		Unchanged: 0/0
 26808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26813 ;;Total ram usage:        0 bytes
 26814 ;; Hardware stack levels used:    1
 26815 ;; This function calls:
 26816 ;;		Nothing
 26817 ;; This function is called by:
 26818 ;;		Interrupt level 2
 26819 ;; This function uses a non-reentrant model
 26820 ;;
 26821                           
 26822                           	psect	text146
 26823  018978                     __ptext146:
 26824                           	opt callstack 0
 26825  018978                     _DMA1_DMASCNT_ISR:
 26826                           	opt callstack 14
 26827                           
 26828                           ;incstack = 0
 26829  018978  EE14  F000         	lfsr	1,___inthi_sp
 26830                           
 26831                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26832  01897C  0139               	movlb	57	; () banked
 26833  01897E  91A2               	bcf	162,0,b	;volatile
 26834                           
 26835                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26836  018980  0100               	movlb	0	; () banked
 26837  018982  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26838                           
 26839                           ; BSR set to: 0
 26840  018984  0011               	retfie		f
 26841  018986                     __end_of_DMA1_DMASCNT_ISR:
 26842                           	opt callstack 0
 26843                           
 26844 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26845 ;; Defined at:
 26846 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26847 ;; Parameters:    Size  Location     Type
 26848 ;;		None
 26849 ;; Auto vars:     Size  Location     Type
 26850 ;;		None
 26851 ;; Return value:  Size  Location     Type
 26852 ;;                  1    wreg      void 
 26853 ;; Registers used:
 26854 ;;		None
 26855 ;; Tracked objects:
 26856 ;;		On entry : 0/0
 26857 ;;		On exit  : 3F/39
 26858 ;;		Unchanged: 0/0
 26859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26864 ;;Total ram usage:        0 bytes
 26865 ;; Hardware stack levels used:    1
 26866 ;; This function calls:
 26867 ;;		Nothing
 26868 ;; This function is called by:
 26869 ;;		Interrupt level 2
 26870 ;; This function uses a non-reentrant model
 26871 ;;
 26872                           
 26873                           	psect	text147
 26874  018990                     __ptext147:
 26875                           	opt callstack 0
 26876  018990                     _DMA1_DMADCNT_ISR:
 26877                           	opt callstack 14
 26878                           
 26879                           ; BSR set to: 0
 26880                           ;incstack = 0
 26881  018990  EE14  F000         	lfsr	1,___inthi_sp
 26882                           
 26883                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26884  018994  0139               	movlb	57	; () banked
 26885  018996  93A2               	bcf	162,1,b	;volatile
 26886                           
 26887                           ; BSR set to: 57
 26888  018998  0011               	retfie		f
 26889  01899A                     __end_of_DMA1_DMADCNT_ISR:
 26890                           	opt callstack 0
 26891                           
 26892 ;; *************** function _DMA1_DMAA_ISR *****************
 26893 ;; Defined at:
 26894 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26895 ;; Parameters:    Size  Location     Type
 26896 ;;		None
 26897 ;; Auto vars:     Size  Location     Type
 26898 ;;		None
 26899 ;; Return value:  Size  Location     Type
 26900 ;;                  1    wreg      void 
 26901 ;; Registers used:
 26902 ;;		None
 26903 ;; Tracked objects:
 26904 ;;		On entry : 0/0
 26905 ;;		On exit  : 3F/39
 26906 ;;		Unchanged: 0/0
 26907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26912 ;;Total ram usage:        0 bytes
 26913 ;; Hardware stack levels used:    1
 26914 ;; This function calls:
 26915 ;;		Nothing
 26916 ;; This function is called by:
 26917 ;;		Interrupt level 2
 26918 ;; This function uses a non-reentrant model
 26919 ;;
 26920                           
 26921                           	psect	text148
 26922  01899C                     __ptext148:
 26923                           	opt callstack 0
 26924  01899C                     _DMA1_DMAA_ISR:
 26925                           	opt callstack 14
 26926                           
 26927                           ; BSR set to: 57
 26928                           ;incstack = 0
 26929  01899C  EE14  F000         	lfsr	1,___inthi_sp
 26930                           
 26931                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26932  0189A0  0139               	movlb	57	; () banked
 26933  0189A2  97A2               	bcf	162,3,b	;volatile
 26934                           
 26935                           ; BSR set to: 57
 26936  0189A4  0011               	retfie		f
 26937  0189A6                     __end_of_DMA1_DMAA_ISR:
 26938                           	opt callstack 0
 26939                           
 26940 ;; *************** function _DMA1_DMAOR_ISR *****************
 26941 ;; Defined at:
 26942 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26943 ;; Parameters:    Size  Location     Type
 26944 ;;		None
 26945 ;; Auto vars:     Size  Location     Type
 26946 ;;		None
 26947 ;; Return value:  Size  Location     Type
 26948 ;;                  1    wreg      void 
 26949 ;; Registers used:
 26950 ;;		None
 26951 ;; Tracked objects:
 26952 ;;		On entry : 0/0
 26953 ;;		On exit  : 3F/39
 26954 ;;		Unchanged: 0/0
 26955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26960 ;;Total ram usage:        0 bytes
 26961 ;; Hardware stack levels used:    1
 26962 ;; This function calls:
 26963 ;;		Nothing
 26964 ;; This function is called by:
 26965 ;;		Interrupt level 2
 26966 ;; This function uses a non-reentrant model
 26967 ;;
 26968                           
 26969                           	psect	text149
 26970  0189A8                     __ptext149:
 26971                           	opt callstack 0
 26972  0189A8                     _DMA1_DMAOR_ISR:
 26973                           	opt callstack 14
 26974                           
 26975                           ; BSR set to: 57
 26976                           ;incstack = 0
 26977  0189A8  EE14  F000         	lfsr	1,___inthi_sp
 26978                           
 26979                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26980  0189AC  0139               	movlb	57	; () banked
 26981  0189AE  95A2               	bcf	162,2,b	;volatile
 26982                           
 26983                           ; BSR set to: 57
 26984  0189B0  0011               	retfie		f
 26985  0189B2                     __end_of_DMA1_DMAOR_ISR:
 26986                           	opt callstack 0
 26987                           
 26988                           ;
 26989                           ; Interrupt Vector Table @ 0x8
 26990                           ;
 26991                           
 26992                           	psect	ivt0x8
 26993  000008                     __pivt0x8:
 26994                           	opt callstack 0
 26995  000008                     ivt0x8_base:
 26996                           	opt callstack 0
 26997                           
 26998                           ; Vector 0 : SWINT
 26999  000008  627B               	dw	_Default_ISR shr (0+2)
 27000                           
 27001                           ; Vector 1 : HLVD
 27002  00000A  627B               	dw	_Default_ISR shr (0+2)
 27003                           
 27004                           ; Vector 2 : OSF
 27005  00000C  627B               	dw	_Default_ISR shr (0+2)
 27006                           
 27007                           ; Vector 3 : CSW
 27008  00000E  627B               	dw	_Default_ISR shr (0+2)
 27009                           
 27010                           ; Vector 4 : NVM
 27011  000010  627B               	dw	_Default_ISR shr (0+2)
 27012                           
 27013                           ; Vector 5 : SCAN
 27014  000012  627B               	dw	_Default_ISR shr (0+2)
 27015                           
 27016                           ; Vector 6 : CRC
 27017  000014  627B               	dw	_Default_ISR shr (0+2)
 27018                           
 27019                           ; Vector 7 : IOC
 27020  000016  627B               	dw	_Default_ISR shr (0+2)
 27021                           
 27022                           ; Vector 8 : INT0
 27023  000018  625A               	dw	_INT0_ISR shr (0+2)
 27024                           
 27025                           ; Vector 9 : ZCD
 27026  00001A  627B               	dw	_Default_ISR shr (0+2)
 27027                           
 27028                           ; Vector 10 : AD
 27029  00001C  60DE               	dw	_ADCC_ISR shr (0+2)
 27030                           
 27031                           ; Vector 11 : ADT
 27032  00001E  5E69               	dw	_ADCC_ThresholdISR shr (0+2)
 27033                           
 27034                           ; Vector 12 : CMP1
 27035  000020  627B               	dw	_Default_ISR shr (0+2)
 27036                           
 27037                           ; Vector 13 : SMT1
 27038  000022  627B               	dw	_Default_ISR shr (0+2)
 27039                           
 27040                           ; Vector 14 : SMT1PRA
 27041  000024  627B               	dw	_Default_ISR shr (0+2)
 27042                           
 27043                           ; Vector 15 : SMT1PRW
 27044  000026  627B               	dw	_Default_ISR shr (0+2)
 27045                           
 27046                           ; Vector 16 : DMA1SCNT
 27047  000028  625E               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27048                           
 27049                           ; Vector 17 : DMA1DCNT
 27050  00002A  6264               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27051                           
 27052                           ; Vector 18 : DMA1OR
 27053  00002C  626A               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27054                           
 27055                           ; Vector 19 : DMA1A
 27056  00002E  6267               	dw	_DMA1_DMAA_ISR shr (0+2)
 27057                           
 27058                           ; Vector 20 : SPI1RX
 27059  000030  627B               	dw	_Default_ISR shr (0+2)
 27060                           
 27061                           ; Vector 21 : SPI1TX
 27062  000032  627B               	dw	_Default_ISR shr (0+2)
 27063                           
 27064                           ; Vector 22 : SPI1
 27065  000034  627B               	dw	_Default_ISR shr (0+2)
 27066                           
 27067                           ; Vector 23 : I2C1RX
 27068  000036  627B               	dw	_Default_ISR shr (0+2)
 27069                           
 27070                           ; Vector 24 : I2C1TX
 27071  000038  627B               	dw	_Default_ISR shr (0+2)
 27072                           
 27073                           ; Vector 25 : I2C1
 27074  00003A  627B               	dw	_Default_ISR shr (0+2)
 27075                           
 27076                           ; Vector 26 : I2C1E
 27077  00003C  627B               	dw	_Default_ISR shr (0+2)
 27078                           
 27079                           ; Vector 27 : U1RX
 27080  00003E  6189               	dw	_UART1_rx_vect_isr shr (0+2)
 27081                           
 27082                           ; Vector 28 : U1TX
 27083  000040  617F               	dw	_UART1_tx_vect_isr shr (0+2)
 27084                           
 27085                           ; Vector 29 : U1E
 27086  000042  627B               	dw	_Default_ISR shr (0+2)
 27087                           
 27088                           ; Vector 30 : U1
 27089  000044  627B               	dw	_Default_ISR shr (0+2)
 27090                           
 27091                           ; Vector 31 : TMR0
 27092  000046  627B               	dw	_Default_ISR shr (0+2)
 27093                           
 27094                           ; Vector 32 : TMR1
 27095  000048  627B               	dw	_Default_ISR shr (0+2)
 27096                           
 27097                           ; Vector 33 : TMR1G
 27098  00004A  627B               	dw	_Default_ISR shr (0+2)
 27099                           
 27100                           ; Vector 34 : TMR2
 27101  00004C  627B               	dw	_Default_ISR shr (0+2)
 27102                           
 27103                           ; Vector 35 : CCP1
 27104  00004E  627B               	dw	_Default_ISR shr (0+2)
 27105                           
 27106                           ; Vector 36 : Undefined
 27107  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27108                           
 27109                           ; Vector 37 : NCO1
 27110  000052  627B               	dw	_Default_ISR shr (0+2)
 27111                           
 27112                           ; Vector 38 : CWG1
 27113  000054  627B               	dw	_Default_ISR shr (0+2)
 27114                           
 27115                           ; Vector 39 : CLC1
 27116  000056  627B               	dw	_Default_ISR shr (0+2)
 27117                           
 27118                           ; Vector 40 : INT1
 27119  000058  601F               	dw	_INT1_ISR shr (0+2)
 27120                           
 27121                           ; Vector 41 : CMP2
 27122  00005A  627B               	dw	_Default_ISR shr (0+2)
 27123                           
 27124                           ; Vector 42 : DMA2SCNT
 27125  00005C  627B               	dw	_Default_ISR shr (0+2)
 27126                           
 27127                           ; Vector 43 : DMA2DCNT
 27128  00005E  627B               	dw	_Default_ISR shr (0+2)
 27129                           
 27130                           ; Vector 44 : DMA2OR
 27131  000060  627B               	dw	_Default_ISR shr (0+2)
 27132                           
 27133                           ; Vector 45 : DMA2A
 27134  000062  627B               	dw	_Default_ISR shr (0+2)
 27135                           
 27136                           ; Vector 46 : I2C2RX
 27137  000064  627B               	dw	_Default_ISR shr (0+2)
 27138                           
 27139                           ; Vector 47 : I2C2TX
 27140  000066  627B               	dw	_Default_ISR shr (0+2)
 27141                           
 27142                           ; Vector 48 : I2C2
 27143  000068  627B               	dw	_Default_ISR shr (0+2)
 27144                           
 27145                           ; Vector 49 : I2C2E
 27146  00006A  627B               	dw	_Default_ISR shr (0+2)
 27147                           
 27148                           ; Vector 50 : U2RX
 27149  00006C  619D               	dw	_UART2_rx_vect_isr shr (0+2)
 27150                           
 27151                           ; Vector 51 : U2TX
 27152  00006E  6193               	dw	_UART2_tx_vect_isr shr (0+2)
 27153                           
 27154                           ; Vector 52 : U2E
 27155  000070  627B               	dw	_Default_ISR shr (0+2)
 27156                           
 27157                           ; Vector 53 : U2
 27158  000072  627B               	dw	_Default_ISR shr (0+2)
 27159                           
 27160                           ; Vector 54 : TMR3
 27161  000074  627B               	dw	_Default_ISR shr (0+2)
 27162                           
 27163                           ; Vector 55 : TMR3G
 27164  000076  627B               	dw	_Default_ISR shr (0+2)
 27165                           
 27166                           ; Vector 56 : TMR4
 27167  000078  627B               	dw	_Default_ISR shr (0+2)
 27168                           
 27169                           ; Vector 57 : CCP2
 27170  00007A  627B               	dw	_Default_ISR shr (0+2)
 27171                           
 27172                           ; Vector 58 : Undefined
 27173  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27174                           
 27175                           ; Vector 59 : CWG2
 27176  00007E  627B               	dw	_Default_ISR shr (0+2)
 27177                           
 27178                           ; Vector 60 : CLC2
 27179  000080  627B               	dw	_Default_ISR shr (0+2)
 27180                           
 27181                           ; Vector 61 : INT2
 27182  000082  627B               	dw	_Default_ISR shr (0+2)
 27183                           
 27184                           ; Vector 62 : Undefined
 27185  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27186                           
 27187                           ; Vector 63 : Undefined
 27188  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27189                           
 27190                           ; Vector 64 : Undefined
 27191  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27192                           
 27193                           ; Vector 65 : Undefined
 27194  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27195                           
 27196                           ; Vector 66 : Undefined
 27197  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27198                           
 27199                           ; Vector 67 : Undefined
 27200  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27201                           
 27202                           ; Vector 68 : Undefined
 27203  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27204                           
 27205                           ; Vector 69 : Undefined
 27206  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27207                           
 27208                           ; Vector 70 : TMR5
 27209  000094  5F17               	dw	_TMR5_ISR shr (0+2)
 27210                           
 27211                           ; Vector 71 : TMR5G
 27212  000096  627B               	dw	_Default_ISR shr (0+2)
 27213                           
 27214                           ; Vector 72 : TMR6
 27215  000098  621E               	dw	_TMR6_ISR shr (0+2)
 27216                           
 27217                           ; Vector 73 : CCP3
 27218  00009A  627B               	dw	_Default_ISR shr (0+2)
 27219                           
 27220                           ; Vector 74 : CWG3
 27221  00009C  627B               	dw	_Default_ISR shr (0+2)
 27222                           
 27223                           ; Vector 75 : CLC3
 27224  00009E  627B               	dw	_Default_ISR shr (0+2)
 27225                           
 27226                           ; Vector 76 : Undefined
 27227  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27228                           
 27229                           ; Vector 77 : Undefined
 27230  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27231                           
 27232                           ; Vector 78 : Undefined
 27233  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27234                           
 27235                           ; Vector 79 : Undefined
 27236  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27237                           
 27238                           ; Vector 80 : CCP4
 27239  0000A8  627B               	dw	_Default_ISR shr (0+2)
 27240                           
 27241                           ; Vector 81 : CLC4
 27242  0000AA  627B               	dw	_Default_ISR shr (0+2)
 27243  0000AC                     ivt0x8_undefint:
 27244                           	opt callstack 0
 27245  0000AC  00FF               	reset	
 27246                           
 27247                           	psect	text150
 27248  000000                     __ptext150:
 27249                           	opt callstack 0
 27250                           
 27251                           	psect	rparam
 27252  0000                     
 27253                           	psect	temp
 27254  000032                     btemp:
 27255                           	opt callstack 0
 27256  000032                     	ds	32
 27257  0000                     wtemp0	set	btemp
 27258  0000                     wtemp1	set	btemp+2
 27259  0000                     wtemp2	set	btemp+4
 27260  0000                     wtemp3	set	btemp+6
 27261  0000                     wtemp4	set	btemp+8
 27262  0000                     wtemp5	set	btemp+10
 27263  0000                     wtemp8	set	btemp+1
 27264  0000                     ttemp0	set	btemp
 27265  0000                     ttemp1	set	btemp+3
 27266  0000                     ttemp2	set	btemp+6
 27267  0000                     ttemp3	set	btemp+9
 27268  0000                     ttemp5	set	btemp+1
 27269  0000                     ttemp6	set	btemp+4
 27270  0000                     ttemp7	set	btemp+8
 27271  0000                     ltemp0	set	btemp
 27272  0000                     ltemp1	set	btemp+4
 27273  0000                     ltemp2	set	btemp+8
 27274  0000                     lltemp0	set	btemp
 27275  0000                     lltemp1	set	btemp+8
 27276  0000                     lltemp2	set	btemp+16
 27277  0000                     lltemp3	set	btemp+24
 27278                           tosu	equ	0x3FFF
 27279                           tosh	equ	0x3FFE
 27280                           tosl	equ	0x3FFD
 27281                           stkptr	equ	0x3FFC
 27282                           pclatu	equ	0x3FFB
 27283                           pclath	equ	0x3FFA
 27284                           pcl	equ	0x3FF9
 27285                           tblptru	equ	0x3FF8
 27286                           tblptrh	equ	0x3FF7
 27287                           tblptrl	equ	0x3FF6
 27288                           tablat	equ	0x3FF5
 27289                           prodh	equ	0x3FF4
 27290                           prodl	equ	0x3FF3
 27291                           indf0	equ	0x3FEF
 27292                           postinc0	equ	0x3FEE
 27293                           postdec0	equ	0x3FED
 27294                           preinc0	equ	0x3FEC
 27295                           plusw0	equ	0x3FEB
 27296                           fsr0h	equ	0x3FEA
 27297                           fsr0l	equ	0x3FE9
 27298                           wreg	equ	0x3FE8
 27299                           indf1	equ	0x3FE7
 27300                           postinc1	equ	0x3FE6
 27301                           postdec1	equ	0x3FE5
 27302                           preinc1	equ	0x3FE4
 27303                           plusw1	equ	0x3FE3
 27304                           fsr1h	equ	0x3FE2
 27305                           fsr1l	equ	0x3FE1
 27306                           bsr	equ	0x3FE0
 27307                           indf2	equ	0x3FDF
 27308                           postinc2	equ	0x3FDE
 27309                           postdec2	equ	0x3FDD
 27310                           preinc2	equ	0x3FDC
 27311                           plusw2	equ	0x3FDB
 27312                           fsr2h	equ	0x3FDA
 27313                           fsr2l	equ	0x3FD9
 27314                           status	equ	0x3FD8


Data Sizes:
    Strings     355
    Constant    144
    Data        256
    BSS         1430
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     160
    BANK1           256      4     228
    BANK2           256      0     251
    BANK3           256      0     211
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_36(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_19(CODE[9]), STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_19(CODE[9]), STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_42(CODE[4]), STR_41(CODE[4]), STR_38(CODE[4]), STR_37(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_42(CODE[4]), STR_41(CODE[4]), STR_38(CODE[4]), STR_37(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5085_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[24]), STR_26(CODE[15]), STR_25(CODE[15]), STR_24(CODE[15]), 
		 -> STR_23(CODE[10]), STR_22(CODE[10]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), STR_10(CODE[19]), 
		 -> STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_19(CODE[9]), STR_18(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_19(CODE[9]), STR_18(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_19(CODE[9]), 
		 -> STR_18(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    h	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    h	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    S4012tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_19(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_18(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[187]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 6
		 -> H(BANK0[6]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  302663
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     342
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166972
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D3      11       82.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      E4       7       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6A4      58        0.0%
DATA                 0      0     6A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 30 18:29:11 2019

                     _SPI1_Exchange8bit 878E                __end_of_set_display_info 87E8  
                                     _C 0100                                       _D 0500  
                                     _H 00F6                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FE0B                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 8532            __end_of_start_switch_handler 878E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 89DA                             __CFG_LVP$ON 000000  
                                   l171 88FE                                     l701 8348  
                                   l581 831C                                     l835 879C  
                                   _GIE 01FE97                                     _abs 7E58  
                                   _pad 6966                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 88AA                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 874C                      _UART1_Transmit_ISR 82F6  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 872A  
                          __CFG_ZCD$OFF 000000                                    l2002 4134  
                                  l1028 8076                                    l1250 3326  
                                  l2052 1D78                                    l1260 34DC  
                                  l1343 7CC2                                    l1258 34D6  
                                  l2340 6288                                    l1701 5EF2  
                                  l1616 87E4                                    l2336 6FFE  
                                  l2347 635C                                    l1483 751C  
                                  l2614 2D5E                                    l2374 61FA  
                                  l1559 8112                                    l1479 7166  
                                  l1576 6B84                                    l1568 5800  
                                  l1664 3C6A                                    l2626 2BEE  
                                  l1498 8146                                    l1843 69C2  
                                  l1780 7642                                    l1790 73F6  
                  _ADCC_StartConversion 8918                                    l1863 3D4E  
                                  l1943 0B1A                                    l2735 5B6A  
                                  l1928 066A                                    l2922 77CC  
                                  l2659 32D8                                    l2907 5D32  
                                  l7012 2550                                    l7004 250C  
                                  l2861 6844                                    l1981 4BEC  
                                  l7014 256A                                    l6310 2732  
                                  l2766 7E98                                    l2758 6088  
                                  l2695 25A2                                    l2935 7748  
                                  l6400 2A6E                                    l6304 26F2  
                                  l7040 63A0                                    l6322 279A  
                                  l6314 2748                                    l7210 7E00  
                                  l7034 638A                                    l7106 694C  
                                  l7122 6FFC                                    l7114 6F86  
                                  l7130 6246                                    l1899 123A  
                                  l6404 2AA0                                    l6316 2778  
                                  l6252 72E2                                    l7060 6466  
                                  l7140 6324                                    l2797 52AA  
                                  l6254 7304                                    l7046 63C0  
                                  l7118 6FC8                                    l6440 2C2E  
                                  l6416 2B78                                    l6352 28D8  
                                  l6280 2602                                    l7080 686E  
                                  l7136 62D6                                    l6450 2C56  
                                  l6434 2C10                                    l6426 2BD2  
                                  l6418 2B9E                                    l6362 294A  
                                  l6290 2658                                    l6522 7E88  
                                  l6602 47EC                                    l6436 2C22  
                                  l6372 2986                                    l6292 2688  
                                  l7068 649A                                    l7084 6880  
                                  l7148 635A                                    l7156 7E2E  
                                  l6540 602A                                    l6620 7738  
                                  l6454 2C5C                                    l6366 296A  
                                  l6286 2642                                    l8046 86DA  
                                  l7190 6192                                    l7182 6166  
                                  l7166 60E4                                    l8126 8150  
                                  l8206 5AE8                                    l6480 2CFE  
                                  l6368 297C                                    l6376 29B6  
                                  l7088 6898                                    l7192 61A8  
                                  l7184 6182                                    l6536 6026  
                                  l8216 5B4A                                    l6482 2D0E  
                                  l6466 2CBA                                    l6394 2A52  
                                  l6298 26C0                                    l6642 4E76  
                                  l7098 6918                                    l6802 3112  
                                  l6722 2DFE                                    l6546 6080  
                                  l6900 1F1C                                    l6476 2CE6  
                                  l6396 2A64                                    l6660 4F8E  
                                  l6636 4E22                                    l6812 3154  
                                  l6716 2DBE                                    l6564 77BC  
                                  l8164 842C                                    l9150 781A  
                                  l6822 319E                                    l6742 2EDC  
                                  l6726 2E14                                    l8182 5A26  
                                  l8174 59BA                                    l9046 785A  
                                  l9070 73A4                                    l9062 736A  
                                  l9144 780A                                    l6488 2D3E  
                                  l6648 4EBC                                    l6680 5566  
                                  l6808 312E                                    l6760 2F9A  
                                  l6736 2E9C                                    l6728 2E44  
                                  l6592 46E6                                    l8184 5A34  
                                  l6842 3254                                    l6826 31A4  
                                  l6754 2F60                                    l6746 2EF2  
                                  l6594 4736                                    l6578 45C8  
                                  l8194 5A96                                    l8186 5A4A  
                                  l9074 73C2                                    l6908 1F3E  
                                  l7740 511C                                    l7724 505A  
                                  l6836 3218                                    l6748 2F22  
                                  l8196 5AB4                                    l8188 5A68  
                                  l7750 51FE                                    l7742 5134  
                                  l7734 50F0                                    l7726 507C  
                                  l9510 7690                                    l6854 32AC  
                                  l6598 477E                                    l9502 6EB8  
                                  l8198 5ACA                                    l8702 37F6  
                                  l9078 73D0                                    l8800 64DE  
                                  l6960 2396                                    l6880 1E1E  
                                  l6872 1DD8                                    l7760 529A  
                                  l7744 5158                                    l6696 569A  
                                  l6688 55EE                                    l6856 32BC  
                                  l6848 3284                                    l6768 2FB4  
                                  l8712 3914                                    l8802 64E4  
                                  l8810 6526                                    l6970 23D8  
                                  l6890 1EA6                                    l6882 1E4E  
                                  l7746 5196                                    l6794 30E0  
                                  l6786 307A                                    l6778 3044  
                                  l8804 64F2                                    l6980 2422  
                                  l8660 8128                                    l9460 675A  
                                  l9508 7664                                    l6788 308C  
                                  l6796 30E4                                    l9700 05F6  
                                  l8724 3A20                                    l8716 39EE  
                                  l8582 7F76                                    l6966 23B2  
                                  l6878 1E18                                    l9542 3D88  
                                  l9534 3D3E                                    l9702 0602  
                                  l9606 00F0                                    l9614 0146  
                                  l8742 3C38                                    l8750 3C4A  
                                  l8824 65C4                                    l8816 6556  
                                  l8808 64FA                                    l6984 2428  
                                  l6896 1EE6                                    l9472 740A  
                                  l9624 01EA                                    l9632 0258  
                                  l7776 5BFC                                    l8736 3B9C  
                                  l8728 3ABC                                    l8840 75FC  
                                  l8586 7FA0                                    l6994 249C  
                                  l6898 1EEC                                    l9482 6992  
                                  l9546 3DA6                                    l9722 06F0  
                                  l9642 02FC                                    l9650 032A  
                                  l9626 0216                                    l7778 5C68  
                                  l9476 7448                                    l9492 6A08  
                                  l9580 40A6                                    l9556 3FB8  
                                  l9804 0D90                                    l9812 0EA2  
                                  l9628 022C                                    l8918 8344  
                                  l6998 24E2                                    l8774 5DA0  
                                  l8766 5D74                                    l9486 69BA  
                                  l9718 06B8                                    l9662 0406  
                                  l8944 805E                                    l9496 6A52  
                                  l9488 69CC                                    l9576 406A  
                                  l9840 0FF0                                    l9824 0F3A  
                                  l9760 0B12                                    l9752 0A48  
                                  l9728 077A                                    l9680 0554  
                                  l9664 0470                                    l9920 4C8E  
                                  l9912 4C22                                    l8696 37C6  
                                  l8778 5DB8                                    l9850 1092  
                                  l9762 0B34                                    l9738 0926  
                                  l9658 0396                                    l9594 00AC  
                                  l9930 4D44                                    l8796 64C8  
                                  l9860 10E2                                    l9692 0594  
                                  l9684 057C                                    l9668 04D2  
                                  l9916 4C5E                                    l8798 64D8  
                                  l9838 0FD6                                    l9686 058E  
                                  l9934 4D80                                    l9926 4D18  
                                  STR_1 FF80                                    l8896 8318  
                                  l9776 0C32                                    l9960 419A  
                                  STR_2 FFB1                                    STR_3 FFDF  
                                  l9954 415E                                    STR_4 FF6F  
                                  STR_5 FF91                                    l9876 119A  
                                  l9788 0CBA                                    l9796 0D24  
                                  l9948 4124                                    STR_6 FFB1  
                                  STR_7 FFDF                                    STR_8 FF5E  
                                  STR_9 FEEC                                    l9896 4B6E  
                                  l9984 42F0                                    l9968 41FA  
                                  l9992 4376                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5000 825C  
                                  u5010 825E                                    _T2PR 003FAB  
                                  u5120 6078                                    u5200 45AC  
                                  u6010 2476                                    u5130 607A  
                                  u5115 605A                                    u6020 24B0  
                                  u5060 7E6C                                    u6100 6486  
                                  u5300 7FF0                                    u6030 24F6  
                                  u5070 5FAA                                    u5310 76F6  
                                  u6015 2466                                    u5240 468C  
                                  u5160 777A                                    u5320 76F8  
                                  u5401 4E7C                                    u5225 45E6  
                                  u4530 7332                                    u5410 4EB6  
                                  u6210 6FF8                                    u5226 45EC  
                                  u5170 777C                                    _T6PR 003F93  
                                  u5075 5FA0                                    u5227 45FA  
                                  u5340 82BC                                    u5420 4EE8  
                                  u6300 6112                                    u5260 4764  
                                  _PMD0 0039C0                                    u5245 4682  
                                  _PMD1 0039C1                                    u5350 82BE  
                                  u5510 55B6                                    u6150 68C4  
                                  u5190 4560                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u8000 7A1A  
                                  u4720 29AE                                    u5440 4FC6  
                                  u5520 55E8                                    u6080 63EC  
                                  u4560 828C                                    _PMD4 0039C4  
                                  u4537 7324                                    u6305 6108  
                                  u5265 475A                                    _PMD5 0039C5  
                                  u4730 29CE                                    u5370 4E1C  
                                  u5530 561A                                    u6170 6938  
                                  u4570 828E                                    u5290 7FEE  
                                  _PMD6 0039C6                                    u5195 4556  
                                  _PMD7 0039C7                                    u5460 5018  
                                  u4725 299E                                    u4830 2BC0  
                                  u4670 28FE                                    u5390 4E72  
                                  u5550 56D2                                    u5710 310C  
                                  u6270 7E2A                                    u6350 61B0  
                                  u4680 291E                                    u5800 322C  
                                  u6280 60C4                                    u8025 7A4E  
                                  u4681 2918                                    u8026 7A50  
                                  u8018 7A1C                                    u4930 2CAA  
                                  u7410 5244                                    u5570 5724  
                                  u5490 5560                                    u5810 3268  
                                  u6370 61DA                                    u6290 60D8  
                                  u9010 6F32                                    u5900 1F2C  
                                  u6380 7DDC                                    u7420 5246  
                                  u9100 3D24                                    u6285 60BA  
                                  u4870 2C34                                    u4790 2A96  
                                  u6390 7DFC                                    u5750 3196  
                                  u8214 3AD6                                    u8134 37E0  
                                  u4935 2C9A                                    u8215 3AD0  
                                  u8135 37DA                                    u4960 2CCA  
                                  u9120 3D74                                    u8240 3B00  
                                  u9017 6F24                                    u4890 2C4E  
                                  u4698 2920                                    u8250 5D52  
                                  u9130 3FCC                                    u9050 3CA0  
                                  u8234 3AF8                                    u8154 3810  
                                  u5915 20C0                                    u4795 2A86  
                                  u8235 3AF2                                    u8155 380A  
                                  u9060 3CA2                                    u9300 02A6  
                                  u8420 762E                                    u5925 2188  
                                  u9141 3FFC                                    u7390 50EC  
                                  u9150 4012                                    u5790 31F2  
                                  u9310 02A8                                    u9230 00DA  
                                  u8174 3832                                    u5935 2350  
                                  u9151 4010                                    u8175 382C  
                                  u9160 4026                                    u9080 3D12  
                                  u8408 75EA                                    u5970 241A  
                                  u9170 402A                                    u9410 05C6  
                                  u7490 5CF4                                    u8194 3A08  
                                  u5795 31E2                                    u8195 3A02  
                                  u9260 0194                                    u9190 4040  
                                  u9350 050E                                    u9270 0196  
                                  u8438 7630                                    u8390 75E8  
                                  u9520 0A18                                    u9450 0648  
                                  u9700 116E                                    u9620 0EE4  
                                  u9380 0562                                    u9710 1170  
                                  u7960 5ADE                                    u8930 674E  
                                  _PLLR 01CEE0                                    u7875 802A  
                                  u9820 4DA6                                    u8950 67CA  
                                  u9910 42A6                                    u9680 10B8  
                                  u9920 42A8                                    u9840 410A  
                                  u9780 4C84                                    u9940 4372  
                                  u9790 4CCA                                    u9950 4392  
                                  u9870 41F2                                    u9880 4246  
                                  u9961 43C2                                    u9945 4354  
                                  u9970 43D8                                    u9890 4248  
                                  u9971 43D6                                    u9980 43EC  
                                  u9797 4CBC                                    u9990 43F0  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 83A2                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0178                                    _atoi 5040  
                                  _ctoa 7646                                    _main 32E2  
                                  _dtoa 3C70                                    _nanf 7B3A  
                                  _seed 01C8                                    _prec 001D  
                                  _nout 0019                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 4B02                                    btemp 0032  
                                  _xtoa 40F0                  __end_of_check_adc_scan 89D2  
                         ___fpclassifyf 5EFC                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0023               __end_of_SPI1_Exchange8bit 87AC  
             __size_of_clear_hid_pflags 0024                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 8624                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 8976  
                      __end_of_INT1_ISR 80BA          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 716E           __end_of_OSCILLATOR_Initialize 8904  
                                 l10102 18E8                                   l10030 1326  
                                 l10008 4460                                   l10032 1360  
                                 l10200 49D6                                   l10106 191C  
                                 l10034 1376                                   l10052 14A8  
                                 l10220 7198                                   l10150 1CA6  
                                 l10126 1A7C                                   l10054 14E2  
                                 l10222 71D8                                   l10160 1D04  
                                 l10136 1B2A                                   l10072 165C  
                                 l10056 14F8                                   l10208 4A84  
                                 l10082 16F2                                   l10306 6A9C  
                                 l10156 1D00                                   l10094 1830  
                                 l10166 1D24                                   l10272 726E  
                                 l10424 57D0                                   l10194 496C  
                                 l10188 48AE                                   l10454 5962  
                                 l10438 58FE                                   l10550 3542  
                                 l10536 34E0                                   l10570 375E  
                                 l10562 3574                                   l10538 350E  
                                 l10564 3636                                   l10492 332E  
                                 l10558 3566                                   l10494 3340  
                                 l10486 3308                                   l10568 3740  
                                 l10576 377E                                   l10488 3310  
                                 l10586 37B2                                   PRLOCK 0039EF  
                       __end_of___aodiv 5040                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 2D68  
                                 _ADCLK 003EFF                         __end_of___aomod 5748  
                                 _ADPCH 003EF1                         __end_of___fldiv 32E2  
                                 _ADREF 003EFD                         __end_of___awdiv 64B4  
                       __end_of___flneg 7E58                                   STR_10 FF12  
                                 STR_11 FEFF                                   STR_12 FF4B  
                                 STR_20 FEC6                                   STR_21 FEC6  
                                 STR_13 FF25                                   STR_22 FFCC  
                                 STR_14 FF38                                   STR_30 FEB3  
                                 STR_23 FFCC                                   STR_15 FFFB  
                                 STR_16 FFF8                                   STR_24 FFA2  
                                 STR_25 FFA2                                   STR_41 FFE9  
                         __CFG_WDTE$OFF 000000                                   STR_26 FFA2  
                                 STR_42 FFF1                                   STR_18 FFC0  
                                 STR_19 FFD6                                   STR_27 FE9B  
                                 STR_36 FEC5                         __end_of___awmod 6966  
                                 STR_45 FFF5                                   STR_37 FFE5  
                                 STR_29 FED9                                   STR_38 FFED  
                                 STR_47 FFF5                                   _ADRPT 003EEC  
                       __end_of___flmul 25AC                         __end_of___flsub 7EE4  
                       __end_of___fltol 6204                                   u10100 1542  
                                 u10110 1568                                   u10200 19D8  
                                 u10040 13BE                                   u10050 13C0  
                                 u10060 13E6                                   u10300 4AF8  
                                 u10240 1B7E                                   u10160 1746  
                                 u10090 1540                                   u10330 724E  
                                 u10420 594E                                   u10190 19D6  
                                 u10430 5950                                   _U1P1H 003DED  
                                 _U1P2H 003DEF                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   _U1P3L 003DF0  
                                 _U2P1L 003DD4                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0001  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0057                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 89EC  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 85FC                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 7CB8                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 8892                            _DMA1CON1bits 003BFD  
                                 _flags 001F                __size_of_calc_model_data 0254  
                                 _fputc 672A              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 7FFA                                   _fputs 73FA  
                       __end_of_isdigit 82C8                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0052                                   _srand 81D0  
                                 _width 001B                                   _putch 885C  
                       __end_of_islower 8268                         __end_of_isspace 7E10  
              _INT1_SetInterruptHandler 8532                         __end_of_isupper 8298  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0032                                   ltemp1 0036  
                                 ltemp2 003A                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0032                                   ttemp1 0035  
                                 ttemp2 0038                                   ttemp3 003B  
                                 ttemp5 0033                                   ttemp6 0036  
                                 ttemp7 003A                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 84E2             _UART1_SetRxInterruptHandler 84BA  
                                 wtemp0 0032                                   wtemp1 0034  
                                 wtemp2 0036                                   wtemp3 0038  
                                 wtemp4 003A                                   wtemp5 003C  
                                 wtemp8 0033                         __end_of_sprintf 6C92  
                       __end_of_tolower 77D6                         __end_of_strncmp 5D3C  
                       __end_of_toupper 7752                     ??_UART1_tx_vect_isr 0057  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 864A  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 7F2A  
                 __end_of_ringBufS_init 841A                         __initialization 6C92  
                     _UART2_rx_vect_isr 8674                            __end_of_atoi 52B4  
                          __end_of_ctoa 76CE                            __end_of_main 37C4  
                          __end_of_dtoa 40F0                            __end_of_nanf 7B9C  
                          __end_of_stoa 4DC0                            __end_of_xtoa 44AA  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0052  
               __end_of_TMR2_Initialize 88C2                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 850A                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 8622  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 834E  
                       _PWM8_Initialize 88D8                        _UART1_Initialize 7AD6  
                     _UART2_tx_vect_isr 864C                      _UART2_Transmit_ISR 8322  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7A72  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 7FFA  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 7CAA  
                  _start_switch_handler 876E                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 8958  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u806_20 85DA                                  u806_26 85DC  
                                u831_20 64EE                                  u831_21 64E8  
                                u398_48 875A                                  u835_24 65BA  
                                u835_25 65B6                                  u837_20 65E0  
                                u828_28 64CE                                  u837_26 65E2  
                                u845_28 8738                                  u853_48 8716  
                                u870_44 783A                                  u870_45 7834  
                                u856_28 86F2                    __size_of_hid_display 009C  
                      __end_of___xxtofl 5B74   __end_of_ADCC_DischargeSampleCapacitor 89BA  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 89B2  
              __end_of_send_lcd_cmd_dma 7DBE                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 869A              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 8986                        _UART2_Initialize 7BFE  
                                _WaitMs 812E                         _conv_raw_result 37C4  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 6204                                  ___fleq 6F44  
                     _ADCC_ThresholdISR 79A4                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 7492                                  _efgtoa 0000  
                                _floorf 44AA                      ?_ADCC_ThresholdISR 0052  
                                _memset 4816                    __size_of_help_button 0038  
                                clear_0 6D00                                  clear_1 6D14  
                                clear_2 6D26                                  clear_3 6D32  
                                clear_4 6D3E                                  clear_5 6D4A  
                                clear_6 6D56                                  clear_7 6D62  
                                clear_8 6D6E                                  _printf 7B9C  
                    _eaDogM_WriteString 7216                                  _strcpy 6E70  
                             ?_ADCC_ISR 0052                                  _strlen 72BC  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7938  
                        _PMD_Initialize 8904               __end_of_UART2_tx_vect_isr 8672  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 7AD6  
                          __mediumconst FE0A                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 7D12  
                      __end_of_vfprintf 7216                              _StartTimer 80BA  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 7F70  
                     _SYSTEM_Initialize 7EE4                              __accesstop 0060  
               __end_of__initialization 6D80                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 89CA  
                  __end_of_display_info 89C2               __end_of_CLKREF_Initialize 8990  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 803C                   _set_temp_display_help 893A  
                      _clear_hid_pflags 869A               __end_of_ADCC_ThresholdISR 7A0C  
                __end_of_ringBufS_flush 7524                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 819A                            __pidataBANK1 892A  
                          __pidataBANK2 7008                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 684E                           __end_of_fputs 7492  
                         __end_of_srand 8204                   __end_of_TMR5_CallBack 8706  
                         __end_of_putch 8876                 __end_of_PWM8_Initialize 88EE  
               __end_of_TMR6_Initialize 8378                       _adc_int_t_handler 77D6  
                __end_of_PMD_Initialize 8918                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 872A             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 899C  
                        _clear_adc_scan 89DA                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 7F2A                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 0100                              __pbssBANK2 02BB  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 5748  
               __end_of_conv_raw_result 3C70                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00FC  
                     __end_of_TimerDone 86E2                        _DMA1_DMADCNT_ISR 8990  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8840  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 850A  
               __end_of_ADCC_Initialize 79A2                              ??_TMR5_ISR 01E0  
             __end_of_adc_int_t_handler 7854                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 85AA   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8582                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 87E8  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 89E0                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 8978                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 841A                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 807C                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8892  
                               __Lparam 0000                __end_of_UART1_Initialize 7B3A  
                     __end_of_hid_input 7646                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 4DC0                                 ___fladd 25AC  
                               ___aomod 5508                                 ___fldiv 2D68  
                               ___awdiv 6366                                 ___flneg 7E10  
                               ___awmod 684E                                 ___flmul 1D82  
                               ___flsub 7E9E                                 ___fltol 6092  
             __end_of_UART1_Receive_ISR 8806                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 6E70  
                               __pcinit 6C92                __end_of_mode_lamp_bright 8966  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 894A                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 32E2  
                               __ptext1 876E                                 __ptext2 7A72  
                               __ptext3 8918                                 __ptext4 89B2  
                               __ptext5 81D0                                 __ptext6 6D86  
                               __ptext7 83A2                                 __ptext8 83CA  
                               __ptext9 878E                       _UART2_Receive_ISR 8806  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 88EE                            __size_of_abs 0046  
                               us547999 502A                            __size_of_pad 0114  
                               us558999 5736                                 _isalpha 7FB6  
                               _isdigit 8298                                 us904999 3C8A  
                               _mode_sw 0025                                 us973999 4B14  
                               us986999 4170                       __end_of_lp_filter 5EFC  
                               _islower 8238                                 _isspace 7DBE  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 7C5C                                 _isupper 8268  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 6B88  
                               _tolower 7752                   __size_of_display_help 0008  
                               _utctime 00B5                   __size_of_display_info 0008  
                               _strncmp 5B74                                 _toupper 76CE  
                  end_of_initialization 6D80               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 84BA             _UART1_SetTxInterruptHandler 8492  
   __end_of_UART2_SetRxInterruptHandler 8492             _UART2_SetRxInterruptHandler 846A  
                     __end_of_set_vterm 885C                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 89EC  
             __end_of_UART2_Receive_ISR 8824                          wdtdelay@dcount 00B9  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 84E2  
                          _display_help 89C2                   _TMR5_InterruptHandler 00C1  
                          _display_info 89BA    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags 86BE                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 85D2             _ADCC_SetADIInterruptHandler 85AA  
                            _update_lcd 6A7A                         _calc_model_data 52B4  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 78CE                         _SPI1_Initialize 88C2  
                 __end_of_get_vterm_ptr 82F6                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 8164  
          __end_of_INTERRUPT_Initialize 7A72                              _vterm_dump 65FC  
                        __end_of___flge 6366                          __end_of___fleq 7008  
  __end_of_INT0_DefaultInterruptHandler 89F6   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 89F4              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 7D12                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0228                          __end_of_floorf 4816  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 00AD  
                        __end_of_memset 4B02                          __end_of_printf 7BFE  
              __end_of_DMA1_DMADCNT_ISR 899A             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 876E                          __end_of_strcpy 6F44  
                        __end_of_strlen 735E                     start_initialization 6C92  
  __end_of_TMR5_DefaultInterruptHandler 85FA   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 85D2         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 7E9E                   __end_of_INT1_CallBack 874C  
             __size_of_set_display_info 001E                             __end_of_pad 6A7A  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 83F2  
                        _switch_handler 64B4           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 6092                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 02BB                __end_of_DMA1_DMASCNT_ISR 8986  
                         _uart2TxBuffer 0350                          _DMA1_DMAOR_ISR 89A8  
                   __end_of_hid_display 73FA                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 86BE                           _ringBufS_init 83F2  
                           __pdataBANK0 00C7                             __pdataBANK1 01D0  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 8238  
               __end_of_calc_model_data 5508                     __end_of_help_button 812E  
       __end_of_eaDogM_WriteStringAtPos 819A                 __end_of_DMA1_Initialize 7938  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 8582  
                         __pcstackBANK0 00FC                           __pcstackBANK1 01E0  
              __size_of_TMR2_Initialize 0018                  __end_of_switch_handler 65FC  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 88D8  
              _UART1_RxInterruptHandler 000A                _UART2_TxInterruptHandler 000D  
                             __end_of_T FE9B                        _convert_adc_data 7854  
             __size_of_ringBufS_put_dma 00AA                            _init_display 6D86  
                __end_of_DMA1_DMAOR_ISR 89B2                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00C4                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 7D6C                  _PIN_MANAGER_Initialize 7524  
                  __end_of_wait_lcd_set 89E6                           __pmediumconst FE0A  
                             __ptext100 850A                               __ptext101 88AA  
                             __ptext110 8532                               __ptext102 88C2  
                             __ptext111 855A                               __ptext103 88D8  
                             __ptext120 89F2                               __ptext112 7D12  
                             __ptext104 8904                               __ptext121 64B4  
                             __ptext113 78CE                               __ptext105 7524  
                             __ptext130 8378                               __ptext122 7C5C  
                             __ptext114 8986                               __ptext106 88EE  
                             __ptext131 77D6                               __ptext123 803C  
                             __ptext115 7938                               __ptext107 7A0C  
                             __ptext140 8322                               __ptext132 89F6  
                             __ptext124 86E2                               __ptext116 8582  
                             __ptext108 89D2                               __ptext141 8674  
                             __ptext133 89F8                               __ptext125 85D2  
                             __ptext117 85AA                               __ptext109 8204  
                             __ptext150 0000                               __ptext142 8806  
                             __ptext134 79A4                               __ptext126 8968  
                             __ptext118 807C                               __ptext143 8878  
                             __ptext135 85FC                               __ptext127 874C  
                             __ptext119 872A                               __ptext144 8706  
                             __ptext136 82F6                               __ptext128 89F4  
                             __ptext145 7F70                               __ptext137 8624  
                             __ptext129 89EC                               __ptext146 8978  
                             __ptext138 87E8                               __ptext147 8990  
                             __ptext139 864C                               __ptext148 899C  
                             __ptext149 89A8                               _hid_input 75B6  
                    __end_of_StartTimer 80F6                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 8378  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 5D3C                             _hid_display 735E  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 7A0C                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 8968                                _INT1_ISR 807C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0390                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                i2u428_48 838E  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u881_48 8686  
                              i2u873_48 79D8                                i2u873_49 79EC  
                              i2u875_48 860E                __size_of_TMR5_Initialize 0046  
                              i2u877_48 8636                                i2u879_48 865E  
                             _set_vterm 8840                     __size_of_update_lcd 010E  
                           _help_button 80F6              __end_of_UART1_Transmit_ISR 8322  
                              _TMR5_ISR 7C5C                                _TMR6_ISR 8878  
                             _port_data 01D0                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 86E2  
                            _ADCON0bits 003EF8                      __end_of_check_help 5970  
                             _start_lcd 89E6                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 8706  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 87CA                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6CA6                               copy_data1 6CC8  
                             copy_data2 6CEA                _INT0_SetInterruptHandler 855A  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 846A             _UART2_SetTxInterruptHandler 8442  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 8824  
                          _send_lcd_cmd 83CA                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 89F8                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 8442                   __end_of_DMA1_DMAA_ISR 89A6  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 5970  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 8958                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 83F2  
                              __ptext11 735E                                __ptext20 869A  
                              __ptext12 75B6                                __ptext21 89DA  
                              __ptext13 841A                                __ptext30 8824  
                              __ptext22 5748                                __ptext14 894A  
                              __ptext31 7CB8                                __ptext23 65FC  
                              __ptext15 7854                                __ptext40 40F0  
                              __ptext32 7216                                __ptext24 6B88  
                              __ptext16 37C4                                __ptext41 76CE  
                              __ptext33 89E0                                __ptext25 82C8  
                              __ptext17 7B3A                                __ptext50 44AA  
                              __ptext42 8238                                __ptext34 89E6  
                              __ptext26 812E                                __ptext18 87AC  
                              __ptext51 5EFC                                __ptext43 7FB6  
                              __ptext35 7492                                __ptext27 6A7A  
                              __ptext19 5970                                __ptext60 7E58  
                              __ptext52 6092                                __ptext44 5B74  
                              __ptext36 4816                                __ptext28 8164  
                              __ptext61 5508                                __ptext53 7E10  
                              __ptext45 4B02                                __ptext37 7B9C  
                              __ptext29 7D6C                                __ptext70 5040  
                              __ptext62 4DC0                                __ptext54 6204  
                              __ptext46 0000                                __ptext38 716E  
                              __ptext71 7DBE                                __ptext63 7646  
                              __ptext55 6F44                                __ptext47 7752  
                              __ptext39 1244                                __ptext80 86BE  
                              __ptext72 8298                                __ptext64 6966  
                              __ptext56 2D68                                __ptext48 8268  
                              __ptext81 80BA                                __ptext73 8840  
                              __ptext65 72BC                                __ptext57 684E  
                              __ptext49 6E70                                __ptext90 7EE4  
                              __ptext82 89BA                                __ptext74 893A  
                              __ptext66 73FA                                __ptext58 6366  
                              __ptext91 7BFE                                __ptext83 89C2  
                              __ptext75 87CA                                __ptext67 672A  
                              __ptext59 3C70                                __ptext92 8442  
                              __ptext84 89CA                                __ptext76 8892  
                              __ptext68 885C                                __ptext93 846A  
                              __ptext85 52B4                                __ptext77 8958  
                              __ptext69 70C4                                __ptext94 7AD6  
                              __ptext86 5D3C                                __ptext78 7FFA  
                              __ptext95 8492                                __ptext87 7E9E  
                              __ptext79 80F6                                __ptext96 84BA  
                              __ptext88 25AC                                __ptext97 834E  
                              __ptext89 1D82                                __ptext98 84E2  
                              __ptext99 7F2A                        __size_of_isupper 0030  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 70C4                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 04E2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 00EF                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 892A                                _spi_link 00A1  
                              _wdtdelay 7CB8              __end_of_UART2_Transmit_ISR 834E  
                              _vfprintf 716E                __end_of_convert_adc_data 78CE  
            __end_of_PWM8_LoadDutyValue 803C    __end_of_INT1_DefaultInterruptHandler 89F4  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 89F2  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 87AC                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 89E0  
                    _EXT_INT_Initialize 8204    __end_of_TMR6_DefaultInterruptHandler 7FB6  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 7F70  
  __end_of_ADCC_DefaultInterruptHandler 89F8   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 89F6                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 83A2  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 894A  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 72BC  
                 __end_of_mode_lamp_dim 88AA                 __end_of_adc_int_handler 89FA  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6B88                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 89D2                  __end_of_get_raw_result 87CA  
                      _send_lcd_cmd_dma 7D6C                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 855A  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 83CA  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 89F2  
        __end_of_PIN_MANAGER_Initialize 75B6               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 672A                 _eaDogM_WriteStringAtPos 8164  
                         _get_vterm_ptr 82C8                          _check_adc_scan 89CA  
             __size_of_UART2_Initialize 005E  
