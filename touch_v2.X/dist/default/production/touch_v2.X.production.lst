

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 13 00:54:00 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=4,class=CODE,delta=1
   195                           	psect	text170,global,reloc=4,class=CODE,delta=1
   196                           	psect	text171,global,reloc=4,class=CODE,delta=1
   197                           	psect	text172,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text173,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_k	offset	0
   240 ;;_j	offset	1
   241 ;;_i	offset	2
   242 ;;_inp_index	offset	3
   243 ;;_mode	offset	4
   244 ;;_i_ror	offset	5
   245 ;;_s	offset=-2 (param)
   246 ;;_c	offset	0
   247 ;;_shape	offset=-1 (param)
   248 ;;_reset	offset=-2 (param)
   249 ;;_cmd	offset=-1 (param)
   250 ;;_cmd	offset=-1 (param)
   251 ;;_data	offset=-1 (param)
   252 ;;__this	offset=-2 (param)
   253 ;;_cvoltage	offset=-4 (param)
   254 ;;_h	offset=-1 (param)
   255 ;;_h	offset=-1 (param)
   256 ;;_i	offset=-1 (param)
   257 ;;_channel	offset=-1 (param)
   258 ;;_mode	offset=-1 (param)
   259 ;;_mode	offset=-1 (param)
   260 ;;_cmd	offset=-1 (param)
   261 ;;_i	offset	0
   262 ;;_h	offset=-1 (param)
   263 ;;_flipper	offset=-1 (param)
   264 ;;_f	offset	0
   265 ;;_ap	offset	6
   266 ;;_s	offset=-3 (param)
   267 ;;_fmt	offset=-5 (param)
   268 ;;_line	offset=-1 (param)
   269 ;;_vterm	offset=-2 (param)
   270 ;;_numMilliseconds	offset=-2 (param)
   271 ;;_vterm	offset=-1 (param)
   272 ;;_r	offset=-1 (param)
   273 ;;_c	offset=-2 (param)
   274 ;;_strPtr	offset=-4 (param)
   275 ;;_strPtr	offset=-1 (param)
   276 ;;_delay	offset=-4 (param)
   277 ;;_strPtr	offset=-2 (param)
   278 ;;__this	offset=-2 (param)
   279 ;;_clearBuffer	offset=-3 (param)
   280 ;;_s	offset	0
   281 ;;_k	offset	2
   282 ;;_dest	offset=-2 (param)
   283 ;;_c	offset=-4 (param)
   284 ;;_n	offset=-6 (param)
   285 ;;_ap	offset	0
   286 ;;_fmt	offset=-3 (param)
   287 ;;_cfmt	offset	0
   288 ;;_fp	offset=-2 (param)
   289 ;;_fmt	offset=-4 (param)
   290 ;;_ap	offset=-6 (param)
   291 ;;_vfpfcnvrt$5353	offset	0
   292 ;;_vfpfcnvrt$5364	offset	2
   293 ;;_vfpfcnvrt$5352	offset	4
   294 ;;_llu	offset	6
   295 ;;_ll	offset	14
   296 ;;_f	offset	22
   297 ;;_ct	offset	26
   298 ;;_cp	offset	29
   299 ;;_c	offset	31
   300 ;;_fp	offset=-2 (param)
   301 ;;_fmt	offset=-4 (param)
   302 ;;_ap	offset=-6 (param)
   303 ;;_xtoa$5338	offset	0
   304 ;;_xtoa$5337	offset	2
   305 ;;_n	offset	4
   306 ;;_c	offset	12
   307 ;;_i	offset	14
   308 ;;_w	offset	16
   309 ;;_p	offset	18
   310 ;;_fp	offset=-2 (param)
   311 ;;_d	offset=-10 (param)
   312 ;;_x	offset=-11 (param)
   313 ;;_toupper$6144	offset	0
   314 ;;_c	offset=-2 (param)
   315 ;;_c	offset=-2 (param)
   316 ;;_c	offset=-2 (param)
   317 ;;_n	offset	0
   318 ;;_i	offset	8
   319 ;;_w	offset	10
   320 ;;_p	offset	12
   321 ;;_fp	offset=-2 (param)
   322 ;;_d	offset=-10 (param)
   323 ;;_counter	offset	0
   324 ;;_dividend	offset=-8 (param)
   325 ;;_divisor	offset=-16 (param)
   326 ;;_quotient	offset	0
   327 ;;_counter	offset	8
   328 ;;_dividend	offset=-8 (param)
   329 ;;_divisor	offset=-16 (param)
   330 ;;_r	offset	0
   331 ;;_l	offset	2
   332 ;;__l	offset=-2 (param)
   333 ;;__r	offset=-4 (param)
   334 ;;_n	offset=-6 (param)
   335 ;;_nuls	offset	0
   336 ;;_l	offset	7
   337 ;;_p	offset	9
   338 ;;_cp	offset	11
   339 ;;_w	offset	13
   340 ;;_i	offset	15
   341 ;;_fp	offset=-2 (param)
   342 ;;_s	offset=-4 (param)
   343 ;;_efgtoa$5310	offset	0
   344 ;;_efgtoa$5309	offset	2
   345 ;;_efgtoa$5308	offset	4
   346 ;;_efgtoa$5304	offset	6
   347 ;;_efgtoa$5300	offset	8
   348 ;;_efgtoa$5299	offset	10
   349 ;;_u	offset	12
   350 ;;_g	offset	16
   351 ;;_l	offset	20
   352 ;;_h	offset	24
   353 ;;_ou	offset	28
   354 ;;_n	offset	32
   355 ;;_e	offset	34
   356 ;;_i	offset	36
   357 ;;_w	offset	38
   358 ;;_p	offset	40
   359 ;;_sign	offset	42
   360 ;;_d	offset	44
   361 ;;_ne	offset	46
   362 ;;_m	offset	48
   363 ;;_pp	offset	50
   364 ;;_t	offset	52
   365 ;;_mode	offset	54
   366 ;;_nmode	offset	55
   367 ;;_fp	offset=-2 (param)
   368 ;;_f	offset=-6 (param)
   369 ;;_c	offset=-7 (param)
   370 ;;_tolower$6129	offset	0
   371 ;;_c	offset=-2 (param)
   372 ;;_c	offset=-2 (param)
   373 ;;_d	offset	0
   374 ;;_s	offset	2
   375 ;;_dest	offset=-2 (param)
   376 ;;_src	offset=-4 (param)
   377 ;;_u	offset	0
   378 ;;_m	offset	4
   379 ;;_e	offset	8
   380 ;;_x	offset=-4 (param)
   381 ;;_u	offset	0
   382 ;;_e	offset	4
   383 ;;_x	offset=-4 (param)
   384 ;;_exp1	offset	0
   385 ;;_sign1	offset	1
   386 ;;_f1	offset=-4 (param)
   387 ;;_f1	offset=-4 (param)
   388 ;;_ff1	offset=-4 (param)
   389 ;;_ff2	offset=-8 (param)
   390 ;;_sign	offset	0
   391 ;;_counter	offset	1
   392 ;;_dividend	offset=-2 (param)
   393 ;;_divisor	offset=-4 (param)
   394 ;;_quotient	offset	0
   395 ;;_sign	offset	2
   396 ;;_counter	offset	3
   397 ;;_dividend	offset=-2 (param)
   398 ;;_divisor	offset=-4 (param)
   399 ;;_dtoa$5276	offset	0
   400 ;;_n	offset	2
   401 ;;_i	offset	10
   402 ;;_s	offset	12
   403 ;;_w	offset	14
   404 ;;_p	offset	16
   405 ;;_fp	offset=-2 (param)
   406 ;;_d	offset=-10 (param)
   407 ;;_a	offset=-2 (param)
   408 ;;_sign	offset	0
   409 ;;_counter	offset	1
   410 ;;_dividend	offset=-8 (param)
   411 ;;_divisor	offset=-16 (param)
   412 ;;_quotient	offset	0
   413 ;;_sign	offset	8
   414 ;;_counter	offset	9
   415 ;;_dividend	offset=-8 (param)
   416 ;;_divisor	offset=-16 (param)
   417 ;;_w	offset	0
   418 ;;_fp	offset=-2 (param)
   419 ;;_c	offset=-3 (param)
   420 ;;_w	offset	0
   421 ;;_i	offset	2
   422 ;;_fp	offset=-2 (param)
   423 ;;_buf	offset=-4 (param)
   424 ;;_p	offset=-6 (param)
   425 ;;_a	offset	0
   426 ;;_s	offset=-2 (param)
   427 ;;_i	offset	0
   428 ;;_c	offset	2
   429 ;;_s	offset=-2 (param)
   430 ;;_fp	offset=-4 (param)
   431 ;;_c	offset=-2 (param)
   432 ;;_fp	offset=-4 (param)
   433 ;;_c	offset=-1 (param)
   434 ;;__this	offset=-2 (param)
   435 ;;_c	offset=-3 (param)
   436 ;;_atoi$5860	offset	0
   437 ;;_atoi$5858	offset	2
   438 ;;_atoi$5859	offset	4
   439 ;;_n	offset	5
   440 ;;_neg	offset	7
   441 ;;_s	offset=-2 (param)
   442 ;;_isspace$5909	offset	0
   443 ;;_c	offset=-2 (param)
   444 ;;_c	offset=-2 (param)
   445 ;;_vterm	offset=-1 (param)
   446 ;;_new_response_info	offset=-1 (param)
   447 ;;_new_response_info	offset=-1 (param)
   448 ;;_level	offset=-2 (param)
   449 ;;_dutyValue	offset=-2 (param)
   450 ;;_timer	offset=-1 (param)
   451 ;;_timer	offset=-1 (param)
   452 ;;_count	offset=-3 (param)
   453 ;;_h	offset=-1 (param)
   454 ;;_u	offset	0
   455 ;;_x	offset=-4 (param)
   456 ;;_chan	offset=-1 (param)
   457 ;;_to_what	offset=-2 (param)
   458 ;;_u	offset	0
   459 ;;_s	offset=-2 (param)
   460 ;;_index	offset=-1 (param)
   461 ;;_arg	offset	0
   462 ;;_exp	offset	4
   463 ;;_sign	offset=-1 (param)
   464 ;;_val	offset=-5 (param)
   465 ;;_grs	offset	0
   466 ;;_rem	offset	4
   467 ;;_new_exp	offset	8
   468 ;;_aexp	offset	10
   469 ;;_bexp	offset	11
   470 ;;_sign	offset	12
   471 ;;_b	offset=-4 (param)
   472 ;;_a	offset=-8 (param)
   473 ;;_ff1	offset=-4 (param)
   474 ;;_ff2	offset=-8 (param)
   475 ;;_lp_speed	offset	0
   476 ;;_new	offset=-4 (param)
   477 ;;_bn	offset=-5 (param)
   478 ;;_slow	offset=-6 (param)
   479 ;;_b	offset=-4 (param)
   480 ;;_a	offset=-8 (param)
   481 ;;_grs	offset	0
   482 ;;_bexp	offset	1
   483 ;;_aexp	offset	2
   484 ;;_signs	offset	3
   485 ;;_b	offset=-4 (param)
   486 ;;_a	offset=-8 (param)
   487 ;;_prod	offset	0
   488 ;;_grs	offset	4
   489 ;;_temp	offset	8
   490 ;;_bexp	offset	10
   491 ;;_aexp	offset	11
   492 ;;_sign	offset	12
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_InterruptHandler	offset=-3 (param)
   496 ;;_InterruptHandler	offset=-3 (param)
   497 ;;_InterruptHandler	offset=-3 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_state	offset	0
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_i	offset	0
   507 ;;_sw_value	offset	1
   508 ;;_timerVal	offset=-2 (param)
   509 ;;_timerVal	offset=-2 (param)
   510 ;;_log_ptr	offset	0
   511 ;;_f	offset	0
   512 ;;_ap	offset	6
   513 ;;_s	offset=-3 (param)
   514 ;;_fmt	offset=-5 (param)
   515 ;;_cfmt	offset	0
   516 ;;_fp	offset=-2 (param)
   517 ;;_fmt	offset=-4 (param)
   518 ;;_ap	offset=-6 (param)
   519 ;;_vfpfcnvrt$5353	offset	0
   520 ;;_vfpfcnvrt$5364	offset	2
   521 ;;_vfpfcnvrt$5352	offset	4
   522 ;;_llu	offset	6
   523 ;;_ll	offset	14
   524 ;;_f	offset	22
   525 ;;_ct	offset	26
   526 ;;_cp	offset	29
   527 ;;_c	offset	31
   528 ;;_fp	offset=-2 (param)
   529 ;;_fmt	offset=-4 (param)
   530 ;;_ap	offset=-6 (param)
   531 ;;_xtoa$5338	offset	0
   532 ;;_xtoa$5337	offset	2
   533 ;;_n	offset	4
   534 ;;_c	offset	12
   535 ;;_i	offset	14
   536 ;;_w	offset	16
   537 ;;_p	offset	18
   538 ;;_fp	offset=-2 (param)
   539 ;;_d	offset=-10 (param)
   540 ;;_x	offset=-11 (param)
   541 ;;_toupper$6144	offset	0
   542 ;;_c	offset=-2 (param)
   543 ;;_c	offset=-2 (param)
   544 ;;_c	offset=-2 (param)
   545 ;;_n	offset	0
   546 ;;_i	offset	8
   547 ;;_w	offset	10
   548 ;;_p	offset	12
   549 ;;_fp	offset=-2 (param)
   550 ;;_d	offset=-10 (param)
   551 ;;_counter	offset	0
   552 ;;_dividend	offset=-8 (param)
   553 ;;_divisor	offset=-16 (param)
   554 ;;_quotient	offset	0
   555 ;;_counter	offset	8
   556 ;;_dividend	offset=-8 (param)
   557 ;;_divisor	offset=-16 (param)
   558 ;;_r	offset	0
   559 ;;_l	offset	2
   560 ;;__l	offset=-2 (param)
   561 ;;__r	offset=-4 (param)
   562 ;;_n	offset=-6 (param)
   563 ;;_nuls	offset	0
   564 ;;_l	offset	7
   565 ;;_p	offset	9
   566 ;;_cp	offset	11
   567 ;;_w	offset	13
   568 ;;_i	offset	15
   569 ;;_fp	offset=-2 (param)
   570 ;;_s	offset=-4 (param)
   571 ;;_efgtoa$5310	offset	0
   572 ;;_efgtoa$5309	offset	2
   573 ;;_efgtoa$5308	offset	4
   574 ;;_efgtoa$5304	offset	6
   575 ;;_efgtoa$5300	offset	8
   576 ;;_efgtoa$5299	offset	10
   577 ;;_u	offset	12
   578 ;;_g	offset	16
   579 ;;_l	offset	20
   580 ;;_h	offset	24
   581 ;;_ou	offset	28
   582 ;;_n	offset	32
   583 ;;_e	offset	34
   584 ;;_i	offset	36
   585 ;;_w	offset	38
   586 ;;_p	offset	40
   587 ;;_sign	offset	42
   588 ;;_d	offset	44
   589 ;;_ne	offset	46
   590 ;;_m	offset	48
   591 ;;_pp	offset	50
   592 ;;_t	offset	52
   593 ;;_mode	offset	54
   594 ;;_nmode	offset	55
   595 ;;_fp	offset=-2 (param)
   596 ;;_f	offset=-6 (param)
   597 ;;_c	offset=-7 (param)
   598 ;;_tolower$6129	offset	0
   599 ;;_c	offset=-2 (param)
   600 ;;_c	offset=-2 (param)
   601 ;;_d	offset	0
   602 ;;_s	offset	2
   603 ;;_dest	offset=-2 (param)
   604 ;;_src	offset=-4 (param)
   605 ;;_u	offset	0
   606 ;;_m	offset	4
   607 ;;_e	offset	8
   608 ;;_x	offset=-4 (param)
   609 ;;_u	offset	0
   610 ;;_e	offset	4
   611 ;;_x	offset=-4 (param)
   612 ;;_exp1	offset	0
   613 ;;_sign1	offset	1
   614 ;;_f1	offset=-4 (param)
   615 ;;_b	offset=-4 (param)
   616 ;;_a	offset=-8 (param)
   617 ;;_grs	offset	0
   618 ;;_bexp	offset	1
   619 ;;_aexp	offset	2
   620 ;;_signs	offset	3
   621 ;;_b	offset=-4 (param)
   622 ;;_a	offset=-8 (param)
   623 ;;_f1	offset=-4 (param)
   624 ;;_prod	offset	0
   625 ;;_grs	offset	4
   626 ;;_temp	offset	8
   627 ;;_bexp	offset	10
   628 ;;_aexp	offset	11
   629 ;;_sign	offset	12
   630 ;;_b	offset=-4 (param)
   631 ;;_a	offset=-8 (param)
   632 ;;_ff1	offset=-4 (param)
   633 ;;_ff2	offset=-8 (param)
   634 ;;_ff1	offset=-4 (param)
   635 ;;_ff2	offset=-8 (param)
   636 ;;_grs	offset	0
   637 ;;_rem	offset	4
   638 ;;_new_exp	offset	8
   639 ;;_aexp	offset	10
   640 ;;_bexp	offset	11
   641 ;;_sign	offset	12
   642 ;;_b	offset=-4 (param)
   643 ;;_a	offset=-8 (param)
   644 ;;_sign	offset	0
   645 ;;_counter	offset	1
   646 ;;_dividend	offset=-2 (param)
   647 ;;_divisor	offset=-4 (param)
   648 ;;_quotient	offset	0
   649 ;;_sign	offset	2
   650 ;;_counter	offset	3
   651 ;;_dividend	offset=-2 (param)
   652 ;;_divisor	offset=-4 (param)
   653 ;;_dtoa$5276	offset	0
   654 ;;_n	offset	2
   655 ;;_i	offset	10
   656 ;;_s	offset	12
   657 ;;_w	offset	14
   658 ;;_p	offset	16
   659 ;;_fp	offset=-2 (param)
   660 ;;_d	offset=-10 (param)
   661 ;;_a	offset=-2 (param)
   662 ;;_sign	offset	0
   663 ;;_counter	offset	1
   664 ;;_dividend	offset=-8 (param)
   665 ;;_divisor	offset=-16 (param)
   666 ;;_quotient	offset	0
   667 ;;_sign	offset	8
   668 ;;_counter	offset	9
   669 ;;_dividend	offset=-8 (param)
   670 ;;_divisor	offset=-16 (param)
   671 ;;_w	offset	0
   672 ;;_fp	offset=-2 (param)
   673 ;;_c	offset=-3 (param)
   674 ;;_w	offset	0
   675 ;;_i	offset	2
   676 ;;_fp	offset=-2 (param)
   677 ;;_buf	offset=-4 (param)
   678 ;;_p	offset=-6 (param)
   679 ;;_a	offset	0
   680 ;;_s	offset=-2 (param)
   681 ;;_i	offset	0
   682 ;;_c	offset	2
   683 ;;_s	offset=-2 (param)
   684 ;;_fp	offset=-4 (param)
   685 ;;_c	offset=-2 (param)
   686 ;;_fp	offset=-4 (param)
   687 ;;_c	offset=-1 (param)
   688 ;;__this	offset=-2 (param)
   689 ;;_c	offset=-3 (param)
   690 ;;_atoi$5860	offset	0
   691 ;;_atoi$5858	offset	2
   692 ;;_atoi$5859	offset	4
   693 ;;_n	offset	5
   694 ;;_neg	offset	7
   695 ;;_s	offset=-2 (param)
   696 ;;_isspace$5909	offset	0
   697 ;;_c	offset=-2 (param)
   698 ;;_c	offset=-2 (param)
   699 ;;_dsize	offset=-2 (param)
   700 ;;_timer	offset=-1 (param)
   701 ;;_count	offset=-3 (param)
   702 ;;_channel	offset=-1 (param)
   703 ;;_i	offset	0
   704                           
   705                           	psect	idataBIGRAM
   706  017460                     __pidataBIGRAM:
   707                           	opt callstack 0
   708                           
   709                           ;initializer for _port_data
   710  017460  FF                 	db	255
   711  017461  00                 	db	0
   712  017462  FF                 	db	255
   713  017463  00                 	db	0
   714  017464  FF                 	db	255
   715  017465  00                 	db	0
   716  017466  FF                 	db	255
   717  017467  00                 	db	0
   718  017468  FF                 	db	255
   719  017469  00                 	db	0
   720  01746A  FF                 	db	255
   721  01746B  00                 	db	0
   722  01746C  FF                 	db	255
   723  01746D  00                 	db	0
   724  01746E  FF                 	db	255
   725  01746F  00                 	db	0
   726  017470  00                 	db	0
   727  017471  00                 	db	0
   728  017472  00                 	db	0
   729  017473  00                 	db	0
   730  017474  00                 	db	0
   731  017475  00                 	db	0
   732  017476  00                 	db	0
   733  017477  00                 	db	0
   734  017478  00                 	db	0
   735  017479  00                 	db	0
   736  01747A  00                 	db	0
   737  01747B  00                 	db	0
   738  01747C  00                 	db	0
   739  01747D  00                 	db	0
   740  01747E  00                 	db	0
   741  01747F  00                 	db	0
   742  017480  00                 	db	0
   743  017481  00                 	db	0
   744  017482  00                 	db	0
   745  017483  00                 	db	0
   746  017484  00                 	db	0
   747  017485  00                 	db	0
   748  017486  00                 	db	0
   749  017487  00                 	db	0
   750  017488  00                 	db	0
   751  017489  00                 	db	0
   752  01748A  00                 	db	0
   753  01748B  00                 	db	0
   754  01748C  00                 	db	0
   755  01748D  00                 	db	0
   756  01748E  00                 	db	0
   757  01748F  00                 	db	0
   758  017490  00                 	db	0
   759  017491  00                 	db	0
   760  017492  00                 	db	0
   761  017493  00                 	db	0
   762  017494  00                 	db	0
   763  017495  00                 	db	0
   764  017496  00                 	db	0
   765  017497  00                 	db	0
   766  017498  00                 	db	0
   767  017499  00                 	db	0
   768  01749A  00                 	db	0
   769  01749B  00                 	db	0
   770  01749C  00                 	db	0
   771  01749D  00                 	db	0
   772  01749E  00                 	db	0
   773  01749F  00                 	db	0
   774  0174A0  00                 	db	0
   775  0174A1  00                 	db	0
   776  0174A2  00                 	db	0
   777  0174A3  00                 	db	0
   778  0174A4  00                 	db	0
   779  0174A5  00                 	db	0
   780  0174A6  00                 	db	0
   781  0174A7  00                 	db	0
   782  0174A8  00                 	db	0
   783  0174A9  00                 	db	0
   784  0174AA  00                 	db	0
   785  0174AB  00                 	db	0
   786  0174AC  00                 	db	0
   787  0174AD  00                 	db	0
   788  0174AE  00                 	db	0
   789  0174AF  00                 	db	0
   790  0174B0  00                 	db	0
   791  0174B1  00                 	db	0
   792  0174B2  00                 	db	0
   793  0174B3  00                 	db	0
   794  0174B4  00                 	db	0
   795  0174B5  00                 	db	0
   796  0174B6  00                 	db	0
   797  0174B7  00                 	db	0
   798  0174B8  00                 	db	0
   799  0174B9  00                 	db	0
   800  0174BA  00                 	db	0
   801  0174BB  00                 	db	0
   802  0174BC  00                 	db	0
   803  0174BD  00                 	db	0
   804  0174BE  00                 	db	0
   805  0174BF  00                 	db	0
   806  0174C0  00                 	db	0
   807  0174C1  00                 	db	0
   808  0174C2  00                 	db	0
   809  0174C3  00                 	db	0
   810  0174C4  00                 	db	0
   811  0174C5  00                 	db	0
   812  0174C6  00                 	db	0
   813  0174C7  00                 	db	0
   814  0174C8  00                 	db	0
   815  0174C9  00                 	db	0
   816  0174CA  00                 	db	0
   817  0174CB  00                 	db	0
   818  0174CC  00                 	db	0
   819  0174CD  00                 	db	0
   820  0174CE  00                 	db	0
   821  0174CF  00                 	db	0
   822  0174D0  00                 	db	0
   823  0174D1  00                 	db	0
   824  0174D2  00                 	db	0
   825  0174D3  00                 	db	0
   826  0174D4  00                 	db	0
   827  0174D5  00                 	db	0
   828  0174D6  00                 	db	0
   829  0174D7  00                 	db	0
   830  0174D8  00                 	db	0
   831  0174D9  00                 	db	0
   832  0174DA  00                 	db	0
   833  0174DB  00                 	db	0
   834  0174DC  00                 	db	0
   835  0174DD  00                 	db	0
   836  0174DE  00                 	db	0
   837  0174DF  00                 	db	0
   838  0174E0  00                 	db	0
   839  0174E1  00                 	db	0
   840  0174E2  00                 	db	0
   841  0174E3  00                 	db	0
   842  0174E4  00                 	db	0
   843  0174E5  00                 	db	0
   844  0174E6  00                 	db	0
   845  0174E7  00                 	db	0
   846  0174E8  00                 	db	0
   847  0174E9  00                 	db	0
   848  0174EA  00                 	db	0
   849  0174EB  00                 	db	0
   850  0174EC  00                 	db	0
   851  0174ED  00                 	db	0
   852  0174EE  00                 	db	0
   853  0174EF  00                 	db	0
   854  0174F0  00                 	db	0
   855  0174F1  00                 	db	0
   856  0174F2  00                 	db	0
   857  0174F3  00                 	db	0
   858  0174F4  00                 	db	0
   859  0174F5  00                 	db	0
   860  0174F6  00                 	db	0
   861  0174F7  00                 	db	0
   862  0174F8  00                 	db	0
   863  0174F9  00                 	db	0
   864  0174FA  00                 	db	0
   865  0174FB  00                 	db	0
   866  0174FC  00                 	db	0
   867  0174FD  00                 	db	0
   868  0174FE  00                 	db	0
   869  0174FF  00                 	db	0
   870  017500  00                 	db	0
   871  017501  00                 	db	0
   872  017502  00                 	db	0
   873  017503  00                 	db	0
   874  017504  00                 	db	0
   875  017505  00                 	db	0
   876  017506  00                 	db	0
   877  017507  00                 	db	0
   878  017508  00                 	db	0
   879  017509  00                 	db	0
   880  01750A  00                 	db	0
   881  01750B  00                 	db	0
   882  01750C  00                 	db	0
   883  01750D  00                 	db	0
   884  01750E  00                 	db	0
   885  01750F  00                 	db	0
   886  017510  00                 	db	0
   887  017511  00                 	db	0
   888  017512  00                 	db	0
   889  017513  00                 	db	0
   890  017514  00                 	db	0
   891  017515  00                 	db	0
   892  017516  00                 	db	0
   893  017517  00                 	db	0
   894  017518  00                 	db	0
   895  017519  00                 	db	0
   896  01751A  00                 	db	0
   897  01751B  00                 	db	0
   898  01751C  00                 	db	0
   899  01751D  00                 	db	0
   900  01751E  00                 	db	0
   901  01751F  00                 	db	0
   902  017520  00                 	db	0
   903  017521  00                 	db	0
   904  017522  00                 	db	0
   905  017523  00                 	db	0
   906  017524  00                 	db	0
   907  017525  00                 	db	0
   908  017526  00                 	db	0
   909  017527  00                 	db	0
   910  017528  00                 	db	0
   911  017529  00                 	db	0
   912  01752A  00                 	db	0
   913  01752B  00                 	db	0
   914  01752C  00                 	db	0
   915  01752D  00                 	db	0
   916  01752E  00                 	db	0
   917  01752F  00                 	db	0
   918  017530  00                 	db	0
   919  017531  00                 	db	0
   920  017532  00                 	db	0
   921  017533  00                 	db	0
   922  017534  00                 	db	0
   923  017535  00                 	db	0
   924  017536  00                 	db	0
   925  017537  00                 	db	0
   926  017538  00                 	db	0
   927  017539  00                 	db	0
   928  01753A  00                 	db	0
   929  01753B  00                 	db	0
   930  01753C  00                 	db	0
   931  01753D  00                 	db	0
   932  01753E  00                 	db	0
   933  01753F  00                 	db	0
   934  017540  00                 	db	0
   935  017541  00                 	db	0
   936  017542  00                 	db	0
   937  017543  00                 	db	0
   938  017544  00                 	db	0
   939  017545  00                 	db	0
   940  017546  00                 	db	0
   941  017547  00                 	db	0
   942  017548  00                 	db	0
   943  017549  00                 	db	0
   944  01754A  00                 	db	0
   945  01754B  00                 	db	0
   946  01754C  00                 	db	0
   947  01754D  00                 	db	0
   948  01754E  00                 	db	0
   949  01754F  00                 	db	0
   950  017550  00                 	db	0
   951  017551  00                 	db	0
   952  017552  00                 	db	0
   953  017553  00                 	db	0
   954  017554  00                 	db	0
   955  017555  00                 	db	0
   956  017556  00                 	db	0
   957  017557  00                 	db	0
   958  017558  00                 	db	0
   959  017559  00                 	db	0
   960  01755A  00                 	db	0
   961  01755B  00                 	db	0
   962  01755C  00                 	db	0
   963  01755D  00                 	db	0
   964  01755E  00                 	db	0
   965  01755F  00                 	db	0
   966  017560  00                 	db	0
   967  017561  00                 	db	0
   968  017562  00                 	db	0
   969  017563  00                 	db	0
   970  017564  00                 	db	0
   971  017565  00                 	db	0
   972  017566  00                 	db	0
   973  017567  00                 	db	0
   974  017568  00                 	db	0
   975  017569  00                 	db	0
   976  01756A  00                 	db	0
   977  01756B  00                 	db	0
   978  01756C  00                 	db	0
   979  01756D  00                 	db	0
   980  01756E  00                 	db	0
   981  01756F  00                 	db	0
   982  017570  00                 	db	0
   983  017571  00                 	db	0
   984  017572  00                 	db	0
   985  017573  00                 	db	0
   986  017574  00                 	db	0
   987  017575  00                 	db	0
   988  017576  00                 	db	0
   989  017577  00                 	db	0
   990  017578  00                 	db	0
   991  017579  00                 	db	0
   992  01757A  00                 	db	0
   993  01757B  00                 	db	0
   994  01757C  00                 	db	0
   995  01757D  00                 	db	0
   996  01757E  00                 	db	0
   997  01757F  00                 	db	0
   998  017580  00                 	db	0
   999  017581  00                 	db	0
  1000  017582  00                 	db	0
  1001  017583  00                 	db	0
  1002  017584  00                 	db	0
  1003  017585  00                 	db	0
  1004  017586  00                 	db	0
  1005  017587  00                 	db	0
  1006  017588  00                 	db	0
  1007  017589  00                 	db	0
  1008  01758A  00                 	db	0
  1009  01758B  00                 	db	0
  1010  01758C  00                 	db	0
  1011  01758D  00                 	db	0
  1012  01758E  00                 	db	0
  1013  01758F  00                 	db	0
  1014  017590  00                 	db	0
  1015  017591  00                 	db	0
  1016  017592  00                 	db	0
  1017  017593  00                 	db	0
  1018  017594  00                 	db	0
  1019  017595  00                 	db	0
  1020  017596  00                 	db	0
  1021  017597  00                 	db	0
  1022  017598  00                 	db	0
  1023  017599  00                 	db	0
  1024  01759A  00                 	db	0
  1025  01759B  00                 	db	0
  1026  01759C  00                 	db	0
  1027  01759D  00                 	db	0
  1028  01759E  00                 	db	0
  1029  01759F  00                 	db	0
  1030  0175A0  00                 	db	0
  1031  0175A1  00                 	db	0
  1032  0175A2  00                 	db	0
  1033  0175A3  00                 	db	0
  1034  0175A4  00                 	db	0
  1035  0175A5  00                 	db	0
  1036  0175A6  00                 	db	0
  1037  0175A7  00                 	db	0
  1038  0175A8  00                 	db	0
  1039  0175A9  00                 	db	0
  1040  0175AA  00                 	db	0
  1041  0175AB  00                 	db	0
  1042  0175AC  00                 	db	0
  1043  0175AD  00                 	db	0
  1044  0175AE  00                 	db	0
  1045  0175AF  00                 	db	0
  1046  0175B0  00                 	db	0
  1047  0175B1  00                 	db	0
  1048  0175B2  00                 	db	0
  1049  0175B3  00                 	db	0
  1050  0175B4  00                 	db	0
  1051  0175B5  00                 	db	0
  1052  0175B6  00                 	db	0
  1053  0175B7  00                 	db	0
  1054  0175B8  00                 	db	0
  1055  0175B9  00                 	db	0
  1056  0175BA  00                 	db	0
  1057  0175BB  00                 	db	0
  1058  0175BC  00                 	db	0
  1059  0175BD  00                 	db	0
  1060  0175BE  00                 	db	0
  1061  0175BF  00                 	db	0
  1062  0175C0  00                 	db	0
  1063  0175C1  00                 	db	0
  1064  0175C2  00                 	db	0
  1065  0175C3  00                 	db	0
  1066  0175C4  00                 	db	0
  1067  0175C5  00                 	db	0
  1068  0175C6  00                 	db	0
  1069  0175C7  00                 	db	0
  1070  0175C8  00                 	db	0
  1071  0175C9  00                 	db	0
  1072  0175CA  00                 	db	0
  1073  0175CB  00                 	db	0
  1074  0175CC  00                 	db	0
  1075  0175CD  00                 	db	0
  1076  0175CE  00                 	db	0
  1077  0175CF  00                 	db	0
  1078  0175D0  00                 	db	0
  1079  0175D1  00                 	db	0
  1080  0175D2  00                 	db	0
  1081  0175D3  00                 	db	0
  1082  0175D4  00                 	db	0
  1083  0175D5  00                 	db	0
  1084  0175D6  00                 	db	0
  1085  0175D7  00                 	db	0
  1086  0175D8  00                 	db	0
  1087  0175D9  00                 	db	0
  1088  0175DA  00                 	db	0
  1089  0175DB  00                 	db	0
  1090  0175DC  00                 	db	0
  1091  0175DD  00                 	db	0
  1092  0175DE  00                 	db	0
  1093  0175DF  00                 	db	0
  1094  0175E0  00                 	db	0
  1095  0175E1  00                 	db	0
  1096  0175E2  00                 	db	0
  1097  0175E3  00                 	db	0
  1098  0175E4  00                 	db	0
  1099  0175E5  00                 	db	0
  1100  0175E6  00                 	db	0
  1101  0175E7  00                 	db	0
  1102  0175E8  00                 	db	0
  1103  0175E9  00                 	db	0
  1104  0175EA  00                 	db	0
  1105  0175EB  00                 	db	0
  1106  0175EC  00                 	db	0
  1107  0175ED  00                 	db	0
  1108  0175EE  00                 	db	0
  1109  0175EF  00                 	db	0
  1110  0175F0  00                 	db	0
  1111  0175F1  00                 	db	0
  1112  0175F2  00                 	db	0
  1113  0175F3  00                 	db	0
  1114  0175F4  00                 	db	0
  1115  0175F5  00                 	db	0
  1116  0175F6  00                 	db	0
  1117  0175F7  00                 	db	0
  1118  0175F8  00                 	db	0
  1119  0175F9  00                 	db	0
  1120  0175FA  00                 	db	0
  1121  0175FB  00                 	db	0
  1122  0175FC  00                 	db	0
  1123  0175FD  00                 	db	0
  1124  0175FE  00                 	db	0
  1125  0175FF  00                 	db	0
  1126  017600  00                 	db	0
  1127  017601  00                 	db	0
  1128  017602  00                 	db	0
  1129  017603  00                 	db	0
  1130  017604  00                 	db	0
  1131  017605  00                 	db	0
  1132  017606  00                 	db	0
  1133  017607  00                 	db	0
  1134  017608  00                 	db	0
  1135  017609  00                 	db	0
  1136  01760A  00                 	db	0
  1137  01760B  00                 	db	0
  1138  01760C  00                 	db	0
  1139  01760D  00                 	db	0
  1140  01760E  00                 	db	0
  1141  01760F  00                 	db	0
  1142  017610  00                 	db	0
  1143  017611  00                 	db	0
  1144  017612  00                 	db	0
  1145  017613  00                 	db	0
  1146  017614  00                 	db	0
  1147  017615  00                 	db	0
  1148  017616  00                 	db	0
  1149  017617  00                 	db	0
  1150  017618  00                 	db	0
  1151  017619  00                 	db	0
  1152  01761A  00                 	db	0
  1153  01761B  00                 	db	0
  1154  01761C  00                 	db	0
  1155  01761D  00                 	db	0
  1156  01761E  00                 	db	0
  1157  01761F  00                 	db	0
  1158  017620  00                 	db	0
  1159  017621  00                 	db	0
  1160  017622  00                 	db	0
  1161  017623  00                 	db	0
  1162  017624  00                 	db	0
  1163  017625  00                 	db	0
  1164  017626  00                 	db	0
  1165  017627  00                 	db	0
  1166  017628  00                 	db	0
  1167  017629  00                 	db	0
  1168  01762A  00                 	db	0
  1169  01762B  00                 	db	0
  1170  01762C  00                 	db	0
  1171  01762D  00                 	db	0
  1172  01762E  00                 	db	0
  1173  01762F  00                 	db	0
  1174  017630  00                 	db	0
  1175  017631  00                 	db	0
  1176  017632  00                 	db	0
  1177  017633  00                 	db	0
  1178  017634  00                 	db	0
  1179  017635  00                 	db	0
  1180  017636  00                 	db	0
  1181  017637  00                 	db	0
  1182  017638  00                 	db	0
  1183  017639  00                 	db	0
  1184  01763A  00                 	db	0
  1185  01763B  00                 	db	0
  1186  01763C  00                 	db	0
  1187  01763D  00                 	db	0
  1188  01763E  00                 	db	0
  1189  01763F  00                 	db	0
  1190  017640  00                 	db	0
  1191  017641  00                 	db	0
  1192  017642  00                 	db	0
  1193  017643  00                 	db	0
  1194  017644  00                 	db	0
  1195  017645  00                 	db	0
  1196  017646  00                 	db	0
  1197  017647  00                 	db	0
  1198  017648  00                 	db	0
  1199  017649  00                 	db	0
  1200  01764A  00                 	db	0
  1201  01764B  00                 	db	0
  1202  01764C  00                 	db	0
  1203  01764D  00                 	db	0
  1204  01764E  00                 	db	0
  1205  01764F  00                 	db	0
  1206  017650  00                 	db	0
  1207  017651  00                 	db	0
  1208  017652  00                 	db	0
  1209  017653  00                 	db	0
  1210  017654  00                 	db	0
  1211  017655  00                 	db	0
  1212  017656  00                 	db	0
  1213  017657  00                 	db	0
  1214  017658  00                 	db	0
  1215  017659  00                 	db	0
  1216  01765A  00                 	db	0
  1217  01765B  00                 	db	0
  1218  01765C  00                 	db	0
  1219  01765D  00                 	db	0
  1220  01765E  00                 	db	0
  1221  01765F  00                 	db	0
  1222                           
  1223                           	psect	idataBANK0
  1224  01A850                     __pidataBANK0:
  1225                           	opt callstack 0
  1226                           
  1227                           ;initializer for _R
  1228  01A850  0000               	dw	0
  1229  01A852  0000               	dw	0
  1230  01A854  0000               	dw	0
  1231  01A856  0000               	dw	0
  1232  01A858  0000               	dw	0
  1233  01A85A  0000               	dw	0
  1234  01A85C  0000               	dw	0
  1235  01A85E  0000               	dw	0
  1236  01A860  0000               	dw	0
  1237  01A862  0000               	dw	0
  1238  01A864  0000               	dw	0
  1239  01A866  0000               	dw	0
  1240  01A868  0000               	dw	0
  1241  01A86A  0000               	dw	0
  1242  01A86C  0000               	dw	0
  1243  01A86E  0000               	dw	0
  1244  01A870  0F67               	dw	3943
  1245  01A872  0F8F               	dw	3983
  1246  01A874  00                 	db	0
  1247  01A875  0000               	dw	0
  1248  01A877  00                 	db	0
  1249                           
  1250                           ;initializer for stoa@F1166
  1251  01A878  28                 	db	40
  1252  01A879  6E                 	db	110
  1253  01A87A  75                 	db	117
  1254  01A87B  6C                 	db	108
  1255  01A87C  6C                 	db	108
  1256  01A87D  29                 	db	41
  1257  01A87E  00                 	db	0
  1258                           
  1259                           ;initializer for _H
  1260  01A87F  00                 	db	0
  1261  01A880  00                 	db	0
  1262  01A881  01                 	db	1
  1263  01A882  00                 	db	0
  1264  01A883  01                 	db	1
  1265  01A884  00                 	db	0
  1266  01A885  00                 	db	0
  1267                           
  1268                           	psect	idataBANK1
  1269  0190A4                     __pidataBANK1:
  1270                           	opt callstack 0
  1271                           
  1272                           ;initializer for _C
  1273  0190A4  0000               	dw	0
  1274  0190A6  0000               	dw	0
  1275  0190A8  0000               	dw	0
  1276  0190AA  0000               	dw	0
  1277  0190AC  0000               	dw	0
  1278  0190AE  0000               	dw	0
  1279  0190B0  0000               	dw	0
  1280  0190B2  0000               	dw	0
  1281  0190B4  0000               	dw	0
  1282  0190B6  0000               	dw	0
  1283  0190B8  0000               	dw	0
  1284  0190BA  0000               	dw	0
  1285  0190BC  0000               	dw	0
  1286  0190BE  0000               	dw	0
  1287  0190C0  0000               	dw	0
  1288  0190C2  0000               	dw	0
  1289  0190C4  0000               	dw	0
  1290  0190C6  0000               	dw	0
  1291  0190C8  0000               	dw	0
  1292  0190CA  0000               	dw	0
  1293  0190CC  0000               	dw	0
  1294  0190CE  0000               	dw	0
  1295  0190D0  0000               	dw	0
  1296  0190D2  0000               	dw	0
  1297  0190D4  0000               	dw	0
  1298  0190D6  0000               	dw	0
  1299  0190D8  0000               	dw	0
  1300  0190DA  0000               	dw	0
  1301  0190DC  0000               	dw	0
  1302  0190DE  0000               	dw	0
  1303  0190E0  0000               	dw	0
  1304  0190E2  0000               	dw	0
  1305  0190E4  0000               	dw	0
  1306  0190E6  0000               	dw	0
  1307  0190E8  0000               	dw	0
  1308  0190EA  0000               	dw	0
  1309  0190EC  0000               	dw	0
  1310  0190EE  0000               	dw	0
  1311  0190F0  0000               	dw	0
  1312  0190F2  0000               	dw	0
  1313  0190F4  0000               	dw	0
  1314  0190F6  0000               	dw	0
  1315  0190F8  0000               	dw	0
  1316  0190FA  0000               	dw	0
  1317  0190FC  0000               	dw	0
  1318  0190FE  0000               	dw	0
  1319  019100  0000               	dw	0
  1320  019102  0000               	dw	0
  1321  019104  0000               	dw	0
  1322  019106  0000               	dw	0
  1323  019108  0000               	dw	0
  1324  01910A  0000               	dw	0
  1325  01910C  0000               	dw	0
  1326  01910E  0000               	dw	0
  1327  019110  0000               	dw	0
  1328  019112  0000               	dw	0
  1329  019114  0000               	dw	0
  1330  019116  0000               	dw	0
  1331  019118  0000               	dw	0
  1332  01911A  0000               	dw	0
  1333  01911C  0000               	dw	0
  1334  01911E  0000               	dw	0
  1335  019120  0000               	dw	0
  1336  019122  0000               	dw	0
  1337  019124  0000               	dw	0
  1338  019126  0000               	dw	0
  1339  019128  0000               	dw	0
  1340  01912A  0000               	dw	0
  1341  01912C  0000               	dw	0
  1342  01912E  42FA               	dw	17146
  1343  019130  00                 	db	0
  1344  019131  00                 	db	0
  1345  019132  00                 	db	0
  1346  019133  00                 	db	0
  1347  019134  00                 	db	0
  1348  019135  00                 	db	0
  1349  019136  00                 	db	0
  1350  019137  00                 	db	0
  1351  019138  00                 	db	0
  1352  019139  00                 	db	0
  1353  01913A  00                 	db	0
  1354  01913B  00                 	db	0
  1355  01913C  00                 	db	0
  1356  01913D  00                 	db	0
  1357  01913E  00                 	db	0
  1358  01913F  00                 	db	0
  1359  019140  00                 	db	0
  1360  019141  00                 	db	0
  1361  019142  00                 	db	0
  1362  019143  00                 	db	0
  1363  019144  00                 	db	0
  1364  019145  00                 	db	0
  1365  019146  00                 	db	0
  1366  019147  00                 	db	0
  1367  019148  00                 	db	0
  1368  019149  00                 	db	0
  1369  01914A  00                 	db	0
  1370  01914B  00                 	db	0
  1371  01914C  00                 	db	0
  1372  01914D  00                 	db	0
  1373  01914E  00                 	db	0
  1374  01914F  00                 	db	0
  1375  019150  00                 	db	0
  1376  019151  00                 	db	0
  1377  019152  00                 	db	0
  1378  019153  00                 	db	0
  1379  019154  00                 	db	0
  1380  019155  00                 	db	0
  1381  019156  00                 	db	0
  1382  019157  00                 	db	0
  1383  019158  00                 	db	0
  1384  019159  00                 	db	0
  1385  01915A  00                 	db	0
  1386  01915B  00                 	db	0
  1387  01915C  00                 	db	0
  1388  01915D  00                 	db	0
  1389  01915E  00                 	db	0
  1390  01915F  00                 	db	0
  1391  019160  00                 	db	0
  1392  019161  00                 	db	0
  1393  019162  00                 	db	0
  1394  019163  00                 	db	0
  1395  019164  00                 	db	0
  1396  019165  00                 	db	0
  1397  019166  00                 	db	0
  1398  019167  00                 	db	0
  1399  019168  00                 	db	0
  1400  019169  00                 	db	0
  1401  01916A  00                 	db	0
  1402  01916B  00                 	db	0
  1403  01916C  00                 	db	0
  1404  01916D  00                 	db	0
  1405  01916E  00                 	db	0
  1406  01916F  00                 	db	0
  1407  019170  00                 	db	0
  1408  019171  00                 	db	0
  1409  019172  00                 	db	0
  1410  019173  00                 	db	0
  1411  019174  00                 	db	0
  1412  019175  00                 	db	0
  1413  019176  00                 	db	0
  1414  019177  00                 	db	0
  1415  019178  00                 	db	0
  1416  019179  00                 	db	0
  1417  01917A  00                 	db	0
  1418  01917B  00                 	db	0
  1419  01917C  00                 	db	0
  1420  01917D  00                 	db	0
  1421  01917E  00                 	db	0
  1422  01917F  00                 	db	0
  1423  019180  00                 	db	0
  1424  019181  00                 	db	0
  1425  019182  00                 	db	0
  1426  019183  00                 	db	0
  1427  019184  00                 	db	0
  1428  019185  00                 	db	0
  1429  019186  00                 	db	0
  1430  019187  00                 	db	0
  1431  019188  00                 	db	0
  1432  019189  00                 	db	0
  1433  01918A  00                 	db	0
  1434  01918B  00                 	db	0
  1435  01918C  00                 	db	0
  1436  01918D  00                 	db	0
  1437  01918E  00                 	db	0
  1438  01918F  00                 	db	0
  1439  019190  00                 	db	0
  1440  019191  00                 	db	0
  1441  019192  00                 	db	0
  1442  019193  00                 	db	0
  1443  019194  00                 	db	0
  1444  019195  00                 	db	0
  1445  019196  00                 	db	0
  1446                           
  1447                           	psect	idataBANK2
  1448  019500                     __pidataBANK2:
  1449                           	opt callstack 0
  1450                           
  1451                           ;initializer for _V
  1452  019500  00                 	db	0
  1453  019501  00                 	db	0
  1454  019502  00                 	db	0
  1455  019503  00                 	db	0
  1456  019504  00                 	db	0
  1457  019505  00                 	db	0
  1458  019506  00                 	db	0
  1459  019507  00                 	db	0
  1460  019508  00                 	db	0
  1461  019509  00                 	db	0
  1462  01950A  00                 	db	0
  1463  01950B  00                 	db	0
  1464  01950C  00                 	db	0
  1465  01950D  00                 	db	0
  1466  01950E  00                 	db	0
  1467  01950F  00                 	db	0
  1468  019510  00                 	db	0
  1469  019511  00                 	db	0
  1470  019512  00                 	db	0
  1471  019513  00                 	db	0
  1472  019514  00                 	db	0
  1473  019515  00                 	db	0
  1474  019516  00                 	db	0
  1475  019517  00                 	db	0
  1476  019518  00                 	db	0
  1477  019519  00                 	db	0
  1478  01951A  00                 	db	0
  1479  01951B  00                 	db	0
  1480  01951C  00                 	db	0
  1481  01951D  00                 	db	0
  1482  01951E  00                 	db	0
  1483  01951F  00                 	db	0
  1484  019520  00                 	db	0
  1485  019521  00                 	db	0
  1486  019522  00                 	db	0
  1487  019523  00                 	db	0
  1488  019524  00                 	db	0
  1489  019525  00                 	db	0
  1490  019526  00                 	db	0
  1491  019527  00                 	db	0
  1492  019528  00                 	db	0
  1493  019529  00                 	db	0
  1494  01952A  00                 	db	0
  1495  01952B  00                 	db	0
  1496  01952C  00                 	db	0
  1497  01952D  00                 	db	0
  1498  01952E  00                 	db	0
  1499  01952F  00                 	db	0
  1500  019530  00                 	db	0
  1501  019531  00                 	db	0
  1502  019532  00                 	db	0
  1503  019533  00                 	db	0
  1504  019534  00                 	db	0
  1505  019535  00                 	db	0
  1506  019536  00                 	db	0
  1507  019537  00                 	db	0
  1508  019538  00                 	db	0
  1509  019539  00                 	db	0
  1510  01953A  00                 	db	0
  1511  01953B  00                 	db	0
  1512  01953C  00                 	db	0
  1513  01953D  00                 	db	0
  1514  01953E  00                 	db	0
  1515  01953F  00                 	db	0
  1516  019540  00                 	db	0
  1517  019541  00                 	db	0
  1518  019542  00                 	db	0
  1519  019543  00                 	db	0
  1520  019544  00                 	db	0
  1521  019545  00                 	db	0
  1522  019546  00                 	db	0
  1523  019547  00                 	db	0
  1524  019548  00                 	db	0
  1525  019549  00                 	db	0
  1526  01954A  00                 	db	0
  1527  01954B  00                 	db	0
  1528  01954C  00                 	db	0
  1529  01954D  00                 	db	0
  1530  01954E  00                 	db	0
  1531  01954F  00                 	db	0
  1532  019550  00                 	db	0
  1533  019551  00                 	db	0
  1534  019552  00                 	db	0
  1535  019553  00                 	db	0
  1536  019554  00                 	db	0
  1537  019555  00                 	db	0
  1538  019556  00                 	db	0
  1539  019557  00                 	db	0
  1540  019558  00                 	db	0
  1541  019559  00                 	db	0
  1542  01955A  00                 	db	0
  1543  01955B  00                 	db	0
  1544  01955C  00                 	db	0
  1545  01955D  00                 	db	0
  1546  01955E  00                 	db	0
  1547  01955F  00                 	db	0
  1548  019560  00                 	db	0
  1549  019561  00                 	db	0
  1550  019562  00                 	db	0
  1551  019563  00                 	db	0
  1552  019564  00                 	db	0
  1553  019565  00                 	db	0
  1554  019566  00                 	db	0
  1555  019567  00                 	db	0
  1556  019568  00                 	db	0
  1557  019569  00                 	db	0
  1558  01956A  00                 	db	0
  1559  01956B  00                 	db	0
  1560  01956C  00                 	db	0
  1561  01956D  00                 	db	0
  1562  01956E  00                 	db	0
  1563  01956F  00                 	db	0
  1564  019570  00                 	db	0
  1565  019571  00                 	db	0
  1566  019572  00                 	db	0
  1567  019573  00                 	db	0
  1568  019574  00                 	db	0
  1569  019575  00                 	db	0
  1570  019576  00                 	db	0
  1571  019577  00                 	db	0
  1572  019578  00                 	db	0
  1573  019579  00                 	db	0
  1574  01957A  00                 	db	0
  1575  01957B  00                 	db	0
  1576  01957C  00                 	db	0
  1577  01957D  00                 	db	0
  1578  01957E  00                 	db	0
  1579  01957F  00                 	db	0
  1580  019580  00                 	db	0
  1581  019581  0000               	dw	0
  1582  019583  0000               	dw	0
  1583  019585  0000               	dw	0
  1584  019587  0000               	dw	0
  1585  019589  00                 	db	0
  1586  01958A  00                 	db	0
  1587  01958B  00                 	db	0
  1588  01958C  00                 	db	0
  1589  01958D  00                 	db	0
  1590  01958E  00                 	db	0
  1591  01958F  0000               	dw	0
  1592  019591  0000               	dw	0
  1593  019593  0000               	dw	0
  1594  019595  0000               	dw	0
  1595  019597  0000               	dw	0
  1596  019599  0000               	dw	0
  1597  01959B  00                 	db	0
  1598  01959C  00                 	db	0
  1599  01959D  00                 	db	0
  1600  01959E  00                 	db	0
  1601  01959F  00                 	db	0
  1602  0195A0  00                 	db	0
  1603  0195A1  00                 	db	0
  1604  0195A2  00                 	db	0
  1605  0195A3  00                 	db	0
  1606  0195A4  00                 	db	0
  1607  0195A5  0000               	dw	0
  1608  0195A7  0000               	dw	0
  1609  0195A9  2D                 	db	45
  1610  0195AA  00                 	db	0
  1611  0195AB  00                 	db	0
  1612  0195AC  0000               	dw	0
  1613  0195AE  0000               	dw	0
  1614  0195B0  0000               	dw	0
  1615  0195B2  0000               	dw	0
  1616  0195B4  0000               	dw	0
  1617  0195B6  0000               	dw	0
  1618  0195B8  0000               	dw	0
  1619  0195BA  0000               	dw	0
  1620                           
  1621                           	psect	mediumconst
  1622  00FB3C                     __pmediumconst:
  1623                           	opt callstack 0
  1624  00FB3C  00                 	db	0
  1625  00FB3D                     _BVSOC_TABLE:
  1626                           	opt callstack 0
  1627  00FB3D  59D8               	dw	23000
  1628  00FB3F  0000               	dw	0
  1629  00FB41  0005               	dw	5
  1630  00FB43  0000               	dw	0
  1631  00FB45  5B68               	dw	23400
  1632  00FB47  0000               	dw	0
  1633  00FB49  000A               	dw	10
  1634  00FB4B  0000               	dw	0
  1635  00FB4D  5C30               	dw	23600
  1636  00FB4F  0000               	dw	0
  1637  00FB51  0014               	dw	20
  1638  00FB53  0000               	dw	0
  1639  00FB55  5E38               	dw	24120
  1640  00FB57  0000               	dw	0
  1641  00FB59  0019               	dw	25
  1642  00FB5B  0000               	dw	0
  1643  00FB5D  5E88               	dw	24200
  1644  00FB5F  0000               	dw	0
  1645  00FB61  001E               	dw	30
  1646  00FB63  0000               	dw	0
  1647  00FB65  5F78               	dw	24440
  1648  00FB67  0000               	dw	0
  1649  00FB69  0028               	dw	40
  1650  00FB6B  0000               	dw	0
  1651  00FB6D  5FDC               	dw	24540
  1652  00FB6F  0000               	dw	0
  1653  00FB71  002D               	dw	45
  1654  00FB73  0000               	dw	0
  1655  00FB75  6018               	dw	24600
  1656  00FB77  0000               	dw	0
  1657  00FB79  0032               	dw	50
  1658  00FB7B  0000               	dw	0
  1659  00FB7D  6046               	dw	24646
  1660  00FB7F  0000               	dw	0
  1661  00FB81  0035               	dw	53
  1662  00FB83  0000               	dw	0
  1663  00FB85  607C               	dw	24700
  1664  00FB87  0000               	dw	0
  1665  00FB89  0037               	dw	55
  1666  00FB8B  0000               	dw	0
  1667  00FB8D  60AE               	dw	24750
  1668  00FB8F  0000               	dw	0
  1669  00FB91  0039               	dw	57
  1670  00FB93  0000               	dw	0
  1671  00FB95  60E0               	dw	24800
  1672  00FB97  0000               	dw	0
  1673  00FB99  003C               	dw	60
  1674  00FB9B  0000               	dw	0
  1675  00FB9D  6112               	dw	24850
  1676  00FB9F  0000               	dw	0
  1677  00FBA1  003F               	dw	63
  1678  00FBA3  0000               	dw	0
  1679  00FBA5  615D               	dw	24925
  1680  00FBA7  0000               	dw	0
  1681  00FBA9  0043               	dw	67
  1682  00FBAB  0000               	dw	0
  1683  00FBAD  61A8               	dw	25000
  1684  00FBAF  0000               	dw	0
  1685  00FBB1  0046               	dw	70
  1686  00FBB3  0000               	dw	0
  1687  00FBB5  61BC               	dw	25020
  1688  00FBB7  0000               	dw	0
  1689  00FBB9  0048               	dw	72
  1690  00FBBB  0000               	dw	0
  1691  00FBBD  61D0               	dw	25040
  1692  00FBBF  0000               	dw	0
  1693  00FBC1  004B               	dw	75
  1694  00FBC3  0000               	dw	0
  1695  00FBC5  61DA               	dw	25050
  1696  00FBC7  0000               	dw	0
  1697  00FBC9  0050               	dw	80
  1698  00FBCB  0000               	dw	0
  1699  00FBCD  61E4               	dw	25060
  1700  00FBCF  0000               	dw	0
  1701  00FBD1  0055               	dw	85
  1702  00FBD3  0000               	dw	0
  1703  00FBD5  61F8               	dw	25080
  1704  00FBD7  0000               	dw	0
  1705  00FBD9  005A               	dw	90
  1706  00FBDB  0000               	dw	0
  1707  00FBDD  6208               	dw	25096
  1708  00FBDF  0000               	dw	0
  1709  00FBE1  005C               	dw	92
  1710  00FBE3  0000               	dw	0
  1711  00FBE5  6222               	dw	25122
  1712  00FBE7  0000               	dw	0
  1713  00FBE9  005D               	dw	93
  1714  00FBEB  0000               	dw	0
  1715  00FBED  6234               	dw	25140
  1716  00FBEF  0000               	dw	0
  1717  00FBF1  005F               	dw	95
  1718  00FBF3  0000               	dw	0
  1719  00FBF5  6248               	dw	25160
  1720  00FBF7  0000               	dw	0
  1721  00FBF9  0061               	dw	97
  1722  00FBFB  0000               	dw	0
  1723  00FBFD  625C               	dw	25180
  1724  00FBFF  0000               	dw	0
  1725  00FC01  0064               	dw	100
  1726  00FC03  0000               	dw	0
  1727  00FC05  6784               	dw	26500
  1728  00FC07  0000               	dw	0
  1729  00FC09  0062               	dw	98
  1730  00FC0B  0000               	dw	0
  1731  00FC0D                     __end_of_BVSOC_TABLE:
  1732                           	opt callstack 0
  1733  00FC0D                     _T:
  1734                           	opt callstack 0
  1735  00FC0D  63                 	db	99
  1736  00FC0E  6F                 	db	111
  1737  00FC0F  6D                 	db	109
  1738  00FC10  6D                 	db	109
  1739  00FC11  61                 	db	97
  1740  00FC12  6E                 	db	110
  1741  00FC13  64                 	db	100
  1742  00FC14  73                 	db	115
  1743  00FC15  20                 	db	32
  1744  00FC16  31                 	db	49
  1745  00FC17  00                 	db	0
  1746  00FC18  00                 	db	0
  1747  00FC19  00                 	db	0
  1748  00FC1A  00                 	db	0
  1749  00FC1B  00                 	db	0
  1750  00FC1C  00                 	db	0
  1751  00FC1D  00                 	db	0
  1752  00FC1E  00                 	db	0
  1753  00FC1F  64                 	db	100
  1754  00FC20  69                 	db	105
  1755  00FC21  73                 	db	115
  1756  00FC22  70                 	db	112
  1757  00FC23  6C                 	db	108
  1758  00FC24  61                 	db	97
  1759  00FC25  79                 	db	121
  1760  00FC26  73                 	db	115
  1761  00FC27  20                 	db	32
  1762  00FC28  31                 	db	49
  1763  00FC29  00                 	db	0
  1764  00FC2A  00                 	db	0
  1765  00FC2B  00                 	db	0
  1766  00FC2C  00                 	db	0
  1767  00FC2D  00                 	db	0
  1768  00FC2E  00                 	db	0
  1769  00FC2F  00                 	db	0
  1770  00FC30  00                 	db	0
  1771  00FC31  63                 	db	99
  1772  00FC32  6F                 	db	111
  1773  00FC33  6D                 	db	109
  1774  00FC34  6D                 	db	109
  1775  00FC35  61                 	db	97
  1776  00FC36  6E                 	db	110
  1777  00FC37  64                 	db	100
  1778  00FC38  73                 	db	115
  1779  00FC39  20                 	db	32
  1780  00FC3A  32                 	db	50
  1781  00FC3B  00                 	db	0
  1782  00FC3C  00                 	db	0
  1783  00FC3D  00                 	db	0
  1784  00FC3E  00                 	db	0
  1785  00FC3F  00                 	db	0
  1786  00FC40  00                 	db	0
  1787  00FC41  00                 	db	0
  1788  00FC42  00                 	db	0
  1789  00FC43  64                 	db	100
  1790  00FC44  69                 	db	105
  1791  00FC45  73                 	db	115
  1792  00FC46  70                 	db	112
  1793  00FC47  6C                 	db	108
  1794  00FC48  61                 	db	97
  1795  00FC49  79                 	db	121
  1796  00FC4A  73                 	db	115
  1797  00FC4B  20                 	db	32
  1798  00FC4C  32                 	db	50
  1799  00FC4D  00                 	db	0
  1800  00FC4E  00                 	db	0
  1801  00FC4F  00                 	db	0
  1802  00FC50  00                 	db	0
  1803  00FC51  00                 	db	0
  1804  00FC52  00                 	db	0
  1805  00FC53  00                 	db	0
  1806  00FC54  00                 	db	0
  1807  00FC55  63                 	db	99
  1808  00FC56  6F                 	db	111
  1809  00FC57  6D                 	db	109
  1810  00FC58  6D                 	db	109
  1811  00FC59  61                 	db	97
  1812  00FC5A  6E                 	db	110
  1813  00FC5B  64                 	db	100
  1814  00FC5C  73                 	db	115
  1815  00FC5D  20                 	db	32
  1816  00FC5E  33                 	db	51
  1817  00FC5F  00                 	db	0
  1818  00FC60  00                 	db	0
  1819  00FC61  00                 	db	0
  1820  00FC62  00                 	db	0
  1821  00FC63  00                 	db	0
  1822  00FC64  00                 	db	0
  1823  00FC65  00                 	db	0
  1824  00FC66  00                 	db	0
  1825  00FC67  64                 	db	100
  1826  00FC68  69                 	db	105
  1827  00FC69  73                 	db	115
  1828  00FC6A  70                 	db	112
  1829  00FC6B  6C                 	db	108
  1830  00FC6C  61                 	db	97
  1831  00FC6D  79                 	db	121
  1832  00FC6E  73                 	db	115
  1833  00FC6F  20                 	db	32
  1834  00FC70  33                 	db	51
  1835  00FC71  00                 	db	0
  1836  00FC72  00                 	db	0
  1837  00FC73  00                 	db	0
  1838  00FC74  00                 	db	0
  1839  00FC75  00                 	db	0
  1840  00FC76  00                 	db	0
  1841  00FC77  00                 	db	0
  1842  00FC78  00                 	db	0
  1843  00FC79  63                 	db	99
  1844  00FC7A  6F                 	db	111
  1845  00FC7B  6D                 	db	109
  1846  00FC7C  6D                 	db	109
  1847  00FC7D  61                 	db	97
  1848  00FC7E  6E                 	db	110
  1849  00FC7F  64                 	db	100
  1850  00FC80  73                 	db	115
  1851  00FC81  20                 	db	32
  1852  00FC82  34                 	db	52
  1853  00FC83  00                 	db	0
  1854  00FC84  00                 	db	0
  1855  00FC85  00                 	db	0
  1856  00FC86  00                 	db	0
  1857  00FC87  00                 	db	0
  1858  00FC88  00                 	db	0
  1859  00FC89  00                 	db	0
  1860  00FC8A  00                 	db	0
  1861  00FC8B  64                 	db	100
  1862  00FC8C  69                 	db	105
  1863  00FC8D  73                 	db	115
  1864  00FC8E  70                 	db	112
  1865  00FC8F  6C                 	db	108
  1866  00FC90  61                 	db	97
  1867  00FC91  79                 	db	121
  1868  00FC92  73                 	db	115
  1869  00FC93  20                 	db	32
  1870  00FC94  34                 	db	52
  1871  00FC95  00                 	db	0
  1872  00FC96  00                 	db	0
  1873  00FC97  00                 	db	0
  1874  00FC98  00                 	db	0
  1875  00FC99  00                 	db	0
  1876  00FC9A  00                 	db	0
  1877  00FC9B  00                 	db	0
  1878  00FC9C  00                 	db	0
  1879  00FC9D                     __end_of_T:
  1880                           	opt callstack 0
  1881  00FC9D                     _spin:
  1882                           	opt callstack 0
  1883  00FC9D  7C                 	db	124
  1884  00FC9E  7C                 	db	124
  1885  00FC9F  2F                 	db	47
  1886  00FCA0  2F                 	db	47
  1887  00FCA1  2D                 	db	45
  1888  00FCA2  2D                 	db	45
  1889  00FCA3  00                 	db	0
  1890  00FCA4  00                 	db	0
  1891  00FCA5  00                 	db	0
  1892  00FCA6  00                 	db	0
  1893  00FCA7  00                 	db	0
  1894  00FCA8  00                 	db	0
  1895  00FCA9  00                 	db	0
  1896  00FCAA  00                 	db	0
  1897  00FCAB  00                 	db	0
  1898  00FCAC  00                 	db	0
  1899  00FCAD  00                 	db	0
  1900  00FCAE  00                 	db	0
  1901  00FCAF  00                 	db	0
  1902  00FCB0  00                 	db	0
  1903  00FCB1  7C                 	db	124
  1904  00FCB2  7C                 	db	124
  1905  00FCB3  2F                 	db	47
  1906  00FCB4  2F                 	db	47
  1907  00FCB5  2D                 	db	45
  1908  00FCB6  2D                 	db	45
  1909  00FCB7  5C                 	db	92
  1910  00FCB8  5C                 	db	92
  1911  00FCB9  00                 	db	0
  1912  00FCBA  00                 	db	0
  1913  00FCBB  00                 	db	0
  1914  00FCBC  00                 	db	0
  1915  00FCBD  00                 	db	0
  1916  00FCBE  00                 	db	0
  1917  00FCBF  00                 	db	0
  1918  00FCC0  00                 	db	0
  1919  00FCC1  00                 	db	0
  1920  00FCC2  00                 	db	0
  1921  00FCC3  00                 	db	0
  1922  00FCC4  00                 	db	0
  1923  00FCC5  4F                 	db	79
  1924  00FCC6  4F                 	db	79
  1925  00FCC7  4F                 	db	79
  1926  00FCC8  4F                 	db	79
  1927  00FCC9  4F                 	db	79
  1928  00FCCA  4F                 	db	79
  1929  00FCCB  2D                 	db	45
  1930  00FCCC  2D                 	db	45
  1931  00FCCD  5F                 	db	95
  1932  00FCCE  5F                 	db	95
  1933  00FCCF  2D                 	db	45
  1934  00FCD0  00                 	db	0
  1935  00FCD1  00                 	db	0
  1936  00FCD2  00                 	db	0
  1937  00FCD3  00                 	db	0
  1938  00FCD4  00                 	db	0
  1939  00FCD5  00                 	db	0
  1940  00FCD6  00                 	db	0
  1941  00FCD7  00                 	db	0
  1942  00FCD8  00                 	db	0
  1943  00FCD9  76                 	db	118
  1944  00FCDA  76                 	db	118
  1945  00FCDB  3C                 	db	60
  1946  00FCDC  3C                 	db	60
  1947  00FCDD  5E                 	db	94
  1948  00FCDE  5E                 	db	94
  1949  00FCDF  3E                 	db	62
  1950  00FCE0  3E                 	db	62
  1951  00FCE1  00                 	db	0
  1952  00FCE2  00                 	db	0
  1953  00FCE3  00                 	db	0
  1954  00FCE4  00                 	db	0
  1955  00FCE5  00                 	db	0
  1956  00FCE6  00                 	db	0
  1957  00FCE7  00                 	db	0
  1958  00FCE8  00                 	db	0
  1959  00FCE9  00                 	db	0
  1960  00FCEA  00                 	db	0
  1961  00FCEB  00                 	db	0
  1962  00FCEC  00                 	db	0
  1963  00FCED  2E                 	db	46
  1964  00FCEE  2E                 	db	46
  1965  00FCEF  2A                 	db	42
  1966  00FCF0  2A                 	db	42
  1967  00FCF1  78                 	db	120
  1968  00FCF2  23                 	db	35
  1969  00FCF3  78                 	db	120
  1970  00FCF4  23                 	db	35
  1971  00FCF5  58                 	db	88
  1972  00FCF6  58                 	db	88
  1973  00FCF7  7C                 	db	124
  1974  00FCF8  7C                 	db	124
  1975  00FCF9  2D                 	db	45
  1976  00FCFA  2D                 	db	45
  1977  00FCFB  00                 	db	0
  1978  00FCFC  00                 	db	0
  1979  00FCFD  00                 	db	0
  1980  00FCFE  00                 	db	0
  1981  00FCFF  00                 	db	0
  1982  00FD00  00                 	db	0
  1983  00FD01  2E                 	db	46
  1984  00FD02  2E                 	db	46
  1985  00FD03  6F                 	db	111
  1986  00FD04  6F                 	db	111
  1987  00FD05  4F                 	db	79
  1988  00FD06  4F                 	db	79
  1989  00FD07  6F                 	db	111
  1990  00FD08  6F                 	db	111
  1991  00FD09  00                 	db	0
  1992  00FD0A  00                 	db	0
  1993  00FD0B  00                 	db	0
  1994  00FD0C  00                 	db	0
  1995  00FD0D  00                 	db	0
  1996  00FD0E  00                 	db	0
  1997  00FD0F  00                 	db	0
  1998  00FD10  00                 	db	0
  1999  00FD11  00                 	db	0
  2000  00FD12  00                 	db	0
  2001  00FD13  00                 	db	0
  2002  00FD14  00                 	db	0
  2003  00FD15                     __end_of_spin:
  2004                           	opt callstack 0
  2005  00FD15  0000               	dw	0
  2006  00FD17  3F80               	dw	16256
  2007  00FD19  0000               	dw	0
  2008  00FD1B  3FC0               	dw	16320
  2009  00FD1D                     __end_of_bp:
  2010                           	opt callstack 0
  2011  00FD1D  AA00               	dw	43520
  2012  00FD1F  3FB8               	dw	16312
  2013  00FD21                     __end_of_ivln2_h:
  2014                           	opt callstack 0
  2015  00FD21  23C6               	dw	9158
  2016  00FD23  B8F6               	dw	47350
  2017  00FD25                     __end_of_cp_l:
  2018                           	opt callstack 0
  2019  00FD25  4000               	dw	16384
  2020  00FD27  3F76               	dw	16246
  2021  00FD29                     __end_of_cp_h:
  2022                           	opt callstack 0
  2023  0000                     _IVTADL	set	14493
  2024  0000                     _IVTADH	set	14494
  2025  0000                     _IVTADU	set	14495
  2026  0000                     _PIR6bits	set	14758
  2027  0000                     _PIR4bits	set	14756
  2028  0000                     _PIE8bits	set	14744
  2029  0000                     _PIR8bits	set	14760
  2030  0000                     _SCANPR	set	14839
  2031  0000                     _DMA2PR	set	14836
  2032  0000                     _DMA1PR	set	14835
  2033  0000                     _MAINPR	set	14834
  2034  0000                     _ISRPR	set	14833
  2035  0000                     _PIE2bits	set	14738
  2036  0000                     _PIR2bits	set	14754
  2037  0000                     _PIE9bits	set	14745
  2038  0000                     _PIR9bits	set	14761
  2039  0000                     _PIE6bits	set	14742
  2040  0000                     _PIE3bits	set	14739
  2041  0000                     _PMD7	set	14791
  2042  0000                     _PMD6	set	14790
  2043  0000                     _PMD5	set	14789
  2044  0000                     _PMD4	set	14788
  2045  0000                     _PMD3	set	14787
  2046  0000                     _PMD2	set	14786
  2047  0000                     _PMD1	set	14785
  2048  0000                     _PMD0	set	14784
  2049  0000                     _OSCTUNE	set	14814
  2050  0000                     _OSCFRQ	set	14815
  2051  0000                     _OSCEN	set	14813
  2052  0000                     _OSCCON3	set	14811
  2053  0000                     _OSCCON1	set	14809
  2054  0000                     _IPR8bits	set	14728
  2055  0000                     _IPR9bits	set	14729
  2056  0000                     _IPR5bits	set	14725
  2057  0000                     _IPR1bits	set	14721
  2058  0000                     _IPR3bits	set	14723
  2059  0000                     _IPR6bits	set	14726
  2060  0000                     _IPR2bits	set	14722
  2061  0000                     _PIE5bits	set	14741
  2062  0000                     _PIE1bits	set	14737
  2063  0000                     _PIR5bits	set	14757
  2064  0000                     _PIR1bits	set	14753
  2065  0000                     _PLLR	set	118496
  2066  0000                     _SPI1SDIPPS	set	15071
  2067  0000                     _U1RXPPS	set	15077
  2068  0000                     _RC6PPS	set	14870
  2069  0000                     _RC5PPS	set	14869
  2070  0000                     _INT1PPS	set	15041
  2071  0000                     _RD1PPS	set	14873
  2072  0000                     _INT0PPS	set	15040
  2073  0000                     _RC3PPS	set	14867
  2074  0000                     _RB6PPS	set	14862
  2075  0000                     _SPI1SCKPPS	set	15070
  2076  0000                     _U2RXPPS	set	15080
  2077  0000                     _SLRCONF	set	14995
  2078  0000                     _SLRCONE	set	14979
  2079  0000                     _SLRCOND	set	14963
  2080  0000                     _SLRCONC	set	14947
  2081  0000                     _SLRCONB	set	14931
  2082  0000                     _SLRCONA	set	14915
  2083  0000                     _ODCOND	set	14962
  2084  0000                     _ODCONC	set	14946
  2085  0000                     _ODCONB	set	14930
  2086  0000                     _ODCONA	set	14914
  2087  0000                     _ODCONF	set	14994
  2088  0000                     _ODCONE	set	14978
  2089  0000                     _WPUC	set	14945
  2090  0000                     _WPUA	set	14913
  2091  0000                     _WPUB	set	14929
  2092  0000                     _WPUE	set	14977
  2093  0000                     _WPUF	set	14993
  2094  0000                     _WPUD	set	14961
  2095  0000                     _ANSELA	set	14912
  2096  0000                     _ANSELF	set	14992
  2097  0000                     _ANSELE	set	14976
  2098  0000                     _ANSELB	set	14928
  2099  0000                     _ANSELC	set	14944
  2100  0000                     _ANSELD	set	14960
  2101  0000                     _DMA2SSA	set	15321
  2102  0000                     _DMA1SSA	set	15353
  2103  0000                     _DMA2DSZ	set	15310
  2104  0000                     _DMA2SSZ	set	15319
  2105  0000                     _DMA2DSA	set	15312
  2106  0000                     _DMA1DSZ	set	15342
  2107  0000                     _DMA1SSZ	set	15351
  2108  0000                     _DMA1DSA	set	15344
  2109  0000                     _DMA2CON0bits	set	15324
  2110  0000                     _DMA2CON1bits	set	15325
  2111  0000                     _DMA1CON0bits	set	15356
  2112  0000                     _DMA1CON1bits	set	15357
  2113  0000                     _DMA2CON0	set	15324
  2114  0000                     _DMA2AIRQ	set	15326
  2115  0000                     _DMA2SIRQ	set	15327
  2116  0000                     _DMA2CON1	set	15325
  2117  0000                     _DMA1CON0	set	15356
  2118  0000                     _DMA1AIRQ	set	15358
  2119  0000                     _DMA1SIRQ	set	15359
  2120  0000                     _DMA1CON1	set	15357
  2121  0000                     _CLKRCON	set	15589
  2122  0000                     _CLKRCLK	set	15590
  2123  0000                     _SPI1INTFbits	set	15642
  2124  0000                     _SPI1RXB	set	15632
  2125  0000                     _SPI1TXB	set	15633
  2126  0000                     _SPI1TCNTL	set	15634
  2127  0000                     _SPI1CON0	set	15636
  2128  0000                     _SPI1CLK	set	15644
  2129  0000                     _SPI1BAUD	set	15641
  2130  0000                     _SPI1CON2	set	15638
  2131  0000                     _SPI1CON1	set	15637
  2132  0000                     _U2RXB	set	15824
  2133  0000                     _U2TXB	set	15826
  2134  0000                     _U2ERRIE	set	15842
  2135  0000                     _U2ERRIR	set	15841
  2136  0000                     _U2UIR	set	15840
  2137  0000                     _U2FIFO	set	15839
  2138  0000                     _U2BRGH	set	15838
  2139  0000                     _U2BRGL	set	15837
  2140  0000                     _U2CON2	set	15836
  2141  0000                     _U2CON1	set	15835
  2142  0000                     _U2CON0	set	15834
  2143  0000                     _U2P3L	set	15832
  2144  0000                     _U2P2L	set	15830
  2145  0000                     _U2P1L	set	15828
  2146  0000                     _U1RXB	set	15848
  2147  0000                     _U1ERRIE	set	15866
  2148  0000                     _U1ERRIR	set	15865
  2149  0000                     _U1UIR	set	15864
  2150  0000                     _U1FIFO	set	15863
  2151  0000                     _U1BRGH	set	15862
  2152  0000                     _U1BRGL	set	15861
  2153  0000                     _U1CON2	set	15860
  2154  0000                     _U1CON1	set	15859
  2155  0000                     _U1CON0	set	15858
  2156  0000                     _U1P3H	set	15857
  2157  0000                     _U1P3L	set	15856
  2158  0000                     _U1P2H	set	15855
  2159  0000                     _U1P2L	set	15854
  2160  0000                     _U1P1H	set	15853
  2161  0000                     _U1P1L	set	15852
  2162  0000                     _FVRCON	set	16065
  2163  0000                     _ADFLTRL	set	16102
  2164  0000                     _ADFLTRH	set	16103
  2165  0000                     _ADCON0bits	set	16120
  2166  0000                     _ADCON0	set	16120
  2167  0000                     _ADCLK	set	16127
  2168  0000                     _ADACT	set	16126
  2169  0000                     _ADREF	set	16125
  2170  0000                     _ADSTAT	set	16124
  2171  0000                     _ADCON3	set	16123
  2172  0000                     _ADCON2	set	16122
  2173  0000                     _ADCON1	set	16121
  2174  0000                     _ADPREH	set	16119
  2175  0000                     _ADPREL	set	16118
  2176  0000                     _ADCAP	set	16117
  2177  0000                     _ADACQH	set	16116
  2178  0000                     _ADACQL	set	16115
  2179  0000                     _ADPCH	set	16113
  2180  0000                     _ADRPT	set	16108
  2181  0000                     _ADACCU	set	16106
  2182  0000                     _ADSTPTH	set	16101
  2183  0000                     _ADSTPTL	set	16100
  2184  0000                     _ADUTHH	set	16097
  2185  0000                     _ADUTHL	set	16096
  2186  0000                     _ADLTHH	set	16095
  2187  0000                     _ADLTHL	set	16094
  2188  0000                     _CCPTMRS1bits	set	16223
  2189  0000                     _PORTFbits	set	16335
  2190  0000                     _LATCbits	set	16316
  2191  0000                     _LATDbits	set	16317
  2192  0000                     _PORTBbits	set	16331
  2193  0000                     _T3CONbits	set	16294
  2194  0000                     _T3CON	set	16294
  2195  0000                     _TMR3L	set	16292
  2196  0000                     _TMR3H	set	16293
  2197  0000                     _T3CLK	set	16297
  2198  0000                     _T3GATE	set	16296
  2199  0000                     _T3GCON	set	16295
  2200  0000                     _T2CON	set	16300
  2201  0000                     _T2TMR	set	16298
  2202  0000                     _T2PR	set	16299
  2203  0000                     _T2RST	set	16303
  2204  0000                     _T2HLT	set	16301
  2205  0000                     _T2CLKCON	set	16302
  2206  0000                     _PWM8DCL	set	16224
  2207  0000                     _PWM8DCH	set	16225
  2208  0000                     _PWM8CON	set	16226
  2209  0000                     _LATEbits	set	16318
  2210  0000                     _T5CONbits	set	16282
  2211  0000                     _T5CON	set	16282
  2212  0000                     _TMR5L	set	16280
  2213  0000                     _TMR5H	set	16281
  2214  0000                     _T5CLK	set	16285
  2215  0000                     _T5GATE	set	16284
  2216  0000                     _T5GCON	set	16283
  2217  0000                     _T6CON	set	16276
  2218  0000                     _T6TMR	set	16274
  2219  0000                     _T6PR	set	16275
  2220  0000                     _T6RST	set	16279
  2221  0000                     _T6HLT	set	16277
  2222  0000                     _T6CLKCON	set	16278
  2223  0000                     _TRISD	set	16325
  2224  0000                     _TRISC	set	16324
  2225  0000                     _TRISB	set	16323
  2226  0000                     _TRISA	set	16322
  2227  0000                     _TRISF	set	16327
  2228  0000                     _TRISE	set	16326
  2229  0000                     _LATC	set	16316
  2230  0000                     _LATB	set	16315
  2231  0000                     _LATF	set	16319
  2232  0000                     _LATA	set	16314
  2233  0000                     _LATD	set	16317
  2234  0000                     _LATE	set	16318
  2235  0000                     _IVTLOCKbits	set	16340
  2236  0000                     _IVTLOCK	set	16340
  2237  0000                     _INTCON0bits	set	16338
  2238  0000                     _GIE	set	130711
  2239  00FD29                     STR_55:
  2240                           
  2241                           ; BSR set to: 57
  2242  00FD29  20                 	db	32
  2243  00FD2A  25                 	db	37
  2244  00FD2B  6C                 	db	108	;'l'
  2245  00FD2C  75                 	db	117	;'u'
  2246  00FD2D  2C                 	db	44
  2247  00FD2E  25                 	db	37
  2248  00FD2F  34                 	db	52	;'4'
  2249  00FD30  2E                 	db	46
  2250  00FD31  34                 	db	52	;'4'
  2251  00FD32  66                 	db	102	;'f'
  2252  00FD33  2C                 	db	44
  2253  00FD34  25                 	db	37
  2254  00FD35  34                 	db	52	;'4'
  2255  00FD36  2E                 	db	46
  2256  00FD37  34                 	db	52	;'4'
  2257  00FD38  66                 	db	102	;'f'
  2258  00FD39  2C                 	db	44
  2259  00FD3A  25                 	db	37
  2260  00FD3B  34                 	db	52	;'4'
  2261  00FD3C  2E                 	db	46
  2262  00FD3D  34                 	db	52	;'4'
  2263  00FD3E  66                 	db	102	;'f'
  2264  00FD3F  2C                 	db	44
  2265  00FD40  25                 	db	37
  2266  00FD41  34                 	db	52	;'4'
  2267  00FD42  2E                 	db	46
  2268  00FD43  34                 	db	52	;'4'
  2269  00FD44  66                 	db	102	;'f'
  2270  00FD45  2C                 	db	44
  2271  00FD46  25                 	db	37
  2272  00FD47  34                 	db	52	;'4'
  2273  00FD48  2E                 	db	46
  2274  00FD49  33                 	db	51	;'3'
  2275  00FD4A  66                 	db	102	;'f'
  2276  00FD4B  2C                 	db	44
  2277  00FD4C  25                 	db	37
  2278  00FD4D  34                 	db	52	;'4'
  2279  00FD4E  2E                 	db	46
  2280  00FD4F  33                 	db	51	;'3'
  2281  00FD50  66                 	db	102	;'f'
  2282  00FD51  2C                 	db	44
  2283  00FD52  25                 	db	37
  2284  00FD53  34                 	db	52	;'4'
  2285  00FD54  2E                 	db	46
  2286  00FD55  33                 	db	51	;'3'
  2287  00FD56  66                 	db	102	;'f'
  2288  00FD57  2C                 	db	44
  2289  00FD58  25                 	db	37
  2290  00FD59  34                 	db	52	;'4'
  2291  00FD5A  2E                 	db	46
  2292  00FD5B  33                 	db	51	;'3'
  2293  00FD5C  66                 	db	102	;'f'
  2294  00FD5D  2C                 	db	44
  2295  00FD5E  25                 	db	37
  2296  00FD5F  34                 	db	52	;'4'
  2297  00FD60  2E                 	db	46
  2298  00FD61  33                 	db	51	;'3'
  2299  00FD62  66                 	db	102	;'f'
  2300  00FD63  2C                 	db	44
  2301  00FD64  25                 	db	37
  2302  00FD65  34                 	db	52	;'4'
  2303  00FD66  2E                 	db	46
  2304  00FD67  33                 	db	51	;'3'
  2305  00FD68  66                 	db	102	;'f'
  2306  00FD69  2C                 	db	44
  2307  00FD6A  25                 	db	37
  2308  00FD6B  34                 	db	52	;'4'
  2309  00FD6C  2E                 	db	46
  2310  00FD6D  33                 	db	51	;'3'
  2311  00FD6E  64                 	db	100	;'d'
  2312  00FD6F  2C                 	db	44
  2313  00FD70  25                 	db	37
  2314  00FD71  34                 	db	52	;'4'
  2315  00FD72  2E                 	db	46
  2316  00FD73  33                 	db	51	;'3'
  2317  00FD74  64                 	db	100	;'d'
  2318  00FD75  2C                 	db	44
  2319  00FD76  25                 	db	37
  2320  00FD77  32                 	db	50	;'2'
  2321  00FD78  2E                 	db	46
  2322  00FD79  36                 	db	54	;'6'
  2323  00FD7A  66                 	db	102	;'f'
  2324  00FD7B  0D                 	db	13
  2325  00FD7C  0A                 	db	10
  2326  00FD7D  00                 	db	0
  2327  00FD7E                     STR_16:
  2328                           
  2329                           ; BSR set to: 57
  2330  00FD7E  52                 	db	82	;'R'
  2331  00FD7F  31                 	db	49	;'1'
  2332  00FD80  20                 	db	32
  2333  00FD81  25                 	db	37
  2334  00FD82  32                 	db	50	;'2'
  2335  00FD83  2E                 	db	46
  2336  00FD84  33                 	db	51	;'3'
  2337  00FD85  66                 	db	102	;'f'
  2338  00FD86  20                 	db	32
  2339  00FD87  25                 	db	37
  2340  00FD88  33                 	db	51	;'3'
  2341  00FD89  2E                 	db	46
  2342  00FD8A  34                 	db	52	;'4'
  2343  00FD8B  66                 	db	102	;'f'
  2344  00FD8C  20                 	db	32
  2345  00FD8D  20                 	db	32
  2346  00FD8E  20                 	db	32
  2347  00FD8F  20                 	db	32
  2348  00FD90  20                 	db	32
  2349  00FD91  20                 	db	32
  2350  00FD92  20                 	db	32
  2351  00FD93  20                 	db	32
  2352  00FD94  20                 	db	32
  2353  00FD95  20                 	db	32
  2354  00FD96  20                 	db	32
  2355  00FD97  00                 	db	0
  2356  00FD98                     STR_17:
  2357                           
  2358                           ; BSR set to: 57
  2359  00FD98  52                 	db	82	;'R'
  2360  00FD99  32                 	db	50	;'2'
  2361  00FD9A  20                 	db	32
  2362  00FD9B  25                 	db	37
  2363  00FD9C  32                 	db	50	;'2'
  2364  00FD9D  2E                 	db	46
  2365  00FD9E  33                 	db	51	;'3'
  2366  00FD9F  66                 	db	102	;'f'
  2367  00FDA0  20                 	db	32
  2368  00FDA1  25                 	db	37
  2369  00FDA2  33                 	db	51	;'3'
  2370  00FDA3  2E                 	db	46
  2371  00FDA4  34                 	db	52	;'4'
  2372  00FDA5  66                 	db	102	;'f'
  2373  00FDA6  20                 	db	32
  2374  00FDA7  20                 	db	32
  2375  00FDA8  20                 	db	32
  2376  00FDA9  20                 	db	32
  2377  00FDAA  20                 	db	32
  2378  00FDAB  20                 	db	32
  2379  00FDAC  20                 	db	32
  2380  00FDAD  20                 	db	32
  2381  00FDAE  20                 	db	32
  2382  00FDAF  20                 	db	32
  2383  00FDB0  20                 	db	32
  2384  00FDB1  00                 	db	0
  2385  00FDB2                     STR_9:
  2386                           
  2387                           ; BSR set to: 57
  2388  00FDB2  53                 	db	83	;'S'
  2389  00FDB3  20                 	db	32
  2390  00FDB4  53                 	db	83	;'S'
  2391  00FDB5  4F                 	db	79	;'O'
  2392  00FDB6  43                 	db	67	;'C'
  2393  00FDB7  20                 	db	32
  2394  00FDB8  25                 	db	37
  2395  00FDB9  64                 	db	100	;'d'
  2396  00FDBA  25                 	db	37
  2397  00FDBB  63                 	db	99	;'c'
  2398  00FDBC  25                 	db	37
  2399  00FDBD  63                 	db	99	;'c'
  2400  00FDBE  20                 	db	32
  2401  00FDBF  25                 	db	37
  2402  00FDC0  32                 	db	50	;'2'
  2403  00FDC1  2E                 	db	46
  2404  00FDC2  34                 	db	52	;'4'
  2405  00FDC3  66                 	db	102	;'f'
  2406  00FDC4  20                 	db	32
  2407  00FDC5  20                 	db	32
  2408  00FDC6  20                 	db	32
  2409  00FDC7  20                 	db	32
  2410  00FDC8  20                 	db	32
  2411  00FDC9  20                 	db	32
  2412  00FDCA  20                 	db	32
  2413  00FDCB  00                 	db	0
  2414  00FDCC                     
  2415                           ; BSR set to: 57
  2416  00FDCC  20                 	db	32
  2417  00FDCD  4D                 	db	77	;'M'
  2418  00FDCE  65                 	db	101	;'e'
  2419  00FDCF  73                 	db	115	;'s'
  2420  00FDD0  67                 	db	103	;'g'
  2421  00FDD1  20                 	db	32
  2422  00FDD2  25                 	db	37
  2423  00FDD3  64                 	db	100	;'d'
  2424  00FDD4  20                 	db	32
  2425  00FDD5  53                 	db	83	;'S'
  2426  00FDD6  74                 	db	116	;'t'
  2427  00FDD7  61                 	db	97	;'a'
  2428  00FDD8  63                 	db	99	;'c'
  2429  00FDD9  6B                 	db	107	;'k'
  2430  00FDDA  20                 	db	32
  2431  00FDDB  25                 	db	37
  2432  00FDDC  64                 	db	100	;'d'
  2433  00FDDD  20                 	db	32
  2434  00FDDE  20                 	db	32
  2435  00FDDF  20                 	db	32
  2436  00FDE0  20                 	db	32
  2437  00FDE1  20                 	db	32
  2438  00FDE2  20                 	db	32
  2439  00FDE3  00                 	db	0
  2440  00FDE4                     STR_15:
  2441                           
  2442                           ; BSR set to: 57
  2443  00FDE4  45                 	db	69	;'E'
  2444  00FDE5  53                 	db	83	;'S'
  2445  00FDE6  52                 	db	82	;'R'
  2446  00FDE7  20                 	db	32
  2447  00FDE8  20                 	db	32
  2448  00FDE9  25                 	db	37
  2449  00FDEA  32                 	db	50	;'2'
  2450  00FDEB  2E                 	db	46
  2451  00FDEC  36                 	db	54	;'6'
  2452  00FDED  66                 	db	102	;'f'
  2453  00FDEE  20                 	db	32
  2454  00FDEF  20                 	db	32
  2455  00FDF0  20                 	db	32
  2456  00FDF1  20                 	db	32
  2457  00FDF2  20                 	db	32
  2458  00FDF3  20                 	db	32
  2459  00FDF4  20                 	db	32
  2460  00FDF5  20                 	db	32
  2461  00FDF6  20                 	db	32
  2462  00FDF7  20                 	db	32
  2463  00FDF8  20                 	db	32
  2464  00FDF9  00                 	db	0
  2465  00FDFA                     STR_10:
  2466                           
  2467                           ; BSR set to: 57
  2468  00FDFA  53                 	db	83	;'S'
  2469  00FDFB  74                 	db	116	;'t'
  2470  00FDFC  61                 	db	97	;'a'
  2471  00FDFD  74                 	db	116	;'t'
  2472  00FDFE  69                 	db	105	;'i'
  2473  00FDFF  63                 	db	99	;'c'
  2474  00FE00  20                 	db	32
  2475  00FE01  53                 	db	83	;'S'
  2476  00FE02  4F                 	db	79	;'O'
  2477  00FE03  43                 	db	67	;'C'
  2478  00FE04  20                 	db	32
  2479  00FE05  25                 	db	37
  2480  00FE06  64                 	db	100	;'d'
  2481  00FE07  20                 	db	32
  2482  00FE08  20                 	db	32
  2483  00FE09  20                 	db	32
  2484  00FE0A  20                 	db	32
  2485  00FE0B  20                 	db	32
  2486  00FE0C  20                 	db	32
  2487  00FE0D  20                 	db	32
  2488  00FE0E  20                 	db	32
  2489  00FE0F  00                 	db	0
  2490  00FE10                     STR_11:
  2491                           
  2492                           ; BSR set to: 57
  2493  00FE10  42                 	db	66	;'B'
  2494  00FE11  61                 	db	97	;'a'
  2495  00FE12  74                 	db	116	;'t'
  2496  00FE13  74                 	db	116	;'t'
  2497  00FE14  65                 	db	101	;'e'
  2498  00FE15  72                 	db	114	;'r'
  2499  00FE16  79                 	db	121	;'y'
  2500  00FE17  20                 	db	32
  2501  00FE18  41                 	db	65	;'A'
  2502  00FE19  68                 	db	104	;'h'
  2503  00FE1A  20                 	db	32
  2504  00FE1B  25                 	db	37
  2505  00FE1C  33                 	db	51	;'3'
  2506  00FE1D  2E                 	db	46
  2507  00FE1E  32                 	db	50	;'2'
  2508  00FE1F  66                 	db	102	;'f'
  2509  00FE20  20                 	db	32
  2510  00FE21  20                 	db	32
  2511  00FE22  20                 	db	32
  2512  00FE23  20                 	db	32
  2513  00FE24  20                 	db	32
  2514  00FE25  00                 	db	0
  2515  00FE26                     STR_29:
  2516                           
  2517                           ; BSR set to: 57
  2518  00FE26  53                 	db	83	;'S'
  2519  00FE27  4F                 	db	79	;'O'
  2520  00FE28  43                 	db	67	;'C'
  2521  00FE29  20                 	db	32
  2522  00FE2A  25                 	db	37
  2523  00FE2B  64                 	db	100	;'d'
  2524  00FE2C  20                 	db	32
  2525  00FE2D  52                 	db	82	;'R'
  2526  00FE2E  25                 	db	37
  2527  00FE2F  63                 	db	99	;'c'
  2528  00FE30  4E                 	db	78	;'N'
  2529  00FE31  20                 	db	32
  2530  00FE32  25                 	db	37
  2531  00FE33  64                 	db	100	;'d'
  2532  00FE34  20                 	db	32
  2533  00FE35  20                 	db	32
  2534  00FE36  20                 	db	32
  2535  00FE37  20                 	db	32
  2536  00FE38  20                 	db	32
  2537  00FE39  00                 	db	0
  2538  00FE3A                     STR_28:
  2539                           
  2540                           ; BSR set to: 57
  2541  00FE3A  42                 	db	66	;'B'
  2542  00FE3B  41                 	db	65	;'A'
  2543  00FE3C  48                 	db	72	;'H'
  2544  00FE3D  20                 	db	32
  2545  00FE3E  25                 	db	37
  2546  00FE3F  33                 	db	51	;'3'
  2547  00FE40  2E                 	db	46
  2548  00FE41  32                 	db	50	;'2'
  2549  00FE42  66                 	db	102	;'f'
  2550  00FE43  20                 	db	32
  2551  00FE44  50                 	db	80	;'P'
  2552  00FE45  25                 	db	37
  2553  00FE46  33                 	db	51	;'3'
  2554  00FE47  2E                 	db	46
  2555  00FE48  32                 	db	50	;'2'
  2556  00FE49  66                 	db	102	;'f'
  2557  00FE4A  20                 	db	32
  2558  00FE4B  20                 	db	32
  2559  00FE4C  20                 	db	32
  2560  00FE4D  00                 	db	0
  2561  00FE4E                     STR_48:
  2562                           
  2563                           ; BSR set to: 57
  2564  00FE4E  20                 	db	32
  2565  00FE4F  20                 	db	32
  2566  00FE50  20                 	db	32
  2567  00FE51  20                 	db	32
  2568  00FE52  20                 	db	32
  2569  00FE53  20                 	db	32
  2570  00FE54  20                 	db	32
  2571  00FE55  20                 	db	32
  2572  00FE56  20                 	db	32
  2573  00FE57  20                 	db	32
  2574  00FE58  20                 	db	32
  2575  00FE59  20                 	db	32
  2576  00FE5A  20                 	db	32
  2577  00FE5B  20                 	db	32
  2578  00FE5C  20                 	db	32
  2579  00FE5D  20                 	db	32
  2580  00FE5E  20                 	db	32
  2581  00FE5F  20                 	db	32
  2582  00FE60  00                 	db	0
  2583  00FE61                     STR_38:
  2584                           
  2585                           ; BSR set to: 57
  2586  00FE61  48                 	db	72	;'H'
  2587  00FE62  45                 	db	69	;'E'
  2588  00FE63  4C                 	db	76	;'L'
  2589  00FE64  50                 	db	80	;'P'
  2590  00FE65  20                 	db	32
  2591  00FE66  25                 	db	37
  2592  00FE67  73                 	db	115	;'s'
  2593  00FE68  20                 	db	32
  2594  00FE69  20                 	db	32
  2595  00FE6A  20                 	db	32
  2596  00FE6B  20                 	db	32
  2597  00FE6C  20                 	db	32
  2598  00FE6D  20                 	db	32
  2599  00FE6E  20                 	db	32
  2600  00FE6F  20                 	db	32
  2601  00FE70  20                 	db	32
  2602  00FE71  20                 	db	32
  2603  00FE72  20                 	db	32
  2604  00FE73  00                 	db	0
  2605  00FE74                     
  2606                           ; BSR set to: 57
  2607  00FE74  44                 	db	68	;'D'
  2608  00FE75  49                 	db	73	;'I'
  2609  00FE76  53                 	db	83	;'S'
  2610  00FE77  50                 	db	80	;'P'
  2611  00FE78  4C                 	db	76	;'L'
  2612  00FE79  41                 	db	65	;'A'
  2613  00FE7A  59                 	db	89	;'Y'
  2614  00FE7B  20                 	db	32
  2615  00FE7C  25                 	db	37
  2616  00FE7D  73                 	db	115	;'s'
  2617  00FE7E  20                 	db	32
  2618  00FE7F  20                 	db	32
  2619  00FE80  20                 	db	32
  2620  00FE81  20                 	db	32
  2621  00FE82  20                 	db	32
  2622  00FE83  20                 	db	32
  2623  00FE84  20                 	db	32
  2624  00FE85  20                 	db	32
  2625  00FE86  00                 	db	0
  2626  00FE87                     STR_21:
  2627                           
  2628                           ; BSR set to: 57
  2629  00FE87  50                 	db	80	;'P'
  2630  00FE88  56                 	db	86	;'V'
  2631  00FE89  20                 	db	32
  2632  00FE8A  20                 	db	32
  2633  00FE8B  20                 	db	32
  2634  00FE8C  50                 	db	80	;'P'
  2635  00FE8D  57                 	db	87	;'W'
  2636  00FE8E  52                 	db	82	;'R'
  2637  00FE8F  20                 	db	32
  2638  00FE90  25                 	db	37
  2639  00FE91  33                 	db	51	;'3'
  2640  00FE92  2E                 	db	46
  2641  00FE93  32                 	db	50	;'2'
  2642  00FE94  66                 	db	102	;'f'
  2643  00FE95  20                 	db	32
  2644  00FE96  20                 	db	32
  2645  00FE97  20                 	db	32
  2646  00FE98  20                 	db	32
  2647  00FE99  00                 	db	0
  2648  00FE9A                     STR_23:
  2649                           
  2650                           ; BSR set to: 57
  2651  00FE9A  49                 	db	73	;'I'
  2652  00FE9B  4E                 	db	78	;'N'
  2653  00FE9C  56                 	db	86	;'V'
  2654  00FE9D  20                 	db	32
  2655  00FE9E  20                 	db	32
  2656  00FE9F  50                 	db	80	;'P'
  2657  00FEA0  57                 	db	87	;'W'
  2658  00FEA1  52                 	db	82	;'R'
  2659  00FEA2  20                 	db	32
  2660  00FEA3  25                 	db	37
  2661  00FEA4  33                 	db	51	;'3'
  2662  00FEA5  2E                 	db	46
  2663  00FEA6  32                 	db	50	;'2'
  2664  00FEA7  66                 	db	102	;'f'
  2665  00FEA8  20                 	db	32
  2666  00FEA9  20                 	db	32
  2667  00FEAA  20                 	db	32
  2668  00FEAB  20                 	db	32
  2669  00FEAC  00                 	db	0
  2670  00FEAD                     STR_22:
  2671                           
  2672                           ; BSR set to: 57
  2673  00FEAD  4C                 	db	76	;'L'
  2674  00FEAE  4F                 	db	79	;'O'
  2675  00FEAF  41                 	db	65	;'A'
  2676  00FEB0  44                 	db	68	;'D'
  2677  00FEB1  20                 	db	32
  2678  00FEB2  50                 	db	80	;'P'
  2679  00FEB3  57                 	db	87	;'W'
  2680  00FEB4  52                 	db	82	;'R'
  2681  00FEB5  20                 	db	32
  2682  00FEB6  25                 	db	37
  2683  00FEB7  33                 	db	51	;'3'
  2684  00FEB8  2E                 	db	46
  2685  00FEB9  32                 	db	50	;'2'
  2686  00FEBA  66                 	db	102	;'f'
  2687  00FEBB  20                 	db	32
  2688  00FEBC  20                 	db	32
  2689  00FEBD  20                 	db	32
  2690  00FEBE  20                 	db	32
  2691  00FEBF  00                 	db	0
  2692  00FEC0                     STR_27:
  2693                           
  2694                           ; BSR set to: 57
  2695  00FEC0  42                 	db	66	;'B'
  2696  00FEC1  41                 	db	65	;'A'
  2697  00FEC2  54                 	db	84	;'T'
  2698  00FEC3  54                 	db	84	;'T'
  2699  00FEC4  20                 	db	32
  2700  00FEC5  50                 	db	80	;'P'
  2701  00FEC6  57                 	db	87	;'W'
  2702  00FEC7  52                 	db	82	;'R'
  2703  00FEC8  20                 	db	32
  2704  00FEC9  25                 	db	37
  2705  00FECA  33                 	db	51	;'3'
  2706  00FECB  2E                 	db	46
  2707  00FECC  32                 	db	50	;'2'
  2708  00FECD  66                 	db	102	;'f'
  2709  00FECE  20                 	db	32
  2710  00FECF  20                 	db	32
  2711  00FED0  20                 	db	32
  2712  00FED1  20                 	db	32
  2713  00FED2  00                 	db	0
  2714  00FED3                     STR_25:
  2715                           
  2716                           ; BSR set to: 57
  2717  00FED3  42                 	db	66	;'B'
  2718  00FED4  56                 	db	86	;'V'
  2719  00FED5  20                 	db	32
  2720  00FED6  25                 	db	37
  2721  00FED7  32                 	db	50	;'2'
  2722  00FED8  2E                 	db	46
  2723  00FED9  32                 	db	50	;'2'
  2724  00FEDA  66                 	db	102	;'f'
  2725  00FEDB  20                 	db	32
  2726  00FEDC  42                 	db	66	;'B'
  2727  00FEDD  41                 	db	65	;'A'
  2728  00FEDE  20                 	db	32
  2729  00FEDF  25                 	db	37
  2730  00FEE0  32                 	db	50	;'2'
  2731  00FEE1  2E                 	db	46
  2732  00FEE2  32                 	db	50	;'2'
  2733  00FEE3  66                 	db	102	;'f'
  2734  00FEE4  20                 	db	32
  2735  00FEE5  00                 	db	0
  2736  00FEE6                     STR_26:
  2737                           
  2738                           ; BSR set to: 57
  2739  00FEE6  43                 	db	67	;'C'
  2740  00FEE7  56                 	db	86	;'V'
  2741  00FEE8  20                 	db	32
  2742  00FEE9  25                 	db	37
  2743  00FEEA  32                 	db	50	;'2'
  2744  00FEEB  2E                 	db	46
  2745  00FEEC  32                 	db	50	;'2'
  2746  00FEED  66                 	db	102	;'f'
  2747  00FEEE  20                 	db	32
  2748  00FEEF  4C                 	db	76	;'L'
  2749  00FEF0  41                 	db	65	;'A'
  2750  00FEF1  20                 	db	32
  2751  00FEF2  25                 	db	37
  2752  00FEF3  32                 	db	50	;'2'
  2753  00FEF4  2E                 	db	46
  2754  00FEF5  32                 	db	50	;'2'
  2755  00FEF6  66                 	db	102	;'f'
  2756  00FEF7  20                 	db	32
  2757  00FEF8  00                 	db	0
  2758  00FEF9                     STR_24:
  2759                           
  2760                           ; BSR set to: 57
  2761  00FEF9  50                 	db	80	;'P'
  2762  00FEFA  56                 	db	86	;'V'
  2763  00FEFB  20                 	db	32
  2764  00FEFC  25                 	db	37
  2765  00FEFD  32                 	db	50	;'2'
  2766  00FEFE  2E                 	db	46
  2767  00FEFF  32                 	db	50	;'2'
  2768  00FF00  66                 	db	102	;'f'
  2769  00FF01  20                 	db	32
  2770  00FF02  50                 	db	80	;'P'
  2771  00FF03  41                 	db	65	;'A'
  2772  00FF04  20                 	db	32
  2773  00FF05  25                 	db	37
  2774  00FF06  32                 	db	50	;'2'
  2775  00FF07  2E                 	db	46
  2776  00FF08  32                 	db	50	;'2'
  2777  00FF09  66                 	db	102	;'f'
  2778  00FF0A  20                 	db	32
  2779  00FF0B  00                 	db	0
  2780  00FF0C                     STR_8:
  2781                           
  2782                           ; BSR set to: 57
  2783  00FF0C  42                 	db	66	;'B'
  2784  00FF0D  56                 	db	86	;'V'
  2785  00FF0E  20                 	db	32
  2786  00FF0F  25                 	db	37
  2787  00FF10  32                 	db	50	;'2'
  2788  00FF11  2E                 	db	46
  2789  00FF12  34                 	db	52	;'4'
  2790  00FF13  66                 	db	102	;'f'
  2791  00FF14  20                 	db	32
  2792  00FF15  20                 	db	32
  2793  00FF16  20                 	db	32
  2794  00FF17  20                 	db	32
  2795  00FF18  20                 	db	32
  2796  00FF19  20                 	db	32
  2797  00FF1A  20                 	db	32
  2798  00FF1B  20                 	db	32
  2799  00FF1C  20                 	db	32
  2800  00FF1D  00                 	db	0
  2801  00FF1E                     STR_4:
  2802                           
  2803                           ; BSR set to: 57
  2804  00FF1E  20                 	db	32
  2805  00FF1F  4E                 	db	78	;'N'
  2806  00FF20  53                 	db	83	;'S'
  2807  00FF21  41                 	db	65	;'A'
  2808  00FF22  53                 	db	83	;'S'
  2809  00FF23  50                 	db	80	;'P'
  2810  00FF24  4F                 	db	79	;'O'
  2811  00FF25  4F                 	db	79	;'O'
  2812  00FF26  4B                 	db	75	;'K'
  2813  00FF27  20                 	db	32
  2814  00FF28  20                 	db	32
  2815  00FF29  20                 	db	32
  2816  00FF2A  20                 	db	32
  2817  00FF2B  20                 	db	32
  2818  00FF2C  20                 	db	32
  2819  00FF2D  20                 	db	32
  2820  00FF2E  00                 	db	0
  2821  00FF2F                     STR_12:
  2822                           
  2823                           ; BSR set to: 57
  2824  00FF2F  42                 	db	66	;'B'
  2825  00FF30  61                 	db	97	;'a'
  2826  00FF31  74                 	db	116	;'t'
  2827  00FF32  74                 	db	116	;'t'
  2828  00FF33  65                 	db	101	;'e'
  2829  00FF34  72                 	db	114	;'r'
  2830  00FF35  79                 	db	121	;'y'
  2831  00FF36  20                 	db	32
  2832  00FF37  45                 	db	69	;'E'
  2833  00FF38  53                 	db	83	;'S'
  2834  00FF39  52                 	db	82	;'R'
  2835  00FF3A  20                 	db	32
  2836  00FF3B  20                 	db	32
  2837  00FF3C  20                 	db	32
  2838  00FF3D  20                 	db	32
  2839  00FF3E  20                 	db	32
  2840  00FF3F  00                 	db	0
  2841  00FF40                     STR_13:
  2842                           
  2843                           ; BSR set to: 57
  2844  00FF40  43                 	db	67	;'C'
  2845  00FF41  61                 	db	97	;'a'
  2846  00FF42  6C                 	db	108	;'l'
  2847  00FF43  63                 	db	99	;'c'
  2848  00FF44  75                 	db	117	;'u'
  2849  00FF45  6C                 	db	108	;'l'
  2850  00FF46  61                 	db	97	;'a'
  2851  00FF47  74                 	db	116	;'t'
  2852  00FF48  69                 	db	105	;'i'
  2853  00FF49  6F                 	db	111	;'o'
  2854  00FF4A  6E                 	db	110	;'n'
  2855  00FF4B  20                 	db	32
  2856  00FF4C  20                 	db	32
  2857  00FF4D  20                 	db	32
  2858  00FF4E  20                 	db	32
  2859  00FF4F  20                 	db	32
  2860  00FF50  00                 	db	0
  2861  00FF51                     STR_1:
  2862                           
  2863                           ; BSR set to: 57
  2864  00FF51  20                 	db	32
  2865  00FF52  4D                 	db	77	;'M'
  2866  00FF53  42                 	db	66	;'B'
  2867  00FF54  4D                 	db	77	;'M'
  2868  00FF55  43                 	db	67	;'C'
  2869  00FF56  20                 	db	32
  2870  00FF57  53                 	db	83	;'S'
  2871  00FF58  4F                 	db	79	;'O'
  2872  00FF59  4C                 	db	76	;'L'
  2873  00FF5A  41                 	db	65	;'A'
  2874  00FF5B  52                 	db	82	;'R'
  2875  00FF5C  4D                 	db	77	;'M'
  2876  00FF5D  4F                 	db	79	;'O'
  2877  00FF5E  4E                 	db	78	;'N'
  2878  00FF5F  20                 	db	32
  2879  00FF60  20                 	db	32
  2880  00FF61  00                 	db	0
  2881  00FF62                     STR_20:
  2882                           
  2883                           ; BSR set to: 57
  2884  00FF62  25                 	db	37
  2885  00FF63  64                 	db	100	;'d'
  2886  00FF64  20                 	db	32
  2887  00FF65  25                 	db	37
  2888  00FF66  32                 	db	50	;'2'
  2889  00FF67  2E                 	db	46
  2890  00FF68  34                 	db	52	;'4'
  2891  00FF69  66                 	db	102	;'f'
  2892  00FF6A  2C                 	db	44
  2893  00FF6B  20                 	db	32
  2894  00FF6C  25                 	db	37
  2895  00FF6D  64                 	db	100	;'d'
  2896  00FF6E  20                 	db	32
  2897  00FF6F  20                 	db	32
  2898  00FF70  20                 	db	32
  2899  00FF71  23                 	db	35
  2900  00FF72  00                 	db	0
  2901  00FF73                     STR_14:
  2902                           
  2903                           ; BSR set to: 57
  2904  00FF73  43                 	db	67	;'C'
  2905  00FF74  68                 	db	104	;'h'
  2906  00FF75  65                 	db	101	;'e'
  2907  00FF76  63                 	db	99	;'c'
  2908  00FF77  6B                 	db	107	;'k'
  2909  00FF78  20                 	db	32
  2910  00FF79  33                 	db	51	;'3'
  2911  00FF7A  30                 	db	48	;'0'
  2912  00FF7B  20                 	db	32
  2913  00FF7C  73                 	db	115	;'s'
  2914  00FF7D  65                 	db	101	;'e'
  2915  00FF7E  63                 	db	99	;'c'
  2916  00FF7F  6F                 	db	111	;'o'
  2917  00FF80  6E                 	db	110	;'n'
  2918  00FF81  64                 	db	100	;'d'
  2919  00FF82  73                 	db	115	;'s'
  2920  00FF83  00                 	db	0
  2921  00FF84                     STR_18:
  2922                           
  2923                           ; BSR set to: 57
  2924  00FF84  25                 	db	37
  2925  00FF85  64                 	db	100	;'d'
  2926  00FF86  20                 	db	32
  2927  00FF87  25                 	db	37
  2928  00FF88  32                 	db	50	;'2'
  2929  00FF89  2E                 	db	46
  2930  00FF8A  34                 	db	52	;'4'
  2931  00FF8B  66                 	db	102	;'f'
  2932  00FF8C  20                 	db	32
  2933  00FF8D  20                 	db	32
  2934  00FF8E  20                 	db	32
  2935  00FF8F  25                 	db	37
  2936  00FF90  64                 	db	100	;'d'
  2937  00FF91  20                 	db	32
  2938  00FF92  20                 	db	32
  2939  00FF93  00                 	db	0
  2940  00FF94                     STR_42:
  2941                           
  2942                           ; BSR set to: 57
  2943  00FF94  76                 	db	118	;'v'
  2944  00FF95  74                 	db	116	;'t'
  2945  00FF96  65                 	db	101	;'e'
  2946  00FF97  72                 	db	114	;'r'
  2947  00FF98  6D                 	db	109	;'m'
  2948  00FF99  20                 	db	32
  2949  00FF9A  25                 	db	37
  2950  00FF9B  78                 	db	120	;'x'
  2951  00FF9C  3A                 	db	58	;':'
  2952  00FF9D  25                 	db	37
  2953  00FF9E  78                 	db	120	;'x'
  2954  00FF9F  20                 	db	32
  2955  00FFA0  20                 	db	32
  2956  00FFA1  20                 	db	32
  2957  00FFA2  00                 	db	0
  2958  00FFA3                     STR_2:
  2959                           
  2960                           ; BSR set to: 57
  2961  00FFA3  20                 	db	32
  2962  00FFA4  56                 	db	86	;'V'
  2963  00FFA5  65                 	db	101	;'e'
  2964  00FFA6  72                 	db	114	;'r'
  2965  00FFA7  73                 	db	115	;'s'
  2966  00FFA8  69                 	db	105	;'i'
  2967  00FFA9  6F                 	db	111	;'o'
  2968  00FFAA  6E                 	db	110	;'n'
  2969  00FFAB  20                 	db	32
  2970  00FFAC  25                 	db	37
  2971  00FFAD  73                 	db	115	;'s'
  2972  00FFAE  20                 	db	32
  2973  00FFAF  20                 	db	32
  2974  00FFB0  20                 	db	32
  2975  00FFB1  00                 	db	0
  2976  00FFB2                     STR_36:
  2977                           
  2978                           ; BSR set to: 57
  2979  00FFB2  44                 	db	68	;'D'
  2980  00FFB3  65                 	db	101	;'e'
  2981  00FFB4  63                 	db	99	;'c'
  2982  00FFB5  20                 	db	32
  2983  00FFB6  31                 	db	49	;'1'
  2984  00FFB7  32                 	db	50	;'2'
  2985  00FFB8  20                 	db	32
  2986  00FFB9  32                 	db	50	;'2'
  2987  00FFBA  30                 	db	48	;'0'
  2988  00FFBB  31                 	db	49	;'1'
  2989  00FFBC  39                 	db	57	;'9'
  2990  00FFBD  00                 	db	0
  2991  00FFBE                     STR_40:
  2992                           
  2993                           ; BSR set to: 57
  2994  00FFBE  25                 	db	37
  2995  00FFBF  73                 	db	115	;'s'
  2996  00FFC0  20                 	db	32
  2997  00FFC1  20                 	db	32
  2998  00FFC2  20                 	db	32
  2999  00FFC3  20                 	db	32
  3000  00FFC4  20                 	db	32
  3001  00FFC5  20                 	db	32
  3002  00FFC6  20                 	db	32
  3003  00FFC7  00                 	db	0
  3004  00FFC8                     STR_37:
  3005                           
  3006                           ; BSR set to: 57
  3007  00FFC8  31                 	db	49	;'1'
  3008  00FFC9  36                 	db	54	;'6'
  3009  00FFCA  3A                 	db	58	;':'
  3010  00FFCB  34                 	db	52	;'4'
  3011  00FFCC  36                 	db	54	;'6'
  3012  00FFCD  3A                 	db	58	;':'
  3013  00FFCE  35                 	db	53	;'5'
  3014  00FFCF  38                 	db	56	;'8'
  3015  00FFD0  00                 	db	0
  3016  00FFD1                     STR_3:
  3017                           
  3018                           ; BSR set to: 57
  3019  00FFD1  31                 	db	49	;'1'
  3020  00FFD2  2E                 	db	46
  3021  00FFD3  30                 	db	48	;'0'
  3022  00FFD4  30                 	db	48	;'0'
  3023  00FFD5  33                 	db	51	;'3'
  3024  00FFD6  00                 	db	0
  3025  00FFD7                     STR_56:
  3026                           
  3027                           ; BSR set to: 57
  3028  00FFD7  49                 	db	73	;'I'
  3029  00FFD8  4E                 	db	78	;'N'
  3030  00FFD9  46                 	db	70	;'F'
  3031  00FFDA  00                 	db	0
  3032  00FFDB                     STR_60:
  3033                           
  3034                           ; BSR set to: 57
  3035  00FFDB  4E                 	db	78	;'N'
  3036  00FFDC  41                 	db	65	;'A'
  3037  00FFDD  4E                 	db	78	;'N'
  3038  00FFDE  00                 	db	0
  3039  00FFDF                     STR_57:
  3040                           
  3041                           ; BSR set to: 57
  3042  00FFDF  69                 	db	105	;'i'
  3043  00FFE0  6E                 	db	110	;'n'
  3044  00FFE1  66                 	db	102	;'f'
  3045  00FFE2  00                 	db	0
  3046  00FFE3                     STR_61:
  3047                           
  3048                           ; BSR set to: 57
  3049  00FFE3  6E                 	db	110	;'n'
  3050  00FFE4  61                 	db	97	;'a'
  3051  00FFE5  6E                 	db	110	;'n'
  3052  00FFE6  00                 	db	0
  3053  00FFE7                     STR_87:
  3054                           
  3055                           ; BSR set to: 57
  3056  00FFE7  6C                 	db	108	;'l'
  3057  00FFE8  58                 	db	88	;'X'
  3058  00FFE9  00                 	db	0
  3059  00FFEA                     STR_64:
  3060                           
  3061                           ; BSR set to: 57
  3062  00FFEA  6C                 	db	108	;'l'
  3063  00FFEB  64                 	db	100	;'d'
  3064  00FFEC  00                 	db	0
  3065  00FFED                     STR_73:
  3066                           
  3067                           ; BSR set to: 57
  3068  00FFED  6C                 	db	108	;'l'
  3069  00FFEE  66                 	db	102	;'f'
  3070  00FFEF  00                 	db	0
  3071  00FFF0                     STR_68:
  3072                           
  3073                           ; BSR set to: 57
  3074  00FFF0  6C                 	db	108	;'l'
  3075  00FFF1  69                 	db	105	;'i'
  3076  00FFF2  00                 	db	0
  3077  00FFF3                     STR_78:
  3078                           
  3079                           ; BSR set to: 57
  3080  00FFF3  6C                 	db	108	;'l'
  3081  00FFF4  75                 	db	117	;'u'
  3082  00FFF5  00                 	db	0
  3083  00FFF6                     STR_83:
  3084                           
  3085                           ; BSR set to: 57
  3086  00FFF6  6C                 	db	108	;'l'
  3087  00FFF7  78                 	db	120	;'x'
  3088  00FFF8  00                 	db	0
  3089  00FFF9                     STR_34:
  3090                           
  3091                           ; BSR set to: 57
  3092  00FFF9  25                 	db	37
  3093  00FFFA  63                 	db	99	;'c'
  3094  00FFFB  00                 	db	0
  3095  00FFFC                     STR_33:
  3096                           
  3097                           ; BSR set to: 57
  3098  00FFFC  25                 	db	37
  3099  00FFFD  73                 	db	115	;'s'
  3100  00FFFE  00                 	db	0
  3101  0000                     
  3102                           ; #config settings
  3103  00FFFF  00                 	db	0	; dummy byte at the end
  3104  0000                     
  3105                           	psect	cinit
  3106  018D8A                     __pcinit:
  3107                           	opt callstack 0
  3108  018D8A                     start_initialization:
  3109                           	opt callstack 0
  3110  018D8A                     __initialization:
  3111                           	opt callstack 0
  3112                           
  3113                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3114                           ; load TBLPTR registers with __pidataBIGRAM
  3115  018D8A  0E60               	movlw	low __pidataBIGRAM
  3116  018D8C  6EF6               	movwf	tblptrl,c
  3117  018D8E  0E74               	movlw	high __pidataBIGRAM
  3118  018D90  6EF7               	movwf	tblptrh,c
  3119  018D92  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3120  018D94  6EF8               	movwf	tblptru,c
  3121  018D96  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3122  018D9A  EE20 F200          	lfsr	2,512
  3123  018D9E                     copy_data0:
  3124  018D9E  0009               	tblrd		*+
  3125  018DA0  006F FFD7 FFEE     	movff	tablat,postinc0
  3126  018DA6  50DD               	movf	postdec2,w,c
  3127  018DA8  50D9               	movf	fsr2l,w,c
  3128  018DAA  E1F9               	bnz	copy_data0
  3129  018DAC  50DA               	movf	fsr2h,w,c
  3130  018DAE  E1F7               	bnz	copy_data0
  3131                           
  3132                           ; Initialize objects allocated to BANK2 (188 bytes)
  3133                           ; load TBLPTR registers with __pidataBANK2
  3134  018DB0  0E00               	movlw	low __pidataBANK2
  3135  018DB2  6EF6               	movwf	tblptrl,c
  3136  018DB4  0E95               	movlw	high __pidataBANK2
  3137  018DB6  6EF7               	movwf	tblptrh,c
  3138  018DB8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3139  018DBA  6EF8               	movwf	tblptru,c
  3140  018DBC  EE00  F200         	lfsr	0,__pdataBANK2
  3141  018DC0  EE20 F0BC          	lfsr	2,188
  3142  018DC4                     copy_data1:
  3143  018DC4  0009               	tblrd		*+
  3144  018DC6  006F FFD7 FFEE     	movff	tablat,postinc0
  3145  018DCC  50DD               	movf	postdec2,w,c
  3146  018DCE  50D9               	movf	fsr2l,w,c
  3147  018DD0  E1F9               	bnz	copy_data1
  3148                           
  3149                           ; Initialize objects allocated to BANK1 (243 bytes)
  3150                           ; load TBLPTR registers with __pidataBANK1
  3151  018DD2  0EA4               	movlw	low __pidataBANK1
  3152  018DD4  6EF6               	movwf	tblptrl,c
  3153  018DD6  0E90               	movlw	high __pidataBANK1
  3154  018DD8  6EF7               	movwf	tblptrh,c
  3155  018DDA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3156  018DDC  6EF8               	movwf	tblptru,c
  3157  018DDE  EE00  F100         	lfsr	0,__pdataBANK1
  3158  018DE2  EE20 F0F3          	lfsr	2,243
  3159  018DE6                     copy_data2:
  3160  018DE6  0009               	tblrd		*+
  3161  018DE8  006F FFD7 FFEE     	movff	tablat,postinc0
  3162  018DEE  50DD               	movf	postdec2,w,c
  3163  018DF0  50D9               	movf	fsr2l,w,c
  3164  018DF2  E1F9               	bnz	copy_data2
  3165                           
  3166                           ; Initialize objects allocated to BANK0 (54 bytes)
  3167                           ; load TBLPTR registers with __pidataBANK0
  3168  018DF4  0E50               	movlw	low __pidataBANK0
  3169  018DF6  6EF6               	movwf	tblptrl,c
  3170  018DF8  0EA8               	movlw	high __pidataBANK0
  3171  018DFA  6EF7               	movwf	tblptrh,c
  3172  018DFC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3173  018DFE  6EF8               	movwf	tblptru,c
  3174  018E00  EE00  F0C4         	lfsr	0,__pdataBANK0
  3175  018E04  EE20 F036          	lfsr	2,54
  3176  018E08                     copy_data3:
  3177  018E08  0009               	tblrd		*+
  3178  018E0A  006F FFD7 FFEE     	movff	tablat,postinc0
  3179  018E10  50DD               	movf	postdec2,w,c
  3180  018E12  50D9               	movf	fsr2l,w,c
  3181  018E14  E1F9               	bnz	copy_data3
  3182                           
  3183                           ; Clear objects allocated to BIGRAM (290 bytes)
  3184  018E16  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3185  018E1A  EE20 F122          	lfsr	2,290
  3186  018E1E                     clear_0:
  3187  018E1E  6AEE               	clrf	postinc0,c
  3188  018E20  50DD               	movf	postdec2,w,c
  3189  018E22  50D9               	movf	fsr2l,w,c
  3190  018E24  E1FC               	bnz	clear_0
  3191  018E26  50DA               	movf	fsr2h,w,c
  3192  018E28  E1FA               	bnz	clear_0
  3193                           
  3194                           ; Clear objects allocated to BANK5 (255 bytes)
  3195  018E2A  EE01  F100         	lfsr	0,__pbssBANK5
  3196  018E2E  EE20 F0FF          	lfsr	2,255
  3197  018E32                     clear_1:
  3198  018E32  6AEE               	clrf	postinc0,c
  3199  018E34  50DD               	movf	postdec2,w,c
  3200  018E36  50D9               	movf	fsr2l,w,c
  3201  018E38  E1FC               	bnz	clear_1
  3202  018E3A  50DA               	movf	fsr2h,w,c
  3203  018E3C  E1FA               	bnz	clear_1
  3204                           
  3205                           ; Clear objects allocated to BANK4 (134 bytes)
  3206  018E3E  EE01  F000         	lfsr	0,__pbssBANK4
  3207  018E42  0E86               	movlw	134
  3208  018E44                     clear_2:
  3209  018E44  6AEE               	clrf	postinc0,c
  3210  018E46  06E8               	decf	wreg,f,c
  3211  018E48  E1FD               	bnz	clear_2
  3212                           
  3213                           ; Clear objects allocated to BANK3 (228 bytes)
  3214  018E4A  EE00  F300         	lfsr	0,__pbssBANK3
  3215  018E4E  0EE4               	movlw	228
  3216  018E50                     clear_3:
  3217  018E50  6AEE               	clrf	postinc0,c
  3218  018E52  06E8               	decf	wreg,f,c
  3219  018E54  E1FD               	bnz	clear_3
  3220                           
  3221                           ; Clear objects allocated to BANK2 (65 bytes)
  3222  018E56  EE00  F2BC         	lfsr	0,__pbssBANK2
  3223  018E5A  0E41               	movlw	65
  3224  018E5C                     clear_4:
  3225  018E5C  6AEE               	clrf	postinc0,c
  3226  018E5E  06E8               	decf	wreg,f,c
  3227  018E60  E1FD               	bnz	clear_4
  3228                           
  3229                           ; Clear objects allocated to BANK1 (8 bytes)
  3230  018E62  EE00  F1F3         	lfsr	0,__pbssBANK1
  3231  018E66  0E08               	movlw	8
  3232  018E68                     clear_5:
  3233  018E68  6AEE               	clrf	postinc0,c
  3234  018E6A  06E8               	decf	wreg,f,c
  3235  018E6C  E1FD               	bnz	clear_5
  3236                           
  3237                           ; Clear objects allocated to BANK0 (100 bytes)
  3238  018E6E  EE00  F060         	lfsr	0,__pbssBANK0
  3239  018E72  0E64               	movlw	100
  3240  018E74                     clear_6:
  3241  018E74  6AEE               	clrf	postinc0,c
  3242  018E76  06E8               	decf	wreg,f,c
  3243  018E78  E1FD               	bnz	clear_6
  3244                           
  3245                           ; Clear objects allocated to COMRAM (23 bytes)
  3246  018E7A  EE00  F021         	lfsr	0,__pbssCOMRAM
  3247  018E7E  0E17               	movlw	23
  3248  018E80                     clear_7:
  3249  018E80  6AEE               	clrf	postinc0,c
  3250  018E82  06E8               	decf	wreg,f,c
  3251  018E84  E1FD               	bnz	clear_7
  3252                           
  3253                           ;
  3254                           ; Setup IVTBASE
  3255                           ;
  3256  018E86  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3257  018E88  6ED5               	movwf	213,c
  3258  018E8A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3259  018E8C  6ED6               	movwf	214,c
  3260  018E8E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3261  018E90  6ED7               	movwf	215,c
  3262  018E92                     end_of_initialization:
  3263                           	opt callstack 0
  3264  018E92                     __end_of__initialization:
  3265                           	opt callstack 0
  3266  018E92  0100               	movlb	0
  3267  018E94  EFF8  F090         	goto	_main	;jump to C main() function
  3268                           
  3269                           	psect	bssCOMRAM
  3270  000021                     __pbssCOMRAM:
  3271                           	opt callstack 0
  3272  000021                     _width:
  3273                           	opt callstack 0
  3274  000021                     	ds	2
  3275  000023                     _prec:
  3276                           	opt callstack 0
  3277  000023                     	ds	2
  3278  000025                     _flags:
  3279                           	opt callstack 0
  3280  000025                     	ds	2
  3281  000027                     _timer3ReloadVal:
  3282                           	opt callstack 0
  3283  000027                     	ds	2
  3284  000029                     TMR5_ISR@CountCallBack:
  3285                           	opt callstack 0
  3286  000029                     	ds	2
  3287  00002B                     _timer5ReloadVal:
  3288                           	opt callstack 0
  3289  00002B                     	ds	2
  3290  00002D                     Volts_to_SOC@slot:
  3291                           	opt callstack 0
  3292  00002D                     	ds	1
  3293  00002E                     _mode_sw:
  3294                           	opt callstack 0
  3295  00002E                     	ds	1
  3296  00002F                     _uart2RxCount:
  3297                           	opt callstack 0
  3298  00002F                     	ds	1
  3299  000030                     _uart2RxTail:
  3300                           	opt callstack 0
  3301  000030                     	ds	1
  3302  000031                     _uart2RxHead:
  3303                           	opt callstack 0
  3304  000031                     	ds	1
  3305  000032                     _uart2TxBufferRemaining:
  3306                           	opt callstack 0
  3307  000032                     	ds	1
  3308  000033                     _uart2TxTail:
  3309                           	opt callstack 0
  3310  000033                     	ds	1
  3311  000034                     _uart2TxHead:
  3312                           	opt callstack 0
  3313  000034                     	ds	1
  3314  000035                     _uart1RxCount:
  3315                           	opt callstack 0
  3316  000035                     	ds	1
  3317  000036                     _uart1RxTail:
  3318                           	opt callstack 0
  3319  000036                     	ds	1
  3320  000037                     _uart1RxHead:
  3321                           	opt callstack 0
  3322  000037                     	ds	1
  3323                           
  3324                           	psect	bssBANK0
  3325  000060                     __pbssBANK0:
  3326                           	opt callstack 0
  3327  000060                     _spi_link:
  3328                           	opt callstack 0
  3329  000060                     	ds	12
  3330  00006C                     _uart1RxBuffer:
  3331                           	opt callstack 0
  3332  00006C                     	ds	8
  3333  000074                     spinners@s:
  3334                           	opt callstack 0
  3335  000074                     	ds	6
  3336  00007A                     floorf@F524:
  3337                           	opt callstack 0
  3338  00007A                     	ds	4
  3339  00007E                     fabsf@F463:
  3340                           	opt callstack 0
  3341  00007E                     	ds	4
  3342  000082                     ___fpclassifyf@F463:
  3343                           	opt callstack 0
  3344  000082                     	ds	4
  3345  000086                     calc_ror_data@bcror:
  3346                           	opt callstack 0
  3347  000086                     	ds	4
  3348  00008A                     calc_ror_data@bvror:
  3349                           	opt callstack 0
  3350  00008A                     	ds	4
  3351  00008E                     calc_model_data@bcror:
  3352                           	opt callstack 0
  3353  00008E                     	ds	4
  3354  000092                     calc_model_data@bvror:
  3355                           	opt callstack 0
  3356  000092                     	ds	4
  3357  000096                     _utctime:
  3358                           	opt callstack 0
  3359  000096                     	ds	4
  3360  00009A                     wdtdelay@dcount:
  3361                           	opt callstack 0
  3362  00009A                     	ds	4
  3363  00009E                     _P:
  3364                           	opt callstack 0
  3365  00009E                     	ds	4
  3366  0000A2                     _TMR3_InterruptHandler:
  3367                           	opt callstack 0
  3368  0000A2                     	ds	3
  3369  0000A5                     _TMR5_InterruptHandler:
  3370                           	opt callstack 0
  3371  0000A5                     	ds	3
  3372  0000A8                     _TMR6_InterruptHandler:
  3373                           	opt callstack 0
  3374  0000A8                     	ds	3
  3375  0000AB                     _ADCC_ADTI_InterruptHandler:
  3376                           	opt callstack 0
  3377  0000AB                     	ds	3
  3378  0000AE                     _ADCC_ADI_InterruptHandler:
  3379                           	opt callstack 0
  3380  0000AE                     	ds	3
  3381  0000B1                     _UART1_RxInterruptHandler:
  3382                           	opt callstack 0
  3383  0000B1                     	ds	3
  3384  0000B4                     _UART2_TxInterruptHandler:
  3385                           	opt callstack 0
  3386  0000B4                     	ds	3
  3387  0000B7                     _UART2_RxInterruptHandler:
  3388                           	opt callstack 0
  3389  0000B7                     	ds	3
  3390  0000BA                     _INT1_InterruptHandler:
  3391                           	opt callstack 0
  3392  0000BA                     	ds	3
  3393  0000BD                     _INT0_InterruptHandler:
  3394                           	opt callstack 0
  3395  0000BD                     	ds	3
  3396  0000C0                     _nout:
  3397                           	opt callstack 0
  3398  0000C0                     	ds	2
  3399  0000C2                     TMR3_ISR@CountCallBack:
  3400                           	opt callstack 0
  3401  0000C2                     	ds	2
  3402                           
  3403                           	psect	dataBANK0
  3404  0000C4                     __pdataBANK0:
  3405                           	opt callstack 0
  3406  0000C4                     _R:
  3407                           	opt callstack 0
  3408  0000C4                     	ds	40
  3409  0000EC                     stoa@F1166:
  3410                           	opt callstack 0
  3411  0000EC                     	ds	7
  3412  0000F3                     _H:
  3413                           	opt callstack 0
  3414  0000F3                     	ds	7
  3415                           
  3416                           	psect	bssBANK1
  3417  0001F3                     __pbssBANK1:
  3418                           	opt callstack 0
  3419  0001F3                     _seed:
  3420                           	opt callstack 0
  3421  0001F3                     	ds	8
  3422                           
  3423                           	psect	dataBANK1
  3424  000100                     __pdataBANK1:
  3425                           	opt callstack 0
  3426  000100                     _C:
  3427                           	opt callstack 0
  3428  000100                     	ds	243
  3429                           
  3430                           	psect	bssBANK2
  3431  0002BC                     __pbssBANK2:
  3432                           	opt callstack 0
  3433  0002BC                     _S:
  3434                           	opt callstack 0
  3435  0002BC                     	ds	41
  3436  0002E5                     _tickCount:
  3437                           	opt callstack 0
  3438  0002E5                     	ds	24
  3439                           
  3440                           	psect	dataBANK2
  3441  000200                     __pdataBANK2:
  3442                           	opt callstack 0
  3443  000200                     _V:
  3444                           	opt callstack 0
  3445  000200                     	ds	188
  3446                           
  3447                           	psect	bssBANK3
  3448  000300                     __pbssBANK3:
  3449                           	opt callstack 0
  3450  000300                     lp_filter@smooth:
  3451                           	opt callstack 0
  3452  000300                     	ds	84
  3453  000354                     _uart2TxBuffer:
  3454                           	opt callstack 0
  3455  000354                     	ds	64
  3456  000394                     _dbuf:
  3457                           	opt callstack 0
  3458  000394                     	ds	80
  3459                           
  3460                           	psect	bssBANK4
  3461  000400                     __pbssBANK4:
  3462                           	opt callstack 0
  3463  000400                     _ring_buf2:
  3464                           	opt callstack 0
  3465  000400                     	ds	67
  3466  000443                     _ring_buf1:
  3467                           	opt callstack 0
  3468  000443                     	ds	67
  3469                           
  3470                           	psect	bssBANK5
  3471  000500                     __pbssBANK5:
  3472                           	opt callstack 0
  3473  000500                     _uart2RxBuffer:
  3474                           	opt callstack 0
  3475  000500                     	ds	255
  3476                           
  3477                           	psect	bssBIGRAM
  3478  0007FF                     __pbssBIGRAM:
  3479                           	opt callstack 0
  3480  0007FF                     _D:
  3481                           	opt callstack 0
  3482  0007FF                     	ds	290
  3483                           
  3484                           	psect	dataBIGRAM
  3485  0005FF                     __pdataBIGRAM:
  3486                           	opt callstack 0
  3487  0005FF                     _port_data:
  3488                           	opt callstack 0
  3489  0005FF                     	ds	512
  3490                           
  3491                           	psect	cstackBANK3
  3492  0003E4                     __pcstackBANK3:
  3493                           	opt callstack 0
  3494  0003E4                     ??_TMR3_ISR:
  3495                           
  3496                           ; 1 bytes @ 0x0
  3497  0003E4                     	ds	25
  3498                           
  3499                           	psect	cstackCOMRAM
  3500  000038                     __pcstackCOMRAM:
  3501                           	opt callstack 0
  3502  000038                     ??_ADCC_ThresholdISR:
  3503  000038                     
  3504                           ; 1 bytes @ 0x0
  3505  000038                     	ds	5
  3506  00003D                     ??_TMR6_ISR:
  3507                           
  3508                           ; 1 bytes @ 0x5
  3509  00003D                     	ds	1
  3510  00003E                     ??_INT1_ISR:
  3511  00003E                     
  3512                           ; 1 bytes @ 0x6
  3513  00003E                     	ds	4
  3514  000042                     ??_TMR5_ISR:
  3515                           
  3516                           ; 1 bytes @ 0xA
  3517  000042                     	ds	4
  3518                           
  3519 ;;
  3520 ;;Main: autosize = 6, tempsize = 0, incstack = 0, save=0
  3521 ;;
  3522 ;; *************** function _main *****************
  3523 ;; Defined at:
  3524 ;;		line 174 in file "main.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  k               1  [STACK] unsigned char 
  3529 ;;  j               1  [STACK] unsigned char 
  3530 ;;  i               1  [STACK] unsigned char 
  3531 ;;  inp_index       1  [STACK] unsigned char 
  3532 ;;  mode            1  [STACK] enum E17013
  3533 ;;  i_ror           1  [STACK] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1  [STACK] void 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels required when called:   28
  3549 ;; This function calls:
  3550 ;;		_SYSTEM_Initialize
  3551 ;;		_StartTimer
  3552 ;;		_TimerDone
  3553 ;;		_WaitMs
  3554 ;;		___flge
  3555 ;;		_calc_model_data
  3556 ;;		_calc_ror_data
  3557 ;;		_check_adc_scan
  3558 ;;		_check_enter_button
  3559 ;;		_check_help
  3560 ;;		_clear_adc_scan
  3561 ;;		_clear_hid_pflags
  3562 ;;		_conv_raw_result
  3563 ;;		_convert_adc_data
  3564 ;;		_eaDogM_WriteCommand
  3565 ;;		_esr_check
  3566 ;;		_get_raw_result
  3567 ;;		_get_switch
  3568 ;;		_get_vterm_ptr
  3569 ;;		_hid_display
  3570 ;;		_init_bsoc
  3571 ;;		_init_display
  3572 ;;		_init_port_dma
  3573 ;;		_lp_filter
  3574 ;;		_mode_lamp_dim
  3575 ;;		_set_display_info
  3576 ;;		_set_load_relay_one
  3577 ;;		_set_load_relay_two
  3578 ;;		_set_vterm
  3579 ;;		_spinners
  3580 ;;		_sprintf
  3581 ;;		_srand
  3582 ;;		_start_adc_scan
  3583 ;;		_start_switch_handler
  3584 ;;		_static_soc
  3585 ;;		_update_lcd
  3586 ;; This function is called by:
  3587 ;;		Startup code after reset
  3588 ;; This function uses a reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text0
  3592  0121F0                     __ptext0:
  3593                           	opt callstack 0
  3594  0121F0                     _main:
  3595                           	opt callstack 0
  3596                           
  3597                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3598  0121F0  0E06               	movlw	6
  3599  0121F2  26E1               	addwf	fsr1l,f,c
  3600  0121F4  0E00               	movlw	0
  3601  0121F6  22E2               	addwfc	fsr1h,f,c
  3602                           
  3603                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3604                           ;stkvar	_inp_index @ sp[(-6)+3]
  3605                           
  3606                           ;incstack = 0
  3607  0121F8  0EFD               	movlw	-3
  3608  0121FA  6AE3               	clrf	plusw1,c
  3609                           
  3610                           ;stkvar	_i @ sp[(-6)+2]
  3611  0121FC  0EFC               	movlw	-4
  3612  0121FE  6AE3               	clrf	plusw1,c
  3613                           
  3614                           ;stkvar	_j @ sp[(-6)+1]
  3615  012200  0EFB               	movlw	-5
  3616  012202  6AE3               	clrf	plusw1,c
  3617  012204  2AE3               	incf	plusw1,f,c
  3618                           
  3619                           ;stkvar	_k @ sp[(-6)+0]
  3620  012206  0EFA               	movlw	-6
  3621  012208  6AE3               	clrf	plusw1,c
  3622  01220A  82E3               	bsf	plusw1,1,c
  3623                           
  3624                           ;main.c: 180:  SYSTEM_Initialize();
  3625  01220C  EC15  F0D2         	call	_SYSTEM_Initialize	;wreg free
  3626                           
  3627                           ; BSR set to: 60
  3628                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3629  012210  8ED2               	bsf	210,7,c	;volatile
  3630                           
  3631                           ; BSR set to: 60
  3632                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3633  012212  8CD2               	bsf	210,6,c	;volatile
  3634                           
  3635                           ; BSR set to: 60
  3636                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3637  012214  0102               	movlb	2	; () banked
  3638  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3639                           
  3640                           ; BSR set to: 2
  3641                           ;main.c: 193:  WaitMs(300);
  3642  012218  0E2C               	movlw	44
  3643  01221A  6EE6               	movwf	postinc1,c
  3644  01221C  0E01               	movlw	1
  3645  01221E  6EE6               	movwf	postinc1,c
  3646  012220  EC43  F0D4         	call	_WaitMs	;wreg free
  3647                           
  3648                           ;main.c: 194:  if (PORTBbits.RB0) {
  3649  012224  A0CB               	btfss	203,0,c	;volatile
  3650  012226  D004               	goto	l12318
  3651                           
  3652                           ;main.c: 195:   mode = UI_STATE_HOST;
  3653                           ;stkvar	_mode @ sp[(-6)+4]
  3654  012228  0EFE               	movlw	-2
  3655  01222A  6AE3               	clrf	plusw1,c
  3656  01222C  2AE3               	incf	plusw1,f,c
  3657                           
  3658                           ;main.c: 196:  } else {
  3659  01222E  D004               	goto	l12320
  3660  012230                     l12318:
  3661                           
  3662                           ;main.c: 197:   mode = UI_STATE_LOG;
  3663                           ;stkvar	_mode @ sp[(-6)+4]
  3664  012230  0EFE               	movlw	-2
  3665  012232  6AE3               	clrf	plusw1,c
  3666  012234  80E3               	bsf	plusw1,0,c
  3667  012236  82E3               	bsf	plusw1,1,c	;indir
  3668  012238                     l12320:
  3669                           
  3670                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3671                           ;stkvar	_mode @ sp[(-6)+4]
  3672  012238  0EFE               	movlw	-2
  3673  01223A  04E3               	decf	plusw1,w,c
  3674  01223C  A4D8               	btfss	status,2,c
  3675  01223E  D007               	goto	l1320
  3676                           
  3677                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3678  012240  80BD               	bsf	189,0,c	;volatile
  3679                           
  3680                           ;main.c: 202:   V.mode_pwm = 70;
  3681  012242  0E00               	movlw	0
  3682  012244  0102               	movlb	2	; () banked
  3683  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3684  012248  0E46               	movlw	70
  3685  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3686                           
  3687                           ;main.c: 203:  } else {
  3688  01224C  D004               	goto	l12324
  3689  01224E                     l1320:
  3690  01224E  90BD               	bcf	189,0,c	;volatile
  3691                           
  3692                           ;main.c: 205:   V.mode_pwm = 0;
  3693  012250  0102               	movlb	2	; () banked
  3694  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3695  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3696  012256                     l12324:
  3697                           
  3698                           ; BSR set to: 2
  3699                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3700  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3701  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3702  012262  EC0B  F0D8         	call	_mode_lamp_dim	;wreg free
  3703  012266  D28C               	goto	l12434
  3704  012268                     l12326:
  3705                           
  3706                           ; BSR set to: 2
  3707                           ;main.c: 215:    init_port_dma();
  3708  012268  ECC7  F0D4         	call	_init_port_dma	;wreg free
  3709                           
  3710                           ; BSR set to: 59
  3711                           ;main.c: 217:    init_display();
  3712  01226C  ECCC  F0C8         	call	_init_display	;wreg free
  3713                           
  3714                           ; BSR set to: 61
  3715                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3716  012270  0E0C               	movlw	12
  3717  012272  6EE6               	movwf	postinc1,c
  3718  012274  EC6F  F0D8         	call	_eaDogM_WriteCommand	;wreg free
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;main.c: 222:    set_load_relay_one(1);
  3722  012278  0E01               	movlw	1
  3723  01227A  6EE6               	movwf	postinc1,c
  3724  01227C  EC5F  F0D8         	call	_set_load_relay_one	;wreg free
  3725                           
  3726                           ;main.c: 223:    set_load_relay_two(1);
  3727  012280  0E01               	movlw	1
  3728  012282  6EE6               	movwf	postinc1,c
  3729  012284  EC57  F0D8         	call	_set_load_relay_two	;wreg free
  3730                           
  3731                           ;main.c: 225:    V.ui_state = mode;
  3732                           ;stkvar	_mode @ sp[(-6)+4]
  3733  012288  0EFE               	movlw	-2
  3734  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3735                           
  3736                           ;main.c: 226:    srand(1957);
  3737  012290  0EA5               	movlw	165
  3738  012292  6EE6               	movwf	postinc1,c
  3739  012294  0E07               	movlw	7
  3740  012296  6EE6               	movwf	postinc1,c
  3741  012298  EC79  F0D4         	call	_srand	;wreg free
  3742                           
  3743                           ; BSR set to: 1
  3744                           ;main.c: 227:    set_vterm(0);
  3745  01229C  0E00               	movlw	0
  3746  01229E  6EE6               	movwf	postinc1,c
  3747  0122A0  EC98  F0D7         	call	_set_vterm	;wreg free
  3748                           
  3749                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3750  0122A4  0E51               	movlw	low STR_1
  3751  0122A6  6EE6               	movwf	postinc1,c
  3752  0122A8  0EFF               	movlw	high STR_1
  3753  0122AA  6EE6               	movwf	postinc1,c
  3754  0122AC  0E00               	movlw	0
  3755  0122AE  6EE6               	movwf	postinc1,c
  3756  0122B0  0E00               	movlw	0
  3757  0122B2  6EE6               	movwf	postinc1,c
  3758  0122B4  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  3759  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3760  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3761  0122C4  0E04               	movlw	4
  3762  0122C6  6EE6               	movwf	postinc1,c
  3763  0122C8  EC4C  F0C7         	call	_sprintf	;wreg free
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.003");
  3767  0122CC  0ED1               	movlw	low STR_3
  3768  0122CE  6EE6               	movwf	postinc1,c
  3769  0122D0  0EFF               	movlw	high STR_3
  3770  0122D2  6EE6               	movwf	postinc1,c
  3771  0122D4  0EA3               	movlw	low STR_2
  3772  0122D6  6EE6               	movwf	postinc1,c
  3773  0122D8  0EFF               	movlw	high STR_2
  3774  0122DA  6EE6               	movwf	postinc1,c
  3775  0122DC  0E00               	movlw	0
  3776  0122DE  6EE6               	movwf	postinc1,c
  3777  0122E0  0E01               	movlw	1
  3778  0122E2  6EE6               	movwf	postinc1,c
  3779  0122E4  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  3780  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3781  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3782  0122F4  0E06               	movlw	6
  3783  0122F6  6EE6               	movwf	postinc1,c
  3784  0122F8  EC4C  F0C7         	call	_sprintf	;wreg free
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3788  0122FC  0E1E               	movlw	low STR_4
  3789  0122FE  6EE6               	movwf	postinc1,c
  3790  012300  0EFF               	movlw	high STR_4
  3791  012302  6EE6               	movwf	postinc1,c
  3792  012304  0E00               	movlw	0
  3793  012306  6EE6               	movwf	postinc1,c
  3794  012308  0E02               	movlw	2
  3795  01230A  6EE6               	movwf	postinc1,c
  3796  01230C  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  3797  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3798  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3799  01231C  0E04               	movlw	4
  3800  01231E  6EE6               	movwf	postinc1,c
  3801  012320  EC4C  F0C7         	call	_sprintf	;wreg free
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;main.c: 231:    sprintf(get_vterm_ptr(0, 2), "                ");
  3805  012324  0E50               	movlw	low (STR_48+2)
  3806  012326  6EE6               	movwf	postinc1,c
  3807  012328  0EFE               	movlw	high (STR_48+2)
  3808  01232A  6EE6               	movwf	postinc1,c
  3809  01232C  0E02               	movlw	2
  3810  01232E  6EE6               	movwf	postinc1,c
  3811  012330  0E00               	movlw	0
  3812  012332  6EE6               	movwf	postinc1,c
  3813  012334  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  3814  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3815  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3816  012344  0E04               	movlw	4
  3817  012346  6EE6               	movwf	postinc1,c
  3818  012348  EC4C  F0C7         	call	_sprintf	;wreg free
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;main.c: 232:    sprintf(get_vterm_ptr(1, 2), "                ");
  3822  01234C  0E50               	movlw	low (STR_48+2)
  3823  01234E  6EE6               	movwf	postinc1,c
  3824  012350  0EFE               	movlw	high (STR_48+2)
  3825  012352  6EE6               	movwf	postinc1,c
  3826  012354  0E02               	movlw	2
  3827  012356  6EE6               	movwf	postinc1,c
  3828  012358  0E01               	movlw	1
  3829  01235A  6EE6               	movwf	postinc1,c
  3830  01235C  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  3831  012360  0060  F007  FFE6   	movff	btemp,postinc1
  3832  012366  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3833  01236C  0E04               	movlw	4
  3834  01236E  6EE6               	movwf	postinc1,c
  3835  012370  EC4C  F0C7         	call	_sprintf	;wreg free
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;main.c: 233:    sprintf(get_vterm_ptr(2, 2), "                ");
  3839  012374  0E50               	movlw	low (STR_48+2)
  3840  012376  6EE6               	movwf	postinc1,c
  3841  012378  0EFE               	movlw	high (STR_48+2)
  3842  01237A  6EE6               	movwf	postinc1,c
  3843  01237C  0E02               	movlw	2
  3844  01237E  6EE6               	movwf	postinc1,c
  3845  012380  0E02               	movlw	2
  3846  012382  6EE6               	movwf	postinc1,c
  3847  012384  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  3848  012388  0060  F007  FFE6   	movff	btemp,postinc1
  3849  01238E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3850  012394  0E04               	movlw	4
  3851  012396  6EE6               	movwf	postinc1,c
  3852  012398  EC4C  F0C7         	call	_sprintf	;wreg free
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;main.c: 234:    update_lcd(0);
  3856  01239C  0E00               	movlw	0
  3857  01239E  6EE6               	movwf	postinc1,c
  3858  0123A0  EC3D  F0C6         	call	_update_lcd	;wreg free
  3859                           
  3860                           ;main.c: 235:    WaitMs(1000);
  3861  0123A4  0EE8               	movlw	232
  3862  0123A6  6EE6               	movwf	postinc1,c
  3863  0123A8  0E03               	movlw	3
  3864  0123AA  6EE6               	movwf	postinc1,c
  3865  0123AC  EC43  F0D4         	call	_WaitMs	;wreg free
  3866                           
  3867                           ;main.c: 236:    StartTimer(TMR_DISPLAY, 250);
  3868  0123B0  0EFA               	movlw	250
  3869  0123B2  6EE6               	movwf	postinc1,c
  3870  0123B4  0E00               	movlw	0
  3871  0123B6  6EE6               	movwf	postinc1,c
  3872  0123B8  0E0A               	movlw	10
  3873  0123BA  6EE6               	movwf	postinc1,c
  3874  0123BC  EC50  F0D3         	call	_StartTimer	;wreg free
  3875                           
  3876                           ;main.c: 237:    StartTimer(TMR_ADC, 200);
  3877  0123C0  0EC8               	movlw	200
  3878  0123C2  6EE6               	movwf	postinc1,c
  3879  0123C4  0E00               	movlw	0
  3880  0123C6  6EE6               	movwf	postinc1,c
  3881  0123C8  0E01               	movlw	1
  3882  0123CA  6EE6               	movwf	postinc1,c
  3883  0123CC  EC50  F0D3         	call	_StartTimer	;wreg free
  3884                           
  3885                           ;main.c: 238:    StartTimer(TMR_INFO, 3000);
  3886  0123D0  0EB8               	movlw	184
  3887  0123D2  6EE6               	movwf	postinc1,c
  3888  0123D4  0E0B               	movlw	11
  3889  0123D6  6EE6               	movwf	postinc1,c
  3890  0123D8  0E07               	movlw	7
  3891  0123DA  6EE6               	movwf	postinc1,c
  3892  0123DC  EC50  F0D3         	call	_StartTimer	;wreg free
  3893                           
  3894                           ;main.c: 239:    StartTimer(TMR_FLIPPER, 1500);
  3895  0123E0  0EDC               	movlw	220
  3896  0123E2  6EE6               	movwf	postinc1,c
  3897  0123E4  0E05               	movlw	5
  3898  0123E6  6EE6               	movwf	postinc1,c
  3899  0123E8  0E0B               	movlw	11
  3900  0123EA  6EE6               	movwf	postinc1,c
  3901  0123EC  EC50  F0D3         	call	_StartTimer	;wreg free
  3902                           
  3903                           ;main.c: 240:    StartTimer(TMR_HELPDIS, 3000);
  3904  0123F0  0EB8               	movlw	184
  3905  0123F2  6EE6               	movwf	postinc1,c
  3906  0123F4  0E0B               	movlw	11
  3907  0123F6  6EE6               	movwf	postinc1,c
  3908  0123F8  0E09               	movlw	9
  3909  0123FA  6EE6               	movwf	postinc1,c
  3910  0123FC  EC50  F0D3         	call	_StartTimer	;wreg free
  3911                           
  3912                           ;main.c: 242:    start_adc_scan();
  3913  012400  EC28  F0D0         	call	_start_adc_scan	;wreg free
  3914                           
  3915                           ;main.c: 243:    start_switch_handler();
  3916  012404  EC79  F0D7         	call	_start_switch_handler	;wreg free
  3917                           
  3918                           ; BSR set to: 57
  3919                           ;main.c: 244:    WaitMs(1000);
  3920  012408  0EE8               	movlw	232
  3921  01240A  6EE6               	movwf	postinc1,c
  3922  01240C  0E03               	movlw	3
  3923  01240E  6EE6               	movwf	postinc1,c
  3924  012410  EC43  F0D4         	call	_WaitMs	;wreg free
  3925                           
  3926                           ;main.c: 249:    i_ror = 1;
  3927                           ;stkvar	_i_ror @ sp[(-6)+5]
  3928  012414  0EFF               	movlw	-1
  3929  012416  6AE3               	clrf	plusw1,c
  3930  012418  2AE3               	incf	plusw1,f,c
  3931  01241A                     l12376:
  3932                           
  3933                           ;main.c: 251:     calc_ror_data();
  3934  01241A  EC8C  F0BE         	call	_calc_ror_data	;wreg free
  3935                           
  3936                           ;main.c: 252:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  3937  01241E  0E00               	movlw	0
  3938  012420  6EE6               	movwf	postinc1,c
  3939  012422  0E04               	movlw	4
  3940  012424  6EE6               	movwf	postinc1,c
  3941  012426  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  3942  01242A  0060  F007  FFE6   	movff	btemp,postinc1
  3943  012430  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3944  012436  0060  F00F  FFE6   	movff	btemp+2,postinc1
  3945  01243C  0060  F013  FFE6   	movff	btemp+3,postinc1
  3946  012442  0E0C               	movlw	low STR_8
  3947  012444  6EE6               	movwf	postinc1,c
  3948  012446  0EFF               	movlw	high STR_8
  3949  012448  6EE6               	movwf	postinc1,c
  3950  01244A  0E00               	movlw	0
  3951  01244C  6EE6               	movwf	postinc1,c
  3952  01244E  0E01               	movlw	1
  3953  012450  6EE6               	movwf	postinc1,c
  3954  012452  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  3955  012456  0060  F007  FFE6   	movff	btemp,postinc1
  3956  01245C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3957  012462  0E08               	movlw	8
  3958  012464  6EE6               	movwf	postinc1,c
  3959  012466  EC4C  F0C7         	call	_sprintf	;wreg free
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;main.c: 253:     sprintf(get_vterm_ptr(2, 0), "S SOC %d%c%c %2.4f       ", i_ror, spinn
      +                          ers(1, 0), spinners(4, 0), C.bv_ror);
  3963  01246A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3964  012470  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3965  012476  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3966  01247C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3967  012482  0E00               	movlw	0
  3968  012484  6EE6               	movwf	postinc1,c
  3969  012486  0E04               	movlw	4
  3970  012488  6EE6               	movwf	postinc1,c
  3971  01248A  EC41  F0C9         	call	_spinners	;wreg free
  3972  01248E  5001               	movf	btemp^0,w,c
  3973  012490  6EE6               	movwf	postinc1,c
  3974  012492  0E00               	movlw	0
  3975  012494  6EE6               	movwf	postinc1,c
  3976  012496  0E00               	movlw	0
  3977  012498  6EE6               	movwf	postinc1,c
  3978  01249A  0E01               	movlw	1
  3979  01249C  6EE6               	movwf	postinc1,c
  3980  01249E  EC41  F0C9         	call	_spinners	;wreg free
  3981  0124A2  5001               	movf	btemp^0,w,c
  3982  0124A4  6EE6               	movwf	postinc1,c
  3983  0124A6  0E00               	movlw	0
  3984  0124A8  6EE6               	movwf	postinc1,c
  3985                           
  3986                           ;stkvar	_i_ror @ sp[(-14)+5]
  3987  0124AA  0EF7               	movlw	-9
  3988  0124AC  50E3               	movf	plusw1,w,c
  3989  0124AE  6EE6               	movwf	postinc1,c
  3990  0124B0  0E00               	movlw	0
  3991  0124B2  6EE6               	movwf	postinc1,c
  3992  0124B4  0EB2               	movlw	low STR_9
  3993  0124B6  6EE6               	movwf	postinc1,c
  3994  0124B8  0EFD               	movlw	high STR_9
  3995  0124BA  6EE6               	movwf	postinc1,c
  3996  0124BC  0E00               	movlw	0
  3997  0124BE  6EE6               	movwf	postinc1,c
  3998  0124C0  0E02               	movlw	2
  3999  0124C2  6EE6               	movwf	postinc1,c
  4000  0124C4  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4001  0124C8  0060  F007  FFE6   	movff	btemp,postinc1
  4002  0124CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4003  0124D4  0E0E               	movlw	14
  4004  0124D6  6EE6               	movwf	postinc1,c
  4005  0124D8  EC4C  F0C7         	call	_sprintf	;wreg free
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;main.c: 254:     update_lcd(0);
  4009  0124DC  0E00               	movlw	0
  4010  0124DE  6EE6               	movwf	postinc1,c
  4011  0124E0  EC3D  F0C6         	call	_update_lcd	;wreg free
  4012                           
  4013                           ;main.c: 255:     WaitMs(2000);
  4014  0124E4  0ED0               	movlw	208
  4015  0124E6  6EE6               	movwf	postinc1,c
  4016  0124E8  0E07               	movlw	7
  4017  0124EA  6EE6               	movwf	postinc1,c
  4018  0124EC  EC43  F0D4         	call	_WaitMs	;wreg free
  4019                           
  4020                           ;main.c: 256:     clear_adc_scan();
  4021  0124F0  ECBD  F0D8         	call	_clear_adc_scan	;wreg free
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;main.c: 257:     start_adc_scan();
  4025  0124F4  EC28  F0D0         	call	_start_adc_scan	;wreg free
  4026                           
  4027                           ;main.c: 258:     WaitMs(500);
  4028  0124F8  0EF4               	movlw	244
  4029  0124FA  6EE6               	movwf	postinc1,c
  4030  0124FC  0E01               	movlw	1
  4031  0124FE  6EE6               	movwf	postinc1,c
  4032  012500  EC43  F0D4         	call	_WaitMs	;wreg free
  4033                           
  4034                           ;main.c: 259:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4035                           ;stkvar	_i_ror @ sp[(-6)+5]
  4036  012504  0EFF               	movlw	-1
  4037  012506  006F FF8C  F00C    	movff	plusw1,btemp+11
  4038  01250C  2A0C               	incf	(btemp+11)^0,f,c
  4039  01250E  0060  F033  FFE3   	movff	btemp+11,plusw1
  4040  012514  060C               	decf	(btemp+11)^0,f,c
  4041  012516  0E1E               	movlw	30
  4042  012518  600C               	cpfslt	(btemp+11)^0,c
  4043  01251A  D018               	goto	u11870
  4044  01251C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4045  012522  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4046  012528  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4047  01252E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4048  012534  0E42               	movlw	66
  4049  012536  6EE6               	movwf	postinc1,c
  4050  012538  0E60               	movlw	96
  4051  01253A  6EE6               	movwf	postinc1,c
  4052  01253C  0E65               	movlw	101
  4053  01253E  6EE6               	movwf	postinc1,c
  4054  012540  0E3C               	movlw	60
  4055  012542  6EE6               	movwf	postinc1,c
  4056  012544  ECB7  F0C0         	call	___flge	;wreg free
  4057  012548  A001               	btfss	btemp& (0+255),0,c
  4058  01254A  D767               	goto	l12376
  4059  01254C                     u11870:
  4060                           
  4061                           ;main.c: 261:    static_soc();
  4062  01254C  ECEA  F0D6         	call	_static_soc	;wreg free
  4063                           
  4064                           ; BSR set to: 1
  4065                           ;main.c: 262:    init_bsoc();
  4066  012550  ECFF  F0BF         	call	_init_bsoc	;wreg free
  4067                           
  4068                           ;main.c: 263:    set_load_relay_one(0);
  4069  012554  0E00               	movlw	0
  4070  012556  6EE6               	movwf	postinc1,c
  4071  012558  EC5F  F0D8         	call	_set_load_relay_one	;wreg free
  4072                           
  4073                           ;main.c: 264:    set_load_relay_two(0);
  4074  01255C  0E00               	movlw	0
  4075  01255E  6EE6               	movwf	postinc1,c
  4076  012560  EC57  F0D8         	call	_set_load_relay_two	;wreg free
  4077                           
  4078                           ;main.c: 265:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4079  012564  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4080  01256A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4081  012570  0EFA               	movlw	low STR_10
  4082  012572  6EE6               	movwf	postinc1,c
  4083  012574  0EFD               	movlw	high STR_10
  4084  012576  6EE6               	movwf	postinc1,c
  4085  012578  0E00               	movlw	0
  4086  01257A  6EE6               	movwf	postinc1,c
  4087  01257C  0E00               	movlw	0
  4088  01257E  6EE6               	movwf	postinc1,c
  4089  012580  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4090  012584  0060  F007  FFE6   	movff	btemp,postinc1
  4091  01258A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4092  012590  0E06               	movlw	6
  4093  012592  6EE6               	movwf	postinc1,c
  4094  012594  EC4C  F0C7         	call	_sprintf	;wreg free
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;main.c: 266:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4098  012598  0060  F633  FFE6   	movff	_C+140,postinc1
  4099  01259E  0060  F637  FFE6   	movff	_C+141,postinc1
  4100  0125A4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4101  0125AA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4102  0125B0  0E10               	movlw	low STR_11
  4103  0125B2  6EE6               	movwf	postinc1,c
  4104  0125B4  0EFE               	movlw	high STR_11
  4105  0125B6  6EE6               	movwf	postinc1,c
  4106  0125B8  0E00               	movlw	0
  4107  0125BA  6EE6               	movwf	postinc1,c
  4108  0125BC  0E01               	movlw	1
  4109  0125BE  6EE6               	movwf	postinc1,c
  4110  0125C0  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4111  0125C4  0060  F007  FFE6   	movff	btemp,postinc1
  4112  0125CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4113  0125D0  0E08               	movlw	8
  4114  0125D2  6EE6               	movwf	postinc1,c
  4115  0125D4  EC4C  F0C7         	call	_sprintf	;wreg free
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;main.c: 267:    update_lcd(0);
  4119  0125D8  0E00               	movlw	0
  4120  0125DA  6EE6               	movwf	postinc1,c
  4121  0125DC  EC3D  F0C6         	call	_update_lcd	;wreg free
  4122                           
  4123                           ;main.c: 268:    WaitMs(2000);
  4124  0125E0  0ED0               	movlw	208
  4125  0125E2  6EE6               	movwf	postinc1,c
  4126  0125E4  0E07               	movlw	7
  4127  0125E6  6EE6               	movwf	postinc1,c
  4128  0125E8  EC43  F0D4         	call	_WaitMs	;wreg free
  4129                           
  4130                           ;main.c: 269:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4131  0125EC  0E2F               	movlw	low STR_12
  4132  0125EE  6EE6               	movwf	postinc1,c
  4133  0125F0  0EFF               	movlw	high STR_12
  4134  0125F2  6EE6               	movwf	postinc1,c
  4135  0125F4  0E00               	movlw	0
  4136  0125F6  6EE6               	movwf	postinc1,c
  4137  0125F8  0E00               	movlw	0
  4138  0125FA  6EE6               	movwf	postinc1,c
  4139  0125FC  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4140  012600  0060  F007  FFE6   	movff	btemp,postinc1
  4141  012606  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4142  01260C  0E04               	movlw	4
  4143  01260E  6EE6               	movwf	postinc1,c
  4144  012610  EC4C  F0C7         	call	_sprintf	;wreg free
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;main.c: 270:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4148  012614  0E40               	movlw	low STR_13
  4149  012616  6EE6               	movwf	postinc1,c
  4150  012618  0EFF               	movlw	high STR_13
  4151  01261A  6EE6               	movwf	postinc1,c
  4152  01261C  0E00               	movlw	0
  4153  01261E  6EE6               	movwf	postinc1,c
  4154  012620  0E01               	movlw	1
  4155  012622  6EE6               	movwf	postinc1,c
  4156  012624  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4157  012628  0060  F007  FFE6   	movff	btemp,postinc1
  4158  01262E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4159  012634  0E04               	movlw	4
  4160  012636  6EE6               	movwf	postinc1,c
  4161  012638  EC4C  F0C7         	call	_sprintf	;wreg free
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;main.c: 271:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4165  01263C  0E73               	movlw	low STR_14
  4166  01263E  6EE6               	movwf	postinc1,c
  4167  012640  0EFF               	movlw	high STR_14
  4168  012642  6EE6               	movwf	postinc1,c
  4169  012644  0E00               	movlw	0
  4170  012646  6EE6               	movwf	postinc1,c
  4171  012648  0E02               	movlw	2
  4172  01264A  6EE6               	movwf	postinc1,c
  4173  01264C  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4174  012650  0060  F007  FFE6   	movff	btemp,postinc1
  4175  012656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4176  01265C  0E04               	movlw	4
  4177  01265E  6EE6               	movwf	postinc1,c
  4178  012660  EC4C  F0C7         	call	_sprintf	;wreg free
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;main.c: 272:    update_lcd(0);
  4182  012664  0E00               	movlw	0
  4183  012666  6EE6               	movwf	postinc1,c
  4184  012668  EC3D  F0C6         	call	_update_lcd	;wreg free
  4185                           
  4186                           ;main.c: 273:    esr_check();
  4187  01266C  EC30  F0BB         	call	_esr_check	;wreg free
  4188                           
  4189                           ;main.c: 274:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4190  012670  0060  F613  FFE6   	movff	_C+132,postinc1
  4191  012676  0060  F617  FFE6   	movff	_C+133,postinc1
  4192  01267C  0060  F61B  FFE6   	movff	_C+134,postinc1
  4193  012682  0060  F61F  FFE6   	movff	_C+135,postinc1
  4194  012688  0EE4               	movlw	low STR_15
  4195  01268A  6EE6               	movwf	postinc1,c
  4196  01268C  0EFD               	movlw	high STR_15
  4197  01268E  6EE6               	movwf	postinc1,c
  4198  012690  0E00               	movlw	0
  4199  012692  6EE6               	movwf	postinc1,c
  4200  012694  0E00               	movlw	0
  4201  012696  6EE6               	movwf	postinc1,c
  4202  012698  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4203  01269C  0060  F007  FFE6   	movff	btemp,postinc1
  4204  0126A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4205  0126A8  0E08               	movlw	8
  4206  0126AA  6EE6               	movwf	postinc1,c
  4207  0126AC  EC4C  F0C7         	call	_sprintf	;wreg free
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;main.c: 275:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4211  0126B0  0060  F77F  FFE6   	movff	_C+223,postinc1
  4212  0126B6  0060  F783  FFE6   	movff	_C+224,postinc1
  4213  0126BC  0060  F787  FFE6   	movff	_C+225,postinc1
  4214  0126C2  0060  F78B  FFE6   	movff	_C+226,postinc1
  4215  0126C8  0060  F7AF  FFE6   	movff	_C+235,postinc1
  4216  0126CE  0060  F7B3  FFE6   	movff	_C+236,postinc1
  4217  0126D4  0060  F7B7  FFE6   	movff	_C+237,postinc1
  4218  0126DA  0060  F7BB  FFE6   	movff	_C+238,postinc1
  4219  0126E0  0E7E               	movlw	low STR_16
  4220  0126E2  6EE6               	movwf	postinc1,c
  4221  0126E4  0EFD               	movlw	high STR_16
  4222  0126E6  6EE6               	movwf	postinc1,c
  4223  0126E8  0E00               	movlw	0
  4224  0126EA  6EE6               	movwf	postinc1,c
  4225  0126EC  0E01               	movlw	1
  4226  0126EE  6EE6               	movwf	postinc1,c
  4227  0126F0  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4228  0126F4  0060  F007  FFE6   	movff	btemp,postinc1
  4229  0126FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4230  012700  0E0C               	movlw	12
  4231  012702  6EE6               	movwf	postinc1,c
  4232  012704  EC4C  F0C7         	call	_sprintf	;wreg free
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;main.c: 276:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4236  012708  0060  F78F  FFE6   	movff	_C+227,postinc1
  4237  01270E  0060  F793  FFE6   	movff	_C+228,postinc1
  4238  012714  0060  F797  FFE6   	movff	_C+229,postinc1
  4239  01271A  0060  F79B  FFE6   	movff	_C+230,postinc1
  4240  012720  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4241  012726  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4242  01272C  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4243  012732  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4244  012738  0E98               	movlw	low STR_17
  4245  01273A  6EE6               	movwf	postinc1,c
  4246  01273C  0EFD               	movlw	high STR_17
  4247  01273E  6EE6               	movwf	postinc1,c
  4248  012740  0E00               	movlw	0
  4249  012742  6EE6               	movwf	postinc1,c
  4250  012744  0E02               	movlw	2
  4251  012746  6EE6               	movwf	postinc1,c
  4252  012748  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4253  01274C  0060  F007  FFE6   	movff	btemp,postinc1
  4254  012752  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4255  012758  0E0C               	movlw	12
  4256  01275A  6EE6               	movwf	postinc1,c
  4257  01275C  EC4C  F0C7         	call	_sprintf	;wreg free
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;main.c: 277:    update_lcd(0);
  4261  012760  0E00               	movlw	0
  4262  012762  6EE6               	movwf	postinc1,c
  4263  012764  EC3D  F0C6         	call	_update_lcd	;wreg free
  4264                           
  4265                           ;main.c: 278:    WaitMs(5000);
  4266  012768  0E88               	movlw	136
  4267  01276A  6EE6               	movwf	postinc1,c
  4268  01276C  0E13               	movlw	19
  4269  01276E  6EE6               	movwf	postinc1,c
  4270  012770  EC43  F0D4         	call	_WaitMs	;wreg free
  4271                           
  4272                           ;main.c: 279:    break;
  4273  012774  D01C               	goto	l12436
  4274  012776                     l1332:
  4275                           
  4276                           ; BSR set to: 2
  4277                           ;main.c: 285:    P.SYSTEM_STABLE = 1;
  4278  012776  0100               	movlb	0	; () banked
  4279  012778  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4280                           
  4281                           ;main.c: 286:    break;
  4282  01277A  D019               	goto	l12436
  4283  01277C                     l1334:
  4284                           
  4285                           ; BSR set to: 2
  4286                           ;main.c: 289:    V.ui_state = UI_STATE_INIT;
  4287  01277C  6B00               	clrf	_V& (0+255),b	;volatile
  4288                           
  4289                           ;main.c: 290:    break;
  4290  01277E  D017               	goto	l12436
  4291  012780                     l12434:
  4292  012780  0102               	movlb	2	; () banked
  4293  012782  5100               	movf	_V& (0+255),w,b	;volatile
  4294  012784  6E0B               	movwf	(btemp+10)^0,c
  4295  012786  6A0C               	clrf	(btemp+11)^0,c
  4296                           
  4297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4298                           ; Switch size 1, requested type "simple"
  4299                           ; Number of cases is 1, Range of values is 0 to 0
  4300                           ; switch strategies available:
  4301                           ; Name         Instructions Cycles
  4302                           ; simple_byte            4     3 (average)
  4303                           ;	Chosen strategy is simple_byte
  4304  012788  500C               	movf	(btemp+11)^0,w,c
  4305  01278A  0A00               	xorlw	0	; case 0
  4306  01278C  A4D8               	btfss	status,2,c
  4307  01278E  D7F6               	goto	l1334
  4308                           
  4309                           ; BSR set to: 2
  4310                           ; Switch size 1, requested type "simple"
  4311                           ; Number of cases is 5, Range of values is 0 to 5
  4312                           ; switch strategies available:
  4313                           ; Name         Instructions Cycles
  4314                           ; simple_byte           16     9 (average)
  4315                           ;	Chosen strategy is simple_byte
  4316  012790  500B               	movf	(btemp+10)^0,w,c
  4317  012792  0A00               	xorlw	0	; case 0
  4318  012794  B4D8               	btfsc	status,2,c
  4319  012796  D568               	goto	l12326
  4320  012798  0A01               	xorlw	1	; case 1
  4321  01279A  B4D8               	btfsc	status,2,c
  4322  01279C  D008               	goto	l12436
  4323  01279E  0A02               	xorlw	2	; case 3
  4324  0127A0  B4D8               	btfsc	status,2,c
  4325  0127A2  D005               	goto	l12436
  4326  0127A4  0A07               	xorlw	7	; case 4
  4327  0127A6  B4D8               	btfsc	status,2,c
  4328  0127A8  D7E6               	goto	l1332
  4329  0127AA  0A01               	xorlw	1	; case 5
  4330  0127AC  D7E7               	goto	l1334
  4331  0127AE                     l12436:
  4332                           
  4333                           ;main.c: 293:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4334  0127AE  0E01               	movlw	1
  4335  0127B0  6EE6               	movwf	postinc1,c
  4336  0127B2  ECD1  F0D5         	call	_TimerDone	;wreg free
  4337  0127B6  5001               	movf	btemp^0,w,c
  4338  0127B8  B4D8               	btfsc	status,2,c
  4339  0127BA  D013               	goto	l12448
  4340  0127BC  ECAD  F0D8         	call	_check_adc_scan	;wreg free
  4341  0127C0  5001               	movf	btemp^0,w,c
  4342  0127C2  B4D8               	btfsc	status,2,c
  4343  0127C4  D00E               	goto	l12448
  4344                           
  4345                           ;main.c: 297:    convert_adc_data();
  4346  0127C6  ECDE  F0CA         	call	_convert_adc_data	;wreg free
  4347                           
  4348                           ;main.c: 301:    clear_adc_scan();
  4349  0127CA  ECBD  F0D8         	call	_clear_adc_scan	;wreg free
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;main.c: 302:    start_adc_scan();
  4353  0127CE  EC28  F0D0         	call	_start_adc_scan	;wreg free
  4354                           
  4355                           ;main.c: 303:    StartTimer(TMR_ADC, 200);
  4356  0127D2  0EC8               	movlw	200
  4357  0127D4  6EE6               	movwf	postinc1,c
  4358  0127D6  0E00               	movlw	0
  4359  0127D8  6EE6               	movwf	postinc1,c
  4360  0127DA  0E01               	movlw	1
  4361  0127DC  6EE6               	movwf	postinc1,c
  4362  0127DE  EC50  F0D3         	call	_StartTimer	;wreg free
  4363  0127E2                     l12448:
  4364                           
  4365                           ;main.c: 310:   if (TimerDone(TMR_DISPLAY)) {
  4366                           
  4367                           ;main.c: 306:   if (V.ticks) {
  4368  0127E2  0E0A               	movlw	10
  4369  0127E4  6EE6               	movwf	postinc1,c
  4370  0127E6  ECD1  F0D5         	call	_TimerDone	;wreg free
  4371  0127EA  5001               	movf	btemp^0,w,c
  4372  0127EC  B4D8               	btfsc	status,2,c
  4373  0127EE  D289               	goto	l12490
  4374                           
  4375                           ;main.c: 311:    if (TimerDone(TMR_HELPDIS)) {
  4376  0127F0  0E09               	movlw	9
  4377  0127F2  6EE6               	movwf	postinc1,c
  4378  0127F4  ECD1  F0D5         	call	_TimerDone	;wreg free
  4379  0127F8  5001               	movf	btemp^0,w,c
  4380  0127FA  B4D8               	btfsc	status,2,c
  4381  0127FC  D004               	goto	l12456
  4382                           
  4383                           ;main.c: 312:     set_display_info(DIS_STR);
  4384  0127FE  0E00               	movlw	0
  4385  012800  6EE6               	movwf	postinc1,c
  4386  012802  ECA7  F0D7         	call	_set_display_info	;wreg free
  4387  012806                     l12456:
  4388                           
  4389                           ;main.c: 314:    calc_model_data();
  4390  012806  EC7F  F0AB         	call	_calc_model_data	;wreg free
  4391                           
  4392                           ; BSR set to: 1
  4393                           ;main.c: 321:     hid_display(&H);
  4394                           
  4395                           ;main.c: 316:    if (0) {
  4396  01280A  0EF3               	movlw	_H& (0+255)
  4397  01280C  6EE6               	movwf	postinc1,c
  4398  01280E  ECD1  F0C7         	call	_hid_display	;wreg free
  4399                           
  4400                           ;main.c: 322:     switch (H.hid_display) {
  4401  012812  D252               	goto	l12482
  4402  012814                     l1342:
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;main.c: 324:      V.calib = 0;
  4406  012814  0102               	movlb	2	; () banked
  4407  012816  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4408                           
  4409                           ; BSR set to: 2
  4410                           ;main.c: 325:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4411  012818  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4412  01281E  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4413  012824  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4414  01282A  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4415  012830  0E87               	movlw	low STR_21
  4416  012832  6EE6               	movwf	postinc1,c
  4417  012834  0EFE               	movlw	high STR_21
  4418  012836  6EE6               	movwf	postinc1,c
  4419  012838  0E00               	movlw	0
  4420  01283A  6EE6               	movwf	postinc1,c
  4421  01283C  0E00               	movlw	0
  4422  01283E  6EE6               	movwf	postinc1,c
  4423  012840  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4424  012844  0060  F007  FFE6   	movff	btemp,postinc1
  4425  01284A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4426  012850  0E08               	movlw	8
  4427  012852  6EE6               	movwf	postinc1,c
  4428  012854  EC4C  F0C7         	call	_sprintf	;wreg free
  4429                           
  4430                           ;main.c: 326:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4431  012858  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4432  01285E  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4433  012864  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4434  01286A  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4435  012870  0EAD               	movlw	low STR_22
  4436  012872  6EE6               	movwf	postinc1,c
  4437  012874  0EFE               	movlw	high STR_22
  4438  012876  6EE6               	movwf	postinc1,c
  4439  012878  0E00               	movlw	0
  4440  01287A  6EE6               	movwf	postinc1,c
  4441  01287C  0E01               	movlw	1
  4442  01287E  6EE6               	movwf	postinc1,c
  4443  012880  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4444  012884  0060  F007  FFE6   	movff	btemp,postinc1
  4445  01288A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4446  012890  0E08               	movlw	8
  4447  012892  6EE6               	movwf	postinc1,c
  4448  012894  EC4C  F0C7         	call	_sprintf	;wreg free
  4449                           
  4450                           ;main.c: 327:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4451  012898  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4452  01289E  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4453  0128A4  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4454  0128AA  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4455  0128B0  0E9A               	movlw	low STR_23
  4456  0128B2  6EE6               	movwf	postinc1,c
  4457  0128B4  0EFE               	movlw	high STR_23
  4458  0128B6  6EE6               	movwf	postinc1,c
  4459  0128B8  0E00               	movlw	0
  4460  0128BA  6EE6               	movwf	postinc1,c
  4461  0128BC  0E02               	movlw	2
  4462  0128BE  6EE6               	movwf	postinc1,c
  4463  0128C0  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4464  0128C4  0060  F007  FFE6   	movff	btemp,postinc1
  4465  0128CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4466  0128D0  0E08               	movlw	8
  4467  0128D2  6EE6               	movwf	postinc1,c
  4468  0128D4  EC4C  F0C7         	call	_sprintf	;wreg free
  4469                           
  4470                           ;main.c: 328:      break;
  4471  0128D8  D204               	goto	l12484
  4472  0128DA                     l1344:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 330:      V.calib = 0;
  4476  0128DA  0102               	movlb	2	; () banked
  4477  0128DC  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4478                           
  4479                           ; BSR set to: 2
  4480                           ;main.c: 331:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4481  0128DE  0060  F413  FFE6   	movff	_C+4,postinc1
  4482  0128E4  0060  F417  FFE6   	movff	_C+5,postinc1
  4483  0128EA  0060  F41B  FFE6   	movff	_C+6,postinc1
  4484  0128F0  0060  F41F  FFE6   	movff	_C+7,postinc1
  4485  0128F6  0060  F453  FFE6   	movff	_C+20,postinc1
  4486  0128FC  0060  F457  FFE6   	movff	_C+21,postinc1
  4487  012902  0060  F45B  FFE6   	movff	_C+22,postinc1
  4488  012908  0060  F45F  FFE6   	movff	_C+23,postinc1
  4489  01290E  0EF9               	movlw	low STR_24
  4490  012910  6EE6               	movwf	postinc1,c
  4491  012912  0EFE               	movlw	high STR_24
  4492  012914  6EE6               	movwf	postinc1,c
  4493  012916  0E00               	movlw	0
  4494  012918  6EE6               	movwf	postinc1,c
  4495  01291A  0E00               	movlw	0
  4496  01291C  6EE6               	movwf	postinc1,c
  4497  01291E  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4498  012922  0060  F007  FFE6   	movff	btemp,postinc1
  4499  012928  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4500  01292E  0E0C               	movlw	12
  4501  012930  6EE6               	movwf	postinc1,c
  4502  012932  EC4C  F0C7         	call	_sprintf	;wreg free
  4503                           
  4504                           ;main.c: 332:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4505  012936  0060  F403  FFE6   	movff	_C,postinc1
  4506  01293C  0060  F407  FFE6   	movff	_C+1,postinc1
  4507  012942  0060  F40B  FFE6   	movff	_C+2,postinc1
  4508  012948  0060  F40F  FFE6   	movff	_C+3,postinc1
  4509  01294E  0060  F443  FFE6   	movff	_C+16,postinc1
  4510  012954  0060  F447  FFE6   	movff	_C+17,postinc1
  4511  01295A  0060  F44B  FFE6   	movff	_C+18,postinc1
  4512  012960  0060  F44F  FFE6   	movff	_C+19,postinc1
  4513  012966  0ED3               	movlw	low STR_25
  4514  012968  6EE6               	movwf	postinc1,c
  4515  01296A  0EFE               	movlw	high STR_25
  4516  01296C  6EE6               	movwf	postinc1,c
  4517  01296E  0E00               	movlw	0
  4518  012970  6EE6               	movwf	postinc1,c
  4519  012972  0E01               	movlw	1
  4520  012974  6EE6               	movwf	postinc1,c
  4521  012976  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4522  01297A  0060  F007  FFE6   	movff	btemp,postinc1
  4523  012980  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4524  012986  0E0C               	movlw	12
  4525  012988  6EE6               	movwf	postinc1,c
  4526  01298A  EC4C  F0C7         	call	_sprintf	;wreg free
  4527                           
  4528                           ;main.c: 333:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4529  01298E  0060  F503  FFE6   	movff	_C+64,postinc1
  4530  012994  0060  F507  FFE6   	movff	_C+65,postinc1
  4531  01299A  0060  F50B  FFE6   	movff	_C+66,postinc1
  4532  0129A0  0060  F50F  FFE6   	movff	_C+67,postinc1
  4533  0129A6  0060  F423  FFE6   	movff	_C+8,postinc1
  4534  0129AC  0060  F427  FFE6   	movff	_C+9,postinc1
  4535  0129B2  0060  F42B  FFE6   	movff	_C+10,postinc1
  4536  0129B8  0060  F42F  FFE6   	movff	_C+11,postinc1
  4537  0129BE  0EE6               	movlw	low STR_26
  4538  0129C0  6EE6               	movwf	postinc1,c
  4539  0129C2  0EFE               	movlw	high STR_26
  4540  0129C4  6EE6               	movwf	postinc1,c
  4541  0129C6  0E00               	movlw	0
  4542  0129C8  6EE6               	movwf	postinc1,c
  4543  0129CA  0E02               	movlw	2
  4544  0129CC  6EE6               	movwf	postinc1,c
  4545  0129CE  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4546  0129D2  0060  F007  FFE6   	movff	btemp,postinc1
  4547  0129D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4548  0129DE  0E0C               	movlw	12
  4549  0129E0  6EE6               	movwf	postinc1,c
  4550  0129E2  EC4C  F0C7         	call	_sprintf	;wreg free
  4551                           
  4552                           ;main.c: 334:      break;
  4553  0129E6  D17D               	goto	l12484
  4554  0129E8                     l1345:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;main.c: 336:      V.calib = 0;
  4558  0129E8  0102               	movlb	2	; () banked
  4559  0129EA  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4560                           
  4561                           ; BSR set to: 2
  4562                           ;main.c: 337:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  4563  0129EC  0060  F5F3  FFE6   	movff	_C+124,postinc1
  4564  0129F2  0060  F5F7  FFE6   	movff	_C+125,postinc1
  4565  0129F8  0060  F5FB  FFE6   	movff	_C+126,postinc1
  4566  0129FE  0060  F5FF  FFE6   	movff	_C+127,postinc1
  4567  012A04  0EC0               	movlw	low STR_27
  4568  012A06  6EE6               	movwf	postinc1,c
  4569  012A08  0EFE               	movlw	high STR_27
  4570  012A0A  6EE6               	movwf	postinc1,c
  4571  012A0C  0E00               	movlw	0
  4572  012A0E  6EE6               	movwf	postinc1,c
  4573  012A10  0E00               	movlw	0
  4574  012A12  6EE6               	movwf	postinc1,c
  4575  012A14  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4576  012A18  0060  F007  FFE6   	movff	btemp,postinc1
  4577  012A1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4578  012A24  0E08               	movlw	8
  4579  012A26  6EE6               	movwf	postinc1,c
  4580  012A28  EC4C  F0C7         	call	_sprintf	;wreg free
  4581                           
  4582                           ;main.c: 338:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4583  012A2C  0060  F643  FFE6   	movff	_C+144,postinc1
  4584  012A32  0060  F647  FFE6   	movff	_C+145,postinc1
  4585  012A38  0060  F64B  FFE6   	movff	_C+146,postinc1
  4586  012A3E  0060  F64F  FFE6   	movff	_C+147,postinc1
  4587  012A44  0060  F633  FFE6   	movff	_C+140,postinc1
  4588  012A4A  0060  F637  FFE6   	movff	_C+141,postinc1
  4589  012A50  0060  F63B  FFE6   	movff	_C+142,postinc1
  4590  012A56  0060  F63F  FFE6   	movff	_C+143,postinc1
  4591  012A5C  0E3A               	movlw	low STR_28
  4592  012A5E  6EE6               	movwf	postinc1,c
  4593  012A60  0EFE               	movlw	high STR_28
  4594  012A62  6EE6               	movwf	postinc1,c
  4595  012A64  0E00               	movlw	0
  4596  012A66  6EE6               	movwf	postinc1,c
  4597  012A68  0E01               	movlw	1
  4598  012A6A  6EE6               	movwf	postinc1,c
  4599  012A6C  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4600  012A70  0060  F007  FFE6   	movff	btemp,postinc1
  4601  012A76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4602  012A7C  0E0C               	movlw	12
  4603  012A7E  6EE6               	movwf	postinc1,c
  4604  012A80  EC4C  F0C7         	call	_sprintf	;wreg free
  4605                           
  4606                           ;main.c: 339:      sprintf(get_vterm_ptr(2, 0), "SOC %d R%cN %d     ", C.soc, spinners(5
      +                          , 0), C.runtime);
  4607  012A84  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4608  012A8A  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4609  012A90  0E00               	movlw	0
  4610  012A92  6EE6               	movwf	postinc1,c
  4611  012A94  0E05               	movlw	5
  4612  012A96  6EE6               	movwf	postinc1,c
  4613  012A98  EC41  F0C9         	call	_spinners	;wreg free
  4614  012A9C  5001               	movf	btemp^0,w,c
  4615  012A9E  6EE6               	movwf	postinc1,c
  4616  012AA0  0E00               	movlw	0
  4617  012AA2  6EE6               	movwf	postinc1,c
  4618  012AA4  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4619  012AAA  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4620  012AB0  0E26               	movlw	low STR_29
  4621  012AB2  6EE6               	movwf	postinc1,c
  4622  012AB4  0EFE               	movlw	high STR_29
  4623  012AB6  6EE6               	movwf	postinc1,c
  4624  012AB8  0E00               	movlw	0
  4625  012ABA  6EE6               	movwf	postinc1,c
  4626  012ABC  0E02               	movlw	2
  4627  012ABE  6EE6               	movwf	postinc1,c
  4628  012AC0  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4629  012AC4  0060  F007  FFE6   	movff	btemp,postinc1
  4630  012ACA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4631  012AD0  0E0A               	movlw	10
  4632  012AD2  6EE6               	movwf	postinc1,c
  4633  012AD4  EC4C  F0C7         	call	_sprintf	;wreg free
  4634                           
  4635                           ;main.c: 340:      break;
  4636  012AD8  D104               	goto	l12484
  4637  012ADA                     l12468:
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;main.c: 342:      if (!V.calib) {
  4641  012ADA  0102               	movlb	2	; () banked
  4642  012ADC  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4643  012ADE  A4D8               	btfss	status,2,c
  4644  012AE0  D02D               	goto	l12472
  4645                           
  4646                           ; BSR set to: 2
  4647                           ;main.c: 343:       lp_filter(0.0, i, -1);
  4648  012AE2  0EFF               	movlw	255
  4649  012AE4  6EE6               	movwf	postinc1,c
  4650                           
  4651                           ;stkvar	_i @ sp[(-7)+2]
  4652  012AE6  0EFB               	movlw	-5
  4653  012AE8  50E3               	movf	plusw1,w,c
  4654  012AEA  6EE6               	movwf	postinc1,c
  4655  012AEC  0E00               	movlw	0
  4656  012AEE  6EE6               	movwf	postinc1,c
  4657  012AF0  0E00               	movlw	0
  4658  012AF2  6EE6               	movwf	postinc1,c
  4659  012AF4  0E00               	movlw	0
  4660  012AF6  6EE6               	movwf	postinc1,c
  4661  012AF8  0E00               	movlw	0
  4662  012AFA  6EE6               	movwf	postinc1,c
  4663  012AFC  EC23  F0BC         	call	_lp_filter	;wreg free
  4664                           
  4665                           ;main.c: 344:       lp_filter(0.0, j, -1);
  4666  012B00  0EFF               	movlw	255
  4667  012B02  6EE6               	movwf	postinc1,c
  4668                           
  4669                           ;stkvar	_j @ sp[(-7)+1]
  4670  012B04  0EFA               	movlw	-6
  4671  012B06  50E3               	movf	plusw1,w,c
  4672  012B08  6EE6               	movwf	postinc1,c
  4673  012B0A  0E00               	movlw	0
  4674  012B0C  6EE6               	movwf	postinc1,c
  4675  012B0E  0E00               	movlw	0
  4676  012B10  6EE6               	movwf	postinc1,c
  4677  012B12  0E00               	movlw	0
  4678  012B14  6EE6               	movwf	postinc1,c
  4679  012B16  0E00               	movlw	0
  4680  012B18  6EE6               	movwf	postinc1,c
  4681  012B1A  EC23  F0BC         	call	_lp_filter	;wreg free
  4682                           
  4683                           ;main.c: 345:       lp_filter(0.0, k, -1);
  4684  012B1E  0EFF               	movlw	255
  4685  012B20  6EE6               	movwf	postinc1,c
  4686                           
  4687                           ;stkvar	_k @ sp[(-7)+0]
  4688  012B22  0EF9               	movlw	-7
  4689  012B24  50E3               	movf	plusw1,w,c
  4690  012B26  6EE6               	movwf	postinc1,c
  4691  012B28  0E00               	movlw	0
  4692  012B2A  6EE6               	movwf	postinc1,c
  4693  012B2C  0E00               	movlw	0
  4694  012B2E  6EE6               	movwf	postinc1,c
  4695  012B30  0E00               	movlw	0
  4696  012B32  6EE6               	movwf	postinc1,c
  4697  012B34  0E00               	movlw	0
  4698  012B36  6EE6               	movwf	postinc1,c
  4699  012B38  EC23  F0BC         	call	_lp_filter	;wreg free
  4700  012B3C                     l12472:
  4701                           
  4702                           ;main.c: 347:      V.calib = 1;
  4703  012B3C  0E01               	movlw	1
  4704  012B3E  0102               	movlb	2	; () banked
  4705  012B40  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4706                           
  4707                           ; BSR set to: 2
  4708                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4709  012B42  0E02               	movlw	2
  4710  012B44  6EE6               	movwf	postinc1,c
  4711  012B46  EC3E  F0D5         	call	_get_switch	;wreg free
  4712  012B4A  5001               	movf	btemp^0,w,c
  4713  012B4C  6EE6               	movwf	postinc1,c
  4714  012B4E  0E00               	movlw	0
  4715  012B50  6EE6               	movwf	postinc1,c
  4716                           
  4717                           ;stkvar	_i @ sp[(-8)+2]
  4718  012B52  0EFA               	movlw	-6
  4719  012B54  50E3               	movf	plusw1,w,c
  4720  012B56  0D04               	mullw	4
  4721  012B58  0E00               	movlw	low _C
  4722  012B5A  24F3               	addwf	243,w,c
  4723  012B5C  6ED9               	movwf	fsr2l,c
  4724  012B5E  0E01               	movlw	high _C
  4725  012B60  20F4               	addwfc	prodh,w,c
  4726  012B62  6EDA               	movwf	fsr2h,c
  4727  012B64  006F FF7B FFE6     	movff	postinc2,postinc1
  4728  012B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  4729  012B70  006F FF7B FFE6     	movff	postinc2,postinc1
  4730  012B76  006F FF7B FFE6     	movff	postinc2,postinc1
  4731                           
  4732                           ;stkvar	_i @ sp[(-12)+2]
  4733  012B7C  0EF6               	movlw	-10
  4734  012B7E  50E3               	movf	plusw1,w,c
  4735  012B80  6EE6               	movwf	postinc1,c
  4736  012B82  ECB6  F0D7         	call	_get_raw_result	;wreg free
  4737  012B86  0060  F007  FFE6   	movff	btemp,postinc1
  4738  012B8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4739  012B92  0E84               	movlw	low STR_18
  4740  012B94  6EE6               	movwf	postinc1,c
  4741  012B96  0EFF               	movlw	high STR_18
  4742  012B98  6EE6               	movwf	postinc1,c
  4743  012B9A  0E00               	movlw	0
  4744  012B9C  6EE6               	movwf	postinc1,c
  4745  012B9E  0E00               	movlw	0
  4746  012BA0  6EE6               	movwf	postinc1,c
  4747  012BA2  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4748  012BA6  0060  F007  FFE6   	movff	btemp,postinc1
  4749  012BAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4750  012BB2  0E0C               	movlw	12
  4751  012BB4  6EE6               	movwf	postinc1,c
  4752  012BB6  EC4C  F0C7         	call	_sprintf	;wreg free
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4756  012BBA  0E03               	movlw	3
  4757  012BBC  6EE6               	movwf	postinc1,c
  4758  012BBE  EC3E  F0D5         	call	_get_switch	;wreg free
  4759  012BC2  5001               	movf	btemp^0,w,c
  4760  012BC4  6EE6               	movwf	postinc1,c
  4761  012BC6  0E00               	movlw	0
  4762  012BC8  6EE6               	movwf	postinc1,c
  4763                           
  4764                           ;stkvar	_j @ sp[(-8)+1]
  4765  012BCA  0EF9               	movlw	-7
  4766  012BCC  50E3               	movf	plusw1,w,c
  4767  012BCE  0D04               	mullw	4
  4768  012BD0  0E00               	movlw	low _C
  4769  012BD2  24F3               	addwf	243,w,c
  4770  012BD4  6ED9               	movwf	fsr2l,c
  4771  012BD6  0E01               	movlw	high _C
  4772  012BD8  20F4               	addwfc	prodh,w,c
  4773  012BDA  6EDA               	movwf	fsr2h,c
  4774  012BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  4775  012BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  4776  012BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  4777  012BEE  006F FF7B FFE6     	movff	postinc2,postinc1
  4778                           
  4779                           ;stkvar	_j @ sp[(-12)+1]
  4780  012BF4  0EF5               	movlw	-11
  4781  012BF6  50E3               	movf	plusw1,w,c
  4782  012BF8  6EE6               	movwf	postinc1,c
  4783  012BFA  ECB6  F0D7         	call	_get_raw_result	;wreg free
  4784  012BFE  0060  F007  FFE6   	movff	btemp,postinc1
  4785  012C04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4786  012C0A  0E84               	movlw	low STR_18
  4787  012C0C  6EE6               	movwf	postinc1,c
  4788  012C0E  0EFF               	movlw	high STR_18
  4789  012C10  6EE6               	movwf	postinc1,c
  4790  012C12  0E00               	movlw	0
  4791  012C14  6EE6               	movwf	postinc1,c
  4792  012C16  0E01               	movlw	1
  4793  012C18  6EE6               	movwf	postinc1,c
  4794  012C1A  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4795  012C1E  0060  F007  FFE6   	movff	btemp,postinc1
  4796  012C24  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4797  012C2A  0E0C               	movlw	12
  4798  012C2C  6EE6               	movwf	postinc1,c
  4799  012C2E  EC4C  F0C7         	call	_sprintf	;wreg free
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4803                           ;stkvar	_inp_index @ sp[(-6)+3]
  4804  012C32  0EFD               	movlw	-3
  4805  012C34  50E3               	movf	plusw1,w,c
  4806  012C36  6E0B               	movwf	(btemp+10)^0,c
  4807  012C38  6A0C               	clrf	(btemp+11)^0,c
  4808  012C3A  0E01               	movlw	1
  4809  012C3C  260B               	addwf	(btemp+10)^0,f,c
  4810  012C3E  0E00               	movlw	0
  4811  012C40  220C               	addwfc	(btemp+11)^0,f,c
  4812  012C42  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4813  012C48  0060  F033  FFE6   	movff	btemp+11,postinc1
  4814                           
  4815                           ;stkvar	_k @ sp[(-8)+0]
  4816  012C4E  0EF8               	movlw	-8
  4817  012C50  50E3               	movf	plusw1,w,c
  4818  012C52  0D04               	mullw	4
  4819  012C54  0E00               	movlw	low _C
  4820  012C56  24F3               	addwf	243,w,c
  4821  012C58  6ED9               	movwf	fsr2l,c
  4822  012C5A  0E01               	movlw	high _C
  4823  012C5C  20F4               	addwfc	prodh,w,c
  4824  012C5E  6EDA               	movwf	fsr2h,c
  4825  012C60  006F FF7B FFE6     	movff	postinc2,postinc1
  4826  012C66  006F FF7B FFE6     	movff	postinc2,postinc1
  4827  012C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  4828  012C72  006F FF7B FFE6     	movff	postinc2,postinc1
  4829                           
  4830                           ;stkvar	_k @ sp[(-12)+0]
  4831  012C78  0EF4               	movlw	-12
  4832  012C7A  50E3               	movf	plusw1,w,c
  4833  012C7C  6EE6               	movwf	postinc1,c
  4834  012C7E  ECB6  F0D7         	call	_get_raw_result	;wreg free
  4835  012C82  0060  F007  FFE6   	movff	btemp,postinc1
  4836  012C88  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4837  012C8E  0E62               	movlw	low STR_20
  4838  012C90  6EE6               	movwf	postinc1,c
  4839  012C92  0EFF               	movlw	high STR_20
  4840  012C94  6EE6               	movwf	postinc1,c
  4841  012C96  0E00               	movlw	0
  4842  012C98  6EE6               	movwf	postinc1,c
  4843  012C9A  0E02               	movlw	2
  4844  012C9C  6EE6               	movwf	postinc1,c
  4845  012C9E  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  4846  012CA2  0060  F007  FFE6   	movff	btemp,postinc1
  4847  012CA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4848  012CAE  0E0C               	movlw	12
  4849  012CB0  6EE6               	movwf	postinc1,c
  4850  012CB2  EC4C  F0C7         	call	_sprintf	;wreg free
  4851                           
  4852                           ;main.c: 351:      break;
  4853  012CB6  D015               	goto	l12484
  4854  012CB8                     l12482:
  4855  012CB8  0100               	movlb	0	; () banked
  4856  012CBA  51F3               	movf	_H& (0+255),w,b
  4857  012CBC  6E0B               	movwf	(btemp+10)^0,c
  4858  012CBE  6A0C               	clrf	(btemp+11)^0,c
  4859                           
  4860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4861                           ; Switch size 1, requested type "simple"
  4862                           ; Number of cases is 1, Range of values is 0 to 0
  4863                           ; switch strategies available:
  4864                           ; Name         Instructions Cycles
  4865                           ; simple_byte            4     3 (average)
  4866                           ;	Chosen strategy is simple_byte
  4867  012CC0  500C               	movf	(btemp+11)^0,w,c
  4868  012CC2  0A00               	xorlw	0	; case 0
  4869  012CC4  A4D8               	btfss	status,2,c
  4870  012CC6  D00D               	goto	l12484
  4871                           
  4872                           ; BSR set to: 0
  4873                           ; Switch size 1, requested type "simple"
  4874                           ; Number of cases is 4, Range of values is 0 to 3
  4875                           ; switch strategies available:
  4876                           ; Name         Instructions Cycles
  4877                           ; simple_byte           13     7 (average)
  4878                           ;	Chosen strategy is simple_byte
  4879  012CC8  500B               	movf	(btemp+10)^0,w,c
  4880  012CCA  0A00               	xorlw	0	; case 0
  4881  012CCC  B4D8               	btfsc	status,2,c
  4882  012CCE  D605               	goto	l1344
  4883  012CD0  0A01               	xorlw	1	; case 1
  4884  012CD2  B4D8               	btfsc	status,2,c
  4885  012CD4  D59F               	goto	l1342
  4886  012CD6  0A03               	xorlw	3	; case 2
  4887  012CD8  B4D8               	btfsc	status,2,c
  4888  012CDA  D686               	goto	l1345
  4889  012CDC  0A01               	xorlw	1	; case 3
  4890  012CDE  B4D8               	btfsc	status,2,c
  4891  012CE0  D6FC               	goto	l12468
  4892  012CE2                     l12484:
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;main.c: 355:     clear_hid_pflags(&H);
  4896  012CE2  0EF3               	movlw	_H& (0+255)
  4897  012CE4  6EE6               	movwf	postinc1,c
  4898  012CE6  ECFC  F0D6         	call	_clear_hid_pflags	;wreg free
  4899                           
  4900                           ;main.c: 357:    StartTimer(TMR_DISPLAY, 250);
  4901  012CEA  0EFA               	movlw	250
  4902  012CEC  6EE6               	movwf	postinc1,c
  4903  012CEE  0E00               	movlw	0
  4904  012CF0  6EE6               	movwf	postinc1,c
  4905  012CF2  0E0A               	movlw	10
  4906  012CF4  6EE6               	movwf	postinc1,c
  4907  012CF6  EC50  F0D3         	call	_StartTimer	;wreg free
  4908                           
  4909                           ;main.c: 358:    update_lcd(0);
  4910  012CFA  0E00               	movlw	0
  4911  012CFC  6EE6               	movwf	postinc1,c
  4912  012CFE  EC3D  F0C6         	call	_update_lcd	;wreg free
  4913  012D02                     l12490:
  4914                           
  4915                           ;main.c: 364:   check_help(V.flipper);
  4916  012D02  0102               	movlb	2	; () banked
  4917  012D04  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4918  012D06  6EE6               	movwf	postinc1,c
  4919  012D08  EC25  F0B8         	call	_check_help	;wreg free
  4920                           
  4921                           ;main.c: 366:   if (check_enter_button(&H)) {
  4922  012D0C  0EF3               	movlw	_H& (0+255)
  4923  012D0E  6EE6               	movwf	postinc1,c
  4924  012D10  EC70  F0D3         	call	_check_enter_button	;wreg free
  4925  012D14  5001               	movf	btemp^0,w,c
  4926  012D16  B4D8               	btfsc	status,2,c
  4927  012D18  D062               	goto	l1349
  4928                           
  4929                           ;main.c: 367:    V.calib = 0;
  4930  012D1A  0102               	movlb	2	; () banked
  4931  012D1C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4932                           
  4933                           ; BSR set to: 2
  4934                           ;main.c: 368:    inp_index += 3;
  4935                           ;stkvar	_inp_index @ sp[(-6)+3]
  4936  012D1E  0EFD               	movlw	-3
  4937  012D20  006F FF8C  F001    	movff	plusw1,btemp
  4938  012D26  0E03               	movlw	3
  4939  012D28  2601               	addwf	btemp^0,f,c
  4940  012D2A  0EFD               	movlw	-3
  4941  012D2C  0060  F007  FFE3   	movff	btemp,plusw1
  4942                           
  4943                           ;main.c: 369:    if (inp_index > 9)
  4944                           ;stkvar	_inp_index @ sp[(-6)+3]
  4945  012D32  0EFD               	movlw	-3
  4946  012D34  006F FF8C  F001    	movff	plusw1,btemp
  4947  012D3A  0E09               	movlw	9
  4948  012D3C  6401               	cpfsgt	btemp^0,c
  4949  012D3E  D03A               	goto	l12518
  4950                           
  4951                           ; BSR set to: 2
  4952                           ;main.c: 370:     inp_index = 0;
  4953                           ;stkvar	_inp_index @ sp[(-6)+3]
  4954  012D40  0EFD               	movlw	-3
  4955  012D42  6AE3               	clrf	plusw1,c
  4956  012D44  D037               	goto	l12518
  4957  012D46                     l12500:
  4958                           
  4959                           ; BSR set to: 2
  4960                           ;main.c: 373:     i = C_BATT;
  4961                           ;stkvar	_i @ sp[(-6)+2]
  4962  012D46  0EFC               	movlw	-4
  4963  012D48  6AE3               	clrf	plusw1,c
  4964                           
  4965                           ; BSR set to: 2
  4966                           ;main.c: 374:     j = C_PV;
  4967                           ;stkvar	_j @ sp[(-6)+1]
  4968  012D4A  0EFB               	movlw	-5
  4969  012D4C  6AE3               	clrf	plusw1,c
  4970  012D4E  2AE3               	incf	plusw1,f,c
  4971                           
  4972                           ; BSR set to: 2
  4973                           ;main.c: 375:     k = V_CC;
  4974                           ;stkvar	_k @ sp[(-6)+0]
  4975  012D50  0EFA               	movlw	-6
  4976  012D52  6AE3               	clrf	plusw1,c
  4977  012D54  82E3               	bsf	plusw1,1,c
  4978                           
  4979                           ;main.c: 376:     break;
  4980  012D56  D043               	goto	l1349
  4981  012D58                     l12506:
  4982                           
  4983                           ; BSR set to: 2
  4984                           ;main.c: 378:     i = V_BAT;
  4985                           ;stkvar	_i @ sp[(-6)+2]
  4986  012D58  0EFC               	movlw	-4
  4987  012D5A  6AE3               	clrf	plusw1,c
  4988  012D5C  84E3               	bsf	plusw1,2,c
  4989                           
  4990                           ;main.c: 379:     j = V_PV;
  4991                           ;stkvar	_j @ sp[(-6)+1]
  4992  012D5E  0EFB               	movlw	-5
  4993  012D60  6AE3               	clrf	plusw1,c
  4994  012D62  80E3               	bsf	plusw1,0,c
  4995  012D64  84E3               	bsf	plusw1,2,c	;indir
  4996                           
  4997                           ;main.c: 380:     k = V_CBUS;
  4998                           ;stkvar	_k @ sp[(-6)+0]
  4999  012D66  0EFA               	movlw	-6
  5000  012D68  6AE3               	clrf	plusw1,c
  5001  012D6A  82E3               	bsf	plusw1,1,c
  5002  012D6C  84E3               	bsf	plusw1,2,c	;indir
  5003                           
  5004                           ;main.c: 381:     break;
  5005  012D6E  D037               	goto	l1349
  5006  012D70                     l12508:
  5007                           
  5008                           ; BSR set to: 2
  5009                           ;main.c: 383:     i = V_BBAT;
  5010                           ;stkvar	_i @ sp[(-6)+2]
  5011  012D70  0EFC               	movlw	-4
  5012  012D72  6AE3               	clrf	plusw1,c
  5013  012D74  82E3               	bsf	plusw1,1,c
  5014  012D76  86E3               	bsf	plusw1,3,c	;indir
  5015                           
  5016                           ; BSR set to: 2
  5017                           ;main.c: 384:     j = V_TEMP;
  5018  012D78  0E0B               	movlw	11
  5019  012D7A  6E0C               	movwf	(btemp+11)^0,c
  5020                           
  5021                           ;stkvar	_j @ sp[(-6)+1]
  5022  012D7C  0EFB               	movlw	-5
  5023  012D7E  0060  F033  FFE3   	movff	btemp+11,plusw1
  5024                           
  5025                           ; BSR set to: 2
  5026                           ;main.c: 385:     k = V_INVERTER;
  5027                           ;stkvar	_k @ sp[(-6)+0]
  5028  012D84  0EFA               	movlw	-6
  5029  012D86  6AE3               	clrf	plusw1,c
  5030  012D88  84E3               	bsf	plusw1,2,c
  5031  012D8A  86E3               	bsf	plusw1,3,c	;indir
  5032                           
  5033                           ;main.c: 386:     break;
  5034  012D8C  D028               	goto	l1349
  5035  012D8E                     l12514:
  5036                           
  5037                           ; BSR set to: 2
  5038                           ;main.c: 388:     i = channel_ANB5;
  5039  012D8E  0E0D               	movlw	13
  5040  012D90  6E0C               	movwf	(btemp+11)^0,c
  5041                           
  5042                           ;stkvar	_i @ sp[(-6)+2]
  5043  012D92  0EFC               	movlw	-4
  5044  012D94  0060  F033  FFE3   	movff	btemp+11,plusw1
  5045                           
  5046                           ;main.c: 389:     j = channel_ANB5;
  5047  012D9A  0E0D               	movlw	13
  5048  012D9C  6E0C               	movwf	(btemp+11)^0,c
  5049                           
  5050                           ;stkvar	_j @ sp[(-6)+1]
  5051  012D9E  0EFB               	movlw	-5
  5052  012DA0  0060  F033  FFE3   	movff	btemp+11,plusw1
  5053                           
  5054                           ;main.c: 390:     k = channel_ANB5;
  5055  012DA6  0E0D               	movlw	13
  5056  012DA8  6E0C               	movwf	(btemp+11)^0,c
  5057                           
  5058                           ;stkvar	_k @ sp[(-6)+0]
  5059  012DAA  0EFA               	movlw	-6
  5060  012DAC  0060  F033  FFE3   	movff	btemp+11,plusw1
  5061                           
  5062                           ;main.c: 391:     break;
  5063  012DB2  D015               	goto	l1349
  5064  012DB4                     l12518:
  5065                           
  5066                           ; BSR set to: 2
  5067                           ;stkvar	_inp_index @ sp[(-6)+3]
  5068  012DB4  0EFD               	movlw	-3
  5069  012DB6  50E3               	movf	plusw1,w,c
  5070  012DB8  6E0B               	movwf	(btemp+10)^0,c
  5071  012DBA  6A0C               	clrf	(btemp+11)^0,c
  5072                           
  5073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5074                           ; Switch size 1, requested type "simple"
  5075                           ; Number of cases is 1, Range of values is 0 to 0
  5076                           ; switch strategies available:
  5077                           ; Name         Instructions Cycles
  5078                           ; simple_byte            4     3 (average)
  5079                           ;	Chosen strategy is simple_byte
  5080  012DBC  500C               	movf	(btemp+11)^0,w,c
  5081  012DBE  0A00               	xorlw	0	; case 0
  5082  012DC0  A4D8               	btfss	status,2,c
  5083  012DC2  D00D               	goto	l1349
  5084                           
  5085                           ; BSR set to: 2
  5086                           ; Switch size 1, requested type "simple"
  5087                           ; Number of cases is 4, Range of values is 0 to 9
  5088                           ; switch strategies available:
  5089                           ; Name         Instructions Cycles
  5090                           ; simple_byte           13     7 (average)
  5091                           ;	Chosen strategy is simple_byte
  5092  012DC4  500B               	movf	(btemp+10)^0,w,c
  5093  012DC6  0A00               	xorlw	0	; case 0
  5094  012DC8  B4D8               	btfsc	status,2,c
  5095  012DCA  D7BD               	goto	l12500
  5096  012DCC  0A03               	xorlw	3	; case 3
  5097  012DCE  B4D8               	btfsc	status,2,c
  5098  012DD0  D7C3               	goto	l12506
  5099  012DD2  0A05               	xorlw	5	; case 6
  5100  012DD4  B4D8               	btfsc	status,2,c
  5101  012DD6  D7CC               	goto	l12508
  5102  012DD8  0A0F               	xorlw	15	; case 9
  5103  012DDA  B4D8               	btfsc	status,2,c
  5104  012DDC  D7D8               	goto	l12514
  5105  012DDE                     l1349:
  5106                           
  5107                           ;main.c: 400:   if (V.set_sequ) {
  5108  012DDE  0102               	movlb	2	; () banked
  5109  012DE0  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5110  012DE2  D4CE               	goto	l12434
  5111                           
  5112                           ; BSR set to: 2
  5113                           ;main.c: 401:    if (TimerDone(TMR_INFO)) {
  5114  012DE4  0E07               	movlw	7
  5115  012DE6  6EE6               	movwf	postinc1,c
  5116  012DE8  ECD1  F0D5         	call	_TimerDone	;wreg free
  5117  012DEC  5001               	movf	btemp^0,w,c
  5118  012DEE  B4D8               	btfsc	status,2,c
  5119  012DF0  D00B               	goto	l12528
  5120                           
  5121                           ;main.c: 402:     V.set_sequ = 0;
  5122  012DF2  0102               	movlb	2	; () banked
  5123  012DF4  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5124                           
  5125                           ; BSR set to: 2
  5126                           ;main.c: 403:     set_vterm(0);
  5127  012DF6  0E00               	movlw	0
  5128  012DF8  6EE6               	movwf	postinc1,c
  5129  012DFA  EC98  F0D7         	call	_set_vterm	;wreg free
  5130                           
  5131                           ;main.c: 404:     update_lcd(0);
  5132  012DFE  0E00               	movlw	0
  5133  012E00  6EE6               	movwf	postinc1,c
  5134  012E02  EC3D  F0C6         	call	_update_lcd	;wreg free
  5135                           
  5136                           ;main.c: 405:    } else {
  5137  012E06  D4BC               	goto	l12434
  5138  012E08                     l12528:
  5139                           
  5140                           ;main.c: 406:     set_vterm(2);
  5141  012E08  0E02               	movlw	2
  5142  012E0A  6EE6               	movwf	postinc1,c
  5143  012E0C  EC98  F0D7         	call	_set_vterm	;wreg free
  5144                           
  5145                           ;main.c: 407:     update_lcd(2);
  5146  012E10  0E02               	movlw	2
  5147  012E12  6EE6               	movwf	postinc1,c
  5148  012E14  EC3D  F0C6         	call	_update_lcd	;wreg free
  5149  012E18  D4B3               	goto	l12434
  5150  012E1A                     __end_of_main:
  5151                           	opt callstack 0
  5152                           
  5153 ;; *************** function _static_soc *****************
  5154 ;; Defined at:
  5155 ;;		line 116 in file "mbmc.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;		None
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1  [STACK] void 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 3F/1
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5173 ;;Total ram usage:        0 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:   15
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;; This function uses a reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text1
  5184  01ADD4                     __ptext1:
  5185                           	opt callstack 0
  5186  01ADD4                     _static_soc:
  5187                           	opt callstack 15
  5188                           
  5189                           ;mbmc.c: 118:  C.runtime = 120;
  5190                           
  5191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5192                           ;incstack = 0
  5193  01ADD4  0E00               	movlw	0
  5194  01ADD6  0101               	movlb	1	; () banked
  5195  01ADD8  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
  5196  01ADDA  0E78               	movlw	120
  5197  01ADDC  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
  5198                           
  5199                           ;mbmc.c: 119:  C.soc = 100;
  5200  01ADDE  0E00               	movlw	0
  5201  01ADE0  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
  5202  01ADE2  0E64               	movlw	100
  5203  01ADE4  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
  5204                           
  5205                           ; BSR set to: 1
  5206                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5207  01ADE6  C188  F18C         	movff	_C+136,_C+140	;volatile
  5208  01ADEA  C189  F18D         	movff	_C+137,_C+141	;volatile
  5209  01ADEE  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5210  01ADF2  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5211                           
  5212                           ; BSR set to: 1
  5213                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5214  01ADF6  0012               	return		;funcret
  5215  01ADF8                     __end_of_static_soc:
  5216                           	opt callstack 0
  5217                           
  5218 ;; *************** function _start_switch_handler *****************
  5219 ;; Defined at:
  5220 ;;		line 119 in file "dio.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1  [STACK] void 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5229 ;; Tracked objects:
  5230 ;;		On entry : 1/0
  5231 ;;		On exit  : 3F/39
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:   16
  5241 ;; This function calls:
  5242 ;;		_INT1_SetInterruptHandler
  5243 ;; This function is called by:
  5244 ;;		_main
  5245 ;; This function uses a reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text2
  5249  01AEF2                     __ptext2:
  5250                           	opt callstack 0
  5251  01AEF2                     _start_switch_handler:
  5252                           	opt callstack 14
  5253                           
  5254                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  5255                           
  5256                           ; BSR set to: 1
  5257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5258                           ;incstack = 0
  5259  01AEF2  0139               	movlb	57	; () banked
  5260  01AEF4  9195               	bcf	149,0,b	;volatile
  5261                           
  5262                           ; BSR set to: 57
  5263                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  5264  01AEF6  0EC0               	movlw	low _switch_handler
  5265  01AEF8  6EE6               	movwf	postinc1,c
  5266  01AEFA  0E86               	movlw	high _switch_handler
  5267  01AEFC  6EE6               	movwf	postinc1,c
  5268  01AEFE  0E01               	movlw	low (_switch_handler shr (0+16))
  5269  01AF00  6EE6               	movwf	postinc1,c
  5270  01AF02  EC5D  F0D6         	call	_INT1_SetInterruptHandler	;wreg free
  5271                           
  5272                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  5273  01AF06  0E02               	movlw	2
  5274  01AF08  0102               	movlb	2	; () banked
  5275  01AF0A  6FDF               	movwf	(_S+35)& (0+255),b	;volatile
  5276                           
  5277                           ; BSR set to: 2
  5278                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  5279  01AF0C  0139               	movlb	57	; () banked
  5280  01AF0E  8195               	bsf	149,0,b	;volatile
  5281                           
  5282                           ; BSR set to: 57
  5283                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5284  01AF10  0012               	return		;funcret
  5285  01AF12                     __end_of_start_switch_handler:
  5286                           	opt callstack 0
  5287                           
  5288 ;; *************** function _srand *****************
  5289 ;; Defined at:
  5290 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  s               2  [STACK] unsigned int 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;		None
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1  [STACK] void 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 3F/1
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5308 ;;Total ram usage:        0 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:   15
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_main
  5315 ;; This function uses a reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text3
  5319  01A8F2                     __ptext3:
  5320                           	opt callstack 0
  5321  01A8F2                     _srand:
  5322                           	opt callstack 15
  5323                           
  5324                           ;stkvar	_s @ sp[(0)+-2]
  5325                           
  5326                           ; BSR set to: 57
  5327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5328                           ;incstack = 0
  5329  01A8F2  0EFE               	movlw	-2
  5330  01A8F4  50E3               	movf	plusw1,w,c
  5331  01A8F6  0FFF               	addlw	255
  5332  01A8F8  6E0B               	movwf	(btemp+10)^0,c
  5333  01A8FA  0EFF               	movlw	-1
  5334  01A8FC  006F FF8C  F00C    	movff	plusw1,btemp+11
  5335  01A902  0EFF               	movlw	255
  5336  01A904  220C               	addwfc	(btemp+11)^0,f,c
  5337  01A906  0060  F02C  F1F3   	movff	btemp+10,_seed
  5338  01A90C  0060  F030  F1F4   	movff	btemp+11,_seed+1
  5339  01A912  0101               	movlb	1	; () banked
  5340  01A914  6BF5               	clrf	(_seed+2)& (0+255),b
  5341  01A916  6BF6               	clrf	(_seed+3)& (0+255),b
  5342  01A918  6BF7               	clrf	(_seed+4)& (0+255),b
  5343  01A91A  6BF8               	clrf	(_seed+5)& (0+255),b
  5344  01A91C  6BF9               	clrf	(_seed+6)& (0+255),b
  5345  01A91E  6BFA               	clrf	(_seed+7)& (0+255),b
  5346                           
  5347                           ; BSR set to: 1
  5348                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5349  01A920  52E5               	movf	postdec1,f,c
  5350  01A922  52E5               	movf	postdec1,f,c
  5351  01A924  0012               	return		;funcret
  5352  01A926                     __end_of_srand:
  5353                           	opt callstack 0
  5354                           
  5355 ;; *************** function _spinners *****************
  5356 ;; Defined at:
  5357 ;;		line 134 in file "mbmc.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  shape           1  [STACK] unsigned char 
  5360 ;;  reset           1  [STACK] unsigned char 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  c               1  [STACK] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1  [STACK] unsigned char 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5376 ;;Total ram usage:        0 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:   16
  5379 ;; This function calls:
  5380 ;;		_strlen
  5381 ;; This function is called by:
  5382 ;;		_main
  5383 ;; This function uses a reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text4
  5387  019282                     __ptext4:
  5388                           	opt callstack 0
  5389  019282                     _spinners:
  5390                           	opt callstack 0
  5391                           
  5392                           ; BSR set to: 1
  5393                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5394  019282  52E6               	movf	postinc1,f,c
  5395                           
  5396                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1)) shape = 0;
  5397                           ;stkvar	_shape @ sp[(-1)+-1]
  5398                           
  5399                           ;incstack = 0
  5400  019284  0EFE               	movlw	-2
  5401  019286  006F FF8C  F001    	movff	plusw1,btemp
  5402  01928C  0E05               	movlw	5
  5403  01928E  6401               	cpfsgt	btemp^0,c
  5404  019290  D002               	goto	l1859
  5405                           
  5406                           ;stkvar	_shape @ sp[(-1)+-1]
  5407  019292  0EFE               	movlw	-2
  5408  019294  6AE3               	clrf	plusw1,c
  5409  019296                     l1859:
  5410                           
  5411                           ;mbmc.c: 140:  if (reset) s[shape] = 0;
  5412                           ;stkvar	_reset @ sp[(-1)+-2]
  5413  019296  0EFD               	movlw	-3
  5414  019298  50E3               	movf	plusw1,w,c
  5415  01929A  B4D8               	btfsc	status,2,c
  5416  01929C  D00A               	goto	l10396
  5417                           
  5418                           ;stkvar	_shape @ sp[(-1)+-1]
  5419  01929E  0EFE               	movlw	-2
  5420  0192A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  5421  0192A6  500C               	movf	(btemp+11)^0,w,c
  5422  0192A8  0F74               	addlw	low spinners@s
  5423  0192AA  6ED9               	movwf	fsr2l,c
  5424  0192AC  6ADA               	clrf	fsr2h,c
  5425  0192AE  0E00               	movlw	0
  5426  0192B0  6EDF               	movwf	indf2,c
  5427  0192B2                     l10396:
  5428                           
  5429                           ;mbmc.c: 141:  c = spin[shape][s[shape]];
  5430                           ;stkvar	_shape @ sp[(-1)+-1]
  5431  0192B2  0EFE               	movlw	-2
  5432  0192B4  50E3               	movf	plusw1,w,c
  5433  0192B6  0D14               	mullw	20
  5434  0192B8  0E9D               	movlw	low _spin
  5435  0192BA  6E0B               	movwf	(btemp+10)^0,c
  5436  0192BC  0EFC               	movlw	high _spin
  5437  0192BE  6E0C               	movwf	(btemp+11)^0,c
  5438  0192C0  50F3               	movf	243,w,c
  5439  0192C2  260B               	addwf	(btemp+10)^0,f,c
  5440  0192C4  50F4               	movf	244,w,c
  5441  0192C6  220C               	addwfc	(btemp+11)^0,f,c
  5442                           
  5443                           ;stkvar	_shape @ sp[(-1)+-1]
  5444  0192C8  0EFE               	movlw	-2
  5445  0192CA  006F FF8C  F00A    	movff	plusw1,btemp+9
  5446  0192D0  500A               	movf	(btemp+9)^0,w,c
  5447  0192D2  0F74               	addlw	low spinners@s
  5448  0192D4  6ED9               	movwf	fsr2l,c
  5449  0192D6  6ADA               	clrf	fsr2h,c
  5450  0192D8  50DF               	movf	indf2,w,c
  5451  0192DA  260B               	addwf	(btemp+10)^0,f,c
  5452  0192DC  0E00               	movlw	0
  5453  0192DE  220C               	addwfc	(btemp+11)^0,f,c
  5454  0192E0  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  5455  0192E6  0060  F033  FFF7   	movff	btemp+11,tblptrh
  5456  0192EC                     	if	0	;tblptru may be non-zero
  5457  0192EC                     	endif
  5458  0192EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5459  0192EC  0E00               	movlw	low (__mediumconst shr (0+16))
  5460  0192EE  6EF8               	movwf	tblptru,c
  5461  0192F0                     	endif
  5462                           
  5463                           ;stkvar	_c @ sp[(-1)+0]
  5464  0192F0  0008               	tblrd		*
  5465  0192F2  0EFF               	movlw	-1
  5466  0192F4  006F FFD7 FFE3     	movff	tablat,plusw1
  5467                           
  5468                           ;mbmc.c: 142:  if (++s[shape] >= strlen(spin[shape])) s[shape] = 0;
  5469                           ;stkvar	_shape @ sp[(-1)+-1]
  5470  0192FA  0EFE               	movlw	-2
  5471  0192FC  50E3               	movf	plusw1,w,c
  5472  0192FE  0D14               	mullw	20
  5473  019300  0E9D               	movlw	low _spin
  5474  019302  6E0B               	movwf	(btemp+10)^0,c
  5475  019304  0EFC               	movlw	high _spin
  5476  019306  6E0C               	movwf	(btemp+11)^0,c
  5477  019308  50F3               	movf	243,w,c
  5478  01930A  260B               	addwf	(btemp+10)^0,f,c
  5479  01930C  50F4               	movf	244,w,c
  5480  01930E  220C               	addwfc	(btemp+11)^0,f,c
  5481  019310  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5482  019316  0060  F033  FFE6   	movff	btemp+11,postinc1
  5483  01931C  EC8F  F0CC         	call	_strlen	;wreg free
  5484                           
  5485                           ;stkvar	_shape @ sp[(-1)+-1]
  5486  019320  0EFE               	movlw	-2
  5487  019322  006F FF8C  F00C    	movff	plusw1,btemp+11
  5488  019328  500C               	movf	(btemp+11)^0,w,c
  5489  01932A  0F74               	addlw	low spinners@s
  5490  01932C  6ED9               	movwf	fsr2l,c
  5491  01932E  6ADA               	clrf	fsr2h,c
  5492  019330  2ADF               	incf	indf2,f,c
  5493  019332  50DF               	movf	indf2,w,c
  5494  019334  6E0B               	movwf	(btemp+10)^0,c
  5495  019336  6A0C               	clrf	(btemp+11)^0,c
  5496  019338  5001               	movf	btemp^0,w,c
  5497  01933A  5C0B               	subwf	(btemp+10)^0,w,c
  5498  01933C  5002               	movf	(btemp+1)^0,w,c
  5499  01933E  580C               	subwfb	(btemp+11)^0,w,c
  5500  019340  A0D8               	btfss	status,0,c
  5501  019342  D00A               	goto	l10402
  5502                           
  5503                           ;stkvar	_shape @ sp[(-1)+-1]
  5504  019344  0EFE               	movlw	-2
  5505  019346  006F FF8C  F00C    	movff	plusw1,btemp+11
  5506  01934C  500C               	movf	(btemp+11)^0,w,c
  5507  01934E  0F74               	addlw	low spinners@s
  5508  019350  6ED9               	movwf	fsr2l,c
  5509  019352  6ADA               	clrf	fsr2h,c
  5510  019354  0E00               	movlw	0
  5511  019356  6EDF               	movwf	indf2,c
  5512  019358                     l10402:
  5513                           
  5514                           ;mbmc.c: 143:  return c;
  5515                           ;stkvar	_c @ sp[(-1)+0]
  5516  019358  0EFF               	movlw	-1
  5517  01935A  006F FF8C  F001    	movff	plusw1,btemp
  5518                           
  5519                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  5520  019360  52E5               	movf	postdec1,f,c
  5521  019362  52E5               	movf	postdec1,f,c
  5522  019364  52E5               	movf	postdec1,f,c
  5523  019366  0012               	return		;funcret
  5524  019368                     __end_of_spinners:
  5525                           	opt callstack 0
  5526                           
  5527 ;; *************** function _init_port_dma *****************
  5528 ;; Defined at:
  5529 ;;		line 90 in file "eadog.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1  [STACK] void 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/2
  5540 ;;		On exit  : 3F/3B
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5547 ;;Total ram usage:        0 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:   15
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_main
  5554 ;; This function uses a reentrant model
  5555 ;;
  5556                           
  5557                           	psect	text5
  5558  01A98E                     __ptext5:
  5559                           	opt callstack 0
  5560  01A98E                     _init_port_dma:
  5561                           	opt callstack 15
  5562                           
  5563                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5564                           
  5565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5566                           ;incstack = 0
  5567  01A98E  0E3F               	movlw	-193
  5568  01A990  013B               	movlb	59	; () banked
  5569  01A992  17DD               	andwf	221,f,b	;volatile
  5570                           
  5571                           ; BSR set to: 59
  5572                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5573  01A994  9BDD               	bcf	221,5,b	;volatile
  5574                           
  5575                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5576  01A996  51DD               	movf	221,w,b	;volatile
  5577  01A998  0BF9               	andlw	-7
  5578  01A99A  0902               	iorlw	2
  5579  01A99C  6FDD               	movwf	221,b	;volatile
  5580                           
  5581                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5582  01A99E  0EE7               	movlw	-25
  5583  01A9A0  17DD               	andwf	221,f,b	;volatile
  5584                           
  5585                           ; BSR set to: 59
  5586                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5587  01A9A2  81DD               	bsf	221,0,b	;volatile
  5588                           
  5589                           ; BSR set to: 59
  5590                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5591  01A9A4  9DDC               	bcf	220,6,b	;volatile
  5592                           
  5593                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5594  01A9A6  0E3D               	movlw	61
  5595  01A9A8  6FD1               	movwf	209,b	;volatile
  5596  01A9AA  0EEA               	movlw	234
  5597  01A9AC  6FD0               	movwf	208,b	;volatile
  5598                           
  5599                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5600  01A9AE  0EFF               	movlw	low _port_data
  5601  01A9B0  6FD9               	movwf	217,b	;volatile
  5602  01A9B2  0E05               	movlw	high _port_data
  5603  01A9B4  6FDA               	movwf	218,b	;volatile
  5604  01A9B6  0E00               	movlw	low (_port_data shr (0+16))
  5605  01A9B8  6FDB               	movwf	219,b	;volatile
  5606                           
  5607                           ; BSR set to: 59
  5608                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5609  01A9BA  9BDC               	bcf	220,5,b	;volatile
  5610                           
  5611                           ; BSR set to: 59
  5612                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5613  01A9BC  0012               	return		;funcret
  5614  01A9BE                     __end_of_init_port_dma:
  5615                           	opt callstack 0
  5616                           
  5617 ;; *************** function _init_display *****************
  5618 ;; Defined at:
  5619 ;;		line 38 in file "eadog.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1  [STACK] void 
  5626 ;; Registers used:
  5627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5628 ;; Tracked objects:
  5629 ;;		On entry : 3F/3B
  5630 ;;		On exit  : 3F/3D
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5637 ;;Total ram usage:        0 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:   17
  5640 ;; This function calls:
  5641 ;;		_ringBufS_init
  5642 ;;		_send_lcd_cmd
  5643 ;;		_send_lcd_cmd_long
  5644 ;;		_wdtdelay
  5645 ;; This function is called by:
  5646 ;;		_main
  5647 ;; This function uses a reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text6
  5651  019198                     __ptext6:
  5652                           	opt callstack 0
  5653  019198                     _init_display:
  5654                           	opt callstack 13
  5655                           
  5656                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5657                           
  5658                           ; BSR set to: 59
  5659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5660                           ;incstack = 0
  5661  019198  0E43               	movlw	low _ring_buf1
  5662  01919A  0100               	movlb	0	; () banked
  5663  01919C  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5664  01919E  0E04               	movlw	high _ring_buf1
  5665  0191A0  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5666                           
  5667                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5668  0191A2  0E00               	movlw	low _ring_buf2
  5669  0191A4  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5670  0191A6  0E04               	movlw	high _ring_buf2
  5671  0191A8  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5675  0191AA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  5676  0191B0  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  5677  0191B6  ECBD  F0D5         	call	_ringBufS_init	;wreg free
  5678                           
  5679                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5680  0191BA  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  5681  0191C0  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  5682  0191C6  ECBD  F0D5         	call	_ringBufS_init	;wreg free
  5683                           
  5684                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5685  0191CA  84BE               	bsf	190,2,c	;volatile
  5686  0191CC  84BC               	bsf	188,2,c	;volatile
  5687                           
  5688                           ;eadog.c: 59:  wdtdelay(350000);
  5689  0191CE  0E30               	movlw	48
  5690  0191D0  6EE6               	movwf	postinc1,c
  5691  0191D2  0E57               	movlw	87
  5692  0191D4  6EE6               	movwf	postinc1,c
  5693  0191D6  0E05               	movlw	5
  5694  0191D8  6EE6               	movwf	postinc1,c
  5695  0191DA  0E00               	movlw	0
  5696  0191DC  6EE6               	movwf	postinc1,c
  5697  0191DE  ECEB  F0D0         	call	_wdtdelay	;wreg free
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5701  0191E2  0E39               	movlw	57
  5702  0191E4  6EE6               	movwf	postinc1,c
  5703  0191E6  ECA9  F0D5         	call	_send_lcd_cmd	;wreg free
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5707  0191EA  0E1D               	movlw	29
  5708  0191EC  6EE6               	movwf	postinc1,c
  5709  0191EE  ECA9  F0D5         	call	_send_lcd_cmd	;wreg free
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5713  0191F2  0E50               	movlw	80
  5714  0191F4  6EE6               	movwf	postinc1,c
  5715  0191F6  ECA9  F0D5         	call	_send_lcd_cmd	;wreg free
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5719  0191FA  0E6C               	movlw	108
  5720  0191FC  6EE6               	movwf	postinc1,c
  5721  0191FE  ECA9  F0D5         	call	_send_lcd_cmd	;wreg free
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5725  019202  0E76               	movlw	118
  5726  019204  6EE6               	movwf	postinc1,c
  5727  019206  ECA9  F0D5         	call	_send_lcd_cmd	;wreg free
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5731  01920A  0E38               	movlw	56
  5732  01920C  6EE6               	movwf	postinc1,c
  5733  01920E  EC95  F0D5         	call	_send_lcd_cmd_long	;wreg free
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5737  019212  0E0F               	movlw	15
  5738  019214  6EE6               	movwf	postinc1,c
  5739  019216  ECA9  F0D5         	call	_send_lcd_cmd	;wreg free
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5743  01921A  0E01               	movlw	1
  5744  01921C  6EE6               	movwf	postinc1,c
  5745  01921E  EC95  F0D5         	call	_send_lcd_cmd_long	;wreg free
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5749  019222  0E02               	movlw	2
  5750  019224  6EE6               	movwf	postinc1,c
  5751  019226  ECA9  F0D5         	call	_send_lcd_cmd	;wreg free
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5755  01922A  0E06               	movlw	6
  5756  01922C  6EE6               	movwf	postinc1,c
  5757  01922E  ECA9  F0D5         	call	_send_lcd_cmd	;wreg free
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;eadog.c: 70:  wdtdelay(30);
  5761  019232  0E1E               	movlw	30
  5762  019234  6EE6               	movwf	postinc1,c
  5763  019236  0E00               	movlw	0
  5764  019238  6EE6               	movwf	postinc1,c
  5765  01923A  0E00               	movlw	0
  5766  01923C  6EE6               	movwf	postinc1,c
  5767  01923E  0E00               	movlw	0
  5768  019240  6EE6               	movwf	postinc1,c
  5769  019242  ECEB  F0D0         	call	_wdtdelay	;wreg free
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5773  019246  0E02               	movlw	2
  5774  019248  013D               	movlb	61	; () banked
  5775  01924A  6F16               	movwf	22,b	;volatile
  5776                           
  5777                           ; BSR set to: 61
  5778                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5779  01924C  0E40               	movlw	64
  5780  01924E  6F15               	movwf	21,b	;volatile
  5781                           
  5782                           ; BSR set to: 61
  5783                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5784  019250  0E83               	movlw	131
  5785  019252  6F14               	movwf	20,b	;volatile
  5786                           
  5787                           ; BSR set to: 61
  5788                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5789  019254  931A               	bcf	26,1,b	;volatile
  5790                           
  5791                           ; BSR set to: 61
  5792                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5793  019256  0E3F               	movlw	-193
  5794  019258  013B               	movlb	59	; () banked
  5795  01925A  17FD               	andwf	253,f,b	;volatile
  5796                           
  5797                           ; BSR set to: 59
  5798                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5799  01925C  9BFD               	bcf	253,5,b	;volatile
  5800                           
  5801                           ; BSR set to: 59
  5802                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5803  01925E  51FD               	movf	253,w,b	;volatile
  5804  019260  0BF9               	andlw	-7
  5805  019262  0902               	iorlw	2
  5806  019264  6FFD               	movwf	253,b	;volatile
  5807                           
  5808                           ; BSR set to: 59
  5809                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5810  019266  0EE7               	movlw	-25
  5811  019268  17FD               	andwf	253,f,b	;volatile
  5812                           
  5813                           ; BSR set to: 59
  5814                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5815  01926A  81FD               	bsf	253,0,b	;volatile
  5816                           
  5817                           ; BSR set to: 59
  5818                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5819  01926C  0E43               	movlw	low _ring_buf1
  5820  01926E  6FF9               	movwf	249,b	;volatile
  5821  019270  0E04               	movlw	high _ring_buf1
  5822  019272  6FFA               	movwf	250,b	;volatile
  5823  019274  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5824  019276  6FFB               	movwf	251,b	;volatile
  5825                           
  5826                           ; BSR set to: 59
  5827                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5828  019278  9BFC               	bcf	252,5,b	;volatile
  5829                           
  5830                           ; BSR set to: 59
  5831                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5832  01927A  013D               	movlb	61	; () banked
  5833  01927C  831A               	bsf	26,1,b	;volatile
  5834                           
  5835                           ; BSR set to: 61
  5836                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5837  01927E  94BE               	bcf	190,2,c	;volatile
  5838                           
  5839                           ; BSR set to: 61
  5840                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5841  019280  0012               	return		;funcret
  5842  019282                     __end_of_init_display:
  5843                           	opt callstack 0
  5844                           
  5845 ;; *************** function _send_lcd_cmd_long *****************
  5846 ;; Defined at:
  5847 ;;		line 129 in file "eadog.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  cmd             1  [STACK] const unsigned char 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1  [STACK] void 
  5854 ;; Registers used:
  5855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5856 ;; Tracked objects:
  5857 ;;		On entry : 3F/0
  5858 ;;		On exit  : 3F/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5865 ;;Total ram usage:        0 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:   16
  5868 ;; This function calls:
  5869 ;;		_SPI1_Exchange8bit
  5870 ;;		_wdtdelay
  5871 ;; This function is called by:
  5872 ;;		_init_display
  5873 ;; This function uses a reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text7
  5877  01AB2A                     __ptext7:
  5878                           	opt callstack 0
  5879  01AB2A                     _send_lcd_cmd_long:
  5880                           	opt callstack 13
  5881                           
  5882                           ; BSR set to: 61
  5883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5884                           ;incstack = 0
  5885                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5886  01AB2A  92BC               	bcf	188,1,c	;volatile
  5887                           
  5888                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5889  01AB2C  94BC               	bcf	188,2,c	;volatile
  5890                           
  5891                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5892                           ;stkvar	_cmd @ sp[(0)+-1]
  5893  01AB2E  0EFF               	movlw	-1
  5894  01AB30  50E3               	movf	plusw1,w,c
  5895  01AB32  6EE6               	movwf	postinc1,c
  5896  01AB34  EC89  F0D7         	call	_SPI1_Exchange8bit	;wreg free
  5897                           
  5898                           ; BSR set to: 57
  5899                           ;eadog.c: 134:  wdtdelay(800);
  5900  01AB38  0E20               	movlw	32
  5901  01AB3A  6EE6               	movwf	postinc1,c
  5902  01AB3C  0E03               	movlw	3
  5903  01AB3E  6EE6               	movwf	postinc1,c
  5904  01AB40  0E00               	movlw	0
  5905  01AB42  6EE6               	movwf	postinc1,c
  5906  01AB44  0E00               	movlw	0
  5907  01AB46  6EE6               	movwf	postinc1,c
  5908  01AB48  ECEB  F0D0         	call	_wdtdelay	;wreg free
  5909                           
  5910                           ; BSR set to: 0
  5911  01AB4C  82BC               	bsf	188,1,c	;volatile
  5912                           
  5913                           ; BSR set to: 0
  5914                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5915  01AB4E  52E5               	movf	postdec1,f,c
  5916  01AB50  0012               	return		;funcret
  5917  01AB52                     __end_of_send_lcd_cmd_long:
  5918                           	opt callstack 0
  5919                           
  5920 ;; *************** function _send_lcd_cmd *****************
  5921 ;; Defined at:
  5922 ;;		line 117 in file "eadog.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  cmd             1  [STACK] const unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1  [STACK] void 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5931 ;; Tracked objects:
  5932 ;;		On entry : 3F/0
  5933 ;;		On exit  : 3F/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:   16
  5943 ;; This function calls:
  5944 ;;		_SPI1_Exchange8bit
  5945 ;;		_wdtdelay
  5946 ;; This function is called by:
  5947 ;;		_init_display
  5948 ;; This function uses a reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text8
  5952  01AB52                     __ptext8:
  5953                           	opt callstack 0
  5954  01AB52                     _send_lcd_cmd:
  5955                           	opt callstack 13
  5956                           
  5957                           ; BSR set to: 0
  5958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5959                           ;incstack = 0
  5960                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5961  01AB52  92BC               	bcf	188,1,c	;volatile
  5962                           
  5963                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5964  01AB54  94BC               	bcf	188,2,c	;volatile
  5965                           
  5966                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5967                           ;stkvar	_cmd @ sp[(0)+-1]
  5968  01AB56  0EFF               	movlw	-1
  5969  01AB58  50E3               	movf	plusw1,w,c
  5970  01AB5A  6EE6               	movwf	postinc1,c
  5971  01AB5C  EC89  F0D7         	call	_SPI1_Exchange8bit	;wreg free
  5972                           
  5973                           ; BSR set to: 57
  5974                           ;eadog.c: 122:  wdtdelay(30);
  5975  01AB60  0E1E               	movlw	30
  5976  01AB62  6EE6               	movwf	postinc1,c
  5977  01AB64  0E00               	movlw	0
  5978  01AB66  6EE6               	movwf	postinc1,c
  5979  01AB68  0E00               	movlw	0
  5980  01AB6A  6EE6               	movwf	postinc1,c
  5981  01AB6C  0E00               	movlw	0
  5982  01AB6E  6EE6               	movwf	postinc1,c
  5983  01AB70  ECEB  F0D0         	call	_wdtdelay	;wreg free
  5984                           
  5985                           ; BSR set to: 0
  5986  01AB74  82BC               	bsf	188,1,c	;volatile
  5987                           
  5988                           ; BSR set to: 0
  5989                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5990  01AB76  52E5               	movf	postdec1,f,c
  5991  01AB78  0012               	return		;funcret
  5992  01AB7A                     __end_of_send_lcd_cmd:
  5993                           	opt callstack 0
  5994                           
  5995 ;; *************** function _SPI1_Exchange8bit *****************
  5996 ;; Defined at:
  5997 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  data            1  [STACK] unsigned char 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1  [STACK] unsigned char 
  6004 ;; Registers used:
  6005 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 3F/39
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6015 ;;Total ram usage:        0 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:   15
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		_send_lcd_cmd
  6022 ;;		_send_lcd_cmd_long
  6023 ;; This function uses a reentrant model
  6024 ;;
  6025                           
  6026                           	psect	text9
  6027  01AF12                     __ptext9:
  6028                           	opt callstack 0
  6029  01AF12                     _SPI1_Exchange8bit:
  6030                           	opt callstack 13
  6031                           
  6032                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6033                           
  6034                           ; BSR set to: 0
  6035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6036                           ;incstack = 0
  6037  01AF12  0E01               	movlw	1
  6038  01AF14  013D               	movlb	61	; () banked
  6039  01AF16  6F12               	movwf	18,b	;volatile
  6040                           
  6041                           ; BSR set to: 61
  6042                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6043                           ;stkvar	_data @ sp[(0)+-1]
  6044  01AF18  0EFF               	movlw	-1
  6045  01AF1A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6046  01AF20                     l807:
  6047                           
  6048                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6049  01AF20  0139               	movlb	57	; () banked
  6050  01AF22  A9A2               	btfss	162,4,b	;volatile
  6051  01AF24  D7FD               	goto	l807
  6052                           
  6053                           ; BSR set to: 57
  6054                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6055  01AF26  006F F440  F001    	movff	15632,btemp	;volatile
  6056                           
  6057                           ; BSR set to: 57
  6058                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6059  01AF2C  52E5               	movf	postdec1,f,c
  6060  01AF2E  0012               	return		;funcret
  6061  01AF30                     __end_of_SPI1_Exchange8bit:
  6062                           	opt callstack 0
  6063                           
  6064 ;; *************** function _ringBufS_init *****************
  6065 ;; Defined at:
  6066 ;;		line 22 in file "ringbufs.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  _this           2  [STACK] PTR volatile struct ring
  6069 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1  [STACK] void 
  6074 ;; Registers used:
  6075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:   16
  6088 ;; This function calls:
  6089 ;;		_memset
  6090 ;; This function is called by:
  6091 ;;		_init_display
  6092 ;; This function uses a reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text10
  6096  01AB7A                     __ptext10:
  6097                           	opt callstack 0
  6098  01AB7A                     _ringBufS_init:
  6099                           	opt callstack 13
  6100                           
  6101                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6102                           
  6103                           ; BSR set to: 57
  6104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6105                           ;incstack = 0
  6106  01AB7A  0E43               	movlw	67
  6107  01AB7C  6EE6               	movwf	postinc1,c
  6108  01AB7E  0E00               	movlw	0
  6109  01AB80  6EE6               	movwf	postinc1,c
  6110  01AB82  0E00               	movlw	0
  6111  01AB84  6EE6               	movwf	postinc1,c
  6112  01AB86  0E00               	movlw	0
  6113  01AB88  6EE6               	movwf	postinc1,c
  6114                           
  6115                           ;stkvar	__this @ sp[(-4)+-2]
  6116  01AB8A  0EFA               	movlw	-6
  6117  01AB8C  006F FF8F FFE6     	movff	plusw1,postinc1
  6118  01AB92  006F FF8F FFE6     	movff	plusw1,postinc1
  6119  01AB98  ECA6  F0B0         	call	_memset	;wreg free
  6120                           
  6121                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6122  01AB9C  52E5               	movf	postdec1,f,c
  6123  01AB9E  52E5               	movf	postdec1,f,c
  6124  01ABA0  0012               	return		;funcret
  6125  01ABA2                     __end_of_ringBufS_init:
  6126                           	opt callstack 0
  6127                           
  6128 ;; *************** function _init_bsoc *****************
  6129 ;; Defined at:
  6130 ;;		line 88 in file "bsoc.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1  [STACK] void 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6139 ;; Tracked objects:
  6140 ;;		On entry : 3F/1
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:   18
  6151 ;; This function calls:
  6152 ;;		_TMR3_SetInterruptHandler
  6153 ;;		_Volts_to_SOC
  6154 ;;		___fldiv
  6155 ;;		___flmul
  6156 ;;		___fltol
  6157 ;;		___xxtofl
  6158 ;;		_conv_raw_result
  6159 ;; This function is called by:
  6160 ;;		_main
  6161 ;; This function uses a reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text11
  6165  017FFE                     __ptext11:
  6166                           	opt callstack 0
  6167  017FFE                     _init_bsoc:
  6168                           	opt callstack 12
  6169                           
  6170                           ;bsoc.c: 93:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6171                           
  6172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6173                           ;incstack = 0
  6174  017FFE  0E00               	movlw	0
  6175  018000  6EE6               	movwf	postinc1,c
  6176  018002  0E00               	movlw	0
  6177  018004  6EE6               	movwf	postinc1,c
  6178  018006  0E7A               	movlw	122
  6179  018008  6EE6               	movwf	postinc1,c
  6180  01800A  0E44               	movlw	68
  6181  01800C  6EE6               	movwf	postinc1,c
  6182  01800E  0E00               	movlw	0
  6183  018010  6EE6               	movwf	postinc1,c
  6184  018012  0E04               	movlw	4
  6185  018014  6EE6               	movwf	postinc1,c
  6186  018016  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  6187  01801A  0060  F007  FFE6   	movff	btemp,postinc1
  6188  018020  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6189  018026  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6190  01802C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6191  018032  EC46  F0BF         	call	___fltol	;wreg free
  6192  018036  0060  F007  FFE6   	movff	btemp,postinc1
  6193  01803C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6194  018042  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6195  018048  0060  F013  FFE6   	movff	btemp+3,postinc1
  6196  01804E  0E00               	movlw	0
  6197  018050  6EE6               	movwf	postinc1,c
  6198  018052  EC2E  F0B9         	call	___xxtofl	;wreg free
  6199  018056  0060  F007  FFE6   	movff	btemp,postinc1
  6200  01805C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6201  018062  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6202  018068  0060  F013  FFE6   	movff	btemp+3,postinc1
  6203  01806E  EC0D  F097         	call	___flmul	;wreg free
  6204  018072  0060  F007  FFE6   	movff	btemp,postinc1
  6205  018078  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6206  01807E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6207  018084  0060  F013  FFE6   	movff	btemp+3,postinc1
  6208  01808A  EC46  F0BF         	call	___fltol	;wreg free
  6209  01808E  0060  F007  FFE6   	movff	btemp,postinc1
  6210  018094  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6211  01809A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6212  0180A0  0060  F013  FFE6   	movff	btemp+3,postinc1
  6213  0180A6  EC2C  F0CD         	call	_Volts_to_SOC	;wreg free
  6214  0180AA  0060  F004  F1AA   	movff	btemp,_C+170	;volatile
  6215  0180B0  0060  F008  F1AB   	movff	btemp+1,_C+171	;volatile
  6216                           
  6217                           ;bsoc.c: 94:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6218  0180B6  0060  F623  FFE6   	movff	_C+136,postinc1
  6219  0180BC  0060  F627  FFE6   	movff	_C+137,postinc1
  6220  0180C2  0060  F62B  FFE6   	movff	_C+138,postinc1
  6221  0180C8  0060  F62F  FFE6   	movff	_C+139,postinc1
  6222  0180CE  0E00               	movlw	0
  6223  0180D0  6EE6               	movwf	postinc1,c
  6224  0180D2  0E00               	movlw	0
  6225  0180D4  6EE6               	movwf	postinc1,c
  6226  0180D6  0EC8               	movlw	200
  6227  0180D8  6EE6               	movwf	postinc1,c
  6228  0180DA  0E42               	movlw	66
  6229  0180DC  6EE6               	movwf	postinc1,c
  6230  0180DE  0101               	movlb	1	; () banked
  6231  0180E0  51AA               	movf	(_C+170)& (0+255),w,b	;volatile
  6232  0180E2  6E09               	movwf	(btemp+8)^0,c
  6233  0180E4  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
  6234  0180E6  6E0A               	movwf	(btemp+9)^0,c
  6235  0180E8  6A0B               	clrf	(btemp+10)^0,c
  6236  0180EA  6A0C               	clrf	(btemp+11)^0,c
  6237  0180EC  0060  F027  FFE6   	movff	btemp+8,postinc1
  6238  0180F2  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6239  0180F8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6240  0180FE  0060  F033  FFE6   	movff	btemp+11,postinc1
  6241  018104  0E00               	movlw	0
  6242  018106  6EE6               	movwf	postinc1,c
  6243  018108  EC2E  F0B9         	call	___xxtofl	;wreg free
  6244  01810C  0060  F007  FFE6   	movff	btemp,postinc1
  6245  018112  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6246  018118  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6247  01811E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6248  018124  EC4F  F0A2         	call	___fldiv	;wreg free
  6249  018128  0060  F007  FFE6   	movff	btemp,postinc1
  6250  01812E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6251  018134  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6252  01813A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6253  018140  EC0D  F097         	call	___flmul	;wreg free
  6254  018144  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  6255  01814A  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  6256  018150  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  6257  018156  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  6258                           
  6259                           ;bsoc.c: 95:  TMR3_SetInterruptHandler(calc_bsoc);
  6260  01815C  0E00               	movlw	low _calc_bsoc
  6261  01815E  6EE6               	movwf	postinc1,c
  6262  018160  0E3E               	movlw	high _calc_bsoc
  6263  018162  6EE6               	movwf	postinc1,c
  6264  018164  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6265  018166  6EE6               	movwf	postinc1,c
  6266  018168  EC49  F0D6         	call	_TMR3_SetInterruptHandler	;wreg free
  6267                           
  6268                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6269  01816C  0012               	return		;funcret
  6270  01816E                     __end_of_init_bsoc:
  6271                           	opt callstack 0
  6272                           
  6273 ;; *************** function _Volts_to_SOC *****************
  6274 ;; Defined at:
  6275 ;;		line 152 in file "bsoc.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  cvoltage        4  [STACK] unsigned long 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;		None
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  2  [STACK] unsigned short 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/1
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;Total ram usage:        0 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:   15
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_init_bsoc
  6300 ;; This function uses a reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text12
  6304  019A58                     __ptext12:
  6305                           	opt callstack 0
  6306  019A58                     _Volts_to_SOC:
  6307                           	opt callstack 14
  6308                           
  6309                           ;bsoc.c: 152: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 153: {;bsoc.c: 154:  stat
      +                          ic uint8_t slot;;bsoc.c: 156:  C.soc = 0;
  6310                           
  6311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6312                           ;incstack = 0
  6313  019A58  0101               	movlb	1	; () banked
  6314  019A5A  6BAA               	clrf	(_C+170)& (0+255),b	;volatile
  6315  019A5C  6BAB               	clrf	(_C+171)& (0+255),b	;volatile
  6316                           
  6317                           ;bsoc.c: 157:  for (slot = 0; slot < 26; slot++) {
  6318  019A5E  6A2D               	clrf	Volts_to_SOC@slot^0,c
  6319  019A60                     l10172:
  6320                           
  6321                           ;bsoc.c: 158:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6322                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6323  019A60  502D               	movf	Volts_to_SOC@slot^0,w,c
  6324  019A62  0D08               	mullw	8
  6325  019A64  0E3D               	movlw	low _BVSOC_TABLE
  6326  019A66  24F3               	addwf	243,w,c
  6327  019A68  6EF6               	movwf	tblptrl,c
  6328  019A6A  0EFB               	movlw	high _BVSOC_TABLE
  6329  019A6C  20F4               	addwfc	244,w,c
  6330  019A6E  6EF7               	movwf	tblptrh,c
  6331  019A70                     	if	1	;There are 3 active tblptr bytes
  6332  019A70  6AF8               	clrf	tblptru,c
  6333  019A72  0E00               	movlw	low (__mediumconst shr (0+16))
  6334  019A74  22F8               	addwfc	tblptru,f,c
  6335  019A76                     	endif
  6336  019A76  0EFC               	movlw	-4
  6337  019A78  50E3               	movf	plusw1,w,c
  6338  019A7A  0009               	tblrd		*+
  6339  019A7C  5CF5               	subwf	tablat,w,c
  6340  019A7E  0EFD               	movlw	-3
  6341  019A80  50E3               	movf	plusw1,w,c
  6342  019A82  0009               	tblrd		*+
  6343  019A84  58F5               	subwfb	tablat,w,c
  6344  019A86  0EFE               	movlw	-2
  6345  019A88  50E3               	movf	plusw1,w,c
  6346  019A8A  0009               	tblrd		*+
  6347  019A8C  58F5               	subwfb	tablat,w,c
  6348  019A8E  0EFF               	movlw	-1
  6349  019A90  50E3               	movf	plusw1,w,c
  6350  019A92  0009               	tblrd		*+
  6351  019A94  58F5               	subwfb	tablat,w,c
  6352  019A96  B0D8               	btfsc	status,0,c
  6353  019A98  D017               	goto	l10176
  6354                           
  6355                           ;bsoc.c: 159:    C.soc = BVSOC_TABLE[slot][1];
  6356  019A9A  502D               	movf	Volts_to_SOC@slot^0,w,c
  6357  019A9C  0D08               	mullw	8
  6358  019A9E  0E04               	movlw	4
  6359  019AA0  26F3               	addwf	243,f,c
  6360  019AA2  0E00               	movlw	0
  6361  019AA4  22F4               	addwfc	244,f,c
  6362  019AA6  0E3D               	movlw	low _BVSOC_TABLE
  6363  019AA8  24F3               	addwf	243,w,c
  6364  019AAA  6EF6               	movwf	tblptrl,c
  6365  019AAC  0EFB               	movlw	high _BVSOC_TABLE
  6366  019AAE  20F4               	addwfc	244,w,c
  6367  019AB0  6EF7               	movwf	tblptrh,c
  6368  019AB2                     	if	1	;There are 3 active tblptr bytes
  6369  019AB2  6AF8               	clrf	tblptru,c
  6370  019AB4  0E00               	movlw	low (__mediumconst shr (0+16))
  6371  019AB6  22F8               	addwfc	tblptru,f,c
  6372  019AB8                     	endif
  6373  019AB8  0009               	tblrd		*+
  6374  019ABA  006F FFD4  F1AA    	movff	tablat,_C+170	;volatile
  6375  019AC0  000A               	tblrd		*-
  6376  019AC2  006F FFD4  F1AB    	movff	tablat,_C+171	;volatile
  6377  019AC8                     l10176:
  6378                           
  6379                           ;bsoc.c: 161:  }
  6380  019AC8  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  6381  019ACA  0E19               	movlw	25
  6382  019ACC  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  6383  019ACE  D7C8               	goto	l10172
  6384                           
  6385                           ;bsoc.c: 163:  return C.soc;
  6386  019AD0  EE20  F1AA         	lfsr	2,_C+170	;volatile
  6387  019AD4  006F FF78  F001    	movff	postinc2,btemp
  6388  019ADA  006F FF74  F002    	movff	postdec2,btemp+1
  6389                           
  6390                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6391  019AE0  52E5               	movf	postdec1,f,c
  6392  019AE2  52E5               	movf	postdec1,f,c
  6393  019AE4  52E5               	movf	postdec1,f,c
  6394  019AE6  52E5               	movf	postdec1,f,c
  6395  019AE8  0012               	return		;funcret
  6396  019AEA                     __end_of_Volts_to_SOC:
  6397                           	opt callstack 0
  6398                           
  6399 ;; *************** function _hid_display *****************
  6400 ;; Defined at:
  6401 ;;		line 17 in file "hid.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  h               1  [STACK] PTR struct H_data
  6404 ;;		 -> H(7), 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1  [STACK] PTR struct H_data
  6409 ;; Registers used:
  6410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6411 ;; Tracked objects:
  6412 ;;		On entry : 3F/1
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:   17
  6423 ;; This function calls:
  6424 ;;		_hid_input
  6425 ;; This function is called by:
  6426 ;;		_main
  6427 ;; This function uses a reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text13
  6431  018FA2                     __ptext13:
  6432                           	opt callstack 0
  6433  018FA2                     _hid_display:
  6434                           	opt callstack 13
  6435                           
  6436                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6437                           ;stkvar	_h @ sp[(0)+-1]
  6438                           
  6439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6440                           ;incstack = 0
  6441  018FA2  0EFF               	movlw	-1
  6442  018FA4  50E3               	movf	plusw1,w,c
  6443  018FA6  6EE6               	movwf	postinc1,c
  6444  018FA8  EC07  F0CE         	call	_hid_input	;wreg free
  6445                           
  6446                           ;hid.c: 21:  switch (h->h_state) {
  6447  018FAC  D066               	goto	l10524
  6448  018FAE                     l10502:
  6449                           
  6450                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6451                           ;stkvar	_h @ sp[(0)+-1]
  6452  018FAE  0EFF               	movlw	-1
  6453  018FB0  50E3               	movf	plusw1,w,c
  6454  018FB2  6ED9               	movwf	fsr2l,c
  6455  018FB4  6ADA               	clrf	fsr2h,c
  6456  018FB6  0E01               	movlw	1
  6457  018FB8  26D9               	addwf	fsr2l,f,c
  6458  018FBA  0E01               	movlw	1
  6459  018FBC  6EDF               	movwf	indf2,c
  6460                           
  6461                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6462                           ;stkvar	_h @ sp[(0)+-1]
  6463  018FBE  0EFF               	movlw	-1
  6464  018FC0  50E3               	movf	plusw1,w,c
  6465  018FC2  6ED9               	movwf	fsr2l,c
  6466  018FC4  6ADA               	clrf	fsr2h,c
  6467  018FC6  0E00               	movlw	0
  6468  018FC8  6EDF               	movwf	indf2,c
  6469                           
  6470                           ;hid.c: 25:   h->wait_enter = 1;
  6471                           ;stkvar	_h @ sp[(0)+-1]
  6472  018FCA  0EFF               	movlw	-1
  6473  018FCC  50E3               	movf	plusw1,w,c
  6474  018FCE  6ED9               	movwf	fsr2l,c
  6475  018FD0  6ADA               	clrf	fsr2h,c
  6476  018FD2  0E04               	movlw	4
  6477  018FD4  26D9               	addwf	fsr2l,f,c
  6478  018FD6  0E01               	movlw	1
  6479  018FD8  6EDF               	movwf	indf2,c
  6480                           
  6481                           ;hid.c: 26:   h->wait_select = 1;
  6482                           ;stkvar	_h @ sp[(0)+-1]
  6483  018FDA  0EFF               	movlw	-1
  6484  018FDC  50E3               	movf	plusw1,w,c
  6485  018FDE  6ED9               	movwf	fsr2l,c
  6486  018FE0  6ADA               	clrf	fsr2h,c
  6487  018FE2  0E02               	movlw	2
  6488  018FE4  26D9               	addwf	fsr2l,f,c
  6489  018FE6  0E01               	movlw	1
  6490  018FE8  6EDF               	movwf	indf2,c
  6491                           
  6492                           ;hid.c: 27:   h->select_p = SW_OFF;
  6493                           ;stkvar	_h @ sp[(0)+-1]
  6494  018FEA  0EFF               	movlw	-1
  6495  018FEC  50E3               	movf	plusw1,w,c
  6496  018FEE  6ED9               	movwf	fsr2l,c
  6497  018FF0  6ADA               	clrf	fsr2h,c
  6498  018FF2  0E03               	movlw	3
  6499  018FF4  26D9               	addwf	fsr2l,f,c
  6500  018FF6  0E00               	movlw	0
  6501  018FF8  6EDF               	movwf	indf2,c
  6502                           
  6503                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6504                           ;stkvar	_h @ sp[(0)+-1]
  6505  018FFA  0EFF               	movlw	-1
  6506  018FFC  50E3               	movf	plusw1,w,c
  6507  018FFE  6ED9               	movwf	fsr2l,c
  6508  019000  6ADA               	clrf	fsr2h,c
  6509  019002  0E05               	movlw	5
  6510  019004  26D9               	addwf	fsr2l,f,c
  6511  019006  0E00               	movlw	0
  6512  019008  D036               	goto	L1
  6513  01900A                     l10514:
  6514                           
  6515                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6516                           ;stkvar	_h @ sp[(0)+-1]
  6517  01900A  0EFF               	movlw	-1
  6518  01900C  50E3               	movf	plusw1,w,c
  6519  01900E  6ED9               	movwf	fsr2l,c
  6520  019010  6ADA               	clrf	fsr2h,c
  6521  019012  0E02               	movlw	2
  6522  019014  26D9               	addwf	fsr2l,f,c
  6523  019016  50DF               	movf	indf2,w,c
  6524  019018  A4D8               	btfss	status,2,c
  6525  01901A  D042               	goto	l1930
  6526                           
  6527                           ;stkvar	_h @ sp[(0)+-1]
  6528  01901C  0EFF               	movlw	-1
  6529  01901E  50E3               	movf	plusw1,w,c
  6530  019020  6ED9               	movwf	fsr2l,c
  6531  019022  6ADA               	clrf	fsr2h,c
  6532  019024  0E03               	movlw	3
  6533  019026  26D9               	addwf	fsr2l,f,c
  6534  019028  50DF               	movf	indf2,w,c
  6535  01902A  A4D8               	btfss	status,2,c
  6536  01902C  D039               	goto	l1930
  6537                           
  6538                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6539                           ;stkvar	_h @ sp[(0)+-1]
  6540  01902E  0EFF               	movlw	-1
  6541  019030  50E3               	movf	plusw1,w,c
  6542  019032  6ED9               	movwf	fsr2l,c
  6543  019034  6ADA               	clrf	fsr2h,c
  6544  019036  0E06               	movlw	6
  6545  019038  26D9               	addwf	fsr2l,f,c
  6546                           
  6547                           ;stkvar	_h @ sp[(0)+-1]
  6548  01903A  0EFF               	movlw	-1
  6549  01903C  50E3               	movf	plusw1,w,c
  6550  01903E  6EE9               	movwf	fsr0l,c
  6551  019040  6AEA               	clrf	fsr0h,c
  6552  019042  0E06               	movlw	6
  6553  019044  26E9               	addwf	fsr0l,f,c
  6554  019046  2AEF               	incf	indf0,f,c
  6555  019048  50EF               	movf	indf0,w,c
  6556  01904A  0B03               	andlw	3
  6557  01904C  6EDF               	movwf	indf2,c
  6558                           
  6559                           ;hid.c: 34:    h->hid_display = h->sequence;
  6560                           ;stkvar	_h @ sp[(0)+-1]
  6561  01904E  0EFF               	movlw	-1
  6562  019050  50E3               	movf	plusw1,w,c
  6563  019052  6ED9               	movwf	fsr2l,c
  6564  019054  6ADA               	clrf	fsr2h,c
  6565  019056  0E06               	movlw	6
  6566  019058  26D9               	addwf	fsr2l,f,c
  6567                           
  6568                           ;stkvar	_h @ sp[(0)+-1]
  6569  01905A  0EFF               	movlw	-1
  6570  01905C  50E3               	movf	plusw1,w,c
  6571  01905E  6EE9               	movwf	fsr0l,c
  6572  019060  6AEA               	clrf	fsr0h,c
  6573  019062  006F FF7F FFEF     	movff	indf2,indf0
  6574                           
  6575                           ;hid.c: 35:    h->wait_select = 1;
  6576                           ;stkvar	_h @ sp[(0)+-1]
  6577  019068  0EFF               	movlw	-1
  6578  01906A  50E3               	movf	plusw1,w,c
  6579  01906C  6ED9               	movwf	fsr2l,c
  6580  01906E  6ADA               	clrf	fsr2h,c
  6581  019070  0E02               	movlw	2
  6582  019072  26D9               	addwf	fsr2l,f,c
  6583  019074  0E01               	movlw	1
  6584  019076                     L1:
  6585  019076  6EDF               	movwf	indf2,c
  6586  019078  D013               	goto	l1930
  6587  01907A                     l10524:
  6588                           
  6589                           ;stkvar	_h @ sp[(0)+-1]
  6590  01907A  0EFF               	movlw	-1
  6591  01907C  50E3               	movf	plusw1,w,c
  6592  01907E  6ED9               	movwf	fsr2l,c
  6593  019080  6ADA               	clrf	fsr2h,c
  6594  019082  0E01               	movlw	1
  6595  019084  26D9               	addwf	fsr2l,f,c
  6596  019086  50DF               	movf	indf2,w,c
  6597  019088  6E0B               	movwf	(btemp+10)^0,c
  6598  01908A  6A0C               	clrf	(btemp+11)^0,c
  6599                           
  6600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6601                           ; Switch size 1, requested type "simple"
  6602                           ; Number of cases is 1, Range of values is 0 to 0
  6603                           ; switch strategies available:
  6604                           ; Name         Instructions Cycles
  6605                           ; simple_byte            4     3 (average)
  6606                           ;	Chosen strategy is simple_byte
  6607  01908C  500C               	movf	(btemp+11)^0,w,c
  6608  01908E  0A00               	xorlw	0	; case 0
  6609  019090  A4D8               	btfss	status,2,c
  6610  019092  D7BB               	goto	l10514
  6611                           
  6612                           ; Switch size 1, requested type "simple"
  6613                           ; Number of cases is 2, Range of values is 0 to 1
  6614                           ; switch strategies available:
  6615                           ; Name         Instructions Cycles
  6616                           ; simple_byte            7     4 (average)
  6617                           ;	Chosen strategy is simple_byte
  6618  019094  500B               	movf	(btemp+10)^0,w,c
  6619  019096  0A00               	xorlw	0	; case 0
  6620  019098  B4D8               	btfsc	status,2,c
  6621  01909A  D789               	goto	l10502
  6622  01909C  0A01               	xorlw	1	; case 1
  6623  01909E  D7B5               	goto	l10514
  6624  0190A0                     l1930:
  6625                           
  6626                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6627  0190A0  52E5               	movf	postdec1,f,c
  6628  0190A2  0012               	return		;funcret
  6629  0190A4                     __end_of_hid_display:
  6630                           	opt callstack 0
  6631                           
  6632 ;; *************** function _hid_input *****************
  6633 ;; Defined at:
  6634 ;;		line 3 in file "hid.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  h               1  [STACK] PTR struct H_data
  6637 ;;		 -> H(7), 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1  [STACK] PTR struct H_data
  6642 ;; Registers used:
  6643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/1
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6653 ;;Total ram usage:        0 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:   16
  6656 ;; This function calls:
  6657 ;;		_get_switch
  6658 ;; This function is called by:
  6659 ;;		_hid_display
  6660 ;; This function uses a reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text14
  6664  019C0E                     __ptext14:
  6665                           	opt callstack 0
  6666  019C0E                     _hid_input:
  6667                           	opt callstack 13
  6668                           
  6669                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6670                           
  6671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6672                           ;incstack = 0
  6673  019C0E  0E02               	movlw	2
  6674  019C10  6EE6               	movwf	postinc1,c
  6675  019C12  EC3E  F0D5         	call	_get_switch	;wreg free
  6676  019C16  5001               	movf	btemp^0,w,c
  6677  019C18  B4D8               	btfsc	status,2,c
  6678  019C1A  D01C               	goto	l10104
  6679                           
  6680                           ;hid.c: 6:   h->wait_select = 0;
  6681                           ;stkvar	_h @ sp[(0)+-1]
  6682  019C1C  0EFF               	movlw	-1
  6683  019C1E  50E3               	movf	plusw1,w,c
  6684  019C20  6ED9               	movwf	fsr2l,c
  6685  019C22  6ADA               	clrf	fsr2h,c
  6686  019C24  0E02               	movlw	2
  6687  019C26  26D9               	addwf	fsr2l,f,c
  6688  019C28  0E00               	movlw	0
  6689  019C2A  6EDF               	movwf	indf2,c
  6690                           
  6691                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6692  019C2C  0E02               	movlw	2
  6693  019C2E  6EE6               	movwf	postinc1,c
  6694  019C30  EC3E  F0D5         	call	_get_switch	;wreg free
  6695  019C34  5001               	movf	btemp^0,w,c
  6696  019C36  B4D8               	btfsc	status,2,c
  6697  019C38  D003               	goto	u9290
  6698  019C3A  6A0C               	clrf	(btemp+11)^0,c
  6699  019C3C  2A0C               	incf	(btemp+11)^0,f,c
  6700  019C3E  D001               	goto	u9308
  6701  019C40                     u9290:
  6702  019C40  6A0C               	clrf	(btemp+11)^0,c
  6703  019C42                     u9308:
  6704                           
  6705                           ;stkvar	_h @ sp[(0)+-1]
  6706  019C42  0EFF               	movlw	-1
  6707  019C44  50E3               	movf	plusw1,w,c
  6708  019C46  6ED9               	movwf	fsr2l,c
  6709  019C48  6ADA               	clrf	fsr2h,c
  6710  019C4A  0E03               	movlw	3
  6711  019C4C  26D9               	addwf	fsr2l,f,c
  6712  019C4E  0060  F033  FFDF   	movff	btemp+11,indf2
  6713  019C54                     l10104:
  6714                           
  6715                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6716  019C54  0E03               	movlw	3
  6717  019C56  6EE6               	movwf	postinc1,c
  6718  019C58  EC3E  F0D5         	call	_get_switch	;wreg free
  6719  019C5C  5001               	movf	btemp^0,w,c
  6720  019C5E  B4D8               	btfsc	status,2,c
  6721  019C60  D01C               	goto	l1921
  6722                           
  6723                           ;hid.c: 11:   h->wait_enter = 0;
  6724                           ;stkvar	_h @ sp[(0)+-1]
  6725  019C62  0EFF               	movlw	-1
  6726  019C64  50E3               	movf	plusw1,w,c
  6727  019C66  6ED9               	movwf	fsr2l,c
  6728  019C68  6ADA               	clrf	fsr2h,c
  6729  019C6A  0E04               	movlw	4
  6730  019C6C  26D9               	addwf	fsr2l,f,c
  6731  019C6E  0E00               	movlw	0
  6732  019C70  6EDF               	movwf	indf2,c
  6733                           
  6734                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6735  019C72  0E03               	movlw	3
  6736  019C74  6EE6               	movwf	postinc1,c
  6737  019C76  EC3E  F0D5         	call	_get_switch	;wreg free
  6738  019C7A  5001               	movf	btemp^0,w,c
  6739  019C7C  B4D8               	btfsc	status,2,c
  6740  019C7E  D003               	goto	u9320
  6741  019C80  6A0C               	clrf	(btemp+11)^0,c
  6742  019C82  2A0C               	incf	(btemp+11)^0,f,c
  6743  019C84  D001               	goto	u9338
  6744  019C86                     u9320:
  6745  019C86  6A0C               	clrf	(btemp+11)^0,c
  6746  019C88                     u9338:
  6747                           
  6748                           ;stkvar	_h @ sp[(0)+-1]
  6749  019C88  0EFF               	movlw	-1
  6750  019C8A  50E3               	movf	plusw1,w,c
  6751  019C8C  6ED9               	movwf	fsr2l,c
  6752  019C8E  6ADA               	clrf	fsr2h,c
  6753  019C90  0E05               	movlw	5
  6754  019C92  26D9               	addwf	fsr2l,f,c
  6755  019C94  0060  F033  FFDF   	movff	btemp+11,indf2
  6756  019C9A                     l1921:
  6757                           
  6758                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6759  019C9A  52E5               	movf	postdec1,f,c
  6760  019C9C  0012               	return		;funcret
  6761  019C9E                     __end_of_hid_input:
  6762                           	opt callstack 0
  6763                           
  6764 ;; *************** function _get_switch *****************
  6765 ;; Defined at:
  6766 ;;		line 18 in file "dio.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  i               1  [STACK] unsigned char 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;		None
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  1  [STACK] enum E17021
  6773 ;; Registers used:
  6774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/2
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6784 ;;Total ram usage:        0 bytes
  6785 ;; Hardware stack levels used:    1
  6786 ;; Hardware stack levels required when called:   15
  6787 ;; This function calls:
  6788 ;;		Nothing
  6789 ;; This function is called by:
  6790 ;;		_main
  6791 ;;		_hid_input
  6792 ;; This function uses a reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text15
  6796  01AA7C                     __ptext15:
  6797                           	opt callstack 0
  6798  01AA7C                     _get_switch:
  6799                           	opt callstack 13
  6800                           
  6801                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6802                           ;stkvar	_i @ sp[(0)+-1]
  6803                           
  6804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6805                           ;incstack = 0
  6806  01AA7C  0EFF               	movlw	-1
  6807  01AA7E  006F FF8C  F001    	movff	plusw1,btemp
  6808  01AA84  0E03               	movlw	3
  6809  01AA86  6401               	cpfsgt	btemp^0,c
  6810  01AA88  D002               	goto	l9368
  6811                           
  6812                           ;dio.c: 21:   return SW_OFF;
  6813  01AA8A  0E00               	movlw	0
  6814  01AA8C  D00A               	goto	L2
  6815  01AA8E                     l9368:
  6816                           
  6817                           ;dio.c: 23:  return S.button[i].sw;
  6818                           ;stkvar	_i @ sp[(0)+-1]
  6819  01AA8E  0EFF               	movlw	-1
  6820  01AA90  50E3               	movf	plusw1,w,c
  6821  01AA92  0D05               	mullw	5
  6822  01AA94  0EBC               	movlw	low _S
  6823  01AA96  24F3               	addwf	243,w,c
  6824  01AA98  6ED9               	movwf	fsr2l,c
  6825  01AA9A  0E02               	movlw	high _S
  6826  01AA9C  20F4               	addwfc	prodh,w,c
  6827  01AA9E  6EDA               	movwf	fsr2h,c
  6828  01AAA0  50DF               	movf	indf2,w,c
  6829  01AAA2                     L2:
  6830  01AAA2  6E01               	movwf	btemp^0,c
  6831                           
  6832                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6833  01AAA4  52E5               	movf	postdec1,f,c
  6834  01AAA6  0012               	return		;funcret
  6835  01AAA8                     __end_of_get_switch:
  6836                           	opt callstack 0
  6837                           
  6838 ;; *************** function _esr_check *****************
  6839 ;; Defined at:
  6840 ;;		line 169 in file "bsoc.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;		None
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;		None
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  4  [STACK] float 
  6847 ;; Registers used:
  6848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6858 ;;Total ram usage:        0 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:   18
  6861 ;; This function calls:
  6862 ;;		_WaitMs
  6863 ;;		___fldiv
  6864 ;;		___flsub
  6865 ;;		_conv_raw_result
  6866 ;;		_fabsf
  6867 ;;		_set_load_relay_one
  6868 ;;		_set_load_relay_two
  6869 ;;		_update_adc_result
  6870 ;; This function is called by:
  6871 ;;		_main
  6872 ;; This function uses a reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text16
  6876  017660                     __ptext16:
  6877                           	opt callstack 0
  6878  017660                     _esr_check:
  6879                           	opt callstack 12
  6880                           
  6881                           ;bsoc.c: 171:  set_load_relay_one(0);
  6882                           
  6883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6884                           ;incstack = 0
  6885  017660  0E00               	movlw	0
  6886  017662  6EE6               	movwf	postinc1,c
  6887  017664  EC5F  F0D8         	call	_set_load_relay_one	;wreg free
  6888                           
  6889                           ;bsoc.c: 172:  set_load_relay_two(0);
  6890  017668  0E00               	movlw	0
  6891  01766A  6EE6               	movwf	postinc1,c
  6892  01766C  EC57  F0D8         	call	_set_load_relay_two	;wreg free
  6893                           
  6894                           ;bsoc.c: 173:  WaitMs(10000);
  6895  017670  0E10               	movlw	16
  6896  017672  6EE6               	movwf	postinc1,c
  6897  017674  0E27               	movlw	39
  6898  017676  6EE6               	movwf	postinc1,c
  6899  017678  EC43  F0D4         	call	_WaitMs	;wreg free
  6900                           
  6901                           ;bsoc.c: 174:  update_adc_result();
  6902  01767C  ECEF  F0D3         	call	_update_adc_result	;wreg free
  6903                           
  6904                           ;bsoc.c: 175:  C.bv_noload = conv_raw_result(V_BAT, CONV);
  6905  017680  0E00               	movlw	0
  6906  017682  6EE6               	movwf	postinc1,c
  6907  017684  0E04               	movlw	4
  6908  017686  6EE6               	movwf	postinc1,c
  6909  017688  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  6910  01768C  0060  F004  F1E7   	movff	btemp,_C+231	;volatile
  6911  017692  0060  F008  F1E8   	movff	btemp+1,_C+232	;volatile
  6912  017698  0060  F00C  F1E9   	movff	btemp+2,_C+233	;volatile
  6913  01769E  0060  F010  F1EA   	movff	btemp+3,_C+234	;volatile
  6914                           
  6915                           ;bsoc.c: 177:  set_load_relay_one(1);
  6916  0176A4  0E01               	movlw	1
  6917  0176A6  6EE6               	movwf	postinc1,c
  6918  0176A8  EC5F  F0D8         	call	_set_load_relay_one	;wreg free
  6919                           
  6920                           ;bsoc.c: 178:  WaitMs(10000);
  6921  0176AC  0E10               	movlw	16
  6922  0176AE  6EE6               	movwf	postinc1,c
  6923  0176B0  0E27               	movlw	39
  6924  0176B2  6EE6               	movwf	postinc1,c
  6925  0176B4  EC43  F0D4         	call	_WaitMs	;wreg free
  6926                           
  6927                           ;bsoc.c: 179:  update_adc_result();
  6928  0176B8  ECEF  F0D3         	call	_update_adc_result	;wreg free
  6929                           
  6930                           ;bsoc.c: 180:  C.bv_one_load = conv_raw_result(V_BAT, CONV);
  6931  0176BC  0E00               	movlw	0
  6932  0176BE  6EE6               	movwf	postinc1,c
  6933  0176C0  0E04               	movlw	4
  6934  0176C2  6EE6               	movwf	postinc1,c
  6935  0176C4  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  6936  0176C8  0060  F004  F1EB   	movff	btemp,_C+235	;volatile
  6937  0176CE  0060  F008  F1EC   	movff	btemp+1,_C+236	;volatile
  6938  0176D4  0060  F00C  F1ED   	movff	btemp+2,_C+237	;volatile
  6939  0176DA  0060  F010  F1EE   	movff	btemp+3,_C+238	;volatile
  6940                           
  6941                           ;bsoc.c: 181:  C.load_i1 = conv_raw_result(C_BATT, CONV);
  6942  0176E0  0E00               	movlw	0
  6943  0176E2  6EE6               	movwf	postinc1,c
  6944  0176E4  0E00               	movlw	0
  6945  0176E6  6EE6               	movwf	postinc1,c
  6946  0176E8  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  6947  0176EC  0060  F004  F1DF   	movff	btemp,_C+223	;volatile
  6948  0176F2  0060  F008  F1E0   	movff	btemp+1,_C+224	;volatile
  6949  0176F8  0060  F00C  F1E1   	movff	btemp+2,_C+225	;volatile
  6950  0176FE  0060  F010  F1E2   	movff	btemp+3,_C+226	;volatile
  6951                           
  6952                           ;bsoc.c: 183:  set_load_relay_two(1);
  6953  017704  0E01               	movlw	1
  6954  017706  6EE6               	movwf	postinc1,c
  6955  017708  EC57  F0D8         	call	_set_load_relay_two	;wreg free
  6956                           
  6957                           ;bsoc.c: 184:  WaitMs(10000);
  6958  01770C  0E10               	movlw	16
  6959  01770E  6EE6               	movwf	postinc1,c
  6960  017710  0E27               	movlw	39
  6961  017712  6EE6               	movwf	postinc1,c
  6962  017714  EC43  F0D4         	call	_WaitMs	;wreg free
  6963                           
  6964                           ;bsoc.c: 185:  update_adc_result();
  6965  017718  ECEF  F0D3         	call	_update_adc_result	;wreg free
  6966                           
  6967                           ;bsoc.c: 186:  C.bv_full_load = conv_raw_result(V_BAT, CONV);
  6968  01771C  0E00               	movlw	0
  6969  01771E  6EE6               	movwf	postinc1,c
  6970  017720  0E04               	movlw	4
  6971  017722  6EE6               	movwf	postinc1,c
  6972  017724  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  6973  017728  0060  F004  F1EF   	movff	btemp,_C+239	;volatile
  6974  01772E  0060  F008  F1F0   	movff	btemp+1,_C+240	;volatile
  6975  017734  0060  F00C  F1F1   	movff	btemp+2,_C+241	;volatile
  6976  01773A  0060  F010  F1F2   	movff	btemp+3,_C+242	;volatile
  6977                           
  6978                           ;bsoc.c: 187:  C.load_i2 = conv_raw_result(C_BATT, CONV);
  6979  017740  0E00               	movlw	0
  6980  017742  6EE6               	movwf	postinc1,c
  6981  017744  0E00               	movlw	0
  6982  017746  6EE6               	movwf	postinc1,c
  6983  017748  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  6984  01774C  0060  F004  F1E3   	movff	btemp,_C+227	;volatile
  6985  017752  0060  F008  F1E4   	movff	btemp+1,_C+228	;volatile
  6986  017758  0060  F00C  F1E5   	movff	btemp+2,_C+229	;volatile
  6987  01775E  0060  F010  F1E6   	movff	btemp+3,_C+230	;volatile
  6988                           
  6989                           ;bsoc.c: 189:  C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2))
      +                          ;
  6990  017764  0060  F78F  FFE6   	movff	_C+227,postinc1
  6991  01776A  0060  F793  FFE6   	movff	_C+228,postinc1
  6992  017770  0060  F797  FFE6   	movff	_C+229,postinc1
  6993  017776  0060  F79B  FFE6   	movff	_C+230,postinc1
  6994  01777C  0060  F77F  FFE6   	movff	_C+223,postinc1
  6995  017782  0060  F783  FFE6   	movff	_C+224,postinc1
  6996  017788  0060  F787  FFE6   	movff	_C+225,postinc1
  6997  01778E  0060  F78B  FFE6   	movff	_C+226,postinc1
  6998  017794  EC81  F0D2         	call	___flsub	;wreg free
  6999  017798  0060  F007  FFE6   	movff	btemp,postinc1
  7000  01779E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7001  0177A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7002  0177AA  0060  F013  FFE6   	movff	btemp+3,postinc1
  7003  0177B0  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7004  0177B6  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7005  0177BC  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7006  0177C2  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7007  0177C8  0060  F7AF  FFE6   	movff	_C+235,postinc1
  7008  0177CE  0060  F7B3  FFE6   	movff	_C+236,postinc1
  7009  0177D4  0060  F7B7  FFE6   	movff	_C+237,postinc1
  7010  0177DA  0060  F7BB  FFE6   	movff	_C+238,postinc1
  7011  0177E0  EC81  F0D2         	call	___flsub	;wreg free
  7012  0177E4  0060  F007  FFE6   	movff	btemp,postinc1
  7013  0177EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7014  0177F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7015  0177F6  0060  F013  FFE6   	movff	btemp+3,postinc1
  7016  0177FC  EC4F  F0A2         	call	___fldiv	;wreg free
  7017  017800  0060  F007  FFE6   	movff	btemp,postinc1
  7018  017806  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7019  01780C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7020  017812  0060  F013  FFE6   	movff	btemp+3,postinc1
  7021  017818  EC3A  F0CB         	call	_fabsf	;wreg free
  7022  01781C  0060  F004  F184   	movff	btemp,_C+132	;volatile
  7023  017822  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
  7024  017828  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
  7025  01782E  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
  7026                           
  7027                           ;bsoc.c: 190:  set_load_relay_one(0);
  7028  017834  0E00               	movlw	0
  7029  017836  6EE6               	movwf	postinc1,c
  7030  017838  EC5F  F0D8         	call	_set_load_relay_one	;wreg free
  7031                           
  7032                           ;bsoc.c: 191:  set_load_relay_two(0);
  7033  01783C  0E00               	movlw	0
  7034  01783E  6EE6               	movwf	postinc1,c
  7035  017840  EC57  F0D8         	call	_set_load_relay_two	;wreg free
  7036                           
  7037                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7038                           
  7039                           ;bsoc.c: 192:  return C.esr;;	Return value of _esr_check is never used
  7040  017844  0012               	return		;funcret
  7041  017846                     __end_of_esr_check:
  7042                           	opt callstack 0
  7043                           
  7044 ;; *************** function _update_adc_result *****************
  7045 ;; Defined at:
  7046 ;;		line 71 in file "daq.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;		None
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1  [STACK] _Bool 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7064 ;;Total ram usage:        0 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:   17
  7067 ;; This function calls:
  7068 ;;		_StartTimer
  7069 ;;		_TimerDone
  7070 ;;		_check_adc_scan
  7071 ;;		_clear_adc_scan
  7072 ;;		_start_adc_scan
  7073 ;; This function is called by:
  7074 ;;		_esr_check
  7075 ;; This function uses a reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text17
  7079  01A7DE                     __ptext17:
  7080                           	opt callstack 0
  7081  01A7DE                     _update_adc_result:
  7082                           	opt callstack 12
  7083                           
  7084                           ;daq.c: 73:  if (R.done) {
  7085                           
  7086                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7087                           ;incstack = 0
  7088  01A7DE  0100               	movlb	0	; () banked
  7089  01A7E0  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7090  01A7E2  B4D8               	btfsc	status,2,c
  7091  01A7E4  0012               	return	
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;daq.c: 74:   clear_adc_scan();
  7095  01A7E6  ECBD  F0D8         	call	_clear_adc_scan	;wreg free
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;daq.c: 75:   start_adc_scan();
  7099  01A7EA  EC28  F0D0         	call	_start_adc_scan	;wreg free
  7100                           
  7101                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7102  01A7EE  0EC8               	movlw	200
  7103  01A7F0  6EE6               	movwf	postinc1,c
  7104  01A7F2  0E00               	movlw	0
  7105  01A7F4  6EE6               	movwf	postinc1,c
  7106  01A7F6  0E01               	movlw	1
  7107  01A7F8  6EE6               	movwf	postinc1,c
  7108  01A7FA  EC50  F0D3         	call	_StartTimer	;wreg free
  7109  01A7FE                     l10034:
  7110  01A7FE  0E01               	movlw	1
  7111  01A800  6EE6               	movwf	postinc1,c
  7112  01A802  ECD1  F0D5         	call	_TimerDone	;wreg free
  7113  01A806  5001               	movf	btemp^0,w,c
  7114  01A808  A4D8               	btfss	status,2,c
  7115  01A80A  0012               	return	
  7116  01A80C  ECAD  F0D8         	call	_check_adc_scan	;wreg free
  7117  01A810  5001               	movf	btemp^0,w,c
  7118  01A812  A4D8               	btfss	status,2,c
  7119  01A814  0012               	return	
  7120  01A816  D7F3               	goto	l10034
  7121  01A818                     __end_of_update_adc_result:
  7122                           	opt callstack 0
  7123                           
  7124 ;; *************** function _start_adc_scan *****************
  7125 ;; Defined at:
  7126 ;;		line 32 in file "daq.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;		None
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1  [STACK] _Bool 
  7133 ;; Registers used:
  7134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 1/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7144 ;;Total ram usage:        0 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:   16
  7147 ;; This function calls:
  7148 ;;		_ADCC_DischargeSampleCapacitor
  7149 ;;		_ADCC_SetADIInterruptHandler
  7150 ;;		_ADCC_SetADTIInterruptHandler
  7151 ;;		_ADCC_StartConversion
  7152 ;; This function is called by:
  7153 ;;		_main
  7154 ;;		_update_adc_result
  7155 ;; This function uses a reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text18
  7159  01A050                     __ptext18:
  7160                           	opt callstack 0
  7161  01A050                     _start_adc_scan:
  7162                           	opt callstack 14
  7163                           
  7164                           ;daq.c: 34:  if (R.done)
  7165                           
  7166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7167                           ;incstack = 0
  7168  01A050  0100               	movlb	0	; () banked
  7169  01A052  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7170  01A054  A4D8               	btfss	status,2,c
  7171  01A056  0012               	return	
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;daq.c: 37:  R.scan_index = 0;
  7175  01A058  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7179  01A05A  013A               	movlb	58	; () banked
  7180  01A05C  5140               	movf	64,w,b	;volatile
  7181  01A05E  006E F940  F001    	movff	14928,btemp	;volatile
  7182  01A064  6A02               	clrf	(btemp+1)^0,c
  7183  01A066  0060  F004  F002   	movff	btemp,btemp+1
  7184  01A06C  6A01               	clrf	btemp^0,c
  7185  01A06E  2601               	addwf	btemp^0,f,c
  7186  01A070  0E00               	movlw	0
  7187  01A072  2202               	addwfc	(btemp+1)^0,f,c
  7188  01A074  0E77               	movlw	119
  7189  01A076  1401               	andwf	btemp^0,w,c
  7190  01A078  0100               	movlb	0	; () banked
  7191  01A07A  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7192  01A07C  0E3C               	movlw	60
  7193  01A07E  1402               	andwf	(btemp+1)^0,w,c
  7194  01A080  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7198  01A082  0EA2               	movlw	low _adc_int_handler
  7199  01A084  6EE6               	movwf	postinc1,c
  7200  01A086  0EB1               	movlw	high _adc_int_handler
  7201  01A088  6EE6               	movwf	postinc1,c
  7202  01A08A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7203  01A08C  6EE6               	movwf	postinc1,c
  7204  01A08E  EC99  F0D6         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7205                           
  7206                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7207  01A092  0E2E               	movlw	low _adc_int_t_handler
  7208  01A094  6EE6               	movwf	postinc1,c
  7209  01A096  0E9E               	movlw	high _adc_int_t_handler
  7210  01A098  6EE6               	movwf	postinc1,c
  7211  01A09A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7212  01A09C  6EE6               	movwf	postinc1,c
  7213  01A09E  EC85  F0D6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7214                           
  7215                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7216  01A0A2  ECA9  F0D8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7217                           
  7218                           ; BSR set to: 62
  7219                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7220  01A0A6  0100               	movlb	0	; () banked
  7221  01A0A8  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  7222  01A0AA  0B0F               	andlw	15
  7223  01A0AC  6EE6               	movwf	postinc1,c
  7224  01A0AE  EC4E  F0D8         	call	_ADCC_StartConversion	;wreg free
  7225                           
  7226                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7227  01A0B2  0012               	return		;funcret
  7228  01A0B4                     __end_of_start_adc_scan:
  7229                           	opt callstack 0
  7230                           
  7231 ;; *************** function _ADCC_StartConversion *****************
  7232 ;; Defined at:
  7233 ;;		line 128 in file "mcc_generated_files/adcc.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  channel         1  [STACK] enum E16136
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;		None
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1  [STACK] void 
  7240 ;; Registers used:
  7241 ;;		fsr1l, fsr1h
  7242 ;; Tracked objects:
  7243 ;;		On entry : 3F/0
  7244 ;;		On exit  : 3F/3E
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7251 ;;Total ram usage:        0 bytes
  7252 ;; Hardware stack levels used:    1
  7253 ;; Hardware stack levels required when called:   15
  7254 ;; This function calls:
  7255 ;;		Nothing
  7256 ;; This function is called by:
  7257 ;;		_start_adc_scan
  7258 ;;		_adc_int_t_handler
  7259 ;; This function uses a reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text19
  7263  01B09C                     __ptext19:
  7264                           	opt callstack 0
  7265  01B09C                     _ADCC_StartConversion:
  7266                           	opt callstack 0
  7267                           
  7268                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  7269                           ;stkvar	_channel @ sp[(0)+-1]
  7270                           
  7271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7272                           ;incstack = 0
  7273 ;; hardware stack exceeded
  7274  01B09C  0EFF               	movlw	-1
  7275  01B09E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  7276                           
  7277                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  7278  01B0A4  013E               	movlb	62	; () banked
  7279  01B0A6  8FF8               	bsf	248,7,b	;volatile
  7280                           
  7281                           ; BSR set to: 62
  7282                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  7283  01B0A8  81F8               	bsf	248,0,b	;volatile
  7284                           
  7285                           ; BSR set to: 62
  7286                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  7287  01B0AA  52E5               	movf	postdec1,f,c
  7288  01B0AC  0012               	return		;funcret
  7289  01B0AE                     __end_of_ADCC_StartConversion:
  7290                           	opt callstack 0
  7291                           
  7292 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  7293 ;; Defined at:
  7294 ;;		line 189 in file "mcc_generated_files/adcc.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1  [STACK] void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 3F/3E
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7312 ;;Total ram usage:        0 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:   15
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_start_adc_scan
  7319 ;;		_adc_int_t_handler
  7320 ;; This function uses a reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text20
  7324  01B152                     __ptext20:
  7325                           	opt callstack 0
  7326  01B152                     _ADCC_DischargeSampleCapacitor:
  7327                           	opt callstack 0
  7328                           
  7329                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  7330                           
  7331                           ; BSR set to: 62
  7332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7333                           ;incstack = 0
  7334 ;; hardware stack exceeded
  7335  01B152  0E3B               	movlw	59
  7336  01B154  013E               	movlb	62	; () banked
  7337  01B156  6FF1               	movwf	241,b	;volatile
  7338                           
  7339                           ; BSR set to: 62
  7340                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  7341  01B158  0012               	return		;funcret
  7342  01B15A                     __end_of_ADCC_DischargeSampleCapacitor:
  7343                           	opt callstack 0
  7344                           
  7345 ;; *************** function _clear_adc_scan *****************
  7346 ;; Defined at:
  7347 ;;		line 63 in file "daq.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;		None
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1  [STACK] void 
  7354 ;; Registers used:
  7355 ;;		None
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 3F/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7365 ;;Total ram usage:        0 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; Hardware stack levels required when called:   15
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_main
  7372 ;;		_update_adc_result
  7373 ;; This function uses a reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text21
  7377  01B17A                     __ptext21:
  7378                           	opt callstack 0
  7379  01B17A                     _clear_adc_scan:
  7380                           	opt callstack 13
  7381                           
  7382                           ;daq.c: 65:  R.done = 0;
  7383                           
  7384                           ; BSR set to: 62
  7385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7386                           ;incstack = 0
  7387  01B17A  0100               	movlb	0	; () banked
  7388  01B17C  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  7389                           
  7390                           ; BSR set to: 0
  7391                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7392  01B17E  0012               	return		;funcret
  7393  01B180                     __end_of_clear_adc_scan:
  7394                           	opt callstack 0
  7395                           
  7396 ;; *************** function _check_adc_scan *****************
  7397 ;; Defined at:
  7398 ;;		line 55 in file "daq.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1  [STACK] _Bool 
  7405 ;; Registers used:
  7406 ;;		btemp
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7416 ;;Total ram usage:        0 bytes
  7417 ;; Hardware stack levels used:    1
  7418 ;; Hardware stack levels required when called:   15
  7419 ;; This function calls:
  7420 ;;		Nothing
  7421 ;; This function is called by:
  7422 ;;		_main
  7423 ;;		_update_adc_result
  7424 ;; This function uses a reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text22
  7428  01B15A                     __ptext22:
  7429                           	opt callstack 0
  7430  01B15A                     _check_adc_scan:
  7431                           	opt callstack 13
  7432                           
  7433                           ;daq.c: 57:  return R.done;
  7434                           
  7435                           ; BSR set to: 0
  7436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7437                           ;incstack = 0
  7438  01B15A  0060  F3AC  F001   	movff	_R+39,btemp	;volatile
  7439                           
  7440                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7441  01B160  0012               	return		;funcret
  7442  01B162                     __end_of_check_adc_scan:
  7443                           	opt callstack 0
  7444                           
  7445 ;; *************** function _set_load_relay_two *****************
  7446 ;; Defined at:
  7447 ;;		line 128 in file "mbmc.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  mode            1  [STACK] _Bool 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;		None
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1  [STACK] void 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr1l, fsr1h
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7465 ;;Total ram usage:        0 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:   15
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_main
  7472 ;;		_esr_check
  7473 ;; This function uses a reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text23
  7477  01B0AE                     __ptext23:
  7478                           	opt callstack 0
  7479  01B0AE                     _set_load_relay_two:
  7480                           	opt callstack 15
  7481                           
  7482                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  7483                           ;stkvar	_mode @ sp[(0)+-1]
  7484                           
  7485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7486                           ;incstack = 0
  7487  01B0AE  0EFF               	movlw	-1
  7488  01B0B0  B0E3               	btfsc	plusw1,0,c
  7489  01B0B2  D002               	bra	u8935
  7490  01B0B4  9ABD               	bcf	189,5,c	;volatile
  7491  01B0B6  D001               	bra	u8936
  7492  01B0B8                     u8935:
  7493  01B0B8  8ABD               	bsf	189,5,c	;volatile
  7494  01B0BA                     u8936:
  7495                           
  7496                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7497  01B0BA  52E5               	movf	postdec1,f,c
  7498  01B0BC  0012               	return		;funcret
  7499  01B0BE                     __end_of_set_load_relay_two:
  7500                           	opt callstack 0
  7501                           
  7502 ;; *************** function _set_load_relay_one *****************
  7503 ;; Defined at:
  7504 ;;		line 123 in file "mbmc.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  mode            1  [STACK] _Bool 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;		None
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1  [STACK] void 
  7511 ;; Registers used:
  7512 ;;		wreg, fsr1l, fsr1h
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7522 ;;Total ram usage:        0 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; Hardware stack levels required when called:   15
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_main
  7529 ;;		_esr_check
  7530 ;; This function uses a reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text24
  7534  01B0BE                     __ptext24:
  7535                           	opt callstack 0
  7536  01B0BE                     _set_load_relay_one:
  7537                           	opt callstack 15
  7538                           
  7539                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  7540                           ;stkvar	_mode @ sp[(0)+-1]
  7541                           
  7542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7543                           ;incstack = 0
  7544  01B0BE  0EFF               	movlw	-1
  7545  01B0C0  B0E3               	btfsc	plusw1,0,c
  7546  01B0C2  D002               	bra	u8925
  7547  01B0C4  98BD               	bcf	189,4,c	;volatile
  7548  01B0C6  D001               	bra	u8926
  7549  01B0C8                     u8925:
  7550  01B0C8  88BD               	bsf	189,4,c	;volatile
  7551  01B0CA                     u8926:
  7552                           
  7553                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7554  01B0CA  52E5               	movf	postdec1,f,c
  7555  01B0CC  0012               	return		;funcret
  7556  01B0CE                     __end_of_set_load_relay_one:
  7557                           	opt callstack 0
  7558                           
  7559 ;; *************** function _eaDogM_WriteCommand *****************
  7560 ;; Defined at:
  7561 ;;		line 175 in file "eadog.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  cmd             1  [STACK] const unsigned char 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1  [STACK] void 
  7568 ;; Registers used:
  7569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7570 ;; Tracked objects:
  7571 ;;		On entry : 3F/3D
  7572 ;;		On exit  : 3F/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7579 ;;Total ram usage:        0 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:   25
  7582 ;; This function calls:
  7583 ;;		_send_lcd_cmd_dma
  7584 ;; This function is called by:
  7585 ;;		_main
  7586 ;; This function uses a reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text25
  7590  01B0DE                     __ptext25:
  7591                           	opt callstack 0
  7592  01B0DE                     _eaDogM_WriteCommand:
  7593                           	opt callstack 5
  7594                           
  7595                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  7596                           ;stkvar	_cmd @ sp[(0)+-1]
  7597                           
  7598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7599                           ;incstack = 0
  7600  01B0DE  0EFF               	movlw	-1
  7601  01B0E0  50E3               	movf	plusw1,w,c
  7602  01B0E2  6EE6               	movwf	postinc1,c
  7603  01B0E4  EC73  F0D1         	call	_send_lcd_cmd_dma	;wreg free
  7604                           
  7605                           ; BSR set to: 0
  7606                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7607  01B0E8  52E5               	movf	postdec1,f,c
  7608  01B0EA  0012               	return		;funcret
  7609  01B0EC                     __end_of_eaDogM_WriteCommand:
  7610                           	opt callstack 0
  7611                           
  7612 ;; *************** function _convert_adc_data *****************
  7613 ;; Defined at:
  7614 ;;		line 51 in file "mbmc.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  i               1  [STACK] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1  [STACK] void 
  7621 ;; Registers used:
  7622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:   18
  7635 ;; This function calls:
  7636 ;;		_conv_raw_result
  7637 ;;		_lp_filter
  7638 ;; This function is called by:
  7639 ;;		_main
  7640 ;; This function uses a reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text26
  7644  0195BC                     __ptext26:
  7645                           	opt callstack 0
  7646  0195BC                     _convert_adc_data:
  7647                           	opt callstack 0
  7648                           
  7649                           ; BSR set to: 0
  7650                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7651  0195BC  52E6               	movf	postinc1,f,c
  7652                           
  7653                           ;mbmc.c: 53:  uint8_t i = 0;
  7654                           ;stkvar	_i @ sp[(-1)+0]
  7655                           
  7656                           ;incstack = 0
  7657  0195BE  0EFF               	movlw	-1
  7658  0195C0  6AE3               	clrf	plusw1,c
  7659  0195C2                     l10452:
  7660                           
  7661                           ;mbmc.c: 56:   if (V.calib) {
  7662  0195C2  0102               	movlb	2	; () banked
  7663  0195C4  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  7664  0195C6  B4D8               	btfsc	status,2,c
  7665  0195C8  D01B               	goto	l10456
  7666                           
  7667                           ; BSR set to: 2
  7668                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  7669  0195CA  0E01               	movlw	1
  7670  0195CC  6EE6               	movwf	postinc1,c
  7671                           
  7672                           ;stkvar	_i @ sp[(-2)+0]
  7673  0195CE  0EFE               	movlw	-2
  7674  0195D0  50E3               	movf	plusw1,w,c
  7675  0195D2  6EE6               	movwf	postinc1,c
  7676  0195D4  0E01               	movlw	1
  7677  0195D6  6EE6               	movwf	postinc1,c
  7678                           
  7679                           ;stkvar	_i @ sp[(-4)+0]
  7680  0195D8  0EFC               	movlw	-4
  7681  0195DA  50E3               	movf	plusw1,w,c
  7682  0195DC  6EE6               	movwf	postinc1,c
  7683  0195DE  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  7684  0195E2  0060  F007  FFE6   	movff	btemp,postinc1
  7685  0195E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7686  0195EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7687  0195F4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7688  0195FA  EC23  F0BC         	call	_lp_filter	;wreg free
  7689  0195FE  D01A               	goto	L3
  7690  019600                     l10456:
  7691                           
  7692                           ; BSR set to: 2
  7693                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  7694  019600  0E00               	movlw	0
  7695  019602  6EE6               	movwf	postinc1,c
  7696                           
  7697                           ;stkvar	_i @ sp[(-2)+0]
  7698  019604  0EFE               	movlw	-2
  7699  019606  50E3               	movf	plusw1,w,c
  7700  019608  6EE6               	movwf	postinc1,c
  7701  01960A  0E00               	movlw	0
  7702  01960C  6EE6               	movwf	postinc1,c
  7703                           
  7704                           ;stkvar	_i @ sp[(-4)+0]
  7705  01960E  0EFC               	movlw	-4
  7706  019610  50E3               	movf	plusw1,w,c
  7707  019612  6EE6               	movwf	postinc1,c
  7708  019614  EC0C  F0A5         	call	_conv_raw_result	;wreg free
  7709  019618  0060  F007  FFE6   	movff	btemp,postinc1
  7710  01961E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7711  019624  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7712  01962A  0060  F013  FFE6   	movff	btemp+3,postinc1
  7713  019630  EC23  F0BC         	call	_lp_filter	;wreg free
  7714  019634                     L3:
  7715                           
  7716                           ;stkvar	_i @ sp[(-1)+0]
  7717  019634  0EFF               	movlw	-1
  7718  019636  50E3               	movf	plusw1,w,c
  7719  019638  0D04               	mullw	4
  7720  01963A  0E00               	movlw	low _C
  7721  01963C  24F3               	addwf	243,w,c
  7722  01963E  6ED9               	movwf	fsr2l,c
  7723  019640  0E01               	movlw	high _C
  7724  019642  20F4               	addwfc	prodh,w,c
  7725  019644  6EDA               	movwf	fsr2h,c
  7726  019646  0060  F007  FFDE   	movff	btemp,postinc2
  7727  01964C  0060  F00B  FFDE   	movff	btemp+1,postinc2
  7728  019652  0060  F00F  FFDE   	movff	btemp+2,postinc2
  7729  019658  0060  F013  FFDE   	movff	btemp+3,postinc2
  7730                           
  7731                           ;mbmc.c: 61:  } while (++i < 16);
  7732                           ;stkvar	_i @ sp[(-1)+0]
  7733  01965E  0EFF               	movlw	-1
  7734  019660  2AE3               	incf	plusw1,f,c
  7735  019662  0EFF               	movlw	-1
  7736  019664  006F FF8C  F001    	movff	plusw1,btemp
  7737  01966A  0E0F               	movlw	15
  7738  01966C  6401               	cpfsgt	btemp^0,c
  7739  01966E  D7A9               	goto	l10452
  7740                           
  7741                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  7742  019670  52E5               	movf	postdec1,f,c
  7743  019672  0012               	return		;funcret
  7744  019674                     __end_of_convert_adc_data:
  7745                           	opt callstack 0
  7746                           
  7747 ;; *************** function _clear_hid_pflags *****************
  7748 ;; Defined at:
  7749 ;;		line 51 in file "hid.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  h               1  [STACK] PTR struct H_data
  7752 ;;		 -> H(7), 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1  [STACK] void 
  7757 ;; Registers used:
  7758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7759 ;; Tracked objects:
  7760 ;;		On entry : 3F/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7768 ;;Total ram usage:        0 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:   15
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_main
  7775 ;; This function uses a reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text27
  7779  01ADF8                     __ptext27:
  7780                           	opt callstack 0
  7781  01ADF8                     _clear_hid_pflags:
  7782                           	opt callstack 15
  7783                           
  7784                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7785                           ;stkvar	_h @ sp[(0)+-1]
  7786                           
  7787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7788                           ;incstack = 0
  7789  01ADF8  0EFF               	movlw	-1
  7790  01ADFA  50E3               	movf	plusw1,w,c
  7791  01ADFC  6ED9               	movwf	fsr2l,c
  7792  01ADFE  6ADA               	clrf	fsr2h,c
  7793  01AE00  0E03               	movlw	3
  7794  01AE02  26D9               	addwf	fsr2l,f,c
  7795  01AE04  0E00               	movlw	0
  7796  01AE06  6EDF               	movwf	indf2,c
  7797                           
  7798                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7799                           ;stkvar	_h @ sp[(0)+-1]
  7800  01AE08  0EFF               	movlw	-1
  7801  01AE0A  50E3               	movf	plusw1,w,c
  7802  01AE0C  6ED9               	movwf	fsr2l,c
  7803  01AE0E  6ADA               	clrf	fsr2h,c
  7804  01AE10  0E05               	movlw	5
  7805  01AE12  26D9               	addwf	fsr2l,f,c
  7806  01AE14  0E00               	movlw	0
  7807  01AE16  6EDF               	movwf	indf2,c
  7808                           
  7809                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7810  01AE18  52E5               	movf	postdec1,f,c
  7811  01AE1A  0012               	return		;funcret
  7812  01AE1C                     __end_of_clear_hid_pflags:
  7813                           	opt callstack 0
  7814                           
  7815 ;; *************** function _check_help *****************
  7816 ;; Defined at:
  7817 ;;		line 40 in file "mconfig.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  flipper         1  [STACK] const _Bool 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  estatus         1    0        _Bool 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1  [STACK] _Bool 
  7824 ;; Registers used:
  7825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7826 ;; Tracked objects:
  7827 ;;		On entry : 3F/2
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7835 ;;Total ram usage:        0 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; Hardware stack levels required when called:   27
  7838 ;; This function calls:
  7839 ;;		_StartTimer
  7840 ;;		_TimerDone
  7841 ;;		_display_help
  7842 ;;		_display_info
  7843 ;;		_get_vterm_ptr
  7844 ;;		_help_button
  7845 ;;		_mode_lamp_bright
  7846 ;;		_mode_lamp_dim
  7847 ;;		_set_display_info
  7848 ;;		_set_temp_display_help
  7849 ;;		_set_vterm
  7850 ;;		_sprintf
  7851 ;;		_update_lcd
  7852 ;;		_vterm_dump
  7853 ;; This function is called by:
  7854 ;;		_main
  7855 ;; This function uses a reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text28
  7859  01704A                     __ptext28:
  7860                           	opt callstack 0
  7861  01704A                     _check_help:
  7862                           	opt callstack 3
  7863                           
  7864                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7865                           
  7866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7867                           ;incstack = 0
  7868  01704A  EC0C  F0D4         	call	_help_button	;wreg free
  7869  01704E  5001               	movf	btemp^0,w,c
  7870  017050  B4D8               	btfsc	status,2,c
  7871  017052  D0D0               	goto	l12270
  7872  017054  ECB1  F0D8         	call	_display_info	;wreg free
  7873  017058  0401               	decf	btemp^0,w,c
  7874  01705A  B4D8               	btfsc	status,2,c
  7875  01705C  D0CB               	goto	l12270
  7876                           
  7877                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7878  01705E  0EDC               	movlw	220
  7879  017060  6EE6               	movwf	postinc1,c
  7880  017062  0E05               	movlw	5
  7881  017064  6EE6               	movwf	postinc1,c
  7882  017066  0E0B               	movlw	11
  7883  017068  6EE6               	movwf	postinc1,c
  7884  01706A  EC50  F0D3         	call	_StartTimer	;wreg free
  7885                           
  7886                           ;mconfig.c: 48:   if (V.debug)
  7887  01706E  0102               	movlb	2	; () banked
  7888  017070  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7889                           
  7890                           ; BSR set to: 2
  7891                           ;mconfig.c: 49:    vterm_dump();
  7892  017072  ECFE  F0C3         	call	_vterm_dump	;wreg free
  7893                           
  7894                           ;mconfig.c: 51:   set_vterm(1);
  7895  017076  0E01               	movlw	1
  7896  017078  6EE6               	movwf	postinc1,c
  7897  01707A  EC98  F0D7         	call	_set_vterm	;wreg free
  7898                           
  7899                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7900  01707E  ECB1  F0D8         	call	_display_info	;wreg free
  7901  017082  5001               	movf	btemp^0,w,c
  7902  017084  6EE6               	movwf	postinc1,c
  7903  017086  EC67  F0D8         	call	_set_temp_display_help	;wreg free
  7904                           
  7905                           ; BSR set to: 2
  7906                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7907  01708A  0E01               	movlw	1
  7908  01708C  6EE6               	movwf	postinc1,c
  7909  01708E  ECA7  F0D7         	call	_set_display_info	;wreg free
  7910                           
  7911                           ;mconfig.c: 54:   if (flipper) {
  7912                           ;stkvar	_flipper @ sp[(0)+-1]
  7913  017092  0EFF               	movlw	-1
  7914  017094  50E3               	movf	plusw1,w,c
  7915  017096  B4D8               	btfsc	status,2,c
  7916  017098  D019               	goto	l12256
  7917                           
  7918                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7919  01709A  0EB2               	movlw	low STR_36
  7920  01709C  6EE6               	movwf	postinc1,c
  7921  01709E  0EFF               	movlw	high STR_36
  7922  0170A0  6EE6               	movwf	postinc1,c
  7923  0170A2  0E61               	movlw	low STR_38
  7924  0170A4  6EE6               	movwf	postinc1,c
  7925  0170A6  0EFE               	movlw	high STR_38
  7926  0170A8  6EE6               	movwf	postinc1,c
  7927  0170AA  0E01               	movlw	1
  7928  0170AC  6EE6               	movwf	postinc1,c
  7929  0170AE  0E00               	movlw	0
  7930  0170B0  6EE6               	movwf	postinc1,c
  7931  0170B2  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  7932  0170B6  0060  F007  FFE6   	movff	btemp,postinc1
  7933  0170BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7934  0170C2  0E06               	movlw	6
  7935  0170C4  6EE6               	movwf	postinc1,c
  7936  0170C6  EC4C  F0C7         	call	_sprintf	;wreg free
  7937                           
  7938                           ;mconfig.c: 56:   } else {
  7939  0170CA  D018               	goto	l1657
  7940  0170CC                     l12256:
  7941                           
  7942                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7943  0170CC  0EC8               	movlw	low STR_37
  7944  0170CE  6EE6               	movwf	postinc1,c
  7945  0170D0  0EFF               	movlw	high STR_37
  7946  0170D2  6EE6               	movwf	postinc1,c
  7947  0170D4  0E61               	movlw	low STR_38
  7948  0170D6  6EE6               	movwf	postinc1,c
  7949  0170D8  0EFE               	movlw	high STR_38
  7950  0170DA  6EE6               	movwf	postinc1,c
  7951  0170DC  0E01               	movlw	1
  7952  0170DE  6EE6               	movwf	postinc1,c
  7953  0170E0  0E00               	movlw	0
  7954  0170E2  6EE6               	movwf	postinc1,c
  7955  0170E4  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  7956  0170E8  0060  F007  FFE6   	movff	btemp,postinc1
  7957  0170EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7958  0170F4  0E06               	movlw	6
  7959  0170F6  6EE6               	movwf	postinc1,c
  7960  0170F8  EC4C  F0C7         	call	_sprintf	;wreg free
  7961  0170FC                     l1657:
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7965  0170FC  0102               	movlb	2	; () banked
  7966  0170FE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7967  017100  32E8               	rrcf	wreg,f,c
  7968  017102  32E8               	rrcf	wreg,f,c
  7969  017104  0B03               	andlw	3
  7970  017106  0D24               	mullw	36
  7971  017108  0E12               	movlw	18
  7972  01710A  26F3               	addwf	243,f,c
  7973  01710C  0E00               	movlw	0
  7974  01710E  22F4               	addwfc	244,f,c
  7975  017110  0E0D               	movlw	low _T
  7976  017112  6E0B               	movwf	(btemp+10)^0,c
  7977  017114  0EFC               	movlw	high _T
  7978  017116  6E0C               	movwf	(btemp+11)^0,c
  7979  017118  50F3               	movf	243,w,c
  7980  01711A  260B               	addwf	(btemp+10)^0,f,c
  7981  01711C  50F4               	movf	244,w,c
  7982  01711E  220C               	addwfc	(btemp+11)^0,f,c
  7983  017120  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7984  017126  0060  F033  FFE6   	movff	btemp+11,postinc1
  7985  01712C  0EBE               	movlw	low STR_40
  7986  01712E  6EE6               	movwf	postinc1,c
  7987  017130  0EFF               	movlw	high STR_40
  7988  017132  6EE6               	movwf	postinc1,c
  7989  017134  0E01               	movlw	1
  7990  017136  6EE6               	movwf	postinc1,c
  7991  017138  0E01               	movlw	1
  7992  01713A  6EE6               	movwf	postinc1,c
  7993  01713C  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  7994  017140  0060  F007  FFE6   	movff	btemp,postinc1
  7995  017146  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7996  01714C  0E06               	movlw	6
  7997  01714E  6EE6               	movwf	postinc1,c
  7998  017150  EC4C  F0C7         	call	_sprintf	;wreg free
  7999                           
  8000                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8001  017154  0102               	movlb	2	; () banked
  8002  017156  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8003  017158  32E8               	rrcf	wreg,f,c
  8004  01715A  32E8               	rrcf	wreg,f,c
  8005  01715C  0B03               	andlw	3
  8006  01715E  0D24               	mullw	36
  8007  017160  0E0D               	movlw	low _T
  8008  017162  6E0B               	movwf	(btemp+10)^0,c
  8009  017164  0EFC               	movlw	high _T
  8010  017166  6E0C               	movwf	(btemp+11)^0,c
  8011  017168  50F3               	movf	243,w,c
  8012  01716A  260B               	addwf	(btemp+10)^0,f,c
  8013  01716C  50F4               	movf	244,w,c
  8014  01716E  220C               	addwfc	(btemp+11)^0,f,c
  8015  017170  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8016  017176  0060  F033  FFE6   	movff	btemp+11,postinc1
  8017  01717C  0EBE               	movlw	low STR_40
  8018  01717E  6EE6               	movwf	postinc1,c
  8019  017180  0EFF               	movlw	high STR_40
  8020  017182  6EE6               	movwf	postinc1,c
  8021  017184  0E01               	movlw	1
  8022  017186  6EE6               	movwf	postinc1,c
  8023  017188  0E02               	movlw	2
  8024  01718A  6EE6               	movwf	postinc1,c
  8025  01718C  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  8026  017190  0060  F007  FFE6   	movff	btemp,postinc1
  8027  017196  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8028  01719C  0E06               	movlw	6
  8029  01719E  6EE6               	movwf	postinc1,c
  8030  0171A0  EC4C  F0C7         	call	_sprintf	;wreg free
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;mconfig.c: 61:   V.help_id++;
  8034  0171A4  EE20  F29B         	lfsr	2,_V+155	;volatile
  8035  0171A8  38DF               	swapf	223,w,c
  8036  0171AA  6E0C               	movwf	(btemp+11)^0,c
  8037  0171AC  320C               	rrcf	(btemp+11)^0,f,c
  8038  0171AE  300C               	rrcf	(btemp+11)^0,w,c
  8039  0171B0  0B03               	andlw	3
  8040  0171B2  6E0C               	movwf	(btemp+11)^0,c
  8041  0171B4  2A0C               	incf	(btemp+11)^0,f,c
  8042  0171B6  3A0C               	swapf	(btemp+11)^0,f,c
  8043  0171B8  360C               	rlcf	(btemp+11)^0,f,c
  8044  0171BA  360C               	rlcf	(btemp+11)^0,f,c
  8045  0171BC  50DF               	movf	223,w,c
  8046  0171BE  180C               	xorwf	(btemp+11)^0,w,c
  8047  0171C0  0B3F               	andlw	-193
  8048  0171C2  180C               	xorwf	(btemp+11)^0,w,c
  8049  0171C4  6EDF               	movwf	223,c
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8053  0171C6  0EB8               	movlw	184
  8054  0171C8  6EE6               	movwf	postinc1,c
  8055  0171CA  0E0B               	movlw	11
  8056  0171CC  6EE6               	movwf	postinc1,c
  8057  0171CE  0E09               	movlw	9
  8058  0171D0  6EE6               	movwf	postinc1,c
  8059  0171D2  EC50  F0D3         	call	_StartTimer	;wreg free
  8060                           
  8061                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8062  0171D6  0EB8               	movlw	184
  8063  0171D8  6EE6               	movwf	postinc1,c
  8064  0171DA  0E0B               	movlw	11
  8065  0171DC  6EE6               	movwf	postinc1,c
  8066  0171DE  0E07               	movlw	7
  8067  0171E0  6EE6               	movwf	postinc1,c
  8068  0171E2  EC50  F0D3         	call	_StartTimer	;wreg free
  8069                           
  8070                           ;mconfig.c: 64:   mode_lamp_bright();
  8071  0171E6  EC76  F0D8         	call	_mode_lamp_bright	;wreg free
  8072                           
  8073                           ;mconfig.c: 65:   update_lcd(1);
  8074  0171EA  0E01               	movlw	1
  8075  0171EC  6EE6               	movwf	postinc1,c
  8076  0171EE  EC3D  F0C6         	call	_update_lcd	;wreg free
  8077                           
  8078                           ;mconfig.c: 67:  } else {
  8079  0171F2  D032               	goto	l1658
  8080  0171F4                     l12270:
  8081                           
  8082                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8083  0171F4  0E09               	movlw	9
  8084  0171F6  6EE6               	movwf	postinc1,c
  8085  0171F8  ECD1  F0D5         	call	_TimerDone	;wreg free
  8086  0171FC  5001               	movf	btemp^0,w,c
  8087  0171FE  B4D8               	btfsc	status,2,c
  8088  017200  D02B               	goto	l1658
  8089                           
  8090                           ;mconfig.c: 69:    set_vterm(0);
  8091  017202  0E00               	movlw	0
  8092  017204  6EE6               	movwf	postinc1,c
  8093  017206  EC98  F0D7         	call	_set_vterm	;wreg free
  8094                           
  8095                           ;mconfig.c: 70:    V.help = 0;
  8096  01720A  0102               	movlb	2	; () banked
  8097  01720C  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8098                           
  8099                           ; BSR set to: 2
  8100                           ;mconfig.c: 71:    set_display_info(display_help());
  8101  01720E  ECB5  F0D8         	call	_display_help	;wreg free
  8102  017212  5001               	movf	btemp^0,w,c
  8103  017214  6EE6               	movwf	postinc1,c
  8104  017216  ECA7  F0D7         	call	_set_display_info	;wreg free
  8105                           
  8106                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8107  01721A  0060  FA57  FFE6   	movff	_V+149,postinc1
  8108  017220  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8109  017226  EC0B  F0D8         	call	_mode_lamp_dim	;wreg free
  8110                           
  8111                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8112  01722A  0E0B               	movlw	11
  8113  01722C  6EE6               	movwf	postinc1,c
  8114  01722E  ECD1  F0D5         	call	_TimerDone	;wreg free
  8115  017232  5001               	movf	btemp^0,w,c
  8116  017234  B4D8               	btfsc	status,2,c
  8117  017236  D010               	goto	l1658
  8118                           
  8119                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8120  017238  0102               	movlb	2	; () banked
  8121  01723A  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  8122  01723C  A4D8               	btfss	status,2,c
  8123  01723E  D002               	goto	u11810
  8124  017240  0E01               	movlw	1
  8125  017242  D001               	goto	u11820
  8126  017244                     u11810:
  8127  017244  0E00               	movlw	0
  8128  017246                     u11820:
  8129  017246  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  8130                           
  8131                           ; BSR set to: 2
  8132                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8133  017248  0EDC               	movlw	220
  8134  01724A  6EE6               	movwf	postinc1,c
  8135  01724C  0E05               	movlw	5
  8136  01724E  6EE6               	movwf	postinc1,c
  8137  017250  0E0B               	movlw	11
  8138  017252  6EE6               	movwf	postinc1,c
  8139  017254  EC50  F0D3         	call	_StartTimer	;wreg free
  8140  017258                     l1658:
  8141                           
  8142                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8143  017258  52E5               	movf	postdec1,f,c
  8144  01725A  0012               	return		;funcret
  8145  01725C                     __end_of_check_help:
  8146                           	opt callstack 0
  8147                           
  8148 ;; *************** function _vterm_dump *****************
  8149 ;; Defined at:
  8150 ;;		line 121 in file "mconfig.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;		None
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;		None
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1  [STACK] void 
  8157 ;; Registers used:
  8158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8159 ;; Tracked objects:
  8160 ;;		On entry : 3F/2
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8168 ;;Total ram usage:        0 bytes
  8169 ;; Hardware stack levels used:    1
  8170 ;; Hardware stack levels required when called:   26
  8171 ;; This function calls:
  8172 ;;		_WaitMs
  8173 ;;		_eaDogM_WriteStringAtPos
  8174 ;;		_get_vterm_ptr
  8175 ;;		_sprintf
  8176 ;;		_wait_lcd_done
  8177 ;; This function is called by:
  8178 ;;		_check_help
  8179 ;; This function uses a reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text29
  8183  0187FC                     __ptext29:
  8184                           	opt callstack 0
  8185  0187FC                     _vterm_dump:
  8186                           	opt callstack 3
  8187                           
  8188                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8189                           
  8190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8191                           ;incstack = 0
  8192  0187FC  0E01               	movlw	1
  8193  0187FE  6EE6               	movwf	postinc1,c
  8194  018800  0E00               	movlw	0
  8195  018802  6EE6               	movwf	postinc1,c
  8196  018804  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  8197  018808  0060  F007  FFE6   	movff	btemp,postinc1
  8198  01880E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8199  018814  0E00               	movlw	0
  8200  018816  6EE6               	movwf	postinc1,c
  8201  018818  0E00               	movlw	0
  8202  01881A  6EE6               	movwf	postinc1,c
  8203  01881C  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  8204  018820  0060  F007  FFE6   	movff	btemp,postinc1
  8205  018826  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8206  01882C  0E94               	movlw	low STR_42
  8207  01882E  6EE6               	movwf	postinc1,c
  8208  018830  0EFF               	movlw	high STR_42
  8209  018832  6EE6               	movwf	postinc1,c
  8210  018834  0E01               	movlw	low (_V+1)
  8211  018836  6EE6               	movwf	postinc1,c
  8212  018838  0E02               	movlw	high (_V+1)
  8213  01883A  6EE6               	movwf	postinc1,c
  8214  01883C  0E08               	movlw	8
  8215  01883E  6EE6               	movwf	postinc1,c
  8216  018840  EC4C  F0C7         	call	_sprintf	;wreg free
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;mconfig.c: 124:  wait_lcd_done();
  8220  018844  ECD4  F0D7         	call	_wait_lcd_done	;wreg free
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8224  018848  0E01               	movlw	low (_V+1)
  8225  01884A  6EE6               	movwf	postinc1,c
  8226  01884C  0E02               	movlw	high (_V+1)
  8227  01884E  6EE6               	movwf	postinc1,c
  8228  018850  0E00               	movlw	0
  8229  018852  6EE6               	movwf	postinc1,c
  8230  018854  0E00               	movlw	0
  8231  018856  6EE6               	movwf	postinc1,c
  8232  018858  EC5E  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8233                           
  8234                           ; BSR set to: 59
  8235                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8236  01885C  0E01               	movlw	1
  8237  01885E  6EE6               	movwf	postinc1,c
  8238  018860  0E01               	movlw	1
  8239  018862  6EE6               	movwf	postinc1,c
  8240  018864  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  8241  018868  0060  F007  FFE6   	movff	btemp,postinc1
  8242  01886E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8243  018874  0E00               	movlw	0
  8244  018876  6EE6               	movwf	postinc1,c
  8245  018878  0E01               	movlw	1
  8246  01887A  6EE6               	movwf	postinc1,c
  8247  01887C  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  8248  018880  0060  F007  FFE6   	movff	btemp,postinc1
  8249  018886  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8250  01888C  0E94               	movlw	low STR_42
  8251  01888E  6EE6               	movwf	postinc1,c
  8252  018890  0EFF               	movlw	high STR_42
  8253  018892  6EE6               	movwf	postinc1,c
  8254  018894  0E01               	movlw	low (_V+1)
  8255  018896  6EE6               	movwf	postinc1,c
  8256  018898  0E02               	movlw	high (_V+1)
  8257  01889A  6EE6               	movwf	postinc1,c
  8258  01889C  0E08               	movlw	8
  8259  01889E  6EE6               	movwf	postinc1,c
  8260  0188A0  EC4C  F0C7         	call	_sprintf	;wreg free
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;mconfig.c: 127:  wait_lcd_done();
  8264  0188A4  ECD4  F0D7         	call	_wait_lcd_done	;wreg free
  8265                           
  8266                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  8267  0188A8  0E01               	movlw	low (_V+1)
  8268  0188AA  6EE6               	movwf	postinc1,c
  8269  0188AC  0E02               	movlw	high (_V+1)
  8270  0188AE  6EE6               	movwf	postinc1,c
  8271  0188B0  0E00               	movlw	0
  8272  0188B2  6EE6               	movwf	postinc1,c
  8273  0188B4  0E01               	movlw	1
  8274  0188B6  6EE6               	movwf	postinc1,c
  8275  0188B8  EC5E  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8276                           
  8277                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  8278  0188BC  0E01               	movlw	1
  8279  0188BE  6EE6               	movwf	postinc1,c
  8280  0188C0  0E02               	movlw	2
  8281  0188C2  6EE6               	movwf	postinc1,c
  8282  0188C4  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  8283  0188C8  0060  F007  FFE6   	movff	btemp,postinc1
  8284  0188CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8285  0188D4  0E00               	movlw	0
  8286  0188D6  6EE6               	movwf	postinc1,c
  8287  0188D8  0E02               	movlw	2
  8288  0188DA  6EE6               	movwf	postinc1,c
  8289  0188DC  EC27  F0D5         	call	_get_vterm_ptr	;wreg free
  8290  0188E0  0060  F007  FFE6   	movff	btemp,postinc1
  8291  0188E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8292  0188EC  0E94               	movlw	low STR_42
  8293  0188EE  6EE6               	movwf	postinc1,c
  8294  0188F0  0EFF               	movlw	high STR_42
  8295  0188F2  6EE6               	movwf	postinc1,c
  8296  0188F4  0E01               	movlw	low (_V+1)
  8297  0188F6  6EE6               	movwf	postinc1,c
  8298  0188F8  0E02               	movlw	high (_V+1)
  8299  0188FA  6EE6               	movwf	postinc1,c
  8300  0188FC  0E08               	movlw	8
  8301  0188FE  6EE6               	movwf	postinc1,c
  8302  018900  EC4C  F0C7         	call	_sprintf	;wreg free
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;mconfig.c: 130:  wait_lcd_done();
  8306  018904  ECD4  F0D7         	call	_wait_lcd_done	;wreg free
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  8310  018908  0E01               	movlw	low (_V+1)
  8311  01890A  6EE6               	movwf	postinc1,c
  8312  01890C  0E02               	movlw	high (_V+1)
  8313  01890E  6EE6               	movwf	postinc1,c
  8314  018910  0E00               	movlw	0
  8315  018912  6EE6               	movwf	postinc1,c
  8316  018914  0E02               	movlw	2
  8317  018916  6EE6               	movwf	postinc1,c
  8318  018918  EC5E  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8319                           
  8320                           ; BSR set to: 59
  8321                           ;mconfig.c: 132:  WaitMs(3000);
  8322  01891C  0EB8               	movlw	184
  8323  01891E  6EE6               	movwf	postinc1,c
  8324  018920  0E0B               	movlw	11
  8325  018922  6EE6               	movwf	postinc1,c
  8326  018924  EC43  F0D4         	call	_WaitMs	;wreg free
  8327                           
  8328                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8329  018928  0012               	return		;funcret
  8330  01892A                     __end_of_vterm_dump:
  8331                           	opt callstack 0
  8332                           
  8333 ;; *************** function _sprintf *****************
  8334 ;; Defined at:
  8335 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  s               2  [STACK] PTR unsigned char 
  8338 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  8339 ;;  fmt             2  [STACK] PTR const unsigned char 
  8340 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
  8341 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
  8342 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
  8343 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
  8344 ;;		 -> STR_38(19), STR_32(17), STR_31(16), STR_30(16), 
  8345 ;;		 -> STR_29(20), STR_28(20), STR_27(19), STR_26(19), 
  8346 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
  8347 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
  8348 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
  8349 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
  8350 ;;		 -> STR_9(26), STR_8(18), STR_7(17), STR_6(17), 
  8351 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  f               6  [STACK] struct _IO_FILE
  8354 ;;  ap              2  [STACK] PTR void [1]
  8355 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8356 ;;  ret             2    0        int 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  2  [STACK] int 
  8359 ;; Registers used:
  8360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/1
  8363 ;;		On exit  : 3F/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8370 ;;Total ram usage:        0 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:   23
  8373 ;; This function calls:
  8374 ;;		_vfprintf
  8375 ;; This function is called by:
  8376 ;;		_main
  8377 ;;		_check_help
  8378 ;;		_vterm_dump
  8379 ;;		_calc_bsoc
  8380 ;; This function uses a reentrant model
  8381 ;;
  8382                           
  8383                           	psect	text30
  8384  018E98                     __ptext30:
  8385                           	opt callstack 0
  8386  018E98                     _sprintf:
  8387                           	opt callstack 0
  8388                           
  8389                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8390  018E98  0E08               	movlw	8
  8391  018E9A  26E1               	addwf	fsr1l,f,c
  8392  018E9C  0E00               	movlw	0
  8393  018E9E  22E2               	addwfc	fsr1h,f,c
  8394                           
  8395                           ;incstack = 0
  8396 ;; hardware stack exceeded
  8397  018EA0  0EFE               	movlw	254
  8398  018EA2  6E0B               	movwf	(btemp+10)^0,c
  8399  018EA4  0EFF               	movlw	255
  8400  018EA6  6E0C               	movwf	(btemp+11)^0,c
  8401                           
  8402                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8403  018EA8  0EF5               	movlw	245
  8404  018EAA  24E1               	addwf	fsr1l,w,c
  8405  018EAC  6E09               	movwf	(btemp+8)^0,c
  8406  018EAE  0EFF               	movlw	255
  8407  018EB0  20E2               	addwfc	fsr1h,w,c
  8408  018EB2  6E0A               	movwf	(btemp+9)^0,c
  8409  018EB4  500B               	movf	(btemp+10)^0,w,c
  8410  018EB6  2609               	addwf	(btemp+8)^0,f,c
  8411  018EB8  500C               	movf	(btemp+11)^0,w,c
  8412  018EBA  220A               	addwfc	(btemp+9)^0,f,c
  8413                           
  8414                           ;stkvar	_ap @ sp[(-8)+6]
  8415  018EBC  0EFF               	movlw	-1
  8416  018EBE  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8417  018EC4  0EFE               	movlw	-2
  8418  018EC6  0060  F027  FFE3   	movff	btemp+8,plusw1
  8419                           
  8420                           ;stkvar	_s @ sp[(-8)+-3]
  8421  018ECC  0EF5               	movlw	-11
  8422  018ECE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8423  018ED4  0EF6               	movlw	-10
  8424  018ED6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8425                           
  8426                           ;stkvar	_f @ sp[(-8)+0]
  8427  018EDC  0EF9               	movlw	-7
  8428  018EDE  0060  F033  FFE3   	movff	btemp+11,plusw1
  8429  018EE4  0EF8               	movlw	-8
  8430  018EE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8431                           
  8432                           ;stkvar	_f @ sp[(-8)+0]
  8433  018EEC  0EFA               	movlw	250
  8434  018EEE  24E1               	addwf	fsr1l,w,c
  8435  018EF0  6ED9               	movwf	fsr2l,c
  8436  018EF2  0EFF               	movlw	255
  8437  018EF4  20E2               	addwfc	fsr1h,w,c
  8438  018EF6  6EDA               	movwf	fsr2h,c
  8439  018EF8  0E00               	movlw	0
  8440  018EFA  6EDE               	movwf	postinc2,c
  8441  018EFC  0E00               	movlw	0
  8442  018EFE  6EDD               	movwf	postdec2,c
  8443                           
  8444                           ;stkvar	_f @ sp[(-8)+0]
  8445  018F00  0EFC               	movlw	252
  8446  018F02  24E1               	addwf	fsr1l,w,c
  8447  018F04  6ED9               	movwf	fsr2l,c
  8448  018F06  0EFF               	movlw	255
  8449  018F08  20E2               	addwfc	fsr1h,w,c
  8450  018F0A  6EDA               	movwf	fsr2h,c
  8451  018F0C  0E00               	movlw	0
  8452  018F0E  6EDE               	movwf	postinc2,c
  8453  018F10  0E00               	movlw	0
  8454  018F12  6EDD               	movwf	postdec2,c
  8455                           
  8456                           ;stkvar	_ap @ sp[(-8)+6]
  8457  018F14  0EFE               	movlw	254
  8458  018F16  24E1               	addwf	fsr1l,w,c
  8459  018F18  6E01               	movwf	btemp^0,c
  8460  018F1A  0EFF               	movlw	255
  8461  018F1C  20E2               	addwfc	fsr1h,w,c
  8462  018F1E  6E02               	movwf	(btemp+1)^0,c
  8463  018F20  0060  F007  FFE6   	movff	btemp,postinc1
  8464  018F26  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8465                           
  8466                           ;stkvar	_fmt @ sp[(-10)+-5]
  8467  018F2C  0EF1               	movlw	-15
  8468  018F2E  006F FF8F FFE6     	movff	plusw1,postinc1
  8469  018F34  006F FF8F FFE6     	movff	plusw1,postinc1
  8470                           
  8471                           ;stkvar	_f @ sp[(-12)+0]
  8472  018F3A  0EF4               	movlw	244
  8473  018F3C  24E1               	addwf	fsr1l,w,c
  8474  018F3E  6E01               	movwf	btemp^0,c
  8475  018F40  0EFF               	movlw	255
  8476  018F42  20E2               	addwfc	fsr1h,w,c
  8477  018F44  6E02               	movwf	(btemp+1)^0,c
  8478  018F46  0060  F007  FFE6   	movff	btemp,postinc1
  8479  018F4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8480  018F52  EC91  F0CB         	call	_vfprintf	;wreg free
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;stkvar	_f @ sp[(-8)+0]
  8484  018F56  0EFA               	movlw	250
  8485  018F58  24E1               	addwf	fsr1l,w,c
  8486  018F5A  6ED9               	movwf	fsr2l,c
  8487  018F5C  0EFF               	movlw	255
  8488  018F5E  20E2               	addwfc	fsr1h,w,c
  8489  018F60  6EDA               	movwf	fsr2h,c
  8490  018F62  006F FF78  F00B    	movff	postinc2,btemp+10
  8491  018F68  006F FF74  F00C    	movff	postdec2,btemp+11
  8492                           
  8493                           ;stkvar	_s @ sp[(-8)+-3]
  8494  018F6E  0EF5               	movlw	-11
  8495  018F70  006F FF8C  F009    	movff	plusw1,btemp+8
  8496  018F76  0EF6               	movlw	-10
  8497  018F78  006F FF8C  F00A    	movff	plusw1,btemp+9
  8498  018F7E  500B               	movf	(btemp+10)^0,w,c
  8499  018F80  2409               	addwf	(btemp+8)^0,w,c
  8500  018F82  6ED9               	movwf	fsr2l,c
  8501  018F84  500C               	movf	(btemp+11)^0,w,c
  8502  018F86  200A               	addwfc	(btemp+9)^0,w,c
  8503  018F88  6EDA               	movwf	fsr2h,c
  8504  018F8A  0E00               	movlw	0
  8505  018F8C  6EDF               	movwf	indf2,c
  8506                           
  8507                           ; BSR set to: 0
  8508                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  8509  018F8E  0EF8               	movlw	248
  8510  018F90  26E1               	addwf	fsr1l,f,c
  8511  018F92  0EFF               	movlw	255
  8512  018F94  22E2               	addwfc	fsr1h,f,c
  8513  018F96  52E5               	movf	postdec1,f,c
  8514  018F98  50E7               	movf	indf1,w,c
  8515  018F9A  5EE1               	subwf	fsr1l,f,c
  8516  018F9C  0E00               	movlw	0
  8517  018F9E  5AE2               	subwfb	fsr1h,f,c
  8518  018FA0  0012               	return		;funcret
  8519  018FA2                     __end_of_sprintf:
  8520                           	opt callstack 0
  8521                           
  8522 ;; *************** function _get_vterm_ptr *****************
  8523 ;; Defined at:
  8524 ;;		line 116 in file "mconfig.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  line            1  [STACK] const unsigned char 
  8527 ;;  vterm           1  [STACK] const unsigned char 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  2  [STACK] PTR unsigned char 
  8532 ;; Registers used:
  8533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/1
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:   15
  8546 ;; This function calls:
  8547 ;;		Nothing
  8548 ;; This function is called by:
  8549 ;;		_main
  8550 ;;		_check_help
  8551 ;;		_vterm_dump
  8552 ;; This function uses a reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text31
  8556  01AA4E                     __ptext31:
  8557                           	opt callstack 0
  8558  01AA4E                     _get_vterm_ptr:
  8559                           	opt callstack 15
  8560                           
  8561                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8562                           ;stkvar	_vterm @ sp[(0)+-2]
  8563                           
  8564                           ; BSR set to: 0
  8565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8566                           ;incstack = 0
  8567  01AA4E  0EFE               	movlw	-2
  8568  01AA50  50E3               	movf	plusw1,w,c
  8569  01AA52  0B03               	andlw	3
  8570  01AA54  0D48               	mullw	72
  8571  01AA56  0EFF               	movlw	low _D
  8572  01AA58  6E01               	movwf	btemp^0,c
  8573  01AA5A  0E07               	movlw	high _D
  8574  01AA5C  6E02               	movwf	(btemp+1)^0,c
  8575  01AA5E  50F3               	movf	243,w,c
  8576  01AA60  2601               	addwf	btemp^0,f,c
  8577  01AA62  50F4               	movf	244,w,c
  8578  01AA64  2202               	addwfc	(btemp+1)^0,f,c
  8579                           
  8580                           ;stkvar	_line @ sp[(0)+-1]
  8581  01AA66  0EFF               	movlw	-1
  8582  01AA68  50E3               	movf	plusw1,w,c
  8583  01AA6A  0B03               	andlw	3
  8584  01AA6C  0D18               	mullw	24
  8585  01AA6E  50F3               	movf	243,w,c
  8586  01AA70  2601               	addwf	btemp^0,f,c
  8587  01AA72  50F4               	movf	244,w,c
  8588  01AA74  2202               	addwfc	(btemp+1)^0,f,c
  8589                           
  8590                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8591  01AA76  52E5               	movf	postdec1,f,c
  8592  01AA78  52E5               	movf	postdec1,f,c
  8593  01AA7A  0012               	return		;funcret
  8594  01AA7C                     __end_of_get_vterm_ptr:
  8595                           	opt callstack 0
  8596                           
  8597 ;; *************** function _WaitMs *****************
  8598 ;; Defined at:
  8599 ;;		line 32 in file "timers.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;  numMilliseco    2  [STACK] const unsigned short 
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;		None
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  1  [STACK] void 
  8606 ;; Registers used:
  8607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/2
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8617 ;;Total ram usage:        0 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:   16
  8620 ;; This function calls:
  8621 ;;		_StartTimer
  8622 ;;		_TimerDone
  8623 ;; This function is called by:
  8624 ;;		_main
  8625 ;;		_vterm_dump
  8626 ;;		_esr_check
  8627 ;; This function uses a reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text32
  8631  01A886                     __ptext32:
  8632                           	opt callstack 0
  8633  01A886                     _WaitMs:
  8634                           	opt callstack 13
  8635                           
  8636                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8637                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8638                           
  8639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8640                           ;incstack = 0
  8641  01A886  0EFE               	movlw	-2
  8642  01A888  006F FF8F FFE6     	movff	plusw1,postinc1
  8643  01A88E  006F FF8F FFE6     	movff	plusw1,postinc1
  8644  01A894  0E00               	movlw	0
  8645  01A896  6EE6               	movwf	postinc1,c
  8646  01A898  EC50  F0D3         	call	_StartTimer	;wreg free
  8647                           
  8648                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8649  01A89C  D005               	goto	l9314
  8650  01A89E                     l1589:
  8651                           
  8652                           ;timers.c: 36:   __nop();
  8653  01A89E  F000               	nop	
  8654                           
  8655                           ;timers.c: 37:   __nop();
  8656  01A8A0  F000               	nop	
  8657                           
  8658                           ;timers.c: 38:   __nop();
  8659  01A8A2  F000               	nop	
  8660                           
  8661                           ;timers.c: 39:   __nop();
  8662  01A8A4  F000               	nop	
  8663  01A8A6  0004               	clrwdt		;# 
  8664  01A8A8                     l9314:
  8665                           
  8666                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8667  01A8A8  0E00               	movlw	0
  8668  01A8AA  6EE6               	movwf	postinc1,c
  8669  01A8AC  ECD1  F0D5         	call	_TimerDone	;wreg free
  8670  01A8B0  5001               	movf	btemp^0,w,c
  8671  01A8B2  B4D8               	btfsc	status,2,c
  8672  01A8B4  D7F4               	goto	l1589
  8673                           
  8674                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8675  01A8B6  52E5               	movf	postdec1,f,c
  8676  01A8B8  52E5               	movf	postdec1,f,c
  8677  01A8BA  0012               	return		;funcret
  8678  01A8BC                     __end_of_WaitMs:
  8679                           	opt callstack 0
  8680                           
  8681 ;; *************** function _update_lcd *****************
  8682 ;; Defined at:
  8683 ;;		line 85 in file "mconfig.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;  vterm           1  [STACK] unsigned char 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1  [STACK] unsigned char 
  8690 ;; Registers used:
  8691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;Total ram usage:        0 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:   26
  8704 ;; This function calls:
  8705 ;;		_eaDogM_WriteStringAtPos
  8706 ;;		_wait_lcd_done
  8707 ;; This function is called by:
  8708 ;;		_main
  8709 ;;		_check_help
  8710 ;; This function uses a reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text33
  8714  018C7A                     __ptext33:
  8715                           	opt callstack 0
  8716  018C7A                     _update_lcd:
  8717                           	opt callstack 4
  8718                           
  8719                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8720                           ;stkvar	_vterm @ sp[(0)+-1]
  8721                           
  8722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8723                           ;incstack = 0
  8724  018C7A  0EFF               	movlw	-1
  8725  018C7C  006F FF8C  F001    	movff	plusw1,btemp
  8726  018C82  0E03               	movlw	3
  8727  018C84  1601               	andwf	btemp^0,f,c
  8728  018C86  0EFF               	movlw	-1
  8729  018C88  0060  F007  FFE3   	movff	btemp,plusw1
  8730                           
  8731                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8732  018C8E  EE22  F11F         	lfsr	2,_D+288
  8733  018C92  A0DF               	btfss	indf2,0,c
  8734  018C94  D004               	goto	l12072
  8735                           
  8736                           ;stkvar	_vterm @ sp[(0)+-1]
  8737  018C96  0EFF               	movlw	-1
  8738  018C98  50E3               	movf	plusw1,w,c
  8739  018C9A  B4D8               	btfsc	status,2,c
  8740  018C9C  D074               	goto	l1665
  8741  018C9E                     l12072:
  8742                           
  8743                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8744                           ;stkvar	_vterm @ sp[(0)+-1]
  8745  018C9E  0EFF               	movlw	-1
  8746  018CA0  50E3               	movf	plusw1,w,c
  8747  018CA2  0D48               	mullw	72
  8748  018CA4  0E0F               	movlw	low (_D+16)
  8749  018CA6  24F3               	addwf	243,w,c
  8750  018CA8  6ED9               	movwf	fsr2l,c
  8751  018CAA  0E08               	movlw	high (_D+16)
  8752  018CAC  20F4               	addwfc	prodh,w,c
  8753  018CAE  6EDA               	movwf	fsr2h,c
  8754  018CB0  0E00               	movlw	0
  8755  018CB2  6EDF               	movwf	indf2,c
  8756                           
  8757                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8758                           ;stkvar	_vterm @ sp[(0)+-1]
  8759  018CB4  0EFF               	movlw	-1
  8760  018CB6  50E3               	movf	plusw1,w,c
  8761  018CB8  0D48               	mullw	72
  8762  018CBA  0E27               	movlw	low (_D+40)
  8763  018CBC  24F3               	addwf	243,w,c
  8764  018CBE  6ED9               	movwf	fsr2l,c
  8765  018CC0  0E08               	movlw	high (_D+40)
  8766  018CC2  20F4               	addwfc	prodh,w,c
  8767  018CC4  6EDA               	movwf	fsr2h,c
  8768  018CC6  0E00               	movlw	0
  8769  018CC8  6EDF               	movwf	indf2,c
  8770                           
  8771                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8772                           ;stkvar	_vterm @ sp[(0)+-1]
  8773  018CCA  0EFF               	movlw	-1
  8774  018CCC  50E3               	movf	plusw1,w,c
  8775  018CCE  0D48               	mullw	72
  8776  018CD0  0E3F               	movlw	low (_D+64)
  8777  018CD2  24F3               	addwf	243,w,c
  8778  018CD4  6ED9               	movwf	fsr2l,c
  8779  018CD6  0E08               	movlw	high (_D+64)
  8780  018CD8  20F4               	addwfc	prodh,w,c
  8781  018CDA  6EDA               	movwf	fsr2h,c
  8782  018CDC  0E00               	movlw	0
  8783  018CDE  6EDF               	movwf	indf2,c
  8784                           
  8785                           ;mconfig.c: 95:  wait_lcd_done();
  8786  018CE0  ECD4  F0D7         	call	_wait_lcd_done	;wreg free
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8790                           ;stkvar	_vterm @ sp[(0)+-1]
  8791  018CE4  0EFF               	movlw	-1
  8792  018CE6  50E3               	movf	plusw1,w,c
  8793  018CE8  0D48               	mullw	72
  8794  018CEA  0EFF               	movlw	low _D
  8795  018CEC  6E0B               	movwf	(btemp+10)^0,c
  8796  018CEE  0E07               	movlw	high _D
  8797  018CF0  6E0C               	movwf	(btemp+11)^0,c
  8798  018CF2  50F3               	movf	243,w,c
  8799  018CF4  260B               	addwf	(btemp+10)^0,f,c
  8800  018CF6  50F4               	movf	244,w,c
  8801  018CF8  220C               	addwfc	(btemp+11)^0,f,c
  8802  018CFA  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8803  018D00  0060  F033  FFE6   	movff	btemp+11,postinc1
  8804  018D06  0E00               	movlw	0
  8805  018D08  6EE6               	movwf	postinc1,c
  8806  018D0A  0E00               	movlw	0
  8807  018D0C  6EE6               	movwf	postinc1,c
  8808  018D0E  EC5E  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8809                           
  8810                           ; BSR set to: 59
  8811                           ;mconfig.c: 97:  wait_lcd_done();
  8812  018D12  ECD4  F0D7         	call	_wait_lcd_done	;wreg free
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8816                           ;stkvar	_vterm @ sp[(0)+-1]
  8817  018D16  0EFF               	movlw	-1
  8818  018D18  50E3               	movf	plusw1,w,c
  8819  018D1A  0D48               	mullw	72
  8820  018D1C  0EFF               	movlw	low _D
  8821  018D1E  6E0B               	movwf	(btemp+10)^0,c
  8822  018D20  0E07               	movlw	high _D
  8823  018D22  6E0C               	movwf	(btemp+11)^0,c
  8824  018D24  0E18               	movlw	24
  8825  018D26  260B               	addwf	(btemp+10)^0,f,c
  8826  018D28  0E00               	movlw	0
  8827  018D2A  220C               	addwfc	(btemp+11)^0,f,c
  8828  018D2C  50F3               	movf	243,w,c
  8829  018D2E  260B               	addwf	(btemp+10)^0,f,c
  8830  018D30  50F4               	movf	244,w,c
  8831  018D32  220C               	addwfc	(btemp+11)^0,f,c
  8832  018D34  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8833  018D3A  0060  F033  FFE6   	movff	btemp+11,postinc1
  8834  018D40  0E00               	movlw	0
  8835  018D42  6EE6               	movwf	postinc1,c
  8836  018D44  0E01               	movlw	1
  8837  018D46  6EE6               	movwf	postinc1,c
  8838  018D48  EC5E  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8839                           
  8840                           ; BSR set to: 59
  8841                           ;mconfig.c: 99:  wait_lcd_done();
  8842  018D4C  ECD4  F0D7         	call	_wait_lcd_done	;wreg free
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8846                           ;stkvar	_vterm @ sp[(0)+-1]
  8847  018D50  0EFF               	movlw	-1
  8848  018D52  50E3               	movf	plusw1,w,c
  8849  018D54  0D48               	mullw	72
  8850  018D56  0EFF               	movlw	low _D
  8851  018D58  6E0B               	movwf	(btemp+10)^0,c
  8852  018D5A  0E07               	movlw	high _D
  8853  018D5C  6E0C               	movwf	(btemp+11)^0,c
  8854  018D5E  0E30               	movlw	48
  8855  018D60  260B               	addwf	(btemp+10)^0,f,c
  8856  018D62  0E00               	movlw	0
  8857  018D64  220C               	addwfc	(btemp+11)^0,f,c
  8858  018D66  50F3               	movf	243,w,c
  8859  018D68  260B               	addwf	(btemp+10)^0,f,c
  8860  018D6A  50F4               	movf	244,w,c
  8861  018D6C  220C               	addwfc	(btemp+11)^0,f,c
  8862  018D6E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8863  018D74  0060  F033  FFE6   	movff	btemp+11,postinc1
  8864  018D7A  0E00               	movlw	0
  8865  018D7C  6EE6               	movwf	postinc1,c
  8866  018D7E  0E02               	movlw	2
  8867  018D80  6EE6               	movwf	postinc1,c
  8868  018D82  EC5E  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8869  018D86                     l1665:
  8870                           
  8871                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8872  018D86  52E5               	movf	postdec1,f,c
  8873  018D88  0012               	return		;funcret
  8874  018D8A                     __end_of_update_lcd:
  8875                           	opt callstack 0
  8876                           
  8877 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8878 ;; Defined at:
  8879 ;;		line 278 in file "eadog.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;  r               1  [STACK] const unsigned char 
  8882 ;;  c               1  [STACK] const unsigned char 
  8883 ;;  strPtr          2  [STACK] PTR unsigned char 
  8884 ;;		 -> D.lcd(288), D(290), V(188), 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;		None
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1  [STACK] void 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8891 ;; Tracked objects:
  8892 ;;		On entry : 3F/0
  8893 ;;		On exit  : 3F/3B
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8900 ;;Total ram usage:        0 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:   25
  8903 ;; This function calls:
  8904 ;;		_eaDogM_WriteString
  8905 ;;		_send_lcd_cmd_dma
  8906 ;; This function is called by:
  8907 ;;		_update_lcd
  8908 ;;		_vterm_dump
  8909 ;; This function uses a reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text34
  8913  01A8BC                     __ptext34:
  8914                           	opt callstack 0
  8915  01A8BC                     _eaDogM_WriteStringAtPos:
  8916                           	opt callstack 4
  8917                           
  8918                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8919                           ;stkvar	_c @ sp[(0)+-2]
  8920                           
  8921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8922                           ;incstack = 0
  8923  01A8BC  0EFE               	movlw	-2
  8924  01A8BE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8925                           
  8926                           ;stkvar	_r @ sp[(0)+-1]
  8927  01A8C4  0EFF               	movlw	-1
  8928  01A8C6  50E3               	movf	plusw1,w,c
  8929  01A8C8  0D10               	mullw	16
  8930  01A8CA  50F3               	movf	243,w,c
  8931  01A8CC  240C               	addwf	(btemp+11)^0,w,c
  8932  01A8CE  0F80               	addlw	128
  8933  01A8D0  6EE6               	movwf	postinc1,c
  8934  01A8D2  EC73  F0D1         	call	_send_lcd_cmd_dma	;wreg free
  8935                           
  8936                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8937                           ;stkvar	_strPtr @ sp[(0)+-4]
  8938  01A8D6  0EFC               	movlw	-4
  8939  01A8D8  006F FF8F FFE6     	movff	plusw1,postinc1
  8940  01A8DE  006F FF8F FFE6     	movff	plusw1,postinc1
  8941  01A8E4  EC3C  F0CC         	call	_eaDogM_WriteString	;wreg free
  8942                           
  8943                           ; BSR set to: 59
  8944                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8945  01A8E8  52E5               	movf	postdec1,f,c
  8946  01A8EA  52E5               	movf	postdec1,f,c
  8947  01A8EC  52E5               	movf	postdec1,f,c
  8948  01A8EE  52E5               	movf	postdec1,f,c
  8949  01A8F0  0012               	return		;funcret
  8950  01A8F2                     __end_of_eaDogM_WriteStringAtPos:
  8951                           	opt callstack 0
  8952                           
  8953 ;; *************** function _send_lcd_cmd_dma *****************
  8954 ;; Defined at:
  8955 ;;		line 220 in file "eadog.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  strPtr          1  [STACK] unsigned char 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;		None
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1  [STACK] void 
  8962 ;; Registers used:
  8963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/3D
  8966 ;;		On exit  : 3F/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8973 ;;Total ram usage:        0 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:   24
  8976 ;; This function calls:
  8977 ;;		_printf
  8978 ;;		_ringBufS_flush
  8979 ;;		_start_lcd
  8980 ;;		_wait_lcd_done
  8981 ;;		_wait_lcd_set
  8982 ;; This function is called by:
  8983 ;;		_eaDogM_WriteCommand
  8984 ;;		_eaDogM_WriteStringAtPos
  8985 ;; This function uses a reentrant model
  8986 ;;
  8987                           
  8988                           	psect	text35
  8989  01A2E6                     __ptext35:
  8990                           	opt callstack 0
  8991  01A2E6                     _send_lcd_cmd_dma:
  8992                           	opt callstack 4
  8993                           
  8994                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8995                           
  8996                           ; BSR set to: 59
  8997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8998                           ;incstack = 0
  8999  01A2E6  ECC0  F0D8         	call	_wait_lcd_set	;wreg free
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9003  01A2EA  0E00               	movlw	0
  9004  01A2EC  6EE6               	movwf	postinc1,c
  9005  01A2EE  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9006  01A2F4  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9007  01A2FA  EC75  F0CD         	call	_ringBufS_flush	;wreg free
  9008  01A2FE  92BC               	bcf	188,1,c	;volatile
  9009  01A300  94BC               	bcf	188,2,c	;volatile
  9010                           
  9011                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9012  01A302  013B               	movlb	59	; () banked
  9013  01A304  9FFC               	bcf	252,7,b	;volatile
  9014                           
  9015                           ; BSR set to: 59
  9016                           ;eadog.c: 229:  DMA1SSZ = 1;
  9017  01A306  0E00               	movlw	0
  9018  01A308  6FF8               	movwf	248,b	;volatile
  9019  01A30A  0E01               	movlw	1
  9020  01A30C  6FF7               	movwf	247,b	;volatile
  9021                           
  9022                           ; BSR set to: 59
  9023                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9024  01A30E  8FFC               	bsf	252,7,b	;volatile
  9025                           
  9026                           ; BSR set to: 59
  9027                           ;eadog.c: 231:  printf("%c", strPtr);
  9028                           ;stkvar	_strPtr @ sp[(0)+-1]
  9029  01A310  0EFF               	movlw	-1
  9030  01A312  50E3               	movf	plusw1,w,c
  9031  01A314  6EE6               	movwf	postinc1,c
  9032  01A316  0E00               	movlw	0
  9033  01A318  6EE6               	movwf	postinc1,c
  9034  01A31A  0EF9               	movlw	low STR_34
  9035  01A31C  6EE6               	movwf	postinc1,c
  9036  01A31E  0EFF               	movlw	high STR_34
  9037  01A320  6EE6               	movwf	postinc1,c
  9038  01A322  0E04               	movlw	4
  9039  01A324  6EE6               	movwf	postinc1,c
  9040  01A326  EC5A  F0D0         	call	_printf	;wreg free
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;eadog.c: 232:  start_lcd();
  9044  01A32A  ECC3  F0D8         	call	_start_lcd	;wreg free
  9045                           
  9046                           ; BSR set to: 59
  9047                           ;eadog.c: 233:  wait_lcd_done();
  9048  01A32E  ECD4  F0D7         	call	_wait_lcd_done	;wreg free
  9049                           
  9050                           ; BSR set to: 0
  9051  01A332  82BC               	bsf	188,1,c	;volatile
  9052                           
  9053                           ; BSR set to: 0
  9054                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9055  01A334  52E5               	movf	postdec1,f,c
  9056  01A336  0012               	return		;funcret
  9057  01A338                     __end_of_send_lcd_cmd_dma:
  9058                           	opt callstack 0
  9059                           
  9060 ;; *************** function _wait_lcd_done *****************
  9061 ;; Defined at:
  9062 ;;		line 156 in file "eadog.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;		None
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;		None
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1  [STACK] void 
  9069 ;; Registers used:
  9070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 3F/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9080 ;;Total ram usage:        0 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; Hardware stack levels required when called:   16
  9083 ;; This function calls:
  9084 ;;		_wdtdelay
  9085 ;; This function is called by:
  9086 ;;		_send_lcd_cmd_dma
  9087 ;;		_update_lcd
  9088 ;;		_vterm_dump
  9089 ;; This function uses a reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text36
  9093  01AFA8                     __ptext36:
  9094                           	opt callstack 0
  9095  01AFA8                     _wait_lcd_done:
  9096                           	opt callstack 13
  9097                           
  9098                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9099                           
  9100                           ; BSR set to: 0
  9101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9102                           ;incstack = 0
  9103  01AFA8  0100               	movlb	0	; () banked
  9104  01AFAA  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9105  01AFAC  D7FD               	goto	_wait_lcd_done
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;eadog.c: 159:  wdtdelay(50);
  9109  01AFAE  0E32               	movlw	50
  9110  01AFB0  6EE6               	movwf	postinc1,c
  9111  01AFB2  0E00               	movlw	0
  9112  01AFB4  6EE6               	movwf	postinc1,c
  9113  01AFB6  0E00               	movlw	0
  9114  01AFB8  6EE6               	movwf	postinc1,c
  9115  01AFBA  0E00               	movlw	0
  9116  01AFBC  6EE6               	movwf	postinc1,c
  9117  01AFBE  ECEB  F0D0         	call	_wdtdelay	;wreg free
  9118                           
  9119                           ; BSR set to: 0
  9120                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9121  01AFC2  0012               	return		;funcret
  9122  01AFC4                     __end_of_wait_lcd_done:
  9123                           	opt callstack 0
  9124                           
  9125 ;; *************** function _wdtdelay *****************
  9126 ;; Defined at:
  9127 ;;		line 23 in file "eadog.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;  delay           4  [STACK] const unsigned long 
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;		None
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  1  [STACK] void 
  9134 ;; Registers used:
  9135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 3F/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9145 ;;Total ram usage:        0 bytes
  9146 ;; Hardware stack levels used:    1
  9147 ;; Hardware stack levels required when called:   15
  9148 ;; This function calls:
  9149 ;;		Nothing
  9150 ;; This function is called by:
  9151 ;;		_init_display
  9152 ;;		_send_lcd_cmd
  9153 ;;		_send_lcd_cmd_long
  9154 ;;		_wait_lcd_done
  9155 ;; This function uses a reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text37
  9159  01A1D6                     __ptext37:
  9160                           	opt callstack 0
  9161  01A1D6                     _wdtdelay:
  9162                           	opt callstack 13
  9163                           
  9164                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9165                           
  9166                           ; BSR set to: 0
  9167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9168                           ;incstack = 0
  9169  01A1D6  0100               	movlb	0	; () banked
  9170  01A1D8  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9171  01A1DA  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9172  01A1DC  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9173  01A1DE  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9174  01A1E0                     l1430:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;eadog.c: 28:   __nop();
  9178  01A1E0  F000               	nop	
  9179  01A1E2  0004               	clrwdt		;# 
  9180                           
  9181                           ;eadog.c: 30:  };
  9182  01A1E4  0E01               	movlw	1
  9183  01A1E6  0100               	movlb	0	; () banked
  9184  01A1E8  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9185  01A1EA  0E00               	movlw	0
  9186  01A1EC  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9187  01A1EE  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9188  01A1F0  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;stkvar	_delay @ sp[(0)+-4]
  9192  01A1F2  0EFC               	movlw	-4
  9193  01A1F4  006F FF8C  F001    	movff	plusw1,btemp
  9194  01A1FA  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9195  01A1FC  5C01               	subwf	btemp^0,w,c
  9196  01A1FE  0EFD               	movlw	-3
  9197  01A200  006F FF8C  F001    	movff	plusw1,btemp
  9198  01A206  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9199  01A208  5801               	subwfb	btemp^0,w,c
  9200  01A20A  0EFE               	movlw	-2
  9201  01A20C  006F FF8C  F001    	movff	plusw1,btemp
  9202  01A212  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9203  01A214  5801               	subwfb	btemp^0,w,c
  9204  01A216  0EFF               	movlw	-1
  9205  01A218  006F FF8C  F001    	movff	plusw1,btemp
  9206  01A21E  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9207  01A220  5801               	subwfb	btemp^0,w,c
  9208  01A222  B0D8               	btfsc	status,0,c
  9209  01A224  D7DD               	goto	l1430
  9210                           
  9211                           ; BSR set to: 0
  9212                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9213  01A226  52E5               	movf	postdec1,f,c
  9214  01A228  52E5               	movf	postdec1,f,c
  9215  01A22A  52E5               	movf	postdec1,f,c
  9216  01A22C  52E5               	movf	postdec1,f,c
  9217  01A22E  0012               	return		;funcret
  9218  01A230                     __end_of_wdtdelay:
  9219                           	opt callstack 0
  9220                           
  9221 ;; *************** function _eaDogM_WriteString *****************
  9222 ;; Defined at:
  9223 ;;		line 199 in file "eadog.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  strPtr          2  [STACK] PTR unsigned char 
  9226 ;;		 -> D.lcd(288), D(290), V(188), 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;		None
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1  [STACK] void 
  9231 ;; Registers used:
  9232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9233 ;; Tracked objects:
  9234 ;;		On entry : 3F/0
  9235 ;;		On exit  : 3F/3B
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9242 ;;Total ram usage:        0 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; Hardware stack levels required when called:   24
  9245 ;; This function calls:
  9246 ;;		_printf
  9247 ;;		_ringBufS_flush
  9248 ;;		_start_lcd
  9249 ;;		_strlen
  9250 ;;		_wait_lcd_set
  9251 ;; This function is called by:
  9252 ;;		_eaDogM_WriteStringAtPos
  9253 ;; This function uses a reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text38
  9257  019878                     __ptext38:
  9258                           	opt callstack 0
  9259  019878                     _eaDogM_WriteString:
  9260                           	opt callstack 4
  9261                           
  9262                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  9263                           
  9264                           ; BSR set to: 0
  9265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9266                           ;incstack = 0
  9267  019878  ECC0  F0D8         	call	_wait_lcd_set	;wreg free
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  9271  01987C  0E00               	movlw	0
  9272  01987E  6EE6               	movwf	postinc1,c
  9273  019880  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9274  019886  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9275  01988C  EC75  F0CD         	call	_ringBufS_flush	;wreg free
  9276  019890  94BC               	bcf	188,2,c	;volatile
  9277                           
  9278                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9279                           ;stkvar	_strPtr @ sp[(0)+-2]
  9280  019892  0EFE               	movlw	-2
  9281  019894  006F FF8F FFE6     	movff	plusw1,postinc1
  9282  01989A  006F FF8F FFE6     	movff	plusw1,postinc1
  9283  0198A0  EC8F  F0CC         	call	_strlen	;wreg free
  9284  0198A4  5002               	movf	(btemp+1)^0,w,c
  9285  0198A6  E104               	bnz	u11620
  9286  0198A8  0E41               	movlw	65
  9287  0198AA  5C01               	subwf	btemp^0,w,c
  9288  0198AC  A0D8               	btfss	status,0,c
  9289  0198AE  D010               	goto	l12026
  9290  0198B0                     u11620:
  9291                           
  9292                           ;stkvar	_strPtr @ sp[(0)+-2]
  9293  0198B0  0EFE               	movlw	-2
  9294  0198B2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9295  0198B8  0EFF               	movlw	-1
  9296  0198BA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9297  0198C0  0E40               	movlw	64
  9298  0198C2  240B               	addwf	(btemp+10)^0,w,c
  9299  0198C4  6ED9               	movwf	fsr2l,c
  9300  0198C6  0E00               	movlw	0
  9301  0198C8  200C               	addwfc	(btemp+11)^0,w,c
  9302  0198CA  6EDA               	movwf	fsr2h,c
  9303  0198CC  0E00               	movlw	0
  9304  0198CE  6EDF               	movwf	indf2,c
  9305  0198D0                     l12026:
  9306                           
  9307                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  9308  0198D0  013B               	movlb	59	; () banked
  9309  0198D2  9FFC               	bcf	252,7,b	;volatile
  9310                           
  9311                           ; BSR set to: 59
  9312                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  9313                           ;stkvar	_strPtr @ sp[(0)+-2]
  9314  0198D4  0EFE               	movlw	-2
  9315  0198D6  006F FF8F FFE6     	movff	plusw1,postinc1
  9316  0198DC  006F FF8F FFE6     	movff	plusw1,postinc1
  9317  0198E2  EC8F  F0CC         	call	_strlen	;wreg free
  9318  0198E6  0060  F007  FBF7   	movff	btemp,15351	;volatile
  9319  0198EC  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  9320                           
  9321                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  9322  0198F2  013B               	movlb	59	; () banked
  9323  0198F4  8FFC               	bsf	252,7,b	;volatile
  9324                           
  9325                           ; BSR set to: 59
  9326                           ;eadog.c: 210:  printf("%s", strPtr);
  9327                           ;stkvar	_strPtr @ sp[(0)+-2]
  9328  0198F6  0EFE               	movlw	-2
  9329  0198F8  006F FF8F FFE6     	movff	plusw1,postinc1
  9330  0198FE  006F FF8F FFE6     	movff	plusw1,postinc1
  9331  019904  0EFC               	movlw	low STR_33
  9332  019906  6EE6               	movwf	postinc1,c
  9333  019908  0EFF               	movlw	high STR_33
  9334  01990A  6EE6               	movwf	postinc1,c
  9335  01990C  0E04               	movlw	4
  9336  01990E  6EE6               	movwf	postinc1,c
  9337  019910  EC5A  F0D0         	call	_printf	;wreg free
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;eadog.c: 211:  start_lcd();
  9341  019914  ECC3  F0D8         	call	_start_lcd	;wreg free
  9342                           
  9343                           ; BSR set to: 59
  9344                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9345  019918  52E5               	movf	postdec1,f,c
  9346  01991A  52E5               	movf	postdec1,f,c
  9347  01991C  0012               	return		;funcret
  9348  01991E                     __end_of_eaDogM_WriteString:
  9349                           	opt callstack 0
  9350                           
  9351 ;; *************** function _wait_lcd_set *****************
  9352 ;; Defined at:
  9353 ;;		line 146 in file "eadog.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;		None
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;		None
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1  [STACK] void 
  9360 ;; Registers used:
  9361 ;;		None
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/3D
  9364 ;;		On exit  : 3F/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9371 ;;Total ram usage:        0 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:   15
  9374 ;; This function calls:
  9375 ;;		Nothing
  9376 ;; This function is called by:
  9377 ;;		_eaDogM_WriteString
  9378 ;;		_send_lcd_cmd_dma
  9379 ;; This function uses a reentrant model
  9380 ;;
  9381                           
  9382                           	psect	text39
  9383  01B180                     __ptext39:
  9384                           	opt callstack 0
  9385  01B180                     _wait_lcd_set:
  9386                           	opt callstack 12
  9387                           
  9388                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9389                           
  9390                           ; BSR set to: 59
  9391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9392                           ;incstack = 0
  9393  01B180  0100               	movlb	0	; () banked
  9394  01B182  8760               	bsf	_spi_link& (0+255),3,b	;volatile
  9395                           
  9396                           ; BSR set to: 0
  9397                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9398  01B184  0012               	return		;funcret
  9399  01B186                     __end_of_wait_lcd_set:
  9400                           	opt callstack 0
  9401                           
  9402 ;; *************** function _start_lcd *****************
  9403 ;; Defined at:
  9404 ;;		line 141 in file "eadog.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;		None
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;		None
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1  [STACK] void 
  9411 ;; Registers used:
  9412 ;;		None
  9413 ;; Tracked objects:
  9414 ;;		On entry : 3F/0
  9415 ;;		On exit  : 3F/3B
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9422 ;;Total ram usage:        0 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; Hardware stack levels required when called:   15
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		_eaDogM_WriteString
  9429 ;;		_send_lcd_cmd_dma
  9430 ;; This function uses a reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text40
  9434  01B186                     __ptext40:
  9435                           	opt callstack 0
  9436  01B186                     _start_lcd:
  9437                           	opt callstack 12
  9438                           
  9439                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9440                           
  9441                           ; BSR set to: 0
  9442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9443                           ;incstack = 0
  9444  01B186  013B               	movlb	59	; () banked
  9445  01B188  8DFC               	bsf	252,6,b	;volatile
  9446                           
  9447                           ; BSR set to: 59
  9448                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9449  01B18A  0012               	return		;funcret
  9450  01B18C                     __end_of_start_lcd:
  9451                           	opt callstack 0
  9452                           
  9453 ;; *************** function _ringBufS_flush *****************
  9454 ;; Defined at:
  9455 ;;		line 76 in file "ringbufs.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9458 ;;		 -> ring_buf1(67), 
  9459 ;;  clearBuffer     1  [STACK] const char 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;		None
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1  [STACK] void 
  9464 ;; Registers used:
  9465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9466 ;; Tracked objects:
  9467 ;;		On entry : 3F/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9475 ;;Total ram usage:        0 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:   16
  9478 ;; This function calls:
  9479 ;;		_memset
  9480 ;; This function is called by:
  9481 ;;		_eaDogM_WriteString
  9482 ;;		_send_lcd_cmd_dma
  9483 ;; This function uses a reentrant model
  9484 ;;
  9485                           
  9486                           	psect	text41
  9487  019AEA                     __ptext41:
  9488                           	opt callstack 0
  9489  019AEA                     _ringBufS_flush:
  9490                           	opt callstack 11
  9491                           
  9492                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9493                           ;stkvar	__this @ sp[(0)+-2]
  9494                           
  9495                           ; BSR set to: 59
  9496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9497                           ;incstack = 0
  9498  019AEA  0EFE               	movlw	-2
  9499  019AEC  006F FF8C  F00B    	movff	plusw1,btemp+10
  9500  019AF2  0EFF               	movlw	-1
  9501  019AF4  006F FF8C  F00C    	movff	plusw1,btemp+11
  9502  019AFA  0E42               	movlw	66
  9503  019AFC  240B               	addwf	(btemp+10)^0,w,c
  9504  019AFE  6ED9               	movwf	fsr2l,c
  9505  019B00  0E00               	movlw	0
  9506  019B02  200C               	addwfc	(btemp+11)^0,w,c
  9507  019B04  6EDA               	movwf	fsr2h,c
  9508  019B06  0E00               	movlw	0
  9509  019B08  6EDF               	movwf	indf2,c
  9510                           
  9511                           ;ringbufs.c: 79:  _this->head = 0;
  9512                           ;stkvar	__this @ sp[(0)+-2]
  9513  019B0A  0EFE               	movlw	-2
  9514  019B0C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9515  019B12  0EFF               	movlw	-1
  9516  019B14  006F FF8C  F00C    	movff	plusw1,btemp+11
  9517  019B1A  0E40               	movlw	64
  9518  019B1C  240B               	addwf	(btemp+10)^0,w,c
  9519  019B1E  6ED9               	movwf	fsr2l,c
  9520  019B20  0E00               	movlw	0
  9521  019B22  200C               	addwfc	(btemp+11)^0,w,c
  9522  019B24  6EDA               	movwf	fsr2h,c
  9523  019B26  0E00               	movlw	0
  9524  019B28  6EDF               	movwf	indf2,c
  9525                           
  9526                           ;ringbufs.c: 80:  _this->tail = 0;
  9527                           ;stkvar	__this @ sp[(0)+-2]
  9528  019B2A  0EFE               	movlw	-2
  9529  019B2C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9530  019B32  0EFF               	movlw	-1
  9531  019B34  006F FF8C  F00C    	movff	plusw1,btemp+11
  9532  019B3A  0E41               	movlw	65
  9533  019B3C  240B               	addwf	(btemp+10)^0,w,c
  9534  019B3E  6ED9               	movwf	fsr2l,c
  9535  019B40  0E00               	movlw	0
  9536  019B42  200C               	addwfc	(btemp+11)^0,w,c
  9537  019B44  6EDA               	movwf	fsr2h,c
  9538  019B46  0E00               	movlw	0
  9539  019B48  6EDF               	movwf	indf2,c
  9540                           
  9541                           ;ringbufs.c: 81:  if (clearBuffer) {
  9542                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9543  019B4A  0EFD               	movlw	-3
  9544  019B4C  50E3               	movf	plusw1,w,c
  9545  019B4E  B4D8               	btfsc	status,2,c
  9546  019B50  D011               	goto	l1574
  9547                           
  9548                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9549  019B52  0E40               	movlw	64
  9550  019B54  6EE6               	movwf	postinc1,c
  9551  019B56  0E00               	movlw	0
  9552  019B58  6EE6               	movwf	postinc1,c
  9553  019B5A  0E00               	movlw	0
  9554  019B5C  6EE6               	movwf	postinc1,c
  9555  019B5E  0E00               	movlw	0
  9556  019B60  6EE6               	movwf	postinc1,c
  9557                           
  9558                           ;stkvar	__this @ sp[(-4)+-2]
  9559  019B62  0EFA               	movlw	-6
  9560  019B64  006F FF8F FFE6     	movff	plusw1,postinc1
  9561  019B6A  006F FF8F FFE6     	movff	plusw1,postinc1
  9562  019B70  ECA6  F0B0         	call	_memset	;wreg free
  9563  019B74                     l1574:
  9564                           
  9565                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9566  019B74  52E5               	movf	postdec1,f,c
  9567  019B76  52E5               	movf	postdec1,f,c
  9568  019B78  52E5               	movf	postdec1,f,c
  9569  019B7A  0012               	return		;funcret
  9570  019B7C                     __end_of_ringBufS_flush:
  9571                           	opt callstack 0
  9572                           
  9573 ;; *************** function _memset *****************
  9574 ;; Defined at:
  9575 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  dest            2  [STACK] PTR void 
  9578 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9579 ;;  c               2  [STACK] int 
  9580 ;;  n               2  [STACK] unsigned int 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  s               2  [STACK] PTR unsigned char 
  9583 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9584 ;;  k               2  [STACK] unsigned int 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  2  [STACK] PTR void 
  9587 ;; Registers used:
  9588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9598 ;;Total ram usage:        0 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:   15
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_ringBufS_init
  9605 ;;		_ringBufS_flush
  9606 ;; This function uses a reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text42
  9610  01614C                     __ptext42:
  9611                           	opt callstack 0
  9612  01614C                     _memset:
  9613                           	opt callstack 0
  9614                           
  9615                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9616  01614C  52E6               	movf	postinc1,f,c
  9617  01614E  52E6               	movf	postinc1,f,c
  9618  016150  52E6               	movf	postinc1,f,c
  9619  016152  52E6               	movf	postinc1,f,c
  9620                           
  9621                           ;stkvar	_dest @ sp[(-4)+-2]
  9622                           
  9623                           ;incstack = 0
  9624  016154  0EFA               	movlw	-6
  9625  016156  006F FF8C  F00B    	movff	plusw1,btemp+10
  9626  01615C  0EFB               	movlw	-5
  9627  01615E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9628                           
  9629                           ;stkvar	_s @ sp[(-4)+0]
  9630  016164  0EFD               	movlw	-3
  9631  016166  0060  F033  FFE3   	movff	btemp+11,plusw1
  9632  01616C  0EFC               	movlw	-4
  9633  01616E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9634                           
  9635                           ;stkvar	_n @ sp[(-4)+-6]
  9636  016174  0EF6               	movlw	-10
  9637  016176  006F FF8C  F001    	movff	plusw1,btemp
  9638  01617C  0EF7               	movlw	-9
  9639  01617E  50E3               	movf	plusw1,w,c
  9640  016180  1001               	iorwf	btemp^0,w,c
  9641  016182  B4D8               	btfsc	status,2,c
  9642  016184  D154               	goto	u10230
  9643                           
  9644                           ;stkvar	_c @ sp[(-4)+-4]
  9645                           ;stkvar	_s @ sp[(-4)+0]
  9646  016186  0EFC               	movlw	-4
  9647  016188  006F FF8F FFD9     	movff	plusw1,fsr2l
  9648  01618E  0EFD               	movlw	-3
  9649  016190  006F FF8F FFDA     	movff	plusw1,fsr2h
  9650  016196  0EF8               	movlw	-8
  9651  016198  006F FF8F FFDF     	movff	plusw1,indf2
  9652                           
  9653                           ;stkvar	_c @ sp[(-4)+-4]
  9654                           ;stkvar	_n @ sp[(-4)+-6]
  9655                           ;stkvar	_s @ sp[(-4)+0]
  9656  01619E  0EFC               	movlw	-4
  9657  0161A0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9658  0161A6  0EFD               	movlw	-3
  9659  0161A8  006F FF8C  F00C    	movff	plusw1,btemp+11
  9660  0161AE  0EF6               	movlw	-10
  9661  0161B0  50E3               	movf	plusw1,w,c
  9662  0161B2  260B               	addwf	(btemp+10)^0,f,c
  9663  0161B4  0EF7               	movlw	-9
  9664  0161B6  50E3               	movf	plusw1,w,c
  9665  0161B8  220C               	addwfc	(btemp+11)^0,f,c
  9666  0161BA  0EFF               	movlw	255
  9667  0161BC  240B               	addwf	(btemp+10)^0,w,c
  9668  0161BE  6ED9               	movwf	fsr2l,c
  9669  0161C0  0EFF               	movlw	255
  9670  0161C2  200C               	addwfc	(btemp+11)^0,w,c
  9671  0161C4  6EDA               	movwf	fsr2h,c
  9672  0161C6  0EF8               	movlw	-8
  9673  0161C8  006F FF8F FFDF     	movff	plusw1,indf2
  9674                           
  9675                           ;stkvar	_n @ sp[(-4)+-6]
  9676  0161CE  0EF7               	movlw	-9
  9677  0161D0  50E3               	movf	plusw1,w,c
  9678  0161D2  E108               	bnz	l11198
  9679  0161D4  0EF6               	movlw	-10
  9680  0161D6  006F FF8C  F001    	movff	plusw1,btemp
  9681  0161DC  0E03               	movlw	3
  9682  0161DE  5E01               	subwf	btemp^0,f,c
  9683  0161E0  A0D8               	btfss	status,0,c
  9684  0161E2  D125               	goto	u10230
  9685  0161E4                     l11198:
  9686                           
  9687                           ;stkvar	_c @ sp[(-4)+-4]
  9688                           ;stkvar	_s @ sp[(-4)+0]
  9689  0161E4  0EFC               	movlw	-4
  9690  0161E6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9691  0161EC  0EFD               	movlw	-3
  9692  0161EE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9693  0161F4  0E01               	movlw	1
  9694  0161F6  240B               	addwf	(btemp+10)^0,w,c
  9695  0161F8  6ED9               	movwf	fsr2l,c
  9696  0161FA  0E00               	movlw	0
  9697  0161FC  200C               	addwfc	(btemp+11)^0,w,c
  9698  0161FE  6EDA               	movwf	fsr2h,c
  9699  016200  0EF8               	movlw	-8
  9700  016202  006F FF8F FFDF     	movff	plusw1,indf2
  9701                           
  9702                           ;stkvar	_c @ sp[(-4)+-4]
  9703                           ;stkvar	_s @ sp[(-4)+0]
  9704  016208  0EFC               	movlw	-4
  9705  01620A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9706  016210  0EFD               	movlw	-3
  9707  016212  006F FF8C  F00C    	movff	plusw1,btemp+11
  9708  016218  0E02               	movlw	2
  9709  01621A  240B               	addwf	(btemp+10)^0,w,c
  9710  01621C  6ED9               	movwf	fsr2l,c
  9711  01621E  0E00               	movlw	0
  9712  016220  200C               	addwfc	(btemp+11)^0,w,c
  9713  016222  6EDA               	movwf	fsr2h,c
  9714  016224  0EF8               	movlw	-8
  9715  016226  006F FF8F FFDF     	movff	plusw1,indf2
  9716                           
  9717                           ;stkvar	_c @ sp[(-4)+-4]
  9718                           ;stkvar	_n @ sp[(-4)+-6]
  9719                           ;stkvar	_s @ sp[(-4)+0]
  9720  01622C  0EFC               	movlw	-4
  9721  01622E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9722  016234  0EFD               	movlw	-3
  9723  016236  006F FF8C  F00C    	movff	plusw1,btemp+11
  9724  01623C  0EF6               	movlw	-10
  9725  01623E  50E3               	movf	plusw1,w,c
  9726  016240  260B               	addwf	(btemp+10)^0,f,c
  9727  016242  0EF7               	movlw	-9
  9728  016244  50E3               	movf	plusw1,w,c
  9729  016246  220C               	addwfc	(btemp+11)^0,f,c
  9730  016248  0EFE               	movlw	254
  9731  01624A  240B               	addwf	(btemp+10)^0,w,c
  9732  01624C  6ED9               	movwf	fsr2l,c
  9733  01624E  0EFF               	movlw	255
  9734  016250  200C               	addwfc	(btemp+11)^0,w,c
  9735  016252  6EDA               	movwf	fsr2h,c
  9736  016254  0EF8               	movlw	-8
  9737  016256  006F FF8F FFDF     	movff	plusw1,indf2
  9738                           
  9739                           ;stkvar	_c @ sp[(-4)+-4]
  9740                           ;stkvar	_n @ sp[(-4)+-6]
  9741                           ;stkvar	_s @ sp[(-4)+0]
  9742  01625C  0EFC               	movlw	-4
  9743  01625E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9744  016264  0EFD               	movlw	-3
  9745  016266  006F FF8C  F00C    	movff	plusw1,btemp+11
  9746  01626C  0EF6               	movlw	-10
  9747  01626E  50E3               	movf	plusw1,w,c
  9748  016270  260B               	addwf	(btemp+10)^0,f,c
  9749  016272  0EF7               	movlw	-9
  9750  016274  50E3               	movf	plusw1,w,c
  9751  016276  220C               	addwfc	(btemp+11)^0,f,c
  9752  016278  0EFD               	movlw	253
  9753  01627A  240B               	addwf	(btemp+10)^0,w,c
  9754  01627C  6ED9               	movwf	fsr2l,c
  9755  01627E  0EFF               	movlw	255
  9756  016280  200C               	addwfc	(btemp+11)^0,w,c
  9757  016282  6EDA               	movwf	fsr2h,c
  9758  016284  0EF8               	movlw	-8
  9759  016286  006F FF8F FFDF     	movff	plusw1,indf2
  9760                           
  9761                           ;stkvar	_n @ sp[(-4)+-6]
  9762  01628C  0EF7               	movlw	-9
  9763  01628E  50E3               	movf	plusw1,w,c
  9764  016290  E108               	bnz	l11204
  9765  016292  0EF6               	movlw	-10
  9766  016294  006F FF8C  F001    	movff	plusw1,btemp
  9767  01629A  0E07               	movlw	7
  9768  01629C  5E01               	subwf	btemp^0,f,c
  9769  01629E  A0D8               	btfss	status,0,c
  9770  0162A0  D0C6               	goto	u10230
  9771  0162A2                     l11204:
  9772                           
  9773                           ;stkvar	_c @ sp[(-4)+-4]
  9774                           ;stkvar	_s @ sp[(-4)+0]
  9775  0162A2  0EFC               	movlw	-4
  9776  0162A4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9777  0162AA  0EFD               	movlw	-3
  9778  0162AC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9779  0162B2  0E03               	movlw	3
  9780  0162B4  240B               	addwf	(btemp+10)^0,w,c
  9781  0162B6  6ED9               	movwf	fsr2l,c
  9782  0162B8  0E00               	movlw	0
  9783  0162BA  200C               	addwfc	(btemp+11)^0,w,c
  9784  0162BC  6EDA               	movwf	fsr2h,c
  9785  0162BE  0EF8               	movlw	-8
  9786  0162C0  006F FF8F FFDF     	movff	plusw1,indf2
  9787                           
  9788                           ;stkvar	_c @ sp[(-4)+-4]
  9789                           ;stkvar	_n @ sp[(-4)+-6]
  9790                           ;stkvar	_s @ sp[(-4)+0]
  9791  0162C6  0EFC               	movlw	-4
  9792  0162C8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9793  0162CE  0EFD               	movlw	-3
  9794  0162D0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9795  0162D6  0EF6               	movlw	-10
  9796  0162D8  50E3               	movf	plusw1,w,c
  9797  0162DA  260B               	addwf	(btemp+10)^0,f,c
  9798  0162DC  0EF7               	movlw	-9
  9799  0162DE  50E3               	movf	plusw1,w,c
  9800  0162E0  220C               	addwfc	(btemp+11)^0,f,c
  9801  0162E2  0EFC               	movlw	252
  9802  0162E4  240B               	addwf	(btemp+10)^0,w,c
  9803  0162E6  6ED9               	movwf	fsr2l,c
  9804  0162E8  0EFF               	movlw	255
  9805  0162EA  200C               	addwfc	(btemp+11)^0,w,c
  9806  0162EC  6EDA               	movwf	fsr2h,c
  9807  0162EE  0EF8               	movlw	-8
  9808  0162F0  006F FF8F FFDF     	movff	plusw1,indf2
  9809                           
  9810                           ;stkvar	_n @ sp[(-4)+-6]
  9811  0162F6  0EF7               	movlw	-9
  9812  0162F8  50E3               	movf	plusw1,w,c
  9813  0162FA  E108               	bnz	l11210
  9814  0162FC  0EF6               	movlw	-10
  9815  0162FE  006F FF8C  F001    	movff	plusw1,btemp
  9816  016304  0E09               	movlw	9
  9817  016306  5E01               	subwf	btemp^0,f,c
  9818  016308  A0D8               	btfss	status,0,c
  9819  01630A  D091               	goto	u10230
  9820  01630C                     l11210:
  9821                           
  9822                           ;stkvar	_s @ sp[(-4)+0]
  9823  01630C  0EFC               	movlw	-4
  9824  01630E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9825  016314  1E0B               	comf	(btemp+10)^0,f,c
  9826  016316  0EFD               	movlw	-3
  9827  016318  006F FF8C  F00C    	movff	plusw1,btemp+11
  9828  01631E  1E0C               	comf	(btemp+11)^0,f,c
  9829  016320  2A0B               	incf	(btemp+10)^0,f,c
  9830  016322  B4D8               	btfsc	status,2,c
  9831  016324  2A0C               	incf	(btemp+11)^0,f,c
  9832  016326  0E03               	movlw	3
  9833  016328  160B               	andwf	(btemp+10)^0,f,c
  9834  01632A  0E00               	movlw	0
  9835  01632C  160C               	andwf	(btemp+11)^0,f,c
  9836                           
  9837                           ;stkvar	_k @ sp[(-4)+2]
  9838  01632E  0EFE               	movlw	-2
  9839  016330  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9840  016336  0EFF               	movlw	-1
  9841  016338  0060  F033  FFE3   	movff	btemp+11,plusw1
  9842                           
  9843                           ;stkvar	_k @ sp[(-4)+2]
  9844                           ;stkvar	_s @ sp[(-4)+0]
  9845  01633E  0EFC               	movlw	-4
  9846  016340  50E3               	movf	plusw1,w,c
  9847  016342  6E01               	movwf	btemp^0,c
  9848  016344  0EFE               	movlw	-2
  9849  016346  50E3               	movf	plusw1,w,c
  9850  016348  2601               	addwf	btemp^0,f,c
  9851  01634A  0EFC               	movlw	-4
  9852  01634C  0060  F007  FFE3   	movff	btemp,plusw1
  9853  016352  0EFD               	movlw	-3
  9854  016354  50E3               	movf	plusw1,w,c
  9855  016356  6E01               	movwf	btemp^0,c
  9856  016358  0EFF               	movlw	-1
  9857  01635A  50E3               	movf	plusw1,w,c
  9858  01635C  2201               	addwfc	btemp^0,f,c
  9859  01635E  0EFD               	movlw	-3
  9860  016360  0060  F007  FFE3   	movff	btemp,plusw1
  9861                           
  9862                           ;stkvar	_k @ sp[(-4)+2]
  9863                           ;stkvar	_n @ sp[(-4)+-6]
  9864  016366  0EF6               	movlw	-10
  9865  016368  50E3               	movf	plusw1,w,c
  9866  01636A  6E01               	movwf	btemp^0,c
  9867  01636C  0EFE               	movlw	-2
  9868  01636E  50E3               	movf	plusw1,w,c
  9869  016370  5E01               	subwf	btemp^0,f,c
  9870  016372  0EF6               	movlw	-10
  9871  016374  0060  F007  FFE3   	movff	btemp,plusw1
  9872  01637A  0EF7               	movlw	-9
  9873  01637C  50E3               	movf	plusw1,w,c
  9874  01637E  6E01               	movwf	btemp^0,c
  9875  016380  0EFF               	movlw	-1
  9876  016382  50E3               	movf	plusw1,w,c
  9877  016384  5A01               	subwfb	btemp^0,f,c
  9878  016386  0EF7               	movlw	-9
  9879  016388  0060  F007  FFE3   	movff	btemp,plusw1
  9880  01638E  0EFC               	movlw	252
  9881  016390  6E0B               	movwf	(btemp+10)^0,c
  9882  016392  0EFF               	movlw	255
  9883  016394  6E0C               	movwf	(btemp+11)^0,c
  9884                           
  9885                           ;stkvar	_n @ sp[(-4)+-6]
  9886  016396  0EF6               	movlw	-10
  9887  016398  006F FF8C  F001    	movff	plusw1,btemp
  9888  01639E  500B               	movf	(btemp+10)^0,w,c
  9889  0163A0  1601               	andwf	btemp^0,f,c
  9890  0163A2  0EF6               	movlw	-10
  9891  0163A4  0060  F007  FFE3   	movff	btemp,plusw1
  9892  0163AA  0EF7               	movlw	-9
  9893  0163AC  006F FF8C  F001    	movff	plusw1,btemp
  9894  0163B2  500C               	movf	(btemp+11)^0,w,c
  9895  0163B4  1601               	andwf	btemp^0,f,c
  9896  0163B6  0EF7               	movlw	-9
  9897  0163B8  D02E               	goto	L4
  9898  0163BA                     l11218:
  9899                           
  9900                           ;stkvar	_c @ sp[(-4)+-4]
  9901                           ;stkvar	_s @ sp[(-4)+0]
  9902  0163BA  0EFC               	movlw	-4
  9903  0163BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9904  0163C2  0EFD               	movlw	-3
  9905  0163C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9906  0163CA  0EF8               	movlw	-8
  9907  0163CC  006F FF8F FFDF     	movff	plusw1,indf2
  9908                           
  9909                           ;stkvar	_n @ sp[(-4)+-6]
  9910  0163D2  0EF6               	movlw	-10
  9911  0163D4  006F FF8C  F001    	movff	plusw1,btemp
  9912  0163DA  0E01               	movlw	1
  9913  0163DC  5E01               	subwf	btemp^0,f,c
  9914  0163DE  0EF6               	movlw	-10
  9915  0163E0  0060  F007  FFE3   	movff	btemp,plusw1
  9916  0163E6  0EF7               	movlw	-9
  9917  0163E8  006F FF8C  F001    	movff	plusw1,btemp
  9918  0163EE  0E00               	movlw	0
  9919  0163F0  5A01               	subwfb	btemp^0,f,c
  9920  0163F2  0EF7               	movlw	-9
  9921  0163F4  0060  F007  FFE3   	movff	btemp,plusw1
  9922                           
  9923                           ;stkvar	_s @ sp[(-4)+0]
  9924  0163FA  0EFC               	movlw	-4
  9925  0163FC  50E3               	movf	plusw1,w,c
  9926  0163FE  0F01               	addlw	1
  9927  016400  6E01               	movwf	btemp^0,c
  9928  016402  0EFC               	movlw	-4
  9929  016404  0060  F007  FFE3   	movff	btemp,plusw1
  9930  01640A  6A01               	clrf	btemp^0,c
  9931  01640C  0EFD               	movlw	-3
  9932  01640E  50E3               	movf	plusw1,w,c
  9933  016410  2001               	addwfc	btemp^0,w,c
  9934  016412  6E01               	movwf	btemp^0,c
  9935  016414  0EFD               	movlw	-3
  9936  016416                     L4:
  9937  016416  0060  F007  FFE3   	movff	btemp,plusw1
  9938                           
  9939                           ;stkvar	_n @ sp[(-4)+-6]
  9940  01641C  0EF6               	movlw	-10
  9941  01641E  006F FF8C  F001    	movff	plusw1,btemp
  9942  016424  0EF7               	movlw	-9
  9943  016426  50E3               	movf	plusw1,w,c
  9944  016428  1001               	iorwf	btemp^0,w,c
  9945  01642A  A4D8               	btfss	status,2,c
  9946  01642C  D7C6               	goto	l11218
  9947  01642E                     u10230:
  9948                           
  9949                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9950  01642E  0EF6               	movlw	246
  9951  016430  26E1               	addwf	fsr1l,f,c
  9952  016432  0EFF               	movlw	255
  9953  016434  22E2               	addwfc	fsr1h,f,c
  9954  016436  0012               	return		;funcret
  9955  016438                     __end_of_memset:
  9956                           	opt callstack 0
  9957                           
  9958 ;; *************** function _printf *****************
  9959 ;; Defined at:
  9960 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;  fmt             2  [STACK] PTR const unsigned char 
  9963 ;;		 -> STR_35(3), STR_34(3), STR_33(3), 
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;  ap              2  [STACK] PTR void [1]
  9966 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9967 ;;  ret             2    0        int 
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  2  [STACK] int 
  9970 ;; Registers used:
  9971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9972 ;; Tracked objects:
  9973 ;;		On entry : 3F/3B
  9974 ;;		On exit  : 3F/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9981 ;;Total ram usage:        0 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; Hardware stack levels required when called:   23
  9984 ;; This function calls:
  9985 ;;		_vfprintf
  9986 ;; This function is called by:
  9987 ;;		_eaDogM_WriteString
  9988 ;;		_send_lcd_cmd_dma
  9989 ;; This function uses a reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text43
  9993  01A0B4                     __ptext43:
  9994                           	opt callstack 0
  9995  01A0B4                     _printf:
  9996                           	opt callstack 0
  9997                           
  9998                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9999  01A0B4  52E6               	movf	postinc1,f,c
 10000  01A0B6  52E6               	movf	postinc1,f,c
 10001                           
 10002                           ;stkvar	?_printf @ sp[(-2)+-3]
 10003                           
 10004                           ;incstack = 0
 10005  01A0B8  0EFB               	movlw	251
 10006  01A0BA  24E1               	addwf	fsr1l,w,c
 10007  01A0BC  6E0B               	movwf	(btemp+10)^0,c
 10008  01A0BE  0EFF               	movlw	255
 10009  01A0C0  20E2               	addwfc	fsr1h,w,c
 10010  01A0C2  6E0C               	movwf	(btemp+11)^0,c
 10011                           
 10012                           ;stkvar	_ap @ sp[(-2)+0]
 10013  01A0C4  0EFF               	movlw	-1
 10014  01A0C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10015  01A0CC  0EFE               	movlw	-2
 10016  01A0CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10017                           
 10018                           ;stkvar	_ap @ sp[(-2)+0]
 10019  01A0D4  0EFE               	movlw	254
 10020  01A0D6  24E1               	addwf	fsr1l,w,c
 10021  01A0D8  6E01               	movwf	btemp^0,c
 10022  01A0DA  0EFF               	movlw	255
 10023  01A0DC  20E2               	addwfc	fsr1h,w,c
 10024  01A0DE  6E02               	movwf	(btemp+1)^0,c
 10025  01A0E0  0060  F007  FFE6   	movff	btemp,postinc1
 10026  01A0E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10027                           
 10028                           ;stkvar	_fmt @ sp[(-4)+-3]
 10029  01A0EC  0EF9               	movlw	-7
 10030  01A0EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10031  01A0F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10032  01A0FA  0E00               	movlw	0
 10033  01A0FC  6EE6               	movwf	postinc1,c
 10034  01A0FE  0E00               	movlw	0
 10035  01A100  6EE6               	movwf	postinc1,c
 10036  01A102  EC91  F0CB         	call	_vfprintf	;wreg free
 10037                           
 10038                           ; BSR set to: 0
 10039                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10040  01A106  52E5               	movf	postdec1,f,c
 10041  01A108  52E5               	movf	postdec1,f,c
 10042  01A10A  52E5               	movf	postdec1,f,c
 10043  01A10C  50E7               	movf	indf1,w,c
 10044  01A10E  5EE1               	subwf	fsr1l,f,c
 10045  01A110  0E00               	movlw	0
 10046  01A112  5AE2               	subwfb	fsr1h,f,c
 10047  01A114  0012               	return		;funcret
 10048  01A116                     __end_of_printf:
 10049                           	opt callstack 0
 10050                           
 10051 ;; *************** function _vfprintf *****************
 10052 ;; Defined at:
 10053 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10056 ;;		 -> f(6), NULL(0), 
 10057 ;;  fmt             2  [STACK] PTR const unsigned char 
 10058 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
 10059 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
 10060 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
 10061 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
 10062 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
 10063 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(20), 
 10064 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
 10065 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
 10066 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
 10067 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
 10068 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(26), 
 10069 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
 10070 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 10071 ;;  ap              2  [STACK] PTR PTR void 
 10072 ;;		 -> ap(2), ap(2), 
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;  cfmt            2  [STACK] PTR unsigned char 
 10075 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
 10076 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
 10077 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
 10078 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
 10079 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
 10080 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(20), 
 10081 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
 10082 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
 10083 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
 10084 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
 10085 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(26), 
 10086 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
 10087 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  2  [STACK] int 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/1
 10094 ;;		On exit  : 3F/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10101 ;;Total ram usage:        0 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:   22
 10104 ;; This function calls:
 10105 ;;		_vfpfcnvrt
 10106 ;; This function is called by:
 10107 ;;		_sprintf
 10108 ;;		_printf
 10109 ;; This function uses a reentrant model
 10110 ;;
 10111                           
 10112                           	psect	text44
 10113  019722                     __ptext44:
 10114                           	opt callstack 0
 10115  019722                     _vfprintf:
 10116                           	opt callstack 0
 10117                           
 10118                           ; BSR set to: 0
 10119                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10120  019722  52E6               	movf	postinc1,f,c
 10121  019724  52E6               	movf	postinc1,f,c
 10122                           
 10123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10124                           ;stkvar	_fmt @ sp[(-2)+-4]
 10125                           
 10126                           ;incstack = 0
 10127 ;; hardware stack exceeded
 10128  019726  0EFA               	movlw	-6
 10129  019728  006F FF8C  F00B    	movff	plusw1,btemp+10
 10130  01972E  0EFB               	movlw	-5
 10131  019730  006F FF8C  F00C    	movff	plusw1,btemp+11
 10132                           
 10133                           ;stkvar	_cfmt @ sp[(-2)+0]
 10134  019736  0EFF               	movlw	-1
 10135  019738  0060  F033  FFE3   	movff	btemp+11,plusw1
 10136  01973E  0EFE               	movlw	-2
 10137  019740  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10138                           
 10139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10140  019746  0100               	movlb	0	; () banked
 10141  019748  6BC0               	clrf	_nout& (0+255),b
 10142  01974A  6BC1               	clrf	(_nout+1)& (0+255),b
 10143                           
 10144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10145  01974C  D021               	goto	l12042
 10146  01974E                     l12040:
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10150                           ;stkvar	_ap @ sp[(-2)+-6]
 10151  01974E  0EF8               	movlw	-8
 10152  019750  006F FF8F FFE6     	movff	plusw1,postinc1
 10153  019756  006F FF8F FFE6     	movff	plusw1,postinc1
 10154                           
 10155                           ;stkvar	_cfmt @ sp[(-4)+0]
 10156  01975C  0EFC               	movlw	252
 10157  01975E  24E1               	addwf	fsr1l,w,c
 10158  019760  6E01               	movwf	btemp^0,c
 10159  019762  0EFF               	movlw	255
 10160  019764  20E2               	addwfc	fsr1h,w,c
 10161  019766  6E02               	movwf	(btemp+1)^0,c
 10162  019768  0060  F007  FFE6   	movff	btemp,postinc1
 10163  01976E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10164                           
 10165                           ;stkvar	_fp @ sp[(-6)+-2]
 10166  019774  0EF8               	movlw	-8
 10167  019776  006F FF8F FFE6     	movff	plusw1,postinc1
 10168  01977C  006F FF8F FFE6     	movff	plusw1,postinc1
 10169  019782  EC22  F089         	call	_vfpfcnvrt	;wreg free
 10170  019786  5001               	movf	btemp^0,w,c
 10171  019788  0100               	movlb	0	; () banked
 10172  01978A  27C0               	addwf	_nout& (0+255),f,b
 10173  01978C  5002               	movf	(btemp+1)^0,w,c
 10174  01978E  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10175  019790                     l12042:
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10179                           ;stkvar	_cfmt @ sp[(-2)+0]
 10180  019790  50E1               	movf	fsr1l,w,c
 10181  019792  0FFE               	addlw	-2
 10182  019794  6ED9               	movwf	fsr2l,c
 10183  019796  50E2               	movf	fsr1h,w,c
 10184  019798  6EDA               	movwf	fsr2h,c
 10185  01979A  0EFF               	movlw	255
 10186  01979C  22DA               	addwfc	fsr2h,f,c
 10187  01979E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10188  0197A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10189  0197AA                     	if	0	;tblptru may be non-zero
 10190  0197AA                     	endif
 10191  0197AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10192  0197AA  0E00               	movlw	low (__mediumconst shr (0+16))
 10193  0197AC  6EF8               	movwf	tblptru,c
 10194  0197AE                     	endif
 10195  0197AE  0008               	tblrd		*
 10196  0197B0  50F5               	movf	tablat,w,c
 10197  0197B2  0900               	iorlw	0
 10198  0197B4  A4D8               	btfss	status,2,c
 10199  0197B6  D7CB               	goto	l12040
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10203  0197B8  0060  F300  F001   	movff	_nout,btemp
 10204  0197BE  0060  F304  F002   	movff	_nout+1,btemp+1
 10205                           
 10206                           ; BSR set to: 0
 10207                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10208  0197C4  0EF8               	movlw	248
 10209  0197C6  26E1               	addwf	fsr1l,f,c
 10210  0197C8  0EFF               	movlw	255
 10211  0197CA  22E2               	addwfc	fsr1h,f,c
 10212  0197CC  0012               	return		;funcret
 10213  0197CE                     __end_of_vfprintf:
 10214                           	opt callstack 0
 10215                           
 10216 ;; *************** function _vfpfcnvrt *****************
 10217 ;; Defined at:
 10218 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10221 ;;		 -> f(6), NULL(0), 
 10222 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10223 ;;		 -> cfmt(2), 
 10224 ;;  ap              2  [STACK] PTR PTR void 
 10225 ;;		 -> ap(2), ap(2), 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  llu             8  [STACK] unsigned long long 
 10228 ;;  ll              8  [STACK] long long 
 10229 ;;  f               4  [STACK] long long 
 10230 ;;  ct              3  [STACK] unsigned char [3]
 10231 ;;  vp              3    0        PTR void 
 10232 ;;  cp              2  [STACK] PTR unsigned char 
 10233 ;;		 -> ?_printf(2), ?_sprintf(2), STR_37(9), STR_36(12), 
 10234 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 10235 ;;		 -> V(188), 
 10236 ;;  i               2    0        int 
 10237 ;;  done            2    0        int 
 10238 ;;  c               1  [STACK] unsigned char 
 10239 ;; Return value:  Size  Location     Type
 10240 ;;                  2  [STACK] int 
 10241 ;; Registers used:
 10242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10252 ;;Total ram usage:        0 bytes
 10253 ;; Hardware stack levels used:    1
 10254 ;; Hardware stack levels required when called:   21
 10255 ;; This function calls:
 10256 ;;		_atoi
 10257 ;;		_ctoa
 10258 ;;		_dtoa
 10259 ;;		_efgtoa
 10260 ;;		_fputc
 10261 ;;		_isdigit
 10262 ;;		_isupper
 10263 ;;		_stoa
 10264 ;;		_strncmp
 10265 ;;		_tolower
 10266 ;;		_utoa
 10267 ;;		_xtoa
 10268 ;; This function is called by:
 10269 ;;		_vfprintf
 10270 ;; This function uses a reentrant model
 10271 ;;
 10272                           
 10273                           	psect	text45
 10274  011244                     __ptext45:
 10275                           	opt callstack 0
 10276  011244                     _vfpfcnvrt:
 10277                           	opt callstack 0
 10278                           
 10279                           ; BSR set to: 0
 10280                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10281  011244  0E20               	movlw	32
 10282  011246  26E1               	addwf	fsr1l,f,c
 10283  011248  0E00               	movlw	0
 10284  01124A  22E2               	addwfc	fsr1h,f,c
 10285                           
 10286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10287                           ;stkvar	_fmt @ sp[(-32)+-4]
 10288                           
 10289                           ;incstack = 0
 10290 ;; hardware stack exceeded
 10291  01124C  0EDC               	movlw	-36
 10292  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10293  011254  0EDD               	movlw	-35
 10294  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
 10295  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10296  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
 10297  011268                     	if	0	;tblptru may be non-zero
 10298  011268                     	endif
 10299  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10300  011268  0E00               	movlw	low (__mediumconst shr (0+16))
 10301  01126A  6EF8               	movwf	tblptru,c
 10302  01126C                     	endif
 10303  01126C  0008               	tblrd		*
 10304  01126E  50F5               	movf	tablat,w,c
 10305  011270  0A25               	xorlw	37
 10306  011272  A4D8               	btfss	status,2,c
 10307  011274  EFC9  F090         	goto	l11986
 10308                           
 10309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10310                           ;stkvar	_fmt @ sp[(-32)+-4]
 10311  011278  0EDC               	movlw	-36
 10312  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10313  011280  0EDD               	movlw	-35
 10314  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
 10315  011288  2ADE               	incf	postinc2,f,c
 10316  01128A  0E00               	movlw	0
 10317  01128C  22DD               	addwfc	postdec2,f,c
 10318                           
 10319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10320  01128E  6A21               	clrf	_width^0,c
 10321  011290  6A22               	clrf	(_width+1)^0,c
 10322  011292  6A25               	clrf	_flags^0,c
 10323  011294  6A26               	clrf	(_flags+1)^0,c
 10324                           
 10325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10326  011296  6823               	setf	_prec^0,c
 10327  011298  6824               	setf	(_prec+1)^0,c
 10328                           
 10329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 10330                           ;stkvar	_fmt @ sp[(-32)+-4]
 10331  01129A  0EDC               	movlw	-36
 10332  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10333  0112A2  0EDD               	movlw	-35
 10334  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10335  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10336  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10337  0112B6                     	if	0	;tblptru may be non-zero
 10338  0112B6                     	endif
 10339  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10340  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
 10341  0112B8  6EF8               	movwf	tblptru,c
 10342  0112BA                     	endif
 10343  0112BA  0008               	tblrd		*
 10344  0112BC  50F5               	movf	tablat,w,c
 10345  0112BE  0A2A               	xorlw	42
 10346  0112C0  A4D8               	btfss	status,2,c
 10347  0112C2  D031               	goto	l11804
 10348                           
 10349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 10350                           ;stkvar	_fmt @ sp[(-32)+-4]
 10351  0112C4  0EDC               	movlw	-36
 10352  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10353  0112CC  0EDD               	movlw	-35
 10354  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10355  0112D4  2ADE               	incf	postinc2,f,c
 10356  0112D6  0E00               	movlw	0
 10357  0112D8  22DD               	addwfc	postdec2,f,c
 10358                           
 10359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10360                           ;stkvar	_ap @ sp[(-32)+-6]
 10361  0112DA  0EDA               	movlw	-38
 10362  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10363  0112E2  0EDB               	movlw	-37
 10364  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10365  0112EA  0E02               	movlw	2
 10366  0112EC  5EDE               	subwf	postinc2,f,c
 10367  0112EE  0E00               	movlw	0
 10368  0112F0  5ADD               	subwfb	postdec2,f,c
 10369  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
 10370  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
 10371  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10372  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10373  01130A  006F FF78  F021    	movff	postinc2,_width
 10374  011310  006F FF74  F022    	movff	postdec2,_width+1
 10375                           
 10376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 10377  011316  AE22               	btfss	(_width+1)^0,7,c
 10378  011318  D066               	goto	u11360
 10379                           
 10380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10381  01131A  8025               	bsf	_flags^0,0,c
 10382                           
 10383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10384  01131C  6C21               	negf	_width^0,c
 10385  01131E  1E22               	comf	(_width+1)^0,f,c
 10386  011320  B0D8               	btfsc	status,0,c
 10387  011322  2A22               	incf	(_width+1)^0,f,c
 10388  011324  D060               	goto	u11360
 10389  011326                     l11804:
 10390                           
 10391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10392                           ;stkvar	_fmt @ sp[(-32)+-4]
 10393  011326  0EDC               	movlw	-36
 10394  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10395  01132E  0EDD               	movlw	-35
 10396  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10397  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10398  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10399  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10400  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10401  01134E  ECBB  F0B4         	call	_atoi	;wreg free
 10402  011352  0060  F004  F021   	movff	btemp,_width
 10403  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10404                           
 10405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10406  01135E  D00B               	goto	l11808
 10407  011360                     l11806:
 10408                           
 10409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10410                           ;stkvar	_fmt @ sp[(-32)+-4]
 10411  011360  0EDC               	movlw	-36
 10412  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10413  011368  0EDD               	movlw	-35
 10414  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10415  011370  2ADE               	incf	postinc2,f,c
 10416  011372  0E00               	movlw	0
 10417  011374  22DD               	addwfc	postdec2,f,c
 10418  011376                     l11808:
 10419  011376  0ED0               	movlw	208
 10420  011378  6E0B               	movwf	(btemp+10)^0,c
 10421  01137A  0EFF               	movlw	255
 10422  01137C  6E0C               	movwf	(btemp+11)^0,c
 10423                           
 10424                           ;stkvar	_fmt @ sp[(-32)+-4]
 10425  01137E  0EDC               	movlw	-36
 10426  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10427  011386  0EDD               	movlw	-35
 10428  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10429  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10430  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10431  01139A                     	if	0	;tblptru may be non-zero
 10432  01139A                     	endif
 10433  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10434  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10435  01139C  6EF8               	movwf	tblptru,c
 10436  01139E                     	endif
 10437  01139E  0008               	tblrd		*
 10438  0113A0  50F5               	movf	tablat,w,c
 10439  0113A2  6E09               	movwf	(btemp+8)^0,c
 10440  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10441  0113A6  500B               	movf	(btemp+10)^0,w,c
 10442  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10443  0113AA  500C               	movf	(btemp+11)^0,w,c
 10444  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10445  0113AE  500A               	movf	(btemp+9)^0,w,c
 10446  0113B0  E106               	bnz	u11340
 10447  0113B2  0E0A               	movlw	10
 10448  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10449  0113B6  B0D8               	btfsc	status,0,c
 10450  0113B8  D002               	goto	u11340
 10451  0113BA  0E01               	movlw	1
 10452  0113BC  D001               	goto	u11350
 10453  0113BE                     u11340:
 10454  0113BE  0E00               	movlw	0
 10455  0113C0                     u11350:
 10456  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10457  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10458                           
 10459                           ;stkvar	_vfpfcnvrt$5352 @ sp[(-32)+4]
 10460  0113C4  0EE4               	movlw	-28
 10461  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10462  0113CC  0EE5               	movlw	-27
 10463  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10464                           
 10465                           ;stkvar	_vfpfcnvrt$5352 @ sp[(-32)+4]
 10466  0113D4  0EE4               	movlw	-28
 10467  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10468  0113DC  0EE5               	movlw	-27
 10469  0113DE  50E3               	movf	plusw1,w,c
 10470  0113E0  1001               	iorwf	btemp^0,w,c
 10471  0113E2  A4D8               	btfss	status,2,c
 10472  0113E4  D7BD               	goto	l11806
 10473  0113E6                     u11360:
 10474                           
 10475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10476                           ;stkvar	_fmt @ sp[(-32)+-4]
 10477  0113E6  0EDC               	movlw	-36
 10478  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10479  0113EE  0EDD               	movlw	-35
 10480  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10481  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10482  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10483  011402                     	if	0	;tblptru may be non-zero
 10484  011402                     	endif
 10485  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10486  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10487  011404  6EF8               	movwf	tblptru,c
 10488  011406                     	endif
 10489  011406  0008               	tblrd		*
 10490  011408  50F5               	movf	tablat,w,c
 10491  01140A  0A2E               	xorlw	46
 10492  01140C  A4D8               	btfss	status,2,c
 10493  01140E  D0AC               	goto	u11410
 10494                           
 10495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10496  011410  6A23               	clrf	_prec^0,c
 10497  011412  6A24               	clrf	(_prec+1)^0,c
 10498                           
 10499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10500                           ;stkvar	_fmt @ sp[(-32)+-4]
 10501  011414  0EDC               	movlw	-36
 10502  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10503  01141C  0EDD               	movlw	-35
 10504  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10505  011424  2ADE               	incf	postinc2,f,c
 10506  011426  0E00               	movlw	0
 10507  011428  22DD               	addwfc	postdec2,f,c
 10508                           
 10509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10510                           ;stkvar	_fmt @ sp[(-32)+-4]
 10511  01142A  0EDC               	movlw	-36
 10512  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10513  011432  0EDD               	movlw	-35
 10514  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10515  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10516  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10517  011446                     	if	0	;tblptru may be non-zero
 10518  011446                     	endif
 10519  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10520  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10521  011448  6EF8               	movwf	tblptru,c
 10522  01144A                     	endif
 10523  01144A  0008               	tblrd		*
 10524  01144C  50F5               	movf	tablat,w,c
 10525  01144E  0A2A               	xorlw	42
 10526  011450  A4D8               	btfss	status,2,c
 10527  011452  D02A               	goto	l11826
 10528                           
 10529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10530                           ;stkvar	_fmt @ sp[(-32)+-4]
 10531  011454  0EDC               	movlw	-36
 10532  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10533  01145C  0EDD               	movlw	-35
 10534  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10535  011464  2ADE               	incf	postinc2,f,c
 10536  011466  0E00               	movlw	0
 10537  011468  22DD               	addwfc	postdec2,f,c
 10538                           
 10539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10540                           ;stkvar	_ap @ sp[(-32)+-6]
 10541  01146A  0EDA               	movlw	-38
 10542  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10543  011472  0EDB               	movlw	-37
 10544  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10545  01147A  0E02               	movlw	2
 10546  01147C  5EDE               	subwf	postinc2,f,c
 10547  01147E  0E00               	movlw	0
 10548  011480  5ADD               	subwfb	postdec2,f,c
 10549  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10550  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10551  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10552  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10553  01149A  006F FF78  F023    	movff	postinc2,_prec
 10554  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10555                           
 10556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10557  0114A6  D060               	goto	u11410
 10558  0114A8                     l11826:
 10559                           
 10560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10561                           ;stkvar	_fmt @ sp[(-32)+-4]
 10562  0114A8  0EDC               	movlw	-36
 10563  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10564  0114B0  0EDD               	movlw	-35
 10565  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10566  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10567  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10568  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10569  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10570  0114D0  ECBB  F0B4         	call	_atoi	;wreg free
 10571  0114D4  0060  F004  F023   	movff	btemp,_prec
 10572  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10573                           
 10574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10575  0114E0  D00B               	goto	l11830
 10576  0114E2                     l11828:
 10577                           
 10578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10579                           ;stkvar	_fmt @ sp[(-32)+-4]
 10580  0114E2  0EDC               	movlw	-36
 10581  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10582  0114EA  0EDD               	movlw	-35
 10583  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10584  0114F2  2ADE               	incf	postinc2,f,c
 10585  0114F4  0E00               	movlw	0
 10586  0114F6  22DD               	addwfc	postdec2,f,c
 10587  0114F8                     l11830:
 10588  0114F8  0ED0               	movlw	208
 10589  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10590  0114FC  0EFF               	movlw	255
 10591  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10592                           
 10593                           ;stkvar	_fmt @ sp[(-32)+-4]
 10594  011500  0EDC               	movlw	-36
 10595  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10596  011508  0EDD               	movlw	-35
 10597  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10598  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10599  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10600  01151C                     	if	0	;tblptru may be non-zero
 10601  01151C                     	endif
 10602  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10603  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10604  01151E  6EF8               	movwf	tblptru,c
 10605  011520                     	endif
 10606  011520  0008               	tblrd		*
 10607  011522  50F5               	movf	tablat,w,c
 10608  011524  6E09               	movwf	(btemp+8)^0,c
 10609  011526  6A0A               	clrf	(btemp+9)^0,c
 10610  011528  500B               	movf	(btemp+10)^0,w,c
 10611  01152A  2609               	addwf	(btemp+8)^0,f,c
 10612  01152C  500C               	movf	(btemp+11)^0,w,c
 10613  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10614  011530  500A               	movf	(btemp+9)^0,w,c
 10615  011532  E106               	bnz	u11390
 10616  011534  0E0A               	movlw	10
 10617  011536  5C09               	subwf	(btemp+8)^0,w,c
 10618  011538  B0D8               	btfsc	status,0,c
 10619  01153A  D002               	goto	u11390
 10620  01153C  0E01               	movlw	1
 10621  01153E  D001               	goto	u11400
 10622  011540                     u11390:
 10623  011540  0E00               	movlw	0
 10624  011542                     u11400:
 10625  011542  6E0B               	movwf	(btemp+10)^0,c
 10626  011544  6A0C               	clrf	(btemp+11)^0,c
 10627                           
 10628                           ;stkvar	_vfpfcnvrt$5353 @ sp[(-32)+0]
 10629  011546  0EE0               	movlw	-32
 10630  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10631  01154E  0EE1               	movlw	-31
 10632  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10633                           
 10634                           ;stkvar	_vfpfcnvrt$5353 @ sp[(-32)+0]
 10635  011556  0EE0               	movlw	-32
 10636  011558  006F FF8C  F001    	movff	plusw1,btemp
 10637  01155E  0EE1               	movlw	-31
 10638  011560  50E3               	movf	plusw1,w,c
 10639  011562  1001               	iorwf	btemp^0,w,c
 10640  011564  A4D8               	btfss	status,2,c
 10641  011566  D7BD               	goto	l11828
 10642  011568                     u11410:
 10643                           
 10644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10645                           ;stkvar	_fmt @ sp[(-32)+-4]
 10646  011568  0EDC               	movlw	-36
 10647  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10648  011570  0EDD               	movlw	-35
 10649  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10650  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10651  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10652  011584                     	if	0	;tblptru may be non-zero
 10653  011584                     	endif
 10654  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10655  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10656  011586  6EF8               	movwf	tblptru,c
 10657  011588                     	endif
 10658  011588  0008               	tblrd		*
 10659  01158A  50F5               	movf	tablat,w,c
 10660  01158C  6EE6               	movwf	postinc1,c
 10661  01158E  0E00               	movlw	0
 10662  011590  6EE6               	movwf	postinc1,c
 10663  011592  ECD5  F0CE         	call	_tolower	;wreg free
 10664                           
 10665                           ;stkvar	_ct @ sp[(-32)+26]
 10666  011596  0EFA               	movlw	-6
 10667  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10668                           
 10669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10670                           ;stkvar	_ct @ sp[(-32)+26]
 10671  01159E  0EFA               	movlw	-6
 10672  0115A0  50E3               	movf	plusw1,w,c
 10673  0115A2  B4D8               	btfsc	status,2,c
 10674  0115A4  D05B               	goto	l11846
 10675                           
 10676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10677                           ;stkvar	_ct @ sp[(-32)+26]
 10678  0115A6  0EFB               	movlw	251
 10679  0115A8  24E1               	addwf	fsr1l,w,c
 10680  0115AA  6ED9               	movwf	fsr2l,c
 10681  0115AC  0EFF               	movlw	255
 10682  0115AE  20E2               	addwfc	fsr1h,w,c
 10683  0115B0  6EDA               	movwf	fsr2h,c
 10684                           
 10685                           ;stkvar	_fmt @ sp[(-32)+-4]
 10686  0115B2  0EDC               	movlw	-36
 10687  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10688  0115BA  0EDD               	movlw	-35
 10689  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10690  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10691  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10692  0115CE  0E01               	movlw	1
 10693  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10694  0115D2  0E00               	movlw	0
 10695  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10696  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10697  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10698  0115E2                     	if	0	;tblptru may be non-zero
 10699  0115E2                     	endif
 10700  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10701  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10702  0115E4  6EF8               	movwf	tblptru,c
 10703  0115E6                     	endif
 10704  0115E6  0008               	tblrd		*
 10705  0115E8  50F5               	movf	tablat,w,c
 10706  0115EA  6EE6               	movwf	postinc1,c
 10707  0115EC  0E00               	movlw	0
 10708  0115EE  6EE6               	movwf	postinc1,c
 10709  0115F0  ECD5  F0CE         	call	_tolower	;wreg free
 10710  0115F4  5001               	movf	btemp^0,w,c
 10711  0115F6  6EDF               	movwf	indf2,c
 10712                           
 10713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10714                           ;stkvar	_ct @ sp[(-32)+26]
 10715  0115F8  0EFB               	movlw	251
 10716  0115FA  24E1               	addwf	fsr1l,w,c
 10717  0115FC  6ED9               	movwf	fsr2l,c
 10718  0115FE  0EFF               	movlw	255
 10719  011600  20E2               	addwfc	fsr1h,w,c
 10720  011602  6EDA               	movwf	fsr2h,c
 10721  011604  50DF               	movf	indf2,w,c
 10722  011606  B4D8               	btfsc	status,2,c
 10723  011608  D029               	goto	l11846
 10724                           
 10725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10726                           ;stkvar	_ct @ sp[(-32)+26]
 10727  01160A  0EFC               	movlw	252
 10728  01160C  24E1               	addwf	fsr1l,w,c
 10729  01160E  6ED9               	movwf	fsr2l,c
 10730  011610  0EFF               	movlw	255
 10731  011612  20E2               	addwfc	fsr1h,w,c
 10732  011614  6EDA               	movwf	fsr2h,c
 10733                           
 10734                           ;stkvar	_fmt @ sp[(-32)+-4]
 10735  011616  0EDC               	movlw	-36
 10736  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10737  01161E  0EDD               	movlw	-35
 10738  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10739  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10740  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10741  011632  0E02               	movlw	2
 10742  011634  260B               	addwf	(btemp+10)^0,f,c
 10743  011636  0E00               	movlw	0
 10744  011638  220C               	addwfc	(btemp+11)^0,f,c
 10745  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10746  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10747  011646                     	if	0	;tblptru may be non-zero
 10748  011646                     	endif
 10749  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10750  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10751  011648  6EF8               	movwf	tblptru,c
 10752  01164A                     	endif
 10753  01164A  0008               	tblrd		*
 10754  01164C  50F5               	movf	tablat,w,c
 10755  01164E  6EE6               	movwf	postinc1,c
 10756  011650  0E00               	movlw	0
 10757  011652  6EE6               	movwf	postinc1,c
 10758  011654  ECD5  F0CE         	call	_tolower	;wreg free
 10759  011658  5001               	movf	btemp^0,w,c
 10760  01165A  6EDF               	movwf	indf2,c
 10761  01165C                     l11846:
 10762                           
 10763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10764                           ;stkvar	_fmt @ sp[(-32)+-4]
 10765  01165C  0EDC               	movlw	-36
 10766  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10767  011664  0EDD               	movlw	-35
 10768  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10769  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10770  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10771  011678                     	if	0	;tblptru may be non-zero
 10772  011678                     	endif
 10773  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10774  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10775  01167A  6EF8               	movwf	tblptru,c
 10776  01167C                     	endif
 10777  01167C  0008               	tblrd		*
 10778  01167E  50F5               	movf	tablat,w,c
 10779  011680  0A63               	xorlw	99
 10780  011682  A4D8               	btfss	status,2,c
 10781  011684  D037               	goto	l11856
 10782                           
 10783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10784                           ;stkvar	_fmt @ sp[(-32)+-4]
 10785  011686  0EDC               	movlw	-36
 10786  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10787  01168E  0EDD               	movlw	-35
 10788  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10789  011696  2ADE               	incf	postinc2,f,c
 10790  011698  0E00               	movlw	0
 10791  01169A  22DD               	addwfc	postdec2,f,c
 10792                           
 10793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10794                           ;stkvar	_ap @ sp[(-32)+-6]
 10795  01169C  0EDA               	movlw	-38
 10796  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10797  0116A4  0EDB               	movlw	-37
 10798  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10799  0116AC  0E02               	movlw	2
 10800  0116AE  5EDE               	subwf	postinc2,f,c
 10801  0116B0  0E00               	movlw	0
 10802  0116B2  5ADD               	subwfb	postdec2,f,c
 10803  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10804  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10805  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10806  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10807  0116CC  50DF               	movf	indf2,w,c
 10808  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10809                           
 10810                           ;stkvar	_c @ sp[(-32)+31]
 10811  0116D0  0EFF               	movlw	-1
 10812  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10813                           
 10814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10815                           ;stkvar	_c @ sp[(-32)+31]
 10816  0116D8  0EFF               	movlw	-1
 10817  0116DA  50E3               	movf	plusw1,w,c
 10818  0116DC  6EE6               	movwf	postinc1,c
 10819                           
 10820                           ;stkvar	_fp @ sp[(-33)+-2]
 10821  0116DE  0EDD               	movlw	-35
 10822  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10823  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10824  0116EC  EC4F  F0CE         	call	_ctoa	;wreg free
 10825  0116F0  EFF3  F090         	goto	l2302
 10826  0116F4                     l11856:
 10827                           
 10828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10829                           ;stkvar	_fmt @ sp[(-32)+-4]
 10830  0116F4  0EDC               	movlw	-36
 10831  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10832  0116FC  0EDD               	movlw	-35
 10833  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10834  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 10835  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10836  011710                     	if	0	;tblptru may be non-zero
 10837  011710                     	endif
 10838  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10839  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 10840  011712  6EF8               	movwf	tblptru,c
 10841  011714                     	endif
 10842  011714  0008               	tblrd		*
 10843  011716  50F5               	movf	tablat,w,c
 10844  011718  0A64               	xorlw	100
 10845  01171A  B4D8               	btfsc	status,2,c
 10846  01171C  D015               	goto	u11460
 10847                           
 10848                           ;stkvar	_fmt @ sp[(-32)+-4]
 10849  01171E  0EDC               	movlw	-36
 10850  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 10851  011726  0EDD               	movlw	-35
 10852  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 10853  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10854  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 10855  01173A                     	if	0	;tblptru may be non-zero
 10856  01173A                     	endif
 10857  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10858  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 10859  01173C  6EF8               	movwf	tblptru,c
 10860  01173E                     	endif
 10861  01173E  0008               	tblrd		*
 10862  011740  50F5               	movf	tablat,w,c
 10863  011742  0A69               	xorlw	105
 10864  011744  A4D8               	btfss	status,2,c
 10865  011746  D076               	goto	l11868
 10866  011748                     u11460:
 10867                           
 10868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10869                           ;stkvar	_fmt @ sp[(-32)+-4]
 10870  011748  0EDC               	movlw	-36
 10871  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10872  011750  0EDD               	movlw	-35
 10873  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 10874  011758  2ADE               	incf	postinc2,f,c
 10875  01175A  0E00               	movlw	0
 10876  01175C  22DD               	addwfc	postdec2,f,c
 10877                           
 10878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10879                           ;stkvar	_ap @ sp[(-32)+-6]
 10880  01175E  0EDA               	movlw	-38
 10881  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 10882  011766  0EDB               	movlw	-37
 10883  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 10884  01176E  0E02               	movlw	2
 10885  011770  5EDE               	subwf	postinc2,f,c
 10886  011772  0E00               	movlw	0
 10887  011774  5ADD               	subwfb	postdec2,f,c
 10888  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 10889  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 10890  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10891  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10892  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 10893  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 10894                           
 10895                           ;stkvar	_ll @ sp[(-32)+14]
 10896  01179A  0EEE               	movlw	-18
 10897  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10898  0117A2  0EEF               	movlw	-17
 10899  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10900  0117AA  6A01               	clrf	btemp^0,c
 10901  0117AC  BEE3               	btfsc	plusw1,7,c
 10902  0117AE  6801               	setf	btemp^0,c
 10903  0117B0  0EF0               	movlw	-16
 10904  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 10905  0117B8  0EF1               	movlw	-15
 10906  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 10907  0117C0  0EF2               	movlw	-14
 10908  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 10909  0117C8  0EF3               	movlw	-13
 10910  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 10911  0117D0  0EF4               	movlw	-12
 10912  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 10913  0117D8  0EF5               	movlw	-11
 10914  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 10915  0117E0                     l11864:
 10916                           
 10917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10918                           ;stkvar	_ll @ sp[(-32)+14]
 10919  0117E0  50E1               	movf	fsr1l,w,c
 10920  0117E2  0FEE               	addlw	-18
 10921  0117E4  6ED9               	movwf	fsr2l,c
 10922  0117E6  50E2               	movf	fsr1h,w,c
 10923  0117E8  6EDA               	movwf	fsr2h,c
 10924  0117EA  0EFF               	movlw	255
 10925  0117EC  22DA               	addwfc	fsr2h,f,c
 10926  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 10927  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 10928  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 10929  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 10930  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 10931  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 10932  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 10933  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 10934                           
 10935                           ;stkvar	_fp @ sp[(-40)+-2]
 10936  01181E  0ED6               	movlw	-42
 10937  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 10938  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 10939  01182C  EC62  F0A7         	call	_dtoa	;wreg free
 10940  011830  EFF3  F090         	goto	l2302
 10941  011834                     l11868:
 10942                           
 10943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10944  011834  0E02               	movlw	2
 10945  011836  6EE6               	movwf	postinc1,c
 10946  011838  0E00               	movlw	0
 10947  01183A  6EE6               	movwf	postinc1,c
 10948  01183C  0EEA               	movlw	low STR_64
 10949  01183E  6EE6               	movwf	postinc1,c
 10950  011840  0EFF               	movlw	high STR_64
 10951  011842  6EE6               	movwf	postinc1,c
 10952                           
 10953                           ;stkvar	_fmt @ sp[(-36)+-4]
 10954  011844  0ED8               	movlw	-40
 10955  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 10956  01184C  0ED9               	movlw	-39
 10957  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10958  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 10959  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 10960  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10961  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 10962  01186C  EC15  F0B7         	call	_strncmp	;wreg free
 10963  011870  5001               	movf	btemp^0,w,c
 10964  011872  1002               	iorwf	(btemp+1)^0,w,c
 10965  011874  B4D8               	btfsc	status,2,c
 10966  011876  D022               	goto	u11480
 10967  011878  0E02               	movlw	2
 10968  01187A  6EE6               	movwf	postinc1,c
 10969  01187C  0E00               	movlw	0
 10970  01187E  6EE6               	movwf	postinc1,c
 10971  011880  0EF0               	movlw	low STR_68
 10972  011882  6EE6               	movwf	postinc1,c
 10973  011884  0EFF               	movlw	high STR_68
 10974  011886  6EE6               	movwf	postinc1,c
 10975                           
 10976                           ;stkvar	_fmt @ sp[(-36)+-4]
 10977  011888  0ED8               	movlw	-40
 10978  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10979  011890  0ED9               	movlw	-39
 10980  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 10981  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10982  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10983  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10984  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10985  0118B0  EC15  F0B7         	call	_strncmp	;wreg free
 10986  0118B4  5001               	movf	btemp^0,w,c
 10987  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 10988  0118B8  A4D8               	btfss	status,2,c
 10989  0118BA  D069               	goto	l11880
 10990  0118BC                     u11480:
 10991                           
 10992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10993                           ;stkvar	_fmt @ sp[(-32)+-4]
 10994  0118BC  0EDC               	movlw	-36
 10995  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10996  0118C4  0EDD               	movlw	-35
 10997  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10998  0118CC  0E02               	movlw	2
 10999  0118CE  26DE               	addwf	postinc2,f,c
 11000  0118D0  0E00               	movlw	0
 11001  0118D2  22DD               	addwfc	postdec2,f,c
 11002                           
 11003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11004                           ;stkvar	_ap @ sp[(-32)+-6]
 11005  0118D4  0EDA               	movlw	-38
 11006  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11007  0118DC  0EDB               	movlw	-37
 11008  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11009  0118E4  0E04               	movlw	4
 11010  0118E6  5EDE               	subwf	postinc2,f,c
 11011  0118E8  0E00               	movlw	0
 11012  0118EA  5ADD               	subwfb	postdec2,f,c
 11013  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 11014  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 11015  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11016  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11017  011904  006F FF78  F009    	movff	postinc2,btemp+8
 11018  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 11019  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 11020  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 11021  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 11022  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 11023  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 11024  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 11025  011934  6A15               	clrf	(btemp+20)^0,c
 11026  011936  BE14               	btfsc	(btemp+19)^0,7,c
 11027  011938  6815               	setf	(btemp+20)^0,c
 11028  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 11029  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 11030  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 11031                           
 11032                           ;stkvar	_ll @ sp[(-32)+14]
 11033  01194C  0EEE               	movlw	-18
 11034  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 11035  011954  0EEF               	movlw	-17
 11036  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11037  01195C  0EF0               	movlw	-16
 11038  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11039  011964  0EF1               	movlw	-15
 11040  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 11041  01196C  0EF2               	movlw	-14
 11042  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 11043  011974  0EF3               	movlw	-13
 11044  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11045  01197C  0EF4               	movlw	-12
 11046  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11047  011984  0EF5               	movlw	-11
 11048  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 11049  01198C  D729               	goto	l11864
 11050  01198E                     l11880:
 11051                           
 11052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11053                           ;stkvar	_ct @ sp[(-32)+26]
 11054  01198E  0EFA               	movlw	-6
 11055  011990  006F FF8C  F001    	movff	plusw1,btemp
 11056  011996  0E66               	movlw	102
 11057  011998  1801               	xorwf	btemp^0,w,c
 11058  01199A  A4D8               	btfss	status,2,c
 11059  01199C  D06E               	goto	l11892
 11060                           
 11061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11062                           ;stkvar	_fmt @ sp[(-32)+-4]
 11063  01199E  0EDC               	movlw	-36
 11064  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11065  0119A6  0EDD               	movlw	-35
 11066  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11067  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11068  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11069  0119BA                     	if	0	;tblptru may be non-zero
 11070  0119BA                     	endif
 11071  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11072  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11073  0119BC  6EF8               	movwf	tblptru,c
 11074  0119BE                     	endif
 11075                           
 11076                           ;stkvar	_c @ sp[(-32)+31]
 11077  0119BE  0008               	tblrd		*
 11078  0119C0  0EFF               	movlw	-1
 11079  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 11080                           
 11081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11082                           ;stkvar	_fmt @ sp[(-32)+-4]
 11083  0119C8  0EDC               	movlw	-36
 11084  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11085  0119D0  0EDD               	movlw	-35
 11086  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11087  0119D8  2ADE               	incf	postinc2,f,c
 11088  0119DA  0E00               	movlw	0
 11089  0119DC  22DD               	addwfc	postdec2,f,c
 11090                           
 11091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11092                           ;stkvar	_ap @ sp[(-32)+-6]
 11093  0119DE  0EDA               	movlw	-38
 11094  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11095  0119E6  0EDB               	movlw	-37
 11096  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11097  0119EE  0E04               	movlw	4
 11098  0119F0  5EDE               	subwf	postinc2,f,c
 11099  0119F2  0E00               	movlw	0
 11100  0119F4  5ADD               	subwfb	postdec2,f,c
 11101  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11102  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 11103  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11104  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11105  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 11106  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 11107  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 11108  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 11109                           
 11110                           ;stkvar	_f @ sp[(-32)+22]
 11111  011A26  0EF6               	movlw	-10
 11112  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 11113  011A2E  0EF7               	movlw	-9
 11114  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11115  011A36  0EF8               	movlw	-8
 11116  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11117  011A3E  0EF9               	movlw	-7
 11118  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 11119  011A46                     l11888:
 11120                           
 11121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11122                           ;stkvar	_c @ sp[(-32)+31]
 11123  011A46  0EFF               	movlw	-1
 11124  011A48  50E3               	movf	plusw1,w,c
 11125  011A4A  6EE6               	movwf	postinc1,c
 11126                           
 11127                           ;stkvar	_f @ sp[(-33)+22]
 11128  011A4C  0EF5               	movlw	-11
 11129  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 11130  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 11131  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 11132  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 11133                           
 11134                           ;stkvar	_fp @ sp[(-37)+-2]
 11135  011A66  0ED9               	movlw	-39
 11136  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 11137  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11138  011A74  EC00  F080         	call	_efgtoa	;wreg free
 11139  011A78  D3B6               	goto	l2302
 11140  011A7A                     l11892:
 11141                           
 11142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11143  011A7A  0E02               	movlw	2
 11144  011A7C  6EE6               	movwf	postinc1,c
 11145  011A7E  0E00               	movlw	0
 11146  011A80  6EE6               	movwf	postinc1,c
 11147  011A82  0EED               	movlw	low STR_73
 11148  011A84  6EE6               	movwf	postinc1,c
 11149  011A86  0EFF               	movlw	high STR_73
 11150  011A88  6EE6               	movwf	postinc1,c
 11151                           
 11152                           ;stkvar	_ct @ sp[(-36)+26]
 11153  011A8A  0EF6               	movlw	246
 11154  011A8C  24E1               	addwf	fsr1l,w,c
 11155  011A8E  6E01               	movwf	btemp^0,c
 11156  011A90  0EFF               	movlw	255
 11157  011A92  20E2               	addwfc	fsr1h,w,c
 11158  011A94  6E02               	movwf	(btemp+1)^0,c
 11159  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 11160  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11161  011AA2  EC15  F0B7         	call	_strncmp	;wreg free
 11162  011AA6  5001               	movf	btemp^0,w,c
 11163  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 11164  011AAA  A4D8               	btfss	status,2,c
 11165  011AAC  D096               	goto	l11912
 11166                           
 11167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11168                           ;stkvar	_fmt @ sp[(-32)+-4]
 11169  011AAE  0EDC               	movlw	-36
 11170  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11171  011AB6  0EDD               	movlw	-35
 11172  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11173  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 11174  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 11175  011ACA  0E01               	movlw	1
 11176  011ACC  260B               	addwf	(btemp+10)^0,f,c
 11177  011ACE  0E00               	movlw	0
 11178  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 11179  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11180  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11181  011ADE                     	if	0	;tblptru may be non-zero
 11182  011ADE                     	endif
 11183  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11184  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 11185  011AE0  6EF8               	movwf	tblptru,c
 11186  011AE2                     	endif
 11187                           
 11188                           ;stkvar	_c @ sp[(-32)+31]
 11189  011AE2  0008               	tblrd		*
 11190  011AE4  0EFF               	movlw	-1
 11191  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 11192  011AEC  0EBF               	movlw	191
 11193  011AEE  6E0B               	movwf	(btemp+10)^0,c
 11194  011AF0  0EFF               	movlw	255
 11195  011AF2  6E0C               	movwf	(btemp+11)^0,c
 11196                           
 11197                           ;stkvar	_fmt @ sp[(-32)+-4]
 11198  011AF4  0EDC               	movlw	-36
 11199  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11200  011AFC  0EDD               	movlw	-35
 11201  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11202  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 11203  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11204  011B10                     	if	0	;tblptru may be non-zero
 11205  011B10                     	endif
 11206  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11207  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 11208  011B12  6EF8               	movwf	tblptru,c
 11209  011B14                     	endif
 11210  011B14  0008               	tblrd		*
 11211  011B16  50F5               	movf	tablat,w,c
 11212  011B18  6E09               	movwf	(btemp+8)^0,c
 11213  011B1A  6A0A               	clrf	(btemp+9)^0,c
 11214  011B1C  500B               	movf	(btemp+10)^0,w,c
 11215  011B1E  2609               	addwf	(btemp+8)^0,f,c
 11216  011B20  500C               	movf	(btemp+11)^0,w,c
 11217  011B22  220A               	addwfc	(btemp+9)^0,f,c
 11218  011B24  500A               	movf	(btemp+9)^0,w,c
 11219  011B26  E106               	bnz	u11510
 11220  011B28  0E1A               	movlw	26
 11221  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 11222  011B2C  B0D8               	btfsc	status,0,c
 11223  011B2E  D002               	goto	u11510
 11224  011B30  0E01               	movlw	1
 11225  011B32  D001               	goto	u11520
 11226  011B34                     u11510:
 11227  011B34  0E00               	movlw	0
 11228  011B36                     u11520:
 11229  011B36  6E0B               	movwf	(btemp+10)^0,c
 11230  011B38  6A0C               	clrf	(btemp+11)^0,c
 11231                           
 11232                           ;stkvar	_vfpfcnvrt$5364 @ sp[(-32)+2]
 11233  011B3A  0EE2               	movlw	-30
 11234  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11235  011B42  0EE3               	movlw	-29
 11236  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 11237                           
 11238                           ;stkvar	_vfpfcnvrt$5364 @ sp[(-32)+2]
 11239  011B4A  0EE2               	movlw	-30
 11240  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 11241  011B52  0EE3               	movlw	-29
 11242  011B54  50E3               	movf	plusw1,w,c
 11243  011B56  1001               	iorwf	btemp^0,w,c
 11244                           
 11245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11246                           ;stkvar	_ap @ sp[(-32)+-6]
 11247                           
 11248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 11249                           
 11250                           ;stkvar	_f @ sp[(-32)+22]
 11251                           
 11252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 11253                           ;stkvar	_ap @ sp[(-32)+-6]
 11254  011B58  0EDA               	movlw	-38
 11255  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11256  011B60  0EDB               	movlw	-37
 11257  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 11258  011B68  0E04               	movlw	4
 11259  011B6A  5EDE               	subwf	postinc2,f,c
 11260  011B6C  0E00               	movlw	0
 11261  011B6E  5ADD               	subwfb	postdec2,f,c
 11262  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 11263  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 11264  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11265  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11266  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 11267  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 11268  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 11269  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 11270                           
 11271                           ;stkvar	_f @ sp[(-32)+22]
 11272  011BA0  0EF6               	movlw	-10
 11273  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 11274  011BA8  0EF7               	movlw	-9
 11275  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11276  011BB0  0EF8               	movlw	-8
 11277  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11278  011BB8  0EF9               	movlw	-7
 11279  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11280                           
 11281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 11282                           ;stkvar	_fmt @ sp[(-32)+-4]
 11283  011BC0  0EDC               	movlw	-36
 11284  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11285  011BC8  0EDD               	movlw	-35
 11286  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11287  011BD0  0E02               	movlw	2
 11288  011BD2  26DE               	addwf	postinc2,f,c
 11289  011BD4  0E00               	movlw	0
 11290  011BD6  22DD               	addwfc	postdec2,f,c
 11291  011BD8  D736               	goto	l11888
 11292  011BDA                     l11912:
 11293                           
 11294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 11295                           ;stkvar	_fmt @ sp[(-32)+-4]
 11296  011BDA  0EDC               	movlw	-36
 11297  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11298  011BE2  0EDD               	movlw	-35
 11299  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11300  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11301  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11302  011BF6                     	if	0	;tblptru may be non-zero
 11303  011BF6                     	endif
 11304  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11305  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11306  011BF8  6EF8               	movwf	tblptru,c
 11307  011BFA                     	endif
 11308  011BFA  0008               	tblrd		*
 11309  011BFC  50F5               	movf	tablat,w,c
 11310  011BFE  0A73               	xorlw	115
 11311  011C00  A4D8               	btfss	status,2,c
 11312  011C02  D042               	goto	l11922
 11313                           
 11314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 11315                           ;stkvar	_fmt @ sp[(-32)+-4]
 11316  011C04  0EDC               	movlw	-36
 11317  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 11318  011C0C  0EDD               	movlw	-35
 11319  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11320  011C14  2ADE               	incf	postinc2,f,c
 11321  011C16  0E00               	movlw	0
 11322  011C18  22DD               	addwfc	postdec2,f,c
 11323                           
 11324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 11325                           ;stkvar	_ap @ sp[(-32)+-6]
 11326  011C1A  0EDA               	movlw	-38
 11327  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11328  011C22  0EDB               	movlw	-37
 11329  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 11330  011C2A  0E02               	movlw	2
 11331  011C2C  5EDE               	subwf	postinc2,f,c
 11332  011C2E  0E00               	movlw	0
 11333  011C30  5ADD               	subwfb	postdec2,f,c
 11334  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 11335  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 11336  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11337  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11338  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 11339  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 11340                           
 11341                           ;stkvar	_cp @ sp[(-32)+29]
 11342  011C56  0EFE               	movlw	-2
 11343  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 11344  011C5E  0EFD               	movlw	-3
 11345  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11346                           
 11347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11348                           ;stkvar	_cp @ sp[(-32)+29]
 11349  011C66  0EFD               	movlw	-3
 11350  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 11351  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11352                           
 11353                           ;stkvar	_fp @ sp[(-34)+-2]
 11354  011C74  0EDC               	movlw	-36
 11355  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 11356  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11357  011C82  EC1C  F0B2         	call	_stoa	;wreg free
 11358  011C86  D2AF               	goto	l2302
 11359  011C88                     l11922:
 11360                           
 11361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 11362                           ;stkvar	_fmt @ sp[(-32)+-4]
 11363  011C88  0EDC               	movlw	-36
 11364  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11365  011C90  0EDD               	movlw	-35
 11366  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 11367  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 11368  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11369  011CA4                     	if	0	;tblptru may be non-zero
 11370  011CA4                     	endif
 11371  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11372  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 11373  011CA6  6EF8               	movwf	tblptru,c
 11374  011CA8                     	endif
 11375  011CA8  0008               	tblrd		*
 11376  011CAA  50F5               	movf	tablat,w,c
 11377  011CAC  0A75               	xorlw	117
 11378  011CAE  A4D8               	btfss	status,2,c
 11379  011CB0  D07C               	goto	l11932
 11380                           
 11381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 11382                           ;stkvar	_fmt @ sp[(-32)+-4]
 11383  011CB2  0EDC               	movlw	-36
 11384  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11385  011CBA  0EDD               	movlw	-35
 11386  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11387  011CC2  2ADE               	incf	postinc2,f,c
 11388  011CC4  0E00               	movlw	0
 11389  011CC6  22DD               	addwfc	postdec2,f,c
 11390                           
 11391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11392                           ;stkvar	_ap @ sp[(-32)+-6]
 11393  011CC8  0EDA               	movlw	-38
 11394  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11395  011CD0  0EDB               	movlw	-37
 11396  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11397  011CD8  0E02               	movlw	2
 11398  011CDA  5EDE               	subwf	postinc2,f,c
 11399  011CDC  0E00               	movlw	0
 11400  011CDE  5ADD               	subwfb	postdec2,f,c
 11401  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11402  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11403  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11404  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11405  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11406  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11407  011D04  500B               	movf	(btemp+10)^0,w,c
 11408  011D06  6E11               	movwf	(btemp+16)^0,c
 11409  011D08  500C               	movf	(btemp+11)^0,w,c
 11410  011D0A  6E12               	movwf	(btemp+17)^0,c
 11411  011D0C  6A13               	clrf	(btemp+18)^0,c
 11412  011D0E  6A14               	clrf	(btemp+19)^0,c
 11413  011D10  6A15               	clrf	(btemp+20)^0,c
 11414  011D12  6A16               	clrf	(btemp+21)^0,c
 11415  011D14  6A17               	clrf	(btemp+22)^0,c
 11416  011D16  6A18               	clrf	(btemp+23)^0,c
 11417                           
 11418                           ;stkvar	_llu @ sp[(-32)+6]
 11419  011D18  0EE6               	movlw	-26
 11420  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11421  011D20  0EE7               	movlw	-25
 11422  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11423  011D28  0EE8               	movlw	-24
 11424  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11425  011D30  0EE9               	movlw	-23
 11426  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11427  011D38  0EEA               	movlw	-22
 11428  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11429  011D40  0EEB               	movlw	-21
 11430  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11431  011D48  0EEC               	movlw	-20
 11432  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11433  011D50  0EED               	movlw	-19
 11434  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11435                           
 11436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11437                           ;stkvar	_llu @ sp[(-32)+6]
 11438  011D58  50E1               	movf	fsr1l,w,c
 11439  011D5A  0FE6               	addlw	-26
 11440  011D5C  6ED9               	movwf	fsr2l,c
 11441  011D5E  50E2               	movf	fsr1h,w,c
 11442  011D60  6EDA               	movwf	fsr2h,c
 11443  011D62  0EFF               	movlw	255
 11444  011D64  22DA               	addwfc	fsr2h,f,c
 11445  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11446  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11447  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11448  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11449  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11450  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11451  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11452  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11453                           
 11454                           ;stkvar	_fp @ sp[(-40)+-2]
 11455  011D96  0ED6               	movlw	-42
 11456  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11457  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11458  011DA4  EC06  F0AF         	call	_utoa	;wreg free
 11459  011DA8  D21E               	goto	l2302
 11460  011DAA                     l11932:
 11461                           
 11462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11463  011DAA  0E02               	movlw	2
 11464  011DAC  6EE6               	movwf	postinc1,c
 11465  011DAE  0E00               	movlw	0
 11466  011DB0  6EE6               	movwf	postinc1,c
 11467  011DB2  0EF3               	movlw	low STR_78
 11468  011DB4  6EE6               	movwf	postinc1,c
 11469  011DB6  0EFF               	movlw	high STR_78
 11470  011DB8  6EE6               	movwf	postinc1,c
 11471                           
 11472                           ;stkvar	_fmt @ sp[(-36)+-4]
 11473  011DBA  0ED8               	movlw	-40
 11474  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11475  011DC2  0ED9               	movlw	-39
 11476  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11477  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11478  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11479  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11480  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11481  011DE2  EC15  F0B7         	call	_strncmp	;wreg free
 11482  011DE6  5001               	movf	btemp^0,w,c
 11483  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11484  011DEA  A4D8               	btfss	status,2,c
 11485  011DEC  D039               	goto	l11942
 11486                           
 11487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11488                           ;stkvar	_fmt @ sp[(-32)+-4]
 11489  011DEE  0EDC               	movlw	-36
 11490  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11491  011DF6  0EDD               	movlw	-35
 11492  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11493  011DFE  0E02               	movlw	2
 11494  011E00  26DE               	addwf	postinc2,f,c
 11495  011E02  0E00               	movlw	0
 11496  011E04  22DD               	addwfc	postdec2,f,c
 11497                           
 11498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11499                           ;stkvar	_ap @ sp[(-32)+-6]
 11500  011E06  0EDA               	movlw	-38
 11501  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11502  011E0E  0EDB               	movlw	-37
 11503  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11504  011E16  0E04               	movlw	4
 11505  011E18  5EDE               	subwf	postinc2,f,c
 11506  011E1A  0E00               	movlw	0
 11507  011E1C  5ADD               	subwfb	postdec2,f,c
 11508  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11509  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11510  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11511  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11512  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11513  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11514  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11515  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11516  011E4E  5009               	movf	(btemp+8)^0,w,c
 11517  011E50  6E11               	movwf	(btemp+16)^0,c
 11518  011E52  500A               	movf	(btemp+9)^0,w,c
 11519  011E54  6E12               	movwf	(btemp+17)^0,c
 11520  011E56  500B               	movf	(btemp+10)^0,w,c
 11521  011E58  6E13               	movwf	(btemp+18)^0,c
 11522  011E5A  500C               	movf	(btemp+11)^0,w,c
 11523  011E5C  6E14               	movwf	(btemp+19)^0,c
 11524  011E5E  D758               	goto	L5
 11525  011E60                     l11942:
 11526                           
 11527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11528                           ;stkvar	_fmt @ sp[(-32)+-4]
 11529  011E60  0EDC               	movlw	-36
 11530  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11531  011E68  0EDD               	movlw	-35
 11532  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11533  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11534  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11535  011E7C                     	if	0	;tblptru may be non-zero
 11536  011E7C                     	endif
 11537  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11538  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11539  011E7E  6EF8               	movwf	tblptru,c
 11540  011E80                     	endif
 11541  011E80  0008               	tblrd		*
 11542  011E82  50F5               	movf	tablat,w,c
 11543  011E84  0A78               	xorlw	120
 11544  011E86  B4D8               	btfsc	status,2,c
 11545  011E88  D015               	goto	u11580
 11546                           
 11547                           ;stkvar	_fmt @ sp[(-32)+-4]
 11548  011E8A  0EDC               	movlw	-36
 11549  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11550  011E92  0EDD               	movlw	-35
 11551  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11552  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11553  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11554  011EA6                     	if	0	;tblptru may be non-zero
 11555  011EA6                     	endif
 11556  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11557  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11558  011EA8  6EF8               	movwf	tblptru,c
 11559  011EAA                     	endif
 11560  011EAA  0008               	tblrd		*
 11561  011EAC  50F5               	movf	tablat,w,c
 11562  011EAE  0A58               	xorlw	88
 11563  011EB0  A4D8               	btfss	status,2,c
 11564  011EB2  D094               	goto	l11956
 11565  011EB4                     u11580:
 11566                           
 11567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11568                           ;stkvar	_fmt @ sp[(-32)+-4]
 11569  011EB4  0EDC               	movlw	-36
 11570  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11571  011EBC  0EDD               	movlw	-35
 11572  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11573  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11574  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11575  011ED0                     	if	0	;tblptru may be non-zero
 11576  011ED0                     	endif
 11577  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11578  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11579  011ED2  6EF8               	movwf	tblptru,c
 11580  011ED4                     	endif
 11581                           
 11582                           ;stkvar	_c @ sp[(-32)+31]
 11583  011ED4  0008               	tblrd		*
 11584  011ED6  0EFF               	movlw	-1
 11585  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11586                           
 11587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11588                           ;stkvar	_fmt @ sp[(-32)+-4]
 11589  011EDE  0EDC               	movlw	-36
 11590  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11591  011EE6  0EDD               	movlw	-35
 11592  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11593  011EEE  2ADE               	incf	postinc2,f,c
 11594  011EF0  0E00               	movlw	0
 11595  011EF2  22DD               	addwfc	postdec2,f,c
 11596                           
 11597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11598                           ;stkvar	_ap @ sp[(-32)+-6]
 11599  011EF4  0EDA               	movlw	-38
 11600  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11601  011EFC  0EDB               	movlw	-37
 11602  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11603  011F04  0E02               	movlw	2
 11604  011F06  5EDE               	subwf	postinc2,f,c
 11605  011F08  0E00               	movlw	0
 11606  011F0A  5ADD               	subwfb	postdec2,f,c
 11607  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 11608  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 11609  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11610  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11611  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 11612  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11613  011F30  500B               	movf	(btemp+10)^0,w,c
 11614  011F32  6E11               	movwf	(btemp+16)^0,c
 11615  011F34  500C               	movf	(btemp+11)^0,w,c
 11616  011F36  6E12               	movwf	(btemp+17)^0,c
 11617  011F38  6A13               	clrf	(btemp+18)^0,c
 11618  011F3A  6A14               	clrf	(btemp+19)^0,c
 11619  011F3C  6A15               	clrf	(btemp+20)^0,c
 11620  011F3E  6A16               	clrf	(btemp+21)^0,c
 11621  011F40  6A17               	clrf	(btemp+22)^0,c
 11622  011F42  6A18               	clrf	(btemp+23)^0,c
 11623                           
 11624                           ;stkvar	_llu @ sp[(-32)+6]
 11625  011F44  0EE6               	movlw	-26
 11626  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 11627  011F4C  0EE7               	movlw	-25
 11628  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11629  011F54  0EE8               	movlw	-24
 11630  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11631  011F5C  0EE9               	movlw	-23
 11632  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 11633  011F64  0EEA               	movlw	-22
 11634  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 11635  011F6C  0EEB               	movlw	-21
 11636  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11637  011F74  0EEC               	movlw	-20
 11638  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11639  011F7C  0EED               	movlw	-19
 11640  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 11641                           
 11642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 11643                           ;stkvar	_c @ sp[(-32)+31]
 11644  011F84  0EFF               	movlw	-1
 11645  011F86  50E3               	movf	plusw1,w,c
 11646  011F88  6EE6               	movwf	postinc1,c
 11647                           
 11648                           ;stkvar	_llu @ sp[(-33)+6]
 11649  011F8A  50E1               	movf	fsr1l,w,c
 11650  011F8C  0FE5               	addlw	-27
 11651  011F8E  6ED9               	movwf	fsr2l,c
 11652  011F90  50E2               	movf	fsr1h,w,c
 11653  011F92  6EDA               	movwf	fsr2h,c
 11654  011F94  0EFF               	movlw	255
 11655  011F96  22DA               	addwfc	fsr2h,f,c
 11656  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 11657  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11658  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11659  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11660  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11661  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11662  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11663  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11664                           
 11665                           ;stkvar	_fp @ sp[(-41)+-2]
 11666  011FC8  0ED5               	movlw	-43
 11667  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 11668  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 11669  011FD6  ECA2  F0A9         	call	_xtoa	;wreg free
 11670  011FDA  D105               	goto	l2302
 11671  011FDC                     l11956:
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 11674  011FDC  0E02               	movlw	2
 11675  011FDE  6EE6               	movwf	postinc1,c
 11676  011FE0  0E00               	movlw	0
 11677  011FE2  6EE6               	movwf	postinc1,c
 11678  011FE4  0EF6               	movlw	low STR_83
 11679  011FE6  6EE6               	movwf	postinc1,c
 11680  011FE8  0EFF               	movlw	high STR_83
 11681  011FEA  6EE6               	movwf	postinc1,c
 11682                           
 11683                           ;stkvar	_fmt @ sp[(-36)+-4]
 11684  011FEC  0ED8               	movlw	-40
 11685  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11686  011FF4  0ED9               	movlw	-39
 11687  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11688  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 11689  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 11690  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11691  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11692  012014  EC15  F0B7         	call	_strncmp	;wreg free
 11693  012018  5001               	movf	btemp^0,w,c
 11694  01201A  1002               	iorwf	(btemp+1)^0,w,c
 11695  01201C  B4D8               	btfsc	status,2,c
 11696  01201E  D022               	goto	u11600
 11697  012020  0E02               	movlw	2
 11698  012022  6EE6               	movwf	postinc1,c
 11699  012024  0E00               	movlw	0
 11700  012026  6EE6               	movwf	postinc1,c
 11701  012028  0EE7               	movlw	low STR_87
 11702  01202A  6EE6               	movwf	postinc1,c
 11703  01202C  0EFF               	movlw	high STR_87
 11704  01202E  6EE6               	movwf	postinc1,c
 11705                           
 11706                           ;stkvar	_fmt @ sp[(-36)+-4]
 11707  012030  0ED8               	movlw	-40
 11708  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 11709  012038  0ED9               	movlw	-39
 11710  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11711  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 11712  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 11713  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11714  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 11715  012058  EC15  F0B7         	call	_strncmp	;wreg free
 11716  01205C  5001               	movf	btemp^0,w,c
 11717  01205E  1002               	iorwf	(btemp+1)^0,w,c
 11718  012060  A4D8               	btfss	status,2,c
 11719  012062  D058               	goto	l11970
 11720  012064                     u11600:
 11721                           
 11722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 11723                           ;stkvar	_fmt @ sp[(-32)+-4]
 11724  012064  0EDC               	movlw	-36
 11725  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 11726  01206C  0EDD               	movlw	-35
 11727  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11728  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 11729  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 11730  012080  0E01               	movlw	1
 11731  012082  260B               	addwf	(btemp+10)^0,f,c
 11732  012084  0E00               	movlw	0
 11733  012086  220C               	addwfc	(btemp+11)^0,f,c
 11734  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11735  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11736  012094                     	if	0	;tblptru may be non-zero
 11737  012094                     	endif
 11738  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11739  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 11740  012096  6EF8               	movwf	tblptru,c
 11741  012098                     	endif
 11742                           
 11743                           ;stkvar	_c @ sp[(-32)+31]
 11744  012098  0008               	tblrd		*
 11745  01209A  0EFF               	movlw	-1
 11746  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 11747                           
 11748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 11749                           ;stkvar	_fmt @ sp[(-32)+-4]
 11750  0120A2  0EDC               	movlw	-36
 11751  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11752  0120AA  0EDD               	movlw	-35
 11753  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11754  0120B2  0E02               	movlw	2
 11755  0120B4  26DE               	addwf	postinc2,f,c
 11756  0120B6  0E00               	movlw	0
 11757  0120B8  22DD               	addwfc	postdec2,f,c
 11758                           
 11759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11760                           ;stkvar	_ap @ sp[(-32)+-6]
 11761  0120BA  0EDA               	movlw	-38
 11762  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11763  0120C2  0EDB               	movlw	-37
 11764  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11765  0120CA  0E04               	movlw	4
 11766  0120CC  5EDE               	subwf	postinc2,f,c
 11767  0120CE  0E00               	movlw	0
 11768  0120D0  5ADD               	subwfb	postdec2,f,c
 11769  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11770  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11771  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11772  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11773  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 11774  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 11775  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11776  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 11777  012102  5009               	movf	(btemp+8)^0,w,c
 11778  012104  6E11               	movwf	(btemp+16)^0,c
 11779  012106  500A               	movf	(btemp+9)^0,w,c
 11780  012108  6E12               	movwf	(btemp+17)^0,c
 11781  01210A  500B               	movf	(btemp+10)^0,w,c
 11782  01210C  6E13               	movwf	(btemp+18)^0,c
 11783  01210E  500C               	movf	(btemp+11)^0,w,c
 11784  012110  6E14               	movwf	(btemp+19)^0,c
 11785  012112  D714               	goto	L6
 11786  012114                     l11970:
 11787                           
 11788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11789                           ;stkvar	_fmt @ sp[(-32)+-4]
 11790  012114  0EDC               	movlw	-36
 11791  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 11792  01211C  0EDD               	movlw	-35
 11793  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11794  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 11795  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11796  012130                     	if	0	;tblptru may be non-zero
 11797  012130                     	endif
 11798  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11799  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 11800  012132  6EF8               	movwf	tblptru,c
 11801  012134                     	endif
 11802  012134  0008               	tblrd		*
 11803  012136  50F5               	movf	tablat,w,c
 11804  012138  0A25               	xorlw	37
 11805  01213A  A4D8               	btfss	status,2,c
 11806  01213C  D01A               	goto	l11980
 11807                           
 11808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11809                           ;stkvar	_fmt @ sp[(-32)+-4]
 11810  01213E  0EDC               	movlw	-36
 11811  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 11812  012146  0EDD               	movlw	-35
 11813  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 11814  01214E  2ADE               	incf	postinc2,f,c
 11815  012150  0E00               	movlw	0
 11816  012152  22DD               	addwfc	postdec2,f,c
 11817                           
 11818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11819                           ;stkvar	_fp @ sp[(-32)+-2]
 11820  012154  0EDE               	movlw	-34
 11821  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 11822  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 11823  012162  0E25               	movlw	37
 11824  012164  6EE6               	movwf	postinc1,c
 11825  012166  0E00               	movlw	0
 11826  012168  6EE6               	movwf	postinc1,c
 11827  01216A  EC95  F0C4         	call	_fputc	;wreg free
 11828  01216E                     l11976:
 11829                           
 11830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11831  01216E  0E01               	movlw	1
 11832  012170  D00C               	goto	L7
 11833  012172                     l11980:
 11834                           
 11835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11836                           ;stkvar	_fmt @ sp[(-32)+-4]
 11837  012172  0EDC               	movlw	-36
 11838  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 11839  01217A  0EDD               	movlw	-35
 11840  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11841  012182  2ADE               	incf	postinc2,f,c
 11842  012184  0E00               	movlw	0
 11843  012186  22DD               	addwfc	postdec2,f,c
 11844                           
 11845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11846  012188  0E00               	movlw	0
 11847  01218A                     L7:
 11848  01218A  6E01               	movwf	btemp^0,c
 11849  01218C  0E00               	movlw	0
 11850  01218E  6E02               	movwf	(btemp+1)^0,c
 11851  012190  D02A               	goto	l2302
 11852  012192                     l11986:
 11853                           
 11854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11855                           ;stkvar	_fp @ sp[(-32)+-2]
 11856  012192  0EDE               	movlw	-34
 11857  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 11858  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 11859                           
 11860                           ;stkvar	_fmt @ sp[(-34)+-4]
 11861  0121A0  0EDA               	movlw	-38
 11862  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11863  0121A8  0EDB               	movlw	-37
 11864  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11865  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11866  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11867  0121BC                     	if	0	;tblptru may be non-zero
 11868  0121BC                     	endif
 11869  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11870  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 11871  0121BE  6EF8               	movwf	tblptru,c
 11872  0121C0                     	endif
 11873  0121C0  0008               	tblrd		*
 11874  0121C2  50F5               	movf	tablat,w,c
 11875  0121C4  6EE6               	movwf	postinc1,c
 11876  0121C6  0E00               	movlw	0
 11877  0121C8  6EE6               	movwf	postinc1,c
 11878  0121CA  EC95  F0C4         	call	_fputc	;wreg free
 11879                           
 11880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11881                           ;stkvar	_fmt @ sp[(-32)+-4]
 11882  0121CE  0EDC               	movlw	-36
 11883  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11884  0121D6  0EDD               	movlw	-35
 11885  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11886  0121DE  2ADE               	incf	postinc2,f,c
 11887  0121E0  0E00               	movlw	0
 11888  0121E2  22DD               	addwfc	postdec2,f,c
 11889  0121E4  D7C4               	goto	l11976
 11890  0121E6                     l2302:
 11891                           
 11892                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11893  0121E6  0EDA               	movlw	218
 11894  0121E8  26E1               	addwf	fsr1l,f,c
 11895  0121EA  0EFF               	movlw	255
 11896  0121EC  22E2               	addwfc	fsr1h,f,c
 11897  0121EE  0012               	return		;funcret
 11898  0121F0                     __end_of_vfpfcnvrt:
 11899                           	opt callstack 0
 11900                           
 11901 ;; *************** function _xtoa *****************
 11902 ;; Defined at:
 11903 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11904 ;; Parameters:    Size  Location     Type
 11905 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11906 ;;		 -> f(6), NULL(0), 
 11907 ;;  d               8  [STACK] unsigned long long 
 11908 ;;  x               1  [STACK] unsigned char 
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;  n               8  [STACK] unsigned long long 
 11911 ;;  c               2  [STACK] int 
 11912 ;;  i               2  [STACK] int 
 11913 ;;  w               2  [STACK] int 
 11914 ;;  p               2  [STACK] int 
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  2  [STACK] int 
 11917 ;; Registers used:
 11918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11928 ;;Total ram usage:        0 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:   20
 11931 ;; This function calls:
 11932 ;;		_isalpha
 11933 ;;		_isupper
 11934 ;;		_pad
 11935 ;;		_toupper
 11936 ;; This function is called by:
 11937 ;;		_vfpfcnvrt
 11938 ;; This function uses a reentrant model
 11939 ;;
 11940                           
 11941                           	psect	text46
 11942  015344                     __ptext46:
 11943                           	opt callstack 0
 11944  015344                     _xtoa:
 11945                           	opt callstack 0
 11946                           
 11947                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11948  015344  0E14               	movlw	20
 11949  015346  26E1               	addwf	fsr1l,f,c
 11950  015348  0E00               	movlw	0
 11951  01534A  22E2               	addwfc	fsr1h,f,c
 11952                           
 11953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11954                           
 11955                           ;incstack = 0
 11956 ;; hardware stack exceeded
 11957  01534C  AE24               	btfss	(_prec+1)^0,7,c
 11958                           
 11959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11960  01534E  9225               	bcf	_flags^0,1,c
 11961                           
 11962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11963  015350  BE24               	btfsc	(_prec+1)^0,7,c
 11964  015352  D005               	goto	u11130
 11965  015354  5024               	movf	(_prec+1)^0,w,c
 11966  015356  E110               	bnz	l11710
 11967  015358  0423               	decf	_prec^0,w,c
 11968  01535A  B0D8               	btfsc	status,0,c
 11969  01535C  D00D               	goto	l11710
 11970  01535E                     u11130:
 11971  01535E  0E01               	movlw	1
 11972  015360  6E0B               	movwf	(btemp+10)^0,c
 11973  015362  0E00               	movlw	0
 11974  015364  6E0C               	movwf	(btemp+11)^0,c
 11975                           
 11976                           ;stkvar	_p @ sp[(-20)+18]
 11977  015366  0EFE               	movlw	-2
 11978  015368  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11979  01536E  0EFF               	movlw	-1
 11980  015370  0060  F033  FFE3   	movff	btemp+11,plusw1
 11981  015376  D008               	goto	l2252
 11982  015378                     l11710:
 11983                           
 11984                           ;stkvar	_p @ sp[(-20)+18]
 11985  015378  0EFE               	movlw	-2
 11986  01537A  0060  F08F  FFE3   	movff	_prec,plusw1
 11987  015380  0EFF               	movlw	-1
 11988  015382  0060  F093  FFE3   	movff	_prec+1,plusw1
 11989  015388                     l2252:
 11990                           
 11991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11992                           ;stkvar	_w @ sp[(-20)+16]
 11993  015388  0EFC               	movlw	-4
 11994  01538A  0060  F087  FFE3   	movff	_width,plusw1
 11995  015390  0EFD               	movlw	-3
 11996  015392  0060  F08B  FFE3   	movff	_width+1,plusw1
 11997                           
 11998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11999  015398  A825               	btfss	_flags^0,4,c
 12000  01539A  D00B               	goto	l11716
 12001                           
 12002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12003                           ;stkvar	_w @ sp[(-20)+16]
 12004  01539C  50E1               	movf	fsr1l,w,c
 12005  01539E  0FFC               	addlw	-4
 12006  0153A0  6ED9               	movwf	fsr2l,c
 12007  0153A2  50E2               	movf	fsr1h,w,c
 12008  0153A4  6EDA               	movwf	fsr2h,c
 12009  0153A6  0EFF               	movlw	255
 12010  0153A8  22DA               	addwfc	fsr2h,f,c
 12011  0153AA  0EFE               	movlw	254
 12012  0153AC  26DE               	addwf	postinc2,f,c
 12013  0153AE  0EFF               	movlw	255
 12014  0153B0  22DD               	addwfc	postdec2,f,c
 12015  0153B2                     l11716:
 12016                           
 12017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12018                           ;stkvar	_d @ sp[(-20)+-10]
 12019  0153B2  0EE2               	movlw	226
 12020  0153B4  24E1               	addwf	fsr1l,w,c
 12021  0153B6  6ED9               	movwf	fsr2l,c
 12022  0153B8  0EFF               	movlw	255
 12023  0153BA  20E2               	addwfc	fsr1h,w,c
 12024  0153BC  6EDA               	movwf	fsr2h,c
 12025                           
 12026                           ;stkvar	_n @ sp[(-20)+4]
 12027  0153BE  0E08               	movlw	8
 12028  0153C0  6E01               	movwf	btemp^0,c
 12029  0153C2  0EF0               	movlw	-16
 12030  0153C4                     us1115999:
 12031  0153C4  006F FF7B FFE3     	movff	postinc2,plusw1
 12032  0153CA  28E8               	incf	wreg,w,c
 12033  0153CC  2E01               	decfsz	btemp^0,f,c
 12034  0153CE  D7FA               	bra	us1115999
 12035                           
 12036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12037  0153D0  0E4F               	movlw	79
 12038  0153D2  6E0B               	movwf	(btemp+10)^0,c
 12039  0153D4  0E00               	movlw	0
 12040  0153D6  6E0C               	movwf	(btemp+11)^0,c
 12041                           
 12042                           ;stkvar	_i @ sp[(-20)+14]
 12043  0153D8  0EFA               	movlw	-6
 12044  0153DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12045  0153E0  0EFB               	movlw	-5
 12046  0153E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 12047                           
 12048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12049  0153E8  0103               	movlb	3	; () banked
 12050  0153EA  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12051                           
 12052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12053  0153EC  D0EE               	goto	l11754
 12054  0153EE                     l11722:
 12055                           
 12056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12057                           ;stkvar	_i @ sp[(-20)+14]
 12058  0153EE  50E1               	movf	fsr1l,w,c
 12059  0153F0  0FFA               	addlw	-6
 12060  0153F2  6ED9               	movwf	fsr2l,c
 12061  0153F4  50E2               	movf	fsr1h,w,c
 12062  0153F6  6EDA               	movwf	fsr2h,c
 12063  0153F8  0EFF               	movlw	255
 12064  0153FA  22DA               	addwfc	fsr2h,f,c
 12065  0153FC  06DE               	decf	postinc2,f,c
 12066  0153FE  0E00               	movlw	0
 12067  015400  5ADD               	subwfb	postdec2,f,c
 12068                           
 12069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12070                           ;stkvar	_n @ sp[(-20)+4]
 12071  015402  0EF0               	movlw	-16
 12072  015404  006F FF8C  F00B    	movff	plusw1,btemp+10
 12073  01540A  0EF1               	movlw	-15
 12074  01540C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12075  015412  0E0F               	movlw	15
 12076  015414  160B               	andwf	(btemp+10)^0,f,c
 12077  015416  0E00               	movlw	0
 12078  015418  160C               	andwf	(btemp+11)^0,f,c
 12079                           
 12080                           ;stkvar	_c @ sp[(-20)+12]
 12081  01541A  0EF8               	movlw	-8
 12082  01541C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12083  015422  0EF9               	movlw	-7
 12084  015424  0060  F033  FFE3   	movff	btemp+11,plusw1
 12085                           
 12086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12087                           ;stkvar	_c @ sp[(-20)+12]
 12088  01542A  0EF9               	movlw	-7
 12089  01542C  BEE3               	btfsc	plusw1,7,c
 12090  01542E  D00F               	goto	l11730
 12091  015430  0EF9               	movlw	-7
 12092  015432  50E3               	movf	plusw1,w,c
 12093  015434  E108               	bnz	u11160
 12094  015436  0EF8               	movlw	-8
 12095  015438  006F FF8C  F001    	movff	plusw1,btemp
 12096  01543E  0E0A               	movlw	10
 12097  015440  5E01               	subwf	btemp^0,f,c
 12098  015442  A0D8               	btfss	status,0,c
 12099  015444  D004               	goto	l11730
 12100  015446                     u11160:
 12101                           
 12102                           ;stkvar	_c @ sp[(-20)+12]
 12103  015446  0EF8               	movlw	-8
 12104  015448  50E3               	movf	plusw1,w,c
 12105  01544A  0F57               	addlw	87
 12106  01544C  D003               	goto	L8
 12107  01544E                     l11730:
 12108                           
 12109                           ;stkvar	_c @ sp[(-20)+12]
 12110  01544E  0EF8               	movlw	-8
 12111  015450  50E3               	movf	plusw1,w,c
 12112  015452  0F30               	addlw	48
 12113  015454                     L8:
 12114  015454  6E0B               	movwf	(btemp+10)^0,c
 12115  015456  0EF9               	movlw	-7
 12116  015458  006F FF8C  F00C    	movff	plusw1,btemp+11
 12117  01545E  0E00               	movlw	0
 12118  015460  220C               	addwfc	(btemp+11)^0,f,c
 12119                           
 12120                           ;stkvar	_c @ sp[(-20)+12]
 12121  015462  0EF8               	movlw	-8
 12122  015464  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12123  01546A  0EF9               	movlw	-7
 12124  01546C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12125  015472  0EBF               	movlw	191
 12126  015474  6E0B               	movwf	(btemp+10)^0,c
 12127  015476  0EFF               	movlw	255
 12128  015478  6E0C               	movwf	(btemp+11)^0,c
 12129                           
 12130                           ;stkvar	_x @ sp[(-20)+-11]
 12131  01547A  0EE1               	movlw	-31
 12132  01547C  50E3               	movf	plusw1,w,c
 12133  01547E  6E09               	movwf	(btemp+8)^0,c
 12134  015480  6A0A               	clrf	(btemp+9)^0,c
 12135  015482  500B               	movf	(btemp+10)^0,w,c
 12136  015484  2609               	addwf	(btemp+8)^0,f,c
 12137  015486  500C               	movf	(btemp+11)^0,w,c
 12138  015488  220A               	addwfc	(btemp+9)^0,f,c
 12139  01548A  500A               	movf	(btemp+9)^0,w,c
 12140  01548C  E106               	bnz	u11170
 12141  01548E  0E1A               	movlw	26
 12142  015490  5C09               	subwf	(btemp+8)^0,w,c
 12143  015492  B0D8               	btfsc	status,0,c
 12144  015494  D002               	goto	u11170
 12145  015496  0E01               	movlw	1
 12146  015498  D001               	goto	u11180
 12147  01549A                     u11170:
 12148  01549A  0E00               	movlw	0
 12149  01549C                     u11180:
 12150  01549C  6E0B               	movwf	(btemp+10)^0,c
 12151  01549E  6A0C               	clrf	(btemp+11)^0,c
 12152                           
 12153                           ;stkvar	_xtoa$5337 @ sp[(-20)+2]
 12154  0154A0  0EEE               	movlw	-18
 12155  0154A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12156  0154A8  0EEF               	movlw	-17
 12157  0154AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 12158                           
 12159                           ;stkvar	_xtoa$5337 @ sp[(-20)+2]
 12160  0154B0  0EEE               	movlw	-18
 12161  0154B2  006F FF8C  F001    	movff	plusw1,btemp
 12162  0154B8  0EEF               	movlw	-17
 12163  0154BA  50E3               	movf	plusw1,w,c
 12164  0154BC  1001               	iorwf	btemp^0,w,c
 12165  0154BE  B4D8               	btfsc	status,2,c
 12166  0154C0  D041               	goto	l11746
 12167  0154C2  0E9F               	movlw	159
 12168  0154C4  6E0B               	movwf	(btemp+10)^0,c
 12169  0154C6  0EFF               	movlw	255
 12170  0154C8  6E0C               	movwf	(btemp+11)^0,c
 12171                           
 12172                           ;stkvar	_c @ sp[(-20)+12]
 12173  0154CA  0EF8               	movlw	-8
 12174  0154CC  006F FF8C  F009    	movff	plusw1,btemp+8
 12175  0154D2  0EF9               	movlw	-7
 12176  0154D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 12177  0154DA  0E20               	movlw	32
 12178  0154DC  1209               	iorwf	(btemp+8)^0,f,c
 12179  0154DE  0E00               	movlw	0
 12180  0154E0  120A               	iorwf	(btemp+9)^0,f,c
 12181  0154E2  500B               	movf	(btemp+10)^0,w,c
 12182  0154E4  2609               	addwf	(btemp+8)^0,f,c
 12183  0154E6  500C               	movf	(btemp+11)^0,w,c
 12184  0154E8  220A               	addwfc	(btemp+9)^0,f,c
 12185  0154EA  500A               	movf	(btemp+9)^0,w,c
 12186  0154EC  E106               	bnz	u11200
 12187  0154EE  0E1A               	movlw	26
 12188  0154F0  5C09               	subwf	(btemp+8)^0,w,c
 12189  0154F2  B0D8               	btfsc	status,0,c
 12190  0154F4  D002               	goto	u11200
 12191  0154F6  0E01               	movlw	1
 12192  0154F8  D001               	goto	u11210
 12193  0154FA                     u11200:
 12194  0154FA  0E00               	movlw	0
 12195  0154FC                     u11210:
 12196  0154FC  6E0B               	movwf	(btemp+10)^0,c
 12197  0154FE  6A0C               	clrf	(btemp+11)^0,c
 12198                           
 12199                           ;stkvar	_xtoa$5338 @ sp[(-20)+0]
 12200  015500  0EEC               	movlw	-20
 12201  015502  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12202  015508  0EED               	movlw	-19
 12203  01550A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12204                           
 12205                           ;stkvar	_xtoa$5338 @ sp[(-20)+0]
 12206  015510  0EEC               	movlw	-20
 12207  015512  006F FF8C  F001    	movff	plusw1,btemp
 12208  015518  0EED               	movlw	-19
 12209  01551A  50E3               	movf	plusw1,w,c
 12210  01551C  1001               	iorwf	btemp^0,w,c
 12211  01551E  B4D8               	btfsc	status,2,c
 12212  015520  D011               	goto	l11746
 12213                           
 12214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12215                           ;stkvar	_c @ sp[(-20)+12]
 12216  015522  0EF8               	movlw	-8
 12217  015524  006F FF8F FFE6     	movff	plusw1,postinc1
 12218  01552A  006F FF8F FFE6     	movff	plusw1,postinc1
 12219  015530  EC93  F0CE         	call	_toupper	;wreg free
 12220                           
 12221                           ;stkvar	_c @ sp[(-20)+12]
 12222  015534  0EF8               	movlw	-8
 12223  015536  0060  F007  FFE3   	movff	btemp,plusw1
 12224  01553C  0EF9               	movlw	-7
 12225  01553E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12226  015544                     l11746:
 12227                           
 12228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12229                           ;stkvar	_c @ sp[(-20)+12]
 12230                           ;stkvar	_i @ sp[(-20)+14]
 12231  015544  0EFA               	movlw	-6
 12232  015546  006F FF8C  F00B    	movff	plusw1,btemp+10
 12233  01554C  0EFB               	movlw	-5
 12234  01554E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12235  015554  0E94               	movlw	low _dbuf
 12236  015556  240B               	addwf	(btemp+10)^0,w,c
 12237  015558  6ED9               	movwf	fsr2l,c
 12238  01555A  0E03               	movlw	high _dbuf
 12239  01555C  200C               	addwfc	(btemp+11)^0,w,c
 12240  01555E  6EDA               	movwf	fsr2h,c
 12241  015560  0EF8               	movlw	-8
 12242  015562  006F FF8F FFDF     	movff	plusw1,indf2
 12243                           
 12244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 12245                           ;stkvar	_p @ sp[(-20)+18]
 12246  015568  50E1               	movf	fsr1l,w,c
 12247  01556A  0FFE               	addlw	-2
 12248  01556C  6ED9               	movwf	fsr2l,c
 12249  01556E  50E2               	movf	fsr1h,w,c
 12250  015570  6EDA               	movwf	fsr2h,c
 12251  015572  0EFF               	movlw	255
 12252  015574  22DA               	addwfc	fsr2h,f,c
 12253  015576  06DE               	decf	postinc2,f,c
 12254  015578  0E00               	movlw	0
 12255  01557A  5ADD               	subwfb	postdec2,f,c
 12256                           
 12257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 12258                           ;stkvar	_w @ sp[(-20)+16]
 12259  01557C  50E1               	movf	fsr1l,w,c
 12260  01557E  0FFC               	addlw	-4
 12261  015580  6ED9               	movwf	fsr2l,c
 12262  015582  50E2               	movf	fsr1h,w,c
 12263  015584  6EDA               	movwf	fsr2h,c
 12264  015586  0EFF               	movlw	255
 12265  015588  22DA               	addwfc	fsr2h,f,c
 12266  01558A  06DE               	decf	postinc2,f,c
 12267  01558C  0E00               	movlw	0
 12268  01558E  5ADD               	subwfb	postdec2,f,c
 12269                           
 12270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 12271  015590  0E04               	movlw	4
 12272  015592  6E0C               	movwf	(btemp+11)^0,c
 12273                           
 12274                           ;stkvar	_n @ sp[(-20)+4]
 12275  015594  50E1               	movf	fsr1l,w,c
 12276  015596  0FF0               	addlw	-16
 12277  015598  6ED9               	movwf	fsr2l,c
 12278  01559A  50E2               	movf	fsr1h,w,c
 12279  01559C  6EDA               	movwf	fsr2h,c
 12280  01559E  0EFF               	movlw	255
 12281  0155A0  22DA               	addwfc	fsr2h,f,c
 12282  0155A2  280C               	incf	(btemp+11)^0,w,c
 12283  0155A4  52DE               	movf	postinc2,f,c
 12284  0155A6  D00F               	goto	u11230
 12285  0155A8                     u11235:
 12286  0155A8  52DE               	movf	postinc2,f,c
 12287  0155AA  52DE               	movf	postinc2,f,c
 12288  0155AC  52DE               	movf	postinc2,f,c
 12289  0155AE  52DE               	movf	postinc2,f,c
 12290  0155B0  52DE               	movf	postinc2,f,c
 12291  0155B2  52DE               	movf	postinc2,f,c
 12292  0155B4  90D8               	bcf	status,0,c
 12293  0155B6  32DD               	rrcf	postdec2,f,c
 12294  0155B8  32DD               	rrcf	postdec2,f,c
 12295  0155BA  32DD               	rrcf	postdec2,f,c
 12296  0155BC  32DD               	rrcf	postdec2,f,c
 12297  0155BE  32DD               	rrcf	postdec2,f,c
 12298  0155C0  32DD               	rrcf	postdec2,f,c
 12299  0155C2  32DD               	rrcf	postdec2,f,c
 12300  0155C4  32DE               	rrcf	postinc2,f,c
 12301  0155C6                     u11230:
 12302  0155C6  2EE8               	decfsz	wreg,f,c
 12303  0155C8  D7EF               	goto	u11235
 12304  0155CA                     l11754:
 12305                           
 12306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12307                           ;stkvar	_i @ sp[(-20)+14]
 12308  0155CA  0EFB               	movlw	-5
 12309  0155CC  BEE3               	btfsc	plusw1,7,c
 12310  0155CE  D03A               	goto	u11280
 12311  0155D0  0EFB               	movlw	-5
 12312  0155D2  50E3               	movf	plusw1,w,c
 12313  0155D4  E108               	bnz	u11240
 12314  0155D6  0EFA               	movlw	-6
 12315  0155D8  006F FF8C  F001    	movff	plusw1,btemp
 12316  0155DE  0E02               	movlw	2
 12317  0155E0  5E01               	subwf	btemp^0,f,c
 12318  0155E2  A0D8               	btfss	status,0,c
 12319  0155E4  D02F               	goto	u11280
 12320  0155E6                     u11240:
 12321                           
 12322                           ;stkvar	_n @ sp[(-20)+4]
 12323  0155E6  0EF0               	movlw	-16
 12324  0155E8  50E3               	movf	plusw1,w,c
 12325  0155EA  E115               	bnz	u11251
 12326  0155EC  0EF1               	movlw	-15
 12327  0155EE  50E3               	movf	plusw1,w,c
 12328  0155F0  E112               	bnz	u11251
 12329  0155F2  0EF2               	movlw	-14
 12330  0155F4  50E3               	movf	plusw1,w,c
 12331  0155F6  E10F               	bnz	u11251
 12332  0155F8  0EF3               	movlw	-13
 12333  0155FA  50E3               	movf	plusw1,w,c
 12334  0155FC  E10C               	bnz	u11251
 12335  0155FE  0EF4               	movlw	-12
 12336  015600  50E3               	movf	plusw1,w,c
 12337  015602  E109               	bnz	u11251
 12338  015604  0EF5               	movlw	-11
 12339  015606  50E3               	movf	plusw1,w,c
 12340  015608  E106               	bnz	u11251
 12341  01560A  0EF6               	movlw	-10
 12342  01560C  50E3               	movf	plusw1,w,c
 12343  01560E  E103               	bnz	u11251
 12344  015610  0EF7               	movlw	-9
 12345  015612  50E3               	movf	plusw1,w,c
 12346  015614  A4D8               	btfss	status,2,c
 12347  015616                     u11251:
 12348  015616  D6EB               	goto	l11722
 12349                           
 12350                           ;stkvar	_p @ sp[(-20)+18]
 12351  015618  0EFF               	movlw	-1
 12352  01561A  BEE3               	btfsc	plusw1,7,c
 12353  01561C  D007               	goto	u11260
 12354  01561E  0EFF               	movlw	-1
 12355  015620  50E3               	movf	plusw1,w,c
 12356  015622  E103               	bnz	u11261
 12357  015624  0EFE               	movlw	-2
 12358  015626  04E3               	decf	plusw1,w,c
 12359  015628  B0D8               	btfsc	status,0,c
 12360  01562A                     u11261:
 12361  01562A  D6E1               	goto	l11722
 12362  01562C                     u11260:
 12363                           
 12364                           ;stkvar	_w @ sp[(-20)+16]
 12365  01562C  0EFD               	movlw	-3
 12366  01562E  BEE3               	btfsc	plusw1,7,c
 12367  015630  D009               	goto	u11280
 12368  015632  0EFD               	movlw	-3
 12369  015634  50E3               	movf	plusw1,w,c
 12370  015636  E104               	bnz	u11270
 12371  015638  0EFC               	movlw	-4
 12372  01563A  04E3               	decf	plusw1,w,c
 12373  01563C  A0D8               	btfss	status,0,c
 12374  01563E  D002               	goto	u11280
 12375  015640                     u11270:
 12376  015640  B225               	btfsc	_flags^0,1,c
 12377  015642  D6D5               	goto	l11722
 12378  015644                     u11280:
 12379                           
 12380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 12381  015644  A825               	btfss	_flags^0,4,c
 12382  015646  D036               	goto	l11770
 12383                           
 12384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12385                           ;stkvar	_i @ sp[(-20)+14]
 12386  015648  50E1               	movf	fsr1l,w,c
 12387  01564A  0FFA               	addlw	-6
 12388  01564C  6ED9               	movwf	fsr2l,c
 12389  01564E  50E2               	movf	fsr1h,w,c
 12390  015650  6EDA               	movwf	fsr2h,c
 12391  015652  0EFF               	movlw	255
 12392  015654  22DA               	addwfc	fsr2h,f,c
 12393  015656  06DE               	decf	postinc2,f,c
 12394  015658  0E00               	movlw	0
 12395  01565A  5ADD               	subwfb	postdec2,f,c
 12396                           
 12397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12398                           ;stkvar	_x @ sp[(-20)+-11]
 12399                           ;stkvar	_i @ sp[(-20)+14]
 12400  01565C  0EFA               	movlw	-6
 12401  01565E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12402  015664  0EFB               	movlw	-5
 12403  015666  006F FF8C  F00C    	movff	plusw1,btemp+11
 12404  01566C  0E94               	movlw	low _dbuf
 12405  01566E  240B               	addwf	(btemp+10)^0,w,c
 12406  015670  6ED9               	movwf	fsr2l,c
 12407  015672  0E03               	movlw	high _dbuf
 12408  015674  200C               	addwfc	(btemp+11)^0,w,c
 12409  015676  6EDA               	movwf	fsr2h,c
 12410  015678  0EE1               	movlw	-31
 12411  01567A  006F FF8F FFDF     	movff	plusw1,indf2
 12412                           
 12413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12414                           ;stkvar	_i @ sp[(-20)+14]
 12415  015680  50E1               	movf	fsr1l,w,c
 12416  015682  0FFA               	addlw	-6
 12417  015684  6ED9               	movwf	fsr2l,c
 12418  015686  50E2               	movf	fsr1h,w,c
 12419  015688  6EDA               	movwf	fsr2h,c
 12420  01568A  0EFF               	movlw	255
 12421  01568C  22DA               	addwfc	fsr2h,f,c
 12422  01568E  06DE               	decf	postinc2,f,c
 12423  015690  0E00               	movlw	0
 12424  015692  5ADD               	subwfb	postdec2,f,c
 12425                           
 12426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12427                           ;stkvar	_i @ sp[(-20)+14]
 12428  015694  0EFA               	movlw	-6
 12429  015696  006F FF8C  F00B    	movff	plusw1,btemp+10
 12430  01569C  0EFB               	movlw	-5
 12431  01569E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12432  0156A4  0E94               	movlw	low _dbuf
 12433  0156A6  240B               	addwf	(btemp+10)^0,w,c
 12434  0156A8  6ED9               	movwf	fsr2l,c
 12435  0156AA  0E03               	movlw	high _dbuf
 12436  0156AC  200C               	addwfc	(btemp+11)^0,w,c
 12437  0156AE  6EDA               	movwf	fsr2h,c
 12438  0156B0  0E30               	movlw	48
 12439  0156B2  6EDF               	movwf	indf2,c
 12440  0156B4                     l11770:
 12441                           
 12442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12443                           ;stkvar	_w @ sp[(-20)+16]
 12444  0156B4  0EFC               	movlw	-4
 12445  0156B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12446  0156BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12447                           
 12448                           ;stkvar	_i @ sp[(-22)+14]
 12449  0156C2  0E94               	movlw	low _dbuf
 12450  0156C4  6E0B               	movwf	(btemp+10)^0,c
 12451  0156C6  0E03               	movlw	high _dbuf
 12452  0156C8  6E0C               	movwf	(btemp+11)^0,c
 12453  0156CA  0EF8               	movlw	-8
 12454  0156CC  50E3               	movf	plusw1,w,c
 12455  0156CE  260B               	addwf	(btemp+10)^0,f,c
 12456  0156D0  0EF9               	movlw	-7
 12457  0156D2  50E3               	movf	plusw1,w,c
 12458  0156D4  220C               	addwfc	(btemp+11)^0,f,c
 12459  0156D6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12460  0156DC  0060  F033  FFE6   	movff	btemp+11,postinc1
 12461                           
 12462                           ;stkvar	_fp @ sp[(-24)+-2]
 12463  0156E2  0EE6               	movlw	-26
 12464  0156E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12465  0156EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12466  0156F0  ECB3  F0C5         	call	_pad	;wreg free
 12467                           
 12468                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12469  0156F4  0EE1               	movlw	225
 12470  0156F6  26E1               	addwf	fsr1l,f,c
 12471  0156F8  0EFF               	movlw	255
 12472  0156FA  22E2               	addwfc	fsr1h,f,c
 12473  0156FC  0012               	return		;funcret
 12474  0156FE                     __end_of_xtoa:
 12475                           	opt callstack 0
 12476                           
 12477 ;; *************** function _toupper *****************
 12478 ;; Defined at:
 12479 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;  c               2  [STACK] int 
 12482 ;; Auto vars:     Size  Location     Type
 12483 ;;		None
 12484 ;; Return value:  Size  Location     Type
 12485 ;;                  2  [STACK] int 
 12486 ;; Registers used:
 12487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12488 ;; Tracked objects:
 12489 ;;		On entry : 0/3
 12490 ;;		On exit  : 0/0
 12491 ;;		Unchanged: 0/0
 12492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12497 ;;Total ram usage:        0 bytes
 12498 ;; Hardware stack levels used:    1
 12499 ;; Hardware stack levels required when called:   16
 12500 ;; This function calls:
 12501 ;;		_islower
 12502 ;; This function is called by:
 12503 ;;		_xtoa
 12504 ;; This function uses a reentrant model
 12505 ;;
 12506                           
 12507                           	psect	text47
 12508  019D26                     __ptext47:
 12509                           	opt callstack 0
 12510  019D26                     _toupper:
 12511                           	opt callstack 0
 12512                           
 12513                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12514  019D26  52E6               	movf	postinc1,f,c
 12515  019D28  52E6               	movf	postinc1,f,c
 12516                           
 12517                           ;stkvar	_c @ sp[(-2)+-2]
 12518                           
 12519                           ;incstack = 0
 12520 ;; hardware stack exceeded
 12521  019D2A  0EFC               	movlw	-4
 12522  019D2C  50E3               	movf	plusw1,w,c
 12523  019D2E  0F9F               	addlw	159
 12524  019D30  6E0B               	movwf	(btemp+10)^0,c
 12525  019D32  0EFD               	movlw	-3
 12526  019D34  006F FF8C  F00C    	movff	plusw1,btemp+11
 12527  019D3A  0EFF               	movlw	255
 12528  019D3C  220C               	addwfc	(btemp+11)^0,f,c
 12529  019D3E  500C               	movf	(btemp+11)^0,w,c
 12530  019D40  E106               	bnz	u5870
 12531  019D42  0E1A               	movlw	26
 12532  019D44  5C0B               	subwf	(btemp+10)^0,w,c
 12533  019D46  B0D8               	btfsc	status,0,c
 12534  019D48  D002               	goto	u5870
 12535  019D4A  0E01               	movlw	1
 12536  019D4C  D001               	goto	u5880
 12537  019D4E                     u5870:
 12538  019D4E  0E00               	movlw	0
 12539  019D50                     u5880:
 12540  019D50  6E0B               	movwf	(btemp+10)^0,c
 12541  019D52  6A0C               	clrf	(btemp+11)^0,c
 12542                           
 12543                           ;stkvar	_toupper$6144 @ sp[(-2)+0]
 12544  019D54  0EFE               	movlw	-2
 12545  019D56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12546  019D5C  0EFF               	movlw	-1
 12547  019D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12548                           
 12549                           ;stkvar	_toupper$6144 @ sp[(-2)+0]
 12550  019D64  0EFE               	movlw	-2
 12551  019D66  006F FF8C  F001    	movff	plusw1,btemp
 12552  019D6C  0EFF               	movlw	-1
 12553  019D6E  50E3               	movf	plusw1,w,c
 12554  019D70  1001               	iorwf	btemp^0,w,c
 12555  019D72  B4D8               	btfsc	status,2,c
 12556  019D74  D00D               	goto	l7680
 12557                           
 12558                           ;stkvar	_c @ sp[(-2)+-2]
 12559  019D76  0EFC               	movlw	-4
 12560  019D78  006F FF8C  F001    	movff	plusw1,btemp
 12561  019D7E  0EFD               	movlw	-3
 12562  019D80  006F FF8C  F002    	movff	plusw1,btemp+1
 12563  019D86  0E5F               	movlw	95
 12564  019D88  1601               	andwf	btemp^0,f,c
 12565  019D8A  0E00               	movlw	0
 12566  019D8C  1602               	andwf	(btemp+1)^0,f,c
 12567  019D8E  D008               	goto	l3419
 12568  019D90                     l7680:
 12569                           
 12570                           ;stkvar	_c @ sp[(-2)+-2]
 12571  019D90  0EFC               	movlw	-4
 12572  019D92  006F FF8C  F001    	movff	plusw1,btemp
 12573  019D98  0EFD               	movlw	-3
 12574  019D9A  006F FF8C  F002    	movff	plusw1,btemp+1
 12575  019DA0                     l3419:
 12576                           
 12577                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12578  019DA0  52E5               	movf	postdec1,f,c
 12579  019DA2  52E5               	movf	postdec1,f,c
 12580  019DA4  52E5               	movf	postdec1,f,c
 12581  019DA6  52E5               	movf	postdec1,f,c
 12582  019DA8  0012               	return		;funcret
 12583  019DAA                     __end_of_toupper:
 12584                           	opt callstack 0
 12585                           
 12586 ;; *************** function _islower *****************
 12587 ;; Defined at:
 12588 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  c               2  [STACK] int 
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  2  [STACK] int 
 12595 ;; Registers used:
 12596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12606 ;;Total ram usage:        0 bytes
 12607 ;; Hardware stack levels used:    1
 12608 ;; Hardware stack levels required when called:   15
 12609 ;; This function calls:
 12610 ;;		Nothing
 12611 ;; This function is called by:
 12612 ;;		_toupper
 12613 ;; This function uses a reentrant model
 12614 ;;
 12615                           
 12616                           	psect	text48
 12617  01A9BE                     __ptext48:
 12618                           	opt callstack 0
 12619  01A9BE                     _islower:
 12620                           	opt callstack 0
 12621                           
 12622                           ;stkvar	_c @ sp[(0)+-2]
 12623                           
 12624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12625                           ;incstack = 0
 12626 ;; hardware stack exceeded
 12627  01A9BE  0EFE               	movlw	-2
 12628  01A9C0  50E3               	movf	plusw1,w,c
 12629  01A9C2  0F9F               	addlw	159
 12630  01A9C4  6E0B               	movwf	(btemp+10)^0,c
 12631  01A9C6  0EFF               	movlw	-1
 12632  01A9C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12633  01A9CE  0EFF               	movlw	255
 12634  01A9D0  220C               	addwfc	(btemp+11)^0,f,c
 12635  01A9D2  500C               	movf	(btemp+11)^0,w,c
 12636  01A9D4  E106               	bnz	u5560
 12637  01A9D6  0E1A               	movlw	26
 12638  01A9D8  5C0B               	subwf	(btemp+10)^0,w,c
 12639  01A9DA  B0D8               	btfsc	status,0,c
 12640  01A9DC  D002               	goto	u5560
 12641  01A9DE  0E01               	movlw	1
 12642  01A9E0  D001               	goto	u5570
 12643  01A9E2                     u5560:
 12644  01A9E2  0E00               	movlw	0
 12645  01A9E4                     u5570:
 12646  01A9E4  6E01               	movwf	btemp^0,c
 12647  01A9E6  6A02               	clrf	(btemp+1)^0,c
 12648                           
 12649                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12650  01A9E8  52E5               	movf	postdec1,f,c
 12651  01A9EA  52E5               	movf	postdec1,f,c
 12652  01A9EC  0012               	return		;funcret
 12653  01A9EE                     __end_of_islower:
 12654                           	opt callstack 0
 12655                           
 12656 ;; *************** function _isalpha *****************
 12657 ;; Defined at:
 12658 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;  c               2  [STACK] int 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  2  [STACK] int 
 12665 ;; Registers used:
 12666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12676 ;;Total ram usage:        0 bytes
 12677 ;; Hardware stack levels used:    1
 12678 ;; Hardware stack levels required when called:   15
 12679 ;; This function calls:
 12680 ;;		Nothing
 12681 ;; This function is called by:
 12682 ;;		_xtoa
 12683 ;; This function uses a reentrant model
 12684 ;;
 12685                           
 12686                           	psect	text49
 12687  01A61A                     __ptext49:
 12688                           	opt callstack 0
 12689  01A61A                     _isalpha:
 12690                           	opt callstack 0
 12691                           
 12692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12693                           ;incstack = 0
 12694 ;; hardware stack exceeded
 12695  01A61A  0E9F               	movlw	159
 12696  01A61C  6E0B               	movwf	(btemp+10)^0,c
 12697  01A61E  0EFF               	movlw	255
 12698  01A620  6E0C               	movwf	(btemp+11)^0,c
 12699                           
 12700                           ;stkvar	_c @ sp[(0)+-2]
 12701  01A622  0EFE               	movlw	-2
 12702  01A624  006F FF8C  F009    	movff	plusw1,btemp+8
 12703  01A62A  0EFF               	movlw	-1
 12704  01A62C  006F FF8C  F00A    	movff	plusw1,btemp+9
 12705  01A632  0E20               	movlw	32
 12706  01A634  1209               	iorwf	(btemp+8)^0,f,c
 12707  01A636  0E00               	movlw	0
 12708  01A638  120A               	iorwf	(btemp+9)^0,f,c
 12709  01A63A  500B               	movf	(btemp+10)^0,w,c
 12710  01A63C  2609               	addwf	(btemp+8)^0,f,c
 12711  01A63E  500C               	movf	(btemp+11)^0,w,c
 12712  01A640  220A               	addwfc	(btemp+9)^0,f,c
 12713  01A642  500A               	movf	(btemp+9)^0,w,c
 12714  01A644  E106               	bnz	u5850
 12715  01A646  0E1A               	movlw	26
 12716  01A648  5C09               	subwf	(btemp+8)^0,w,c
 12717  01A64A  B0D8               	btfsc	status,0,c
 12718  01A64C  D002               	goto	u5850
 12719  01A64E  0E01               	movlw	1
 12720  01A650  D001               	goto	u5860
 12721  01A652                     u5850:
 12722  01A652  0E00               	movlw	0
 12723  01A654                     u5860:
 12724  01A654  6E01               	movwf	btemp^0,c
 12725  01A656  6A02               	clrf	(btemp+1)^0,c
 12726                           
 12727                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12728  01A658  52E5               	movf	postdec1,f,c
 12729  01A65A  52E5               	movf	postdec1,f,c
 12730  01A65C  0012               	return		;funcret
 12731  01A65E                     __end_of_isalpha:
 12732                           	opt callstack 0
 12733                           
 12734 ;; *************** function _utoa *****************
 12735 ;; Defined at:
 12736 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12737 ;; Parameters:    Size  Location     Type
 12738 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12739 ;;		 -> f(6), NULL(0), 
 12740 ;;  d               8  [STACK] unsigned long long 
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;  n               8  [STACK] unsigned long long 
 12743 ;;  i               2  [STACK] int 
 12744 ;;  w               2  [STACK] int 
 12745 ;;  p               2  [STACK] int 
 12746 ;; Return value:  Size  Location     Type
 12747 ;;                  2  [STACK] int 
 12748 ;; Registers used:
 12749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/0
 12752 ;;		On exit  : 0/0
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12759 ;;Total ram usage:        0 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:   20
 12762 ;; This function calls:
 12763 ;;		___lodiv
 12764 ;;		___lomod
 12765 ;;		_pad
 12766 ;; This function is called by:
 12767 ;;		_vfpfcnvrt
 12768 ;; This function uses a reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text50
 12772  015E0C                     __ptext50:
 12773                           	opt callstack 0
 12774  015E0C                     _utoa:
 12775                           	opt callstack 0
 12776                           
 12777                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12778  015E0C  0E0E               	movlw	14
 12779  015E0E  26E1               	addwf	fsr1l,f,c
 12780  015E10  0E00               	movlw	0
 12781  015E12  22E2               	addwfc	fsr1h,f,c
 12782                           
 12783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 12784                           
 12785                           ;incstack = 0
 12786 ;; hardware stack exceeded
 12787  015E14  AE24               	btfss	(_prec+1)^0,7,c
 12788                           
 12789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 12790  015E16  9225               	bcf	_flags^0,1,c
 12791                           
 12792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 12793  015E18  BE24               	btfsc	(_prec+1)^0,7,c
 12794  015E1A  D005               	goto	u11050
 12795  015E1C  5024               	movf	(_prec+1)^0,w,c
 12796  015E1E  E110               	bnz	l11670
 12797  015E20  0423               	decf	_prec^0,w,c
 12798  015E22  B0D8               	btfsc	status,0,c
 12799  015E24  D00D               	goto	l11670
 12800  015E26                     u11050:
 12801  015E26  0E01               	movlw	1
 12802  015E28  6E0B               	movwf	(btemp+10)^0,c
 12803  015E2A  0E00               	movlw	0
 12804  015E2C  6E0C               	movwf	(btemp+11)^0,c
 12805                           
 12806                           ;stkvar	_p @ sp[(-14)+12]
 12807  015E2E  0EFE               	movlw	-2
 12808  015E30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12809  015E36  0EFF               	movlw	-1
 12810  015E38  0060  F033  FFE3   	movff	btemp+11,plusw1
 12811  015E3E  D008               	goto	l2237
 12812  015E40                     l11670:
 12813                           
 12814                           ;stkvar	_p @ sp[(-14)+12]
 12815  015E40  0EFE               	movlw	-2
 12816  015E42  0060  F08F  FFE3   	movff	_prec,plusw1
 12817  015E48  0EFF               	movlw	-1
 12818  015E4A  0060  F093  FFE3   	movff	_prec+1,plusw1
 12819  015E50                     l2237:
 12820                           
 12821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 12822                           ;stkvar	_w @ sp[(-14)+10]
 12823  015E50  0EFC               	movlw	-4
 12824  015E52  0060  F087  FFE3   	movff	_width,plusw1
 12825  015E58  0EFD               	movlw	-3
 12826  015E5A  0060  F08B  FFE3   	movff	_width+1,plusw1
 12827                           
 12828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 12829                           ;stkvar	_d @ sp[(-14)+-10]
 12830  015E60  0EE8               	movlw	232
 12831  015E62  24E1               	addwf	fsr1l,w,c
 12832  015E64  6ED9               	movwf	fsr2l,c
 12833  015E66  0EFF               	movlw	255
 12834  015E68  20E2               	addwfc	fsr1h,w,c
 12835  015E6A  6EDA               	movwf	fsr2h,c
 12836                           
 12837                           ;stkvar	_n @ sp[(-14)+0]
 12838  015E6C  0E08               	movlw	8
 12839  015E6E  6E01               	movwf	btemp^0,c
 12840  015E70  0EF2               	movlw	-14
 12841  015E72                     us1106999:
 12842  015E72  006F FF7B FFE3     	movff	postinc2,plusw1
 12843  015E78  28E8               	incf	wreg,w,c
 12844  015E7A  2E01               	decfsz	btemp^0,f,c
 12845  015E7C  D7FA               	bra	us1106999
 12846                           
 12847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 12848  015E7E  0E4F               	movlw	79
 12849  015E80  6E0B               	movwf	(btemp+10)^0,c
 12850  015E82  0E00               	movlw	0
 12851  015E84  6E0C               	movwf	(btemp+11)^0,c
 12852                           
 12853                           ;stkvar	_i @ sp[(-14)+8]
 12854  015E86  0EFA               	movlw	-6
 12855  015E88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12856  015E8E  0EFB               	movlw	-5
 12857  015E90  0060  F033  FFE3   	movff	btemp+11,plusw1
 12858                           
 12859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 12860  015E96  0103               	movlb	3	; () banked
 12861  015E98  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12862                           
 12863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12864  015E9A  D0FB               	goto	l11688
 12865  015E9C                     l11678:
 12866                           
 12867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 12868                           ;stkvar	_i @ sp[(-14)+8]
 12869  015E9C  50E1               	movf	fsr1l,w,c
 12870  015E9E  0FFA               	addlw	-6
 12871  015EA0  6ED9               	movwf	fsr2l,c
 12872  015EA2  50E2               	movf	fsr1h,w,c
 12873  015EA4  6EDA               	movwf	fsr2h,c
 12874  015EA6  0EFF               	movlw	255
 12875  015EA8  22DA               	addwfc	fsr2h,f,c
 12876  015EAA  06DE               	decf	postinc2,f,c
 12877  015EAC  0E00               	movlw	0
 12878  015EAE  5ADD               	subwfb	postdec2,f,c
 12879                           
 12880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 12881  015EB0  0E0A               	movlw	10
 12882  015EB2  6EE6               	movwf	postinc1,c
 12883  015EB4  0E00               	movlw	0
 12884  015EB6  6EE6               	movwf	postinc1,c
 12885  015EB8  0E00               	movlw	0
 12886  015EBA  6EE6               	movwf	postinc1,c
 12887  015EBC  0E00               	movlw	0
 12888  015EBE  6EE6               	movwf	postinc1,c
 12889  015EC0  0E00               	movlw	0
 12890  015EC2  6EE6               	movwf	postinc1,c
 12891  015EC4  0E00               	movlw	0
 12892  015EC6  6EE6               	movwf	postinc1,c
 12893  015EC8  0E00               	movlw	0
 12894  015ECA  6EE6               	movwf	postinc1,c
 12895  015ECC  0E00               	movlw	0
 12896  015ECE  6EE6               	movwf	postinc1,c
 12897                           
 12898                           ;stkvar	_n @ sp[(-22)+0]
 12899  015ED0  50E1               	movf	fsr1l,w,c
 12900  015ED2  0FEA               	addlw	-22
 12901  015ED4  6ED9               	movwf	fsr2l,c
 12902  015ED6  50E2               	movf	fsr1h,w,c
 12903  015ED8  6EDA               	movwf	fsr2h,c
 12904  015EDA  0EFF               	movlw	255
 12905  015EDC  22DA               	addwfc	fsr2h,f,c
 12906  015EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12907  015EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 12908  015EEA  006F FF7B FFE6     	movff	postinc2,postinc1
 12909  015EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 12910  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 12911  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 12912  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 12913  015F08  006F FF7B FFE6     	movff	postinc2,postinc1
 12914  015F0E  ECC0  F0C2         	call	___lomod	;wreg free
 12915  015F12  52E5               	movf	postdec1,f,c
 12916  015F14  006F FF9C  F018    	movff	indf1,btemp+23
 12917  015F1A  52E5               	movf	postdec1,f,c
 12918  015F1C  006F FF9C  F017    	movff	indf1,btemp+22
 12919  015F22  52E5               	movf	postdec1,f,c
 12920  015F24  006F FF9C  F016    	movff	indf1,btemp+21
 12921  015F2A  52E5               	movf	postdec1,f,c
 12922  015F2C  006F FF9C  F015    	movff	indf1,btemp+20
 12923  015F32  52E5               	movf	postdec1,f,c
 12924  015F34  006F FF9C  F014    	movff	indf1,btemp+19
 12925  015F3A  52E5               	movf	postdec1,f,c
 12926  015F3C  006F FF9C  F013    	movff	indf1,btemp+18
 12927  015F42  52E5               	movf	postdec1,f,c
 12928  015F44  006F FF9C  F012    	movff	indf1,btemp+17
 12929  015F4A  52E5               	movf	postdec1,f,c
 12930  015F4C  006F FF9C  F011    	movff	indf1,btemp+16
 12931  015F52  0EF8               	movlw	248
 12932  015F54  26E1               	addwf	fsr1l,f,c
 12933  015F56  0EFF               	movlw	255
 12934  015F58  22E2               	addwfc	fsr1h,f,c
 12935  015F5A  0E30               	movlw	48
 12936  015F5C  2611               	addwf	(btemp+16)^0,f,c
 12937                           
 12938                           ;stkvar	_i @ sp[(-14)+8]
 12939  015F5E  0EFA               	movlw	-6
 12940  015F60  006F FF8C  F00B    	movff	plusw1,btemp+10
 12941  015F66  0EFB               	movlw	-5
 12942  015F68  006F FF8C  F00C    	movff	plusw1,btemp+11
 12943  015F6E  0E94               	movlw	low _dbuf
 12944  015F70  240B               	addwf	(btemp+10)^0,w,c
 12945  015F72  6ED9               	movwf	fsr2l,c
 12946  015F74  0E03               	movlw	high _dbuf
 12947  015F76  200C               	addwfc	(btemp+11)^0,w,c
 12948  015F78  6EDA               	movwf	fsr2h,c
 12949  015F7A  0060  F047  FFDF   	movff	btemp+16,indf2
 12950                           
 12951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 12952                           ;stkvar	_p @ sp[(-14)+12]
 12953  015F80  50E1               	movf	fsr1l,w,c
 12954  015F82  0FFE               	addlw	-2
 12955  015F84  6ED9               	movwf	fsr2l,c
 12956  015F86  50E2               	movf	fsr1h,w,c
 12957  015F88  6EDA               	movwf	fsr2h,c
 12958  015F8A  0EFF               	movlw	255
 12959  015F8C  22DA               	addwfc	fsr2h,f,c
 12960  015F8E  06DE               	decf	postinc2,f,c
 12961  015F90  0E00               	movlw	0
 12962  015F92  5ADD               	subwfb	postdec2,f,c
 12963                           
 12964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 12965                           ;stkvar	_w @ sp[(-14)+10]
 12966  015F94  50E1               	movf	fsr1l,w,c
 12967  015F96  0FFC               	addlw	-4
 12968  015F98  6ED9               	movwf	fsr2l,c
 12969  015F9A  50E2               	movf	fsr1h,w,c
 12970  015F9C  6EDA               	movwf	fsr2h,c
 12971  015F9E  0EFF               	movlw	255
 12972  015FA0  22DA               	addwfc	fsr2h,f,c
 12973  015FA2  06DE               	decf	postinc2,f,c
 12974  015FA4  0E00               	movlw	0
 12975  015FA6  5ADD               	subwfb	postdec2,f,c
 12976                           
 12977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 12978  015FA8  0E0A               	movlw	10
 12979  015FAA  6EE6               	movwf	postinc1,c
 12980  015FAC  0E00               	movlw	0
 12981  015FAE  6EE6               	movwf	postinc1,c
 12982  015FB0  0E00               	movlw	0
 12983  015FB2  6EE6               	movwf	postinc1,c
 12984  015FB4  0E00               	movlw	0
 12985  015FB6  6EE6               	movwf	postinc1,c
 12986  015FB8  0E00               	movlw	0
 12987  015FBA  6EE6               	movwf	postinc1,c
 12988  015FBC  0E00               	movlw	0
 12989  015FBE  6EE6               	movwf	postinc1,c
 12990  015FC0  0E00               	movlw	0
 12991  015FC2  6EE6               	movwf	postinc1,c
 12992  015FC4  0E00               	movlw	0
 12993  015FC6  6EE6               	movwf	postinc1,c
 12994                           
 12995                           ;stkvar	_n @ sp[(-22)+0]
 12996  015FC8  50E1               	movf	fsr1l,w,c
 12997  015FCA  0FEA               	addlw	-22
 12998  015FCC  6ED9               	movwf	fsr2l,c
 12999  015FCE  50E2               	movf	fsr1h,w,c
 13000  015FD0  6EDA               	movwf	fsr2h,c
 13001  015FD2  0EFF               	movlw	255
 13002  015FD4  22DA               	addwfc	fsr2h,f,c
 13003  015FD6  006F FF7B FFE6     	movff	postinc2,postinc1
 13004  015FDC  006F FF7B FFE6     	movff	postinc2,postinc1
 13005  015FE2  006F FF7B FFE6     	movff	postinc2,postinc1
 13006  015FE8  006F FF7B FFE6     	movff	postinc2,postinc1
 13007  015FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 13008  015FF4  006F FF7B FFE6     	movff	postinc2,postinc1
 13009  015FFA  006F FF7B FFE6     	movff	postinc2,postinc1
 13010  016000  006F FF7B FFE6     	movff	postinc2,postinc1
 13011  016006  ECCC  F0BD         	call	___lodiv	;wreg free
 13012  01600A  52E5               	movf	postdec1,f,c
 13013  01600C  006F FF9C  F018    	movff	indf1,btemp+23
 13014  016012  52E5               	movf	postdec1,f,c
 13015  016014  006F FF9C  F017    	movff	indf1,btemp+22
 13016  01601A  52E5               	movf	postdec1,f,c
 13017  01601C  006F FF9C  F016    	movff	indf1,btemp+21
 13018  016022  52E5               	movf	postdec1,f,c
 13019  016024  006F FF9C  F015    	movff	indf1,btemp+20
 13020  01602A  52E5               	movf	postdec1,f,c
 13021  01602C  006F FF9C  F014    	movff	indf1,btemp+19
 13022  016032  52E5               	movf	postdec1,f,c
 13023  016034  006F FF9C  F013    	movff	indf1,btemp+18
 13024  01603A  52E5               	movf	postdec1,f,c
 13025  01603C  006F FF9C  F012    	movff	indf1,btemp+17
 13026  016042  52E5               	movf	postdec1,f,c
 13027  016044  006F FF9C  F011    	movff	indf1,btemp+16
 13028  01604A  0EF8               	movlw	248
 13029  01604C  26E1               	addwf	fsr1l,f,c
 13030  01604E  0EFF               	movlw	255
 13031  016050  22E2               	addwfc	fsr1h,f,c
 13032                           
 13033                           ;stkvar	_n @ sp[(-14)+0]
 13034  016052  0EF2               	movlw	-14
 13035  016054  0060  F047  FFE3   	movff	btemp+16,plusw1
 13036  01605A  0EF3               	movlw	-13
 13037  01605C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13038  016062  0EF4               	movlw	-12
 13039  016064  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13040  01606A  0EF5               	movlw	-11
 13041  01606C  0060  F053  FFE3   	movff	btemp+19,plusw1
 13042  016072  0EF6               	movlw	-10
 13043  016074  0060  F057  FFE3   	movff	btemp+20,plusw1
 13044  01607A  0EF7               	movlw	-9
 13045  01607C  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13046  016082  0EF8               	movlw	-8
 13047  016084  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13048  01608A  0EF9               	movlw	-7
 13049  01608C  0060  F063  FFE3   	movff	btemp+23,plusw1
 13050  016092                     l11688:
 13051                           
 13052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13053                           ;stkvar	_i @ sp[(-14)+8]
 13054  016092  0EFA               	movlw	-6
 13055  016094  006F FF8C  F001    	movff	plusw1,btemp
 13056  01609A  0EFB               	movlw	-5
 13057  01609C  50E3               	movf	plusw1,w,c
 13058  01609E  1001               	iorwf	btemp^0,w,c
 13059  0160A0  B4D8               	btfsc	status,2,c
 13060  0160A2  D02F               	goto	u11110
 13061                           
 13062                           ;stkvar	_n @ sp[(-14)+0]
 13063  0160A4  0EF2               	movlw	-14
 13064  0160A6  50E3               	movf	plusw1,w,c
 13065  0160A8  E115               	bnz	u11081
 13066  0160AA  0EF3               	movlw	-13
 13067  0160AC  50E3               	movf	plusw1,w,c
 13068  0160AE  E112               	bnz	u11081
 13069  0160B0  0EF4               	movlw	-12
 13070  0160B2  50E3               	movf	plusw1,w,c
 13071  0160B4  E10F               	bnz	u11081
 13072  0160B6  0EF5               	movlw	-11
 13073  0160B8  50E3               	movf	plusw1,w,c
 13074  0160BA  E10C               	bnz	u11081
 13075  0160BC  0EF6               	movlw	-10
 13076  0160BE  50E3               	movf	plusw1,w,c
 13077  0160C0  E109               	bnz	u11081
 13078  0160C2  0EF7               	movlw	-9
 13079  0160C4  50E3               	movf	plusw1,w,c
 13080  0160C6  E106               	bnz	u11081
 13081  0160C8  0EF8               	movlw	-8
 13082  0160CA  50E3               	movf	plusw1,w,c
 13083  0160CC  E103               	bnz	u11081
 13084  0160CE  0EF9               	movlw	-7
 13085  0160D0  50E3               	movf	plusw1,w,c
 13086  0160D2  A4D8               	btfss	status,2,c
 13087  0160D4                     u11081:
 13088  0160D4  D6E3               	goto	l11678
 13089                           
 13090                           ;stkvar	_p @ sp[(-14)+12]
 13091  0160D6  0EFF               	movlw	-1
 13092  0160D8  BEE3               	btfsc	plusw1,7,c
 13093  0160DA  D007               	goto	u11090
 13094  0160DC  0EFF               	movlw	-1
 13095  0160DE  50E3               	movf	plusw1,w,c
 13096  0160E0  E103               	bnz	u11091
 13097  0160E2  0EFE               	movlw	-2
 13098  0160E4  04E3               	decf	plusw1,w,c
 13099  0160E6  B0D8               	btfsc	status,0,c
 13100  0160E8                     u11091:
 13101  0160E8  D6D9               	goto	l11678
 13102  0160EA                     u11090:
 13103                           
 13104                           ;stkvar	_w @ sp[(-14)+10]
 13105  0160EA  0EFD               	movlw	-3
 13106  0160EC  BEE3               	btfsc	plusw1,7,c
 13107  0160EE  D009               	goto	u11110
 13108  0160F0  0EFD               	movlw	-3
 13109  0160F2  50E3               	movf	plusw1,w,c
 13110  0160F4  E104               	bnz	u11100
 13111  0160F6  0EFC               	movlw	-4
 13112  0160F8  04E3               	decf	plusw1,w,c
 13113  0160FA  A0D8               	btfss	status,0,c
 13114  0160FC  D002               	goto	u11110
 13115  0160FE                     u11100:
 13116  0160FE  B225               	btfsc	_flags^0,1,c
 13117  016100  D6CD               	goto	l11678
 13118  016102                     u11110:
 13119                           
 13120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13121                           ;stkvar	_w @ sp[(-14)+10]
 13122  016102  0EFC               	movlw	-4
 13123  016104  006F FF8F FFE6     	movff	plusw1,postinc1
 13124  01610A  006F FF8F FFE6     	movff	plusw1,postinc1
 13125                           
 13126                           ;stkvar	_i @ sp[(-16)+8]
 13127  016110  0E94               	movlw	low _dbuf
 13128  016112  6E0B               	movwf	(btemp+10)^0,c
 13129  016114  0E03               	movlw	high _dbuf
 13130  016116  6E0C               	movwf	(btemp+11)^0,c
 13131  016118  0EF8               	movlw	-8
 13132  01611A  50E3               	movf	plusw1,w,c
 13133  01611C  260B               	addwf	(btemp+10)^0,f,c
 13134  01611E  0EF9               	movlw	-7
 13135  016120  50E3               	movf	plusw1,w,c
 13136  016122  220C               	addwfc	(btemp+11)^0,f,c
 13137  016124  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13138  01612A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13139                           
 13140                           ;stkvar	_fp @ sp[(-18)+-2]
 13141  016130  0EEC               	movlw	-20
 13142  016132  006F FF8F FFE6     	movff	plusw1,postinc1
 13143  016138  006F FF8F FFE6     	movff	plusw1,postinc1
 13144  01613E  ECB3  F0C5         	call	_pad	;wreg free
 13145                           
 13146                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13147  016142  0EE8               	movlw	232
 13148  016144  26E1               	addwf	fsr1l,f,c
 13149  016146  0EFF               	movlw	255
 13150  016148  22E2               	addwfc	fsr1h,f,c
 13151  01614A  0012               	return		;funcret
 13152  01614C                     __end_of_utoa:
 13153                           	opt callstack 0
 13154                           
 13155 ;; *************** function ___lomod *****************
 13156 ;; Defined at:
 13157 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;  dividend        8  [STACK] unsigned long long 
 13160 ;;  divisor         8  [STACK] unsigned long long 
 13161 ;; Auto vars:     Size  Location     Type
 13162 ;;  counter         1  [STACK] unsigned char 
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  8  [STACK] unsigned long long 
 13165 ;; Registers used:
 13166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/3
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13176 ;;Total ram usage:        0 bytes
 13177 ;; Hardware stack levels used:    1
 13178 ;; Hardware stack levels required when called:   15
 13179 ;; This function calls:
 13180 ;;		Nothing
 13181 ;; This function is called by:
 13182 ;;		_utoa
 13183 ;; This function uses a reentrant model
 13184 ;;
 13185                           
 13186                           	psect	text51
 13187  018580                     __ptext51:
 13188                           	opt callstack 0
 13189  018580                     ___lomod:
 13190                           	opt callstack 0
 13191                           
 13192                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13193  018580  52E6               	movf	postinc1,f,c
 13194                           
 13195                           ;stkvar	_divisor @ sp[(-1)+-16]
 13196                           
 13197                           ;incstack = 0
 13198 ;; hardware stack exceeded
 13199  018582  0EEF               	movlw	-17
 13200  018584  50E3               	movf	plusw1,w,c
 13201  018586  E116               	bnz	u7000
 13202  018588  0EF0               	movlw	-16
 13203  01858A  50E3               	movf	plusw1,w,c
 13204  01858C  E113               	bnz	u7000
 13205  01858E  0EF1               	movlw	-15
 13206  018590  50E3               	movf	plusw1,w,c
 13207  018592  E110               	bnz	u7000
 13208  018594  0EF2               	movlw	-14
 13209  018596  50E3               	movf	plusw1,w,c
 13210  018598  E10D               	bnz	u7000
 13211  01859A  0EF3               	movlw	-13
 13212  01859C  50E3               	movf	plusw1,w,c
 13213  01859E  E10A               	bnz	u7000
 13214  0185A0  0EF4               	movlw	-12
 13215  0185A2  50E3               	movf	plusw1,w,c
 13216  0185A4  E107               	bnz	u7000
 13217  0185A6  0EF5               	movlw	-11
 13218  0185A8  50E3               	movf	plusw1,w,c
 13219  0185AA  E104               	bnz	u7000
 13220  0185AC  0EF6               	movlw	-10
 13221  0185AE  50E3               	movf	plusw1,w,c
 13222  0185B0  B4D8               	btfsc	status,2,c
 13223  0185B2  D075               	goto	u7030
 13224  0185B4                     u7000:
 13225                           
 13226                           ;stkvar	_counter @ sp[(-1)+0]
 13227  0185B4  0EFF               	movlw	-1
 13228  0185B6  6AE3               	clrf	plusw1,c
 13229  0185B8  D012               	goto	L9
 13230  0185BA                     l8290:
 13231                           
 13232                           ;stkvar	_divisor @ sp[(-1)+-16]
 13233  0185BA  90D8               	bcf	status,0,c
 13234  0185BC  0EEF               	movlw	-17
 13235  0185BE  36E3               	rlcf	plusw1,f,c
 13236  0185C0  0EF0               	movlw	-16
 13237  0185C2  36E3               	rlcf	plusw1,f,c
 13238  0185C4  0EF1               	movlw	-15
 13239  0185C6  36E3               	rlcf	plusw1,f,c
 13240  0185C8  0EF2               	movlw	-14
 13241  0185CA  36E3               	rlcf	plusw1,f,c
 13242  0185CC  0EF3               	movlw	-13
 13243  0185CE  36E3               	rlcf	plusw1,f,c
 13244  0185D0  0EF4               	movlw	-12
 13245  0185D2  36E3               	rlcf	plusw1,f,c
 13246  0185D4  0EF5               	movlw	-11
 13247  0185D6  36E3               	rlcf	plusw1,f,c
 13248  0185D8  0EF6               	movlw	-10
 13249  0185DA  36E3               	rlcf	plusw1,f,c
 13250                           
 13251                           ;stkvar	_counter @ sp[(-1)+0]
 13252  0185DC  0EFF               	movlw	-1
 13253  0185DE                     L9:
 13254  0185DE  2AE3               	incf	plusw1,f,c
 13255                           
 13256                           ;stkvar	_divisor @ sp[(-1)+-16]
 13257  0185E0  0EF6               	movlw	-10
 13258  0185E2  AEE3               	btfss	plusw1,7,c
 13259  0185E4  D7EA               	goto	l8290
 13260  0185E6                     u7010:
 13261                           
 13262                           ;stkvar	_divisor @ sp[(-1)+-16]
 13263                           ;stkvar	_dividend @ sp[(-1)+-8]
 13264  0185E6  50E1               	movf	fsr1l,w,c
 13265  0185E8  0FF7               	addlw	-9
 13266  0185EA  6ED9               	movwf	fsr2l,c
 13267  0185EC  50E2               	movf	fsr1h,w,c
 13268  0185EE  6EDA               	movwf	fsr2h,c
 13269  0185F0  0EFF               	movlw	255
 13270  0185F2  22DA               	addwfc	fsr2h,f,c
 13271  0185F4  0EEF               	movlw	-17
 13272  0185F6  50E3               	movf	plusw1,w,c
 13273  0185F8  5CDE               	subwf	postinc2,w,c
 13274  0185FA  0EF0               	movlw	-16
 13275  0185FC  50E3               	movf	plusw1,w,c
 13276  0185FE  58DE               	subwfb	postinc2,w,c
 13277  018600  0EF1               	movlw	-15
 13278  018602  50E3               	movf	plusw1,w,c
 13279  018604  58DE               	subwfb	postinc2,w,c
 13280  018606  0EF2               	movlw	-14
 13281  018608  50E3               	movf	plusw1,w,c
 13282  01860A  58DE               	subwfb	postinc2,w,c
 13283  01860C  0EF3               	movlw	-13
 13284  01860E  50E3               	movf	plusw1,w,c
 13285  018610  58DE               	subwfb	postinc2,w,c
 13286  018612  0EF4               	movlw	-12
 13287  018614  50E3               	movf	plusw1,w,c
 13288  018616  58DE               	subwfb	postinc2,w,c
 13289  018618  0EF5               	movlw	-11
 13290  01861A  50E3               	movf	plusw1,w,c
 13291  01861C  58DE               	subwfb	postinc2,w,c
 13292  01861E  0EF6               	movlw	-10
 13293  018620  50E3               	movf	plusw1,w,c
 13294  018622  58DE               	subwfb	postinc2,w,c
 13295  018624  A0D8               	btfss	status,0,c
 13296  018626  D01F               	goto	l8298
 13297                           
 13298                           ;stkvar	_divisor @ sp[(-1)+-16]
 13299                           ;stkvar	_dividend @ sp[(-1)+-8]
 13300  018628  50E1               	movf	fsr1l,w,c
 13301  01862A  0FF7               	addlw	-9
 13302  01862C  6ED9               	movwf	fsr2l,c
 13303  01862E  50E2               	movf	fsr1h,w,c
 13304  018630  6EDA               	movwf	fsr2h,c
 13305  018632  0EFF               	movlw	255
 13306  018634  22DA               	addwfc	fsr2h,f,c
 13307  018636  0EEF               	movlw	-17
 13308  018638  50E3               	movf	plusw1,w,c
 13309  01863A  5EDE               	subwf	postinc2,f,c
 13310  01863C  0EF0               	movlw	-16
 13311  01863E  50E3               	movf	plusw1,w,c
 13312  018640  5ADE               	subwfb	postinc2,f,c
 13313  018642  0EF1               	movlw	-15
 13314  018644  50E3               	movf	plusw1,w,c
 13315  018646  5ADE               	subwfb	postinc2,f,c
 13316  018648  0EF2               	movlw	-14
 13317  01864A  50E3               	movf	plusw1,w,c
 13318  01864C  5ADE               	subwfb	postinc2,f,c
 13319  01864E  0EF3               	movlw	-13
 13320  018650  50E3               	movf	plusw1,w,c
 13321  018652  5ADE               	subwfb	postinc2,f,c
 13322  018654  0EF4               	movlw	-12
 13323  018656  50E3               	movf	plusw1,w,c
 13324  018658  5ADE               	subwfb	postinc2,f,c
 13325  01865A  0EF5               	movlw	-11
 13326  01865C  50E3               	movf	plusw1,w,c
 13327  01865E  5ADE               	subwfb	postinc2,f,c
 13328  018660  0EF6               	movlw	-10
 13329  018662  50E3               	movf	plusw1,w,c
 13330  018664  5ADE               	subwfb	postinc2,f,c
 13331  018666                     l8298:
 13332                           
 13333                           ;stkvar	_divisor @ sp[(-1)+-16]
 13334  018666  90D8               	bcf	status,0,c
 13335  018668  0EF6               	movlw	-10
 13336  01866A  32E3               	rrcf	plusw1,f,c
 13337  01866C  0EF5               	movlw	-11
 13338  01866E  32E3               	rrcf	plusw1,f,c
 13339  018670  0EF4               	movlw	-12
 13340  018672  32E3               	rrcf	plusw1,f,c
 13341  018674  0EF3               	movlw	-13
 13342  018676  32E3               	rrcf	plusw1,f,c
 13343  018678  0EF2               	movlw	-14
 13344  01867A  32E3               	rrcf	plusw1,f,c
 13345  01867C  0EF1               	movlw	-15
 13346  01867E  32E3               	rrcf	plusw1,f,c
 13347  018680  0EF0               	movlw	-16
 13348  018682  32E3               	rrcf	plusw1,f,c
 13349  018684  0EEF               	movlw	-17
 13350  018686  32E3               	rrcf	plusw1,f,c
 13351                           
 13352                           ;stkvar	_counter @ sp[(-1)+0]
 13353  018688  0EFF               	movlw	-1
 13354  01868A  50E3               	movf	plusw1,w,c
 13355  01868C  6E01               	movwf	btemp^0,c
 13356  01868E  0E01               	movlw	1
 13357  018690  5E01               	subwf	btemp^0,f,c
 13358  018692  0EFF               	movlw	-1
 13359  018694  0060  F007  FFE3   	movff	btemp,plusw1
 13360  01869A  A4D8               	btfss	status,2,c
 13361  01869C  D7A4               	goto	u7010
 13362  01869E                     u7030:
 13363                           
 13364                           ;stkvar	_dividend @ sp[(-1)+-8]
 13365  01869E  0EF7               	movlw	247
 13366  0186A0  24E1               	addwf	fsr1l,w,c
 13367  0186A2  6ED9               	movwf	fsr2l,c
 13368  0186A4  0EFF               	movlw	255
 13369  0186A6  20E2               	addwfc	fsr1h,w,c
 13370  0186A8  6EDA               	movwf	fsr2h,c
 13371                           
 13372                           ;stkvar	?___lomod @ sp[(-1)+-8]
 13373  0186AA  0E08               	movlw	8
 13374  0186AC  6E01               	movwf	btemp^0,c
 13375  0186AE  0EF7               	movlw	-9
 13376  0186B0                     us704999:
 13377  0186B0  006F FF7B FFE3     	movff	postinc2,plusw1
 13378  0186B6  28E8               	incf	wreg,w,c
 13379  0186B8  2E01               	decfsz	btemp^0,f,c
 13380  0186BA  D7FA               	bra	us704999
 13381                           
 13382                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13383  0186BC  52E5               	movf	postdec1,f,c
 13384  0186BE  0012               	return		;funcret
 13385  0186C0                     __end_of___lomod:
 13386                           	opt callstack 0
 13387                           
 13388 ;; *************** function ___lodiv *****************
 13389 ;; Defined at:
 13390 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;  dividend        8  [STACK] unsigned long long 
 13393 ;;  divisor         8  [STACK] unsigned long long 
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;  quotient        8  [STACK] unsigned long long 
 13396 ;;  counter         1  [STACK] unsigned char 
 13397 ;; Return value:  Size  Location     Type
 13398 ;;                  8  [STACK] unsigned long long 
 13399 ;; Registers used:
 13400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13401 ;; Tracked objects:
 13402 ;;		On entry : 0/3
 13403 ;;		On exit  : 0/0
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13410 ;;Total ram usage:        0 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; Hardware stack levels required when called:   15
 13413 ;; This function calls:
 13414 ;;		Nothing
 13415 ;; This function is called by:
 13416 ;;		_utoa
 13417 ;; This function uses a reentrant model
 13418 ;;
 13419                           
 13420                           	psect	text52
 13421  017B98                     __ptext52:
 13422                           	opt callstack 0
 13423  017B98                     ___lodiv:
 13424                           	opt callstack 0
 13425                           
 13426                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13427  017B98  0E09               	movlw	9
 13428  017B9A  26E1               	addwf	fsr1l,f,c
 13429  017B9C  0E00               	movlw	0
 13430  017B9E  22E2               	addwfc	fsr1h,f,c
 13431                           
 13432                           ;stkvar	_quotient @ sp[(-9)+0]
 13433                           
 13434                           ;incstack = 0
 13435 ;; hardware stack exceeded
 13436  017BA0  0E07               	movlw	7
 13437  017BA2  6E01               	movwf	btemp^0,c
 13438  017BA4  0EF7               	movlw	-9
 13439  017BA6                     u6941:
 13440  017BA6  6AE3               	clrf	plusw1,c
 13441  017BA8  2AE8               	incf	wreg,f,c
 13442  017BAA  0601               	decf	btemp^0,f,c
 13443  017BAC  E2FC               	bc	u6941
 13444                           
 13445                           ;stkvar	_divisor @ sp[(-9)+-16]
 13446  017BAE  0EE7               	movlw	-25
 13447  017BB0  50E3               	movf	plusw1,w,c
 13448  017BB2  E116               	bnz	u6950
 13449  017BB4  0EE8               	movlw	-24
 13450  017BB6  50E3               	movf	plusw1,w,c
 13451  017BB8  E113               	bnz	u6950
 13452  017BBA  0EE9               	movlw	-23
 13453  017BBC  50E3               	movf	plusw1,w,c
 13454  017BBE  E110               	bnz	u6950
 13455  017BC0  0EEA               	movlw	-22
 13456  017BC2  50E3               	movf	plusw1,w,c
 13457  017BC4  E10D               	bnz	u6950
 13458  017BC6  0EEB               	movlw	-21
 13459  017BC8  50E3               	movf	plusw1,w,c
 13460  017BCA  E10A               	bnz	u6950
 13461  017BCC  0EEC               	movlw	-20
 13462  017BCE  50E3               	movf	plusw1,w,c
 13463  017BD0  E107               	bnz	u6950
 13464  017BD2  0EED               	movlw	-19
 13465  017BD4  50E3               	movf	plusw1,w,c
 13466  017BD6  E104               	bnz	u6950
 13467  017BD8  0EEE               	movlw	-18
 13468  017BDA  50E3               	movf	plusw1,w,c
 13469  017BDC  B4D8               	btfsc	status,2,c
 13470  017BDE  D088               	goto	u6980
 13471  017BE0                     u6950:
 13472                           
 13473                           ;stkvar	_counter @ sp[(-9)+8]
 13474  017BE0  0EFF               	movlw	-1
 13475  017BE2  6AE3               	clrf	plusw1,c
 13476  017BE4  D012               	goto	L10
 13477  017BE6                     l8266:
 13478                           
 13479                           ;stkvar	_divisor @ sp[(-9)+-16]
 13480  017BE6  90D8               	bcf	status,0,c
 13481  017BE8  0EE7               	movlw	-25
 13482  017BEA  36E3               	rlcf	plusw1,f,c
 13483  017BEC  0EE8               	movlw	-24
 13484  017BEE  36E3               	rlcf	plusw1,f,c
 13485  017BF0  0EE9               	movlw	-23
 13486  017BF2  36E3               	rlcf	plusw1,f,c
 13487  017BF4  0EEA               	movlw	-22
 13488  017BF6  36E3               	rlcf	plusw1,f,c
 13489  017BF8  0EEB               	movlw	-21
 13490  017BFA  36E3               	rlcf	plusw1,f,c
 13491  017BFC  0EEC               	movlw	-20
 13492  017BFE  36E3               	rlcf	plusw1,f,c
 13493  017C00  0EED               	movlw	-19
 13494  017C02  36E3               	rlcf	plusw1,f,c
 13495  017C04  0EEE               	movlw	-18
 13496  017C06  36E3               	rlcf	plusw1,f,c
 13497                           
 13498                           ;stkvar	_counter @ sp[(-9)+8]
 13499  017C08  0EFF               	movlw	-1
 13500  017C0A                     L10:
 13501  017C0A  2AE3               	incf	plusw1,f,c
 13502                           
 13503                           ;stkvar	_divisor @ sp[(-9)+-16]
 13504  017C0C  0EEE               	movlw	-18
 13505  017C0E  AEE3               	btfss	plusw1,7,c
 13506  017C10  D7EA               	goto	l8266
 13507  017C12                     u6960:
 13508                           
 13509                           ;stkvar	_quotient @ sp[(-9)+0]
 13510  017C12  90D8               	bcf	status,0,c
 13511  017C14  0EF7               	movlw	-9
 13512  017C16  36E3               	rlcf	plusw1,f,c
 13513  017C18  0EF8               	movlw	-8
 13514  017C1A  36E3               	rlcf	plusw1,f,c
 13515  017C1C  0EF9               	movlw	-7
 13516  017C1E  36E3               	rlcf	plusw1,f,c
 13517  017C20  0EFA               	movlw	-6
 13518  017C22  36E3               	rlcf	plusw1,f,c
 13519  017C24  0EFB               	movlw	-5
 13520  017C26  36E3               	rlcf	plusw1,f,c
 13521  017C28  0EFC               	movlw	-4
 13522  017C2A  36E3               	rlcf	plusw1,f,c
 13523  017C2C  0EFD               	movlw	-3
 13524  017C2E  36E3               	rlcf	plusw1,f,c
 13525  017C30  0EFE               	movlw	-2
 13526  017C32  36E3               	rlcf	plusw1,f,c
 13527                           
 13528                           ;stkvar	_divisor @ sp[(-9)+-16]
 13529                           ;stkvar	_dividend @ sp[(-9)+-8]
 13530  017C34  50E1               	movf	fsr1l,w,c
 13531  017C36  0FEF               	addlw	-17
 13532  017C38  6ED9               	movwf	fsr2l,c
 13533  017C3A  50E2               	movf	fsr1h,w,c
 13534  017C3C  6EDA               	movwf	fsr2h,c
 13535  017C3E  0EFF               	movlw	255
 13536  017C40  22DA               	addwfc	fsr2h,f,c
 13537  017C42  0EE7               	movlw	-25
 13538  017C44  50E3               	movf	plusw1,w,c
 13539  017C46  5CDE               	subwf	postinc2,w,c
 13540  017C48  0EE8               	movlw	-24
 13541  017C4A  50E3               	movf	plusw1,w,c
 13542  017C4C  58DE               	subwfb	postinc2,w,c
 13543  017C4E  0EE9               	movlw	-23
 13544  017C50  50E3               	movf	plusw1,w,c
 13545  017C52  58DE               	subwfb	postinc2,w,c
 13546  017C54  0EEA               	movlw	-22
 13547  017C56  50E3               	movf	plusw1,w,c
 13548  017C58  58DE               	subwfb	postinc2,w,c
 13549  017C5A  0EEB               	movlw	-21
 13550  017C5C  50E3               	movf	plusw1,w,c
 13551  017C5E  58DE               	subwfb	postinc2,w,c
 13552  017C60  0EEC               	movlw	-20
 13553  017C62  50E3               	movf	plusw1,w,c
 13554  017C64  58DE               	subwfb	postinc2,w,c
 13555  017C66  0EED               	movlw	-19
 13556  017C68  50E3               	movf	plusw1,w,c
 13557  017C6A  58DE               	subwfb	postinc2,w,c
 13558  017C6C  0EEE               	movlw	-18
 13559  017C6E  50E3               	movf	plusw1,w,c
 13560  017C70  58DE               	subwfb	postinc2,w,c
 13561  017C72  A0D8               	btfss	status,0,c
 13562  017C74  D021               	goto	l8278
 13563                           
 13564                           ;stkvar	_divisor @ sp[(-9)+-16]
 13565                           ;stkvar	_dividend @ sp[(-9)+-8]
 13566  017C76  50E1               	movf	fsr1l,w,c
 13567  017C78  0FEF               	addlw	-17
 13568  017C7A  6ED9               	movwf	fsr2l,c
 13569  017C7C  50E2               	movf	fsr1h,w,c
 13570  017C7E  6EDA               	movwf	fsr2h,c
 13571  017C80  0EFF               	movlw	255
 13572  017C82  22DA               	addwfc	fsr2h,f,c
 13573  017C84  0EE7               	movlw	-25
 13574  017C86  50E3               	movf	plusw1,w,c
 13575  017C88  5EDE               	subwf	postinc2,f,c
 13576  017C8A  0EE8               	movlw	-24
 13577  017C8C  50E3               	movf	plusw1,w,c
 13578  017C8E  5ADE               	subwfb	postinc2,f,c
 13579  017C90  0EE9               	movlw	-23
 13580  017C92  50E3               	movf	plusw1,w,c
 13581  017C94  5ADE               	subwfb	postinc2,f,c
 13582  017C96  0EEA               	movlw	-22
 13583  017C98  50E3               	movf	plusw1,w,c
 13584  017C9A  5ADE               	subwfb	postinc2,f,c
 13585  017C9C  0EEB               	movlw	-21
 13586  017C9E  50E3               	movf	plusw1,w,c
 13587  017CA0  5ADE               	subwfb	postinc2,f,c
 13588  017CA2  0EEC               	movlw	-20
 13589  017CA4  50E3               	movf	plusw1,w,c
 13590  017CA6  5ADE               	subwfb	postinc2,f,c
 13591  017CA8  0EED               	movlw	-19
 13592  017CAA  50E3               	movf	plusw1,w,c
 13593  017CAC  5ADE               	subwfb	postinc2,f,c
 13594  017CAE  0EEE               	movlw	-18
 13595  017CB0  50E3               	movf	plusw1,w,c
 13596  017CB2  5ADE               	subwfb	postinc2,f,c
 13597                           
 13598                           ;stkvar	_quotient @ sp[(-9)+0]
 13599  017CB4  0EF7               	movlw	-9
 13600  017CB6  80E3               	bsf	plusw1,0,c
 13601  017CB8                     l8278:
 13602                           
 13603                           ;stkvar	_divisor @ sp[(-9)+-16]
 13604  017CB8  90D8               	bcf	status,0,c
 13605  017CBA  0EEE               	movlw	-18
 13606  017CBC  32E3               	rrcf	plusw1,f,c
 13607  017CBE  0EED               	movlw	-19
 13608  017CC0  32E3               	rrcf	plusw1,f,c
 13609  017CC2  0EEC               	movlw	-20
 13610  017CC4  32E3               	rrcf	plusw1,f,c
 13611  017CC6  0EEB               	movlw	-21
 13612  017CC8  32E3               	rrcf	plusw1,f,c
 13613  017CCA  0EEA               	movlw	-22
 13614  017CCC  32E3               	rrcf	plusw1,f,c
 13615  017CCE  0EE9               	movlw	-23
 13616  017CD0  32E3               	rrcf	plusw1,f,c
 13617  017CD2  0EE8               	movlw	-24
 13618  017CD4  32E3               	rrcf	plusw1,f,c
 13619  017CD6  0EE7               	movlw	-25
 13620  017CD8  32E3               	rrcf	plusw1,f,c
 13621                           
 13622                           ;stkvar	_counter @ sp[(-9)+8]
 13623  017CDA  0EFF               	movlw	-1
 13624  017CDC  50E3               	movf	plusw1,w,c
 13625  017CDE  6E01               	movwf	btemp^0,c
 13626  017CE0  0E01               	movlw	1
 13627  017CE2  5E01               	subwf	btemp^0,f,c
 13628  017CE4  0EFF               	movlw	-1
 13629  017CE6  0060  F007  FFE3   	movff	btemp,plusw1
 13630  017CEC  A4D8               	btfss	status,2,c
 13631  017CEE  D791               	goto	u6960
 13632  017CF0                     u6980:
 13633                           
 13634                           ;stkvar	_quotient @ sp[(-9)+0]
 13635  017CF0  0EF7               	movlw	247
 13636  017CF2  24E1               	addwf	fsr1l,w,c
 13637  017CF4  6ED9               	movwf	fsr2l,c
 13638  017CF6  0EFF               	movlw	255
 13639  017CF8  20E2               	addwfc	fsr1h,w,c
 13640  017CFA  6EDA               	movwf	fsr2h,c
 13641                           
 13642                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 13643  017CFC  0E08               	movlw	8
 13644  017CFE  6E01               	movwf	btemp^0,c
 13645  017D00  0EEF               	movlw	-17
 13646  017D02                     us699999:
 13647  017D02  006F FF7B FFE3     	movff	postinc2,plusw1
 13648  017D08  28E8               	incf	wreg,w,c
 13649  017D0A  2E01               	decfsz	btemp^0,f,c
 13650  017D0C  D7FA               	bra	us699999
 13651                           
 13652                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13653  017D0E  0EF7               	movlw	247
 13654  017D10  26E1               	addwf	fsr1l,f,c
 13655  017D12  0EFF               	movlw	255
 13656  017D14  22E2               	addwfc	fsr1h,f,c
 13657  017D16  0012               	return		;funcret
 13658  017D18                     __end_of___lodiv:
 13659                           	opt callstack 0
 13660                           
 13661 ;; *************** function _strncmp *****************
 13662 ;; Defined at:
 13663 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;  _l              2  [STACK] PTR const unsigned char 
 13666 ;;		 -> ct(3), STR_55(85), STR_53(3), STR_52(3), 
 13667 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 13668 ;;		 -> STR_47(19), STR_46(19), STR_45(24), STR_44(15), 
 13669 ;;		 -> STR_43(15), STR_42(15), STR_41(10), STR_40(10), 
 13670 ;;		 -> STR_39(19), STR_38(19), STR_35(3), STR_34(3), 
 13671 ;;		 -> STR_33(3), STR_32(17), STR_31(16), STR_30(16), 
 13672 ;;		 -> STR_29(20), STR_28(20), STR_27(19), STR_26(19), 
 13673 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 13674 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
 13675 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
 13676 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 13677 ;;		 -> STR_9(26), STR_8(18), STR_7(17), STR_6(17), 
 13678 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 13679 ;;  _r              2  [STACK] PTR const unsigned char 
 13680 ;;		 -> STR_89(3), STR_85(3), STR_80(3), STR_75(3), 
 13681 ;;		 -> STR_70(3), STR_66(3), 
 13682 ;;  n               2  [STACK] unsigned int 
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;  r               2  [STACK] PTR const unsigned char 
 13685 ;;		 -> STR_89(3), STR_85(3), STR_80(3), STR_75(3), 
 13686 ;;		 -> STR_70(3), STR_66(3), 
 13687 ;;  l               2  [STACK] PTR const unsigned char 
 13688 ;;		 -> ct(3), STR_55(85), STR_53(3), STR_52(3), 
 13689 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 13690 ;;		 -> STR_47(19), STR_46(19), STR_45(24), STR_44(15), 
 13691 ;;		 -> STR_43(15), STR_42(15), STR_41(10), STR_40(10), 
 13692 ;;		 -> STR_39(19), STR_38(19), STR_35(3), STR_34(3), 
 13693 ;;		 -> STR_33(3), STR_32(17), STR_31(16), STR_30(16), 
 13694 ;;		 -> STR_29(20), STR_28(20), STR_27(19), STR_26(19), 
 13695 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 13696 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
 13697 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
 13698 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 13699 ;;		 -> STR_9(26), STR_8(18), STR_7(17), STR_6(17), 
 13700 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 13701 ;; Return value:  Size  Location     Type
 13702 ;;                  2  [STACK] int 
 13703 ;; Registers used:
 13704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 13705 ;; Tracked objects:
 13706 ;;		On entry : 0/0
 13707 ;;		On exit  : 0/0
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;Total ram usage:        0 bytes
 13715 ;; Hardware stack levels used:    1
 13716 ;; Hardware stack levels required when called:   15
 13717 ;; This function calls:
 13718 ;;		Nothing
 13719 ;; This function is called by:
 13720 ;;		_vfpfcnvrt
 13721 ;; This function uses a reentrant model
 13722 ;;
 13723                           
 13724                           	psect	text53
 13725  016E2A                     __ptext53:
 13726                           	opt callstack 0
 13727  016E2A                     _strncmp:
 13728                           	opt callstack 0
 13729                           
 13730                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13731  016E2A  52E6               	movf	postinc1,f,c
 13732  016E2C  52E6               	movf	postinc1,f,c
 13733  016E2E  52E6               	movf	postinc1,f,c
 13734  016E30  52E6               	movf	postinc1,f,c
 13735                           
 13736                           ;stkvar	__l @ sp[(-4)+-2]
 13737                           
 13738                           ;incstack = 0
 13739 ;; hardware stack exceeded
 13740  016E32  0EFA               	movlw	-6
 13741  016E34  006F FF8C  F00B    	movff	plusw1,btemp+10
 13742  016E3A  0EFB               	movlw	-5
 13743  016E3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13744                           
 13745                           ;stkvar	_l @ sp[(-4)+2]
 13746  016E42  0EFF               	movlw	-1
 13747  016E44  0060  F033  FFE3   	movff	btemp+11,plusw1
 13748  016E4A  0EFE               	movlw	-2
 13749  016E4C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13750                           
 13751                           ;stkvar	__r @ sp[(-4)+-4]
 13752  016E52  0EF8               	movlw	-8
 13753  016E54  006F FF8C  F00B    	movff	plusw1,btemp+10
 13754  016E5A  0EF9               	movlw	-7
 13755  016E5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13756                           
 13757                           ;stkvar	_r @ sp[(-4)+0]
 13758  016E62  0EFD               	movlw	-3
 13759  016E64  0060  F033  FFE3   	movff	btemp+11,plusw1
 13760  016E6A  0EFC               	movlw	-4
 13761  016E6C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13762                           
 13763                           ;stkvar	_n @ sp[(-4)+-6]
 13764  016E72  0EF6               	movlw	-10
 13765  016E74  006F FF8C  F001    	movff	plusw1,btemp
 13766  016E7A  0E01               	movlw	1
 13767  016E7C  5E01               	subwf	btemp^0,f,c
 13768  016E7E  0EF6               	movlw	-10
 13769  016E80  0060  F007  FFE3   	movff	btemp,plusw1
 13770  016E86  0EF7               	movlw	-9
 13771  016E88  006F FF8C  F001    	movff	plusw1,btemp
 13772  016E8E  0E00               	movlw	0
 13773  016E90  5A01               	subwfb	btemp^0,f,c
 13774  016E92  0EF7               	movlw	-9
 13775  016E94  0060  F007  FFE3   	movff	btemp,plusw1
 13776  016E9A  0EF6               	movlw	-10
 13777  016E9C  28E3               	incf	plusw1,w,c
 13778  016E9E  E13F               	bnz	l8974
 13779  016EA0  0EF7               	movlw	-9
 13780  016EA2  28E3               	incf	plusw1,w,c
 13781  016EA4  A4D8               	btfss	status,2,c
 13782  016EA6  D03B               	goto	l8974
 13783  016EA8  0E00               	movlw	0
 13784  016EAA  6E01               	movwf	btemp^0,c
 13785  016EAC  0E00               	movlw	0
 13786  016EAE  6E02               	movwf	(btemp+1)^0,c
 13787  016EB0  D0C7               	goto	l3391
 13788  016EB2                     l8972:
 13789                           
 13790                           ;stkvar	_l @ sp[(-4)+2]
 13791  016EB2  0EFE               	movlw	-2
 13792  016EB4  50E3               	movf	plusw1,w,c
 13793  016EB6  0F01               	addlw	1
 13794  016EB8  6E01               	movwf	btemp^0,c
 13795  016EBA  0EFE               	movlw	-2
 13796  016EBC  0060  F007  FFE3   	movff	btemp,plusw1
 13797  016EC2  6A01               	clrf	btemp^0,c
 13798  016EC4  0EFF               	movlw	-1
 13799  016EC6  50E3               	movf	plusw1,w,c
 13800  016EC8  2001               	addwfc	btemp^0,w,c
 13801  016ECA  6E01               	movwf	btemp^0,c
 13802  016ECC  0EFF               	movlw	-1
 13803  016ECE  0060  F007  FFE3   	movff	btemp,plusw1
 13804                           
 13805                           ;stkvar	_r @ sp[(-4)+0]
 13806  016ED4  0EFC               	movlw	-4
 13807  016ED6  50E3               	movf	plusw1,w,c
 13808  016ED8  0F01               	addlw	1
 13809  016EDA  6E01               	movwf	btemp^0,c
 13810  016EDC  0EFC               	movlw	-4
 13811  016EDE  0060  F007  FFE3   	movff	btemp,plusw1
 13812  016EE4  6A01               	clrf	btemp^0,c
 13813  016EE6  0EFD               	movlw	-3
 13814  016EE8  50E3               	movf	plusw1,w,c
 13815  016EEA  2001               	addwfc	btemp^0,w,c
 13816  016EEC  6E01               	movwf	btemp^0,c
 13817  016EEE  0EFD               	movlw	-3
 13818  016EF0  0060  F007  FFE3   	movff	btemp,plusw1
 13819                           
 13820                           ;stkvar	_n @ sp[(-4)+-6]
 13821  016EF6  0EF6               	movlw	-10
 13822  016EF8  006F FF8C  F001    	movff	plusw1,btemp
 13823  016EFE  0E01               	movlw	1
 13824  016F00  5E01               	subwf	btemp^0,f,c
 13825  016F02  0EF6               	movlw	-10
 13826  016F04  0060  F007  FFE3   	movff	btemp,plusw1
 13827  016F0A  0EF7               	movlw	-9
 13828  016F0C  006F FF8C  F001    	movff	plusw1,btemp
 13829  016F12  0E00               	movlw	0
 13830  016F14  5A01               	subwfb	btemp^0,f,c
 13831  016F16  0EF7               	movlw	-9
 13832  016F18  0060  F007  FFE3   	movff	btemp,plusw1
 13833  016F1E                     l8974:
 13834                           
 13835                           ;stkvar	_l @ sp[(-4)+2]
 13836  016F1E  0EFE               	movlw	-2
 13837  016F20  006F FF8F FFF6     	movff	plusw1,tblptrl
 13838  016F26  0EFF               	movlw	-1
 13839  016F28  006F FF8F FFF7     	movff	plusw1,tblptrh
 13840  016F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 13841  016F30  6EF8               	movwf	tblptru,c
 13842  016F32  0E1F               	movlw	(high __ramtop+-1)
 13843  016F34  64F7               	cpfsgt	tblptrh,c
 13844  016F36  D003               	bra	u8277
 13845  016F38  0008               	tblrd		*
 13846  016F3A  50F5               	movf	tablat,w,c
 13847  016F3C  D007               	bra	u8270
 13848  016F3E                     u8277:
 13849  016F3E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13850  016F44  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13851  016F4A  50EF               	movf	indf0,w,c
 13852  016F4C                     u8270:
 13853  016F4C  0900               	iorlw	0
 13854  016F4E  B4D8               	btfsc	status,2,c
 13855  016F50  D04A               	goto	u8310
 13856                           
 13857                           ;stkvar	_r @ sp[(-4)+0]
 13858  016F52  50E1               	movf	fsr1l,w,c
 13859  016F54  0FFC               	addlw	-4
 13860  016F56  6ED9               	movwf	fsr2l,c
 13861  016F58  50E2               	movf	fsr1h,w,c
 13862  016F5A  6EDA               	movwf	fsr2h,c
 13863  016F5C  0EFF               	movlw	255
 13864  016F5E  22DA               	addwfc	fsr2h,f,c
 13865  016F60  006F FF7B FFF6     	movff	postinc2,tblptrl
 13866  016F66  006F FF77 FFF7     	movff	postdec2,tblptrh
 13867  016F6C                     	if	0	;tblptru may be non-zero
 13868  016F6C                     	endif
 13869  016F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13870  016F6C  0E00               	movlw	low (__mediumconst shr (0+16))
 13871  016F6E  6EF8               	movwf	tblptru,c
 13872  016F70                     	endif
 13873  016F70  0008               	tblrd		*
 13874  016F72  50F5               	movf	tablat,w,c
 13875  016F74  0900               	iorlw	0
 13876  016F76  B4D8               	btfsc	status,2,c
 13877  016F78  D036               	goto	u8310
 13878                           
 13879                           ;stkvar	_n @ sp[(-4)+-6]
 13880  016F7A  0EF6               	movlw	-10
 13881  016F7C  006F FF8C  F001    	movff	plusw1,btemp
 13882  016F82  0EF7               	movlw	-9
 13883  016F84  50E3               	movf	plusw1,w,c
 13884  016F86  1001               	iorwf	btemp^0,w,c
 13885  016F88  B4D8               	btfsc	status,2,c
 13886  016F8A  D02D               	goto	u8310
 13887                           
 13888                           ;stkvar	_r @ sp[(-4)+0]
 13889  016F8C  50E1               	movf	fsr1l,w,c
 13890  016F8E  0FFC               	addlw	-4
 13891  016F90  6ED9               	movwf	fsr2l,c
 13892  016F92  50E2               	movf	fsr1h,w,c
 13893  016F94  6EDA               	movwf	fsr2h,c
 13894  016F96  0EFF               	movlw	255
 13895  016F98  22DA               	addwfc	fsr2h,f,c
 13896  016F9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 13897  016FA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 13898  016FA6                     	if	0	;tblptru may be non-zero
 13899  016FA6                     	endif
 13900  016FA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13901  016FA6  0E00               	movlw	low (__mediumconst shr (0+16))
 13902  016FA8  6EF8               	movwf	tblptru,c
 13903  016FAA                     	endif
 13904  016FAA  0008               	tblrd		*
 13905  016FAC  006F FFD4  F00C    	movff	tablat,btemp+11
 13906                           
 13907                           ;stkvar	_l @ sp[(-4)+2]
 13908  016FB2  0EFE               	movlw	-2
 13909  016FB4  006F FF8F FFF6     	movff	plusw1,tblptrl
 13910  016FBA  0EFF               	movlw	-1
 13911  016FBC  006F FF8F FFF7     	movff	plusw1,tblptrh
 13912  016FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 13913  016FC4  6EF8               	movwf	tblptru,c
 13914  016FC6  0E1F               	movlw	(high __ramtop+-1)
 13915  016FC8  64F7               	cpfsgt	tblptrh,c
 13916  016FCA  D003               	bra	u8317
 13917  016FCC  0008               	tblrd		*
 13918  016FCE  50F5               	movf	tablat,w,c
 13919  016FD0  D007               	bra	u8315
 13920  016FD2                     u8317:
 13921  016FD2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13922  016FD8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13923  016FDE  50EF               	movf	indf0,w,c
 13924  016FE0                     u8315:
 13925  016FE0  180C               	xorwf	(btemp+11)^0,w,c
 13926  016FE2  B4D8               	btfsc	status,2,c
 13927  016FE4  D766               	goto	l8972
 13928  016FE6                     u8310:
 13929                           
 13930                           ;stkvar	_l @ sp[(-4)+2]
 13931  016FE6  0EFE               	movlw	-2
 13932  016FE8  006F FF8F FFF6     	movff	plusw1,tblptrl
 13933  016FEE  0EFF               	movlw	-1
 13934  016FF0  006F FF8F FFF7     	movff	plusw1,tblptrh
 13935  016FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 13936  016FF8  6EF8               	movwf	tblptru,c
 13937  016FFA  0E1F               	movlw	(high __ramtop+-1)
 13938  016FFC  64F7               	cpfsgt	tblptrh,c
 13939  016FFE  D003               	bra	u8327
 13940  017000  0008               	tblrd		*
 13941  017002  50F5               	movf	tablat,w,c
 13942  017004  D007               	bra	u8320
 13943  017006                     u8327:
 13944  017006  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13945  01700C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13946  017012  50EF               	movf	indf0,w,c
 13947  017014                     u8320:
 13948  017014  6E01               	movwf	btemp^0,c
 13949  017016  6A02               	clrf	(btemp+1)^0,c
 13950                           
 13951                           ;stkvar	_r @ sp[(-4)+0]
 13952  017018  50E1               	movf	fsr1l,w,c
 13953  01701A  0FFC               	addlw	-4
 13954  01701C  6ED9               	movwf	fsr2l,c
 13955  01701E  50E2               	movf	fsr1h,w,c
 13956  017020  6EDA               	movwf	fsr2h,c
 13957  017022  0EFF               	movlw	255
 13958  017024  22DA               	addwfc	fsr2h,f,c
 13959  017026  006F FF7B FFF6     	movff	postinc2,tblptrl
 13960  01702C  006F FF77 FFF7     	movff	postdec2,tblptrh
 13961  017032                     	if	0	;tblptru may be non-zero
 13962  017032                     	endif
 13963  017032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13964  017032  0E00               	movlw	low (__mediumconst shr (0+16))
 13965  017034  6EF8               	movwf	tblptru,c
 13966  017036                     	endif
 13967  017036  0008               	tblrd		*
 13968  017038  50F5               	movf	tablat,w,c
 13969  01703A  5E01               	subwf	btemp^0,f,c
 13970  01703C  0E00               	movlw	0
 13971  01703E  5A02               	subwfb	(btemp+1)^0,f,c
 13972  017040                     l3391:
 13973                           
 13974                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 13975  017040  0EF6               	movlw	246
 13976  017042  26E1               	addwf	fsr1l,f,c
 13977  017044  0EFF               	movlw	255
 13978  017046  22E2               	addwfc	fsr1h,f,c
 13979  017048  0012               	return		;funcret
 13980  01704A                     __end_of_strncmp:
 13981                           	opt callstack 0
 13982                           
 13983 ;; *************** function _stoa *****************
 13984 ;; Defined at:
 13985 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13988 ;;		 -> f(6), NULL(0), 
 13989 ;;  s               2  [STACK] PTR unsigned char 
 13990 ;;		 -> ?_printf(2), ?_sprintf(2), STR_37(9), STR_36(12), 
 13991 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 13992 ;;		 -> V(188), 
 13993 ;; Auto vars:     Size  Location     Type
 13994 ;;  nuls            7  [STACK] unsigned char [7]
 13995 ;;  l               2  [STACK] int 
 13996 ;;  p               2  [STACK] int 
 13997 ;;  cp              2  [STACK] PTR unsigned char 
 13998 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_37(9), 
 13999 ;;		 -> STR_36(12), D.lcd(288), D(290), T(144), 
 14000 ;;		 -> STR_3(6), V(188), 
 14001 ;;  w               2  [STACK] int 
 14002 ;;  i               2  [STACK] int 
 14003 ;; Return value:  Size  Location     Type
 14004 ;;                  2  [STACK] int 
 14005 ;; Registers used:
 14006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14007 ;; Tracked objects:
 14008 ;;		On entry : 0/0
 14009 ;;		On exit  : 0/0
 14010 ;;		Unchanged: 0/0
 14011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14016 ;;Total ram usage:        0 bytes
 14017 ;; Hardware stack levels used:    1
 14018 ;; Hardware stack levels required when called:   18
 14019 ;; This function calls:
 14020 ;;		_fputc
 14021 ;;		_strlen
 14022 ;; This function is called by:
 14023 ;;		_vfpfcnvrt
 14024 ;; This function uses a reentrant model
 14025 ;;
 14026                           
 14027                           	psect	text54
 14028  016438                     __ptext54:
 14029                           	opt callstack 0
 14030  016438                     _stoa:
 14031                           	opt callstack 0
 14032                           
 14033                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14034  016438  0E11               	movlw	17
 14035  01643A  26E1               	addwf	fsr1l,f,c
 14036  01643C  0E00               	movlw	0
 14037  01643E  22E2               	addwfc	fsr1h,f,c
 14038                           
 14039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14040                           
 14041                           ;incstack = 0
 14042 ;; hardware stack exceeded
 14043  016440  EE20  F0EC         	lfsr	2,stoa@F1166
 14044                           
 14045                           ;stkvar	_nuls @ sp[(-17)+0]
 14046  016444  0E07               	movlw	7
 14047  016446  6E01               	movwf	btemp^0,c
 14048  016448  0EEF               	movlw	-17
 14049  01644A                     us1094999:
 14050  01644A  006F FF7B FFE3     	movff	postinc2,plusw1
 14051  016450  28E8               	incf	wreg,w,c
 14052  016452  2E01               	decfsz	btemp^0,f,c
 14053  016454  D7FA               	bra	us1094999
 14054                           
 14055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14056                           ;stkvar	_s @ sp[(-17)+-4]
 14057  016456  0EEB               	movlw	-21
 14058  016458  006F FF8C  F00B    	movff	plusw1,btemp+10
 14059  01645E  0EEC               	movlw	-20
 14060  016460  006F FF8C  F00C    	movff	plusw1,btemp+11
 14061                           
 14062                           ;stkvar	_cp @ sp[(-17)+11]
 14063  016466  0EFB               	movlw	-5
 14064  016468  0060  F033  FFE3   	movff	btemp+11,plusw1
 14065  01646E  0EFA               	movlw	-6
 14066  016470  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14067                           
 14068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14069                           ;stkvar	_cp @ sp[(-17)+11]
 14070  016476  0EFA               	movlw	-6
 14071  016478  006F FF8C  F001    	movff	plusw1,btemp
 14072  01647E  0EFB               	movlw	-5
 14073  016480  50E3               	movf	plusw1,w,c
 14074  016482  1001               	iorwf	btemp^0,w,c
 14075  016484  A4D8               	btfss	status,2,c
 14076  016486  D00E               	goto	l11618
 14077                           
 14078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14079                           ;stkvar	_nuls @ sp[(-17)+0]
 14080  016488  0EEF               	movlw	239
 14081  01648A  24E1               	addwf	fsr1l,w,c
 14082  01648C  6E0B               	movwf	(btemp+10)^0,c
 14083  01648E  0EFF               	movlw	255
 14084  016490  20E2               	addwfc	fsr1h,w,c
 14085  016492  6E0C               	movwf	(btemp+11)^0,c
 14086                           
 14087                           ;stkvar	_cp @ sp[(-17)+11]
 14088  016494  0EFB               	movlw	-5
 14089  016496  0060  F033  FFE3   	movff	btemp+11,plusw1
 14090  01649C  0EFA               	movlw	-6
 14091  01649E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14092  0164A4                     l11618:
 14093                           
 14094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14095                           ;stkvar	_cp @ sp[(-17)+11]
 14096  0164A4  0EFA               	movlw	-6
 14097  0164A6  006F FF8F FFE6     	movff	plusw1,postinc1
 14098  0164AC  006F FF8F FFE6     	movff	plusw1,postinc1
 14099  0164B2  EC8F  F0CC         	call	_strlen	;wreg free
 14100                           
 14101                           ;stkvar	_l @ sp[(-17)+7]
 14102  0164B6  0EF6               	movlw	-10
 14103  0164B8  0060  F007  FFE3   	movff	btemp,plusw1
 14104  0164BE  0EF7               	movlw	-9
 14105  0164C0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14106                           
 14107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14108                           ;stkvar	_p @ sp[(-17)+9]
 14109  0164C6  0EF8               	movlw	-8
 14110  0164C8  0060  F08F  FFE3   	movff	_prec,plusw1
 14111  0164CE  0EF9               	movlw	-7
 14112  0164D0  0060  F093  FFE3   	movff	_prec+1,plusw1
 14113                           
 14114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14115                           ;stkvar	_p @ sp[(-17)+9]
 14116  0164D6  0EF9               	movlw	-7
 14117  0164D8  BEE3               	btfsc	plusw1,7,c
 14118  0164DA  D023               	goto	l2216
 14119                           
 14120                           ;stkvar	_l @ sp[(-17)+7]
 14121                           ;stkvar	_p @ sp[(-17)+9]
 14122  0164DC  50E1               	movf	fsr1l,w,c
 14123  0164DE  0FF8               	addlw	-8
 14124  0164E0  6ED9               	movwf	fsr2l,c
 14125  0164E2  50E2               	movf	fsr1h,w,c
 14126  0164E4  6EDA               	movwf	fsr2h,c
 14127  0164E6  0EFF               	movlw	255
 14128  0164E8  22DA               	addwfc	fsr2h,f,c
 14129  0164EA  0EF6               	movlw	-10
 14130  0164EC  50E3               	movf	plusw1,w,c
 14131  0164EE  5CDE               	subwf	postinc2,w,c
 14132  0164F0  50DE               	movf	postinc2,w,c
 14133  0164F2  0A80               	xorlw	128
 14134  0164F4  6E01               	movwf	btemp^0,c
 14135  0164F6  0EF7               	movlw	-9
 14136  0164F8  50E3               	movf	plusw1,w,c
 14137  0164FA  0A80               	xorlw	128
 14138  0164FC  5801               	subwfb	btemp^0,w,c
 14139  0164FE  B0D8               	btfsc	status,0,c
 14140  016500  D010               	goto	l2216
 14141                           
 14142                           ;stkvar	_p @ sp[(-17)+9]
 14143                           ;stkvar	_l @ sp[(-17)+7]
 14144  016502  0EF8               	movlw	-8
 14145  016504  006F FF8C  F001    	movff	plusw1,btemp
 14146  01650A  0EF6               	movlw	-10
 14147  01650C  0060  F007  FFE3   	movff	btemp,plusw1
 14148  016512  0EF9               	movlw	-7
 14149  016514  006F FF8C  F001    	movff	plusw1,btemp
 14150  01651A  0EF7               	movlw	-9
 14151  01651C  0060  F007  FFE3   	movff	btemp,plusw1
 14152  016522                     l2216:
 14153                           
 14154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14155                           ;stkvar	_l @ sp[(-17)+7]
 14156                           ;stkvar	_p @ sp[(-17)+9]
 14157  016522  0EF6               	movlw	-10
 14158  016524  006F FF8C  F001    	movff	plusw1,btemp
 14159  01652A  0EF8               	movlw	-8
 14160  01652C  0060  F007  FFE3   	movff	btemp,plusw1
 14161  016532  0EF7               	movlw	-9
 14162  016534  006F FF8C  F001    	movff	plusw1,btemp
 14163  01653A  0EF9               	movlw	-7
 14164  01653C  0060  F007  FFE3   	movff	btemp,plusw1
 14165                           
 14166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14167                           ;stkvar	_w @ sp[(-17)+13]
 14168  016542  0EFC               	movlw	-4
 14169  016544  0060  F087  FFE3   	movff	_width,plusw1
 14170  01654A  0EFD               	movlw	-3
 14171  01654C  0060  F08B  FFE3   	movff	_width+1,plusw1
 14172                           
 14173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14174  016552  A025               	btfss	_flags^0,0,c
 14175  016554  D01F               	goto	l11638
 14176  016556  D031               	goto	u10990
 14177  016558                     l11634:
 14178                           
 14179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14180                           ;stkvar	_fp @ sp[(-17)+-2]
 14181  016558  0EED               	movlw	-19
 14182  01655A  006F FF8F FFE6     	movff	plusw1,postinc1
 14183  016560  006F FF8F FFE6     	movff	plusw1,postinc1
 14184  016566  0E20               	movlw	32
 14185  016568  6EE6               	movwf	postinc1,c
 14186  01656A  0E00               	movlw	0
 14187  01656C  6EE6               	movwf	postinc1,c
 14188  01656E  EC95  F0C4         	call	_fputc	;wreg free
 14189                           
 14190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14191                           ;stkvar	_l @ sp[(-17)+7]
 14192  016572  0EF6               	movlw	-10
 14193  016574  50E3               	movf	plusw1,w,c
 14194  016576  0F01               	addlw	1
 14195  016578  6E01               	movwf	btemp^0,c
 14196  01657A  0EF6               	movlw	-10
 14197  01657C  0060  F007  FFE3   	movff	btemp,plusw1
 14198  016582  6A01               	clrf	btemp^0,c
 14199  016584  0EF7               	movlw	-9
 14200  016586  50E3               	movf	plusw1,w,c
 14201  016588  2001               	addwfc	btemp^0,w,c
 14202  01658A  6E01               	movwf	btemp^0,c
 14203  01658C  0EF7               	movlw	-9
 14204  01658E  0060  F007  FFE3   	movff	btemp,plusw1
 14205  016594                     l11638:
 14206                           
 14207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14208                           ;stkvar	_w @ sp[(-17)+13]
 14209                           ;stkvar	_l @ sp[(-17)+7]
 14210  016594  50E1               	movf	fsr1l,w,c
 14211  016596  0FF6               	addlw	-10
 14212  016598  6ED9               	movwf	fsr2l,c
 14213  01659A  50E2               	movf	fsr1h,w,c
 14214  01659C  6EDA               	movwf	fsr2h,c
 14215  01659E  0EFF               	movlw	255
 14216  0165A0  22DA               	addwfc	fsr2h,f,c
 14217  0165A2  0EFC               	movlw	-4
 14218  0165A4  50E3               	movf	plusw1,w,c
 14219  0165A6  5CDE               	subwf	postinc2,w,c
 14220  0165A8  50DE               	movf	postinc2,w,c
 14221  0165AA  0A80               	xorlw	128
 14222  0165AC  6E01               	movwf	btemp^0,c
 14223  0165AE  0EFD               	movlw	-3
 14224  0165B0  50E3               	movf	plusw1,w,c
 14225  0165B2  0A80               	xorlw	128
 14226  0165B4  5801               	subwfb	btemp^0,w,c
 14227  0165B6  A0D8               	btfss	status,0,c
 14228  0165B8  D7CF               	goto	l11634
 14229  0165BA                     u10990:
 14230                           
 14231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 14232                           ;stkvar	_i @ sp[(-17)+15]
 14233  0165BA  0EFE               	movlw	-2
 14234  0165BC  6AE3               	clrf	plusw1,c
 14235  0165BE  0EFF               	movlw	-1
 14236  0165C0  6AE3               	clrf	plusw1,c
 14237                           
 14238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14239  0165C2  D045               	goto	l11648
 14240  0165C4                     l11642:
 14241                           
 14242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 14243                           ;stkvar	_fp @ sp[(-17)+-2]
 14244  0165C4  0EED               	movlw	-19
 14245  0165C6  006F FF8F FFE6     	movff	plusw1,postinc1
 14246  0165CC  006F FF8F FFE6     	movff	plusw1,postinc1
 14247                           
 14248                           ;stkvar	_cp @ sp[(-19)+11]
 14249  0165D2  0EF8               	movlw	-8
 14250  0165D4  006F FF8F FFF6     	movff	plusw1,tblptrl
 14251  0165DA  0EF9               	movlw	-7
 14252  0165DC  006F FF8F FFF7     	movff	plusw1,tblptrh
 14253  0165E2  0E00               	movlw	low (__mediumconst shr (0+16))
 14254  0165E4  6EF8               	movwf	tblptru,c
 14255  0165E6  0E1F               	movlw	(high __ramtop+-1)
 14256  0165E8  64F7               	cpfsgt	tblptrh,c
 14257  0165EA  D003               	bra	u11007
 14258  0165EC  0008               	tblrd		*
 14259  0165EE  50F5               	movf	tablat,w,c
 14260  0165F0  D007               	bra	u11000
 14261  0165F2                     u11007:
 14262  0165F2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14263  0165F8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14264  0165FE  50EF               	movf	indf0,w,c
 14265  016600                     u11000:
 14266  016600  6EE6               	movwf	postinc1,c
 14267  016602  0E00               	movlw	0
 14268  016604  6EE6               	movwf	postinc1,c
 14269  016606  EC95  F0C4         	call	_fputc	;wreg free
 14270                           
 14271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 14272                           ;stkvar	_cp @ sp[(-17)+11]
 14273  01660A  0EFA               	movlw	-6
 14274  01660C  50E3               	movf	plusw1,w,c
 14275  01660E  0F01               	addlw	1
 14276  016610  6E01               	movwf	btemp^0,c
 14277  016612  0EFA               	movlw	-6
 14278  016614  0060  F007  FFE3   	movff	btemp,plusw1
 14279  01661A  6A01               	clrf	btemp^0,c
 14280  01661C  0EFB               	movlw	-5
 14281  01661E  50E3               	movf	plusw1,w,c
 14282  016620  2001               	addwfc	btemp^0,w,c
 14283  016622  6E01               	movwf	btemp^0,c
 14284  016624  0EFB               	movlw	-5
 14285  016626  0060  F007  FFE3   	movff	btemp,plusw1
 14286                           
 14287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 14288                           ;stkvar	_i @ sp[(-17)+15]
 14289  01662C  0EFE               	movlw	-2
 14290  01662E  50E3               	movf	plusw1,w,c
 14291  016630  0F01               	addlw	1
 14292  016632  6E01               	movwf	btemp^0,c
 14293  016634  0EFE               	movlw	-2
 14294  016636  0060  F007  FFE3   	movff	btemp,plusw1
 14295  01663C  6A01               	clrf	btemp^0,c
 14296  01663E  0EFF               	movlw	-1
 14297  016640  50E3               	movf	plusw1,w,c
 14298  016642  2001               	addwfc	btemp^0,w,c
 14299  016644  6E01               	movwf	btemp^0,c
 14300  016646  0EFF               	movlw	-1
 14301  016648  0060  F007  FFE3   	movff	btemp,plusw1
 14302  01664E                     l11648:
 14303                           
 14304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14305                           ;stkvar	_p @ sp[(-17)+9]
 14306                           ;stkvar	_i @ sp[(-17)+15]
 14307  01664E  50E1               	movf	fsr1l,w,c
 14308  016650  0FFE               	addlw	-2
 14309  016652  6ED9               	movwf	fsr2l,c
 14310  016654  50E2               	movf	fsr1h,w,c
 14311  016656  6EDA               	movwf	fsr2h,c
 14312  016658  0EFF               	movlw	255
 14313  01665A  22DA               	addwfc	fsr2h,f,c
 14314  01665C  0EF8               	movlw	-8
 14315  01665E  50E3               	movf	plusw1,w,c
 14316  016660  5CDE               	subwf	postinc2,w,c
 14317  016662  50DE               	movf	postinc2,w,c
 14318  016664  0A80               	xorlw	128
 14319  016666  6E01               	movwf	btemp^0,c
 14320  016668  0EF9               	movlw	-7
 14321  01666A  50E3               	movf	plusw1,w,c
 14322  01666C  0A80               	xorlw	128
 14323  01666E  5801               	subwfb	btemp^0,w,c
 14324  016670  A0D8               	btfss	status,0,c
 14325  016672  D7A8               	goto	l11642
 14326                           
 14327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 14328  016674  B025               	btfsc	_flags^0,0,c
 14329  016676  D01F               	goto	l11656
 14330  016678  D031               	goto	u11030
 14331  01667A                     l11652:
 14332                           
 14333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 14334                           ;stkvar	_fp @ sp[(-17)+-2]
 14335  01667A  0EED               	movlw	-19
 14336  01667C  006F FF8F FFE6     	movff	plusw1,postinc1
 14337  016682  006F FF8F FFE6     	movff	plusw1,postinc1
 14338  016688  0E20               	movlw	32
 14339  01668A  6EE6               	movwf	postinc1,c
 14340  01668C  0E00               	movlw	0
 14341  01668E  6EE6               	movwf	postinc1,c
 14342  016690  EC95  F0C4         	call	_fputc	;wreg free
 14343                           
 14344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 14345                           ;stkvar	_l @ sp[(-17)+7]
 14346  016694  0EF6               	movlw	-10
 14347  016696  50E3               	movf	plusw1,w,c
 14348  016698  0F01               	addlw	1
 14349  01669A  6E01               	movwf	btemp^0,c
 14350  01669C  0EF6               	movlw	-10
 14351  01669E  0060  F007  FFE3   	movff	btemp,plusw1
 14352  0166A4  6A01               	clrf	btemp^0,c
 14353  0166A6  0EF7               	movlw	-9
 14354  0166A8  50E3               	movf	plusw1,w,c
 14355  0166AA  2001               	addwfc	btemp^0,w,c
 14356  0166AC  6E01               	movwf	btemp^0,c
 14357  0166AE  0EF7               	movlw	-9
 14358  0166B0  0060  F007  FFE3   	movff	btemp,plusw1
 14359  0166B6                     l11656:
 14360                           
 14361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 14362                           ;stkvar	_w @ sp[(-17)+13]
 14363                           ;stkvar	_l @ sp[(-17)+7]
 14364  0166B6  50E1               	movf	fsr1l,w,c
 14365  0166B8  0FF6               	addlw	-10
 14366  0166BA  6ED9               	movwf	fsr2l,c
 14367  0166BC  50E2               	movf	fsr1h,w,c
 14368  0166BE  6EDA               	movwf	fsr2h,c
 14369  0166C0  0EFF               	movlw	255
 14370  0166C2  22DA               	addwfc	fsr2h,f,c
 14371  0166C4  0EFC               	movlw	-4
 14372  0166C6  50E3               	movf	plusw1,w,c
 14373  0166C8  5CDE               	subwf	postinc2,w,c
 14374  0166CA  50DE               	movf	postinc2,w,c
 14375  0166CC  0A80               	xorlw	128
 14376  0166CE  6E01               	movwf	btemp^0,c
 14377  0166D0  0EFD               	movlw	-3
 14378  0166D2  50E3               	movf	plusw1,w,c
 14379  0166D4  0A80               	xorlw	128
 14380  0166D6  5801               	subwfb	btemp^0,w,c
 14381  0166D8  A0D8               	btfss	status,0,c
 14382  0166DA  D7CF               	goto	l11652
 14383  0166DC                     u11030:
 14384                           
 14385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 14386                           ;stkvar	_l @ sp[(-17)+7]
 14387  0166DC  0EF6               	movlw	-10
 14388  0166DE  006F FF8C  F001    	movff	plusw1,btemp
 14389  0166E4  0EF7               	movlw	-9
 14390  0166E6  006F FF8C  F002    	movff	plusw1,btemp+1
 14391                           
 14392                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14393  0166EC  0EEB               	movlw	235
 14394  0166EE  26E1               	addwf	fsr1l,f,c
 14395  0166F0  0EFF               	movlw	255
 14396  0166F2  22E2               	addwfc	fsr1h,f,c
 14397  0166F4  0012               	return		;funcret
 14398  0166F6                     __end_of_stoa:
 14399                           	opt callstack 0
 14400                           
 14401 ;; *************** function _efgtoa *****************
 14402 ;; Defined at:
 14403 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14406 ;;		 -> f(6), NULL(0), 
 14407 ;;  f               4  [STACK] PTR struct _IO_FILE
 14408 ;;  c               1  [STACK] unsigned char 
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;  u               4  [STACK] unsigned char 
 14411 ;;  g               4  [STACK] unsigned char 
 14412 ;;  l               4  [STACK] unsigned char 
 14413 ;;  h               4  [STACK] unsigned char 
 14414 ;;  ou              4  [STACK] unsigned char 
 14415 ;;  n               2  [STACK] int 
 14416 ;;  e               2  [STACK] int 
 14417 ;;  i               2  [STACK] int 
 14418 ;;  w               2  [STACK] int 
 14419 ;;  p               2  [STACK] int 
 14420 ;;  sign            2  [STACK] int 
 14421 ;;  d               2  [STACK] int 
 14422 ;;  ne              2  [STACK] int 
 14423 ;;  m               2  [STACK] int 
 14424 ;;  pp              2  [STACK] int 
 14425 ;;  t               2  [STACK] int 
 14426 ;;  mode            1  [STACK] unsigned char 
 14427 ;;  nmode           1  [STACK] unsigned char 
 14428 ;; Return value:  Size  Location     Type
 14429 ;;                  2  [STACK] int 
 14430 ;; Registers used:
 14431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14432 ;; Tracked objects:
 14433 ;;		On entry : 0/0
 14434 ;;		On exit  : 0/0
 14435 ;;		Unchanged: 0/0
 14436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14441 ;;Total ram usage:        0 bytes
 14442 ;; Hardware stack levels used:    1
 14443 ;; Hardware stack levels required when called:   20
 14444 ;; This function calls:
 14445 ;;		___awdiv
 14446 ;;		___awmod
 14447 ;;		___fladd
 14448 ;;		___fldiv
 14449 ;;		___fleq
 14450 ;;		___flge
 14451 ;;		___flmul
 14452 ;;		___flneg
 14453 ;;		___flsub
 14454 ;;		___fltol
 14455 ;;		___fpclassifyf
 14456 ;;		_floorf
 14457 ;;		_isupper
 14458 ;;		_pad
 14459 ;;		_strcpy
 14460 ;;		_tolower
 14461 ;; This function is called by:
 14462 ;;		_vfpfcnvrt
 14463 ;; This function uses a reentrant model
 14464 ;;
 14465                           
 14466                           	psect	text55
 14467  010000                     __ptext55:
 14468                           	opt callstack 0
 14469  010000                     _efgtoa:
 14470                           	opt callstack 0
 14471                           
 14472                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14473  010000  0E38               	movlw	56
 14474  010002  26E1               	addwf	fsr1l,f,c
 14475  010004  0E00               	movlw	0
 14476  010006  22E2               	addwfc	fsr1h,f,c
 14477                           
 14478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14479                           ;stkvar	_sign @ sp[(-56)+42]
 14480                           
 14481                           ;incstack = 0
 14482 ;; hardware stack exceeded
 14483  010008  0EF2               	movlw	-14
 14484  01000A  6AE3               	clrf	plusw1,c
 14485  01000C  0EF3               	movlw	-13
 14486  01000E  6AE3               	clrf	plusw1,c
 14487                           
 14488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14489                           ;stkvar	_f @ sp[(-56)+-6]
 14490  010010  0EC2               	movlw	-62
 14491  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14492  010018  0EC3               	movlw	-61
 14493  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14494  010020  0EC4               	movlw	-60
 14495  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14496  010028  0EC5               	movlw	-59
 14497  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14498                           
 14499                           ;stkvar	_g @ sp[(-56)+16]
 14500  010030  0ED8               	movlw	-40
 14501  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14502  010038  0ED9               	movlw	-39
 14503  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14504  010040  0EDA               	movlw	-38
 14505  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14506  010048  0EDB               	movlw	-37
 14507  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14508                           
 14509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14510                           ;stkvar	_g @ sp[(-56)+16]
 14511  010050  0EDB               	movlw	-37
 14512  010052  AEE3               	btfss	plusw1,7,c
 14513  010054  D02B               	goto	l11316
 14514                           
 14515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14516  010056  0E01               	movlw	1
 14517  010058  6E0B               	movwf	(btemp+10)^0,c
 14518  01005A  0E00               	movlw	0
 14519  01005C  6E0C               	movwf	(btemp+11)^0,c
 14520                           
 14521                           ;stkvar	_sign @ sp[(-56)+42]
 14522  01005E  0EF2               	movlw	-14
 14523  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14524  010066  0EF3               	movlw	-13
 14525  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14526                           
 14527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14528                           ;stkvar	_g @ sp[(-56)+16]
 14529  01006E  0ED8               	movlw	-40
 14530  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14531  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14532  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14533  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14534  010088  EC3A  F0D2         	call	___flneg	;wreg free
 14535                           
 14536                           ;stkvar	_g @ sp[(-56)+16]
 14537  01008C  0ED8               	movlw	-40
 14538  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14539  010094  0ED9               	movlw	-39
 14540  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14541  01009C  0EDA               	movlw	-38
 14542  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14543  0100A4  0EDB               	movlw	-37
 14544  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14545  0100AC                     l11316:
 14546                           
 14547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14548                           ;stkvar	_n @ sp[(-56)+32]
 14549  0100AC  0EE8               	movlw	-24
 14550  0100AE  6AE3               	clrf	plusw1,c
 14551  0100B0  0EE9               	movlw	-23
 14552  0100B2  6AE3               	clrf	plusw1,c
 14553                           
 14554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14555                           ;stkvar	_w @ sp[(-56)+38]
 14556  0100B4  0EEE               	movlw	-18
 14557  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14558  0100BC  0EEF               	movlw	-17
 14559  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14560                           
 14561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14562                           ;stkvar	_sign @ sp[(-56)+42]
 14563  0100C4  0EF2               	movlw	-14
 14564  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14565  0100CC  0EF3               	movlw	-13
 14566  0100CE  50E3               	movf	plusw1,w,c
 14567  0100D0  1001               	iorwf	btemp^0,w,c
 14568  0100D2  A4D8               	btfss	status,2,c
 14569  0100D4  D002               	goto	u10440
 14570  0100D6  A425               	btfss	_flags^0,2,c
 14571  0100D8  D036               	goto	l11336
 14572  0100DA                     u10440:
 14573                           
 14574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14575                           ;stkvar	_sign @ sp[(-56)+42]
 14576  0100DA  0EF2               	movlw	-14
 14577  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14578  0100E2  0EF3               	movlw	-13
 14579  0100E4  50E3               	movf	plusw1,w,c
 14580  0100E6  1001               	iorwf	btemp^0,w,c
 14581  0100E8  A4D8               	btfss	status,2,c
 14582  0100EA  D002               	goto	l11328
 14583  0100EC  0E2B               	movlw	43
 14584  0100EE  D001               	goto	L11
 14585  0100F0                     l11328:
 14586  0100F0  0E2D               	movlw	45
 14587  0100F2                     L11:
 14588  0100F2  6E0B               	movwf	(btemp+10)^0,c
 14589  0100F4  0E00               	movlw	0
 14590  0100F6  6E0C               	movwf	(btemp+11)^0,c
 14591                           
 14592                           ;stkvar	_efgtoa$5299 @ sp[(-56)+10]
 14593  0100F8  0ED2               	movlw	-46
 14594  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14595  010100  0ED3               	movlw	-45
 14596  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 14597                           
 14598                           ;stkvar	_efgtoa$5299 @ sp[(-56)+10]
 14599  010108  0ED2               	movlw	-46
 14600  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 14601                           
 14602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 14603                           ;stkvar	_n @ sp[(-56)+32]
 14604  010110  0EE8               	movlw	-24
 14605  010112  50E3               	movf	plusw1,w,c
 14606  010114  0F01               	addlw	1
 14607  010116  6E01               	movwf	btemp^0,c
 14608  010118  0EE8               	movlw	-24
 14609  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 14610  010120  6A01               	clrf	btemp^0,c
 14611  010122  0EE9               	movlw	-23
 14612  010124  50E3               	movf	plusw1,w,c
 14613  010126  2001               	addwfc	btemp^0,w,c
 14614  010128  6E01               	movwf	btemp^0,c
 14615  01012A  0EE9               	movlw	-23
 14616  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 14617                           
 14618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 14619                           ;stkvar	_w @ sp[(-56)+38]
 14620  010132  50E1               	movf	fsr1l,w,c
 14621  010134  0FEE               	addlw	-18
 14622  010136  6ED9               	movwf	fsr2l,c
 14623  010138  50E2               	movf	fsr1h,w,c
 14624  01013A  6EDA               	movwf	fsr2h,c
 14625  01013C  0EFF               	movlw	255
 14626  01013E  22DA               	addwfc	fsr2h,f,c
 14627  010140  06DE               	decf	postinc2,f,c
 14628  010142  0E00               	movlw	0
 14629  010144  5ADD               	subwfb	postdec2,f,c
 14630  010146                     l11336:
 14631                           
 14632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14633                           ;stkvar	_g @ sp[(-56)+16]
 14634  010146  0ED8               	movlw	-40
 14635  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 14636  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 14637  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 14638  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 14639  010160  EC01  F0BD         	call	___fpclassifyf	;wreg free
 14640  010164  0401               	decf	btemp^0,w,c
 14641  010166  1002               	iorwf	(btemp+1)^0,w,c
 14642  010168  A4D8               	btfss	status,2,c
 14643  01016A  D076               	goto	l11354
 14644  01016C  0EBF               	movlw	191
 14645  01016E  6E0B               	movwf	(btemp+10)^0,c
 14646  010170  0EFF               	movlw	255
 14647  010172  6E0C               	movwf	(btemp+11)^0,c
 14648                           
 14649                           ;stkvar	_c @ sp[(-56)+-7]
 14650  010174  0EC1               	movlw	-63
 14651  010176  50E3               	movf	plusw1,w,c
 14652  010178  6E09               	movwf	(btemp+8)^0,c
 14653  01017A  6A0A               	clrf	(btemp+9)^0,c
 14654  01017C  500B               	movf	(btemp+10)^0,w,c
 14655  01017E  2609               	addwf	(btemp+8)^0,f,c
 14656  010180  500C               	movf	(btemp+11)^0,w,c
 14657  010182  220A               	addwfc	(btemp+9)^0,f,c
 14658  010184  500A               	movf	(btemp+9)^0,w,c
 14659  010186  E106               	bnz	u10470
 14660  010188  0E1A               	movlw	26
 14661  01018A  5C09               	subwf	(btemp+8)^0,w,c
 14662  01018C  B0D8               	btfsc	status,0,c
 14663  01018E  D002               	goto	u10470
 14664  010190  0E01               	movlw	1
 14665  010192  D001               	goto	u10480
 14666  010194                     u10470:
 14667  010194  0E00               	movlw	0
 14668  010196                     u10480:
 14669  010196  6E0B               	movwf	(btemp+10)^0,c
 14670  010198  6A0C               	clrf	(btemp+11)^0,c
 14671                           
 14672                           ;stkvar	_efgtoa$5300 @ sp[(-56)+8]
 14673  01019A  0ED0               	movlw	-48
 14674  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14675  0101A2  0ED1               	movlw	-47
 14676  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14677                           
 14678                           ;stkvar	_efgtoa$5300 @ sp[(-56)+8]
 14679  0101AA  0ED0               	movlw	-48
 14680  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 14681  0101B2  0ED1               	movlw	-47
 14682  0101B4  50E3               	movf	plusw1,w,c
 14683  0101B6  1001               	iorwf	btemp^0,w,c
 14684  0101B8  B4D8               	btfsc	status,2,c
 14685  0101BA  D017               	goto	l11346
 14686                           
 14687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 14688  0101BC  0ED7               	movlw	low STR_56
 14689  0101BE  6EE6               	movwf	postinc1,c
 14690  0101C0  0EFF               	movlw	high STR_56
 14691  0101C2  6EE6               	movwf	postinc1,c
 14692                           
 14693                           ;stkvar	_n @ sp[(-58)+32]
 14694  0101C4  0E94               	movlw	low _dbuf
 14695  0101C6  6E0B               	movwf	(btemp+10)^0,c
 14696  0101C8  0E03               	movlw	high _dbuf
 14697  0101CA  6E0C               	movwf	(btemp+11)^0,c
 14698  0101CC  0EE6               	movlw	-26
 14699  0101CE  50E3               	movf	plusw1,w,c
 14700  0101D0  260B               	addwf	(btemp+10)^0,f,c
 14701  0101D2  0EE7               	movlw	-25
 14702  0101D4  50E3               	movf	plusw1,w,c
 14703  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 14704  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14705  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14706  0101E4  ECB4  F0C9         	call	_strcpy	;wreg free
 14707                           
 14708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 14709  0101E8  D016               	goto	l11348
 14710  0101EA                     l11346:
 14711                           
 14712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 14713  0101EA  0EDF               	movlw	low STR_57
 14714  0101EC  6EE6               	movwf	postinc1,c
 14715  0101EE  0EFF               	movlw	high STR_57
 14716  0101F0  6EE6               	movwf	postinc1,c
 14717                           
 14718                           ;stkvar	_n @ sp[(-58)+32]
 14719  0101F2  0E94               	movlw	low _dbuf
 14720  0101F4  6E0B               	movwf	(btemp+10)^0,c
 14721  0101F6  0E03               	movlw	high _dbuf
 14722  0101F8  6E0C               	movwf	(btemp+11)^0,c
 14723  0101FA  0EE6               	movlw	-26
 14724  0101FC  50E3               	movf	plusw1,w,c
 14725  0101FE  260B               	addwf	(btemp+10)^0,f,c
 14726  010200  0EE7               	movlw	-25
 14727  010202  50E3               	movf	plusw1,w,c
 14728  010204  220C               	addwfc	(btemp+11)^0,f,c
 14729  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14730  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14731  010212  ECB4  F0C9         	call	_strcpy	;wreg free
 14732  010216                     l11348:
 14733                           
 14734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 14735                           ;stkvar	_w @ sp[(-56)+38]
 14736  010216  50E1               	movf	fsr1l,w,c
 14737  010218  0FEE               	addlw	-18
 14738  01021A  6ED9               	movwf	fsr2l,c
 14739  01021C  50E2               	movf	fsr1h,w,c
 14740  01021E  6EDA               	movwf	fsr2h,c
 14741  010220  0EFF               	movlw	255
 14742  010222  22DA               	addwfc	fsr2h,f,c
 14743  010224  0EFD               	movlw	253
 14744  010226  26DE               	addwf	postinc2,f,c
 14745  010228  0EFF               	movlw	255
 14746  01022A  22DD               	addwfc	postdec2,f,c
 14747  01022C                     l11350:
 14748                           
 14749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 14750                           ;stkvar	_w @ sp[(-56)+38]
 14751  01022C  0EEE               	movlw	-18
 14752  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 14753  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 14754  01023A  0E94               	movlw	low _dbuf
 14755  01023C  6EE6               	movwf	postinc1,c
 14756  01023E  0E03               	movlw	high _dbuf
 14757  010240  6EE6               	movwf	postinc1,c
 14758                           
 14759                           ;stkvar	_fp @ sp[(-60)+-2]
 14760  010242  0EC2               	movlw	-62
 14761  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 14762  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 14763  010250  ECB3  F0C5         	call	_pad	;wreg free
 14764  010254  EF1D  F089         	goto	l2134
 14765  010258                     l11354:
 14766                           
 14767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14768                           ;stkvar	_g @ sp[(-56)+16]
 14769  010258  0ED8               	movlw	-40
 14770  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 14771  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 14772  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 14773  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 14774  010272  EC01  F0BD         	call	___fpclassifyf	;wreg free
 14775  010276  5001               	movf	btemp^0,w,c
 14776  010278  1002               	iorwf	(btemp+1)^0,w,c
 14777  01027A  A4D8               	btfss	status,2,c
 14778  01027C  D056               	goto	l11372
 14779  01027E  0EBF               	movlw	191
 14780  010280  6E0B               	movwf	(btemp+10)^0,c
 14781  010282  0EFF               	movlw	255
 14782  010284  6E0C               	movwf	(btemp+11)^0,c
 14783                           
 14784                           ;stkvar	_c @ sp[(-56)+-7]
 14785  010286  0EC1               	movlw	-63
 14786  010288  50E3               	movf	plusw1,w,c
 14787  01028A  6E09               	movwf	(btemp+8)^0,c
 14788  01028C  6A0A               	clrf	(btemp+9)^0,c
 14789  01028E  500B               	movf	(btemp+10)^0,w,c
 14790  010290  2609               	addwf	(btemp+8)^0,f,c
 14791  010292  500C               	movf	(btemp+11)^0,w,c
 14792  010294  220A               	addwfc	(btemp+9)^0,f,c
 14793  010296  500A               	movf	(btemp+9)^0,w,c
 14794  010298  E106               	bnz	u10510
 14795  01029A  0E1A               	movlw	26
 14796  01029C  5C09               	subwf	(btemp+8)^0,w,c
 14797  01029E  B0D8               	btfsc	status,0,c
 14798  0102A0  D002               	goto	u10510
 14799  0102A2  0E01               	movlw	1
 14800  0102A4  D001               	goto	u10520
 14801  0102A6                     u10510:
 14802  0102A6  0E00               	movlw	0
 14803  0102A8                     u10520:
 14804  0102A8  6E0B               	movwf	(btemp+10)^0,c
 14805  0102AA  6A0C               	clrf	(btemp+11)^0,c
 14806                           
 14807                           ;stkvar	_efgtoa$5304 @ sp[(-56)+6]
 14808  0102AC  0ECE               	movlw	-50
 14809  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14810  0102B4  0ECF               	movlw	-49
 14811  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14812                           
 14813                           ;stkvar	_efgtoa$5304 @ sp[(-56)+6]
 14814  0102BC  0ECE               	movlw	-50
 14815  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 14816  0102C4  0ECF               	movlw	-49
 14817  0102C6  50E3               	movf	plusw1,w,c
 14818  0102C8  1001               	iorwf	btemp^0,w,c
 14819  0102CA  B4D8               	btfsc	status,2,c
 14820  0102CC  D017               	goto	l11364
 14821                           
 14822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 14823  0102CE  0EDB               	movlw	low STR_60
 14824  0102D0  6EE6               	movwf	postinc1,c
 14825  0102D2  0EFF               	movlw	high STR_60
 14826  0102D4  6EE6               	movwf	postinc1,c
 14827                           
 14828                           ;stkvar	_n @ sp[(-58)+32]
 14829  0102D6  0E94               	movlw	low _dbuf
 14830  0102D8  6E0B               	movwf	(btemp+10)^0,c
 14831  0102DA  0E03               	movlw	high _dbuf
 14832  0102DC  6E0C               	movwf	(btemp+11)^0,c
 14833  0102DE  0EE6               	movlw	-26
 14834  0102E0  50E3               	movf	plusw1,w,c
 14835  0102E2  260B               	addwf	(btemp+10)^0,f,c
 14836  0102E4  0EE7               	movlw	-25
 14837  0102E6  50E3               	movf	plusw1,w,c
 14838  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 14839  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14840  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14841  0102F6  ECB4  F0C9         	call	_strcpy	;wreg free
 14842                           
 14843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 14844  0102FA  D78D               	goto	l11348
 14845  0102FC                     l11364:
 14846                           
 14847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 14848  0102FC  0EE3               	movlw	low STR_61
 14849  0102FE  6EE6               	movwf	postinc1,c
 14850  010300  0EFF               	movlw	high STR_61
 14851  010302  6EE6               	movwf	postinc1,c
 14852                           
 14853                           ;stkvar	_n @ sp[(-58)+32]
 14854  010304  0E94               	movlw	low _dbuf
 14855  010306  6E0B               	movwf	(btemp+10)^0,c
 14856  010308  0E03               	movlw	high _dbuf
 14857  01030A  6E0C               	movwf	(btemp+11)^0,c
 14858  01030C  0EE6               	movlw	-26
 14859  01030E  50E3               	movf	plusw1,w,c
 14860  010310  260B               	addwf	(btemp+10)^0,f,c
 14861  010312  0EE7               	movlw	-25
 14862  010314  50E3               	movf	plusw1,w,c
 14863  010316  220C               	addwfc	(btemp+11)^0,f,c
 14864  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14865  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14866  010324  ECB4  F0C9         	call	_strcpy	;wreg free
 14867  010328  D776               	goto	l11348
 14868  01032A                     l11372:
 14869                           
 14870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 14871  01032A  0E00               	movlw	0
 14872  01032C  6E09               	movwf	(btemp+8)^0,c
 14873  01032E  0E00               	movlw	0
 14874  010330  6E0A               	movwf	(btemp+9)^0,c
 14875  010332  0E80               	movlw	128
 14876  010334  6E0B               	movwf	(btemp+10)^0,c
 14877  010336  0E3F               	movlw	63
 14878  010338  6E0C               	movwf	(btemp+11)^0,c
 14879                           
 14880                           ;stkvar	_u @ sp[(-56)+12]
 14881  01033A  0ED4               	movlw	-44
 14882  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14883  010342  0ED5               	movlw	-43
 14884  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14885  01034A  0ED6               	movlw	-42
 14886  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14887  010352  0ED7               	movlw	-41
 14888  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 14889                           
 14890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 14891                           ;stkvar	_e @ sp[(-56)+34]
 14892  01035A  0EEA               	movlw	-22
 14893  01035C  6AE3               	clrf	plusw1,c
 14894  01035E  0EEB               	movlw	-21
 14895  010360  6AE3               	clrf	plusw1,c
 14896                           
 14897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 14898  010362  0E00               	movlw	0
 14899  010364  6EE6               	movwf	postinc1,c
 14900  010366  0E00               	movlw	0
 14901  010368  6EE6               	movwf	postinc1,c
 14902  01036A  0E00               	movlw	0
 14903  01036C  6EE6               	movwf	postinc1,c
 14904  01036E  0E00               	movlw	0
 14905  010370  6EE6               	movwf	postinc1,c
 14906                           
 14907                           ;stkvar	_g @ sp[(-60)+16]
 14908  010372  0ED4               	movlw	-44
 14909  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 14910  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 14911  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 14912  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 14913  01038C  EC1E  F0CA         	call	___fleq	;wreg free
 14914  010390  A001               	btfss	btemp& (0+255),0,c
 14915  010392  D039               	goto	l11384
 14916  010394  D0BC               	goto	u10560
 14917  010396                     l11380:
 14918                           
 14919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 14920  010396  0E00               	movlw	0
 14921  010398  6EE6               	movwf	postinc1,c
 14922  01039A  0E00               	movlw	0
 14923  01039C  6EE6               	movwf	postinc1,c
 14924  01039E  0E20               	movlw	32
 14925  0103A0  6EE6               	movwf	postinc1,c
 14926  0103A2  0E41               	movlw	65
 14927  0103A4  6EE6               	movwf	postinc1,c
 14928                           
 14929                           ;stkvar	_u @ sp[(-60)+12]
 14930  0103A6  0ED0               	movlw	-48
 14931  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14932  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14933  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14934  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14935  0103C0  EC0D  F097         	call	___flmul	;wreg free
 14936                           
 14937                           ;stkvar	_u @ sp[(-56)+12]
 14938  0103C4  0ED4               	movlw	-44
 14939  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 14940  0103CC  0ED5               	movlw	-43
 14941  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14942  0103D4  0ED6               	movlw	-42
 14943  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14944  0103DC  0ED7               	movlw	-41
 14945  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14946                           
 14947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 14948                           ;stkvar	_e @ sp[(-56)+34]
 14949  0103E4  0EEA               	movlw	-22
 14950  0103E6  50E3               	movf	plusw1,w,c
 14951  0103E8  0F01               	addlw	1
 14952  0103EA  6E01               	movwf	btemp^0,c
 14953  0103EC  0EEA               	movlw	-22
 14954  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 14955  0103F4  6A01               	clrf	btemp^0,c
 14956  0103F6  0EEB               	movlw	-21
 14957  0103F8  50E3               	movf	plusw1,w,c
 14958  0103FA  2001               	addwfc	btemp^0,w,c
 14959  0103FC  6E01               	movwf	btemp^0,c
 14960  0103FE  0EEB               	movlw	-21
 14961  010400  0060  F007  FFE3   	movff	btemp,plusw1
 14962  010406                     l11384:
 14963                           
 14964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 14965  010406  0E00               	movlw	0
 14966  010408  6EE6               	movwf	postinc1,c
 14967  01040A  0E00               	movlw	0
 14968  01040C  6EE6               	movwf	postinc1,c
 14969  01040E  0E20               	movlw	32
 14970  010410  6EE6               	movwf	postinc1,c
 14971  010412  0E41               	movlw	65
 14972  010414  6EE6               	movwf	postinc1,c
 14973                           
 14974                           ;stkvar	_u @ sp[(-60)+12]
 14975  010416  0ED0               	movlw	-48
 14976  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 14977  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 14978  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 14979  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 14980  010430  EC0D  F097         	call	___flmul	;wreg free
 14981  010434  0060  F007  FFE6   	movff	btemp,postinc1
 14982  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14983  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14984  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 14985                           
 14986                           ;stkvar	_g @ sp[(-60)+16]
 14987  01044C  0ED4               	movlw	-44
 14988  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 14989  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 14990  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 14991  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 14992  010466  ECB7  F0C0         	call	___flge	;wreg free
 14993  01046A  A001               	btfss	btemp& (0+255),0,c
 14994  01046C  D032               	goto	l11390
 14995  01046E  D793               	goto	l11380
 14996  010470                     l11386:
 14997                           
 14998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 14999  010470  0E00               	movlw	0
 15000  010472  6EE6               	movwf	postinc1,c
 15001  010474  0E00               	movlw	0
 15002  010476  6EE6               	movwf	postinc1,c
 15003  010478  0E20               	movlw	32
 15004  01047A  6EE6               	movwf	postinc1,c
 15005  01047C  0E41               	movlw	65
 15006  01047E  6EE6               	movwf	postinc1,c
 15007                           
 15008                           ;stkvar	_u @ sp[(-60)+12]
 15009  010480  0ED0               	movlw	-48
 15010  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15011  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15012  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15013  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15014  01049A  EC4F  F0A2         	call	___fldiv	;wreg free
 15015                           
 15016                           ;stkvar	_u @ sp[(-56)+12]
 15017  01049E  0ED4               	movlw	-44
 15018  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 15019  0104A6  0ED5               	movlw	-43
 15020  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15021  0104AE  0ED6               	movlw	-42
 15022  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15023  0104B6  0ED7               	movlw	-41
 15024  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15025                           
 15026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15027                           ;stkvar	_e @ sp[(-56)+34]
 15028  0104BE  50E1               	movf	fsr1l,w,c
 15029  0104C0  0FEA               	addlw	-22
 15030  0104C2  6ED9               	movwf	fsr2l,c
 15031  0104C4  50E2               	movf	fsr1h,w,c
 15032  0104C6  6EDA               	movwf	fsr2h,c
 15033  0104C8  0EFF               	movlw	255
 15034  0104CA  22DA               	addwfc	fsr2h,f,c
 15035  0104CC  06DE               	decf	postinc2,f,c
 15036  0104CE  0E00               	movlw	0
 15037  0104D0  5ADD               	subwfb	postdec2,f,c
 15038  0104D2                     l11390:
 15039                           
 15040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15041                           ;stkvar	_u @ sp[(-56)+12]
 15042  0104D2  0ED4               	movlw	-44
 15043  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15044  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15045  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15046  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15047                           
 15048                           ;stkvar	_g @ sp[(-60)+16]
 15049  0104EC  0ED4               	movlw	-44
 15050  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15051  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15052  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15053  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15054  010506  ECB7  F0C0         	call	___flge	;wreg free
 15055  01050A  A001               	btfss	btemp& (0+255),0,c
 15056  01050C  D7B1               	goto	l11386
 15057  01050E                     u10560:
 15058                           
 15059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15060                           ;stkvar	_c @ sp[(-56)+-7]
 15061  01050E  0EC1               	movlw	-63
 15062  010510  50E3               	movf	plusw1,w,c
 15063  010512  6EE6               	movwf	postinc1,c
 15064  010514  0E00               	movlw	0
 15065  010516  6EE6               	movwf	postinc1,c
 15066  010518  ECD5  F0CE         	call	_tolower	;wreg free
 15067                           
 15068                           ;stkvar	_mode @ sp[(-56)+54]
 15069  01051C  0EFE               	movlw	-2
 15070  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 15071                           
 15072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15073                           ;stkvar	_mode @ sp[(-56)+54]
 15074                           ;stkvar	_nmode @ sp[(-56)+55]
 15075  010524  0EFE               	movlw	-2
 15076  010526  006F FF8C  F001    	movff	plusw1,btemp
 15077  01052C  0EFF               	movlw	-1
 15078  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 15079                           
 15080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15081                           ;stkvar	_mode @ sp[(-56)+54]
 15082  010534  0EFE               	movlw	-2
 15083  010536  006F FF8C  F001    	movff	plusw1,btemp
 15084  01053C  0E67               	movlw	103
 15085  01053E  1801               	xorwf	btemp^0,w,c
 15086  010540  A4D8               	btfss	status,2,c
 15087  010542  D025               	goto	l11408
 15088                           
 15089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15090  010544  5023               	movf	_prec^0,w,c
 15091  010546  1024               	iorwf	(_prec+1)^0,w,c
 15092  010548  A4D8               	btfss	status,2,c
 15093  01054A  D004               	goto	l11402
 15094                           
 15095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15096  01054C  0E00               	movlw	0
 15097  01054E  6E24               	movwf	(_prec+1)^0,c
 15098  010550  0E01               	movlw	1
 15099  010552  6E23               	movwf	_prec^0,c
 15100  010554                     l11402:
 15101                           
 15102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15103  010554  BE24               	btfsc	(_prec+1)^0,7,c
 15104  010556  D005               	goto	u10590
 15105  010558  5024               	movf	(_prec+1)^0,w,c
 15106  01055A  E110               	bnz	l11406
 15107  01055C  0423               	decf	_prec^0,w,c
 15108  01055E  B0D8               	btfsc	status,0,c
 15109  010560  D00D               	goto	l11406
 15110  010562                     u10590:
 15111  010562  0E06               	movlw	6
 15112  010564  6E0B               	movwf	(btemp+10)^0,c
 15113  010566  0E00               	movlw	0
 15114  010568  6E0C               	movwf	(btemp+11)^0,c
 15115                           
 15116                           ;stkvar	_p @ sp[(-56)+40]
 15117  01056A  0EF0               	movlw	-16
 15118  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15119  010572  0EF1               	movlw	-15
 15120  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 15121  01057A  D00C               	goto	l11414
 15122  01057C                     l11406:
 15123                           
 15124                           ;stkvar	_p @ sp[(-56)+40]
 15125  01057C  0EF0               	movlw	-16
 15126  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 15127  010584  0EF1               	movlw	-15
 15128  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 15129  01058C  D003               	goto	l11414
 15130  01058E                     l11408:
 15131                           
 15132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15133  01058E  AE24               	btfss	(_prec+1)^0,7,c
 15134  010590  D7F5               	goto	l11406
 15135  010592  D7E7               	goto	u10590
 15136  010594                     l11414:
 15137                           
 15138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15139                           ;stkvar	_mode @ sp[(-56)+54]
 15140  010594  0EFE               	movlw	-2
 15141  010596  006F FF8C  F001    	movff	plusw1,btemp
 15142  01059C  0E67               	movlw	103
 15143  01059E  1801               	xorwf	btemp^0,w,c
 15144  0105A0  A4D8               	btfss	status,2,c
 15145  0105A2  D02F               	goto	l11424
 15146                           
 15147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15148                           ;stkvar	_e @ sp[(-56)+34]
 15149  0105A4  0EEB               	movlw	-21
 15150  0105A6  AEE3               	btfss	plusw1,7,c
 15151  0105A8  D00E               	goto	u10620
 15152  0105AA  0EEA               	movlw	-22
 15153  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 15154  0105B2  0EFC               	movlw	252
 15155  0105B4  5E01               	subwf	btemp^0,f,c
 15156  0105B6  0EEB               	movlw	-21
 15157  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 15158  0105BE  0EFF               	movlw	255
 15159  0105C0  5A01               	subwfb	btemp^0,f,c
 15160  0105C2  A0D8               	btfss	status,0,c
 15161  0105C4  D018               	goto	l11422
 15162  0105C6                     u10620:
 15163                           
 15164                           ;stkvar	_e @ sp[(-56)+34]
 15165                           ;stkvar	_p @ sp[(-56)+40]
 15166  0105C6  0EF0               	movlw	-16
 15167  0105C8  50E3               	movf	plusw1,w,c
 15168  0105CA  0FFF               	addlw	255
 15169  0105CC  6E0B               	movwf	(btemp+10)^0,c
 15170  0105CE  0EF1               	movlw	-15
 15171  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15172  0105D6  0EFF               	movlw	255
 15173  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 15174  0105DA  0EEA               	movlw	-22
 15175  0105DC  50E3               	movf	plusw1,w,c
 15176  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 15177  0105E0  500C               	movf	(btemp+11)^0,w,c
 15178  0105E2  0A80               	xorlw	128
 15179  0105E4  6E01               	movwf	btemp^0,c
 15180  0105E6  0EEB               	movlw	-21
 15181  0105E8  50E3               	movf	plusw1,w,c
 15182  0105EA  0A80               	xorlw	128
 15183  0105EC  5801               	subwfb	btemp^0,w,c
 15184  0105EE  A0D8               	btfss	status,0,c
 15185  0105F0  D002               	goto	l11422
 15186                           
 15187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15188  0105F2  0E66               	movlw	102
 15189  0105F4  D001               	goto	L12
 15190  0105F6                     l11422:
 15191                           
 15192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15193  0105F6  0E65               	movlw	101
 15194  0105F8                     L12:
 15195  0105F8  6E0C               	movwf	(btemp+11)^0,c
 15196                           
 15197                           ;stkvar	_nmode @ sp[(-56)+55]
 15198  0105FA  0EFF               	movlw	-1
 15199  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15200  010602                     l11424:
 15201                           
 15202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15203                           ;stkvar	_p @ sp[(-56)+40]
 15204                           ;stkvar	_m @ sp[(-56)+48]
 15205  010602  0EF0               	movlw	-16
 15206  010604  006F FF8C  F001    	movff	plusw1,btemp
 15207  01060A  0EF8               	movlw	-8
 15208  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 15209  010612  0EF1               	movlw	-15
 15210  010614  006F FF8C  F001    	movff	plusw1,btemp
 15211  01061A  0EF9               	movlw	-7
 15212  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 15213                           
 15214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15215                           ;stkvar	_mode @ sp[(-56)+54]
 15216  010622  0EFE               	movlw	-2
 15217  010624  006F FF8C  F001    	movff	plusw1,btemp
 15218  01062A  0E67               	movlw	103
 15219  01062C  1801               	xorwf	btemp^0,w,c
 15220  01062E  A4D8               	btfss	status,2,c
 15221  010630  D00B               	goto	u10660
 15222                           
 15223                           ;stkvar	_nmode @ sp[(-56)+55]
 15224  010632  0EFF               	movlw	-1
 15225  010634  006F FF8C  F001    	movff	plusw1,btemp
 15226  01063A  0E66               	movlw	102
 15227  01063C  1801               	xorwf	btemp^0,w,c
 15228  01063E  A4D8               	btfss	status,2,c
 15229  010640  D014               	goto	l2163
 15230                           
 15231                           ;stkvar	_e @ sp[(-56)+34]
 15232  010642  0EEB               	movlw	-21
 15233  010644  AEE3               	btfss	plusw1,7,c
 15234  010646  D011               	goto	l2163
 15235  010648                     u10660:
 15236                           
 15237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 15238                           ;stkvar	_m @ sp[(-56)+48]
 15239  010648  0EF8               	movlw	-8
 15240  01064A  50E3               	movf	plusw1,w,c
 15241  01064C  0F01               	addlw	1
 15242  01064E  6E01               	movwf	btemp^0,c
 15243  010650  0EF8               	movlw	-8
 15244  010652  0060  F007  FFE3   	movff	btemp,plusw1
 15245  010658  6A01               	clrf	btemp^0,c
 15246  01065A  0EF9               	movlw	-7
 15247  01065C  50E3               	movf	plusw1,w,c
 15248  01065E  2001               	addwfc	btemp^0,w,c
 15249  010660  6E01               	movwf	btemp^0,c
 15250  010662  0EF9               	movlw	-7
 15251  010664  0060  F007  FFE3   	movff	btemp,plusw1
 15252  01066A                     l2163:
 15253                           
 15254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 15255                           ;stkvar	_nmode @ sp[(-56)+55]
 15256  01066A  0EFF               	movlw	-1
 15257  01066C  006F FF8C  F001    	movff	plusw1,btemp
 15258  010672  0E66               	movlw	102
 15259  010674  1801               	xorwf	btemp^0,w,c
 15260  010676  A4D8               	btfss	status,2,c
 15261  010678  D03B               	goto	l11444
 15262                           
 15263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 15264                           ;stkvar	_e @ sp[(-56)+34]
 15265  01067A  0EEB               	movlw	-21
 15266  01067C  AEE3               	btfss	plusw1,7,c
 15267  01067E  D01C               	goto	l11440
 15268                           
 15269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 15270  010680  0E00               	movlw	0
 15271  010682  6E09               	movwf	(btemp+8)^0,c
 15272  010684  0E00               	movlw	0
 15273  010686  6E0A               	movwf	(btemp+9)^0,c
 15274  010688  0E80               	movlw	128
 15275  01068A  6E0B               	movwf	(btemp+10)^0,c
 15276  01068C  0E3F               	movlw	63
 15277  01068E  6E0C               	movwf	(btemp+11)^0,c
 15278                           
 15279                           ;stkvar	_u @ sp[(-56)+12]
 15280  010690  0ED4               	movlw	-44
 15281  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 15282  010698  0ED5               	movlw	-43
 15283  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15284  0106A0  0ED6               	movlw	-42
 15285  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15286  0106A8  0ED7               	movlw	-41
 15287  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15288                           
 15289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 15290                           ;stkvar	_e @ sp[(-56)+34]
 15291  0106B0  0EEA               	movlw	-22
 15292  0106B2  6AE3               	clrf	plusw1,c
 15293  0106B4  0EEB               	movlw	-21
 15294  0106B6  6AE3               	clrf	plusw1,c
 15295  0106B8                     l11440:
 15296                           
 15297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 15298                           ;stkvar	_mode @ sp[(-56)+54]
 15299  0106B8  0EFE               	movlw	-2
 15300  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 15301  0106C0  0E67               	movlw	103
 15302  0106C2  1801               	xorwf	btemp^0,w,c
 15303  0106C4  B4D8               	btfsc	status,2,c
 15304  0106C6  D014               	goto	l11444
 15305                           
 15306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 15307                           ;stkvar	_e @ sp[(-56)+34]
 15308                           ;stkvar	_m @ sp[(-56)+48]
 15309  0106C8  0EF8               	movlw	-8
 15310  0106CA  50E3               	movf	plusw1,w,c
 15311  0106CC  6E01               	movwf	btemp^0,c
 15312  0106CE  0EEA               	movlw	-22
 15313  0106D0  50E3               	movf	plusw1,w,c
 15314  0106D2  2601               	addwf	btemp^0,f,c
 15315  0106D4  0EF8               	movlw	-8
 15316  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 15317  0106DC  0EF9               	movlw	-7
 15318  0106DE  50E3               	movf	plusw1,w,c
 15319  0106E0  6E01               	movwf	btemp^0,c
 15320  0106E2  0EEB               	movlw	-21
 15321  0106E4  50E3               	movf	plusw1,w,c
 15322  0106E6  2201               	addwfc	btemp^0,f,c
 15323  0106E8  0EF9               	movlw	-7
 15324  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 15325  0106F0                     l11444:
 15326                           
 15327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 15328                           ;stkvar	_i @ sp[(-56)+36]
 15329  0106F0  0EEC               	movlw	-20
 15330  0106F2  6AE3               	clrf	plusw1,c
 15331  0106F4  0EED               	movlw	-19
 15332  0106F6  6AE3               	clrf	plusw1,c
 15333                           
 15334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 15335                           ;stkvar	_g @ sp[(-56)+16]
 15336  0106F8  0ED8               	movlw	-40
 15337  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 15338  010700  0ED9               	movlw	-39
 15339  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 15340  010708  0EDA               	movlw	-38
 15341  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15342  010710  0EDB               	movlw	-37
 15343  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 15344                           
 15345                           ;stkvar	_h @ sp[(-56)+24]
 15346  010718  0EE0               	movlw	-32
 15347  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15348  010720  0EE1               	movlw	-31
 15349  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15350  010728  0EE2               	movlw	-30
 15351  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15352  010730  0EE3               	movlw	-29
 15353  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 15354                           
 15355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 15356                           ;stkvar	_u @ sp[(-56)+12]
 15357  010738  0ED4               	movlw	-44
 15358  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 15359  010740  0ED5               	movlw	-43
 15360  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 15361  010748  0ED6               	movlw	-42
 15362  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15363  010750  0ED7               	movlw	-41
 15364  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 15365                           
 15366                           ;stkvar	_ou @ sp[(-56)+28]
 15367  010758  0EE4               	movlw	-28
 15368  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15369  010760  0EE5               	movlw	-27
 15370  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15371  010768  0EE6               	movlw	-26
 15372  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15373  010770  0EE7               	movlw	-25
 15374  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 15375                           
 15376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15377  010778  D0D6               	goto	l11460
 15378  01077A                     l11450:
 15379                           
 15380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 15381                           ;stkvar	_u @ sp[(-56)+12]
 15382  01077A  0ED4               	movlw	-44
 15383  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 15384  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 15385  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 15386  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15387                           
 15388                           ;stkvar	_h @ sp[(-60)+24]
 15389  010794  0EDC               	movlw	-36
 15390  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15391  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15392  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15393  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15394  0107AE  EC4F  F0A2         	call	___fldiv	;wreg free
 15395  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15396  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15397  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15398  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15399  0107CA  EC50  F0AD         	call	_floorf	;wreg free
 15400                           
 15401                           ;stkvar	_l @ sp[(-56)+20]
 15402  0107CE  0EDC               	movlw	-36
 15403  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15404  0107D6  0EDD               	movlw	-35
 15405  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15406  0107DE  0EDE               	movlw	-34
 15407  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15408  0107E6  0EDF               	movlw	-33
 15409  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15410                           
 15411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15412                           ;stkvar	_l @ sp[(-56)+20]
 15413  0107EE  0EDC               	movlw	-36
 15414  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15415  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15416  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15417  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15418  010808  EC46  F0BF         	call	___fltol	;wreg free
 15419  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15420  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15421                           
 15422                           ;stkvar	_d @ sp[(-56)+44]
 15423  010818  0EF4               	movlw	-12
 15424  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15425  010820  0EF5               	movlw	-11
 15426  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15427                           
 15428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15429                           ;stkvar	_u @ sp[(-56)+12]
 15430  010828  0ED4               	movlw	-44
 15431  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15432  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15433  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15434  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15435                           
 15436                           ;stkvar	_l @ sp[(-60)+20]
 15437  010842  0ED8               	movlw	-40
 15438  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15439  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15440  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15441  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15442  01085C  EC0D  F097         	call	___flmul	;wreg free
 15443  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15444  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15445  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15446  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15447                           
 15448                           ;stkvar	_h @ sp[(-60)+24]
 15449  010878  0EDC               	movlw	-36
 15450  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15451  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15452  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15453  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15454  010892  EC81  F0D2         	call	___flsub	;wreg free
 15455                           
 15456                           ;stkvar	_h @ sp[(-56)+24]
 15457  010896  0EE0               	movlw	-32
 15458  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15459  01089E  0EE1               	movlw	-31
 15460  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15461  0108A6  0EE2               	movlw	-30
 15462  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15463  0108AE  0EE3               	movlw	-29
 15464  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15465                           
 15466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15467  0108B6  0E00               	movlw	0
 15468  0108B8  6EE6               	movwf	postinc1,c
 15469  0108BA  0E00               	movlw	0
 15470  0108BC  6EE6               	movwf	postinc1,c
 15471  0108BE  0E20               	movlw	32
 15472  0108C0  6EE6               	movwf	postinc1,c
 15473  0108C2  0E41               	movlw	65
 15474  0108C4  6EE6               	movwf	postinc1,c
 15475                           
 15476                           ;stkvar	_u @ sp[(-60)+12]
 15477  0108C6  0ED0               	movlw	-48
 15478  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15479  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15480  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15481  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15482  0108E0  EC4F  F0A2         	call	___fldiv	;wreg free
 15483                           
 15484                           ;stkvar	_u @ sp[(-56)+12]
 15485  0108E4  0ED4               	movlw	-44
 15486  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15487  0108EC  0ED5               	movlw	-43
 15488  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15489  0108F4  0ED6               	movlw	-42
 15490  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15491  0108FC  0ED7               	movlw	-41
 15492  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15493                           
 15494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15495                           ;stkvar	_i @ sp[(-56)+36]
 15496  010904  0EEC               	movlw	-20
 15497  010906  50E3               	movf	plusw1,w,c
 15498  010908  0F01               	addlw	1
 15499  01090A  6E01               	movwf	btemp^0,c
 15500  01090C  0EEC               	movlw	-20
 15501  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15502  010914  6A01               	clrf	btemp^0,c
 15503  010916  0EED               	movlw	-19
 15504  010918  50E3               	movf	plusw1,w,c
 15505  01091A  2001               	addwfc	btemp^0,w,c
 15506  01091C  6E01               	movwf	btemp^0,c
 15507  01091E  0EED               	movlw	-19
 15508  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15509  010926                     l11460:
 15510                           
 15511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15512                           ;stkvar	_m @ sp[(-56)+48]
 15513                           ;stkvar	_i @ sp[(-56)+36]
 15514  010926  50E1               	movf	fsr1l,w,c
 15515  010928  0FEC               	addlw	-20
 15516  01092A  6ED9               	movwf	fsr2l,c
 15517  01092C  50E2               	movf	fsr1h,w,c
 15518  01092E  6EDA               	movwf	fsr2h,c
 15519  010930  0EFF               	movlw	255
 15520  010932  22DA               	addwfc	fsr2h,f,c
 15521  010934  0EF8               	movlw	-8
 15522  010936  50E3               	movf	plusw1,w,c
 15523  010938  5CDE               	subwf	postinc2,w,c
 15524  01093A  50DE               	movf	postinc2,w,c
 15525  01093C  0A80               	xorlw	128
 15526  01093E  6E01               	movwf	btemp^0,c
 15527  010940  0EF9               	movlw	-7
 15528  010942  50E3               	movf	plusw1,w,c
 15529  010944  0A80               	xorlw	128
 15530  010946  5801               	subwfb	btemp^0,w,c
 15531  010948  A0D8               	btfss	status,0,c
 15532  01094A  D717               	goto	l11450
 15533                           
 15534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15535  01094C  0E00               	movlw	0
 15536  01094E  6EE6               	movwf	postinc1,c
 15537  010950  0E00               	movlw	0
 15538  010952  6EE6               	movwf	postinc1,c
 15539  010954  0EA0               	movlw	160
 15540  010956  6EE6               	movwf	postinc1,c
 15541  010958  0E40               	movlw	64
 15542  01095A  6EE6               	movwf	postinc1,c
 15543                           
 15544                           ;stkvar	_u @ sp[(-60)+12]
 15545  01095C  0ED0               	movlw	-48
 15546  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15547  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15548  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15549  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15550  010976  EC0D  F097         	call	___flmul	;wreg free
 15551                           
 15552                           ;stkvar	_l @ sp[(-56)+20]
 15553  01097A  0EDC               	movlw	-36
 15554  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15555  010982  0EDD               	movlw	-35
 15556  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15557  01098A  0EDE               	movlw	-34
 15558  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15559  010992  0EDF               	movlw	-33
 15560  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15561                           
 15562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15563                           ;stkvar	_l @ sp[(-56)+20]
 15564  01099A  0EDC               	movlw	-36
 15565  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15566  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15567  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15568  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15569                           
 15570                           ;stkvar	_h @ sp[(-60)+24]
 15571  0109B4  0EDC               	movlw	-36
 15572  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15573  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15574  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15575  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15576  0109CE  ECB7  F0C0         	call	___flge	;wreg free
 15577  0109D2  A001               	btfss	btemp& (0+255),0,c
 15578  0109D4  D021               	goto	u10730
 15579                           
 15580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15581                           ;stkvar	_l @ sp[(-56)+20]
 15582                           
 15583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15584                           
 15585                           ;stkvar	_l @ sp[(-56)+20]
 15586                           
 15587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 15588  0109D6  0EDC               	movlw	-36
 15589  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 15590  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 15591  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 15592  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15593                           
 15594                           ;stkvar	_h @ sp[(-60)+24]
 15595  0109F0  0EDC               	movlw	-36
 15596  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 15597  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 15598  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15599  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 15600  010A0A  EC1E  F0CA         	call	___fleq	;wreg free
 15601  010A0E  A001               	btfss	btemp& (0+255),0,c
 15602  010A10  D01B               	goto	l11474
 15603                           
 15604                           ;stkvar	_d @ sp[(-56)+44]
 15605  010A12  0EF4               	movlw	-12
 15606  010A14  B0E3               	btfsc	plusw1,0,c
 15607  010A16  D018               	goto	l11474
 15608  010A18                     u10730:
 15609                           
 15610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 15611  010A18  0E00               	movlw	0
 15612  010A1A  6E09               	movwf	(btemp+8)^0,c
 15613  010A1C  0E00               	movlw	0
 15614  010A1E  6E0A               	movwf	(btemp+9)^0,c
 15615  010A20  0E00               	movlw	0
 15616  010A22  6E0B               	movwf	(btemp+10)^0,c
 15617  010A24  0E00               	movlw	0
 15618  010A26  6E0C               	movwf	(btemp+11)^0,c
 15619                           
 15620                           ;stkvar	_l @ sp[(-56)+20]
 15621  010A28  0EDC               	movlw	-36
 15622  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15623  010A30  0EDD               	movlw	-35
 15624  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15625  010A38  0EDE               	movlw	-34
 15626  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15627  010A40  0EDF               	movlw	-33
 15628  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 15629  010A48                     l11474:
 15630                           
 15631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 15632                           ;stkvar	_l @ sp[(-56)+20]
 15633  010A48  0EDC               	movlw	-36
 15634  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15635  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 15636  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 15637  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15638                           
 15639                           ;stkvar	_g @ sp[(-60)+16]
 15640  010A62  0ED4               	movlw	-44
 15641  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 15642  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15643  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 15644  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15645  010A7C  EC22  F09B         	call	___fladd	;wreg free
 15646                           
 15647                           ;stkvar	_h @ sp[(-56)+24]
 15648  010A80  0EE0               	movlw	-32
 15649  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 15650  010A88  0EE1               	movlw	-31
 15651  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15652  010A90  0EE2               	movlw	-30
 15653  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15654  010A98  0EE3               	movlw	-29
 15655  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 15656                           
 15657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 15658                           ;stkvar	_ou @ sp[(-56)+28]
 15659  010AA0  0EE4               	movlw	-28
 15660  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 15661  010AA8  0EE5               	movlw	-27
 15662  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15663  010AB0  0EE6               	movlw	-26
 15664  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15665  010AB8  0EE7               	movlw	-25
 15666  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15667                           
 15668                           ;stkvar	_u @ sp[(-56)+12]
 15669  010AC0  0ED4               	movlw	-44
 15670  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15671  010AC8  0ED5               	movlw	-43
 15672  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15673  010AD0  0ED6               	movlw	-42
 15674  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15675  010AD8  0ED7               	movlw	-41
 15676  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15677                           
 15678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 15679                           ;stkvar	_nmode @ sp[(-56)+55]
 15680  010AE0  0EFF               	movlw	-1
 15681  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 15682  010AE8  0E65               	movlw	101
 15683  010AEA  1801               	xorwf	btemp^0,w,c
 15684  010AEC  B4D8               	btfsc	status,2,c
 15685  010AEE  D011               	goto	l11482
 15686                           
 15687                           ;stkvar	_e @ sp[(-56)+34]
 15688                           ;stkvar	_ne @ sp[(-56)+46]
 15689  010AF0  0EEA               	movlw	-22
 15690  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 15691  010AF8  0EF6               	movlw	-10
 15692  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 15693  010B00  0EEB               	movlw	-21
 15694  010B02  006F FF8C  F001    	movff	plusw1,btemp
 15695  010B08  0EF7               	movlw	-9
 15696  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 15697  010B10  D004               	goto	l2178
 15698  010B12                     l11482:
 15699                           
 15700                           ;stkvar	_ne @ sp[(-56)+46]
 15701  010B12  0EF6               	movlw	-10
 15702  010B14  6AE3               	clrf	plusw1,c
 15703  010B16  0EF7               	movlw	-9
 15704  010B18  6AE3               	clrf	plusw1,c
 15705  010B1A                     l2178:
 15706                           
 15707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 15708                           ;stkvar	_pp @ sp[(-56)+50]
 15709  010B1A  0EFA               	movlw	-6
 15710  010B1C  6AE3               	clrf	plusw1,c
 15711  010B1E  0EFB               	movlw	-5
 15712  010B20  6AE3               	clrf	plusw1,c
 15713                           
 15714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 15715                           ;stkvar	_t @ sp[(-56)+52]
 15716  010B22  0EFC               	movlw	-4
 15717  010B24  6AE3               	clrf	plusw1,c
 15718  010B26  0EFD               	movlw	-3
 15719  010B28  6AE3               	clrf	plusw1,c
 15720                           
 15721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 15722                           ;stkvar	_i @ sp[(-56)+36]
 15723  010B2A  0EEC               	movlw	-20
 15724  010B2C  6AE3               	clrf	plusw1,c
 15725  010B2E  0EED               	movlw	-19
 15726  010B30  6AE3               	clrf	plusw1,c
 15727                           
 15728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15729  010B32  D1B7               	goto	l11534
 15730  010B34                     l11484:
 15731                           
 15732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 15733                           ;stkvar	_u @ sp[(-56)+12]
 15734  010B34  0ED4               	movlw	-44
 15735  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 15736  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15737  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 15738  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 15739                           
 15740                           ;stkvar	_h @ sp[(-60)+24]
 15741  010B4E  0EDC               	movlw	-36
 15742  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 15743  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15744  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15745  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 15746  010B68  EC4F  F0A2         	call	___fldiv	;wreg free
 15747  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 15748  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15749  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15750  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 15751  010B84  EC50  F0AD         	call	_floorf	;wreg free
 15752                           
 15753                           ;stkvar	_l @ sp[(-56)+20]
 15754  010B88  0EDC               	movlw	-36
 15755  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 15756  010B90  0EDD               	movlw	-35
 15757  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15758  010B98  0EDE               	movlw	-34
 15759  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15760  010BA0  0EDF               	movlw	-33
 15761  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 15762                           
 15763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 15764                           ;stkvar	_l @ sp[(-56)+20]
 15765  010BA8  0EDC               	movlw	-36
 15766  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15767  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15768  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15769  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 15770  010BC2  EC46  F0BF         	call	___fltol	;wreg free
 15771  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 15772  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 15773                           
 15774                           ;stkvar	_d @ sp[(-56)+44]
 15775  010BD2  0EF4               	movlw	-12
 15776  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15777  010BDA  0EF5               	movlw	-11
 15778  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15779                           
 15780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 15781  010BE2  B825               	btfsc	_flags^0,4,c
 15782  010BE4  D026               	goto	l11498
 15783                           
 15784                           ;stkvar	_d @ sp[(-56)+44]
 15785  010BE6  0EF4               	movlw	-12
 15786  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 15787  010BEE  0EF5               	movlw	-11
 15788  010BF0  50E3               	movf	plusw1,w,c
 15789  010BF2  1001               	iorwf	btemp^0,w,c
 15790  010BF4  A4D8               	btfss	status,2,c
 15791  010BF6  D01D               	goto	l11498
 15792                           
 15793                           ;stkvar	_mode @ sp[(-56)+54]
 15794  010BF8  0EFE               	movlw	-2
 15795  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 15796  010C00  0E67               	movlw	103
 15797  010C02  1801               	xorwf	btemp^0,w,c
 15798  010C04  A4D8               	btfss	status,2,c
 15799  010C06  D015               	goto	l11498
 15800                           
 15801                           ;stkvar	_ne @ sp[(-56)+46]
 15802  010C08  0EF7               	movlw	-9
 15803  010C0A  AEE3               	btfss	plusw1,7,c
 15804  010C0C  D012               	goto	l11498
 15805                           
 15806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 15807                           ;stkvar	_t @ sp[(-56)+52]
 15808  010C0E  0EFC               	movlw	-4
 15809  010C10  50E3               	movf	plusw1,w,c
 15810  010C12  0F01               	addlw	1
 15811  010C14  6E01               	movwf	btemp^0,c
 15812  010C16  0EFC               	movlw	-4
 15813  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 15814  010C1E  6A01               	clrf	btemp^0,c
 15815  010C20  0EFD               	movlw	-3
 15816  010C22  50E3               	movf	plusw1,w,c
 15817  010C24  2001               	addwfc	btemp^0,w,c
 15818  010C26  6E01               	movwf	btemp^0,c
 15819  010C28  0EFD               	movlw	-3
 15820  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 15821                           
 15822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 15823  010C30  D0AF               	goto	l11526
 15824  010C32                     l11498:
 15825                           
 15826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 15827                           ;stkvar	_pp @ sp[(-56)+50]
 15828  010C32  0EFA               	movlw	-6
 15829  010C34  006F FF8C  F001    	movff	plusw1,btemp
 15830  010C3A  0EFB               	movlw	-5
 15831  010C3C  50E3               	movf	plusw1,w,c
 15832  010C3E  1001               	iorwf	btemp^0,w,c
 15833  010C40  A4D8               	btfss	status,2,c
 15834  010C42  D070               	goto	l11518
 15835                           
 15836                           ;stkvar	_ne @ sp[(-56)+46]
 15837  010C44  0EF7               	movlw	-9
 15838  010C46  AEE3               	btfss	plusw1,7,c
 15839  010C48  D06D               	goto	l11518
 15840                           
 15841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 15842                           ;stkvar	_n @ sp[(-56)+32]
 15843  010C4A  0EE8               	movlw	-24
 15844  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15845  010C52  0EE9               	movlw	-23
 15846  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 15847  010C5A  0E94               	movlw	low _dbuf
 15848  010C5C  240B               	addwf	(btemp+10)^0,w,c
 15849  010C5E  6ED9               	movwf	fsr2l,c
 15850  010C60  0E03               	movlw	high _dbuf
 15851  010C62  200C               	addwfc	(btemp+11)^0,w,c
 15852  010C64  6EDA               	movwf	fsr2h,c
 15853  010C66  0E2E               	movlw	46
 15854  010C68  6EDF               	movwf	indf2,c
 15855                           
 15856                           ;stkvar	_n @ sp[(-56)+32]
 15857  010C6A  0EE8               	movlw	-24
 15858  010C6C  50E3               	movf	plusw1,w,c
 15859  010C6E  0F01               	addlw	1
 15860  010C70  6E01               	movwf	btemp^0,c
 15861  010C72  0EE8               	movlw	-24
 15862  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 15863  010C7A  6A01               	clrf	btemp^0,c
 15864  010C7C  0EE9               	movlw	-23
 15865  010C7E  50E3               	movf	plusw1,w,c
 15866  010C80  2001               	addwfc	btemp^0,w,c
 15867  010C82  6E01               	movwf	btemp^0,c
 15868  010C84  0EE9               	movlw	-23
 15869  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 15870                           
 15871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 15872                           ;stkvar	_w @ sp[(-56)+38]
 15873  010C8C  50E1               	movf	fsr1l,w,c
 15874  010C8E  0FEE               	addlw	-18
 15875  010C90  6ED9               	movwf	fsr2l,c
 15876  010C92  50E2               	movf	fsr1h,w,c
 15877  010C94  6EDA               	movwf	fsr2h,c
 15878  010C96  0EFF               	movlw	255
 15879  010C98  22DA               	addwfc	fsr2h,f,c
 15880  010C9A  06DE               	decf	postinc2,f,c
 15881  010C9C  0E00               	movlw	0
 15882  010C9E  5ADD               	subwfb	postdec2,f,c
 15883                           
 15884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 15885  010CA0  0E01               	movlw	1
 15886  010CA2  6E0B               	movwf	(btemp+10)^0,c
 15887  010CA4  0E00               	movlw	0
 15888  010CA6  6E0C               	movwf	(btemp+11)^0,c
 15889                           
 15890                           ;stkvar	_pp @ sp[(-56)+50]
 15891  010CA8  0EFA               	movlw	-6
 15892  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15893  010CB0  0EFB               	movlw	-5
 15894  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15895  010CB8  D035               	goto	l11518
 15896  010CBA                     l11510:
 15897                           
 15898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 15899                           ;stkvar	_n @ sp[(-56)+32]
 15900  010CBA  0EE8               	movlw	-24
 15901  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15902  010CC2  0EE9               	movlw	-23
 15903  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15904  010CCA  0E94               	movlw	low _dbuf
 15905  010CCC  240B               	addwf	(btemp+10)^0,w,c
 15906  010CCE  6ED9               	movwf	fsr2l,c
 15907  010CD0  0E03               	movlw	high _dbuf
 15908  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 15909  010CD4  6EDA               	movwf	fsr2h,c
 15910  010CD6  0E30               	movlw	48
 15911  010CD8  6EDF               	movwf	indf2,c
 15912                           
 15913                           ;stkvar	_n @ sp[(-56)+32]
 15914  010CDA  0EE8               	movlw	-24
 15915  010CDC  50E3               	movf	plusw1,w,c
 15916  010CDE  0F01               	addlw	1
 15917  010CE0  6E01               	movwf	btemp^0,c
 15918  010CE2  0EE8               	movlw	-24
 15919  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 15920  010CEA  6A01               	clrf	btemp^0,c
 15921  010CEC  0EE9               	movlw	-23
 15922  010CEE  50E3               	movf	plusw1,w,c
 15923  010CF0  2001               	addwfc	btemp^0,w,c
 15924  010CF2  6E01               	movwf	btemp^0,c
 15925  010CF4  0EE9               	movlw	-23
 15926  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 15927                           
 15928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 15929                           ;stkvar	_w @ sp[(-56)+38]
 15930  010CFC  50E1               	movf	fsr1l,w,c
 15931  010CFE  0FEE               	addlw	-18
 15932  010D00  6ED9               	movwf	fsr2l,c
 15933  010D02  50E2               	movf	fsr1h,w,c
 15934  010D04  6EDA               	movwf	fsr2h,c
 15935  010D06  0EFF               	movlw	255
 15936  010D08  22DA               	addwfc	fsr2h,f,c
 15937  010D0A  06DE               	decf	postinc2,f,c
 15938  010D0C  0E00               	movlw	0
 15939  010D0E  5ADD               	subwfb	postdec2,f,c
 15940                           
 15941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 15942                           ;stkvar	_t @ sp[(-56)+52]
 15943  010D10  50E1               	movf	fsr1l,w,c
 15944  010D12  0FFC               	addlw	-4
 15945  010D14  6ED9               	movwf	fsr2l,c
 15946  010D16  50E2               	movf	fsr1h,w,c
 15947  010D18  6EDA               	movwf	fsr2h,c
 15948  010D1A  0EFF               	movlw	255
 15949  010D1C  22DA               	addwfc	fsr2h,f,c
 15950  010D1E  06DE               	decf	postinc2,f,c
 15951  010D20  0E00               	movlw	0
 15952  010D22  5ADD               	subwfb	postdec2,f,c
 15953  010D24                     l11518:
 15954                           
 15955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 15956                           ;stkvar	_t @ sp[(-56)+52]
 15957  010D24  0EFC               	movlw	-4
 15958  010D26  006F FF8C  F001    	movff	plusw1,btemp
 15959  010D2C  0EFD               	movlw	-3
 15960  010D2E  50E3               	movf	plusw1,w,c
 15961  010D30  1001               	iorwf	btemp^0,w,c
 15962  010D32  A4D8               	btfss	status,2,c
 15963  010D34  D7C2               	goto	l11510
 15964                           
 15965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 15966                           ;stkvar	_n @ sp[(-56)+32]
 15967  010D36  0EE8               	movlw	-24
 15968  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 15969  010D3E  0EE9               	movlw	-23
 15970  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 15971  010D46  0E94               	movlw	low _dbuf
 15972  010D48  240B               	addwf	(btemp+10)^0,w,c
 15973  010D4A  6ED9               	movwf	fsr2l,c
 15974  010D4C  0E03               	movlw	high _dbuf
 15975  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 15976  010D50  6EDA               	movwf	fsr2h,c
 15977                           
 15978                           ;stkvar	_d @ sp[(-56)+44]
 15979  010D52  0EF4               	movlw	-12
 15980  010D54  50E3               	movf	plusw1,w,c
 15981  010D56  0F30               	addlw	48
 15982  010D58  6EDF               	movwf	indf2,c
 15983                           
 15984                           ;stkvar	_n @ sp[(-56)+32]
 15985  010D5A  0EE8               	movlw	-24
 15986  010D5C  50E3               	movf	plusw1,w,c
 15987  010D5E  0F01               	addlw	1
 15988  010D60  6E01               	movwf	btemp^0,c
 15989  010D62  0EE8               	movlw	-24
 15990  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 15991  010D6A  6A01               	clrf	btemp^0,c
 15992  010D6C  0EE9               	movlw	-23
 15993  010D6E  50E3               	movf	plusw1,w,c
 15994  010D70  2001               	addwfc	btemp^0,w,c
 15995  010D72  6E01               	movwf	btemp^0,c
 15996  010D74  0EE9               	movlw	-23
 15997  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 15998                           
 15999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16000                           ;stkvar	_w @ sp[(-56)+38]
 16001  010D7C  50E1               	movf	fsr1l,w,c
 16002  010D7E  0FEE               	addlw	-18
 16003  010D80  6ED9               	movwf	fsr2l,c
 16004  010D82  50E2               	movf	fsr1h,w,c
 16005  010D84  6EDA               	movwf	fsr2h,c
 16006  010D86  0EFF               	movlw	255
 16007  010D88  22DA               	addwfc	fsr2h,f,c
 16008  010D8A  06DE               	decf	postinc2,f,c
 16009  010D8C  0E00               	movlw	0
 16010  010D8E  5ADD               	subwfb	postdec2,f,c
 16011  010D90                     l11526:
 16012                           
 16013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16014                           ;stkvar	_u @ sp[(-56)+12]
 16015  010D90  0ED4               	movlw	-44
 16016  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16017  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16018  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16019  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16020                           
 16021                           ;stkvar	_l @ sp[(-60)+20]
 16022  010DAA  0ED8               	movlw	-40
 16023  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16024  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16025  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16026  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16027  010DC4  EC0D  F097         	call	___flmul	;wreg free
 16028  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 16029  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16030  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16031  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 16032                           
 16033                           ;stkvar	_h @ sp[(-60)+24]
 16034  010DE0  0EDC               	movlw	-36
 16035  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16036  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16037  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16038  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16039  010DFA  EC81  F0D2         	call	___flsub	;wreg free
 16040                           
 16041                           ;stkvar	_h @ sp[(-56)+24]
 16042  010DFE  0EE0               	movlw	-32
 16043  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 16044  010E06  0EE1               	movlw	-31
 16045  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16046  010E0E  0EE2               	movlw	-30
 16047  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16048  010E16  0EE3               	movlw	-29
 16049  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 16050                           
 16051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16052  010E1E  0E00               	movlw	0
 16053  010E20  6EE6               	movwf	postinc1,c
 16054  010E22  0E00               	movlw	0
 16055  010E24  6EE6               	movwf	postinc1,c
 16056  010E26  0E20               	movlw	32
 16057  010E28  6EE6               	movwf	postinc1,c
 16058  010E2A  0E41               	movlw	65
 16059  010E2C  6EE6               	movwf	postinc1,c
 16060                           
 16061                           ;stkvar	_u @ sp[(-60)+12]
 16062  010E2E  0ED0               	movlw	-48
 16063  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16064  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16065  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16066  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16067  010E48  EC4F  F0A2         	call	___fldiv	;wreg free
 16068                           
 16069                           ;stkvar	_u @ sp[(-56)+12]
 16070  010E4C  0ED4               	movlw	-44
 16071  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 16072  010E54  0ED5               	movlw	-43
 16073  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16074  010E5C  0ED6               	movlw	-42
 16075  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16076  010E64  0ED7               	movlw	-41
 16077  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 16078                           
 16079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16080                           ;stkvar	_ne @ sp[(-56)+46]
 16081  010E6C  50E1               	movf	fsr1l,w,c
 16082  010E6E  0FF6               	addlw	-10
 16083  010E70  6ED9               	movwf	fsr2l,c
 16084  010E72  50E2               	movf	fsr1h,w,c
 16085  010E74  6EDA               	movwf	fsr2h,c
 16086  010E76  0EFF               	movlw	255
 16087  010E78  22DA               	addwfc	fsr2h,f,c
 16088  010E7A  06DE               	decf	postinc2,f,c
 16089  010E7C  0E00               	movlw	0
 16090  010E7E  5ADD               	subwfb	postdec2,f,c
 16091                           
 16092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16093                           ;stkvar	_i @ sp[(-56)+36]
 16094  010E80  0EEC               	movlw	-20
 16095  010E82  50E3               	movf	plusw1,w,c
 16096  010E84  0F01               	addlw	1
 16097  010E86  6E01               	movwf	btemp^0,c
 16098  010E88  0EEC               	movlw	-20
 16099  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 16100  010E90  6A01               	clrf	btemp^0,c
 16101  010E92  0EED               	movlw	-19
 16102  010E94  50E3               	movf	plusw1,w,c
 16103  010E96  2001               	addwfc	btemp^0,w,c
 16104  010E98  6E01               	movwf	btemp^0,c
 16105  010E9A  0EED               	movlw	-19
 16106  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 16107  010EA2                     l11534:
 16108                           
 16109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16110                           ;stkvar	_m @ sp[(-56)+48]
 16111                           ;stkvar	_i @ sp[(-56)+36]
 16112  010EA2  50E1               	movf	fsr1l,w,c
 16113  010EA4  0FEC               	addlw	-20
 16114  010EA6  6ED9               	movwf	fsr2l,c
 16115  010EA8  50E2               	movf	fsr1h,w,c
 16116  010EAA  6EDA               	movwf	fsr2h,c
 16117  010EAC  0EFF               	movlw	255
 16118  010EAE  22DA               	addwfc	fsr2h,f,c
 16119  010EB0  0EF8               	movlw	-8
 16120  010EB2  50E3               	movf	plusw1,w,c
 16121  010EB4  5CDE               	subwf	postinc2,w,c
 16122  010EB6  50DE               	movf	postinc2,w,c
 16123  010EB8  0A80               	xorlw	128
 16124  010EBA  6E01               	movwf	btemp^0,c
 16125  010EBC  0EF9               	movlw	-7
 16126  010EBE  50E3               	movf	plusw1,w,c
 16127  010EC0  0A80               	xorlw	128
 16128  010EC2  5801               	subwfb	btemp^0,w,c
 16129  010EC4  B0D8               	btfsc	status,0,c
 16130  010EC6  D00E               	goto	u10830
 16131                           
 16132                           ;stkvar	_n @ sp[(-56)+32]
 16133  010EC8  0EE9               	movlw	-23
 16134  010ECA  BEE3               	btfsc	plusw1,7,c
 16135  010ECC  D633               	goto	l11484
 16136  010ECE  0EE9               	movlw	-23
 16137  010ED0  50E3               	movf	plusw1,w,c
 16138  010ED2  E108               	bnz	u10830
 16139  010ED4  0EE8               	movlw	-24
 16140  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 16141  010EDC  0E4B               	movlw	75
 16142  010EDE  5E01               	subwf	btemp^0,f,c
 16143  010EE0  A0D8               	btfss	status,0,c
 16144  010EE2  D628               	goto	l11484
 16145  010EE4                     u10830:
 16146                           
 16147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16148                           ;stkvar	_pp @ sp[(-56)+50]
 16149  010EE4  0EFA               	movlw	-6
 16150  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 16151  010EEC  0EFB               	movlw	-5
 16152  010EEE  50E3               	movf	plusw1,w,c
 16153  010EF0  1001               	iorwf	btemp^0,w,c
 16154  010EF2  B4D8               	btfsc	status,2,c
 16155  010EF4  A825               	btfss	_flags^0,4,c
 16156  010EF6  D021               	goto	l11546
 16157                           
 16158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16159                           ;stkvar	_n @ sp[(-56)+32]
 16160  010EF8  0EE8               	movlw	-24
 16161  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16162  010F00  0EE9               	movlw	-23
 16163  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16164  010F08  0E94               	movlw	low _dbuf
 16165  010F0A  240B               	addwf	(btemp+10)^0,w,c
 16166  010F0C  6ED9               	movwf	fsr2l,c
 16167  010F0E  0E03               	movlw	high _dbuf
 16168  010F10  200C               	addwfc	(btemp+11)^0,w,c
 16169  010F12  6EDA               	movwf	fsr2h,c
 16170  010F14  0E2E               	movlw	46
 16171  010F16  6EDF               	movwf	indf2,c
 16172                           
 16173                           ;stkvar	_n @ sp[(-56)+32]
 16174  010F18  0EE8               	movlw	-24
 16175  010F1A  50E3               	movf	plusw1,w,c
 16176  010F1C  0F01               	addlw	1
 16177  010F1E  6E01               	movwf	btemp^0,c
 16178  010F20  0EE8               	movlw	-24
 16179  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 16180  010F28  6A01               	clrf	btemp^0,c
 16181  010F2A  0EE9               	movlw	-23
 16182  010F2C  50E3               	movf	plusw1,w,c
 16183  010F2E  2001               	addwfc	btemp^0,w,c
 16184  010F30  6E01               	movwf	btemp^0,c
 16185  010F32  0EE9               	movlw	-23
 16186  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 16187  010F3A                     l11546:
 16188                           
 16189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16190                           ;stkvar	_n @ sp[(-56)+32]
 16191  010F3A  0EE8               	movlw	-24
 16192  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16193  010F42  0EE9               	movlw	-23
 16194  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 16195  010F4A  0E94               	movlw	low _dbuf
 16196  010F4C  240B               	addwf	(btemp+10)^0,w,c
 16197  010F4E  6ED9               	movwf	fsr2l,c
 16198  010F50  0E03               	movlw	high _dbuf
 16199  010F52  200C               	addwfc	(btemp+11)^0,w,c
 16200  010F54  6EDA               	movwf	fsr2h,c
 16201  010F56  0E00               	movlw	0
 16202  010F58  6EDF               	movwf	indf2,c
 16203                           
 16204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16205                           ;stkvar	_nmode @ sp[(-56)+55]
 16206  010F5A  0EFF               	movlw	-1
 16207  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 16208  010F62  0E65               	movlw	101
 16209  010F64  1801               	xorwf	btemp^0,w,c
 16210  010F66  A4D8               	btfss	status,2,c
 16211  010F68  EF16  F081         	goto	l11350
 16212                           
 16213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16214  010F6C  0E4F               	movlw	79
 16215  010F6E  6E0B               	movwf	(btemp+10)^0,c
 16216  010F70  0E00               	movlw	0
 16217  010F72  6E0C               	movwf	(btemp+11)^0,c
 16218                           
 16219                           ;stkvar	_i @ sp[(-56)+36]
 16220  010F74  0EEC               	movlw	-20
 16221  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16222  010F7C  0EED               	movlw	-19
 16223  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16224                           
 16225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 16226                           ;stkvar	_i @ sp[(-56)+36]
 16227  010F84  0EEC               	movlw	-20
 16228  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 16229  010F8C  0EED               	movlw	-19
 16230  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16231  010F94  0E94               	movlw	low _dbuf
 16232  010F96  240B               	addwf	(btemp+10)^0,w,c
 16233  010F98  6ED9               	movwf	fsr2l,c
 16234  010F9A  0E03               	movlw	high _dbuf
 16235  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 16236  010F9E  6EDA               	movwf	fsr2h,c
 16237  010FA0  0E00               	movlw	0
 16238  010FA2  6EDF               	movwf	indf2,c
 16239                           
 16240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 16241                           ;stkvar	_sign @ sp[(-56)+42]
 16242  010FA4  0EF2               	movlw	-14
 16243  010FA6  6AE3               	clrf	plusw1,c
 16244  010FA8  0EF3               	movlw	-13
 16245  010FAA  6AE3               	clrf	plusw1,c
 16246                           
 16247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 16248                           ;stkvar	_e @ sp[(-56)+34]
 16249  010FAC  0EEB               	movlw	-21
 16250  010FAE  AEE3               	btfss	plusw1,7,c
 16251  010FB0  D012               	goto	l11560
 16252                           
 16253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 16254  010FB2  0E01               	movlw	1
 16255  010FB4  6E0B               	movwf	(btemp+10)^0,c
 16256  010FB6  0E00               	movlw	0
 16257  010FB8  6E0C               	movwf	(btemp+11)^0,c
 16258                           
 16259                           ;stkvar	_sign @ sp[(-56)+42]
 16260  010FBA  0EF2               	movlw	-14
 16261  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16262  010FC2  0EF3               	movlw	-13
 16263  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16264                           
 16265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 16266                           ;stkvar	_e @ sp[(-56)+34]
 16267                           ;stkvar	_e @ sp[(-56)+34]
 16268  010FCA  0EEA               	movlw	-22
 16269  010FCC  6CE3               	negf	plusw1,c
 16270  010FCE  0EEB               	movlw	-21
 16271  010FD0  1EE3               	comf	plusw1,f,c
 16272  010FD2  B0D8               	btfsc	status,0,c
 16273  010FD4  2AE3               	incf	plusw1,f,c
 16274  010FD6                     l11560:
 16275                           
 16276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 16277  010FD6  0E02               	movlw	2
 16278  010FD8  6E0B               	movwf	(btemp+10)^0,c
 16279  010FDA  0E00               	movlw	0
 16280  010FDC  6E0C               	movwf	(btemp+11)^0,c
 16281                           
 16282                           ;stkvar	_p @ sp[(-56)+40]
 16283  010FDE  0EF0               	movlw	-16
 16284  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16285  010FE6  0EF1               	movlw	-15
 16286  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16287                           
 16288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16289  010FEE  D051               	goto	l11572
 16290  010FF0                     l11562:
 16291                           
 16292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 16293                           ;stkvar	_i @ sp[(-56)+36]
 16294  010FF0  50E1               	movf	fsr1l,w,c
 16295  010FF2  0FEC               	addlw	-20
 16296  010FF4  6ED9               	movwf	fsr2l,c
 16297  010FF6  50E2               	movf	fsr1h,w,c
 16298  010FF8  6EDA               	movwf	fsr2h,c
 16299  010FFA  0EFF               	movlw	255
 16300  010FFC  22DA               	addwfc	fsr2h,f,c
 16301  010FFE  06DE               	decf	postinc2,f,c
 16302  011000  0E00               	movlw	0
 16303  011002  5ADD               	subwfb	postdec2,f,c
 16304                           
 16305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 16306                           ;stkvar	_i @ sp[(-56)+36]
 16307  011004  0EEC               	movlw	-20
 16308  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 16309  01100C  0EED               	movlw	-19
 16310  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16311  011014  0E94               	movlw	low _dbuf
 16312  011016  240B               	addwf	(btemp+10)^0,w,c
 16313  011018  6ED9               	movwf	fsr2l,c
 16314  01101A  0E03               	movlw	high _dbuf
 16315  01101C  200C               	addwfc	(btemp+11)^0,w,c
 16316  01101E  6EDA               	movwf	fsr2h,c
 16317  011020  0E0A               	movlw	10
 16318  011022  6EE6               	movwf	postinc1,c
 16319  011024  0E00               	movlw	0
 16320  011026  6EE6               	movwf	postinc1,c
 16321                           
 16322                           ;stkvar	_e @ sp[(-58)+34]
 16323  011028  0EE8               	movlw	-24
 16324  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 16325  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 16326  011036  EC27  F0C5         	call	___awmod	;wreg free
 16327  01103A  5001               	movf	btemp^0,w,c
 16328  01103C  0F30               	addlw	48
 16329  01103E  6EDF               	movwf	indf2,c
 16330                           
 16331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 16332  011040  0E0A               	movlw	10
 16333  011042  6EE6               	movwf	postinc1,c
 16334  011044  0E00               	movlw	0
 16335  011046  6EE6               	movwf	postinc1,c
 16336                           
 16337                           ;stkvar	_e @ sp[(-58)+34]
 16338  011048  0EE8               	movlw	-24
 16339  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 16340  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 16341  011056  EC19  F0C2         	call	___awdiv	;wreg free
 16342                           
 16343                           ;stkvar	_e @ sp[(-56)+34]
 16344  01105A  0EEA               	movlw	-22
 16345  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 16346  011062  0EEB               	movlw	-21
 16347  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16348                           
 16349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 16350                           ;stkvar	_p @ sp[(-56)+40]
 16351  01106A  50E1               	movf	fsr1l,w,c
 16352  01106C  0FF0               	addlw	-16
 16353  01106E  6ED9               	movwf	fsr2l,c
 16354  011070  50E2               	movf	fsr1h,w,c
 16355  011072  6EDA               	movwf	fsr2h,c
 16356  011074  0EFF               	movlw	255
 16357  011076  22DA               	addwfc	fsr2h,f,c
 16358  011078  06DE               	decf	postinc2,f,c
 16359  01107A  0E00               	movlw	0
 16360  01107C  5ADD               	subwfb	postdec2,f,c
 16361                           
 16362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 16363                           ;stkvar	_w @ sp[(-56)+38]
 16364  01107E  50E1               	movf	fsr1l,w,c
 16365  011080  0FEE               	addlw	-18
 16366  011082  6ED9               	movwf	fsr2l,c
 16367  011084  50E2               	movf	fsr1h,w,c
 16368  011086  6EDA               	movwf	fsr2h,c
 16369  011088  0EFF               	movlw	255
 16370  01108A  22DA               	addwfc	fsr2h,f,c
 16371  01108C  06DE               	decf	postinc2,f,c
 16372  01108E  0E00               	movlw	0
 16373  011090  5ADD               	subwfb	postdec2,f,c
 16374  011092                     l11572:
 16375                           
 16376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16377                           ;stkvar	_e @ sp[(-56)+34]
 16378  011092  0EEA               	movlw	-22
 16379  011094  006F FF8C  F001    	movff	plusw1,btemp
 16380  01109A  0EEB               	movlw	-21
 16381  01109C  50E3               	movf	plusw1,w,c
 16382  01109E  1001               	iorwf	btemp^0,w,c
 16383  0110A0  A4D8               	btfss	status,2,c
 16384  0110A2  D7A6               	goto	l11562
 16385                           
 16386                           ;stkvar	_p @ sp[(-56)+40]
 16387  0110A4  0EF1               	movlw	-15
 16388  0110A6  BEE3               	btfsc	plusw1,7,c
 16389  0110A8  D007               	goto	u10890
 16390  0110AA  0EF1               	movlw	-15
 16391  0110AC  50E3               	movf	plusw1,w,c
 16392  0110AE  E1A0               	bnz	l11562
 16393  0110B0  0EF0               	movlw	-16
 16394  0110B2  04E3               	decf	plusw1,w,c
 16395  0110B4  B0D8               	btfsc	status,0,c
 16396  0110B6  D79C               	goto	l11562
 16397  0110B8                     u10890:
 16398                           
 16399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16400                           ;stkvar	_i @ sp[(-56)+36]
 16401  0110B8  50E1               	movf	fsr1l,w,c
 16402  0110BA  0FEC               	addlw	-20
 16403  0110BC  6ED9               	movwf	fsr2l,c
 16404  0110BE  50E2               	movf	fsr1h,w,c
 16405  0110C0  6EDA               	movwf	fsr2h,c
 16406  0110C2  0EFF               	movlw	255
 16407  0110C4  22DA               	addwfc	fsr2h,f,c
 16408  0110C6  06DE               	decf	postinc2,f,c
 16409  0110C8  0E00               	movlw	0
 16410  0110CA  5ADD               	subwfb	postdec2,f,c
 16411                           
 16412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16413                           ;stkvar	_sign @ sp[(-56)+42]
 16414  0110CC  0EF2               	movlw	-14
 16415  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16416  0110D4  0EF3               	movlw	-13
 16417  0110D6  50E3               	movf	plusw1,w,c
 16418  0110D8  1001               	iorwf	btemp^0,w,c
 16419  0110DA  A4D8               	btfss	status,2,c
 16420  0110DC  D002               	goto	l11582
 16421  0110DE  0E2B               	movlw	43
 16422  0110E0  D001               	goto	L13
 16423  0110E2                     l11582:
 16424  0110E2  0E2D               	movlw	45
 16425  0110E4                     L13:
 16426  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16427  0110E6  0E00               	movlw	0
 16428  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16429                           
 16430                           ;stkvar	_efgtoa$5308 @ sp[(-56)+4]
 16431  0110EA  0ECC               	movlw	-52
 16432  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16433  0110F2  0ECD               	movlw	-51
 16434  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16435                           
 16436                           ;stkvar	_efgtoa$5308 @ sp[(-56)+4]
 16437                           ;stkvar	_i @ sp[(-56)+36]
 16438  0110FA  0EEC               	movlw	-20
 16439  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16440  011102  0EED               	movlw	-19
 16441  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16442  01110A  0E94               	movlw	low _dbuf
 16443  01110C  240B               	addwf	(btemp+10)^0,w,c
 16444  01110E  6ED9               	movwf	fsr2l,c
 16445  011110  0E03               	movlw	high _dbuf
 16446  011112  200C               	addwfc	(btemp+11)^0,w,c
 16447  011114  6EDA               	movwf	fsr2h,c
 16448  011116  0ECC               	movlw	-52
 16449  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16450                           
 16451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16452                           ;stkvar	_w @ sp[(-56)+38]
 16453  01111E  50E1               	movf	fsr1l,w,c
 16454  011120  0FEE               	addlw	-18
 16455  011122  6ED9               	movwf	fsr2l,c
 16456  011124  50E2               	movf	fsr1h,w,c
 16457  011126  6EDA               	movwf	fsr2h,c
 16458  011128  0EFF               	movlw	255
 16459  01112A  22DA               	addwfc	fsr2h,f,c
 16460  01112C  06DE               	decf	postinc2,f,c
 16461  01112E  0E00               	movlw	0
 16462  011130  5ADD               	subwfb	postdec2,f,c
 16463                           
 16464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16465                           ;stkvar	_i @ sp[(-56)+36]
 16466  011132  50E1               	movf	fsr1l,w,c
 16467  011134  0FEC               	addlw	-20
 16468  011136  6ED9               	movwf	fsr2l,c
 16469  011138  50E2               	movf	fsr1h,w,c
 16470  01113A  6EDA               	movwf	fsr2h,c
 16471  01113C  0EFF               	movlw	255
 16472  01113E  22DA               	addwfc	fsr2h,f,c
 16473  011140  06DE               	decf	postinc2,f,c
 16474  011142  0E00               	movlw	0
 16475  011144  5ADD               	subwfb	postdec2,f,c
 16476  011146  0EBF               	movlw	191
 16477  011148  6E0B               	movwf	(btemp+10)^0,c
 16478  01114A  0EFF               	movlw	255
 16479  01114C  6E0C               	movwf	(btemp+11)^0,c
 16480                           
 16481                           ;stkvar	_c @ sp[(-56)+-7]
 16482  01114E  0EC1               	movlw	-63
 16483  011150  50E3               	movf	plusw1,w,c
 16484  011152  6E09               	movwf	(btemp+8)^0,c
 16485  011154  6A0A               	clrf	(btemp+9)^0,c
 16486  011156  500B               	movf	(btemp+10)^0,w,c
 16487  011158  2609               	addwf	(btemp+8)^0,f,c
 16488  01115A  500C               	movf	(btemp+11)^0,w,c
 16489  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16490  01115E  500A               	movf	(btemp+9)^0,w,c
 16491  011160  E106               	bnz	u10910
 16492  011162  0E1A               	movlw	26
 16493  011164  5C09               	subwf	(btemp+8)^0,w,c
 16494  011166  B0D8               	btfsc	status,0,c
 16495  011168  D002               	goto	u10910
 16496  01116A  0E01               	movlw	1
 16497  01116C  D001               	goto	u10920
 16498  01116E                     u10910:
 16499  01116E  0E00               	movlw	0
 16500  011170                     u10920:
 16501  011170  6E0B               	movwf	(btemp+10)^0,c
 16502  011172  6A0C               	clrf	(btemp+11)^0,c
 16503                           
 16504                           ;stkvar	_efgtoa$5310 @ sp[(-56)+0]
 16505  011174  0EC8               	movlw	-56
 16506  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16507  01117C  0EC9               	movlw	-55
 16508  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16509                           
 16510                           ;stkvar	_efgtoa$5310 @ sp[(-56)+0]
 16511  011184  0EC8               	movlw	-56
 16512  011186  006F FF8C  F001    	movff	plusw1,btemp
 16513  01118C  0EC9               	movlw	-55
 16514  01118E  50E3               	movf	plusw1,w,c
 16515  011190  1001               	iorwf	btemp^0,w,c
 16516  011192  A4D8               	btfss	status,2,c
 16517  011194  D002               	goto	l11598
 16518  011196  0E65               	movlw	101
 16519  011198  D001               	goto	L14
 16520  01119A                     l11598:
 16521  01119A  0E45               	movlw	69
 16522  01119C                     L14:
 16523  01119C  6E0B               	movwf	(btemp+10)^0,c
 16524  01119E  0E00               	movlw	0
 16525  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16526                           
 16527                           ;stkvar	_efgtoa$5309 @ sp[(-56)+2]
 16528  0111A2  0ECA               	movlw	-54
 16529  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16530  0111AA  0ECB               	movlw	-53
 16531  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16532                           
 16533                           ;stkvar	_efgtoa$5309 @ sp[(-56)+2]
 16534                           ;stkvar	_i @ sp[(-56)+36]
 16535  0111B2  0EEC               	movlw	-20
 16536  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16537  0111BA  0EED               	movlw	-19
 16538  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16539  0111C2  0E94               	movlw	low _dbuf
 16540  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16541  0111C6  6ED9               	movwf	fsr2l,c
 16542  0111C8  0E03               	movlw	high _dbuf
 16543  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16544  0111CC  6EDA               	movwf	fsr2h,c
 16545  0111CE  0ECA               	movlw	-54
 16546  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16547                           
 16548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16549                           ;stkvar	_w @ sp[(-56)+38]
 16550  0111D6  50E1               	movf	fsr1l,w,c
 16551  0111D8  0FEE               	addlw	-18
 16552  0111DA  6ED9               	movwf	fsr2l,c
 16553  0111DC  50E2               	movf	fsr1h,w,c
 16554  0111DE  6EDA               	movwf	fsr2h,c
 16555  0111E0  0EFF               	movlw	255
 16556  0111E2  22DA               	addwfc	fsr2h,f,c
 16557  0111E4  06DE               	decf	postinc2,f,c
 16558  0111E6  0E00               	movlw	0
 16559  0111E8  5ADD               	subwfb	postdec2,f,c
 16560                           
 16561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16562                           ;stkvar	_i @ sp[(-56)+36]
 16563  0111EA  0EEC               	movlw	-20
 16564  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16565  0111F2  0EED               	movlw	-19
 16566  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16567  0111FA  0E94               	movlw	low _dbuf
 16568  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16569  0111FE  6E09               	movwf	(btemp+8)^0,c
 16570  011200  0E03               	movlw	high _dbuf
 16571  011202  200C               	addwfc	(btemp+11)^0,w,c
 16572  011204  6E0A               	movwf	(btemp+9)^0,c
 16573  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16574  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16575                           
 16576                           ;stkvar	_n @ sp[(-58)+32]
 16577  011212  0E94               	movlw	low _dbuf
 16578  011214  6E0B               	movwf	(btemp+10)^0,c
 16579  011216  0E03               	movlw	high _dbuf
 16580  011218  6E0C               	movwf	(btemp+11)^0,c
 16581  01121A  0EE6               	movlw	-26
 16582  01121C  50E3               	movf	plusw1,w,c
 16583  01121E  260B               	addwf	(btemp+10)^0,f,c
 16584  011220  0EE7               	movlw	-25
 16585  011222  50E3               	movf	plusw1,w,c
 16586  011224  220C               	addwfc	(btemp+11)^0,f,c
 16587  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16588  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16589  011232  ECB4  F0C9         	call	_strcpy	;wreg free
 16590  011236  EF16  F081         	goto	l11350
 16591  01123A                     l2134:
 16592                           
 16593                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 16594  01123A  0EC1               	movlw	193
 16595  01123C  26E1               	addwf	fsr1l,f,c
 16596  01123E  0EFF               	movlw	255
 16597  011240  22E2               	addwfc	fsr1h,f,c
 16598  011242  0012               	return		;funcret
 16599  011244                     __end_of_efgtoa:
 16600                           	opt callstack 0
 16601                           
 16602 ;; *************** function _tolower *****************
 16603 ;; Defined at:
 16604 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;  c               2  [STACK] int 
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;		None
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  2  [STACK] int 
 16611 ;; Registers used:
 16612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16613 ;; Tracked objects:
 16614 ;;		On entry : 0/0
 16615 ;;		On exit  : 0/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16622 ;;Total ram usage:        0 bytes
 16623 ;; Hardware stack levels used:    1
 16624 ;; Hardware stack levels required when called:   16
 16625 ;; This function calls:
 16626 ;;		_isupper
 16627 ;; This function is called by:
 16628 ;;		_efgtoa
 16629 ;;		_vfpfcnvrt
 16630 ;; This function uses a reentrant model
 16631 ;;
 16632                           
 16633                           	psect	text56
 16634  019DAA                     __ptext56:
 16635                           	opt callstack 0
 16636  019DAA                     _tolower:
 16637                           	opt callstack 0
 16638                           
 16639                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16640  019DAA  52E6               	movf	postinc1,f,c
 16641  019DAC  52E6               	movf	postinc1,f,c
 16642                           
 16643                           ;stkvar	_c @ sp[(-2)+-2]
 16644                           
 16645                           ;incstack = 0
 16646 ;; hardware stack exceeded
 16647  019DAE  0EFC               	movlw	-4
 16648  019DB0  50E3               	movf	plusw1,w,c
 16649  019DB2  0FBF               	addlw	191
 16650  019DB4  6E0B               	movwf	(btemp+10)^0,c
 16651  019DB6  0EFD               	movlw	-3
 16652  019DB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 16653  019DBE  0EFF               	movlw	255
 16654  019DC0  220C               	addwfc	(btemp+11)^0,f,c
 16655  019DC2  500C               	movf	(btemp+11)^0,w,c
 16656  019DC4  E106               	bnz	u5720
 16657  019DC6  0E1A               	movlw	26
 16658  019DC8  5C0B               	subwf	(btemp+10)^0,w,c
 16659  019DCA  B0D8               	btfsc	status,0,c
 16660  019DCC  D002               	goto	u5720
 16661  019DCE  0E01               	movlw	1
 16662  019DD0  D001               	goto	u5730
 16663  019DD2                     u5720:
 16664  019DD2  0E00               	movlw	0
 16665  019DD4                     u5730:
 16666  019DD4  6E0B               	movwf	(btemp+10)^0,c
 16667  019DD6  6A0C               	clrf	(btemp+11)^0,c
 16668                           
 16669                           ;stkvar	_tolower$6129 @ sp[(-2)+0]
 16670  019DD8  0EFE               	movlw	-2
 16671  019DDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16672  019DE0  0EFF               	movlw	-1
 16673  019DE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16674                           
 16675                           ;stkvar	_tolower$6129 @ sp[(-2)+0]
 16676  019DE8  0EFE               	movlw	-2
 16677  019DEA  006F FF8C  F001    	movff	plusw1,btemp
 16678  019DF0  0EFF               	movlw	-1
 16679  019DF2  50E3               	movf	plusw1,w,c
 16680  019DF4  1001               	iorwf	btemp^0,w,c
 16681  019DF6  B4D8               	btfsc	status,2,c
 16682  019DF8  D00D               	goto	l7624
 16683                           
 16684                           ;stkvar	_c @ sp[(-2)+-2]
 16685  019DFA  0EFC               	movlw	-4
 16686  019DFC  006F FF8C  F001    	movff	plusw1,btemp
 16687  019E02  0EFD               	movlw	-3
 16688  019E04  006F FF8C  F002    	movff	plusw1,btemp+1
 16689  019E0A  0E20               	movlw	32
 16690  019E0C  1201               	iorwf	btemp^0,f,c
 16691  019E0E  0E00               	movlw	0
 16692  019E10  1202               	iorwf	(btemp+1)^0,f,c
 16693  019E12  D008               	goto	l3406
 16694  019E14                     l7624:
 16695                           
 16696                           ;stkvar	_c @ sp[(-2)+-2]
 16697  019E14  0EFC               	movlw	-4
 16698  019E16  006F FF8C  F001    	movff	plusw1,btemp
 16699  019E1C  0EFD               	movlw	-3
 16700  019E1E  006F FF8C  F002    	movff	plusw1,btemp+1
 16701  019E24                     l3406:
 16702                           
 16703                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16704  019E24  52E5               	movf	postdec1,f,c
 16705  019E26  52E5               	movf	postdec1,f,c
 16706  019E28  52E5               	movf	postdec1,f,c
 16707  019E2A  52E5               	movf	postdec1,f,c
 16708  019E2C  0012               	return		;funcret
 16709  019E2E                     __end_of_tolower:
 16710                           	opt callstack 0
 16711                           
 16712 ;; *************** function _isupper *****************
 16713 ;; Defined at:
 16714 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;  c               2  [STACK] int 
 16717 ;; Auto vars:     Size  Location     Type
 16718 ;;		None
 16719 ;; Return value:  Size  Location     Type
 16720 ;;                  2  [STACK] int 
 16721 ;; Registers used:
 16722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16723 ;; Tracked objects:
 16724 ;;		On entry : 0/0
 16725 ;;		On exit  : 0/0
 16726 ;;		Unchanged: 0/0
 16727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16732 ;;Total ram usage:        0 bytes
 16733 ;; Hardware stack levels used:    1
 16734 ;; Hardware stack levels required when called:   15
 16735 ;; This function calls:
 16736 ;;		Nothing
 16737 ;; This function is called by:
 16738 ;;		_efgtoa
 16739 ;;		_xtoa
 16740 ;;		_vfpfcnvrt
 16741 ;;		_tolower
 16742 ;; This function uses a reentrant model
 16743 ;;
 16744                           
 16745                           	psect	text57
 16746  01A9EE                     __ptext57:
 16747                           	opt callstack 0
 16748  01A9EE                     _isupper:
 16749                           	opt callstack 0
 16750                           
 16751                           ;stkvar	_c @ sp[(0)+-2]
 16752                           
 16753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16754                           ;incstack = 0
 16755 ;; hardware stack exceeded
 16756  01A9EE  0EFE               	movlw	-2
 16757  01A9F0  50E3               	movf	plusw1,w,c
 16758  01A9F2  0FBF               	addlw	191
 16759  01A9F4  6E0B               	movwf	(btemp+10)^0,c
 16760  01A9F6  0EFF               	movlw	-1
 16761  01A9F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 16762  01A9FE  0EFF               	movlw	255
 16763  01AA00  220C               	addwfc	(btemp+11)^0,f,c
 16764  01AA02  500C               	movf	(btemp+11)^0,w,c
 16765  01AA04  E106               	bnz	u5120
 16766  01AA06  0E1A               	movlw	26
 16767  01AA08  5C0B               	subwf	(btemp+10)^0,w,c
 16768  01AA0A  B0D8               	btfsc	status,0,c
 16769  01AA0C  D002               	goto	u5120
 16770  01AA0E  0E01               	movlw	1
 16771  01AA10  D001               	goto	u5130
 16772  01AA12                     u5120:
 16773  01AA12  0E00               	movlw	0
 16774  01AA14                     u5130:
 16775  01AA14  6E01               	movwf	btemp^0,c
 16776  01AA16  6A02               	clrf	(btemp+1)^0,c
 16777                           
 16778                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16779  01AA18  52E5               	movf	postdec1,f,c
 16780  01AA1A  52E5               	movf	postdec1,f,c
 16781  01AA1C  0012               	return		;funcret
 16782  01AA1E                     __end_of_isupper:
 16783                           	opt callstack 0
 16784                           
 16785 ;; *************** function _strcpy *****************
 16786 ;; Defined at:
 16787 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 16788 ;; Parameters:    Size  Location     Type
 16789 ;;  dest            2  [STACK] PTR unsigned char 
 16790 ;;		 -> dbuf(80), 
 16791 ;;  src             2  [STACK] PTR const unsigned char 
 16792 ;;		 -> STR_61(4), STR_60(4), STR_57(4), STR_56(4), 
 16793 ;;		 -> dbuf(80), 
 16794 ;; Auto vars:     Size  Location     Type
 16795 ;;  d               2  [STACK] PTR unsigned char 
 16796 ;;		 -> dbuf(80), 
 16797 ;;  s               2  [STACK] PTR const unsigned char 
 16798 ;;		 -> STR_61(4), STR_60(4), STR_57(4), STR_56(4), 
 16799 ;;		 -> dbuf(80), 
 16800 ;; Return value:  Size  Location     Type
 16801 ;;                  2  [STACK] PTR unsigned char 
 16802 ;; Registers used:
 16803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 16804 ;; Tracked objects:
 16805 ;;		On entry : 0/0
 16806 ;;		On exit  : 0/0
 16807 ;;		Unchanged: 0/0
 16808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16813 ;;Total ram usage:        0 bytes
 16814 ;; Hardware stack levels used:    1
 16815 ;; Hardware stack levels required when called:   15
 16816 ;; This function calls:
 16817 ;;		Nothing
 16818 ;; This function is called by:
 16819 ;;		_efgtoa
 16820 ;; This function uses a reentrant model
 16821 ;;
 16822                           
 16823                           	psect	text58
 16824  019368                     __ptext58:
 16825                           	opt callstack 0
 16826  019368                     _strcpy:
 16827                           	opt callstack 0
 16828                           
 16829                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16830  019368  52E6               	movf	postinc1,f,c
 16831  01936A  52E6               	movf	postinc1,f,c
 16832  01936C  52E6               	movf	postinc1,f,c
 16833  01936E  52E6               	movf	postinc1,f,c
 16834                           
 16835                           ;stkvar	_src @ sp[(-4)+-4]
 16836                           
 16837                           ;incstack = 0
 16838 ;; hardware stack exceeded
 16839  019370  0EF8               	movlw	-8
 16840  019372  006F FF8C  F00B    	movff	plusw1,btemp+10
 16841  019378  0EF9               	movlw	-7
 16842  01937A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16843                           
 16844                           ;stkvar	_s @ sp[(-4)+2]
 16845  019380  0EFF               	movlw	-1
 16846  019382  0060  F033  FFE3   	movff	btemp+11,plusw1
 16847  019388  0EFE               	movlw	-2
 16848  01938A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16849                           
 16850                           ;stkvar	_dest @ sp[(-4)+-2]
 16851  019390  0EFA               	movlw	-6
 16852  019392  006F FF8C  F00B    	movff	plusw1,btemp+10
 16853  019398  0EFB               	movlw	-5
 16854  01939A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16855                           
 16856                           ;stkvar	_d @ sp[(-4)+0]
 16857  0193A0  0EFD               	movlw	-3
 16858  0193A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16859  0193A8  0EFC               	movlw	-4
 16860  0193AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16861  0193B0                     l11182:
 16862                           
 16863                           ;stkvar	_s @ sp[(-4)+2]
 16864  0193B0  50E1               	movf	fsr1l,w,c
 16865  0193B2  0FFE               	addlw	-2
 16866  0193B4  6ED9               	movwf	fsr2l,c
 16867  0193B6  50E2               	movf	fsr1h,w,c
 16868  0193B8  6EDA               	movwf	fsr2h,c
 16869  0193BA  0EFF               	movlw	255
 16870  0193BC  22DA               	addwfc	fsr2h,f,c
 16871  0193BE  006F FF7C  F00B    	movff	indf2,btemp+10
 16872  0193C4  0E01               	movlw	1
 16873  0193C6  26DE               	addwf	postinc2,f,c
 16874  0193C8  006F FF7C  F00C    	movff	indf2,btemp+11
 16875  0193CE  0E00               	movlw	0
 16876  0193D0  22DD               	addwfc	postdec2,f,c
 16877  0193D2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16878  0193D8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16879  0193DE  0E00               	movlw	low (__mediumconst shr (0+16))
 16880  0193E0  6EF8               	movwf	tblptru,c
 16881                           
 16882                           ;stkvar	_d @ sp[(-4)+0]
 16883  0193E2  50E1               	movf	fsr1l,w,c
 16884  0193E4  0FFC               	addlw	-4
 16885  0193E6  6ED9               	movwf	fsr2l,c
 16886  0193E8  50E2               	movf	fsr1h,w,c
 16887  0193EA  6EDA               	movwf	fsr2h,c
 16888  0193EC  0EFF               	movlw	255
 16889  0193EE  22DA               	addwfc	fsr2h,f,c
 16890  0193F0  006F FF7C  F00B    	movff	indf2,btemp+10
 16891  0193F6  0E01               	movlw	1
 16892  0193F8  26DE               	addwf	postinc2,f,c
 16893  0193FA  006F FF7C  F00C    	movff	indf2,btemp+11
 16894  019400  0E00               	movlw	0
 16895  019402  22DD               	addwfc	postdec2,f,c
 16896  019404  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16897  01940A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16898  019410  0E1F               	movlw	(high __ramtop+-1)
 16899  019412  64F7               	cpfsgt	tblptrh,c
 16900  019414  D003               	bra	u10177
 16901  019416  0008               	tblrd		*
 16902  019418  50F5               	movf	tablat,w,c
 16903  01941A  D007               	bra	u10170
 16904  01941C                     u10177:
 16905  01941C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16906  019422  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16907  019428  50EF               	movf	indf0,w,c
 16908  01942A                     u10170:
 16909  01942A  6EDF               	movwf	indf2,c
 16910  01942C  50DF               	movf	indf2,w,c
 16911  01942E  A4D8               	btfss	status,2,c
 16912  019430  D7BF               	goto	l11182
 16913                           
 16914                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 16915  019432  0EF8               	movlw	248
 16916  019434  26E1               	addwf	fsr1l,f,c
 16917  019436  0EFF               	movlw	255
 16918  019438  22E2               	addwfc	fsr1h,f,c
 16919  01943A  0012               	return		;funcret
 16920  01943C                     __end_of_strcpy:
 16921                           	opt callstack 0
 16922                           
 16923 ;; *************** function _floorf *****************
 16924 ;; Defined at:
 16925 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 16926 ;; Parameters:    Size  Location     Type
 16927 ;;  x               4  [STACK] float 
 16928 ;; Auto vars:     Size  Location     Type
 16929 ;;  u               4  [STACK] struct .
 16930 ;;  m               4  [STACK] unsigned long 
 16931 ;;  e               2  [STACK] int 
 16932 ;; Return value:  Size  Location     Type
 16933 ;;                  4  [STACK] float 
 16934 ;; Registers used:
 16935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 16936 ;; Tracked objects:
 16937 ;;		On entry : 0/0
 16938 ;;		On exit  : 0/0
 16939 ;;		Unchanged: 0/0
 16940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16945 ;;Total ram usage:        0 bytes
 16946 ;; Hardware stack levels used:    1
 16947 ;; Hardware stack levels required when called:   15
 16948 ;; This function calls:
 16949 ;;		Nothing
 16950 ;; This function is called by:
 16951 ;;		_efgtoa
 16952 ;; This function uses a reentrant model
 16953 ;;
 16954                           
 16955                           	psect	text59
 16956  015AA0                     __ptext59:
 16957                           	opt callstack 0
 16958  015AA0                     _floorf:
 16959                           	opt callstack 0
 16960                           
 16961                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16962  015AA0  0E0A               	movlw	10
 16963  015AA2  26E1               	addwf	fsr1l,f,c
 16964  015AA4  0E00               	movlw	0
 16965  015AA6  22E2               	addwfc	fsr1h,f,c
 16966                           
 16967                           ;incstack = 0
 16968 ;; hardware stack exceeded
 16969  015AA8  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 16970  015AAE  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 16971  015AB4  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 16972  015ABA  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 16973                           
 16974                           ;stkvar	_u @ sp[(-10)+0]
 16975  015AC0  0EF6               	movlw	-10
 16976  015AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16977  015AC8  0EF7               	movlw	-9
 16978  015ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16979  015AD0  0EF8               	movlw	-8
 16980  015AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16981  015AD8  0EF9               	movlw	-7
 16982  015ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16983                           
 16984                           ;stkvar	_x @ sp[(-10)+-4]
 16985  015AE0  0EF2               	movlw	-14
 16986  015AE2  006F FF8C  F009    	movff	plusw1,btemp+8
 16987  015AE8  0EF3               	movlw	-13
 16988  015AEA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16989  015AF0  0EF4               	movlw	-12
 16990  015AF2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16991  015AF8  0EF5               	movlw	-11
 16992  015AFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16993                           
 16994                           ;stkvar	_u @ sp[(-10)+0]
 16995  015B00  0EF6               	movlw	-10
 16996  015B02  0060  F027  FFE3   	movff	btemp+8,plusw1
 16997  015B08  0EF7               	movlw	-9
 16998  015B0A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16999  015B10  0EF8               	movlw	-8
 17000  015B12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17001  015B18  0EF9               	movlw	-7
 17002  015B1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17003  015B20  0E81               	movlw	129
 17004  015B22  6E0B               	movwf	(btemp+10)^0,c
 17005  015B24  0EFF               	movlw	255
 17006  015B26  6E0C               	movwf	(btemp+11)^0,c
 17007                           
 17008                           ;stkvar	_u @ sp[(-10)+0]
 17009  015B28  0EF6               	movlw	-10
 17010  015B2A  006F FF8C  F005    	movff	plusw1,btemp+4
 17011  015B30  0EF7               	movlw	-9
 17012  015B32  006F FF8C  F006    	movff	plusw1,btemp+5
 17013  015B38  0EF8               	movlw	-8
 17014  015B3A  006F FF8C  F007    	movff	plusw1,btemp+6
 17015  015B40  0EF9               	movlw	-7
 17016  015B42  006F FF8C  F008    	movff	plusw1,btemp+7
 17017  015B48  0E18               	movlw	24
 17018  015B4A  D005               	goto	u5750
 17019  015B4C                     u5755:
 17020  015B4C  90D8               	bcf	status,0,c
 17021  015B4E  3208               	rrcf	(btemp+7)^0,f,c
 17022  015B50  3207               	rrcf	(btemp+6)^0,f,c
 17023  015B52  3206               	rrcf	(btemp+5)^0,f,c
 17024  015B54  3205               	rrcf	(btemp+4)^0,f,c
 17025  015B56                     u5750:
 17026  015B56  2EE8               	decfsz	wreg,f,c
 17027  015B58  D7F9               	goto	u5755
 17028  015B5A  0060  F014  F009   	movff	btemp+4,btemp+8
 17029  015B60  0060  F018  F00A   	movff	btemp+5,btemp+9
 17030  015B66  0EFF               	movlw	255
 17031  015B68  1609               	andwf	(btemp+8)^0,f,c
 17032  015B6A  0E00               	movlw	0
 17033  015B6C  160A               	andwf	(btemp+9)^0,f,c
 17034  015B6E  500B               	movf	(btemp+10)^0,w,c
 17035  015B70  2609               	addwf	(btemp+8)^0,f,c
 17036  015B72  500C               	movf	(btemp+11)^0,w,c
 17037  015B74  220A               	addwfc	(btemp+9)^0,f,c
 17038                           
 17039                           ;stkvar	_e @ sp[(-10)+8]
 17040  015B76  0EFE               	movlw	-2
 17041  015B78  0060  F027  FFE3   	movff	btemp+8,plusw1
 17042  015B7E  0EFF               	movlw	-1
 17043  015B80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17044                           
 17045                           ;stkvar	_e @ sp[(-10)+8]
 17046  015B86  0EFF               	movlw	-1
 17047  015B88  BEE3               	btfsc	plusw1,7,c
 17048  015B8A  D019               	goto	l7638
 17049  015B8C  0EFF               	movlw	-1
 17050  015B8E  50E3               	movf	plusw1,w,c
 17051  015B90  E108               	bnz	u5760
 17052  015B92  0EFE               	movlw	-2
 17053  015B94  006F FF8C  F001    	movff	plusw1,btemp
 17054  015B9A  0E17               	movlw	23
 17055  015B9C  5E01               	subwf	btemp^0,f,c
 17056  015B9E  A0D8               	btfss	status,0,c
 17057  015BA0  D00E               	goto	l7638
 17058  015BA2                     u5760:
 17059                           
 17060                           ;stkvar	_x @ sp[(-10)+-4]
 17061  015BA2  0EF2               	movlw	-14
 17062  015BA4  006F FF8C  F001    	movff	plusw1,btemp
 17063  015BAA  0EF3               	movlw	-13
 17064  015BAC  006F FF8C  F002    	movff	plusw1,btemp+1
 17065  015BB2  0EF4               	movlw	-12
 17066  015BB4  006F FF8C  F003    	movff	plusw1,btemp+2
 17067  015BBA  0EF5               	movlw	-11
 17068  015BBC  D11F               	goto	L15
 17069  015BBE                     l7638:
 17070                           
 17071                           ;stkvar	_e @ sp[(-10)+8]
 17072  015BBE  0EFF               	movlw	-1
 17073  015BC0  BEE3               	btfsc	plusw1,7,c
 17074  015BC2  D0B4               	goto	l7654
 17075                           
 17076                           ;stkvar	_e @ sp[(-10)+8]
 17077  015BC4  0EFE               	movlw	-2
 17078  015BC6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17079  015BCC  0EFF               	movlw	255
 17080  015BCE  6E05               	movwf	(btemp+4)^0,c
 17081  015BD0  0EFF               	movlw	255
 17082  015BD2  6E06               	movwf	(btemp+5)^0,c
 17083  015BD4  0E7F               	movlw	127
 17084  015BD6  6E07               	movwf	(btemp+6)^0,c
 17085  015BD8  0E00               	movlw	0
 17086  015BDA  6E08               	movwf	(btemp+7)^0,c
 17087  015BDC                     u5785:
 17088  015BDC  660C               	tstfsz	(btemp+11)^0,c
 17089  015BDE  D001               	goto	u5786
 17090  015BE0  D007               	goto	u5787
 17091  015BE2                     u5786:
 17092  015BE2  3408               	rlcf	(btemp+7)^0,w,c
 17093  015BE4  3208               	rrcf	(btemp+7)^0,f,c
 17094  015BE6  3207               	rrcf	(btemp+6)^0,f,c
 17095  015BE8  3206               	rrcf	(btemp+5)^0,f,c
 17096  015BEA  3205               	rrcf	(btemp+4)^0,f,c
 17097  015BEC  2E0C               	decfsz	(btemp+11)^0,f,c
 17098  015BEE  D7F6               	goto	u5785
 17099  015BF0                     u5787:
 17100                           
 17101                           ;stkvar	_m @ sp[(-10)+4]
 17102  015BF0  0EFA               	movlw	-6
 17103  015BF2  0060  F017  FFE3   	movff	btemp+4,plusw1
 17104  015BF8  0EFB               	movlw	-5
 17105  015BFA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 17106  015C00  0EFC               	movlw	-4
 17107  015C02  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17108  015C08  0EFD               	movlw	-3
 17109  015C0A  0060  F023  FFE3   	movff	btemp+7,plusw1
 17110                           
 17111                           ;stkvar	_m @ sp[(-10)+4]
 17112                           ;stkvar	_u @ sp[(-10)+0]
 17113  015C10  0EF6               	movlw	-10
 17114  015C12  006F FF8C  F009    	movff	plusw1,btemp+8
 17115  015C18  0EF7               	movlw	-9
 17116  015C1A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17117  015C20  0EF8               	movlw	-8
 17118  015C22  006F FF8C  F00B    	movff	plusw1,btemp+10
 17119  015C28  0EF9               	movlw	-7
 17120  015C2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17121  015C30  0EFA               	movlw	-6
 17122  015C32  50E3               	movf	plusw1,w,c
 17123  015C34  1609               	andwf	(btemp+8)^0,f,c
 17124  015C36  0EFB               	movlw	-5
 17125  015C38  50E3               	movf	plusw1,w,c
 17126  015C3A  160A               	andwf	(btemp+9)^0,f,c
 17127  015C3C  0EFC               	movlw	-4
 17128  015C3E  50E3               	movf	plusw1,w,c
 17129  015C40  160B               	andwf	(btemp+10)^0,f,c
 17130  015C42  0EFD               	movlw	-3
 17131  015C44  50E3               	movf	plusw1,w,c
 17132  015C46  160C               	andwf	(btemp+11)^0,f,c
 17133  015C48  5009               	movf	(btemp+8)^0,w,c
 17134  015C4A  100A               	iorwf	(btemp+9)^0,w,c
 17135  015C4C  100B               	iorwf	(btemp+10)^0,w,c
 17136  015C4E  100C               	iorwf	(btemp+11)^0,w,c
 17137  015C50  B4D8               	btfsc	status,2,c
 17138  015C52  D7A7               	goto	u5760
 17139                           
 17140                           ;stkvar	_u @ sp[(-10)+0]
 17141  015C54  0EF6               	movlw	-10
 17142  015C56  006F FF8C  F009    	movff	plusw1,btemp+8
 17143  015C5C  0EF7               	movlw	-9
 17144  015C5E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17145  015C64  0EF8               	movlw	-8
 17146  015C66  006F FF8C  F00B    	movff	plusw1,btemp+10
 17147  015C6C  0EF9               	movlw	-7
 17148  015C6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17149  015C74  0E20               	movlw	32
 17150  015C76  D005               	goto	u5800
 17151  015C78                     u5805:
 17152  015C78  90D8               	bcf	status,0,c
 17153  015C7A  320C               	rrcf	(btemp+11)^0,f,c
 17154  015C7C  320B               	rrcf	(btemp+10)^0,f,c
 17155  015C7E  320A               	rrcf	(btemp+9)^0,f,c
 17156  015C80  3209               	rrcf	(btemp+8)^0,f,c
 17157  015C82                     u5800:
 17158  015C82  2EE8               	decfsz	wreg,f,c
 17159  015C84  D7F9               	goto	u5805
 17160  015C86  5009               	movf	(btemp+8)^0,w,c
 17161  015C88  B4D8               	btfsc	status,2,c
 17162  015C8A  D028               	goto	l7652
 17163                           
 17164                           ;stkvar	_m @ sp[(-10)+4]
 17165                           ;stkvar	_u @ sp[(-10)+0]
 17166  015C8C  0EF6               	movlw	-10
 17167  015C8E  50E3               	movf	plusw1,w,c
 17168  015C90  6E01               	movwf	btemp^0,c
 17169  015C92  0EFA               	movlw	-6
 17170  015C94  50E3               	movf	plusw1,w,c
 17171  015C96  2601               	addwf	btemp^0,f,c
 17172  015C98  0EF6               	movlw	-10
 17173  015C9A  0060  F007  FFE3   	movff	btemp,plusw1
 17174  015CA0  0EF7               	movlw	-9
 17175  015CA2  50E3               	movf	plusw1,w,c
 17176  015CA4  6E01               	movwf	btemp^0,c
 17177  015CA6  0EFB               	movlw	-5
 17178  015CA8  50E3               	movf	plusw1,w,c
 17179  015CAA  2201               	addwfc	btemp^0,f,c
 17180  015CAC  0EF7               	movlw	-9
 17181  015CAE  0060  F007  FFE3   	movff	btemp,plusw1
 17182  015CB4  0EF8               	movlw	-8
 17183  015CB6  50E3               	movf	plusw1,w,c
 17184  015CB8  6E01               	movwf	btemp^0,c
 17185  015CBA  0EFC               	movlw	-4
 17186  015CBC  50E3               	movf	plusw1,w,c
 17187  015CBE  2201               	addwfc	btemp^0,f,c
 17188  015CC0  0EF8               	movlw	-8
 17189  015CC2  0060  F007  FFE3   	movff	btemp,plusw1
 17190  015CC8  0EF9               	movlw	-7
 17191  015CCA  50E3               	movf	plusw1,w,c
 17192  015CCC  6E01               	movwf	btemp^0,c
 17193  015CCE  0EFD               	movlw	-3
 17194  015CD0  50E3               	movf	plusw1,w,c
 17195  015CD2  2201               	addwfc	btemp^0,f,c
 17196  015CD4  0EF9               	movlw	-7
 17197  015CD6  0060  F007  FFE3   	movff	btemp,plusw1
 17198  015CDC                     l7652:
 17199                           
 17200                           ;stkvar	_m @ sp[(-10)+4]
 17201  015CDC  0EFA               	movlw	-6
 17202  015CDE  006F FF8C  F009    	movff	plusw1,btemp+8
 17203  015CE4  0EFB               	movlw	-5
 17204  015CE6  006F FF8C  F00A    	movff	plusw1,btemp+9
 17205  015CEC  0EFC               	movlw	-4
 17206  015CEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17207  015CF4  0EFD               	movlw	-3
 17208  015CF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17209  015CFC  1C09               	comf	(btemp+8)^0,w,c
 17210  015CFE  6E05               	movwf	(btemp+4)^0,c
 17211  015D00  1C0A               	comf	(btemp+9)^0,w,c
 17212  015D02  6E06               	movwf	(btemp+5)^0,c
 17213  015D04  1C0B               	comf	(btemp+10)^0,w,c
 17214  015D06  6E07               	movwf	(btemp+6)^0,c
 17215  015D08  1C0C               	comf	(btemp+11)^0,w,c
 17216  015D0A  6E08               	movwf	(btemp+7)^0,c
 17217                           
 17218                           ;stkvar	_u @ sp[(-10)+0]
 17219  015D0C  50E1               	movf	fsr1l,w,c
 17220  015D0E  0FF6               	addlw	-10
 17221  015D10  6ED9               	movwf	fsr2l,c
 17222  015D12  50E2               	movf	fsr1h,w,c
 17223  015D14  6EDA               	movwf	fsr2h,c
 17224  015D16  0EFF               	movlw	255
 17225  015D18  22DA               	addwfc	fsr2h,f,c
 17226  015D1A  5005               	movf	(btemp+4)^0,w,c
 17227  015D1C  16DE               	andwf	postinc2,f,c
 17228  015D1E  5006               	movf	(btemp+5)^0,w,c
 17229  015D20  16DE               	andwf	postinc2,f,c
 17230  015D22  5007               	movf	(btemp+6)^0,w,c
 17231  015D24  16DE               	andwf	postinc2,f,c
 17232  015D26  5008               	movf	(btemp+7)^0,w,c
 17233  015D28  16DE               	andwf	postinc2,f,c
 17234  015D2A  D05B               	goto	l7662
 17235  015D2C                     l7654:
 17236                           
 17237                           ;stkvar	_u @ sp[(-10)+0]
 17238  015D2C  0EF6               	movlw	-10
 17239  015D2E  006F FF8C  F009    	movff	plusw1,btemp+8
 17240  015D34  0EF7               	movlw	-9
 17241  015D36  006F FF8C  F00A    	movff	plusw1,btemp+9
 17242  015D3C  0EF8               	movlw	-8
 17243  015D3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17244  015D44  0EF9               	movlw	-7
 17245  015D46  006F FF8C  F00C    	movff	plusw1,btemp+11
 17246  015D4C  0E20               	movlw	32
 17247  015D4E  D005               	goto	u5820
 17248  015D50                     u5825:
 17249  015D50  90D8               	bcf	status,0,c
 17250  015D52  320C               	rrcf	(btemp+11)^0,f,c
 17251  015D54  320B               	rrcf	(btemp+10)^0,f,c
 17252  015D56  320A               	rrcf	(btemp+9)^0,f,c
 17253  015D58  3209               	rrcf	(btemp+8)^0,f,c
 17254  015D5A                     u5820:
 17255  015D5A  2EE8               	decfsz	wreg,f,c
 17256  015D5C  D7F9               	goto	u5825
 17257  015D5E  6609               	tstfsz	(btemp+8)^0,c
 17258  015D60  D009               	goto	l7658
 17259                           
 17260                           ;stkvar	_u @ sp[(-10)+0]
 17261  015D62  0EF6               	movlw	-10
 17262  015D64  6AE3               	clrf	plusw1,c
 17263  015D66  0EF7               	movlw	-9
 17264  015D68  6AE3               	clrf	plusw1,c
 17265  015D6A  0EF8               	movlw	-8
 17266  015D6C  6AE3               	clrf	plusw1,c
 17267  015D6E  0EF9               	movlw	-7
 17268  015D70  6AE3               	clrf	plusw1,c
 17269  015D72  D037               	goto	l7662
 17270  015D74                     l7658:
 17271                           
 17272                           ;stkvar	_u @ sp[(-10)+0]
 17273  015D74  0EF6               	movlw	-10
 17274  015D76  006F FF8C  F009    	movff	plusw1,btemp+8
 17275  015D7C  0EF7               	movlw	-9
 17276  015D7E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17277  015D84  0EF8               	movlw	-8
 17278  015D86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17279  015D8C  0EF9               	movlw	-7
 17280  015D8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17281  015D94  90D8               	bcf	status,0,c
 17282  015D96  3409               	rlcf	(btemp+8)^0,w,c
 17283  015D98  6E05               	movwf	(btemp+4)^0,c
 17284  015D9A  340A               	rlcf	(btemp+9)^0,w,c
 17285  015D9C  6E06               	movwf	(btemp+5)^0,c
 17286  015D9E  340B               	rlcf	(btemp+10)^0,w,c
 17287  015DA0  6E07               	movwf	(btemp+6)^0,c
 17288  015DA2  340C               	rlcf	(btemp+11)^0,w,c
 17289  015DA4  6E08               	movwf	(btemp+7)^0,c
 17290  015DA6  5005               	movf	(btemp+4)^0,w,c
 17291  015DA8  1006               	iorwf	(btemp+5)^0,w,c
 17292  015DAA  1007               	iorwf	(btemp+6)^0,w,c
 17293  015DAC  1008               	iorwf	(btemp+7)^0,w,c
 17294  015DAE  B4D8               	btfsc	status,2,c
 17295  015DB0  D018               	goto	l7662
 17296  015DB2  0E00               	movlw	0
 17297  015DB4  6E09               	movwf	(btemp+8)^0,c
 17298  015DB6  0E00               	movlw	0
 17299  015DB8  6E0A               	movwf	(btemp+9)^0,c
 17300  015DBA  0E80               	movlw	128
 17301  015DBC  6E0B               	movwf	(btemp+10)^0,c
 17302  015DBE  0EBF               	movlw	191
 17303  015DC0  6E0C               	movwf	(btemp+11)^0,c
 17304                           
 17305                           ;stkvar	_u @ sp[(-10)+0]
 17306  015DC2  0EF6               	movlw	-10
 17307  015DC4  0060  F027  FFE3   	movff	btemp+8,plusw1
 17308  015DCA  0EF7               	movlw	-9
 17309  015DCC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17310  015DD2  0EF8               	movlw	-8
 17311  015DD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17312  015DDA  0EF9               	movlw	-7
 17313  015DDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17314  015DE2                     l7662:
 17315                           
 17316                           ;stkvar	_u @ sp[(-10)+0]
 17317  015DE2  0EF6               	movlw	-10
 17318  015DE4  006F FF8C  F001    	movff	plusw1,btemp
 17319  015DEA  0EF7               	movlw	-9
 17320  015DEC  006F FF8C  F002    	movff	plusw1,btemp+1
 17321  015DF2  0EF8               	movlw	-8
 17322  015DF4  006F FF8C  F003    	movff	plusw1,btemp+2
 17323  015DFA  0EF9               	movlw	-7
 17324  015DFC                     L15:
 17325  015DFC  006F FF8C  F004    	movff	plusw1,btemp+3
 17326                           
 17327                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17328  015E02  0EF2               	movlw	242
 17329  015E04  26E1               	addwf	fsr1l,f,c
 17330  015E06  0EFF               	movlw	255
 17331  015E08  22E2               	addwfc	fsr1h,f,c
 17332  015E0A  0012               	return		;funcret
 17333  015E0C                     __end_of_floorf:
 17334                           	opt callstack 0
 17335                           
 17336 ;; *************** function ___fpclassifyf *****************
 17337 ;; Defined at:
 17338 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 17339 ;; Parameters:    Size  Location     Type
 17340 ;;  x               4  [STACK] float 
 17341 ;; Auto vars:     Size  Location     Type
 17342 ;;  u               4  [STACK] struct .
 17343 ;;  e               2  [STACK] int 
 17344 ;; Return value:  Size  Location     Type
 17345 ;;                  2  [STACK] int 
 17346 ;; Registers used:
 17347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 17348 ;; Tracked objects:
 17349 ;;		On entry : 0/0
 17350 ;;		On exit  : 0/0
 17351 ;;		Unchanged: 0/0
 17352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17357 ;;Total ram usage:        0 bytes
 17358 ;; Hardware stack levels used:    1
 17359 ;; Hardware stack levels required when called:   15
 17360 ;; This function calls:
 17361 ;;		Nothing
 17362 ;; This function is called by:
 17363 ;;		_efgtoa
 17364 ;; This function uses a reentrant model
 17365 ;;
 17366                           
 17367                           	psect	text60
 17368  017A02                     __ptext60:
 17369                           	opt callstack 0
 17370  017A02                     ___fpclassifyf:
 17371                           	opt callstack 0
 17372                           
 17373                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17374  017A02  0E06               	movlw	6
 17375  017A04  26E1               	addwf	fsr1l,f,c
 17376  017A06  0E00               	movlw	0
 17377  017A08  22E2               	addwfc	fsr1h,f,c
 17378                           
 17379                           ;incstack = 0
 17380 ;; hardware stack exceeded
 17381  017A0A  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 17382  017A10  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 17383  017A16  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 17384  017A1C  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 17385                           
 17386                           ;stkvar	_u @ sp[(-6)+0]
 17387  017A22  0EFA               	movlw	-6
 17388  017A24  0060  F027  FFE3   	movff	btemp+8,plusw1
 17389  017A2A  0EFB               	movlw	-5
 17390  017A2C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17391  017A32  0EFC               	movlw	-4
 17392  017A34  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17393  017A3A  0EFD               	movlw	-3
 17394  017A3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17395                           
 17396                           ;stkvar	_x @ sp[(-6)+-4]
 17397  017A42  0EF6               	movlw	-10
 17398  017A44  006F FF8C  F009    	movff	plusw1,btemp+8
 17399  017A4A  0EF7               	movlw	-9
 17400  017A4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17401  017A52  0EF8               	movlw	-8
 17402  017A54  006F FF8C  F00B    	movff	plusw1,btemp+10
 17403  017A5A  0EF9               	movlw	-7
 17404  017A5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17405                           
 17406                           ;stkvar	_u @ sp[(-6)+0]
 17407  017A62  0EFA               	movlw	-6
 17408  017A64  0060  F027  FFE3   	movff	btemp+8,plusw1
 17409  017A6A  0EFB               	movlw	-5
 17410  017A6C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17411  017A72  0EFC               	movlw	-4
 17412  017A74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17413  017A7A  0EFD               	movlw	-3
 17414  017A7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17415                           
 17416                           ;stkvar	_u @ sp[(-6)+0]
 17417  017A82  0EFA               	movlw	-6
 17418  017A84  006F FF8C  F009    	movff	plusw1,btemp+8
 17419  017A8A  0EFB               	movlw	-5
 17420  017A8C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17421  017A92  0EFC               	movlw	-4
 17422  017A94  006F FF8C  F00B    	movff	plusw1,btemp+10
 17423  017A9A  0EFD               	movlw	-3
 17424  017A9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17425  017AA2  0E18               	movlw	24
 17426  017AA4  D005               	goto	u5630
 17427  017AA6                     u5635:
 17428  017AA6  90D8               	bcf	status,0,c
 17429  017AA8  320C               	rrcf	(btemp+11)^0,f,c
 17430  017AAA  320B               	rrcf	(btemp+10)^0,f,c
 17431  017AAC  320A               	rrcf	(btemp+9)^0,f,c
 17432  017AAE  3209               	rrcf	(btemp+8)^0,f,c
 17433  017AB0                     u5630:
 17434  017AB0  2EE8               	decfsz	wreg,f,c
 17435  017AB2  D7F9               	goto	u5635
 17436  017AB4  0060  F024  F007   	movff	btemp+8,btemp+6
 17437  017ABA  0060  F028  F008   	movff	btemp+9,btemp+7
 17438  017AC0  0EFF               	movlw	255
 17439  017AC2  1607               	andwf	(btemp+6)^0,f,c
 17440  017AC4  0E00               	movlw	0
 17441  017AC6  1608               	andwf	(btemp+7)^0,f,c
 17442                           
 17443                           ;stkvar	_e @ sp[(-6)+4]
 17444  017AC8  0EFE               	movlw	-2
 17445  017ACA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17446  017AD0  0EFF               	movlw	-1
 17447  017AD2  0060  F023  FFE3   	movff	btemp+7,plusw1
 17448                           
 17449                           ;stkvar	_e @ sp[(-6)+4]
 17450  017AD8  0EFE               	movlw	-2
 17451  017ADA  006F FF8C  F001    	movff	plusw1,btemp
 17452  017AE0  0EFF               	movlw	-1
 17453  017AE2  50E3               	movf	plusw1,w,c
 17454  017AE4  1001               	iorwf	btemp^0,w,c
 17455  017AE6  A4D8               	btfss	status,2,c
 17456  017AE8  D023               	goto	l7600
 17457                           
 17458                           ;stkvar	_u @ sp[(-6)+0]
 17459  017AEA  0EFA               	movlw	-6
 17460  017AEC  006F FF8C  F009    	movff	plusw1,btemp+8
 17461  017AF2  0EFB               	movlw	-5
 17462  017AF4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17463  017AFA  0EFC               	movlw	-4
 17464  017AFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17465  017B02  0EFD               	movlw	-3
 17466  017B04  006F FF8C  F00C    	movff	plusw1,btemp+11
 17467  017B0A  90D8               	bcf	status,0,c
 17468  017B0C  3409               	rlcf	(btemp+8)^0,w,c
 17469  017B0E  6E05               	movwf	(btemp+4)^0,c
 17470  017B10  340A               	rlcf	(btemp+9)^0,w,c
 17471  017B12  6E06               	movwf	(btemp+5)^0,c
 17472  017B14  340B               	rlcf	(btemp+10)^0,w,c
 17473  017B16  6E07               	movwf	(btemp+6)^0,c
 17474  017B18  340C               	rlcf	(btemp+11)^0,w,c
 17475  017B1A  6E08               	movwf	(btemp+7)^0,c
 17476  017B1C  5005               	movf	(btemp+4)^0,w,c
 17477  017B1E  1006               	iorwf	(btemp+5)^0,w,c
 17478  017B20  1007               	iorwf	(btemp+6)^0,w,c
 17479  017B22  1008               	iorwf	(btemp+7)^0,w,c
 17480  017B24  A4D8               	btfss	status,2,c
 17481  017B26  D002               	goto	l7596
 17482  017B28  0E02               	movlw	2
 17483  017B2A  D02E               	goto	L16
 17484  017B2C                     l7596:
 17485  017B2C  0E03               	movlw	3
 17486  017B2E  D02C               	goto	L16
 17487  017B30                     l7600:
 17488                           
 17489                           ;stkvar	_e @ sp[(-6)+4]
 17490  017B30  0EFE               	movlw	-2
 17491  017B32  28E3               	incf	plusw1,w,c
 17492  017B34  E128               	bnz	l7606
 17493  017B36  0EFF               	movlw	-1
 17494  017B38  50E3               	movf	plusw1,w,c
 17495  017B3A  A4D8               	btfss	status,2,c
 17496  017B3C  D024               	goto	l7606
 17497                           
 17498                           ;stkvar	_u @ sp[(-6)+0]
 17499  017B3E  0EFA               	movlw	-6
 17500  017B40  006F FF8C  F009    	movff	plusw1,btemp+8
 17501  017B46  0EFB               	movlw	-5
 17502  017B48  006F FF8C  F00A    	movff	plusw1,btemp+9
 17503  017B4E  0EFC               	movlw	-4
 17504  017B50  006F FF8C  F00B    	movff	plusw1,btemp+10
 17505  017B56  0EFD               	movlw	-3
 17506  017B58  006F FF8C  F00C    	movff	plusw1,btemp+11
 17507  017B5E  0E09               	movlw	9
 17508  017B60                     u5675:
 17509  017B60  90D8               	bcf	status,0,c
 17510  017B62  3609               	rlcf	(btemp+8)^0,f,c
 17511  017B64  360A               	rlcf	(btemp+9)^0,f,c
 17512  017B66  360B               	rlcf	(btemp+10)^0,f,c
 17513  017B68  360C               	rlcf	(btemp+11)^0,f,c
 17514  017B6A  2EE8               	decfsz	wreg,f,c
 17515  017B6C  D7F9               	goto	u5675
 17516  017B6E  5009               	movf	(btemp+8)^0,w,c
 17517  017B70  100A               	iorwf	(btemp+9)^0,w,c
 17518  017B72  100B               	iorwf	(btemp+10)^0,w,c
 17519  017B74  100C               	iorwf	(btemp+11)^0,w,c
 17520  017B76  A4D8               	btfss	status,2,c
 17521  017B78  D002               	goto	u5680
 17522  017B7A  0E01               	movlw	1
 17523  017B7C  D001               	goto	u5690
 17524  017B7E                     u5680:
 17525  017B7E  0E00               	movlw	0
 17526  017B80                     u5690:
 17527  017B80  6E01               	movwf	btemp^0,c
 17528  017B82  6A02               	clrf	(btemp+1)^0,c
 17529  017B84  D004               	goto	l3016
 17530  017B86                     l7606:
 17531  017B86  0E04               	movlw	4
 17532  017B88                     L16:
 17533  017B88  6E01               	movwf	btemp^0,c
 17534  017B8A  0E00               	movlw	0
 17535  017B8C  6E02               	movwf	(btemp+1)^0,c
 17536  017B8E                     l3016:
 17537                           
 17538                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17539  017B8E  0EF6               	movlw	246
 17540  017B90  26E1               	addwf	fsr1l,f,c
 17541  017B92  0EFF               	movlw	255
 17542  017B94  22E2               	addwfc	fsr1h,f,c
 17543  017B96  0012               	return		;funcret
 17544  017B98                     __end_of___fpclassifyf:
 17545                           	opt callstack 0
 17546                           
 17547 ;; *************** function ___fltol *****************
 17548 ;; Defined at:
 17549 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17550 ;; Parameters:    Size  Location     Type
 17551 ;;  f1              4  [STACK] int 
 17552 ;; Auto vars:     Size  Location     Type
 17553 ;;  exp1            1  [STACK] unsigned char 
 17554 ;;  sign1           1  [STACK] unsigned char 
 17555 ;; Return value:  Size  Location     Type
 17556 ;;                  4  [STACK] long 
 17557 ;; Registers used:
 17558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17559 ;; Tracked objects:
 17560 ;;		On entry : 0/1
 17561 ;;		On exit  : 0/0
 17562 ;;		Unchanged: 0/0
 17563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17568 ;;Total ram usage:        0 bytes
 17569 ;; Hardware stack levels used:    1
 17570 ;; Hardware stack levels required when called:   15
 17571 ;; This function calls:
 17572 ;;		Nothing
 17573 ;; This function is called by:
 17574 ;;		_calc_bsoc
 17575 ;;		_init_bsoc
 17576 ;;		_efgtoa
 17577 ;; This function uses a reentrant model
 17578 ;;
 17579                           
 17580                           	psect	text61
 17581  017E8C                     __ptext61:
 17582                           	opt callstack 0
 17583  017E8C                     ___fltol:
 17584                           	opt callstack 0
 17585                           
 17586                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17587  017E8C  52E6               	movf	postinc1,f,c
 17588  017E8E  52E6               	movf	postinc1,f,c
 17589                           
 17590                           ;stkvar	_f1 @ sp[(-2)+-4]
 17591                           
 17592                           ;incstack = 0
 17593 ;; hardware stack exceeded
 17594  017E90  0EFA               	movlw	-6
 17595  017E92  006F FF8C  F009    	movff	plusw1,btemp+8
 17596  017E98  0EFB               	movlw	-5
 17597  017E9A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17598  017EA0  0EFC               	movlw	-4
 17599  017EA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17600  017EA8  0EFD               	movlw	-3
 17601  017EAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17602  017EB0  0E18               	movlw	24
 17603  017EB2  D005               	goto	u6840
 17604  017EB4                     u6845:
 17605  017EB4  90D8               	bcf	status,0,c
 17606  017EB6  320C               	rrcf	(btemp+11)^0,f,c
 17607  017EB8  320B               	rrcf	(btemp+10)^0,f,c
 17608  017EBA  320A               	rrcf	(btemp+9)^0,f,c
 17609  017EBC  3209               	rrcf	(btemp+8)^0,f,c
 17610  017EBE                     u6840:
 17611  017EBE  2EE8               	decfsz	wreg,f,c
 17612  017EC0  D7F9               	goto	u6845
 17613                           
 17614                           ;stkvar	_exp1 @ sp[(-2)+0]
 17615  017EC2  0EFE               	movlw	-2
 17616  017EC4  0060  F027  FFE3   	movff	btemp+8,plusw1
 17617  017ECA  0EFE               	movlw	-2
 17618  017ECC  50E3               	movf	plusw1,w,c
 17619  017ECE  A4D8               	btfss	status,2,c
 17620  017ED0  D006               	goto	l8226
 17621  017ED2                     u6850:
 17622  017ED2  0E00               	movlw	0
 17623  017ED4  6E01               	movwf	btemp^0,c
 17624  017ED6  6A02               	clrf	(btemp+1)^0,c
 17625  017ED8  6A03               	clrf	(btemp+2)^0,c
 17626  017EDA  6A04               	clrf	(btemp+3)^0,c
 17627  017EDC  D08B               	goto	l2632
 17628  017EDE                     l8226:
 17629                           
 17630                           ;stkvar	_f1 @ sp[(-2)+-4]
 17631  017EDE  0EFA               	movlw	-6
 17632  017EE0  006F FF8C  F009    	movff	plusw1,btemp+8
 17633  017EE6  0EFB               	movlw	-5
 17634  017EE8  006F FF8C  F00A    	movff	plusw1,btemp+9
 17635  017EEE  0EFC               	movlw	-4
 17636  017EF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17637  017EF6  0EFD               	movlw	-3
 17638  017EF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17639  017EFE  0E20               	movlw	32
 17640  017F00  D005               	goto	u6860
 17641  017F02                     u6865:
 17642  017F02  90D8               	bcf	status,0,c
 17643  017F04  320C               	rrcf	(btemp+11)^0,f,c
 17644  017F06  320B               	rrcf	(btemp+10)^0,f,c
 17645  017F08  320A               	rrcf	(btemp+9)^0,f,c
 17646  017F0A  3209               	rrcf	(btemp+8)^0,f,c
 17647  017F0C                     u6860:
 17648  017F0C  2EE8               	decfsz	wreg,f,c
 17649  017F0E  D7F9               	goto	u6865
 17650                           
 17651                           ;stkvar	_sign1 @ sp[(-2)+1]
 17652  017F10  0EFF               	movlw	-1
 17653  017F12  0060  F027  FFE3   	movff	btemp+8,plusw1
 17654                           
 17655                           ;stkvar	_f1 @ sp[(-2)+-4]
 17656  017F18  0EFC               	movlw	-4
 17657  017F1A  8EE3               	bsf	plusw1,7,c
 17658                           
 17659                           ;stkvar	_f1 @ sp[(-2)+-4]
 17660  017F1C  50E1               	movf	fsr1l,w,c
 17661  017F1E  0FFA               	addlw	-6
 17662  017F20  6ED9               	movwf	fsr2l,c
 17663  017F22  50E2               	movf	fsr1h,w,c
 17664  017F24  6EDA               	movwf	fsr2h,c
 17665  017F26  0EFF               	movlw	255
 17666  017F28  22DA               	addwfc	fsr2h,f,c
 17667  017F2A  0EFF               	movlw	255
 17668  017F2C  16DE               	andwf	postinc2,f,c
 17669  017F2E  0EFF               	movlw	255
 17670  017F30  16DE               	andwf	postinc2,f,c
 17671  017F32  0EFF               	movlw	255
 17672  017F34  16DE               	andwf	postinc2,f,c
 17673  017F36  0E00               	movlw	0
 17674  017F38  16DE               	andwf	postinc2,f,c
 17675                           
 17676                           ;stkvar	_exp1 @ sp[(-2)+0]
 17677  017F3A  0EFE               	movlw	-2
 17678  017F3C  006F FF8C  F001    	movff	plusw1,btemp
 17679  017F42  0E96               	movlw	150
 17680  017F44  5E01               	subwf	btemp^0,f,c
 17681  017F46  0EFE               	movlw	-2
 17682  017F48  0060  F007  FFE3   	movff	btemp,plusw1
 17683                           
 17684                           ;stkvar	_exp1 @ sp[(-2)+0]
 17685  017F4E  0EFE               	movlw	-2
 17686  017F50  AEE3               	btfss	plusw1,7,c
 17687  017F52  D014               	goto	l8244
 17688                           
 17689                           ;stkvar	_exp1 @ sp[(-2)+0]
 17690  017F54  0EFE               	movlw	-2
 17691  017F56  50E3               	movf	plusw1,w,c
 17692  017F58  0A80               	xorlw	128
 17693  017F5A  0F97               	addlw	151
 17694  017F5C  A0D8               	btfss	status,0,c
 17695  017F5E  D7B9               	goto	u6850
 17696  017F60                     l8242:
 17697                           
 17698                           ;stkvar	_f1 @ sp[(-2)+-4]
 17699  017F60  90D8               	bcf	status,0,c
 17700  017F62  0EFD               	movlw	-3
 17701  017F64  32E3               	rrcf	plusw1,f,c
 17702  017F66  0EFC               	movlw	-4
 17703  017F68  32E3               	rrcf	plusw1,f,c
 17704  017F6A  0EFB               	movlw	-5
 17705  017F6C  32E3               	rrcf	plusw1,f,c
 17706  017F6E  0EFA               	movlw	-6
 17707  017F70  32E3               	rrcf	plusw1,f,c
 17708                           
 17709                           ;stkvar	_exp1 @ sp[(-2)+0]
 17710  017F72  0EFE               	movlw	-2
 17711  017F74  2AE3               	incf	plusw1,f,c
 17712  017F76  B4D8               	btfsc	status,2,c
 17713  017F78  D018               	goto	u6910
 17714  017F7A  D7F2               	goto	l8242
 17715  017F7C                     l8244:
 17716                           
 17717                           ;stkvar	_exp1 @ sp[(-2)+0]
 17718  017F7C  0EFE               	movlw	-2
 17719  017F7E  006F FF8C  F001    	movff	plusw1,btemp
 17720  017F84  0E1F               	movlw	31
 17721  017F86  6401               	cpfsgt	btemp^0,c
 17722  017F88  D00C               	goto	l8252
 17723  017F8A  D7A3               	goto	u6850
 17724  017F8C                     l8250:
 17725                           
 17726                           ;stkvar	_f1 @ sp[(-2)+-4]
 17727  017F8C  90D8               	bcf	status,0,c
 17728  017F8E  0EFA               	movlw	-6
 17729  017F90  36E3               	rlcf	plusw1,f,c
 17730  017F92  0EFB               	movlw	-5
 17731  017F94  36E3               	rlcf	plusw1,f,c
 17732  017F96  0EFC               	movlw	-4
 17733  017F98  36E3               	rlcf	plusw1,f,c
 17734  017F9A  0EFD               	movlw	-3
 17735  017F9C  36E3               	rlcf	plusw1,f,c
 17736                           
 17737                           ;stkvar	_exp1 @ sp[(-2)+0]
 17738  017F9E  0EFE               	movlw	-2
 17739  017FA0  06E3               	decf	plusw1,f,c
 17740  017FA2                     l8252:
 17741                           
 17742                           ;stkvar	_exp1 @ sp[(-2)+0]
 17743  017FA2  0EFE               	movlw	-2
 17744  017FA4  50E3               	movf	plusw1,w,c
 17745  017FA6  A4D8               	btfss	status,2,c
 17746  017FA8  D7F1               	goto	l8250
 17747  017FAA                     u6910:
 17748                           
 17749                           ;stkvar	_sign1 @ sp[(-2)+1]
 17750  017FAA  0EFF               	movlw	-1
 17751  017FAC  50E3               	movf	plusw1,w,c
 17752  017FAE  B4D8               	btfsc	status,2,c
 17753  017FB0  D011               	goto	u6930
 17754                           
 17755                           ;stkvar	_f1 @ sp[(-2)+-4]
 17756                           ;stkvar	_f1 @ sp[(-2)+-4]
 17757  017FB2  0EFA               	movlw	-6
 17758  017FB4  6CE3               	negf	plusw1,c
 17759  017FB6  0EFB               	movlw	-5
 17760  017FB8  1EE3               	comf	plusw1,f,c
 17761  017FBA  0EFC               	movlw	-4
 17762  017FBC  1EE3               	comf	plusw1,f,c
 17763  017FBE  0EFD               	movlw	-3
 17764  017FC0  1EE3               	comf	plusw1,f,c
 17765  017FC2  E308               	bnc	u6930
 17766  017FC4  0EFB               	movlw	-5
 17767  017FC6  2AE3               	incf	plusw1,f,c
 17768  017FC8  E305               	bnc	u6930
 17769  017FCA  0EFC               	movlw	-4
 17770  017FCC  2AE3               	incf	plusw1,f,c
 17771  017FCE  E302               	bnc	u6930
 17772  017FD0  0EFD               	movlw	-3
 17773  017FD2  2AE3               	incf	plusw1,f,c
 17774  017FD4                     u6930:
 17775                           
 17776                           ;stkvar	_f1 @ sp[(-2)+-4]
 17777  017FD4  0EFA               	movlw	-6
 17778  017FD6  006F FF8C  F001    	movff	plusw1,btemp
 17779  017FDC  0EFB               	movlw	-5
 17780  017FDE  006F FF8C  F002    	movff	plusw1,btemp+1
 17781  017FE4  0EFC               	movlw	-4
 17782  017FE6  006F FF8C  F003    	movff	plusw1,btemp+2
 17783  017FEC  0EFD               	movlw	-3
 17784  017FEE  006F FF8C  F004    	movff	plusw1,btemp+3
 17785  017FF4                     l2632:
 17786                           
 17787                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17788  017FF4  0EFA               	movlw	250
 17789  017FF6  26E1               	addwf	fsr1l,f,c
 17790  017FF8  0EFF               	movlw	255
 17791  017FFA  22E2               	addwfc	fsr1h,f,c
 17792  017FFC  0012               	return		;funcret
 17793  017FFE                     __end_of___fltol:
 17794                           	opt callstack 0
 17795                           
 17796 ;; *************** function ___flneg *****************
 17797 ;; Defined at:
 17798 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 17799 ;; Parameters:    Size  Location     Type
 17800 ;;  f1              4  [STACK] long 
 17801 ;; Auto vars:     Size  Location     Type
 17802 ;;		None
 17803 ;; Return value:  Size  Location     Type
 17804 ;;                  4  [STACK] long 
 17805 ;; Registers used:
 17806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 17807 ;; Tracked objects:
 17808 ;;		On entry : 0/0
 17809 ;;		On exit  : 0/0
 17810 ;;		Unchanged: 0/0
 17811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17816 ;;Total ram usage:        0 bytes
 17817 ;; Hardware stack levels used:    1
 17818 ;; Hardware stack levels required when called:   15
 17819 ;; This function calls:
 17820 ;;		Nothing
 17821 ;; This function is called by:
 17822 ;;		_calc_bsoc
 17823 ;;		_efgtoa
 17824 ;; This function uses a reentrant model
 17825 ;;
 17826                           
 17827                           	psect	text62
 17828  01A474                     __ptext62:
 17829                           	opt callstack 0
 17830  01A474                     ___flneg:
 17831                           	opt callstack 0
 17832                           
 17833                           ;stkvar	_f1 @ sp[(0)+-4]
 17834                           
 17835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17836                           ;incstack = 0
 17837 ;; hardware stack exceeded
 17838  01A474  0EFC               	movlw	-4
 17839  01A476  50E3               	movf	plusw1,w,c
 17840  01A478  E10A               	bnz	u6830
 17841  01A47A  0EFD               	movlw	-3
 17842  01A47C  50E3               	movf	plusw1,w,c
 17843  01A47E  E107               	bnz	u6830
 17844  01A480  0EFE               	movlw	-2
 17845  01A482  50E3               	movf	plusw1,w,c
 17846  01A484  E104               	bnz	u6830
 17847  01A486  0EFF               	movlw	-1
 17848  01A488  50E3               	movf	plusw1,w,c
 17849  01A48A  B4D8               	btfsc	status,2,c
 17850  01A48C  D002               	goto	l8216
 17851  01A48E                     u6830:
 17852                           
 17853                           ;stkvar	_f1 @ sp[(0)+-4]
 17854  01A48E  0EFF               	movlw	-1
 17855  01A490  7EE3               	btg	plusw1,7,c
 17856  01A492                     l8216:
 17857                           
 17858                           ;stkvar	_f1 @ sp[(0)+-4]
 17859  01A492  0EFC               	movlw	-4
 17860  01A494  006F FF8C  F001    	movff	plusw1,btemp
 17861  01A49A  0EFD               	movlw	-3
 17862  01A49C  006F FF8C  F002    	movff	plusw1,btemp+1
 17863  01A4A2  0EFE               	movlw	-2
 17864  01A4A4  006F FF8C  F003    	movff	plusw1,btemp+2
 17865  01A4AA  0EFF               	movlw	-1
 17866  01A4AC  006F FF8C  F004    	movff	plusw1,btemp+3
 17867                           
 17868                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17869  01A4B2  52E5               	movf	postdec1,f,c
 17870  01A4B4  52E5               	movf	postdec1,f,c
 17871  01A4B6  52E5               	movf	postdec1,f,c
 17872  01A4B8  52E5               	movf	postdec1,f,c
 17873  01A4BA  0012               	return		;funcret
 17874  01A4BC                     __end_of___flneg:
 17875                           	opt callstack 0
 17876                           
 17877 ;; *************** function ___fleq *****************
 17878 ;; Defined at:
 17879 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17880 ;; Parameters:    Size  Location     Type
 17881 ;;  ff1             4  [STACK] long 
 17882 ;;  ff2             4  [STACK] long 
 17883 ;; Auto vars:     Size  Location     Type
 17884 ;;		None
 17885 ;; Return value:  Size  Location     Type
 17886 ;;		None               void
 17887 ;; Registers used:
 17888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17889 ;; Tracked objects:
 17890 ;;		On entry : 0/0
 17891 ;;		On exit  : 0/0
 17892 ;;		Unchanged: 0/0
 17893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17898 ;;Total ram usage:        0 bytes
 17899 ;; Hardware stack levels used:    1
 17900 ;; Hardware stack levels required when called:   15
 17901 ;; This function calls:
 17902 ;;		Nothing
 17903 ;; This function is called by:
 17904 ;;		_efgtoa
 17905 ;; This function uses a reentrant model
 17906 ;;
 17907                           
 17908                           	psect	text63
 17909  01943C                     __ptext63:
 17910                           	opt callstack 0
 17911  01943C                     ___fleq:
 17912                           	opt callstack 0
 17913                           
 17914                           ;stkvar	_ff1 @ sp[(0)+-4]
 17915                           
 17916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17917                           ;incstack = 0
 17918 ;; hardware stack exceeded
 17919  01943C  50E1               	movf	fsr1l,w,c
 17920  01943E  0FFC               	addlw	-4
 17921  019440  6ED9               	movwf	fsr2l,c
 17922  019442  50E2               	movf	fsr1h,w,c
 17923  019444  6EDA               	movwf	fsr2h,c
 17924  019446  0EFF               	movlw	255
 17925  019448  22DA               	addwfc	fsr2h,f,c
 17926  01944A  0E00               	movlw	0
 17927  01944C  14DE               	andwf	postinc2,w,c
 17928  01944E  6E09               	movwf	(btemp+8)^0,c
 17929  019450  0E00               	movlw	0
 17930  019452  14DE               	andwf	postinc2,w,c
 17931  019454  6E0A               	movwf	(btemp+9)^0,c
 17932  019456  0E80               	movlw	128
 17933  019458  14DE               	andwf	postinc2,w,c
 17934  01945A  6E0B               	movwf	(btemp+10)^0,c
 17935  01945C  0E7F               	movlw	127
 17936  01945E  14DE               	andwf	postinc2,w,c
 17937  019460  6E0C               	movwf	(btemp+11)^0,c
 17938  019462  5009               	movf	(btemp+8)^0,w,c
 17939  019464  100A               	iorwf	(btemp+9)^0,w,c
 17940  019466  100B               	iorwf	(btemp+10)^0,w,c
 17941  019468  100C               	iorwf	(btemp+11)^0,w,c
 17942  01946A  A4D8               	btfss	status,2,c
 17943  01946C  D008               	goto	l8174
 17944                           
 17945                           ;stkvar	_ff1 @ sp[(0)+-4]
 17946  01946E  0EFC               	movlw	-4
 17947  019470  6AE3               	clrf	plusw1,c
 17948  019472  0EFD               	movlw	-3
 17949  019474  6AE3               	clrf	plusw1,c
 17950  019476  0EFE               	movlw	-2
 17951  019478  6AE3               	clrf	plusw1,c
 17952  01947A  0EFF               	movlw	-1
 17953  01947C  6AE3               	clrf	plusw1,c
 17954  01947E                     l8174:
 17955                           
 17956                           ;stkvar	_ff2 @ sp[(0)+-8]
 17957  01947E  50E1               	movf	fsr1l,w,c
 17958  019480  0FF8               	addlw	-8
 17959  019482  6ED9               	movwf	fsr2l,c
 17960  019484  50E2               	movf	fsr1h,w,c
 17961  019486  6EDA               	movwf	fsr2h,c
 17962  019488  0EFF               	movlw	255
 17963  01948A  22DA               	addwfc	fsr2h,f,c
 17964  01948C  0E00               	movlw	0
 17965  01948E  14DE               	andwf	postinc2,w,c
 17966  019490  6E09               	movwf	(btemp+8)^0,c
 17967  019492  0E00               	movlw	0
 17968  019494  14DE               	andwf	postinc2,w,c
 17969  019496  6E0A               	movwf	(btemp+9)^0,c
 17970  019498  0E80               	movlw	128
 17971  01949A  14DE               	andwf	postinc2,w,c
 17972  01949C  6E0B               	movwf	(btemp+10)^0,c
 17973  01949E  0E7F               	movlw	127
 17974  0194A0  14DE               	andwf	postinc2,w,c
 17975  0194A2  6E0C               	movwf	(btemp+11)^0,c
 17976  0194A4  5009               	movf	(btemp+8)^0,w,c
 17977  0194A6  100A               	iorwf	(btemp+9)^0,w,c
 17978  0194A8  100B               	iorwf	(btemp+10)^0,w,c
 17979  0194AA  100C               	iorwf	(btemp+11)^0,w,c
 17980  0194AC  A4D8               	btfss	status,2,c
 17981  0194AE  D008               	goto	l8178
 17982                           
 17983                           ;stkvar	_ff2 @ sp[(0)+-8]
 17984  0194B0  0EF8               	movlw	-8
 17985  0194B2  6AE3               	clrf	plusw1,c
 17986  0194B4  0EF9               	movlw	-7
 17987  0194B6  6AE3               	clrf	plusw1,c
 17988  0194B8  0EFA               	movlw	-6
 17989  0194BA  6AE3               	clrf	plusw1,c
 17990  0194BC  0EFB               	movlw	-5
 17991  0194BE  6AE3               	clrf	plusw1,c
 17992  0194C0                     l8178:
 17993                           
 17994                           ;stkvar	_ff2 @ sp[(0)+-8]
 17995                           ;stkvar	_ff1 @ sp[(0)+-4]
 17996  0194C0  50E1               	movf	fsr1l,w,c
 17997  0194C2  0FFC               	addlw	-4
 17998  0194C4  6ED9               	movwf	fsr2l,c
 17999  0194C6  50E2               	movf	fsr1h,w,c
 18000  0194C8  6EDA               	movwf	fsr2h,c
 18001  0194CA  0EFF               	movlw	255
 18002  0194CC  22DA               	addwfc	fsr2h,f,c
 18003  0194CE  0EF8               	movlw	-8
 18004  0194D0  50E3               	movf	plusw1,w,c
 18005  0194D2  18DE               	xorwf	postinc2,w,c
 18006  0194D4  E10D               	bnz	u6770
 18007  0194D6  0EF9               	movlw	-7
 18008  0194D8  50E3               	movf	plusw1,w,c
 18009  0194DA  18DE               	xorwf	postinc2,w,c
 18010  0194DC  E109               	bnz	u6770
 18011  0194DE  0EFA               	movlw	-6
 18012  0194E0  50E3               	movf	plusw1,w,c
 18013  0194E2  18DE               	xorwf	postinc2,w,c
 18014  0194E4  E105               	bnz	u6770
 18015  0194E6  0EFB               	movlw	-5
 18016  0194E8  50E3               	movf	plusw1,w,c
 18017  0194EA  18DE               	xorwf	postinc2,w,c
 18018  0194EC  B4D8               	btfsc	status,2,c
 18019  0194EE  D002               	goto	l8182
 18020  0194F0                     u6770:
 18021  0194F0  9001               	bcf	btemp& (0+255),0,c
 18022  0194F2  D001               	goto	l2594
 18023  0194F4                     l8182:
 18024  0194F4  8001               	bsf	btemp& (0+255),0,c
 18025  0194F6                     l2594:
 18026                           
 18027                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18028  0194F6  0EF8               	movlw	248
 18029  0194F8  26E1               	addwf	fsr1l,f,c
 18030  0194FA  0EFF               	movlw	255
 18031  0194FC  22E2               	addwfc	fsr1h,f,c
 18032  0194FE  0012               	return		;funcret
 18033  019500                     __end_of___fleq:
 18034                           	opt callstack 0
 18035                           
 18036 ;; *************** function ___awmod *****************
 18037 ;; Defined at:
 18038 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18039 ;; Parameters:    Size  Location     Type
 18040 ;;  dividend        2  [STACK] int 
 18041 ;;  divisor         2  [STACK] int 
 18042 ;; Auto vars:     Size  Location     Type
 18043 ;;  sign            1  [STACK] unsigned char 
 18044 ;;  counter         1  [STACK] unsigned char 
 18045 ;; Return value:  Size  Location     Type
 18046 ;;                  2  [STACK] int 
 18047 ;; Registers used:
 18048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18049 ;; Tracked objects:
 18050 ;;		On entry : 0/0
 18051 ;;		On exit  : 0/0
 18052 ;;		Unchanged: 0/0
 18053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18058 ;;Total ram usage:        0 bytes
 18059 ;; Hardware stack levels used:    1
 18060 ;; Hardware stack levels required when called:   15
 18061 ;; This function calls:
 18062 ;;		Nothing
 18063 ;; This function is called by:
 18064 ;;		_efgtoa
 18065 ;; This function uses a reentrant model
 18066 ;;
 18067                           
 18068                           	psect	text64
 18069  018A4E                     __ptext64:
 18070                           	opt callstack 0
 18071  018A4E                     ___awmod:
 18072                           	opt callstack 0
 18073                           
 18074                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18075  018A4E  52E6               	movf	postinc1,f,c
 18076  018A50  52E6               	movf	postinc1,f,c
 18077                           
 18078                           ;stkvar	_sign @ sp[(-2)+0]
 18079                           
 18080                           ;incstack = 0
 18081 ;; hardware stack exceeded
 18082  018A52  0EFE               	movlw	-2
 18083  018A54  6AE3               	clrf	plusw1,c
 18084                           
 18085                           ;stkvar	_dividend @ sp[(-2)+-2]
 18086  018A56  0EFD               	movlw	-3
 18087  018A58  AEE3               	btfss	plusw1,7,c
 18088  018A5A  D009               	goto	l8140
 18089                           
 18090                           ;stkvar	_dividend @ sp[(-2)+-2]
 18091                           ;stkvar	_dividend @ sp[(-2)+-2]
 18092  018A5C  0EFC               	movlw	-4
 18093  018A5E  6CE3               	negf	plusw1,c
 18094  018A60  0EFD               	movlw	-3
 18095  018A62  1EE3               	comf	plusw1,f,c
 18096  018A64  B0D8               	btfsc	status,0,c
 18097  018A66  2AE3               	incf	plusw1,f,c
 18098                           
 18099                           ;stkvar	_sign @ sp[(-2)+0]
 18100  018A68  0EFE               	movlw	-2
 18101  018A6A  6AE3               	clrf	plusw1,c
 18102  018A6C  2AE3               	incf	plusw1,f,c
 18103  018A6E                     l8140:
 18104                           
 18105                           ;stkvar	_divisor @ sp[(-2)+-4]
 18106  018A6E  0EFB               	movlw	-5
 18107  018A70  AEE3               	btfss	plusw1,7,c
 18108  018A72  D006               	goto	l8144
 18109                           
 18110                           ;stkvar	_divisor @ sp[(-2)+-4]
 18111                           ;stkvar	_divisor @ sp[(-2)+-4]
 18112  018A74  0EFA               	movlw	-6
 18113  018A76  6CE3               	negf	plusw1,c
 18114  018A78  0EFB               	movlw	-5
 18115  018A7A  1EE3               	comf	plusw1,f,c
 18116  018A7C  B0D8               	btfsc	status,0,c
 18117  018A7E  2AE3               	incf	plusw1,f,c
 18118  018A80                     l8144:
 18119                           
 18120                           ;stkvar	_divisor @ sp[(-2)+-4]
 18121  018A80  0EFA               	movlw	-6
 18122  018A82  006F FF8C  F001    	movff	plusw1,btemp
 18123  018A88  0EFB               	movlw	-5
 18124  018A8A  50E3               	movf	plusw1,w,c
 18125  018A8C  1001               	iorwf	btemp^0,w,c
 18126  018A8E  B4D8               	btfsc	status,2,c
 18127  018A90  D053               	goto	u6730
 18128                           
 18129                           ;stkvar	_counter @ sp[(-2)+1]
 18130  018A92  0EFF               	movlw	-1
 18131  018A94  6AE3               	clrf	plusw1,c
 18132  018A96  D012               	goto	L17
 18133  018A98                     l8148:
 18134                           
 18135                           ;stkvar	_divisor @ sp[(-2)+-4]
 18136  018A98  0EFA               	movlw	-6
 18137  018A9A  50E3               	movf	plusw1,w,c
 18138  018A9C  90D8               	bcf	status,0,c
 18139  018A9E  34E8               	rlcf	wreg,w,c
 18140  018AA0  6E01               	movwf	btemp^0,c
 18141  018AA2  0EFA               	movlw	-6
 18142  018AA4  0060  F007  FFE3   	movff	btemp,plusw1
 18143  018AAA  0EFB               	movlw	-5
 18144  018AAC  50E3               	movf	plusw1,w,c
 18145  018AAE  34E8               	rlcf	wreg,w,c
 18146  018AB0  6E01               	movwf	btemp^0,c
 18147  018AB2  0EFB               	movlw	-5
 18148  018AB4  0060  F007  FFE3   	movff	btemp,plusw1
 18149                           
 18150                           ;stkvar	_counter @ sp[(-2)+1]
 18151  018ABA  0EFF               	movlw	-1
 18152  018ABC                     L17:
 18153  018ABC  2AE3               	incf	plusw1,f,c
 18154                           
 18155                           ;stkvar	_divisor @ sp[(-2)+-4]
 18156  018ABE  0EFB               	movlw	-5
 18157  018AC0  AEE3               	btfss	plusw1,7,c
 18158  018AC2  D7EA               	goto	l8148
 18159  018AC4                     u6710:
 18160                           
 18161                           ;stkvar	_divisor @ sp[(-2)+-4]
 18162  018AC4  0EFA               	movlw	-6
 18163  018AC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18164  018ACC  0EFB               	movlw	-5
 18165  018ACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18166                           
 18167                           ;stkvar	_dividend @ sp[(-2)+-2]
 18168  018AD4  0EFC               	movlw	-4
 18169  018AD6  006F FF8C  F009    	movff	plusw1,btemp+8
 18170  018ADC  0EFD               	movlw	-3
 18171  018ADE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18172  018AE4  500B               	movf	(btemp+10)^0,w,c
 18173  018AE6  5C09               	subwf	(btemp+8)^0,w,c
 18174  018AE8  500C               	movf	(btemp+11)^0,w,c
 18175  018AEA  580A               	subwfb	(btemp+9)^0,w,c
 18176  018AEC  A0D8               	btfss	status,0,c
 18177  018AEE  D014               	goto	l8158
 18178                           
 18179                           ;stkvar	_divisor @ sp[(-2)+-4]
 18180                           ;stkvar	_dividend @ sp[(-2)+-2]
 18181  018AF0  0EFC               	movlw	-4
 18182  018AF2  50E3               	movf	plusw1,w,c
 18183  018AF4  6E01               	movwf	btemp^0,c
 18184  018AF6  0EFA               	movlw	-6
 18185  018AF8  50E3               	movf	plusw1,w,c
 18186  018AFA  5E01               	subwf	btemp^0,f,c
 18187  018AFC  0EFC               	movlw	-4
 18188  018AFE  0060  F007  FFE3   	movff	btemp,plusw1
 18189  018B04  0EFD               	movlw	-3
 18190  018B06  50E3               	movf	plusw1,w,c
 18191  018B08  6E01               	movwf	btemp^0,c
 18192  018B0A  0EFB               	movlw	-5
 18193  018B0C  50E3               	movf	plusw1,w,c
 18194  018B0E  5A01               	subwfb	btemp^0,f,c
 18195  018B10  0EFD               	movlw	-3
 18196  018B12  0060  F007  FFE3   	movff	btemp,plusw1
 18197  018B18                     l8158:
 18198                           
 18199                           ;stkvar	_divisor @ sp[(-2)+-4]
 18200  018B18  90D8               	bcf	status,0,c
 18201  018B1A  0EFB               	movlw	-5
 18202  018B1C  32E3               	rrcf	plusw1,f,c
 18203  018B1E  0EFA               	movlw	-6
 18204  018B20  32E3               	rrcf	plusw1,f,c
 18205                           
 18206                           ;stkvar	_counter @ sp[(-2)+1]
 18207  018B22  0EFF               	movlw	-1
 18208  018B24  50E3               	movf	plusw1,w,c
 18209  018B26  6E01               	movwf	btemp^0,c
 18210  018B28  0E01               	movlw	1
 18211  018B2A  5E01               	subwf	btemp^0,f,c
 18212  018B2C  0EFF               	movlw	-1
 18213  018B2E  0060  F007  FFE3   	movff	btemp,plusw1
 18214  018B34  A4D8               	btfss	status,2,c
 18215  018B36  D7C6               	goto	u6710
 18216  018B38                     u6730:
 18217                           
 18218                           ;stkvar	_sign @ sp[(-2)+0]
 18219  018B38  0EFE               	movlw	-2
 18220  018B3A  50E3               	movf	plusw1,w,c
 18221  018B3C  B4D8               	btfsc	status,2,c
 18222  018B3E  D006               	goto	l8166
 18223                           
 18224                           ;stkvar	_dividend @ sp[(-2)+-2]
 18225                           ;stkvar	_dividend @ sp[(-2)+-2]
 18226  018B40  0EFC               	movlw	-4
 18227  018B42  6CE3               	negf	plusw1,c
 18228  018B44  0EFD               	movlw	-3
 18229  018B46  1EE3               	comf	plusw1,f,c
 18230  018B48  B0D8               	btfsc	status,0,c
 18231  018B4A  2AE3               	incf	plusw1,f,c
 18232  018B4C                     l8166:
 18233                           
 18234                           ;stkvar	_dividend @ sp[(-2)+-2]
 18235  018B4C  0EFC               	movlw	-4
 18236  018B4E  006F FF8C  F001    	movff	plusw1,btemp
 18237  018B54  0EFD               	movlw	-3
 18238  018B56  006F FF8C  F002    	movff	plusw1,btemp+1
 18239                           
 18240                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18241  018B5C  0EFA               	movlw	250
 18242  018B5E  26E1               	addwf	fsr1l,f,c
 18243  018B60  0EFF               	movlw	255
 18244  018B62  22E2               	addwfc	fsr1h,f,c
 18245  018B64  0012               	return		;funcret
 18246  018B66                     __end_of___awmod:
 18247                           	opt callstack 0
 18248                           
 18249 ;; *************** function ___awdiv *****************
 18250 ;; Defined at:
 18251 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18252 ;; Parameters:    Size  Location     Type
 18253 ;;  dividend        2  [STACK] int 
 18254 ;;  divisor         2  [STACK] int 
 18255 ;; Auto vars:     Size  Location     Type
 18256 ;;  quotient        2  [STACK] int 
 18257 ;;  sign            1  [STACK] unsigned char 
 18258 ;;  counter         1  [STACK] unsigned char 
 18259 ;; Return value:  Size  Location     Type
 18260 ;;                  2  [STACK] int 
 18261 ;; Registers used:
 18262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18263 ;; Tracked objects:
 18264 ;;		On entry : 0/0
 18265 ;;		On exit  : 0/0
 18266 ;;		Unchanged: 0/0
 18267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18272 ;;Total ram usage:        0 bytes
 18273 ;; Hardware stack levels used:    1
 18274 ;; Hardware stack levels required when called:   15
 18275 ;; This function calls:
 18276 ;;		Nothing
 18277 ;; This function is called by:
 18278 ;;		_efgtoa
 18279 ;; This function uses a reentrant model
 18280 ;;
 18281                           
 18282                           	psect	text65
 18283  018432                     __ptext65:
 18284                           	opt callstack 0
 18285  018432                     ___awdiv:
 18286                           	opt callstack 0
 18287                           
 18288                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18289  018432  52E6               	movf	postinc1,f,c
 18290  018434  52E6               	movf	postinc1,f,c
 18291  018436  52E6               	movf	postinc1,f,c
 18292  018438  52E6               	movf	postinc1,f,c
 18293                           
 18294                           ;stkvar	_sign @ sp[(-4)+2]
 18295                           
 18296                           ;incstack = 0
 18297 ;; hardware stack exceeded
 18298  01843A  0EFE               	movlw	-2
 18299  01843C  6AE3               	clrf	plusw1,c
 18300                           
 18301                           ;stkvar	_divisor @ sp[(-4)+-4]
 18302  01843E  0EF9               	movlw	-7
 18303  018440  AEE3               	btfss	plusw1,7,c
 18304  018442  D009               	goto	l8094
 18305                           
 18306                           ;stkvar	_divisor @ sp[(-4)+-4]
 18307                           ;stkvar	_divisor @ sp[(-4)+-4]
 18308  018444  0EF8               	movlw	-8
 18309  018446  6CE3               	negf	plusw1,c
 18310  018448  0EF9               	movlw	-7
 18311  01844A  1EE3               	comf	plusw1,f,c
 18312  01844C  B0D8               	btfsc	status,0,c
 18313  01844E  2AE3               	incf	plusw1,f,c
 18314                           
 18315                           ;stkvar	_sign @ sp[(-4)+2]
 18316  018450  0EFE               	movlw	-2
 18317  018452  6AE3               	clrf	plusw1,c
 18318  018454  2AE3               	incf	plusw1,f,c
 18319  018456                     l8094:
 18320                           
 18321                           ;stkvar	_dividend @ sp[(-4)+-2]
 18322  018456  0EFB               	movlw	-5
 18323  018458  AEE3               	btfss	plusw1,7,c
 18324  01845A  D008               	goto	l8100
 18325                           
 18326                           ;stkvar	_dividend @ sp[(-4)+-2]
 18327                           ;stkvar	_dividend @ sp[(-4)+-2]
 18328  01845C  0EFA               	movlw	-6
 18329  01845E  6CE3               	negf	plusw1,c
 18330  018460  0EFB               	movlw	-5
 18331  018462  1EE3               	comf	plusw1,f,c
 18332  018464  B0D8               	btfsc	status,0,c
 18333  018466  2AE3               	incf	plusw1,f,c
 18334                           
 18335                           ;stkvar	_sign @ sp[(-4)+2]
 18336  018468  0EFE               	movlw	-2
 18337  01846A  70E3               	btg	plusw1,0,c
 18338  01846C                     l8100:
 18339                           
 18340                           ;stkvar	_quotient @ sp[(-4)+0]
 18341  01846C  0EFC               	movlw	-4
 18342  01846E  6AE3               	clrf	plusw1,c
 18343  018470  0EFD               	movlw	-3
 18344  018472  6AE3               	clrf	plusw1,c
 18345                           
 18346                           ;stkvar	_divisor @ sp[(-4)+-4]
 18347  018474  0EF8               	movlw	-8
 18348  018476  006F FF8C  F001    	movff	plusw1,btemp
 18349  01847C  0EF9               	movlw	-7
 18350  01847E  50E3               	movf	plusw1,w,c
 18351  018480  1001               	iorwf	btemp^0,w,c
 18352  018482  B4D8               	btfsc	status,2,c
 18353  018484  D066               	goto	u6660
 18354                           
 18355                           ;stkvar	_counter @ sp[(-4)+3]
 18356  018486  0EFF               	movlw	-1
 18357  018488  6AE3               	clrf	plusw1,c
 18358  01848A  D012               	goto	L18
 18359  01848C                     l8106:
 18360                           
 18361                           ;stkvar	_divisor @ sp[(-4)+-4]
 18362  01848C  0EF8               	movlw	-8
 18363  01848E  50E3               	movf	plusw1,w,c
 18364  018490  90D8               	bcf	status,0,c
 18365  018492  34E8               	rlcf	wreg,w,c
 18366  018494  6E01               	movwf	btemp^0,c
 18367  018496  0EF8               	movlw	-8
 18368  018498  0060  F007  FFE3   	movff	btemp,plusw1
 18369  01849E  0EF9               	movlw	-7
 18370  0184A0  50E3               	movf	plusw1,w,c
 18371  0184A2  34E8               	rlcf	wreg,w,c
 18372  0184A4  6E01               	movwf	btemp^0,c
 18373  0184A6  0EF9               	movlw	-7
 18374  0184A8  0060  F007  FFE3   	movff	btemp,plusw1
 18375                           
 18376                           ;stkvar	_counter @ sp[(-4)+3]
 18377  0184AE  0EFF               	movlw	-1
 18378  0184B0                     L18:
 18379  0184B0  2AE3               	incf	plusw1,f,c
 18380                           
 18381                           ;stkvar	_divisor @ sp[(-4)+-4]
 18382  0184B2  0EF9               	movlw	-7
 18383  0184B4  AEE3               	btfss	plusw1,7,c
 18384  0184B6  D7EA               	goto	l8106
 18385  0184B8                     u6640:
 18386                           
 18387                           ;stkvar	_quotient @ sp[(-4)+0]
 18388  0184B8  0EFC               	movlw	-4
 18389  0184BA  50E3               	movf	plusw1,w,c
 18390  0184BC  90D8               	bcf	status,0,c
 18391  0184BE  34E8               	rlcf	wreg,w,c
 18392  0184C0  6E01               	movwf	btemp^0,c
 18393  0184C2  0EFC               	movlw	-4
 18394  0184C4  0060  F007  FFE3   	movff	btemp,plusw1
 18395  0184CA  0EFD               	movlw	-3
 18396  0184CC  50E3               	movf	plusw1,w,c
 18397  0184CE  34E8               	rlcf	wreg,w,c
 18398  0184D0  6E01               	movwf	btemp^0,c
 18399  0184D2  0EFD               	movlw	-3
 18400  0184D4  0060  F007  FFE3   	movff	btemp,plusw1
 18401                           
 18402                           ;stkvar	_divisor @ sp[(-4)+-4]
 18403  0184DA  0EF8               	movlw	-8
 18404  0184DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18405  0184E2  0EF9               	movlw	-7
 18406  0184E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18407                           
 18408                           ;stkvar	_dividend @ sp[(-4)+-2]
 18409  0184EA  0EFA               	movlw	-6
 18410  0184EC  006F FF8C  F009    	movff	plusw1,btemp+8
 18411  0184F2  0EFB               	movlw	-5
 18412  0184F4  006F FF8C  F00A    	movff	plusw1,btemp+9
 18413  0184FA  500B               	movf	(btemp+10)^0,w,c
 18414  0184FC  5C09               	subwf	(btemp+8)^0,w,c
 18415  0184FE  500C               	movf	(btemp+11)^0,w,c
 18416  018500  580A               	subwfb	(btemp+9)^0,w,c
 18417  018502  A0D8               	btfss	status,0,c
 18418  018504  D016               	goto	l8120
 18419                           
 18420                           ;stkvar	_divisor @ sp[(-4)+-4]
 18421                           ;stkvar	_dividend @ sp[(-4)+-2]
 18422  018506  0EFA               	movlw	-6
 18423  018508  50E3               	movf	plusw1,w,c
 18424  01850A  6E01               	movwf	btemp^0,c
 18425  01850C  0EF8               	movlw	-8
 18426  01850E  50E3               	movf	plusw1,w,c
 18427  018510  5E01               	subwf	btemp^0,f,c
 18428  018512  0EFA               	movlw	-6
 18429  018514  0060  F007  FFE3   	movff	btemp,plusw1
 18430  01851A  0EFB               	movlw	-5
 18431  01851C  50E3               	movf	plusw1,w,c
 18432  01851E  6E01               	movwf	btemp^0,c
 18433  018520  0EF9               	movlw	-7
 18434  018522  50E3               	movf	plusw1,w,c
 18435  018524  5A01               	subwfb	btemp^0,f,c
 18436  018526  0EFB               	movlw	-5
 18437  018528  0060  F007  FFE3   	movff	btemp,plusw1
 18438                           
 18439                           ;stkvar	_quotient @ sp[(-4)+0]
 18440  01852E  0EFC               	movlw	-4
 18441  018530  80E3               	bsf	plusw1,0,c
 18442  018532                     l8120:
 18443                           
 18444                           ;stkvar	_divisor @ sp[(-4)+-4]
 18445  018532  90D8               	bcf	status,0,c
 18446  018534  0EF9               	movlw	-7
 18447  018536  32E3               	rrcf	plusw1,f,c
 18448  018538  0EF8               	movlw	-8
 18449  01853A  32E3               	rrcf	plusw1,f,c
 18450                           
 18451                           ;stkvar	_counter @ sp[(-4)+3]
 18452  01853C  0EFF               	movlw	-1
 18453  01853E  50E3               	movf	plusw1,w,c
 18454  018540  6E01               	movwf	btemp^0,c
 18455  018542  0E01               	movlw	1
 18456  018544  5E01               	subwf	btemp^0,f,c
 18457  018546  0EFF               	movlw	-1
 18458  018548  0060  F007  FFE3   	movff	btemp,plusw1
 18459  01854E  A4D8               	btfss	status,2,c
 18460  018550  D7B3               	goto	u6640
 18461  018552                     u6660:
 18462                           
 18463                           ;stkvar	_sign @ sp[(-4)+2]
 18464  018552  0EFE               	movlw	-2
 18465  018554  50E3               	movf	plusw1,w,c
 18466  018556  B4D8               	btfsc	status,2,c
 18467  018558  D006               	goto	l8128
 18468                           
 18469                           ;stkvar	_quotient @ sp[(-4)+0]
 18470                           ;stkvar	_quotient @ sp[(-4)+0]
 18471  01855A  0EFC               	movlw	-4
 18472  01855C  6CE3               	negf	plusw1,c
 18473  01855E  0EFD               	movlw	-3
 18474  018560  1EE3               	comf	plusw1,f,c
 18475  018562  B0D8               	btfsc	status,0,c
 18476  018564  2AE3               	incf	plusw1,f,c
 18477  018566                     l8128:
 18478                           
 18479                           ;stkvar	_quotient @ sp[(-4)+0]
 18480  018566  0EFC               	movlw	-4
 18481  018568  006F FF8C  F001    	movff	plusw1,btemp
 18482  01856E  0EFD               	movlw	-3
 18483  018570  006F FF8C  F002    	movff	plusw1,btemp+1
 18484                           
 18485                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18486  018576  0EF8               	movlw	248
 18487  018578  26E1               	addwf	fsr1l,f,c
 18488  01857A  0EFF               	movlw	255
 18489  01857C  22E2               	addwfc	fsr1h,f,c
 18490  01857E  0012               	return		;funcret
 18491  018580                     __end_of___awdiv:
 18492                           	opt callstack 0
 18493                           
 18494 ;; *************** function _dtoa *****************
 18495 ;; Defined at:
 18496 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18497 ;; Parameters:    Size  Location     Type
 18498 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18499 ;;		 -> f(6), NULL(0), 
 18500 ;;  d               8  [STACK] long long 
 18501 ;; Auto vars:     Size  Location     Type
 18502 ;;  n               8  [STACK] long long 
 18503 ;;  i               2  [STACK] int 
 18504 ;;  s               2  [STACK] int 
 18505 ;;  w               2  [STACK] int 
 18506 ;;  p               2  [STACK] int 
 18507 ;; Return value:  Size  Location     Type
 18508 ;;                  2  [STACK] int 
 18509 ;; Registers used:
 18510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18511 ;; Tracked objects:
 18512 ;;		On entry : 0/0
 18513 ;;		On exit  : 0/0
 18514 ;;		Unchanged: 0/0
 18515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18520 ;;Total ram usage:        0 bytes
 18521 ;; Hardware stack levels used:    1
 18522 ;; Hardware stack levels required when called:   20
 18523 ;; This function calls:
 18524 ;;		___aodiv
 18525 ;;		___aomod
 18526 ;;		_abs
 18527 ;;		_pad
 18528 ;; This function is called by:
 18529 ;;		_vfpfcnvrt
 18530 ;; This function uses a reentrant model
 18531 ;;
 18532                           
 18533                           	psect	text66
 18534  014EC4                     __ptext66:
 18535                           	opt callstack 0
 18536  014EC4                     _dtoa:
 18537                           	opt callstack 0
 18538                           
 18539                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18540  014EC4  0E12               	movlw	18
 18541  014EC6  26E1               	addwf	fsr1l,f,c
 18542  014EC8  0E00               	movlw	0
 18543  014ECA  22E2               	addwfc	fsr1h,f,c
 18544                           
 18545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18546                           ;stkvar	_d @ sp[(-18)+-10]
 18547                           
 18548                           ;incstack = 0
 18549 ;; hardware stack exceeded
 18550  014ECC  0EE4               	movlw	228
 18551  014ECE  24E1               	addwf	fsr1l,w,c
 18552  014ED0  6ED9               	movwf	fsr2l,c
 18553  014ED2  0EFF               	movlw	255
 18554  014ED4  20E2               	addwfc	fsr1h,w,c
 18555  014ED6  6EDA               	movwf	fsr2h,c
 18556                           
 18557                           ;stkvar	_n @ sp[(-18)+2]
 18558  014ED8  0E08               	movlw	8
 18559  014EDA  6E01               	movwf	btemp^0,c
 18560  014EDC  0EF0               	movlw	-16
 18561  014EDE                     us1025999:
 18562  014EDE  006F FF7B FFE3     	movff	postinc2,plusw1
 18563  014EE4  28E8               	incf	wreg,w,c
 18564  014EE6  2E01               	decfsz	btemp^0,f,c
 18565  014EE8  D7FA               	bra	us1025999
 18566                           
 18567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18568                           ;stkvar	_n @ sp[(-18)+2]
 18569  014EEA  0EF7               	movlw	-9
 18570  014EEC  AEE3               	btfss	plusw1,7,c
 18571  014EEE  D002               	goto	u10260
 18572  014EF0  0E01               	movlw	1
 18573  014EF2  D001               	goto	u10270
 18574  014EF4                     u10260:
 18575  014EF4  0E00               	movlw	0
 18576  014EF6                     u10270:
 18577  014EF6  6E0B               	movwf	(btemp+10)^0,c
 18578  014EF8  6A0C               	clrf	(btemp+11)^0,c
 18579                           
 18580                           ;stkvar	_s @ sp[(-18)+12]
 18581  014EFA  0EFA               	movlw	-6
 18582  014EFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18583  014F02  0EFB               	movlw	-5
 18584  014F04  0060  F033  FFE3   	movff	btemp+11,plusw1
 18585                           
 18586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 18587                           ;stkvar	_s @ sp[(-18)+12]
 18588  014F0A  0EFA               	movlw	-6
 18589  014F0C  006F FF8C  F001    	movff	plusw1,btemp
 18590  014F12  0EFB               	movlw	-5
 18591  014F14  50E3               	movf	plusw1,w,c
 18592  014F16  1001               	iorwf	btemp^0,w,c
 18593  014F18  B4D8               	btfsc	status,2,c
 18594  014F1A  D025               	goto	u10290
 18595                           
 18596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 18597                           ;stkvar	_n @ sp[(-18)+2]
 18598                           ;stkvar	_n @ sp[(-18)+2]
 18599  014F1C  0EF0               	movlw	-16
 18600  014F1E  6CE3               	negf	plusw1,c
 18601  014F20  0EF1               	movlw	-15
 18602  014F22  1EE3               	comf	plusw1,f,c
 18603  014F24  0EF2               	movlw	-14
 18604  014F26  1EE3               	comf	plusw1,f,c
 18605  014F28  0EF3               	movlw	-13
 18606  014F2A  1EE3               	comf	plusw1,f,c
 18607  014F2C  0EF4               	movlw	-12
 18608  014F2E  1EE3               	comf	plusw1,f,c
 18609  014F30  0EF5               	movlw	-11
 18610  014F32  1EE3               	comf	plusw1,f,c
 18611  014F34  0EF6               	movlw	-10
 18612  014F36  1EE3               	comf	plusw1,f,c
 18613  014F38  0EF7               	movlw	-9
 18614  014F3A  1EE3               	comf	plusw1,f,c
 18615  014F3C  E314               	bnc	u10290
 18616  014F3E  0EF1               	movlw	-15
 18617  014F40  2AE3               	incf	plusw1,f,c
 18618  014F42  E311               	bnc	u10290
 18619  014F44  0EF2               	movlw	-14
 18620  014F46  2AE3               	incf	plusw1,f,c
 18621  014F48  E30E               	bnc	u10290
 18622  014F4A  0EF3               	movlw	-13
 18623  014F4C  2AE3               	incf	plusw1,f,c
 18624  014F4E  E30B               	bnc	u10290
 18625  014F50  0EF4               	movlw	-12
 18626  014F52  2AE3               	incf	plusw1,f,c
 18627  014F54  E308               	bnc	u10290
 18628  014F56  0EF5               	movlw	-11
 18629  014F58  2AE3               	incf	plusw1,f,c
 18630  014F5A  E305               	bnc	u10290
 18631  014F5C  0EF6               	movlw	-10
 18632  014F5E  2AE3               	incf	plusw1,f,c
 18633  014F60  E302               	bnc	u10290
 18634  014F62  0EF7               	movlw	-9
 18635  014F64  2AE3               	incf	plusw1,f,c
 18636  014F66                     u10290:
 18637                           
 18638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 18639  014F66  AE24               	btfss	(_prec+1)^0,7,c
 18640                           
 18641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 18642  014F68  9225               	bcf	_flags^0,1,c
 18643                           
 18644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 18645  014F6A  BE24               	btfsc	(_prec+1)^0,7,c
 18646  014F6C  D005               	goto	u10310
 18647  014F6E  5024               	movf	(_prec+1)^0,w,c
 18648  014F70  E110               	bnz	l11256
 18649  014F72  0423               	decf	_prec^0,w,c
 18650  014F74  B0D8               	btfsc	status,0,c
 18651  014F76  D00D               	goto	l11256
 18652  014F78                     u10310:
 18653  014F78  0E01               	movlw	1
 18654  014F7A  6E0B               	movwf	(btemp+10)^0,c
 18655  014F7C  0E00               	movlw	0
 18656  014F7E  6E0C               	movwf	(btemp+11)^0,c
 18657                           
 18658                           ;stkvar	_p @ sp[(-18)+16]
 18659  014F80  0EFE               	movlw	-2
 18660  014F82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18661  014F88  0EFF               	movlw	-1
 18662  014F8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18663  014F90  D008               	goto	l2098
 18664  014F92                     l11256:
 18665                           
 18666                           ;stkvar	_p @ sp[(-18)+16]
 18667  014F92  0EFE               	movlw	-2
 18668  014F94  0060  F08F  FFE3   	movff	_prec,plusw1
 18669  014F9A  0EFF               	movlw	-1
 18670  014F9C  0060  F093  FFE3   	movff	_prec+1,plusw1
 18671  014FA2                     l2098:
 18672                           
 18673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 18674                           ;stkvar	_w @ sp[(-18)+14]
 18675  014FA2  0EFC               	movlw	-4
 18676  014FA4  0060  F087  FFE3   	movff	_width,plusw1
 18677  014FAA  0EFD               	movlw	-3
 18678  014FAC  0060  F08B  FFE3   	movff	_width+1,plusw1
 18679                           
 18680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 18681                           ;stkvar	_s @ sp[(-18)+12]
 18682  014FB2  0EFA               	movlw	-6
 18683  014FB4  006F FF8C  F001    	movff	plusw1,btemp
 18684  014FBA  0EFB               	movlw	-5
 18685  014FBC  50E3               	movf	plusw1,w,c
 18686  014FBE  1001               	iorwf	btemp^0,w,c
 18687  014FC0  A4D8               	btfss	status,2,c
 18688  014FC2  D002               	goto	u10330
 18689  014FC4  A425               	btfss	_flags^0,2,c
 18690  014FC6  D00A               	goto	l11264
 18691  014FC8                     u10330:
 18692                           
 18693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18694                           ;stkvar	_w @ sp[(-18)+14]
 18695  014FC8  50E1               	movf	fsr1l,w,c
 18696  014FCA  0FFC               	addlw	-4
 18697  014FCC  6ED9               	movwf	fsr2l,c
 18698  014FCE  50E2               	movf	fsr1h,w,c
 18699  014FD0  6EDA               	movwf	fsr2h,c
 18700  014FD2  0EFF               	movlw	255
 18701  014FD4  22DA               	addwfc	fsr2h,f,c
 18702  014FD6  06DE               	decf	postinc2,f,c
 18703  014FD8  0E00               	movlw	0
 18704  014FDA  5ADD               	subwfb	postdec2,f,c
 18705  014FDC                     l11264:
 18706                           
 18707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18708  014FDC  0E4F               	movlw	79
 18709  014FDE  6E0B               	movwf	(btemp+10)^0,c
 18710  014FE0  0E00               	movlw	0
 18711  014FE2  6E0C               	movwf	(btemp+11)^0,c
 18712                           
 18713                           ;stkvar	_i @ sp[(-18)+10]
 18714  014FE4  0EF8               	movlw	-8
 18715  014FE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18716  014FEC  0EF9               	movlw	-7
 18717  014FEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18718                           
 18719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18720  014FF4  0103               	movlb	3	; () banked
 18721  014FF6  6BE3               	clrf	(_dbuf+79)& (0+255),b
 18722                           
 18723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18724  014FF8  D109               	goto	l11278
 18725  014FFA                     l11268:
 18726                           
 18727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18728                           ;stkvar	_i @ sp[(-18)+10]
 18729  014FFA  50E1               	movf	fsr1l,w,c
 18730  014FFC  0FF8               	addlw	-8
 18731  014FFE  6ED9               	movwf	fsr2l,c
 18732  015000  50E2               	movf	fsr1h,w,c
 18733  015002  6EDA               	movwf	fsr2h,c
 18734  015004  0EFF               	movlw	255
 18735  015006  22DA               	addwfc	fsr2h,f,c
 18736  015008  06DE               	decf	postinc2,f,c
 18737  01500A  0E00               	movlw	0
 18738  01500C  5ADD               	subwfb	postdec2,f,c
 18739                           
 18740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18741  01500E  0E0A               	movlw	10
 18742  015010  6EE6               	movwf	postinc1,c
 18743  015012  0E00               	movlw	0
 18744  015014  6EE6               	movwf	postinc1,c
 18745  015016  0E00               	movlw	0
 18746  015018  6EE6               	movwf	postinc1,c
 18747  01501A  0E00               	movlw	0
 18748  01501C  6EE6               	movwf	postinc1,c
 18749  01501E  0E00               	movlw	0
 18750  015020  6EE6               	movwf	postinc1,c
 18751  015022  0E00               	movlw	0
 18752  015024  6EE6               	movwf	postinc1,c
 18753  015026  0E00               	movlw	0
 18754  015028  6EE6               	movwf	postinc1,c
 18755  01502A  0E00               	movlw	0
 18756  01502C  6EE6               	movwf	postinc1,c
 18757                           
 18758                           ;stkvar	_n @ sp[(-26)+2]
 18759  01502E  50E1               	movf	fsr1l,w,c
 18760  015030  0FE8               	addlw	-24
 18761  015032  6ED9               	movwf	fsr2l,c
 18762  015034  50E2               	movf	fsr1h,w,c
 18763  015036  6EDA               	movwf	fsr2h,c
 18764  015038  0EFF               	movlw	255
 18765  01503A  22DA               	addwfc	fsr2h,f,c
 18766  01503C  006F FF7B FFE6     	movff	postinc2,postinc1
 18767  015042  006F FF7B FFE6     	movff	postinc2,postinc1
 18768  015048  006F FF7B FFE6     	movff	postinc2,postinc1
 18769  01504E  006F FF7B FFE6     	movff	postinc2,postinc1
 18770  015054  006F FF7B FFE6     	movff	postinc2,postinc1
 18771  01505A  006F FF7B FFE6     	movff	postinc2,postinc1
 18772  015060  006F FF7B FFE6     	movff	postinc2,postinc1
 18773  015066  006F FF7B FFE6     	movff	postinc2,postinc1
 18774  01506C  ECF5  F0B5         	call	___aomod	;wreg free
 18775  015070  52E5               	movf	postdec1,f,c
 18776  015072  006F FF9C  F018    	movff	indf1,btemp+23
 18777  015078  52E5               	movf	postdec1,f,c
 18778  01507A  006F FF9C  F017    	movff	indf1,btemp+22
 18779  015080  52E5               	movf	postdec1,f,c
 18780  015082  006F FF9C  F016    	movff	indf1,btemp+21
 18781  015088  52E5               	movf	postdec1,f,c
 18782  01508A  006F FF9C  F015    	movff	indf1,btemp+20
 18783  015090  52E5               	movf	postdec1,f,c
 18784  015092  006F FF9C  F014    	movff	indf1,btemp+19
 18785  015098  52E5               	movf	postdec1,f,c
 18786  01509A  006F FF9C  F013    	movff	indf1,btemp+18
 18787  0150A0  52E5               	movf	postdec1,f,c
 18788  0150A2  006F FF9C  F012    	movff	indf1,btemp+17
 18789  0150A8  52E5               	movf	postdec1,f,c
 18790  0150AA  006F FF9C  F011    	movff	indf1,btemp+16
 18791  0150B0  0EF8               	movlw	248
 18792  0150B2  26E1               	addwf	fsr1l,f,c
 18793  0150B4  0EFF               	movlw	255
 18794  0150B6  22E2               	addwfc	fsr1h,f,c
 18795  0150B8  0060  F044  F00B   	movff	btemp+16,btemp+10
 18796  0150BE  0060  F048  F00C   	movff	btemp+17,btemp+11
 18797  0150C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18798  0150CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 18799  0150D0  EC5E  F0D2         	call	_abs	;wreg free
 18800  0150D4  0E30               	movlw	48
 18801  0150D6  2601               	addwf	btemp^0,f,c
 18802                           
 18803                           ;stkvar	_i @ sp[(-18)+10]
 18804  0150D8  0EF8               	movlw	-8
 18805  0150DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18806  0150E0  0EF9               	movlw	-7
 18807  0150E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18808  0150E8  0E94               	movlw	low _dbuf
 18809  0150EA  240B               	addwf	(btemp+10)^0,w,c
 18810  0150EC  6ED9               	movwf	fsr2l,c
 18811  0150EE  0E03               	movlw	high _dbuf
 18812  0150F0  200C               	addwfc	(btemp+11)^0,w,c
 18813  0150F2  6EDA               	movwf	fsr2h,c
 18814  0150F4  0060  F007  FFDF   	movff	btemp,indf2
 18815                           
 18816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18817                           ;stkvar	_p @ sp[(-18)+16]
 18818  0150FA  50E1               	movf	fsr1l,w,c
 18819  0150FC  0FFE               	addlw	-2
 18820  0150FE  6ED9               	movwf	fsr2l,c
 18821  015100  50E2               	movf	fsr1h,w,c
 18822  015102  6EDA               	movwf	fsr2h,c
 18823  015104  0EFF               	movlw	255
 18824  015106  22DA               	addwfc	fsr2h,f,c
 18825  015108  06DE               	decf	postinc2,f,c
 18826  01510A  0E00               	movlw	0
 18827  01510C  5ADD               	subwfb	postdec2,f,c
 18828                           
 18829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18830                           ;stkvar	_w @ sp[(-18)+14]
 18831  01510E  50E1               	movf	fsr1l,w,c
 18832  015110  0FFC               	addlw	-4
 18833  015112  6ED9               	movwf	fsr2l,c
 18834  015114  50E2               	movf	fsr1h,w,c
 18835  015116  6EDA               	movwf	fsr2h,c
 18836  015118  0EFF               	movlw	255
 18837  01511A  22DA               	addwfc	fsr2h,f,c
 18838  01511C  06DE               	decf	postinc2,f,c
 18839  01511E  0E00               	movlw	0
 18840  015120  5ADD               	subwfb	postdec2,f,c
 18841                           
 18842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18843  015122  0E0A               	movlw	10
 18844  015124  6EE6               	movwf	postinc1,c
 18845  015126  0E00               	movlw	0
 18846  015128  6EE6               	movwf	postinc1,c
 18847  01512A  0E00               	movlw	0
 18848  01512C  6EE6               	movwf	postinc1,c
 18849  01512E  0E00               	movlw	0
 18850  015130  6EE6               	movwf	postinc1,c
 18851  015132  0E00               	movlw	0
 18852  015134  6EE6               	movwf	postinc1,c
 18853  015136  0E00               	movlw	0
 18854  015138  6EE6               	movwf	postinc1,c
 18855  01513A  0E00               	movlw	0
 18856  01513C  6EE6               	movwf	postinc1,c
 18857  01513E  0E00               	movlw	0
 18858  015140  6EE6               	movwf	postinc1,c
 18859                           
 18860                           ;stkvar	_n @ sp[(-26)+2]
 18861  015142  50E1               	movf	fsr1l,w,c
 18862  015144  0FE8               	addlw	-24
 18863  015146  6ED9               	movwf	fsr2l,c
 18864  015148  50E2               	movf	fsr1h,w,c
 18865  01514A  6EDA               	movwf	fsr2h,c
 18866  01514C  0EFF               	movlw	255
 18867  01514E  22DA               	addwfc	fsr2h,f,c
 18868  015150  006F FF7B FFE6     	movff	postinc2,postinc1
 18869  015156  006F FF7B FFE6     	movff	postinc2,postinc1
 18870  01515C  006F FF7B FFE6     	movff	postinc2,postinc1
 18871  015162  006F FF7B FFE6     	movff	postinc2,postinc1
 18872  015168  006F FF7B FFE6     	movff	postinc2,postinc1
 18873  01516E  006F FF7B FFE6     	movff	postinc2,postinc1
 18874  015174  006F FF7B FFE6     	movff	postinc2,postinc1
 18875  01517A  006F FF7B FFE6     	movff	postinc2,postinc1
 18876  015180  EC7B  F0B3         	call	___aodiv	;wreg free
 18877  015184  52E5               	movf	postdec1,f,c
 18878  015186  006F FF9C  F018    	movff	indf1,btemp+23
 18879  01518C  52E5               	movf	postdec1,f,c
 18880  01518E  006F FF9C  F017    	movff	indf1,btemp+22
 18881  015194  52E5               	movf	postdec1,f,c
 18882  015196  006F FF9C  F016    	movff	indf1,btemp+21
 18883  01519C  52E5               	movf	postdec1,f,c
 18884  01519E  006F FF9C  F015    	movff	indf1,btemp+20
 18885  0151A4  52E5               	movf	postdec1,f,c
 18886  0151A6  006F FF9C  F014    	movff	indf1,btemp+19
 18887  0151AC  52E5               	movf	postdec1,f,c
 18888  0151AE  006F FF9C  F013    	movff	indf1,btemp+18
 18889  0151B4  52E5               	movf	postdec1,f,c
 18890  0151B6  006F FF9C  F012    	movff	indf1,btemp+17
 18891  0151BC  52E5               	movf	postdec1,f,c
 18892  0151BE  006F FF9C  F011    	movff	indf1,btemp+16
 18893  0151C4  0EF8               	movlw	248
 18894  0151C6  26E1               	addwf	fsr1l,f,c
 18895  0151C8  0EFF               	movlw	255
 18896  0151CA  22E2               	addwfc	fsr1h,f,c
 18897                           
 18898                           ;stkvar	_n @ sp[(-18)+2]
 18899  0151CC  0EF0               	movlw	-16
 18900  0151CE  0060  F047  FFE3   	movff	btemp+16,plusw1
 18901  0151D4  0EF1               	movlw	-15
 18902  0151D6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18903  0151DC  0EF2               	movlw	-14
 18904  0151DE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18905  0151E4  0EF3               	movlw	-13
 18906  0151E6  0060  F053  FFE3   	movff	btemp+19,plusw1
 18907  0151EC  0EF4               	movlw	-12
 18908  0151EE  0060  F057  FFE3   	movff	btemp+20,plusw1
 18909  0151F4  0EF5               	movlw	-11
 18910  0151F6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18911  0151FC  0EF6               	movlw	-10
 18912  0151FE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18913  015204  0EF7               	movlw	-9
 18914  015206  0060  F063  FFE3   	movff	btemp+23,plusw1
 18915  01520C                     l11278:
 18916                           
 18917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18918                           ;stkvar	_i @ sp[(-18)+10]
 18919  01520C  0EF9               	movlw	-7
 18920  01520E  BEE3               	btfsc	plusw1,7,c
 18921  015210  D036               	goto	u10380
 18922  015212  0EF9               	movlw	-7
 18923  015214  50E3               	movf	plusw1,w,c
 18924  015216  E104               	bnz	u10340
 18925  015218  0EF8               	movlw	-8
 18926  01521A  04E3               	decf	plusw1,w,c
 18927  01521C  A0D8               	btfss	status,0,c
 18928  01521E  D02F               	goto	u10380
 18929  015220                     u10340:
 18930                           
 18931                           ;stkvar	_n @ sp[(-18)+2]
 18932  015220  0EF0               	movlw	-16
 18933  015222  50E3               	movf	plusw1,w,c
 18934  015224  E115               	bnz	u10351
 18935  015226  0EF1               	movlw	-15
 18936  015228  50E3               	movf	plusw1,w,c
 18937  01522A  E112               	bnz	u10351
 18938  01522C  0EF2               	movlw	-14
 18939  01522E  50E3               	movf	plusw1,w,c
 18940  015230  E10F               	bnz	u10351
 18941  015232  0EF3               	movlw	-13
 18942  015234  50E3               	movf	plusw1,w,c
 18943  015236  E10C               	bnz	u10351
 18944  015238  0EF4               	movlw	-12
 18945  01523A  50E3               	movf	plusw1,w,c
 18946  01523C  E109               	bnz	u10351
 18947  01523E  0EF5               	movlw	-11
 18948  015240  50E3               	movf	plusw1,w,c
 18949  015242  E106               	bnz	u10351
 18950  015244  0EF6               	movlw	-10
 18951  015246  50E3               	movf	plusw1,w,c
 18952  015248  E103               	bnz	u10351
 18953  01524A  0EF7               	movlw	-9
 18954  01524C  50E3               	movf	plusw1,w,c
 18955  01524E  A4D8               	btfss	status,2,c
 18956  015250                     u10351:
 18957  015250  D6D4               	goto	l11268
 18958                           
 18959                           ;stkvar	_p @ sp[(-18)+16]
 18960  015252  0EFF               	movlw	-1
 18961  015254  BEE3               	btfsc	plusw1,7,c
 18962  015256  D007               	goto	u10360
 18963  015258  0EFF               	movlw	-1
 18964  01525A  50E3               	movf	plusw1,w,c
 18965  01525C  E103               	bnz	u10361
 18966  01525E  0EFE               	movlw	-2
 18967  015260  04E3               	decf	plusw1,w,c
 18968  015262  B0D8               	btfsc	status,0,c
 18969  015264                     u10361:
 18970  015264  D6CA               	goto	l11268
 18971  015266                     u10360:
 18972                           
 18973                           ;stkvar	_w @ sp[(-18)+14]
 18974  015266  0EFD               	movlw	-3
 18975  015268  BEE3               	btfsc	plusw1,7,c
 18976  01526A  D009               	goto	u10380
 18977  01526C  0EFD               	movlw	-3
 18978  01526E  50E3               	movf	plusw1,w,c
 18979  015270  E104               	bnz	u10370
 18980  015272  0EFC               	movlw	-4
 18981  015274  04E3               	decf	plusw1,w,c
 18982  015276  A0D8               	btfss	status,0,c
 18983  015278  D002               	goto	u10380
 18984  01527A                     u10370:
 18985  01527A  B225               	btfsc	_flags^0,1,c
 18986  01527C  D6BE               	goto	l11268
 18987  01527E                     u10380:
 18988                           
 18989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18990                           ;stkvar	_s @ sp[(-18)+12]
 18991  01527E  0EFA               	movlw	-6
 18992  015280  006F FF8C  F001    	movff	plusw1,btemp
 18993  015286  0EFB               	movlw	-5
 18994  015288  50E3               	movf	plusw1,w,c
 18995  01528A  1001               	iorwf	btemp^0,w,c
 18996  01528C  A4D8               	btfss	status,2,c
 18997  01528E  D002               	goto	u10400
 18998  015290  A425               	btfss	_flags^0,2,c
 18999  015292  D033               	goto	l11302
 19000  015294                     u10400:
 19001                           
 19002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19003                           ;stkvar	_i @ sp[(-18)+10]
 19004  015294  50E1               	movf	fsr1l,w,c
 19005  015296  0FF8               	addlw	-8
 19006  015298  6ED9               	movwf	fsr2l,c
 19007  01529A  50E2               	movf	fsr1h,w,c
 19008  01529C  6EDA               	movwf	fsr2h,c
 19009  01529E  0EFF               	movlw	255
 19010  0152A0  22DA               	addwfc	fsr2h,f,c
 19011  0152A2  06DE               	decf	postinc2,f,c
 19012  0152A4  0E00               	movlw	0
 19013  0152A6  5ADD               	subwfb	postdec2,f,c
 19014                           
 19015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19016                           ;stkvar	_s @ sp[(-18)+12]
 19017  0152A8  0EFA               	movlw	-6
 19018  0152AA  006F FF8C  F001    	movff	plusw1,btemp
 19019  0152B0  0EFB               	movlw	-5
 19020  0152B2  50E3               	movf	plusw1,w,c
 19021  0152B4  1001               	iorwf	btemp^0,w,c
 19022  0152B6  A4D8               	btfss	status,2,c
 19023  0152B8  D002               	goto	l11298
 19024  0152BA  0E2B               	movlw	43
 19025  0152BC  D001               	goto	L19
 19026  0152BE                     l11298:
 19027  0152BE  0E2D               	movlw	45
 19028  0152C0                     L19:
 19029  0152C0  6E0B               	movwf	(btemp+10)^0,c
 19030  0152C2  0E00               	movlw	0
 19031  0152C4  6E0C               	movwf	(btemp+11)^0,c
 19032                           
 19033                           ;stkvar	_dtoa$5276 @ sp[(-18)+0]
 19034  0152C6  0EEE               	movlw	-18
 19035  0152C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19036  0152CE  0EEF               	movlw	-17
 19037  0152D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 19038                           
 19039                           ;stkvar	_dtoa$5276 @ sp[(-18)+0]
 19040                           ;stkvar	_i @ sp[(-18)+10]
 19041  0152D6  0EF8               	movlw	-8
 19042  0152D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19043  0152DE  0EF9               	movlw	-7
 19044  0152E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19045  0152E6  0E94               	movlw	low _dbuf
 19046  0152E8  240B               	addwf	(btemp+10)^0,w,c
 19047  0152EA  6ED9               	movwf	fsr2l,c
 19048  0152EC  0E03               	movlw	high _dbuf
 19049  0152EE  200C               	addwfc	(btemp+11)^0,w,c
 19050  0152F0  6EDA               	movwf	fsr2h,c
 19051  0152F2  0EEE               	movlw	-18
 19052  0152F4  006F FF8F FFDF     	movff	plusw1,indf2
 19053  0152FA                     l11302:
 19054                           
 19055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19056                           ;stkvar	_w @ sp[(-18)+14]
 19057  0152FA  0EFC               	movlw	-4
 19058  0152FC  006F FF8F FFE6     	movff	plusw1,postinc1
 19059  015302  006F FF8F FFE6     	movff	plusw1,postinc1
 19060                           
 19061                           ;stkvar	_i @ sp[(-20)+10]
 19062  015308  0E94               	movlw	low _dbuf
 19063  01530A  6E0B               	movwf	(btemp+10)^0,c
 19064  01530C  0E03               	movlw	high _dbuf
 19065  01530E  6E0C               	movwf	(btemp+11)^0,c
 19066  015310  0EF6               	movlw	-10
 19067  015312  50E3               	movf	plusw1,w,c
 19068  015314  260B               	addwf	(btemp+10)^0,f,c
 19069  015316  0EF7               	movlw	-9
 19070  015318  50E3               	movf	plusw1,w,c
 19071  01531A  220C               	addwfc	(btemp+11)^0,f,c
 19072  01531C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19073  015322  0060  F033  FFE6   	movff	btemp+11,postinc1
 19074                           
 19075                           ;stkvar	_fp @ sp[(-22)+-2]
 19076  015328  0EE8               	movlw	-24
 19077  01532A  006F FF8F FFE6     	movff	plusw1,postinc1
 19078  015330  006F FF8F FFE6     	movff	plusw1,postinc1
 19079  015336  ECB3  F0C5         	call	_pad	;wreg free
 19080                           
 19081                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19082  01533A  0EE4               	movlw	228
 19083  01533C  26E1               	addwf	fsr1l,f,c
 19084  01533E  0EFF               	movlw	255
 19085  015340  22E2               	addwfc	fsr1h,f,c
 19086  015342  0012               	return		;funcret
 19087  015344                     __end_of_dtoa:
 19088                           	opt callstack 0
 19089                           
 19090 ;; *************** function _abs *****************
 19091 ;; Defined at:
 19092 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19093 ;; Parameters:    Size  Location     Type
 19094 ;;  a               2  [STACK] int 
 19095 ;; Auto vars:     Size  Location     Type
 19096 ;;		None
 19097 ;; Return value:  Size  Location     Type
 19098 ;;                  2  [STACK] int 
 19099 ;; Registers used:
 19100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19101 ;; Tracked objects:
 19102 ;;		On entry : 0/3
 19103 ;;		On exit  : 0/0
 19104 ;;		Unchanged: 0/0
 19105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19110 ;;Total ram usage:        0 bytes
 19111 ;; Hardware stack levels used:    1
 19112 ;; Hardware stack levels required when called:   15
 19113 ;; This function calls:
 19114 ;;		Nothing
 19115 ;; This function is called by:
 19116 ;;		_dtoa
 19117 ;; This function uses a reentrant model
 19118 ;;
 19119                           
 19120                           	psect	text67
 19121  01A4BC                     __ptext67:
 19122                           	opt callstack 0
 19123  01A4BC                     _abs:
 19124                           	opt callstack 0
 19125                           
 19126                           ;stkvar	_a @ sp[(0)+-2]
 19127                           
 19128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19129                           ;incstack = 0
 19130 ;; hardware stack exceeded
 19131  01A4BC  0EFF               	movlw	-1
 19132  01A4BE  BEE3               	btfsc	plusw1,7,c
 19133  01A4C0  D007               	goto	u5620
 19134  01A4C2  0EFF               	movlw	-1
 19135  01A4C4  50E3               	movf	plusw1,w,c
 19136  01A4C6  E112               	bnz	l7582
 19137  01A4C8  0EFE               	movlw	-2
 19138  01A4CA  04E3               	decf	plusw1,w,c
 19139  01A4CC  B0D8               	btfsc	status,0,c
 19140  01A4CE  D00E               	goto	l7582
 19141  01A4D0                     u5620:
 19142                           
 19143                           ;stkvar	_a @ sp[(0)+-2]
 19144  01A4D0  0EFE               	movlw	-2
 19145  01A4D2  006F FF8C  F001    	movff	plusw1,btemp
 19146  01A4D8  1E01               	comf	btemp^0,f,c
 19147  01A4DA  0EFF               	movlw	-1
 19148  01A4DC  006F FF8C  F002    	movff	plusw1,btemp+1
 19149  01A4E2  1E02               	comf	(btemp+1)^0,f,c
 19150  01A4E4  2A01               	incf	btemp^0,f,c
 19151  01A4E6  B4D8               	btfsc	status,2,c
 19152  01A4E8  2A02               	incf	(btemp+1)^0,f,c
 19153  01A4EA  D008               	goto	l3024
 19154  01A4EC                     l7582:
 19155                           
 19156                           ;stkvar	_a @ sp[(0)+-2]
 19157  01A4EC  0EFE               	movlw	-2
 19158  01A4EE  006F FF8C  F001    	movff	plusw1,btemp
 19159  01A4F4  0EFF               	movlw	-1
 19160  01A4F6  006F FF8C  F002    	movff	plusw1,btemp+1
 19161  01A4FC                     l3024:
 19162                           
 19163                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19164  01A4FC  52E5               	movf	postdec1,f,c
 19165  01A4FE  52E5               	movf	postdec1,f,c
 19166  01A500  0012               	return		;funcret
 19167  01A502                     __end_of_abs:
 19168                           	opt callstack 0
 19169                           
 19170 ;; *************** function ___aomod *****************
 19171 ;; Defined at:
 19172 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19173 ;; Parameters:    Size  Location     Type
 19174 ;;  dividend        8  [STACK] long long 
 19175 ;;  divisor         8  [STACK] long long 
 19176 ;; Auto vars:     Size  Location     Type
 19177 ;;  sign            1  [STACK] unsigned char 
 19178 ;;  counter         1  [STACK] unsigned char 
 19179 ;; Return value:  Size  Location     Type
 19180 ;;                  8  [STACK] long long 
 19181 ;; Registers used:
 19182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19183 ;; Tracked objects:
 19184 ;;		On entry : 0/3
 19185 ;;		On exit  : 0/0
 19186 ;;		Unchanged: 0/0
 19187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19192 ;;Total ram usage:        0 bytes
 19193 ;; Hardware stack levels used:    1
 19194 ;; Hardware stack levels required when called:   15
 19195 ;; This function calls:
 19196 ;;		Nothing
 19197 ;; This function is called by:
 19198 ;;		_dtoa
 19199 ;; This function uses a reentrant model
 19200 ;;
 19201                           
 19202                           	psect	text68
 19203  016BEA                     __ptext68:
 19204                           	opt callstack 0
 19205  016BEA                     ___aomod:
 19206                           	opt callstack 0
 19207                           
 19208                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19209  016BEA  52E6               	movf	postinc1,f,c
 19210  016BEC  52E6               	movf	postinc1,f,c
 19211                           
 19212                           ;stkvar	_sign @ sp[(-2)+0]
 19213                           
 19214                           ;incstack = 0
 19215 ;; hardware stack exceeded
 19216  016BEE  0EFE               	movlw	-2
 19217  016BF0  6AE3               	clrf	plusw1,c
 19218                           
 19219                           ;stkvar	_dividend @ sp[(-2)+-8]
 19220  016BF2  0EFD               	movlw	-3
 19221  016BF4  AEE3               	btfss	plusw1,7,c
 19222  016BF6  D028               	goto	l7740
 19223                           
 19224                           ;stkvar	_dividend @ sp[(-2)+-8]
 19225                           ;stkvar	_dividend @ sp[(-2)+-8]
 19226  016BF8  0EF6               	movlw	-10
 19227  016BFA  6CE3               	negf	plusw1,c
 19228  016BFC  0EF7               	movlw	-9
 19229  016BFE  1EE3               	comf	plusw1,f,c
 19230  016C00  0EF8               	movlw	-8
 19231  016C02  1EE3               	comf	plusw1,f,c
 19232  016C04  0EF9               	movlw	-7
 19233  016C06  1EE3               	comf	plusw1,f,c
 19234  016C08  0EFA               	movlw	-6
 19235  016C0A  1EE3               	comf	plusw1,f,c
 19236  016C0C  0EFB               	movlw	-5
 19237  016C0E  1EE3               	comf	plusw1,f,c
 19238  016C10  0EFC               	movlw	-4
 19239  016C12  1EE3               	comf	plusw1,f,c
 19240  016C14  0EFD               	movlw	-3
 19241  016C16  1EE3               	comf	plusw1,f,c
 19242  016C18  E314               	bnc	u6050
 19243  016C1A  0EF7               	movlw	-9
 19244  016C1C  2AE3               	incf	plusw1,f,c
 19245  016C1E  E311               	bnc	u6050
 19246  016C20  0EF8               	movlw	-8
 19247  016C22  2AE3               	incf	plusw1,f,c
 19248  016C24  E30E               	bnc	u6050
 19249  016C26  0EF9               	movlw	-7
 19250  016C28  2AE3               	incf	plusw1,f,c
 19251  016C2A  E30B               	bnc	u6050
 19252  016C2C  0EFA               	movlw	-6
 19253  016C2E  2AE3               	incf	plusw1,f,c
 19254  016C30  E308               	bnc	u6050
 19255  016C32  0EFB               	movlw	-5
 19256  016C34  2AE3               	incf	plusw1,f,c
 19257  016C36  E305               	bnc	u6050
 19258  016C38  0EFC               	movlw	-4
 19259  016C3A  2AE3               	incf	plusw1,f,c
 19260  016C3C  E302               	bnc	u6050
 19261  016C3E  0EFD               	movlw	-3
 19262  016C40  2AE3               	incf	plusw1,f,c
 19263  016C42                     u6050:
 19264                           
 19265                           ;stkvar	_sign @ sp[(-2)+0]
 19266  016C42  0EFE               	movlw	-2
 19267  016C44  6AE3               	clrf	plusw1,c
 19268  016C46  2AE3               	incf	plusw1,f,c
 19269  016C48                     l7740:
 19270                           
 19271                           ;stkvar	_divisor @ sp[(-2)+-16]
 19272  016C48  0EF5               	movlw	-11
 19273  016C4A  AEE3               	btfss	plusw1,7,c
 19274  016C4C  D025               	goto	u6070
 19275                           
 19276                           ;stkvar	_divisor @ sp[(-2)+-16]
 19277                           ;stkvar	_divisor @ sp[(-2)+-16]
 19278  016C4E  0EEE               	movlw	-18
 19279  016C50  6CE3               	negf	plusw1,c
 19280  016C52  0EEF               	movlw	-17
 19281  016C54  1EE3               	comf	plusw1,f,c
 19282  016C56  0EF0               	movlw	-16
 19283  016C58  1EE3               	comf	plusw1,f,c
 19284  016C5A  0EF1               	movlw	-15
 19285  016C5C  1EE3               	comf	plusw1,f,c
 19286  016C5E  0EF2               	movlw	-14
 19287  016C60  1EE3               	comf	plusw1,f,c
 19288  016C62  0EF3               	movlw	-13
 19289  016C64  1EE3               	comf	plusw1,f,c
 19290  016C66  0EF4               	movlw	-12
 19291  016C68  1EE3               	comf	plusw1,f,c
 19292  016C6A  0EF5               	movlw	-11
 19293  016C6C  1EE3               	comf	plusw1,f,c
 19294  016C6E  E314               	bnc	u6070
 19295  016C70  0EEF               	movlw	-17
 19296  016C72  2AE3               	incf	plusw1,f,c
 19297  016C74  E311               	bnc	u6070
 19298  016C76  0EF0               	movlw	-16
 19299  016C78  2AE3               	incf	plusw1,f,c
 19300  016C7A  E30E               	bnc	u6070
 19301  016C7C  0EF1               	movlw	-15
 19302  016C7E  2AE3               	incf	plusw1,f,c
 19303  016C80  E30B               	bnc	u6070
 19304  016C82  0EF2               	movlw	-14
 19305  016C84  2AE3               	incf	plusw1,f,c
 19306  016C86  E308               	bnc	u6070
 19307  016C88  0EF3               	movlw	-13
 19308  016C8A  2AE3               	incf	plusw1,f,c
 19309  016C8C  E305               	bnc	u6070
 19310  016C8E  0EF4               	movlw	-12
 19311  016C90  2AE3               	incf	plusw1,f,c
 19312  016C92  E302               	bnc	u6070
 19313  016C94  0EF5               	movlw	-11
 19314  016C96  2AE3               	incf	plusw1,f,c
 19315  016C98                     u6070:
 19316                           
 19317                           ;stkvar	_divisor @ sp[(-2)+-16]
 19318  016C98  0EEE               	movlw	-18
 19319  016C9A  50E3               	movf	plusw1,w,c
 19320  016C9C  E116               	bnz	u6080
 19321  016C9E  0EEF               	movlw	-17
 19322  016CA0  50E3               	movf	plusw1,w,c
 19323  016CA2  E113               	bnz	u6080
 19324  016CA4  0EF0               	movlw	-16
 19325  016CA6  50E3               	movf	plusw1,w,c
 19326  016CA8  E110               	bnz	u6080
 19327  016CAA  0EF1               	movlw	-15
 19328  016CAC  50E3               	movf	plusw1,w,c
 19329  016CAE  E10D               	bnz	u6080
 19330  016CB0  0EF2               	movlw	-14
 19331  016CB2  50E3               	movf	plusw1,w,c
 19332  016CB4  E10A               	bnz	u6080
 19333  016CB6  0EF3               	movlw	-13
 19334  016CB8  50E3               	movf	plusw1,w,c
 19335  016CBA  E107               	bnz	u6080
 19336  016CBC  0EF4               	movlw	-12
 19337  016CBE  50E3               	movf	plusw1,w,c
 19338  016CC0  E104               	bnz	u6080
 19339  016CC2  0EF5               	movlw	-11
 19340  016CC4  50E3               	movf	plusw1,w,c
 19341  016CC6  B4D8               	btfsc	status,2,c
 19342  016CC8  D075               	goto	u6110
 19343  016CCA                     u6080:
 19344                           
 19345                           ;stkvar	_counter @ sp[(-2)+1]
 19346  016CCA  0EFF               	movlw	-1
 19347  016CCC  6AE3               	clrf	plusw1,c
 19348  016CCE  D012               	goto	L20
 19349  016CD0                     l7748:
 19350                           
 19351                           ;stkvar	_divisor @ sp[(-2)+-16]
 19352  016CD0  90D8               	bcf	status,0,c
 19353  016CD2  0EEE               	movlw	-18
 19354  016CD4  36E3               	rlcf	plusw1,f,c
 19355  016CD6  0EEF               	movlw	-17
 19356  016CD8  36E3               	rlcf	plusw1,f,c
 19357  016CDA  0EF0               	movlw	-16
 19358  016CDC  36E3               	rlcf	plusw1,f,c
 19359  016CDE  0EF1               	movlw	-15
 19360  016CE0  36E3               	rlcf	plusw1,f,c
 19361  016CE2  0EF2               	movlw	-14
 19362  016CE4  36E3               	rlcf	plusw1,f,c
 19363  016CE6  0EF3               	movlw	-13
 19364  016CE8  36E3               	rlcf	plusw1,f,c
 19365  016CEA  0EF4               	movlw	-12
 19366  016CEC  36E3               	rlcf	plusw1,f,c
 19367  016CEE  0EF5               	movlw	-11
 19368  016CF0  36E3               	rlcf	plusw1,f,c
 19369                           
 19370                           ;stkvar	_counter @ sp[(-2)+1]
 19371  016CF2  0EFF               	movlw	-1
 19372  016CF4                     L20:
 19373  016CF4  2AE3               	incf	plusw1,f,c
 19374                           
 19375                           ;stkvar	_divisor @ sp[(-2)+-16]
 19376  016CF6  0EF5               	movlw	-11
 19377  016CF8  AEE3               	btfss	plusw1,7,c
 19378  016CFA  D7EA               	goto	l7748
 19379  016CFC                     u6090:
 19380                           
 19381                           ;stkvar	_divisor @ sp[(-2)+-16]
 19382                           ;stkvar	_dividend @ sp[(-2)+-8]
 19383  016CFC  50E1               	movf	fsr1l,w,c
 19384  016CFE  0FF6               	addlw	-10
 19385  016D00  6ED9               	movwf	fsr2l,c
 19386  016D02  50E2               	movf	fsr1h,w,c
 19387  016D04  6EDA               	movwf	fsr2h,c
 19388  016D06  0EFF               	movlw	255
 19389  016D08  22DA               	addwfc	fsr2h,f,c
 19390  016D0A  0EEE               	movlw	-18
 19391  016D0C  50E3               	movf	plusw1,w,c
 19392  016D0E  5CDE               	subwf	postinc2,w,c
 19393  016D10  0EEF               	movlw	-17
 19394  016D12  50E3               	movf	plusw1,w,c
 19395  016D14  58DE               	subwfb	postinc2,w,c
 19396  016D16  0EF0               	movlw	-16
 19397  016D18  50E3               	movf	plusw1,w,c
 19398  016D1A  58DE               	subwfb	postinc2,w,c
 19399  016D1C  0EF1               	movlw	-15
 19400  016D1E  50E3               	movf	plusw1,w,c
 19401  016D20  58DE               	subwfb	postinc2,w,c
 19402  016D22  0EF2               	movlw	-14
 19403  016D24  50E3               	movf	plusw1,w,c
 19404  016D26  58DE               	subwfb	postinc2,w,c
 19405  016D28  0EF3               	movlw	-13
 19406  016D2A  50E3               	movf	plusw1,w,c
 19407  016D2C  58DE               	subwfb	postinc2,w,c
 19408  016D2E  0EF4               	movlw	-12
 19409  016D30  50E3               	movf	plusw1,w,c
 19410  016D32  58DE               	subwfb	postinc2,w,c
 19411  016D34  0EF5               	movlw	-11
 19412  016D36  50E3               	movf	plusw1,w,c
 19413  016D38  58DE               	subwfb	postinc2,w,c
 19414  016D3A  A0D8               	btfss	status,0,c
 19415  016D3C  D01F               	goto	l7756
 19416                           
 19417                           ;stkvar	_divisor @ sp[(-2)+-16]
 19418                           ;stkvar	_dividend @ sp[(-2)+-8]
 19419  016D3E  50E1               	movf	fsr1l,w,c
 19420  016D40  0FF6               	addlw	-10
 19421  016D42  6ED9               	movwf	fsr2l,c
 19422  016D44  50E2               	movf	fsr1h,w,c
 19423  016D46  6EDA               	movwf	fsr2h,c
 19424  016D48  0EFF               	movlw	255
 19425  016D4A  22DA               	addwfc	fsr2h,f,c
 19426  016D4C  0EEE               	movlw	-18
 19427  016D4E  50E3               	movf	plusw1,w,c
 19428  016D50  5EDE               	subwf	postinc2,f,c
 19429  016D52  0EEF               	movlw	-17
 19430  016D54  50E3               	movf	plusw1,w,c
 19431  016D56  5ADE               	subwfb	postinc2,f,c
 19432  016D58  0EF0               	movlw	-16
 19433  016D5A  50E3               	movf	plusw1,w,c
 19434  016D5C  5ADE               	subwfb	postinc2,f,c
 19435  016D5E  0EF1               	movlw	-15
 19436  016D60  50E3               	movf	plusw1,w,c
 19437  016D62  5ADE               	subwfb	postinc2,f,c
 19438  016D64  0EF2               	movlw	-14
 19439  016D66  50E3               	movf	plusw1,w,c
 19440  016D68  5ADE               	subwfb	postinc2,f,c
 19441  016D6A  0EF3               	movlw	-13
 19442  016D6C  50E3               	movf	plusw1,w,c
 19443  016D6E  5ADE               	subwfb	postinc2,f,c
 19444  016D70  0EF4               	movlw	-12
 19445  016D72  50E3               	movf	plusw1,w,c
 19446  016D74  5ADE               	subwfb	postinc2,f,c
 19447  016D76  0EF5               	movlw	-11
 19448  016D78  50E3               	movf	plusw1,w,c
 19449  016D7A  5ADE               	subwfb	postinc2,f,c
 19450  016D7C                     l7756:
 19451                           
 19452                           ;stkvar	_divisor @ sp[(-2)+-16]
 19453  016D7C  90D8               	bcf	status,0,c
 19454  016D7E  0EF5               	movlw	-11
 19455  016D80  32E3               	rrcf	plusw1,f,c
 19456  016D82  0EF4               	movlw	-12
 19457  016D84  32E3               	rrcf	plusw1,f,c
 19458  016D86  0EF3               	movlw	-13
 19459  016D88  32E3               	rrcf	plusw1,f,c
 19460  016D8A  0EF2               	movlw	-14
 19461  016D8C  32E3               	rrcf	plusw1,f,c
 19462  016D8E  0EF1               	movlw	-15
 19463  016D90  32E3               	rrcf	plusw1,f,c
 19464  016D92  0EF0               	movlw	-16
 19465  016D94  32E3               	rrcf	plusw1,f,c
 19466  016D96  0EEF               	movlw	-17
 19467  016D98  32E3               	rrcf	plusw1,f,c
 19468  016D9A  0EEE               	movlw	-18
 19469  016D9C  32E3               	rrcf	plusw1,f,c
 19470                           
 19471                           ;stkvar	_counter @ sp[(-2)+1]
 19472  016D9E  0EFF               	movlw	-1
 19473  016DA0  50E3               	movf	plusw1,w,c
 19474  016DA2  6E01               	movwf	btemp^0,c
 19475  016DA4  0E01               	movlw	1
 19476  016DA6  5E01               	subwf	btemp^0,f,c
 19477  016DA8  0EFF               	movlw	-1
 19478  016DAA  0060  F007  FFE3   	movff	btemp,plusw1
 19479  016DB0  A4D8               	btfss	status,2,c
 19480  016DB2  D7A4               	goto	u6090
 19481  016DB4                     u6110:
 19482                           
 19483                           ;stkvar	_sign @ sp[(-2)+0]
 19484  016DB4  0EFE               	movlw	-2
 19485  016DB6  50E3               	movf	plusw1,w,c
 19486  016DB8  B4D8               	btfsc	status,2,c
 19487  016DBA  D025               	goto	u6130
 19488                           
 19489                           ;stkvar	_dividend @ sp[(-2)+-8]
 19490                           ;stkvar	_dividend @ sp[(-2)+-8]
 19491  016DBC  0EF6               	movlw	-10
 19492  016DBE  6CE3               	negf	plusw1,c
 19493  016DC0  0EF7               	movlw	-9
 19494  016DC2  1EE3               	comf	plusw1,f,c
 19495  016DC4  0EF8               	movlw	-8
 19496  016DC6  1EE3               	comf	plusw1,f,c
 19497  016DC8  0EF9               	movlw	-7
 19498  016DCA  1EE3               	comf	plusw1,f,c
 19499  016DCC  0EFA               	movlw	-6
 19500  016DCE  1EE3               	comf	plusw1,f,c
 19501  016DD0  0EFB               	movlw	-5
 19502  016DD2  1EE3               	comf	plusw1,f,c
 19503  016DD4  0EFC               	movlw	-4
 19504  016DD6  1EE3               	comf	plusw1,f,c
 19505  016DD8  0EFD               	movlw	-3
 19506  016DDA  1EE3               	comf	plusw1,f,c
 19507  016DDC  E314               	bnc	u6130
 19508  016DDE  0EF7               	movlw	-9
 19509  016DE0  2AE3               	incf	plusw1,f,c
 19510  016DE2  E311               	bnc	u6130
 19511  016DE4  0EF8               	movlw	-8
 19512  016DE6  2AE3               	incf	plusw1,f,c
 19513  016DE8  E30E               	bnc	u6130
 19514  016DEA  0EF9               	movlw	-7
 19515  016DEC  2AE3               	incf	plusw1,f,c
 19516  016DEE  E30B               	bnc	u6130
 19517  016DF0  0EFA               	movlw	-6
 19518  016DF2  2AE3               	incf	plusw1,f,c
 19519  016DF4  E308               	bnc	u6130
 19520  016DF6  0EFB               	movlw	-5
 19521  016DF8  2AE3               	incf	plusw1,f,c
 19522  016DFA  E305               	bnc	u6130
 19523  016DFC  0EFC               	movlw	-4
 19524  016DFE  2AE3               	incf	plusw1,f,c
 19525  016E00  E302               	bnc	u6130
 19526  016E02  0EFD               	movlw	-3
 19527  016E04  2AE3               	incf	plusw1,f,c
 19528  016E06                     u6130:
 19529                           
 19530                           ;stkvar	_dividend @ sp[(-2)+-8]
 19531  016E06  0EF6               	movlw	246
 19532  016E08  24E1               	addwf	fsr1l,w,c
 19533  016E0A  6ED9               	movwf	fsr2l,c
 19534  016E0C  0EFF               	movlw	255
 19535  016E0E  20E2               	addwfc	fsr1h,w,c
 19536  016E10  6EDA               	movwf	fsr2h,c
 19537                           
 19538                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19539  016E12  0E08               	movlw	8
 19540  016E14  6E01               	movwf	btemp^0,c
 19541  016E16  0EF6               	movlw	-10
 19542  016E18                     us614999:
 19543  016E18  006F FF7B FFE3     	movff	postinc2,plusw1
 19544  016E1E  28E8               	incf	wreg,w,c
 19545  016E20  2E01               	decfsz	btemp^0,f,c
 19546  016E22  D7FA               	bra	us614999
 19547                           
 19548                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19549  016E24  52E5               	movf	postdec1,f,c
 19550  016E26  52E5               	movf	postdec1,f,c
 19551  016E28  0012               	return		;funcret
 19552  016E2A                     __end_of___aomod:
 19553                           	opt callstack 0
 19554                           
 19555 ;; *************** function ___aodiv *****************
 19556 ;; Defined at:
 19557 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19558 ;; Parameters:    Size  Location     Type
 19559 ;;  dividend        8  [STACK] long long 
 19560 ;;  divisor         8  [STACK] long long 
 19561 ;; Auto vars:     Size  Location     Type
 19562 ;;  quotient        8  [STACK] long long 
 19563 ;;  sign            1  [STACK] unsigned char 
 19564 ;;  counter         1  [STACK] unsigned char 
 19565 ;; Return value:  Size  Location     Type
 19566 ;;                  8  [STACK] long long 
 19567 ;; Registers used:
 19568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19569 ;; Tracked objects:
 19570 ;;		On entry : 0/3
 19571 ;;		On exit  : 0/0
 19572 ;;		Unchanged: 0/0
 19573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19578 ;;Total ram usage:        0 bytes
 19579 ;; Hardware stack levels used:    1
 19580 ;; Hardware stack levels required when called:   15
 19581 ;; This function calls:
 19582 ;;		Nothing
 19583 ;; This function is called by:
 19584 ;;		_dtoa
 19585 ;; This function uses a reentrant model
 19586 ;;
 19587                           
 19588                           	psect	text69
 19589  0166F6                     __ptext69:
 19590                           	opt callstack 0
 19591  0166F6                     ___aodiv:
 19592                           	opt callstack 0
 19593                           
 19594                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 19595  0166F6  0E0A               	movlw	10
 19596  0166F8  26E1               	addwf	fsr1l,f,c
 19597  0166FA  0E00               	movlw	0
 19598  0166FC  22E2               	addwfc	fsr1h,f,c
 19599                           
 19600                           ;stkvar	_sign @ sp[(-10)+8]
 19601                           
 19602                           ;incstack = 0
 19603 ;; hardware stack exceeded
 19604  0166FE  0EFE               	movlw	-2
 19605  016700  6AE3               	clrf	plusw1,c
 19606                           
 19607                           ;stkvar	_divisor @ sp[(-10)+-16]
 19608  016702  0EED               	movlw	-19
 19609  016704  AEE3               	btfss	plusw1,7,c
 19610  016706  D028               	goto	l7696
 19611                           
 19612                           ;stkvar	_divisor @ sp[(-10)+-16]
 19613                           ;stkvar	_divisor @ sp[(-10)+-16]
 19614  016708  0EE6               	movlw	-26
 19615  01670A  6CE3               	negf	plusw1,c
 19616  01670C  0EE7               	movlw	-25
 19617  01670E  1EE3               	comf	plusw1,f,c
 19618  016710  0EE8               	movlw	-24
 19619  016712  1EE3               	comf	plusw1,f,c
 19620  016714  0EE9               	movlw	-23
 19621  016716  1EE3               	comf	plusw1,f,c
 19622  016718  0EEA               	movlw	-22
 19623  01671A  1EE3               	comf	plusw1,f,c
 19624  01671C  0EEB               	movlw	-21
 19625  01671E  1EE3               	comf	plusw1,f,c
 19626  016720  0EEC               	movlw	-20
 19627  016722  1EE3               	comf	plusw1,f,c
 19628  016724  0EED               	movlw	-19
 19629  016726  1EE3               	comf	plusw1,f,c
 19630  016728  E314               	bnc	u5930
 19631  01672A  0EE7               	movlw	-25
 19632  01672C  2AE3               	incf	plusw1,f,c
 19633  01672E  E311               	bnc	u5930
 19634  016730  0EE8               	movlw	-24
 19635  016732  2AE3               	incf	plusw1,f,c
 19636  016734  E30E               	bnc	u5930
 19637  016736  0EE9               	movlw	-23
 19638  016738  2AE3               	incf	plusw1,f,c
 19639  01673A  E30B               	bnc	u5930
 19640  01673C  0EEA               	movlw	-22
 19641  01673E  2AE3               	incf	plusw1,f,c
 19642  016740  E308               	bnc	u5930
 19643  016742  0EEB               	movlw	-21
 19644  016744  2AE3               	incf	plusw1,f,c
 19645  016746  E305               	bnc	u5930
 19646  016748  0EEC               	movlw	-20
 19647  01674A  2AE3               	incf	plusw1,f,c
 19648  01674C  E302               	bnc	u5930
 19649  01674E  0EED               	movlw	-19
 19650  016750  2AE3               	incf	plusw1,f,c
 19651  016752                     u5930:
 19652                           
 19653                           ;stkvar	_sign @ sp[(-10)+8]
 19654  016752  0EFE               	movlw	-2
 19655  016754  6AE3               	clrf	plusw1,c
 19656  016756  2AE3               	incf	plusw1,f,c
 19657  016758                     l7696:
 19658                           
 19659                           ;stkvar	_dividend @ sp[(-10)+-8]
 19660  016758  0EF5               	movlw	-11
 19661  01675A  AEE3               	btfss	plusw1,7,c
 19662  01675C  D027               	goto	l7702
 19663                           
 19664                           ;stkvar	_dividend @ sp[(-10)+-8]
 19665                           ;stkvar	_dividend @ sp[(-10)+-8]
 19666  01675E  0EEE               	movlw	-18
 19667  016760  6CE3               	negf	plusw1,c
 19668  016762  0EEF               	movlw	-17
 19669  016764  1EE3               	comf	plusw1,f,c
 19670  016766  0EF0               	movlw	-16
 19671  016768  1EE3               	comf	plusw1,f,c
 19672  01676A  0EF1               	movlw	-15
 19673  01676C  1EE3               	comf	plusw1,f,c
 19674  01676E  0EF2               	movlw	-14
 19675  016770  1EE3               	comf	plusw1,f,c
 19676  016772  0EF3               	movlw	-13
 19677  016774  1EE3               	comf	plusw1,f,c
 19678  016776  0EF4               	movlw	-12
 19679  016778  1EE3               	comf	plusw1,f,c
 19680  01677A  0EF5               	movlw	-11
 19681  01677C  1EE3               	comf	plusw1,f,c
 19682  01677E  E314               	bnc	u5950
 19683  016780  0EEF               	movlw	-17
 19684  016782  2AE3               	incf	plusw1,f,c
 19685  016784  E311               	bnc	u5950
 19686  016786  0EF0               	movlw	-16
 19687  016788  2AE3               	incf	plusw1,f,c
 19688  01678A  E30E               	bnc	u5950
 19689  01678C  0EF1               	movlw	-15
 19690  01678E  2AE3               	incf	plusw1,f,c
 19691  016790  E30B               	bnc	u5950
 19692  016792  0EF2               	movlw	-14
 19693  016794  2AE3               	incf	plusw1,f,c
 19694  016796  E308               	bnc	u5950
 19695  016798  0EF3               	movlw	-13
 19696  01679A  2AE3               	incf	plusw1,f,c
 19697  01679C  E305               	bnc	u5950
 19698  01679E  0EF4               	movlw	-12
 19699  0167A0  2AE3               	incf	plusw1,f,c
 19700  0167A2  E302               	bnc	u5950
 19701  0167A4  0EF5               	movlw	-11
 19702  0167A6  2AE3               	incf	plusw1,f,c
 19703  0167A8                     u5950:
 19704                           
 19705                           ;stkvar	_sign @ sp[(-10)+8]
 19706  0167A8  0EFE               	movlw	-2
 19707  0167AA  70E3               	btg	plusw1,0,c
 19708  0167AC                     l7702:
 19709                           
 19710                           ;stkvar	_quotient @ sp[(-10)+0]
 19711  0167AC  0E07               	movlw	7
 19712  0167AE  6E01               	movwf	btemp^0,c
 19713  0167B0  0EF6               	movlw	-10
 19714  0167B2                     u5961:
 19715  0167B2  6AE3               	clrf	plusw1,c
 19716  0167B4  2AE8               	incf	wreg,f,c
 19717  0167B6  0601               	decf	btemp^0,f,c
 19718  0167B8  E2FC               	bc	u5961
 19719                           
 19720                           ;stkvar	_divisor @ sp[(-10)+-16]
 19721  0167BA  0EE6               	movlw	-26
 19722  0167BC  50E3               	movf	plusw1,w,c
 19723  0167BE  E116               	bnz	u5970
 19724  0167C0  0EE7               	movlw	-25
 19725  0167C2  50E3               	movf	plusw1,w,c
 19726  0167C4  E113               	bnz	u5970
 19727  0167C6  0EE8               	movlw	-24
 19728  0167C8  50E3               	movf	plusw1,w,c
 19729  0167CA  E110               	bnz	u5970
 19730  0167CC  0EE9               	movlw	-23
 19731  0167CE  50E3               	movf	plusw1,w,c
 19732  0167D0  E10D               	bnz	u5970
 19733  0167D2  0EEA               	movlw	-22
 19734  0167D4  50E3               	movf	plusw1,w,c
 19735  0167D6  E10A               	bnz	u5970
 19736  0167D8  0EEB               	movlw	-21
 19737  0167DA  50E3               	movf	plusw1,w,c
 19738  0167DC  E107               	bnz	u5970
 19739  0167DE  0EEC               	movlw	-20
 19740  0167E0  50E3               	movf	plusw1,w,c
 19741  0167E2  E104               	bnz	u5970
 19742  0167E4  0EED               	movlw	-19
 19743  0167E6  50E3               	movf	plusw1,w,c
 19744  0167E8  B4D8               	btfsc	status,2,c
 19745  0167EA  D088               	goto	u6000
 19746  0167EC                     u5970:
 19747                           
 19748                           ;stkvar	_counter @ sp[(-10)+9]
 19749  0167EC  0EFF               	movlw	-1
 19750  0167EE  6AE3               	clrf	plusw1,c
 19751  0167F0  D012               	goto	L21
 19752  0167F2                     l7708:
 19753                           
 19754                           ;stkvar	_divisor @ sp[(-10)+-16]
 19755  0167F2  90D8               	bcf	status,0,c
 19756  0167F4  0EE6               	movlw	-26
 19757  0167F6  36E3               	rlcf	plusw1,f,c
 19758  0167F8  0EE7               	movlw	-25
 19759  0167FA  36E3               	rlcf	plusw1,f,c
 19760  0167FC  0EE8               	movlw	-24
 19761  0167FE  36E3               	rlcf	plusw1,f,c
 19762  016800  0EE9               	movlw	-23
 19763  016802  36E3               	rlcf	plusw1,f,c
 19764  016804  0EEA               	movlw	-22
 19765  016806  36E3               	rlcf	plusw1,f,c
 19766  016808  0EEB               	movlw	-21
 19767  01680A  36E3               	rlcf	plusw1,f,c
 19768  01680C  0EEC               	movlw	-20
 19769  01680E  36E3               	rlcf	plusw1,f,c
 19770  016810  0EED               	movlw	-19
 19771  016812  36E3               	rlcf	plusw1,f,c
 19772                           
 19773                           ;stkvar	_counter @ sp[(-10)+9]
 19774  016814  0EFF               	movlw	-1
 19775  016816                     L21:
 19776  016816  2AE3               	incf	plusw1,f,c
 19777                           
 19778                           ;stkvar	_divisor @ sp[(-10)+-16]
 19779  016818  0EED               	movlw	-19
 19780  01681A  AEE3               	btfss	plusw1,7,c
 19781  01681C  D7EA               	goto	l7708
 19782  01681E                     u5980:
 19783                           
 19784                           ;stkvar	_quotient @ sp[(-10)+0]
 19785  01681E  90D8               	bcf	status,0,c
 19786  016820  0EF6               	movlw	-10
 19787  016822  36E3               	rlcf	plusw1,f,c
 19788  016824  0EF7               	movlw	-9
 19789  016826  36E3               	rlcf	plusw1,f,c
 19790  016828  0EF8               	movlw	-8
 19791  01682A  36E3               	rlcf	plusw1,f,c
 19792  01682C  0EF9               	movlw	-7
 19793  01682E  36E3               	rlcf	plusw1,f,c
 19794  016830  0EFA               	movlw	-6
 19795  016832  36E3               	rlcf	plusw1,f,c
 19796  016834  0EFB               	movlw	-5
 19797  016836  36E3               	rlcf	plusw1,f,c
 19798  016838  0EFC               	movlw	-4
 19799  01683A  36E3               	rlcf	plusw1,f,c
 19800  01683C  0EFD               	movlw	-3
 19801  01683E  36E3               	rlcf	plusw1,f,c
 19802                           
 19803                           ;stkvar	_divisor @ sp[(-10)+-16]
 19804                           ;stkvar	_dividend @ sp[(-10)+-8]
 19805  016840  50E1               	movf	fsr1l,w,c
 19806  016842  0FEE               	addlw	-18
 19807  016844  6ED9               	movwf	fsr2l,c
 19808  016846  50E2               	movf	fsr1h,w,c
 19809  016848  6EDA               	movwf	fsr2h,c
 19810  01684A  0EFF               	movlw	255
 19811  01684C  22DA               	addwfc	fsr2h,f,c
 19812  01684E  0EE6               	movlw	-26
 19813  016850  50E3               	movf	plusw1,w,c
 19814  016852  5CDE               	subwf	postinc2,w,c
 19815  016854  0EE7               	movlw	-25
 19816  016856  50E3               	movf	plusw1,w,c
 19817  016858  58DE               	subwfb	postinc2,w,c
 19818  01685A  0EE8               	movlw	-24
 19819  01685C  50E3               	movf	plusw1,w,c
 19820  01685E  58DE               	subwfb	postinc2,w,c
 19821  016860  0EE9               	movlw	-23
 19822  016862  50E3               	movf	plusw1,w,c
 19823  016864  58DE               	subwfb	postinc2,w,c
 19824  016866  0EEA               	movlw	-22
 19825  016868  50E3               	movf	plusw1,w,c
 19826  01686A  58DE               	subwfb	postinc2,w,c
 19827  01686C  0EEB               	movlw	-21
 19828  01686E  50E3               	movf	plusw1,w,c
 19829  016870  58DE               	subwfb	postinc2,w,c
 19830  016872  0EEC               	movlw	-20
 19831  016874  50E3               	movf	plusw1,w,c
 19832  016876  58DE               	subwfb	postinc2,w,c
 19833  016878  0EED               	movlw	-19
 19834  01687A  50E3               	movf	plusw1,w,c
 19835  01687C  58DE               	subwfb	postinc2,w,c
 19836  01687E  A0D8               	btfss	status,0,c
 19837  016880  D021               	goto	l7720
 19838                           
 19839                           ;stkvar	_divisor @ sp[(-10)+-16]
 19840                           ;stkvar	_dividend @ sp[(-10)+-8]
 19841  016882  50E1               	movf	fsr1l,w,c
 19842  016884  0FEE               	addlw	-18
 19843  016886  6ED9               	movwf	fsr2l,c
 19844  016888  50E2               	movf	fsr1h,w,c
 19845  01688A  6EDA               	movwf	fsr2h,c
 19846  01688C  0EFF               	movlw	255
 19847  01688E  22DA               	addwfc	fsr2h,f,c
 19848  016890  0EE6               	movlw	-26
 19849  016892  50E3               	movf	plusw1,w,c
 19850  016894  5EDE               	subwf	postinc2,f,c
 19851  016896  0EE7               	movlw	-25
 19852  016898  50E3               	movf	plusw1,w,c
 19853  01689A  5ADE               	subwfb	postinc2,f,c
 19854  01689C  0EE8               	movlw	-24
 19855  01689E  50E3               	movf	plusw1,w,c
 19856  0168A0  5ADE               	subwfb	postinc2,f,c
 19857  0168A2  0EE9               	movlw	-23
 19858  0168A4  50E3               	movf	plusw1,w,c
 19859  0168A6  5ADE               	subwfb	postinc2,f,c
 19860  0168A8  0EEA               	movlw	-22
 19861  0168AA  50E3               	movf	plusw1,w,c
 19862  0168AC  5ADE               	subwfb	postinc2,f,c
 19863  0168AE  0EEB               	movlw	-21
 19864  0168B0  50E3               	movf	plusw1,w,c
 19865  0168B2  5ADE               	subwfb	postinc2,f,c
 19866  0168B4  0EEC               	movlw	-20
 19867  0168B6  50E3               	movf	plusw1,w,c
 19868  0168B8  5ADE               	subwfb	postinc2,f,c
 19869  0168BA  0EED               	movlw	-19
 19870  0168BC  50E3               	movf	plusw1,w,c
 19871  0168BE  5ADE               	subwfb	postinc2,f,c
 19872                           
 19873                           ;stkvar	_quotient @ sp[(-10)+0]
 19874  0168C0  0EF6               	movlw	-10
 19875  0168C2  80E3               	bsf	plusw1,0,c
 19876  0168C4                     l7720:
 19877                           
 19878                           ;stkvar	_divisor @ sp[(-10)+-16]
 19879  0168C4  90D8               	bcf	status,0,c
 19880  0168C6  0EED               	movlw	-19
 19881  0168C8  32E3               	rrcf	plusw1,f,c
 19882  0168CA  0EEC               	movlw	-20
 19883  0168CC  32E3               	rrcf	plusw1,f,c
 19884  0168CE  0EEB               	movlw	-21
 19885  0168D0  32E3               	rrcf	plusw1,f,c
 19886  0168D2  0EEA               	movlw	-22
 19887  0168D4  32E3               	rrcf	plusw1,f,c
 19888  0168D6  0EE9               	movlw	-23
 19889  0168D8  32E3               	rrcf	plusw1,f,c
 19890  0168DA  0EE8               	movlw	-24
 19891  0168DC  32E3               	rrcf	plusw1,f,c
 19892  0168DE  0EE7               	movlw	-25
 19893  0168E0  32E3               	rrcf	plusw1,f,c
 19894  0168E2  0EE6               	movlw	-26
 19895  0168E4  32E3               	rrcf	plusw1,f,c
 19896                           
 19897                           ;stkvar	_counter @ sp[(-10)+9]
 19898  0168E6  0EFF               	movlw	-1
 19899  0168E8  50E3               	movf	plusw1,w,c
 19900  0168EA  6E01               	movwf	btemp^0,c
 19901  0168EC  0E01               	movlw	1
 19902  0168EE  5E01               	subwf	btemp^0,f,c
 19903  0168F0  0EFF               	movlw	-1
 19904  0168F2  0060  F007  FFE3   	movff	btemp,plusw1
 19905  0168F8  A4D8               	btfss	status,2,c
 19906  0168FA  D791               	goto	u5980
 19907  0168FC                     u6000:
 19908                           
 19909                           ;stkvar	_sign @ sp[(-10)+8]
 19910  0168FC  0EFE               	movlw	-2
 19911  0168FE  50E3               	movf	plusw1,w,c
 19912  016900  B4D8               	btfsc	status,2,c
 19913  016902  D025               	goto	u6020
 19914                           
 19915                           ;stkvar	_quotient @ sp[(-10)+0]
 19916                           ;stkvar	_quotient @ sp[(-10)+0]
 19917  016904  0EF6               	movlw	-10
 19918  016906  6CE3               	negf	plusw1,c
 19919  016908  0EF7               	movlw	-9
 19920  01690A  1EE3               	comf	plusw1,f,c
 19921  01690C  0EF8               	movlw	-8
 19922  01690E  1EE3               	comf	plusw1,f,c
 19923  016910  0EF9               	movlw	-7
 19924  016912  1EE3               	comf	plusw1,f,c
 19925  016914  0EFA               	movlw	-6
 19926  016916  1EE3               	comf	plusw1,f,c
 19927  016918  0EFB               	movlw	-5
 19928  01691A  1EE3               	comf	plusw1,f,c
 19929  01691C  0EFC               	movlw	-4
 19930  01691E  1EE3               	comf	plusw1,f,c
 19931  016920  0EFD               	movlw	-3
 19932  016922  1EE3               	comf	plusw1,f,c
 19933  016924  E314               	bnc	u6020
 19934  016926  0EF7               	movlw	-9
 19935  016928  2AE3               	incf	plusw1,f,c
 19936  01692A  E311               	bnc	u6020
 19937  01692C  0EF8               	movlw	-8
 19938  01692E  2AE3               	incf	plusw1,f,c
 19939  016930  E30E               	bnc	u6020
 19940  016932  0EF9               	movlw	-7
 19941  016934  2AE3               	incf	plusw1,f,c
 19942  016936  E30B               	bnc	u6020
 19943  016938  0EFA               	movlw	-6
 19944  01693A  2AE3               	incf	plusw1,f,c
 19945  01693C  E308               	bnc	u6020
 19946  01693E  0EFB               	movlw	-5
 19947  016940  2AE3               	incf	plusw1,f,c
 19948  016942  E305               	bnc	u6020
 19949  016944  0EFC               	movlw	-4
 19950  016946  2AE3               	incf	plusw1,f,c
 19951  016948  E302               	bnc	u6020
 19952  01694A  0EFD               	movlw	-3
 19953  01694C  2AE3               	incf	plusw1,f,c
 19954  01694E                     u6020:
 19955                           
 19956                           ;stkvar	_quotient @ sp[(-10)+0]
 19957  01694E  0EF6               	movlw	246
 19958  016950  24E1               	addwf	fsr1l,w,c
 19959  016952  6ED9               	movwf	fsr2l,c
 19960  016954  0EFF               	movlw	255
 19961  016956  20E2               	addwfc	fsr1h,w,c
 19962  016958  6EDA               	movwf	fsr2h,c
 19963                           
 19964                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19965  01695A  0E08               	movlw	8
 19966  01695C  6E01               	movwf	btemp^0,c
 19967  01695E  0EEE               	movlw	-18
 19968  016960                     us603999:
 19969  016960  006F FF7B FFE3     	movff	postinc2,plusw1
 19970  016966  28E8               	incf	wreg,w,c
 19971  016968  2E01               	decfsz	btemp^0,f,c
 19972  01696A  D7FA               	bra	us603999
 19973                           
 19974                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19975  01696C  0EF6               	movlw	246
 19976  01696E  26E1               	addwf	fsr1l,f,c
 19977  016970  0EFF               	movlw	255
 19978  016972  22E2               	addwfc	fsr1h,f,c
 19979  016974  0012               	return		;funcret
 19980  016976                     __end_of___aodiv:
 19981                           	opt callstack 0
 19982                           
 19983 ;; *************** function _ctoa *****************
 19984 ;; Defined at:
 19985 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19986 ;; Parameters:    Size  Location     Type
 19987 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19988 ;;		 -> f(6), NULL(0), 
 19989 ;;  c               1  [STACK] unsigned char 
 19990 ;; Auto vars:     Size  Location     Type
 19991 ;;  w               2  [STACK] int 
 19992 ;;  l               2    0        int 
 19993 ;; Return value:  Size  Location     Type
 19994 ;;                  2  [STACK] int 
 19995 ;; Registers used:
 19996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19997 ;; Tracked objects:
 19998 ;;		On entry : 0/0
 19999 ;;		On exit  : 0/0
 20000 ;;		Unchanged: 0/0
 20001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20006 ;;Total ram usage:        0 bytes
 20007 ;; Hardware stack levels used:    1
 20008 ;; Hardware stack levels required when called:   20
 20009 ;; This function calls:
 20010 ;;		_pad
 20011 ;; This function is called by:
 20012 ;;		_vfpfcnvrt
 20013 ;; This function uses a reentrant model
 20014 ;;
 20015                           
 20016                           	psect	text70
 20017  019C9E                     __ptext70:
 20018                           	opt callstack 0
 20019  019C9E                     _ctoa:
 20020                           	opt callstack 0
 20021                           
 20022                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20023  019C9E  52E6               	movf	postinc1,f,c
 20024  019CA0  52E6               	movf	postinc1,f,c
 20025                           
 20026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20027                           
 20028                           ;incstack = 0
 20029 ;; hardware stack exceeded
 20030  019CA2  5021               	movf	_width^0,w,c
 20031  019CA4  1022               	iorwf	(_width+1)^0,w,c
 20032  019CA6  A4D8               	btfss	status,2,c
 20033  019CA8  D009               	goto	l11230
 20034                           
 20035                           ;stkvar	_w @ sp[(-2)+0]
 20036  019CAA  0EFE               	movlw	-2
 20037  019CAC  0060  F087  FFE3   	movff	_width,plusw1
 20038  019CB2  0EFF               	movlw	-1
 20039  019CB4  0060  F08B  FFE3   	movff	_width+1,plusw1
 20040  019CBA  D016               	goto	l11232
 20041  019CBC                     l11230:
 20042  019CBC  0EFF               	movlw	255
 20043  019CBE  6E0B               	movwf	(btemp+10)^0,c
 20044  019CC0  0EFF               	movlw	255
 20045  019CC2  6E0C               	movwf	(btemp+11)^0,c
 20046  019CC4  0060  F084  F009   	movff	_width,btemp+8
 20047  019CCA  0060  F088  F00A   	movff	_width+1,btemp+9
 20048  019CD0  500B               	movf	(btemp+10)^0,w,c
 20049  019CD2  2609               	addwf	(btemp+8)^0,f,c
 20050  019CD4  500C               	movf	(btemp+11)^0,w,c
 20051  019CD6  220A               	addwfc	(btemp+9)^0,f,c
 20052                           
 20053                           ;stkvar	_w @ sp[(-2)+0]
 20054  019CD8  0EFE               	movlw	-2
 20055  019CDA  0060  F027  FFE3   	movff	btemp+8,plusw1
 20056  019CE0  0EFF               	movlw	-1
 20057  019CE2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20058  019CE8                     l11232:
 20059                           
 20060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20061                           ;stkvar	_c @ sp[(-2)+-3]
 20062  019CE8  0EFB               	movlw	-5
 20063  019CEA  006F FF8C  F394    	movff	plusw1,_dbuf
 20064                           
 20065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20066  019CF0  0103               	movlb	3	; () banked
 20067  019CF2  6B95               	clrf	(_dbuf+1)& (0+255),b
 20068                           
 20069                           ; BSR set to: 3
 20070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20071                           ;stkvar	_w @ sp[(-2)+0]
 20072  019CF4  0EFE               	movlw	-2
 20073  019CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 20074  019CFC  006F FF8F FFE6     	movff	plusw1,postinc1
 20075  019D02  0E94               	movlw	low _dbuf
 20076  019D04  6EE6               	movwf	postinc1,c
 20077  019D06  0E03               	movlw	high _dbuf
 20078  019D08  6EE6               	movwf	postinc1,c
 20079                           
 20080                           ;stkvar	_fp @ sp[(-6)+-2]
 20081  019D0A  0EF8               	movlw	-8
 20082  019D0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20083  019D12  006F FF8F FFE6     	movff	plusw1,postinc1
 20084  019D18  ECB3  F0C5         	call	_pad	;wreg free
 20085                           
 20086                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20087  019D1C  0EFB               	movlw	251
 20088  019D1E  26E1               	addwf	fsr1l,f,c
 20089  019D20  0EFF               	movlw	255
 20090  019D22  22E2               	addwfc	fsr1h,f,c
 20091  019D24  0012               	return		;funcret
 20092  019D26                     __end_of_ctoa:
 20093                           	opt callstack 0
 20094                           
 20095 ;; *************** function _pad *****************
 20096 ;; Defined at:
 20097 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20098 ;; Parameters:    Size  Location     Type
 20099 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20100 ;;		 -> f(6), NULL(0), 
 20101 ;;  buf             2  [STACK] PTR unsigned char 
 20102 ;;		 -> dbuf(80), 
 20103 ;;  p               2  [STACK] int 
 20104 ;; Auto vars:     Size  Location     Type
 20105 ;;  w               2  [STACK] int 
 20106 ;;  i               2  [STACK] int 
 20107 ;; Return value:  Size  Location     Type
 20108 ;;                  2  [STACK] int 
 20109 ;; Registers used:
 20110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20111 ;; Tracked objects:
 20112 ;;		On entry : 0/3
 20113 ;;		On exit  : 0/0
 20114 ;;		Unchanged: 0/0
 20115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20120 ;;Total ram usage:        0 bytes
 20121 ;; Hardware stack levels used:    1
 20122 ;; Hardware stack levels required when called:   19
 20123 ;; This function calls:
 20124 ;;		_fputc
 20125 ;;		_fputs
 20126 ;;		_strlen
 20127 ;; This function is called by:
 20128 ;;		_ctoa
 20129 ;;		_dtoa
 20130 ;;		_efgtoa
 20131 ;;		_utoa
 20132 ;;		_xtoa
 20133 ;; This function uses a reentrant model
 20134 ;;
 20135                           
 20136                           	psect	text71
 20137  018B66                     __ptext71:
 20138                           	opt callstack 0
 20139  018B66                     _pad:
 20140                           	opt callstack 0
 20141                           
 20142                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20143  018B66  52E6               	movf	postinc1,f,c
 20144  018B68  52E6               	movf	postinc1,f,c
 20145  018B6A  52E6               	movf	postinc1,f,c
 20146  018B6C  52E6               	movf	postinc1,f,c
 20147                           
 20148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20149                           
 20150                           ;incstack = 0
 20151 ;; hardware stack exceeded
 20152  018B6E  A025               	btfss	_flags^0,0,c
 20153  018B70  D010               	goto	l11162
 20154                           
 20155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20156                           ;stkvar	_fp @ sp[(-4)+-2]
 20157  018B72  0EFA               	movlw	-6
 20158  018B74  006F FF8F FFE6     	movff	plusw1,postinc1
 20159  018B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 20160                           
 20161                           ;stkvar	_buf @ sp[(-6)+-4]
 20162  018B80  0EF6               	movlw	-10
 20163  018B82  006F FF8F FFE6     	movff	plusw1,postinc1
 20164  018B88  006F FF8F FFE6     	movff	plusw1,postinc1
 20165  018B8E  ECE0  F0CC         	call	_fputs	;wreg free
 20166  018B92                     l11162:
 20167                           
 20168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20169                           ;stkvar	_p @ sp[(-4)+-6]
 20170  018B92  0EF7               	movlw	-9
 20171  018B94  BEE3               	btfsc	plusw1,7,c
 20172  018B96  D011               	goto	l11166
 20173                           
 20174                           ;stkvar	_p @ sp[(-4)+-6]
 20175                           ;stkvar	_w @ sp[(-4)+0]
 20176  018B98  0EF6               	movlw	-10
 20177  018B9A  006F FF8C  F001    	movff	plusw1,btemp
 20178  018BA0  0EFC               	movlw	-4
 20179  018BA2  0060  F007  FFE3   	movff	btemp,plusw1
 20180  018BA8  0EF7               	movlw	-9
 20181  018BAA  006F FF8C  F001    	movff	plusw1,btemp
 20182  018BB0  0EFD               	movlw	-3
 20183  018BB2  0060  F007  FFE3   	movff	btemp,plusw1
 20184  018BB8  D004               	goto	l2078
 20185  018BBA                     l11166:
 20186                           
 20187                           ;stkvar	_w @ sp[(-4)+0]
 20188  018BBA  0EFC               	movlw	-4
 20189  018BBC  6AE3               	clrf	plusw1,c
 20190  018BBE  0EFD               	movlw	-3
 20191  018BC0  6AE3               	clrf	plusw1,c
 20192  018BC2                     l2078:
 20193                           
 20194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20195                           ;stkvar	_i @ sp[(-4)+2]
 20196  018BC2  0EFE               	movlw	-2
 20197  018BC4  6AE3               	clrf	plusw1,c
 20198  018BC6  0EFF               	movlw	-1
 20199  018BC8  6AE3               	clrf	plusw1,c
 20200                           
 20201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20202  018BCA  D01E               	goto	l11172
 20203  018BCC                     l11168:
 20204                           
 20205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20206                           ;stkvar	_fp @ sp[(-4)+-2]
 20207  018BCC  0EFA               	movlw	-6
 20208  018BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20209  018BD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20210  018BDA  0E20               	movlw	32
 20211  018BDC  6EE6               	movwf	postinc1,c
 20212  018BDE  0E00               	movlw	0
 20213  018BE0  6EE6               	movwf	postinc1,c
 20214  018BE2  EC95  F0C4         	call	_fputc	;wreg free
 20215                           
 20216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20217                           ;stkvar	_i @ sp[(-4)+2]
 20218  018BE6  0EFE               	movlw	-2
 20219  018BE8  50E3               	movf	plusw1,w,c
 20220  018BEA  0F01               	addlw	1
 20221  018BEC  6E01               	movwf	btemp^0,c
 20222  018BEE  0EFE               	movlw	-2
 20223  018BF0  0060  F007  FFE3   	movff	btemp,plusw1
 20224  018BF6  6A01               	clrf	btemp^0,c
 20225  018BF8  0EFF               	movlw	-1
 20226  018BFA  50E3               	movf	plusw1,w,c
 20227  018BFC  2001               	addwfc	btemp^0,w,c
 20228  018BFE  6E01               	movwf	btemp^0,c
 20229  018C00  0EFF               	movlw	-1
 20230  018C02  0060  F007  FFE3   	movff	btemp,plusw1
 20231  018C08                     l11172:
 20232                           
 20233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20234                           ;stkvar	_w @ sp[(-4)+0]
 20235                           ;stkvar	_i @ sp[(-4)+2]
 20236  018C08  50E1               	movf	fsr1l,w,c
 20237  018C0A  0FFE               	addlw	-2
 20238  018C0C  6ED9               	movwf	fsr2l,c
 20239  018C0E  50E2               	movf	fsr1h,w,c
 20240  018C10  6EDA               	movwf	fsr2h,c
 20241  018C12  0EFF               	movlw	255
 20242  018C14  22DA               	addwfc	fsr2h,f,c
 20243  018C16  0EFC               	movlw	-4
 20244  018C18  50E3               	movf	plusw1,w,c
 20245  018C1A  5CDE               	subwf	postinc2,w,c
 20246  018C1C  50DE               	movf	postinc2,w,c
 20247  018C1E  0A80               	xorlw	128
 20248  018C20  6E01               	movwf	btemp^0,c
 20249  018C22  0EFD               	movlw	-3
 20250  018C24  50E3               	movf	plusw1,w,c
 20251  018C26  0A80               	xorlw	128
 20252  018C28  5801               	subwfb	btemp^0,w,c
 20253  018C2A  A0D8               	btfss	status,0,c
 20254  018C2C  D7CF               	goto	l11168
 20255                           
 20256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20257  018C2E  B025               	btfsc	_flags^0,0,c
 20258  018C30  D010               	goto	l11176
 20259                           
 20260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20261                           ;stkvar	_fp @ sp[(-4)+-2]
 20262  018C32  0EFA               	movlw	-6
 20263  018C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20264  018C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20265                           
 20266                           ;stkvar	_buf @ sp[(-6)+-4]
 20267  018C40  0EF6               	movlw	-10
 20268  018C42  006F FF8F FFE6     	movff	plusw1,postinc1
 20269  018C48  006F FF8F FFE6     	movff	plusw1,postinc1
 20270  018C4E  ECE0  F0CC         	call	_fputs	;wreg free
 20271  018C52                     l11176:
 20272                           
 20273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20274                           ;stkvar	_w @ sp[(-4)+0]
 20275                           ;stkvar	_buf @ sp[(-4)+-4]
 20276  018C52  0EF8               	movlw	-8
 20277  018C54  006F FF8F FFE6     	movff	plusw1,postinc1
 20278  018C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 20279  018C60  EC8F  F0CC         	call	_strlen	;wreg free
 20280  018C64  0EFC               	movlw	-4
 20281  018C66  50E3               	movf	plusw1,w,c
 20282  018C68  2601               	addwf	btemp^0,f,c
 20283  018C6A  0EFD               	movlw	-3
 20284  018C6C  50E3               	movf	plusw1,w,c
 20285  018C6E  2202               	addwfc	(btemp+1)^0,f,c
 20286                           
 20287                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20288  018C70  0EF6               	movlw	246
 20289  018C72  26E1               	addwf	fsr1l,f,c
 20290  018C74  0EFF               	movlw	255
 20291  018C76  22E2               	addwfc	fsr1h,f,c
 20292  018C78  0012               	return		;funcret
 20293  018C7A                     __end_of_pad:
 20294                           	opt callstack 0
 20295                           
 20296 ;; *************** function _strlen *****************
 20297 ;; Defined at:
 20298 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20299 ;; Parameters:    Size  Location     Type
 20300 ;;  s               2  [STACK] PTR const unsigned char 
 20301 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20302 ;;		 -> spin(120), STR_37(9), STR_36(12), D.lcd(288), 
 20303 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 20304 ;;		 -> V(188), 
 20305 ;; Auto vars:     Size  Location     Type
 20306 ;;  a               2  [STACK] PTR const unsigned char 
 20307 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20308 ;;		 -> spin(120), STR_37(9), STR_36(12), D.lcd(288), 
 20309 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 20310 ;;		 -> V(188), 
 20311 ;; Return value:  Size  Location     Type
 20312 ;;                  2  [STACK] unsigned int 
 20313 ;; Registers used:
 20314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20315 ;; Tracked objects:
 20316 ;;		On entry : 0/0
 20317 ;;		On exit  : 0/0
 20318 ;;		Unchanged: 0/0
 20319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20324 ;;Total ram usage:        0 bytes
 20325 ;; Hardware stack levels used:    1
 20326 ;; Hardware stack levels required when called:   15
 20327 ;; This function calls:
 20328 ;;		Nothing
 20329 ;; This function is called by:
 20330 ;;		_eaDogM_WriteString
 20331 ;;		_spinners
 20332 ;;		_calc_bsoc
 20333 ;;		_pad
 20334 ;;		_stoa
 20335 ;; This function uses a reentrant model
 20336 ;;
 20337                           
 20338                           	psect	text72
 20339  01991E                     __ptext72:
 20340                           	opt callstack 0
 20341  01991E                     _strlen:
 20342                           	opt callstack 0
 20343                           
 20344                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20345  01991E  52E6               	movf	postinc1,f,c
 20346  019920  52E6               	movf	postinc1,f,c
 20347                           
 20348                           ;stkvar	_s @ sp[(-2)+-2]
 20349                           
 20350                           ;incstack = 0
 20351 ;; hardware stack exceeded
 20352  019922  0EFC               	movlw	-4
 20353  019924  006F FF8C  F00B    	movff	plusw1,btemp+10
 20354  01992A  0EFD               	movlw	-3
 20355  01992C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20356                           
 20357                           ;stkvar	_a @ sp[(-2)+0]
 20358  019932  0EFF               	movlw	-1
 20359  019934  0060  F033  FFE3   	movff	btemp+11,plusw1
 20360  01993A  0EFE               	movlw	-2
 20361  01993C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20362  019942  D011               	goto	l7314
 20363  019944                     l7312:
 20364                           
 20365                           ;stkvar	_s @ sp[(-2)+-2]
 20366  019944  0EFC               	movlw	-4
 20367  019946  50E3               	movf	plusw1,w,c
 20368  019948  0F01               	addlw	1
 20369  01994A  6E01               	movwf	btemp^0,c
 20370  01994C  0EFC               	movlw	-4
 20371  01994E  0060  F007  FFE3   	movff	btemp,plusw1
 20372  019954  6A01               	clrf	btemp^0,c
 20373  019956  0EFD               	movlw	-3
 20374  019958  50E3               	movf	plusw1,w,c
 20375  01995A  2001               	addwfc	btemp^0,w,c
 20376  01995C  6E01               	movwf	btemp^0,c
 20377  01995E  0EFD               	movlw	-3
 20378  019960  0060  F007  FFE3   	movff	btemp,plusw1
 20379  019966                     l7314:
 20380                           
 20381                           ;stkvar	_s @ sp[(-2)+-2]
 20382  019966  0EFC               	movlw	-4
 20383  019968  006F FF8F FFF6     	movff	plusw1,tblptrl
 20384  01996E  0EFD               	movlw	-3
 20385  019970  006F FF8F FFF7     	movff	plusw1,tblptrh
 20386  019976  0E00               	movlw	low (__mediumconst shr (0+16))
 20387  019978  6EF8               	movwf	tblptru,c
 20388  01997A  0E1F               	movlw	(high __ramtop+-1)
 20389  01997C  64F7               	cpfsgt	tblptrh,c
 20390  01997E  D003               	bra	u5097
 20391  019980  0008               	tblrd		*
 20392  019982  50F5               	movf	tablat,w,c
 20393  019984  D007               	bra	u5090
 20394  019986                     u5097:
 20395  019986  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20396  01998C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20397  019992  50EF               	movf	indf0,w,c
 20398  019994                     u5090:
 20399  019994  0900               	iorlw	0
 20400  019996  A4D8               	btfss	status,2,c
 20401  019998  D7D5               	goto	l7312
 20402                           
 20403                           ;stkvar	_a @ sp[(-2)+0]
 20404                           ;stkvar	_s @ sp[(-2)+-2]
 20405  01999A  0EFC               	movlw	-4
 20406  01999C  006F FF8C  F001    	movff	plusw1,btemp
 20407  0199A2  0EFD               	movlw	-3
 20408  0199A4  006F FF8C  F002    	movff	plusw1,btemp+1
 20409  0199AA  0EFE               	movlw	-2
 20410  0199AC  50E3               	movf	plusw1,w,c
 20411  0199AE  5E01               	subwf	btemp^0,f,c
 20412  0199B0  0EFF               	movlw	-1
 20413  0199B2  50E3               	movf	plusw1,w,c
 20414  0199B4  5A02               	subwfb	(btemp+1)^0,f,c
 20415                           
 20416                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20417  0199B6  52E5               	movf	postdec1,f,c
 20418  0199B8  52E5               	movf	postdec1,f,c
 20419  0199BA  52E5               	movf	postdec1,f,c
 20420  0199BC  52E5               	movf	postdec1,f,c
 20421  0199BE  0012               	return		;funcret
 20422  0199C0                     __end_of_strlen:
 20423                           	opt callstack 0
 20424                           
 20425 ;; *************** function _fputs *****************
 20426 ;; Defined at:
 20427 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20428 ;; Parameters:    Size  Location     Type
 20429 ;;  s               2  [STACK] PTR const unsigned char 
 20430 ;;		 -> dbuf(80), 
 20431 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20432 ;;		 -> f(6), NULL(0), 
 20433 ;; Auto vars:     Size  Location     Type
 20434 ;;  i               2  [STACK] int 
 20435 ;;  c               1  [STACK] unsigned char 
 20436 ;; Return value:  Size  Location     Type
 20437 ;;                  2  [STACK] int 
 20438 ;; Registers used:
 20439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20440 ;; Tracked objects:
 20441 ;;		On entry : 0/3
 20442 ;;		On exit  : 0/0
 20443 ;;		Unchanged: 0/0
 20444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20449 ;;Total ram usage:        0 bytes
 20450 ;; Hardware stack levels used:    1
 20451 ;; Hardware stack levels required when called:   18
 20452 ;; This function calls:
 20453 ;;		_fputc
 20454 ;; This function is called by:
 20455 ;;		_pad
 20456 ;; This function uses a reentrant model
 20457 ;;
 20458                           
 20459                           	psect	text73
 20460  0199C0                     __ptext73:
 20461                           	opt callstack 0
 20462  0199C0                     _fputs:
 20463                           	opt callstack 0
 20464                           
 20465                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20466  0199C0  52E6               	movf	postinc1,f,c
 20467  0199C2  52E6               	movf	postinc1,f,c
 20468  0199C4  52E6               	movf	postinc1,f,c
 20469                           
 20470                           ;stkvar	_i @ sp[(-3)+0]
 20471                           
 20472                           ;incstack = 0
 20473 ;; hardware stack exceeded
 20474  0199C6  0EFD               	movlw	-3
 20475  0199C8  6AE3               	clrf	plusw1,c
 20476  0199CA  0EFE               	movlw	-2
 20477  0199CC  6AE3               	clrf	plusw1,c
 20478  0199CE  D01F               	goto	l11156
 20479  0199D0                     l11152:
 20480                           
 20481                           ;stkvar	_fp @ sp[(-3)+-4]
 20482  0199D0  0EF9               	movlw	-7
 20483  0199D2  006F FF8F FFE6     	movff	plusw1,postinc1
 20484  0199D8  006F FF8F FFE6     	movff	plusw1,postinc1
 20485                           
 20486                           ;stkvar	_c @ sp[(-5)+2]
 20487  0199DE  0EFD               	movlw	-3
 20488  0199E0  50E3               	movf	plusw1,w,c
 20489  0199E2  6EE6               	movwf	postinc1,c
 20490  0199E4  0E00               	movlw	0
 20491  0199E6  6EE6               	movwf	postinc1,c
 20492  0199E8  EC95  F0C4         	call	_fputc	;wreg free
 20493                           
 20494                           ;stkvar	_i @ sp[(-3)+0]
 20495  0199EC  0EFD               	movlw	-3
 20496  0199EE  50E3               	movf	plusw1,w,c
 20497  0199F0  0F01               	addlw	1
 20498  0199F2  6E01               	movwf	btemp^0,c
 20499  0199F4  0EFD               	movlw	-3
 20500  0199F6  0060  F007  FFE3   	movff	btemp,plusw1
 20501  0199FC  6A01               	clrf	btemp^0,c
 20502  0199FE  0EFE               	movlw	-2
 20503  019A00  50E3               	movf	plusw1,w,c
 20504  019A02  2001               	addwfc	btemp^0,w,c
 20505  019A04  6E01               	movwf	btemp^0,c
 20506  019A06  0EFE               	movlw	-2
 20507  019A08  0060  F007  FFE3   	movff	btemp,plusw1
 20508  019A0E                     l11156:
 20509                           
 20510                           ;stkvar	_i @ sp[(-3)+0]
 20511  019A0E  0EFD               	movlw	-3
 20512  019A10  006F FF8C  F00B    	movff	plusw1,btemp+10
 20513  019A16  0EFE               	movlw	-2
 20514  019A18  006F FF8C  F00C    	movff	plusw1,btemp+11
 20515                           
 20516                           ;stkvar	_s @ sp[(-3)+-2]
 20517  019A1E  0EFB               	movlw	-5
 20518  019A20  006F FF8C  F009    	movff	plusw1,btemp+8
 20519  019A26  0EFC               	movlw	-4
 20520  019A28  006F FF8C  F00A    	movff	plusw1,btemp+9
 20521  019A2E  500B               	movf	(btemp+10)^0,w,c
 20522  019A30  2409               	addwf	(btemp+8)^0,w,c
 20523  019A32  6ED9               	movwf	fsr2l,c
 20524  019A34  500C               	movf	(btemp+11)^0,w,c
 20525  019A36  200A               	addwfc	(btemp+9)^0,w,c
 20526  019A38  6EDA               	movwf	fsr2h,c
 20527  019A3A  50DF               	movf	indf2,w,c
 20528  019A3C  6E0C               	movwf	(btemp+11)^0,c
 20529                           
 20530                           ;stkvar	_c @ sp[(-3)+2]
 20531  019A3E  0EFF               	movlw	-1
 20532  019A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 20533  019A46  0EFF               	movlw	-1
 20534  019A48  50E3               	movf	plusw1,w,c
 20535  019A4A  A4D8               	btfss	status,2,c
 20536  019A4C  D7C1               	goto	l11152
 20537                           
 20538                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20539  019A4E  0EF9               	movlw	249
 20540  019A50  26E1               	addwf	fsr1l,f,c
 20541  019A52  0EFF               	movlw	255
 20542  019A54  22E2               	addwfc	fsr1h,f,c
 20543  019A56  0012               	return		;funcret
 20544  019A58                     __end_of_fputs:
 20545                           	opt callstack 0
 20546                           
 20547 ;; *************** function _fputc *****************
 20548 ;; Defined at:
 20549 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20550 ;; Parameters:    Size  Location     Type
 20551 ;;  c               2  [STACK] int 
 20552 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20553 ;;		 -> f(6), NULL(0), 
 20554 ;; Auto vars:     Size  Location     Type
 20555 ;;		None
 20556 ;; Return value:  Size  Location     Type
 20557 ;;                  2  [STACK] int 
 20558 ;; Registers used:
 20559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20560 ;; Tracked objects:
 20561 ;;		On entry : 0/0
 20562 ;;		On exit  : 0/0
 20563 ;;		Unchanged: 0/0
 20564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20569 ;;Total ram usage:        0 bytes
 20570 ;; Hardware stack levels used:    1
 20571 ;; Hardware stack levels required when called:   17
 20572 ;; This function calls:
 20573 ;;		_putch
 20574 ;; This function is called by:
 20575 ;;		_pad
 20576 ;;		_stoa
 20577 ;;		_vfpfcnvrt
 20578 ;;		_fputs
 20579 ;; This function uses a reentrant model
 20580 ;;
 20581                           
 20582                           	psect	text74
 20583  01892A                     __ptext74:
 20584                           	opt callstack 0
 20585  01892A                     _fputc:
 20586                           	opt callstack 0
 20587                           
 20588                           ;stkvar	_fp @ sp[(0)+-4]
 20589                           
 20590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20591                           ;incstack = 0
 20592 ;; hardware stack exceeded
 20593  01892A  0EFC               	movlw	-4
 20594  01892C  006F FF8C  F001    	movff	plusw1,btemp
 20595  018932  0EFD               	movlw	-3
 20596  018934  50E3               	movf	plusw1,w,c
 20597  018936  1001               	iorwf	btemp^0,w,c
 20598  018938  B4D8               	btfsc	status,2,c
 20599  01893A  D009               	goto	u10090
 20600                           
 20601                           ;stkvar	_fp @ sp[(0)+-4]
 20602  01893C  0EFC               	movlw	-4
 20603  01893E  006F FF8C  F001    	movff	plusw1,btemp
 20604  018944  0EFD               	movlw	-3
 20605  018946  50E3               	movf	plusw1,w,c
 20606  018948  1001               	iorwf	btemp^0,w,c
 20607  01894A  A4D8               	btfss	status,2,c
 20608  01894C  D006               	goto	l11140
 20609  01894E                     u10090:
 20610                           
 20611                           ;stkvar	_c @ sp[(0)+-2]
 20612  01894E  0EFE               	movlw	-2
 20613  018950  50E3               	movf	plusw1,w,c
 20614  018952  6EE6               	movwf	postinc1,c
 20615  018954  ECF0  F0D7         	call	_putch	;wreg free
 20616  018958  D075               	goto	l3124
 20617  01895A                     l11140:
 20618                           
 20619                           ;stkvar	_fp @ sp[(0)+-4]
 20620  01895A  0EFC               	movlw	-4
 20621  01895C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20622  018962  0EFD               	movlw	-3
 20623  018964  006F FF8C  F00C    	movff	plusw1,btemp+11
 20624  01896A  0E04               	movlw	4
 20625  01896C  240B               	addwf	(btemp+10)^0,w,c
 20626  01896E  6ED9               	movwf	fsr2l,c
 20627  018970  0E00               	movlw	0
 20628  018972  200C               	addwfc	(btemp+11)^0,w,c
 20629  018974  6EDA               	movwf	fsr2h,c
 20630  018976  50DE               	movf	postinc2,w,c
 20631  018978  10DE               	iorwf	postinc2,w,c
 20632  01897A  B4D8               	btfsc	status,2,c
 20633  01897C  D026               	goto	u10110
 20634                           
 20635                           ;stkvar	_fp @ sp[(0)+-4]
 20636  01897E  0EFC               	movlw	-4
 20637  018980  006F FF8C  F00B    	movff	plusw1,btemp+10
 20638  018986  0EFD               	movlw	-3
 20639  018988  006F FF8C  F00C    	movff	plusw1,btemp+11
 20640  01898E  0E04               	movlw	4
 20641  018990  240B               	addwf	(btemp+10)^0,w,c
 20642  018992  6ED9               	movwf	fsr2l,c
 20643  018994  0E00               	movlw	0
 20644  018996  200C               	addwfc	(btemp+11)^0,w,c
 20645  018998  6EDA               	movwf	fsr2h,c
 20646                           
 20647                           ;stkvar	_fp @ sp[(0)+-4]
 20648  01899A  0EFC               	movlw	-4
 20649  01899C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20650  0189A2  0EFD               	movlw	-3
 20651  0189A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20652  0189AA  0E02               	movlw	2
 20653  0189AC  240B               	addwf	(btemp+10)^0,w,c
 20654  0189AE  6EE9               	movwf	fsr0l,c
 20655  0189B0  0E00               	movlw	0
 20656  0189B2  200C               	addwfc	(btemp+11)^0,w,c
 20657  0189B4  6EEA               	movwf	fsr0h,c
 20658  0189B6  50DE               	movf	postinc2,w,c
 20659  0189B8  5CEE               	subwf	postinc0,w,c
 20660  0189BA  50EE               	movf	postinc0,w,c
 20661  0189BC  0A80               	xorlw	128
 20662  0189BE  6E01               	movwf	btemp^0,c
 20663  0189C0  50DE               	movf	postinc2,w,c
 20664  0189C2  0A80               	xorlw	128
 20665  0189C4  5801               	subwfb	btemp^0,w,c
 20666  0189C6  B0D8               	btfsc	status,0,c
 20667  0189C8  D03D               	goto	l3124
 20668  0189CA                     u10110:
 20669                           
 20670                           ;stkvar	_c @ sp[(0)+-2]
 20671                           ;stkvar	_fp @ sp[(0)+-4]
 20672  0189CA  0EFC               	movlw	-4
 20673  0189CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20674  0189D2  0EFD               	movlw	-3
 20675  0189D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20676  0189DA  0E02               	movlw	2
 20677  0189DC  240B               	addwf	(btemp+10)^0,w,c
 20678  0189DE  6ED9               	movwf	fsr2l,c
 20679  0189E0  0E00               	movlw	0
 20680  0189E2  200C               	addwfc	(btemp+11)^0,w,c
 20681  0189E4  6EDA               	movwf	fsr2h,c
 20682  0189E6  006F FF78  F00B    	movff	postinc2,btemp+10
 20683  0189EC  006F FF74  F00C    	movff	postdec2,btemp+11
 20684                           
 20685                           ;stkvar	_fp @ sp[(0)+-4]
 20686  0189F2  0EFC               	movlw	-4
 20687  0189F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 20688  0189FA  0EFD               	movlw	-3
 20689  0189FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 20690  018A02  006F FF78  F009    	movff	postinc2,btemp+8
 20691  018A08  006F FF74  F00A    	movff	postdec2,btemp+9
 20692  018A0E  500B               	movf	(btemp+10)^0,w,c
 20693  018A10  2409               	addwf	(btemp+8)^0,w,c
 20694  018A12  6ED9               	movwf	fsr2l,c
 20695  018A14  500C               	movf	(btemp+11)^0,w,c
 20696  018A16  200A               	addwfc	(btemp+9)^0,w,c
 20697  018A18  6EDA               	movwf	fsr2h,c
 20698  018A1A  0EFE               	movlw	-2
 20699  018A1C  006F FF8F FFDF     	movff	plusw1,indf2
 20700                           
 20701                           ;stkvar	_fp @ sp[(0)+-4]
 20702  018A22  0EFC               	movlw	-4
 20703  018A24  006F FF8C  F00B    	movff	plusw1,btemp+10
 20704  018A2A  0EFD               	movlw	-3
 20705  018A2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20706  018A32  0E02               	movlw	2
 20707  018A34  240B               	addwf	(btemp+10)^0,w,c
 20708  018A36  6ED9               	movwf	fsr2l,c
 20709  018A38  0E00               	movlw	0
 20710  018A3A  200C               	addwfc	(btemp+11)^0,w,c
 20711  018A3C  6EDA               	movwf	fsr2h,c
 20712  018A3E  2ADE               	incf	postinc2,f,c
 20713  018A40  0E00               	movlw	0
 20714  018A42  22DD               	addwfc	postdec2,f,c
 20715  018A44                     l3124:
 20716                           
 20717                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20718  018A44  52E5               	movf	postdec1,f,c
 20719  018A46  52E5               	movf	postdec1,f,c
 20720  018A48  52E5               	movf	postdec1,f,c
 20721  018A4A  52E5               	movf	postdec1,f,c
 20722  018A4C  0012               	return		;funcret
 20723  018A4E                     __end_of_fputc:
 20724                           	opt callstack 0
 20725                           
 20726 ;; *************** function _putch *****************
 20727 ;; Defined at:
 20728 ;;		line 170 in file "eadog.c"
 20729 ;; Parameters:    Size  Location     Type
 20730 ;;  c               1  [STACK] unsigned char 
 20731 ;; Auto vars:     Size  Location     Type
 20732 ;;		None
 20733 ;; Return value:  Size  Location     Type
 20734 ;;                  1  [STACK] void 
 20735 ;; Registers used:
 20736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20737 ;; Tracked objects:
 20738 ;;		On entry : 0/0
 20739 ;;		On exit  : 0/0
 20740 ;;		Unchanged: 0/0
 20741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20746 ;;Total ram usage:        0 bytes
 20747 ;; Hardware stack levels used:    1
 20748 ;; Hardware stack levels required when called:   16
 20749 ;; This function calls:
 20750 ;;		_ringBufS_put_dma
 20751 ;; This function is called by:
 20752 ;;		_fputc
 20753 ;; This function uses a reentrant model
 20754 ;;
 20755                           
 20756                           	psect	text75
 20757  01AFE0                     __ptext75:
 20758                           	opt callstack 0
 20759  01AFE0                     _putch:
 20760                           	opt callstack 0
 20761                           
 20762                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20763                           ;stkvar	_c @ sp[(0)+-1]
 20764                           
 20765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20766                           ;incstack = 0
 20767 ;; hardware stack exceeded
 20768  01AFE0  0EFF               	movlw	-1
 20769  01AFE2  50E3               	movf	plusw1,w,c
 20770  01AFE4  6EE6               	movwf	postinc1,c
 20771  01AFE6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 20772  01AFEC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 20773  01AFF2  ECE7  F0CB         	call	_ringBufS_put_dma	;wreg free
 20774                           
 20775                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20776  01AFF6  52E5               	movf	postdec1,f,c
 20777  01AFF8  0012               	return		;funcret
 20778  01AFFA                     __end_of_putch:
 20779                           	opt callstack 0
 20780                           
 20781 ;; *************** function _ringBufS_put_dma *****************
 20782 ;; Defined at:
 20783 ;;		line 67 in file "ringbufs.c"
 20784 ;; Parameters:    Size  Location     Type
 20785 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20786 ;;		 -> ring_buf1(67), 
 20787 ;;  c               1  [STACK] const unsigned char 
 20788 ;; Auto vars:     Size  Location     Type
 20789 ;;		None
 20790 ;; Return value:  Size  Location     Type
 20791 ;;                  1  [STACK] void 
 20792 ;; Registers used:
 20793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20794 ;; Tracked objects:
 20795 ;;		On entry : 0/0
 20796 ;;		On exit  : 0/0
 20797 ;;		Unchanged: 0/0
 20798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20803 ;;Total ram usage:        0 bytes
 20804 ;; Hardware stack levels used:    1
 20805 ;; Hardware stack levels required when called:   15
 20806 ;; This function calls:
 20807 ;;		Nothing
 20808 ;; This function is called by:
 20809 ;;		_putch
 20810 ;; This function uses a reentrant model
 20811 ;;
 20812                           
 20813                           	psect	text76
 20814  0197CE                     __ptext76:
 20815                           	opt callstack 0
 20816  0197CE                     _ringBufS_put_dma:
 20817                           	opt callstack 0
 20818                           
 20819                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20820                           ;stkvar	__this @ sp[(0)+-2]
 20821                           
 20822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20823                           ;incstack = 0
 20824 ;; hardware stack exceeded
 20825  0197CE  0EFE               	movlw	-2
 20826  0197D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20827  0197D6  0EFF               	movlw	-1
 20828  0197D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20829  0197DE  0E42               	movlw	66
 20830  0197E0  240B               	addwf	(btemp+10)^0,w,c
 20831  0197E2  6ED9               	movwf	fsr2l,c
 20832  0197E4  0E00               	movlw	0
 20833  0197E6  200C               	addwfc	(btemp+11)^0,w,c
 20834  0197E8  6EDA               	movwf	fsr2h,c
 20835  0197EA  0E40               	movlw	64
 20836  0197EC  60DF               	cpfslt	indf2,c
 20837  0197EE  D040               	goto	l1570
 20838                           
 20839                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20840                           ;stkvar	_c @ sp[(0)+-3]
 20841                           ;stkvar	__this @ sp[(0)+-2]
 20842  0197F0  0EFE               	movlw	-2
 20843  0197F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20844  0197F8  0EFF               	movlw	-1
 20845  0197FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20846  019800  0E40               	movlw	64
 20847  019802  240B               	addwf	(btemp+10)^0,w,c
 20848  019804  6ED9               	movwf	fsr2l,c
 20849  019806  0E00               	movlw	0
 20850  019808  200C               	addwfc	(btemp+11)^0,w,c
 20851  01980A  6EDA               	movwf	fsr2h,c
 20852  01980C  50DF               	movf	indf2,w,c
 20853  01980E  6E0C               	movwf	(btemp+11)^0,c
 20854                           
 20855                           ;stkvar	__this @ sp[(0)+-2]
 20856  019810  0EFE               	movlw	-2
 20857  019812  006F FF8C  F009    	movff	plusw1,btemp+8
 20858  019818  0EFF               	movlw	-1
 20859  01981A  006F FF8C  F00A    	movff	plusw1,btemp+9
 20860  019820  500C               	movf	(btemp+11)^0,w,c
 20861  019822  2409               	addwf	(btemp+8)^0,w,c
 20862  019824  6ED9               	movwf	fsr2l,c
 20863  019826  0E00               	movlw	0
 20864  019828  200A               	addwfc	(btemp+9)^0,w,c
 20865  01982A  6EDA               	movwf	fsr2h,c
 20866  01982C  0EFD               	movlw	-3
 20867  01982E  006F FF8F FFDF     	movff	plusw1,indf2
 20868                           
 20869                           ;ringbufs.c: 71:   ++_this->head;
 20870                           ;stkvar	__this @ sp[(0)+-2]
 20871  019834  0EFE               	movlw	-2
 20872  019836  006F FF8C  F00B    	movff	plusw1,btemp+10
 20873  01983C  0EFF               	movlw	-1
 20874  01983E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20875  019844  0E40               	movlw	64
 20876  019846  240B               	addwf	(btemp+10)^0,w,c
 20877  019848  6ED9               	movwf	fsr2l,c
 20878  01984A  0E00               	movlw	0
 20879  01984C  200C               	addwfc	(btemp+11)^0,w,c
 20880  01984E  6EDA               	movwf	fsr2h,c
 20881  019850  2ADF               	incf	indf2,f,c
 20882                           
 20883                           ;ringbufs.c: 72:   ++_this->count;
 20884                           ;stkvar	__this @ sp[(0)+-2]
 20885  019852  0EFE               	movlw	-2
 20886  019854  006F FF8C  F00B    	movff	plusw1,btemp+10
 20887  01985A  0EFF               	movlw	-1
 20888  01985C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20889  019862  0E42               	movlw	66
 20890  019864  240B               	addwf	(btemp+10)^0,w,c
 20891  019866  6ED9               	movwf	fsr2l,c
 20892  019868  0E00               	movlw	0
 20893  01986A  200C               	addwfc	(btemp+11)^0,w,c
 20894  01986C  6EDA               	movwf	fsr2h,c
 20895  01986E  2ADF               	incf	indf2,f,c
 20896  019870                     l1570:
 20897                           
 20898                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20899  019870  52E5               	movf	postdec1,f,c
 20900  019872  52E5               	movf	postdec1,f,c
 20901  019874  52E5               	movf	postdec1,f,c
 20902  019876  0012               	return		;funcret
 20903  019878                     __end_of_ringBufS_put_dma:
 20904                           	opt callstack 0
 20905                           
 20906 ;; *************** function _atoi *****************
 20907 ;; Defined at:
 20908 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20909 ;; Parameters:    Size  Location     Type
 20910 ;;  s               2  [STACK] PTR const unsigned char 
 20911 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
 20912 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
 20913 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
 20914 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
 20915 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
 20916 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(20), 
 20917 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
 20918 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
 20919 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
 20920 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
 20921 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(26), 
 20922 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
 20923 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 20924 ;; Auto vars:     Size  Location     Type
 20925 ;;  n               2  [STACK] int 
 20926 ;;  neg             2  [STACK] int 
 20927 ;; Return value:  Size  Location     Type
 20928 ;;                  2  [STACK] int 
 20929 ;; Registers used:
 20930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20931 ;; Tracked objects:
 20932 ;;		On entry : 0/0
 20933 ;;		On exit  : 0/0
 20934 ;;		Unchanged: 0/0
 20935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20940 ;;Total ram usage:        0 bytes
 20941 ;; Hardware stack levels used:    1
 20942 ;; Hardware stack levels required when called:   16
 20943 ;; This function calls:
 20944 ;;		_isdigit
 20945 ;;		_isspace
 20946 ;; This function is called by:
 20947 ;;		_vfpfcnvrt
 20948 ;; This function uses a reentrant model
 20949 ;;
 20950                           
 20951                           	psect	text77
 20952  016976                     __ptext77:
 20953                           	opt callstack 0
 20954  016976                     _atoi:
 20955                           	opt callstack 0
 20956                           
 20957                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20958  016976  0E09               	movlw	9
 20959  016978  26E1               	addwf	fsr1l,f,c
 20960  01697A  0E00               	movlw	0
 20961  01697C  22E2               	addwfc	fsr1h,f,c
 20962                           
 20963                           ;stkvar	_n @ sp[(-9)+5]
 20964                           
 20965                           ;incstack = 0
 20966 ;; hardware stack exceeded
 20967  01697E  0EFC               	movlw	-4
 20968  016980  6AE3               	clrf	plusw1,c
 20969  016982  0EFD               	movlw	-3
 20970  016984  6AE3               	clrf	plusw1,c
 20971                           
 20972                           ;stkvar	_neg @ sp[(-9)+7]
 20973  016986  0EFE               	movlw	-2
 20974  016988  6AE3               	clrf	plusw1,c
 20975  01698A  0EFF               	movlw	-1
 20976  01698C  6AE3               	clrf	plusw1,c
 20977  01698E  D011               	goto	l8922
 20978  016990                     l8920:
 20979                           
 20980                           ;stkvar	_s @ sp[(-9)+-2]
 20981  016990  0EF5               	movlw	-11
 20982  016992  50E3               	movf	plusw1,w,c
 20983  016994  0F01               	addlw	1
 20984  016996  6E01               	movwf	btemp^0,c
 20985  016998  0EF5               	movlw	-11
 20986  01699A  0060  F007  FFE3   	movff	btemp,plusw1
 20987  0169A0  6A01               	clrf	btemp^0,c
 20988  0169A2  0EF6               	movlw	-10
 20989  0169A4  50E3               	movf	plusw1,w,c
 20990  0169A6  2001               	addwfc	btemp^0,w,c
 20991  0169A8  6E01               	movwf	btemp^0,c
 20992  0169AA  0EF6               	movlw	-10
 20993  0169AC  0060  F007  FFE3   	movff	btemp,plusw1
 20994  0169B2                     l8922:
 20995                           
 20996                           ;stkvar	_atoi$5859 @ sp[(-9)+4]
 20997  0169B2  0EFB               	movlw	-5
 20998  0169B4  6AE3               	clrf	plusw1,c
 20999  0169B6  2AE3               	incf	plusw1,f,c
 21000                           
 21001                           ;stkvar	_s @ sp[(-9)+-2]
 21002  0169B8  50E1               	movf	fsr1l,w,c
 21003  0169BA  0FF5               	addlw	-11
 21004  0169BC  6ED9               	movwf	fsr2l,c
 21005  0169BE  50E2               	movf	fsr1h,w,c
 21006  0169C0  6EDA               	movwf	fsr2h,c
 21007  0169C2  0EFF               	movlw	255
 21008  0169C4  22DA               	addwfc	fsr2h,f,c
 21009  0169C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 21010  0169CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 21011  0169D2                     	if	0	;tblptru may be non-zero
 21012  0169D2                     	endif
 21013  0169D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21014  0169D2  0E00               	movlw	low (__mediumconst shr (0+16))
 21015  0169D4  6EF8               	movwf	tblptru,c
 21016  0169D6                     	endif
 21017  0169D6  0008               	tblrd		*
 21018  0169D8  50F5               	movf	tablat,w,c
 21019  0169DA  0A20               	xorlw	32
 21020  0169DC  B4D8               	btfsc	status,2,c
 21021  0169DE  D023               	goto	l8930
 21022  0169E0  0EF7               	movlw	247
 21023  0169E2  6E0B               	movwf	(btemp+10)^0,c
 21024  0169E4  0EFF               	movlw	255
 21025  0169E6  6E0C               	movwf	(btemp+11)^0,c
 21026                           
 21027                           ;stkvar	_s @ sp[(-9)+-2]
 21028  0169E8  50E1               	movf	fsr1l,w,c
 21029  0169EA  0FF5               	addlw	-11
 21030  0169EC  6ED9               	movwf	fsr2l,c
 21031  0169EE  50E2               	movf	fsr1h,w,c
 21032  0169F0  6EDA               	movwf	fsr2h,c
 21033  0169F2  0EFF               	movlw	255
 21034  0169F4  22DA               	addwfc	fsr2h,f,c
 21035  0169F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 21036  0169FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 21037  016A02                     	if	0	;tblptru may be non-zero
 21038  016A02                     	endif
 21039  016A02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21040  016A02  0E00               	movlw	low (__mediumconst shr (0+16))
 21041  016A04  6EF8               	movwf	tblptru,c
 21042  016A06                     	endif
 21043  016A06  0008               	tblrd		*
 21044  016A08  50F5               	movf	tablat,w,c
 21045  016A0A  6E09               	movwf	(btemp+8)^0,c
 21046  016A0C  6A0A               	clrf	(btemp+9)^0,c
 21047  016A0E  500B               	movf	(btemp+10)^0,w,c
 21048  016A10  2609               	addwf	(btemp+8)^0,f,c
 21049  016A12  500C               	movf	(btemp+11)^0,w,c
 21050  016A14  220A               	addwfc	(btemp+9)^0,f,c
 21051  016A16  500A               	movf	(btemp+9)^0,w,c
 21052  016A18  E104               	bnz	u8200
 21053  016A1A  0E05               	movlw	5
 21054  016A1C  5C09               	subwf	(btemp+8)^0,w,c
 21055  016A1E  A0D8               	btfss	status,0,c
 21056  016A20  D002               	goto	l8930
 21057  016A22                     u8200:
 21058                           
 21059                           ;stkvar	_atoi$5859 @ sp[(-9)+4]
 21060  016A22  0EFB               	movlw	-5
 21061  016A24  6AE3               	clrf	plusw1,c
 21062  016A26                     l8930:
 21063                           
 21064                           ;stkvar	_atoi$5859 @ sp[(-9)+4]
 21065  016A26  0EFB               	movlw	-5
 21066  016A28  50E3               	movf	plusw1,w,c
 21067  016A2A  6E0B               	movwf	(btemp+10)^0,c
 21068  016A2C  6A0C               	clrf	(btemp+11)^0,c
 21069                           
 21070                           ;stkvar	_atoi$5858 @ sp[(-9)+2]
 21071  016A2E  0EF9               	movlw	-7
 21072  016A30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21073  016A36  0EFA               	movlw	-6
 21074  016A38  0060  F033  FFE3   	movff	btemp+11,plusw1
 21075                           
 21076                           ;stkvar	_atoi$5858 @ sp[(-9)+2]
 21077  016A3E  0EF9               	movlw	-7
 21078  016A40  006F FF8C  F001    	movff	plusw1,btemp
 21079  016A46  0EFA               	movlw	-6
 21080  016A48  50E3               	movf	plusw1,w,c
 21081  016A4A  1001               	iorwf	btemp^0,w,c
 21082  016A4C  B4D8               	btfsc	status,2,c
 21083  016A4E  D01F               	goto	l8940
 21084  016A50  D79F               	goto	l8920
 21085  016A52                     l8936:
 21086  016A52  0E01               	movlw	1
 21087  016A54  6E0B               	movwf	(btemp+10)^0,c
 21088  016A56  0E00               	movlw	0
 21089  016A58  6E0C               	movwf	(btemp+11)^0,c
 21090                           
 21091                           ;stkvar	_neg @ sp[(-9)+7]
 21092  016A5A  0EFE               	movlw	-2
 21093  016A5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21094  016A62  0EFF               	movlw	-1
 21095  016A64  0060  F033  FFE3   	movff	btemp+11,plusw1
 21096  016A6A                     l8938:
 21097                           
 21098                           ;stkvar	_s @ sp[(-9)+-2]
 21099  016A6A  0EF5               	movlw	-11
 21100  016A6C  50E3               	movf	plusw1,w,c
 21101  016A6E  0F01               	addlw	1
 21102  016A70  6E01               	movwf	btemp^0,c
 21103  016A72  0EF5               	movlw	-11
 21104  016A74  0060  F007  FFE3   	movff	btemp,plusw1
 21105  016A7A  6A01               	clrf	btemp^0,c
 21106  016A7C  0EF6               	movlw	-10
 21107  016A7E  50E3               	movf	plusw1,w,c
 21108  016A80  2001               	addwfc	btemp^0,w,c
 21109  016A82  6E01               	movwf	btemp^0,c
 21110  016A84  0EF6               	movlw	-10
 21111  016A86  0060  F007  FFE3   	movff	btemp,plusw1
 21112  016A8C  D053               	goto	l8946
 21113  016A8E                     l8940:
 21114                           
 21115                           ;stkvar	_s @ sp[(-9)+-2]
 21116  016A8E  50E1               	movf	fsr1l,w,c
 21117  016A90  0FF5               	addlw	-11
 21118  016A92  6ED9               	movwf	fsr2l,c
 21119  016A94  50E2               	movf	fsr1h,w,c
 21120  016A96  6EDA               	movwf	fsr2h,c
 21121  016A98  0EFF               	movlw	255
 21122  016A9A  22DA               	addwfc	fsr2h,f,c
 21123  016A9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21124  016AA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 21125  016AA8                     	if	0	;tblptru may be non-zero
 21126  016AA8                     	endif
 21127  016AA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21128  016AA8  0E00               	movlw	low (__mediumconst shr (0+16))
 21129  016AAA  6EF8               	movwf	tblptru,c
 21130  016AAC                     	endif
 21131  016AAC  0008               	tblrd		*
 21132  016AAE  50F5               	movf	tablat,w,c
 21133  016AB0  6E0B               	movwf	(btemp+10)^0,c
 21134  016AB2  6A0C               	clrf	(btemp+11)^0,c
 21135                           
 21136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21137                           ; Switch size 1, requested type "simple"
 21138                           ; Number of cases is 1, Range of values is 0 to 0
 21139                           ; switch strategies available:
 21140                           ; Name         Instructions Cycles
 21141                           ; simple_byte            4     3 (average)
 21142                           ;	Chosen strategy is simple_byte
 21143  016AB4  500C               	movf	(btemp+11)^0,w,c
 21144  016AB6  0A00               	xorlw	0	; case 0
 21145  016AB8  A4D8               	btfss	status,2,c
 21146  016ABA  D03C               	goto	l8946
 21147                           
 21148                           ; Switch size 1, requested type "simple"
 21149                           ; Number of cases is 2, Range of values is 43 to 45
 21150                           ; switch strategies available:
 21151                           ; Name         Instructions Cycles
 21152                           ; simple_byte            7     4 (average)
 21153                           ;	Chosen strategy is simple_byte
 21154  016ABC  500B               	movf	(btemp+10)^0,w,c
 21155  016ABE  0A2B               	xorlw	43	; case 43
 21156  016AC0  B4D8               	btfsc	status,2,c
 21157  016AC2  D7D3               	goto	l8938
 21158  016AC4  0A06               	xorlw	6	; case 45
 21159  016AC6  B4D8               	btfsc	status,2,c
 21160  016AC8  D7C4               	goto	l8936
 21161  016ACA  D034               	goto	l8946
 21162  016ACC                     l8942:
 21163                           
 21164                           ;stkvar	_n @ sp[(-9)+5]
 21165  016ACC  0EFC               	movlw	-4
 21166  016ACE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21167  016AD4  0EFD               	movlw	-3
 21168  016AD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21169  016ADC  0E0A               	movlw	10
 21170  016ADE  020B               	mulwf	(btemp+10)^0,c
 21171  016AE0  006F FFCC  F009    	movff	prodl,btemp+8
 21172  016AE6  006F FFD0  F00A    	movff	prodh,btemp+9
 21173  016AEC  020C               	mulwf	(btemp+11)^0,c
 21174  016AEE  50F3               	movf	prodl,w,c
 21175  016AF0  260A               	addwf	(btemp+9)^0,f,c
 21176                           
 21177                           ;stkvar	_s @ sp[(-9)+-2]
 21178  016AF2  50E1               	movf	fsr1l,w,c
 21179  016AF4  0FF5               	addlw	-11
 21180  016AF6  6ED9               	movwf	fsr2l,c
 21181  016AF8  50E2               	movf	fsr1h,w,c
 21182  016AFA  6EDA               	movwf	fsr2h,c
 21183  016AFC  0EFF               	movlw	255
 21184  016AFE  22DA               	addwfc	fsr2h,f,c
 21185  016B00  006F FF7B FFF6     	movff	postinc2,tblptrl
 21186  016B06  006F FF77 FFF7     	movff	postdec2,tblptrh
 21187  016B0C                     	if	0	;tblptru may be non-zero
 21188  016B0C                     	endif
 21189  016B0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21190  016B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 21191  016B0E  6EF8               	movwf	tblptru,c
 21192  016B10                     	endif
 21193  016B10  0008               	tblrd		*
 21194  016B12  50F5               	movf	tablat,w,c
 21195  016B14  5E09               	subwf	(btemp+8)^0,f,c
 21196  016B16  0E00               	movlw	0
 21197  016B18  5A0A               	subwfb	(btemp+9)^0,f,c
 21198  016B1A  0E30               	movlw	48
 21199  016B1C  2609               	addwf	(btemp+8)^0,f,c
 21200  016B1E  0E00               	movlw	0
 21201  016B20  220A               	addwfc	(btemp+9)^0,f,c
 21202                           
 21203                           ;stkvar	_n @ sp[(-9)+5]
 21204  016B22  0EFC               	movlw	-4
 21205  016B24  0060  F027  FFE3   	movff	btemp+8,plusw1
 21206  016B2A  0EFD               	movlw	-3
 21207  016B2C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21208  016B32  D79B               	goto	l8938
 21209  016B34                     l8946:
 21210  016B34  0ED0               	movlw	208
 21211  016B36  6E0B               	movwf	(btemp+10)^0,c
 21212  016B38  0EFF               	movlw	255
 21213  016B3A  6E0C               	movwf	(btemp+11)^0,c
 21214                           
 21215                           ;stkvar	_s @ sp[(-9)+-2]
 21216  016B3C  50E1               	movf	fsr1l,w,c
 21217  016B3E  0FF5               	addlw	-11
 21218  016B40  6ED9               	movwf	fsr2l,c
 21219  016B42  50E2               	movf	fsr1h,w,c
 21220  016B44  6EDA               	movwf	fsr2h,c
 21221  016B46  0EFF               	movlw	255
 21222  016B48  22DA               	addwfc	fsr2h,f,c
 21223  016B4A  006F FF7B FFF6     	movff	postinc2,tblptrl
 21224  016B50  006F FF77 FFF7     	movff	postdec2,tblptrh
 21225  016B56                     	if	0	;tblptru may be non-zero
 21226  016B56                     	endif
 21227  016B56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21228  016B56  0E00               	movlw	low (__mediumconst shr (0+16))
 21229  016B58  6EF8               	movwf	tblptru,c
 21230  016B5A                     	endif
 21231  016B5A  0008               	tblrd		*
 21232  016B5C  50F5               	movf	tablat,w,c
 21233  016B5E  6E09               	movwf	(btemp+8)^0,c
 21234  016B60  6A0A               	clrf	(btemp+9)^0,c
 21235  016B62  500B               	movf	(btemp+10)^0,w,c
 21236  016B64  2609               	addwf	(btemp+8)^0,f,c
 21237  016B66  500C               	movf	(btemp+11)^0,w,c
 21238  016B68  220A               	addwfc	(btemp+9)^0,f,c
 21239  016B6A  500A               	movf	(btemp+9)^0,w,c
 21240  016B6C  E106               	bnz	u8220
 21241  016B6E  0E0A               	movlw	10
 21242  016B70  5C09               	subwf	(btemp+8)^0,w,c
 21243  016B72  B0D8               	btfsc	status,0,c
 21244  016B74  D002               	goto	u8220
 21245  016B76  0E01               	movlw	1
 21246  016B78  D001               	goto	u8230
 21247  016B7A                     u8220:
 21248  016B7A  0E00               	movlw	0
 21249  016B7C                     u8230:
 21250  016B7C  6E0B               	movwf	(btemp+10)^0,c
 21251  016B7E  6A0C               	clrf	(btemp+11)^0,c
 21252                           
 21253                           ;stkvar	_atoi$5860 @ sp[(-9)+0]
 21254  016B80  0EF7               	movlw	-9
 21255  016B82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21256  016B88  0EF8               	movlw	-8
 21257  016B8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21258                           
 21259                           ;stkvar	_atoi$5860 @ sp[(-9)+0]
 21260  016B90  0EF7               	movlw	-9
 21261  016B92  006F FF8C  F001    	movff	plusw1,btemp
 21262  016B98  0EF8               	movlw	-8
 21263  016B9A  50E3               	movf	plusw1,w,c
 21264  016B9C  1001               	iorwf	btemp^0,w,c
 21265  016B9E  A4D8               	btfss	status,2,c
 21266  016BA0  D795               	goto	l8942
 21267                           
 21268                           ;stkvar	_neg @ sp[(-9)+7]
 21269  016BA2  0EFE               	movlw	-2
 21270  016BA4  006F FF8C  F001    	movff	plusw1,btemp
 21271  016BAA  0EFF               	movlw	-1
 21272  016BAC  50E3               	movf	plusw1,w,c
 21273  016BAE  1001               	iorwf	btemp^0,w,c
 21274  016BB0  A4D8               	btfss	status,2,c
 21275  016BB2  D00E               	goto	l8956
 21276                           
 21277                           ;stkvar	_n @ sp[(-9)+5]
 21278  016BB4  0EFC               	movlw	-4
 21279  016BB6  006F FF8C  F001    	movff	plusw1,btemp
 21280  016BBC  1E01               	comf	btemp^0,f,c
 21281  016BBE  0EFD               	movlw	-3
 21282  016BC0  006F FF8C  F002    	movff	plusw1,btemp+1
 21283  016BC6  1E02               	comf	(btemp+1)^0,f,c
 21284  016BC8  2A01               	incf	btemp^0,f,c
 21285  016BCA  B4D8               	btfsc	status,2,c
 21286  016BCC  2A02               	incf	(btemp+1)^0,f,c
 21287  016BCE  D008               	goto	l3055
 21288  016BD0                     l8956:
 21289                           
 21290                           ;stkvar	_n @ sp[(-9)+5]
 21291  016BD0  0EFC               	movlw	-4
 21292  016BD2  006F FF8C  F001    	movff	plusw1,btemp
 21293  016BD8  0EFD               	movlw	-3
 21294  016BDA  006F FF8C  F002    	movff	plusw1,btemp+1
 21295  016BE0                     l3055:
 21296                           
 21297                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21298  016BE0  0EF5               	movlw	245
 21299  016BE2  26E1               	addwf	fsr1l,f,c
 21300  016BE4  0EFF               	movlw	255
 21301  016BE6  22E2               	addwfc	fsr1h,f,c
 21302  016BE8  0012               	return		;funcret
 21303  016BEA                     __end_of_atoi:
 21304                           	opt callstack 0
 21305                           
 21306 ;; *************** function _isspace *****************
 21307 ;; Defined at:
 21308 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21309 ;; Parameters:    Size  Location     Type
 21310 ;;  c               2  [STACK] int 
 21311 ;; Auto vars:     Size  Location     Type
 21312 ;;		None
 21313 ;; Return value:  Size  Location     Type
 21314 ;;                  2  [STACK] int 
 21315 ;; Registers used:
 21316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21317 ;; Tracked objects:
 21318 ;;		On entry : 0/0
 21319 ;;		On exit  : 0/0
 21320 ;;		Unchanged: 0/0
 21321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21326 ;;Total ram usage:        0 bytes
 21327 ;; Hardware stack levels used:    1
 21328 ;; Hardware stack levels required when called:   15
 21329 ;; This function calls:
 21330 ;;		Nothing
 21331 ;; This function is called by:
 21332 ;;		_atoi
 21333 ;; This function uses a reentrant model
 21334 ;;
 21335                           
 21336                           	psect	text78
 21337  01A338                     __ptext78:
 21338                           	opt callstack 0
 21339  01A338                     _isspace:
 21340                           	opt callstack 0
 21341                           
 21342                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21343  01A338  52E6               	movf	postinc1,f,c
 21344                           
 21345                           ;stkvar	_isspace$5909 @ sp[(-1)+0]
 21346                           
 21347                           ;incstack = 0
 21348 ;; hardware stack exceeded
 21349  01A33A  0EFF               	movlw	-1
 21350  01A33C  6AE3               	clrf	plusw1,c
 21351  01A33E  2AE3               	incf	plusw1,f,c
 21352                           
 21353                           ;stkvar	_c @ sp[(-1)+-2]
 21354  01A340  0EFD               	movlw	-3
 21355  01A342  006F FF8C  F001    	movff	plusw1,btemp
 21356  01A348  0E20               	movlw	32
 21357  01A34A  1801               	xorwf	btemp^0,w,c
 21358  01A34C  E104               	bnz	u7050
 21359  01A34E  0EFE               	movlw	-2
 21360  01A350  50E3               	movf	plusw1,w,c
 21361  01A352  B4D8               	btfsc	status,2,c
 21362  01A354  D012               	goto	l8314
 21363  01A356                     u7050:
 21364                           
 21365                           ;stkvar	_c @ sp[(-1)+-2]
 21366  01A356  0EFD               	movlw	-3
 21367  01A358  50E3               	movf	plusw1,w,c
 21368  01A35A  0FF7               	addlw	247
 21369  01A35C  6E0B               	movwf	(btemp+10)^0,c
 21370  01A35E  0EFE               	movlw	-2
 21371  01A360  006F FF8C  F00C    	movff	plusw1,btemp+11
 21372  01A366  0EFF               	movlw	255
 21373  01A368  220C               	addwfc	(btemp+11)^0,f,c
 21374  01A36A  500C               	movf	(btemp+11)^0,w,c
 21375  01A36C  E104               	bnz	u7060
 21376  01A36E  0E05               	movlw	5
 21377  01A370  5C0B               	subwf	(btemp+10)^0,w,c
 21378  01A372  A0D8               	btfss	status,0,c
 21379  01A374  D002               	goto	l8314
 21380  01A376                     u7060:
 21381                           
 21382                           ;stkvar	_isspace$5909 @ sp[(-1)+0]
 21383  01A376  0EFF               	movlw	-1
 21384  01A378  6AE3               	clrf	plusw1,c
 21385  01A37A                     l8314:
 21386                           
 21387                           ;stkvar	_isspace$5909 @ sp[(-1)+0]
 21388  01A37A  0EFF               	movlw	-1
 21389  01A37C  50E3               	movf	plusw1,w,c
 21390  01A37E  6E01               	movwf	btemp^0,c
 21391  01A380  6A02               	clrf	(btemp+1)^0,c
 21392                           
 21393                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21394  01A382  52E5               	movf	postdec1,f,c
 21395  01A384  52E5               	movf	postdec1,f,c
 21396  01A386  52E5               	movf	postdec1,f,c
 21397  01A388  0012               	return		;funcret
 21398  01A38A                     __end_of_isspace:
 21399                           	opt callstack 0
 21400                           
 21401 ;; *************** function _isdigit *****************
 21402 ;; Defined at:
 21403 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21404 ;; Parameters:    Size  Location     Type
 21405 ;;  c               2  [STACK] int 
 21406 ;; Auto vars:     Size  Location     Type
 21407 ;;		None
 21408 ;; Return value:  Size  Location     Type
 21409 ;;                  2  [STACK] int 
 21410 ;; Registers used:
 21411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21412 ;; Tracked objects:
 21413 ;;		On entry : 0/0
 21414 ;;		On exit  : 0/0
 21415 ;;		Unchanged: 0/0
 21416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21421 ;;Total ram usage:        0 bytes
 21422 ;; Hardware stack levels used:    1
 21423 ;; Hardware stack levels required when called:   15
 21424 ;; This function calls:
 21425 ;;		Nothing
 21426 ;; This function is called by:
 21427 ;;		_vfpfcnvrt
 21428 ;;		_atoi
 21429 ;; This function uses a reentrant model
 21430 ;;
 21431                           
 21432                           	psect	text79
 21433  01AA1E                     __ptext79:
 21434                           	opt callstack 0
 21435  01AA1E                     _isdigit:
 21436                           	opt callstack 0
 21437                           
 21438                           ;stkvar	_c @ sp[(0)+-2]
 21439                           
 21440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21441                           ;incstack = 0
 21442 ;; hardware stack exceeded
 21443  01AA1E  0EFE               	movlw	-2
 21444  01AA20  50E3               	movf	plusw1,w,c
 21445  01AA22  0FD0               	addlw	208
 21446  01AA24  6E0B               	movwf	(btemp+10)^0,c
 21447  01AA26  0EFF               	movlw	-1
 21448  01AA28  006F FF8C  F00C    	movff	plusw1,btemp+11
 21449  01AA2E  0EFF               	movlw	255
 21450  01AA30  220C               	addwfc	(btemp+11)^0,f,c
 21451  01AA32  500C               	movf	(btemp+11)^0,w,c
 21452  01AA34  E106               	bnz	u5900
 21453  01AA36  0E0A               	movlw	10
 21454  01AA38  5C0B               	subwf	(btemp+10)^0,w,c
 21455  01AA3A  B0D8               	btfsc	status,0,c
 21456  01AA3C  D002               	goto	u5900
 21457  01AA3E  0E01               	movlw	1
 21458  01AA40  D001               	goto	u5910
 21459  01AA42                     u5900:
 21460  01AA42  0E00               	movlw	0
 21461  01AA44                     u5910:
 21462  01AA44  6E01               	movwf	btemp^0,c
 21463  01AA46  6A02               	clrf	(btemp+1)^0,c
 21464                           
 21465                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21466  01AA48  52E5               	movf	postdec1,f,c
 21467  01AA4A  52E5               	movf	postdec1,f,c
 21468  01AA4C  0012               	return		;funcret
 21469  01AA4E                     __end_of_isdigit:
 21470                           	opt callstack 0
 21471                           
 21472 ;; *************** function _set_vterm *****************
 21473 ;; Defined at:
 21474 ;;		line 107 in file "mconfig.c"
 21475 ;; Parameters:    Size  Location     Type
 21476 ;;  vterm           1  [STACK] const unsigned char 
 21477 ;; Auto vars:     Size  Location     Type
 21478 ;;		None
 21479 ;; Return value:  Size  Location     Type
 21480 ;;                  1  [STACK] unsigned char 
 21481 ;; Registers used:
 21482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21483 ;; Tracked objects:
 21484 ;;		On entry : 0/1
 21485 ;;		On exit  : 0/0
 21486 ;;		Unchanged: 0/0
 21487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21492 ;;Total ram usage:        0 bytes
 21493 ;; Hardware stack levels used:    1
 21494 ;; Hardware stack levels required when called:   15
 21495 ;; This function calls:
 21496 ;;		Nothing
 21497 ;; This function is called by:
 21498 ;;		_main
 21499 ;;		_check_help
 21500 ;; This function uses a reentrant model
 21501 ;;
 21502                           
 21503                           	psect	text80
 21504  01AF30                     __ptext80:
 21505                           	opt callstack 0
 21506  01AF30                     _set_vterm:
 21507                           	opt callstack 15
 21508                           
 21509                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 21510                           ;stkvar	_vterm @ sp[(0)+-1]
 21511                           
 21512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21513                           ;incstack = 0
 21514  01AF30  0EFF               	movlw	-1
 21515  01AF32  006F FF8C  F00C    	movff	plusw1,btemp+11
 21516  01AF38  0E03               	movlw	3
 21517  01AF3A  160C               	andwf	(btemp+11)^0,f,c
 21518  01AF3C  EE22  F11F         	lfsr	2,_D+288
 21519  01AF40  50DF               	movf	223,w,c
 21520  01AF42  180C               	xorwf	(btemp+11)^0,w,c
 21521  01AF44  0BFE               	andlw	-2
 21522  01AF46  180C               	xorwf	(btemp+11)^0,w,c
 21523  01AF48  6EDF               	movwf	223,c
 21524                           
 21525                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21526  01AF4A  52E5               	movf	postdec1,f,c
 21527  01AF4C  0012               	return		;funcret
 21528  01AF4E                     __end_of_set_vterm:
 21529                           	opt callstack 0
 21530                           
 21531 ;; *************** function _set_temp_display_help *****************
 21532 ;; Defined at:
 21533 ;;		line 211 in file "mconfig.c"
 21534 ;; Parameters:    Size  Location     Type
 21535 ;;  new_response    1  [STACK] const enum E16509
 21536 ;; Auto vars:     Size  Location     Type
 21537 ;;		None
 21538 ;; Return value:  Size  Location     Type
 21539 ;;                  1  [STACK] enum E16509
 21540 ;; Registers used:
 21541 ;;		wreg, fsr1l, fsr1h
 21542 ;; Tracked objects:
 21543 ;;		On entry : 0/2
 21544 ;;		On exit  : 3F/2
 21545 ;;		Unchanged: 0/0
 21546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21551 ;;Total ram usage:        0 bytes
 21552 ;; Hardware stack levels used:    1
 21553 ;; Hardware stack levels required when called:   15
 21554 ;; This function calls:
 21555 ;;		Nothing
 21556 ;; This function is called by:
 21557 ;;		_check_help
 21558 ;; This function uses a reentrant model
 21559 ;;
 21560                           
 21561                           	psect	text81
 21562  01B0CE                     __ptext81:
 21563                           	opt callstack 0
 21564  01B0CE                     _set_temp_display_help:
 21565                           	opt callstack 14
 21566                           
 21567                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 21568                           
 21569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21570                           ;incstack = 0
 21571  01B0CE  0102               	movlb	2	; () banked
 21572  01B0D0  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21573                           
 21574                           ; BSR set to: 2
 21575                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 21576                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21577  01B0D2  0EFF               	movlw	-1
 21578  01B0D4  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 21579                           
 21580                           ; BSR set to: 2
 21581                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21582  01B0DA  52E5               	movf	postdec1,f,c
 21583  01B0DC  0012               	return		;funcret
 21584  01B0DE                     __end_of_set_temp_display_help:
 21585                           	opt callstack 0
 21586                           
 21587 ;; *************** function _set_display_info *****************
 21588 ;; Defined at:
 21589 ;;		line 200 in file "mconfig.c"
 21590 ;; Parameters:    Size  Location     Type
 21591 ;;  new_response    1  [STACK] const enum E16509
 21592 ;; Auto vars:     Size  Location     Type
 21593 ;;		None
 21594 ;; Return value:  Size  Location     Type
 21595 ;;                  1  [STACK] enum E16994
 21596 ;; Registers used:
 21597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21598 ;; Tracked objects:
 21599 ;;		On entry : 0/0
 21600 ;;		On exit  : 0/0
 21601 ;;		Unchanged: 0/0
 21602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21607 ;;Total ram usage:        0 bytes
 21608 ;; Hardware stack levels used:    1
 21609 ;; Hardware stack levels required when called:   16
 21610 ;; This function calls:
 21611 ;;		_TimerDone
 21612 ;; This function is called by:
 21613 ;;		_main
 21614 ;;		_check_help
 21615 ;; This function uses a reentrant model
 21616 ;;
 21617                           
 21618                           	psect	text82
 21619  01AF4E                     __ptext82:
 21620                           	opt callstack 0
 21621  01AF4E                     _set_display_info:
 21622                           	opt callstack 14
 21623                           
 21624                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 21625                           
 21626                           ; BSR set to: 2
 21627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21628                           ;incstack = 0
 21629  01AF4E  0E07               	movlw	7
 21630  01AF50  6EE6               	movwf	postinc1,c
 21631  01AF52  ECD1  F0D5         	call	_TimerDone	;wreg free
 21632  01AF56  5001               	movf	btemp^0,w,c
 21633  01AF58  B4D8               	btfsc	status,2,c
 21634  01AF5A  D006               	goto	l1705
 21635                           
 21636                           ;mconfig.c: 205:   old_info = V.response.info;
 21637  01AF5C  0102               	movlb	2	; () banked
 21638  01AF5E  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 21639                           
 21640                           ; BSR set to: 2
 21641                           ;mconfig.c: 206:   V.response.info = new_response_info;
 21642                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21643  01AF60  0EFF               	movlw	-1
 21644  01AF62  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 21645  01AF68                     l1705:
 21646                           
 21647                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 21648  01AF68  52E5               	movf	postdec1,f,c
 21649  01AF6A  0012               	return		;funcret
 21650  01AF6C                     __end_of_set_display_info:
 21651                           	opt callstack 0
 21652                           
 21653 ;; *************** function _mode_lamp_dim *****************
 21654 ;; Defined at:
 21655 ;;		line 13 in file "mconfig.c"
 21656 ;; Parameters:    Size  Location     Type
 21657 ;;  level           2  [STACK] const unsigned short 
 21658 ;; Auto vars:     Size  Location     Type
 21659 ;;		None
 21660 ;; Return value:  Size  Location     Type
 21661 ;;                  1  [STACK] void 
 21662 ;; Registers used:
 21663 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21664 ;; Tracked objects:
 21665 ;;		On entry : 0/2
 21666 ;;		On exit  : 0/0
 21667 ;;		Unchanged: 0/0
 21668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21673 ;;Total ram usage:        0 bytes
 21674 ;; Hardware stack levels used:    1
 21675 ;; Hardware stack levels required when called:   16
 21676 ;; This function calls:
 21677 ;;		_PWM8_LoadDutyValue
 21678 ;; This function is called by:
 21679 ;;		_main
 21680 ;;		_check_help
 21681 ;; This function uses a reentrant model
 21682 ;;
 21683                           
 21684                           	psect	text83
 21685  01B016                     __ptext83:
 21686                           	opt callstack 0
 21687  01B016                     _mode_lamp_dim:
 21688                           	opt callstack 14
 21689                           
 21690                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 21691                           ;stkvar	_level @ sp[(0)+-2]
 21692                           
 21693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21694                           ;incstack = 0
 21695  01B016  0EFE               	movlw	-2
 21696  01B018  006F FF8F FFE6     	movff	plusw1,postinc1
 21697  01B01E  006F FF8F FFE6     	movff	plusw1,postinc1
 21698  01B024  EC2F  F0D3         	call	_PWM8_LoadDutyValue	;wreg free
 21699                           
 21700                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 21701  01B028  52E5               	movf	postdec1,f,c
 21702  01B02A  52E5               	movf	postdec1,f,c
 21703  01B02C  0012               	return		;funcret
 21704  01B02E                     __end_of_mode_lamp_dim:
 21705                           	opt callstack 0
 21706                           
 21707 ;; *************** function _mode_lamp_bright *****************
 21708 ;; Defined at:
 21709 ;;		line 18 in file "mconfig.c"
 21710 ;; Parameters:    Size  Location     Type
 21711 ;;		None
 21712 ;; Auto vars:     Size  Location     Type
 21713 ;;		None
 21714 ;; Return value:  Size  Location     Type
 21715 ;;                  1  [STACK] void 
 21716 ;; Registers used:
 21717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21718 ;; Tracked objects:
 21719 ;;		On entry : 0/0
 21720 ;;		On exit  : 0/0
 21721 ;;		Unchanged: 0/0
 21722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21727 ;;Total ram usage:        0 bytes
 21728 ;; Hardware stack levels used:    1
 21729 ;; Hardware stack levels required when called:   16
 21730 ;; This function calls:
 21731 ;;		_PWM8_LoadDutyValue
 21732 ;; This function is called by:
 21733 ;;		_check_help
 21734 ;; This function uses a reentrant model
 21735 ;;
 21736                           
 21737                           	psect	text84
 21738  01B0EC                     __ptext84:
 21739                           	opt callstack 0
 21740  01B0EC                     _mode_lamp_bright:
 21741                           	opt callstack 13
 21742                           
 21743                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21744                           
 21745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21746                           ;incstack = 0
 21747  01B0EC  0E2C               	movlw	44
 21748  01B0EE  6EE6               	movwf	postinc1,c
 21749  01B0F0  0E01               	movlw	1
 21750  01B0F2  6EE6               	movwf	postinc1,c
 21751  01B0F4  EC2F  F0D3         	call	_PWM8_LoadDutyValue	;wreg free
 21752                           
 21753                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21754  01B0F8  0012               	return		;funcret
 21755  01B0FA                     __end_of_mode_lamp_bright:
 21756                           	opt callstack 0
 21757                           
 21758 ;; *************** function _PWM8_LoadDutyValue *****************
 21759 ;; Defined at:
 21760 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21761 ;; Parameters:    Size  Location     Type
 21762 ;;  dutyValue       2  [STACK] unsigned short 
 21763 ;; Auto vars:     Size  Location     Type
 21764 ;;		None
 21765 ;; Return value:  Size  Location     Type
 21766 ;;                  1  [STACK] void 
 21767 ;; Registers used:
 21768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21769 ;; Tracked objects:
 21770 ;;		On entry : 0/2
 21771 ;;		On exit  : 0/0
 21772 ;;		Unchanged: 0/0
 21773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21778 ;;Total ram usage:        0 bytes
 21779 ;; Hardware stack levels used:    1
 21780 ;; Hardware stack levels required when called:   15
 21781 ;; This function calls:
 21782 ;;		Nothing
 21783 ;; This function is called by:
 21784 ;;		_mode_lamp_dim
 21785 ;;		_mode_lamp_bright
 21786 ;; This function uses a reentrant model
 21787 ;;
 21788                           
 21789                           	psect	text85
 21790  01A65E                     __ptext85:
 21791                           	opt callstack 0
 21792  01A65E                     _PWM8_LoadDutyValue:
 21793                           	opt callstack 14
 21794                           
 21795                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21796                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21797                           
 21798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21799                           ;incstack = 0
 21800  01A65E  0EFE               	movlw	-2
 21801  01A660  006F FF8C  F00B    	movff	plusw1,btemp+10
 21802  01A666  0EFF               	movlw	-1
 21803  01A668  006F FF8C  F00C    	movff	plusw1,btemp+11
 21804  01A66E  90D8               	bcf	status,0,c
 21805  01A670  320C               	rrcf	(btemp+11)^0,f,c
 21806  01A672  320B               	rrcf	(btemp+10)^0,f,c
 21807  01A674  90D8               	bcf	status,0,c
 21808  01A676  320C               	rrcf	(btemp+11)^0,f,c
 21809  01A678  320B               	rrcf	(btemp+10)^0,f,c
 21810  01A67A  500B               	movf	(btemp+10)^0,w,c
 21811  01A67C  6E61               	movwf	97,c	;volatile
 21812                           
 21813                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21814                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21815  01A67E  0EFE               	movlw	-2
 21816  01A680  006F FF8C  F00C    	movff	plusw1,btemp+11
 21817  01A686  0E03               	movlw	3
 21818  01A688  160C               	andwf	(btemp+11)^0,f,c
 21819  01A68A  0E06               	movlw	6
 21820  01A68C  6E01               	movwf	btemp^0,c
 21821  01A68E                     u8705:
 21822  01A68E  90D8               	bcf	status,0,c
 21823  01A690  360C               	rlcf	(btemp+11)^0,f,c
 21824  01A692  2E01               	decfsz	btemp^0,f,c
 21825  01A694  D7FC               	goto	u8705
 21826  01A696  500C               	movf	(btemp+11)^0,w,c
 21827  01A698  6E60               	movwf	96,c	;volatile
 21828                           
 21829                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21830  01A69A  52E5               	movf	postdec1,f,c
 21831  01A69C  52E5               	movf	postdec1,f,c
 21832  01A69E  0012               	return		;funcret
 21833  01A6A0                     __end_of_PWM8_LoadDutyValue:
 21834                           	opt callstack 0
 21835                           
 21836 ;; *************** function _help_button *****************
 21837 ;; Defined at:
 21838 ;;		line 26 in file "mconfig.c"
 21839 ;; Parameters:    Size  Location     Type
 21840 ;;		None
 21841 ;; Auto vars:     Size  Location     Type
 21842 ;;		None
 21843 ;; Return value:  Size  Location     Type
 21844 ;;                  1  [STACK] _Bool 
 21845 ;; Registers used:
 21846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21847 ;; Tracked objects:
 21848 ;;		On entry : 0/2
 21849 ;;		On exit  : 0/0
 21850 ;;		Unchanged: 0/0
 21851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21856 ;;Total ram usage:        0 bytes
 21857 ;; Hardware stack levels used:    1
 21858 ;; Hardware stack levels required when called:   16
 21859 ;; This function calls:
 21860 ;;		_StartTimer
 21861 ;;		_TimerDone
 21862 ;; This function is called by:
 21863 ;;		_check_help
 21864 ;; This function uses a reentrant model
 21865 ;;
 21866                           
 21867                           	psect	text86
 21868  01A818                     __ptext86:
 21869                           	opt callstack 0
 21870  01A818                     _help_button:
 21871                           	opt callstack 13
 21872                           
 21873                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21874                           
 21875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21876                           ;incstack = 0
 21877  01A818  B0CB               	btfsc	203,0,c	;volatile
 21878  01A81A  D00C               	goto	l1648
 21879                           
 21880                           ;mconfig.c: 29:   V.help = 1;
 21881  01A81C  0102               	movlb	2	; () banked
 21882  01A81E  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21883                           
 21884                           ; BSR set to: 2
 21885                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21886  01A820  0E08               	movlw	8
 21887  01A822  6EE6               	movwf	postinc1,c
 21888  01A824  ECD1  F0D5         	call	_TimerDone	;wreg free
 21889  01A828  5001               	movf	btemp^0,w,c
 21890  01A82A  B4D8               	btfsc	status,2,c
 21891  01A82C  D003               	goto	l1648
 21892                           
 21893                           ;mconfig.c: 31:    return 1;
 21894  01A82E  0E01               	movlw	1
 21895  01A830  6E01               	movwf	btemp^0,c
 21896  01A832  0012               	return	
 21897  01A834                     l1648:
 21898                           
 21899                           ;mconfig.c: 34:  if (!V.help)
 21900  01A834  0102               	movlb	2	; () banked
 21901  01A836  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21902  01A838  D008               	goto	l9992
 21903                           
 21904                           ; BSR set to: 2
 21905                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21906  01A83A  0E2C               	movlw	44
 21907  01A83C  6EE6               	movwf	postinc1,c
 21908  01A83E  0E01               	movlw	1
 21909  01A840  6EE6               	movwf	postinc1,c
 21910  01A842  0E08               	movlw	8
 21911  01A844  6EE6               	movwf	postinc1,c
 21912  01A846  EC50  F0D3         	call	_StartTimer	;wreg free
 21913  01A84A                     l9992:
 21914                           
 21915                           ;mconfig.c: 37:  return 0;
 21916  01A84A  0E00               	movlw	0
 21917  01A84C  6E01               	movwf	btemp^0,c
 21918                           
 21919                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21920  01A84E  0012               	return		;funcret
 21921  01A850                     __end_of_help_button:
 21922                           	opt callstack 0
 21923                           
 21924 ;; *************** function _TimerDone *****************
 21925 ;; Defined at:
 21926 ;;		line 20 in file "timers.c"
 21927 ;; Parameters:    Size  Location     Type
 21928 ;;  timer           1  [STACK] const unsigned char 
 21929 ;; Auto vars:     Size  Location     Type
 21930 ;;		None
 21931 ;; Return value:  Size  Location     Type
 21932 ;;                  1  [STACK] _Bool 
 21933 ;; Registers used:
 21934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21935 ;; Tracked objects:
 21936 ;;		On entry : 0/0
 21937 ;;		On exit  : 0/0
 21938 ;;		Unchanged: 0/0
 21939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21944 ;;Total ram usage:        0 bytes
 21945 ;; Hardware stack levels used:    1
 21946 ;; Hardware stack levels required when called:   15
 21947 ;; This function calls:
 21948 ;;		Nothing
 21949 ;; This function is called by:
 21950 ;;		_main
 21951 ;;		_WaitMs
 21952 ;;		_help_button
 21953 ;;		_check_help
 21954 ;;		_set_display_info
 21955 ;;		_update_adc_result
 21956 ;; This function uses a reentrant model
 21957 ;;
 21958                           
 21959                           	psect	text87
 21960  01ABA2                     __ptext87:
 21961                           	opt callstack 0
 21962  01ABA2                     _TimerDone:
 21963                           	opt callstack 14
 21964                           
 21965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21966                           ;incstack = 0
 21967  01ABA2  0004               	clrwdt		;# 
 21968                           
 21969                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21970                           ;stkvar	_timer @ sp[(0)+-1]
 21971  01ABA4  0EFF               	movlw	-1
 21972  01ABA6  50E3               	movf	plusw1,w,c
 21973  01ABA8  0D02               	mullw	2
 21974  01ABAA  0EE5               	movlw	low _tickCount
 21975  01ABAC  24F3               	addwf	243,w,c
 21976  01ABAE  6ED9               	movwf	fsr2l,c
 21977  01ABB0  0E02               	movlw	high _tickCount
 21978  01ABB2  20F4               	addwfc	prodh,w,c
 21979  01ABB4  6EDA               	movwf	fsr2h,c
 21980  01ABB6  50DE               	movf	postinc2,w,c
 21981  01ABB8  10DE               	iorwf	postinc2,w,c
 21982  01ABBA  A4D8               	btfss	status,2,c
 21983  01ABBC  D002               	goto	l9226
 21984                           
 21985                           ;timers.c: 24:   return 1;
 21986  01ABBE  0E01               	movlw	1
 21987  01ABC0  D001               	goto	L22
 21988  01ABC2                     l9226:
 21989                           
 21990                           ;timers.c: 26:  return 0;
 21991  01ABC2  0E00               	movlw	0
 21992  01ABC4                     L22:
 21993  01ABC4  6E01               	movwf	btemp^0,c
 21994                           
 21995                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21996  01ABC6  52E5               	movf	postdec1,f,c
 21997  01ABC8  0012               	return		;funcret
 21998  01ABCA                     __end_of_TimerDone:
 21999                           	opt callstack 0
 22000                           
 22001 ;; *************** function _StartTimer *****************
 22002 ;; Defined at:
 22003 ;;		line 12 in file "timers.c"
 22004 ;; Parameters:    Size  Location     Type
 22005 ;;  timer           1  [STACK] const unsigned char 
 22006 ;;  count           2  [STACK] const unsigned short 
 22007 ;; Auto vars:     Size  Location     Type
 22008 ;;		None
 22009 ;; Return value:  Size  Location     Type
 22010 ;;                  1  [STACK] void 
 22011 ;; Registers used:
 22012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22013 ;; Tracked objects:
 22014 ;;		On entry : 0/0
 22015 ;;		On exit  : 0/0
 22016 ;;		Unchanged: 0/0
 22017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22022 ;;Total ram usage:        0 bytes
 22023 ;; Hardware stack levels used:    1
 22024 ;; Hardware stack levels required when called:   15
 22025 ;; This function calls:
 22026 ;;		Nothing
 22027 ;; This function is called by:
 22028 ;;		_main
 22029 ;;		_WaitMs
 22030 ;;		_help_button
 22031 ;;		_check_help
 22032 ;;		_update_adc_result
 22033 ;;		_calc_bsoc
 22034 ;; This function uses a reentrant model
 22035 ;;
 22036                           
 22037                           	psect	text88
 22038  01A6A0                     __ptext88:
 22039                           	opt callstack 0
 22040  01A6A0                     _StartTimer:
 22041                           	opt callstack 0
 22042                           
 22043                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22044                           ;stkvar	_count @ sp[(0)+-3]
 22045                           
 22046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22047                           ;incstack = 0
 22048 ;; hardware stack exceeded
 22049  01A6A0  0EFD               	movlw	-3
 22050  01A6A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 22051  01A6A8  0EFE               	movlw	-2
 22052  01A6AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22053  01A6B0  90D8               	bcf	status,0,c
 22054  01A6B2  340B               	rlcf	(btemp+10)^0,w,c
 22055  01A6B4  6E09               	movwf	(btemp+8)^0,c
 22056  01A6B6  340C               	rlcf	(btemp+11)^0,w,c
 22057  01A6B8  6E0A               	movwf	(btemp+9)^0,c
 22058                           
 22059                           ;stkvar	_timer @ sp[(0)+-1]
 22060  01A6BA  0EFF               	movlw	-1
 22061  01A6BC  50E3               	movf	plusw1,w,c
 22062  01A6BE  0D02               	mullw	2
 22063  01A6C0  0EE5               	movlw	low _tickCount
 22064  01A6C2  24F3               	addwf	243,w,c
 22065  01A6C4  6ED9               	movwf	fsr2l,c
 22066  01A6C6  0E02               	movlw	high _tickCount
 22067  01A6C8  20F4               	addwfc	prodh,w,c
 22068  01A6CA  6EDA               	movwf	fsr2h,c
 22069  01A6CC  0060  F027  FFDE   	movff	btemp+8,postinc2
 22070  01A6D2  0060  F02B  FFDD   	movff	btemp+9,postdec2
 22071                           
 22072                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22073  01A6D8  52E5               	movf	postdec1,f,c
 22074  01A6DA  52E5               	movf	postdec1,f,c
 22075  01A6DC  52E5               	movf	postdec1,f,c
 22076  01A6DE  0012               	return		;funcret
 22077  01A6E0                     __end_of_StartTimer:
 22078                           	opt callstack 0
 22079                           
 22080 ;; *************** function _display_info *****************
 22081 ;; Defined at:
 22082 ;;		line 190 in file "mconfig.c"
 22083 ;; Parameters:    Size  Location     Type
 22084 ;;		None
 22085 ;; Auto vars:     Size  Location     Type
 22086 ;;		None
 22087 ;; Return value:  Size  Location     Type
 22088 ;;                  1  [STACK] enum E16509
 22089 ;; Registers used:
 22090 ;;		btemp
 22091 ;; Tracked objects:
 22092 ;;		On entry : 0/2
 22093 ;;		On exit  : 0/0
 22094 ;;		Unchanged: 0/0
 22095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22100 ;;Total ram usage:        0 bytes
 22101 ;; Hardware stack levels used:    1
 22102 ;; Hardware stack levels required when called:   15
 22103 ;; This function calls:
 22104 ;;		Nothing
 22105 ;; This function is called by:
 22106 ;;		_check_help
 22107 ;; This function uses a reentrant model
 22108 ;;
 22109                           
 22110                           	psect	text89
 22111  01B162                     __ptext89:
 22112                           	opt callstack 0
 22113  01B162                     _display_info:
 22114                           	opt callstack 14
 22115                           
 22116                           ;mconfig.c: 192:  return V.response.info;
 22117                           
 22118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22119                           ;incstack = 0
 22120  01B162  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 22121                           
 22122                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22123  01B168  0012               	return		;funcret
 22124  01B16A                     __end_of_display_info:
 22125                           	opt callstack 0
 22126                           
 22127 ;; *************** function _display_help *****************
 22128 ;; Defined at:
 22129 ;;		line 195 in file "mconfig.c"
 22130 ;; Parameters:    Size  Location     Type
 22131 ;;		None
 22132 ;; Auto vars:     Size  Location     Type
 22133 ;;		None
 22134 ;; Return value:  Size  Location     Type
 22135 ;;                  1  [STACK] enum E16509
 22136 ;; Registers used:
 22137 ;;		btemp
 22138 ;; Tracked objects:
 22139 ;;		On entry : 3F/2
 22140 ;;		On exit  : 0/0
 22141 ;;		Unchanged: 0/0
 22142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22147 ;;Total ram usage:        0 bytes
 22148 ;; Hardware stack levels used:    1
 22149 ;; Hardware stack levels required when called:   15
 22150 ;; This function calls:
 22151 ;;		Nothing
 22152 ;; This function is called by:
 22153 ;;		_check_help
 22154 ;; This function uses a reentrant model
 22155 ;;
 22156                           
 22157                           	psect	text90
 22158  01B16A                     __ptext90:
 22159                           	opt callstack 0
 22160  01B16A                     _display_help:
 22161                           	opt callstack 14
 22162                           
 22163                           ;mconfig.c: 197:  return V.response.help_temp;
 22164                           
 22165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22166                           ;incstack = 0
 22167  01B16A  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 22168                           
 22169                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22170  01B170  0012               	return		;funcret
 22171  01B172                     __end_of_display_help:
 22172                           	opt callstack 0
 22173                           
 22174 ;; *************** function _check_enter_button *****************
 22175 ;; Defined at:
 22176 ;;		line 42 in file "hid.c"
 22177 ;; Parameters:    Size  Location     Type
 22178 ;;  h               1  [STACK] PTR struct H_data
 22179 ;;		 -> H(7), 
 22180 ;; Auto vars:     Size  Location     Type
 22181 ;;		None
 22182 ;; Return value:  Size  Location     Type
 22183 ;;                  1  [STACK] _Bool 
 22184 ;; Registers used:
 22185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22186 ;; Tracked objects:
 22187 ;;		On entry : 0/0
 22188 ;;		On exit  : 0/0
 22189 ;;		Unchanged: 0/0
 22190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22195 ;;Total ram usage:        0 bytes
 22196 ;; Hardware stack levels used:    1
 22197 ;; Hardware stack levels required when called:   15
 22198 ;; This function calls:
 22199 ;;		Nothing
 22200 ;; This function is called by:
 22201 ;;		_main
 22202 ;; This function uses a reentrant model
 22203 ;;
 22204                           
 22205                           	psect	text91
 22206  01A6E0                     __ptext91:
 22207                           	opt callstack 0
 22208  01A6E0                     _check_enter_button:
 22209                           	opt callstack 15
 22210                           
 22211                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22212                           ;stkvar	_h @ sp[(0)+-1]
 22213                           
 22214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22215                           ;incstack = 0
 22216  01A6E0  0EFF               	movlw	-1
 22217  01A6E2  50E3               	movf	plusw1,w,c
 22218  01A6E4  6ED9               	movwf	fsr2l,c
 22219  01A6E6  6ADA               	clrf	fsr2h,c
 22220  01A6E8  0E04               	movlw	4
 22221  01A6EA  26D9               	addwf	fsr2l,f,c
 22222  01A6EC  50DF               	movf	indf2,w,c
 22223  01A6EE  A4D8               	btfss	status,2,c
 22224  01A6F0  D013               	goto	l10596
 22225                           
 22226                           ;stkvar	_h @ sp[(0)+-1]
 22227  01A6F2  0EFF               	movlw	-1
 22228  01A6F4  50E3               	movf	plusw1,w,c
 22229  01A6F6  6ED9               	movwf	fsr2l,c
 22230  01A6F8  6ADA               	clrf	fsr2h,c
 22231  01A6FA  0E05               	movlw	5
 22232  01A6FC  26D9               	addwf	fsr2l,f,c
 22233  01A6FE  50DF               	movf	indf2,w,c
 22234  01A700  A4D8               	btfss	status,2,c
 22235  01A702  D00A               	goto	l10596
 22236                           
 22237                           ;hid.c: 45:   h->wait_enter = 1;
 22238                           ;stkvar	_h @ sp[(0)+-1]
 22239  01A704  0EFF               	movlw	-1
 22240  01A706  50E3               	movf	plusw1,w,c
 22241  01A708  6ED9               	movwf	fsr2l,c
 22242  01A70A  6ADA               	clrf	fsr2h,c
 22243  01A70C  0E04               	movlw	4
 22244  01A70E  26D9               	addwf	fsr2l,f,c
 22245  01A710  0E01               	movlw	1
 22246  01A712  6EDF               	movwf	indf2,c
 22247                           
 22248                           ;hid.c: 46:   return 1;
 22249  01A714  0E01               	movlw	1
 22250  01A716  D001               	goto	L23
 22251  01A718                     l10596:
 22252                           
 22253                           ;hid.c: 48:  return 0;
 22254  01A718  0E00               	movlw	0
 22255  01A71A                     L23:
 22256  01A71A  6E01               	movwf	btemp^0,c
 22257                           
 22258                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 22259  01A71C  52E5               	movf	postdec1,f,c
 22260  01A71E  0012               	return		;funcret
 22261  01A720                     __end_of_check_enter_button:
 22262                           	opt callstack 0
 22263                           
 22264 ;; *************** function _calc_ror_data *****************
 22265 ;; Defined at:
 22266 ;;		line 101 in file "mbmc.c"
 22267 ;; Parameters:    Size  Location     Type
 22268 ;;		None
 22269 ;; Auto vars:     Size  Location     Type
 22270 ;;		None
 22271 ;; Return value:  Size  Location     Type
 22272 ;;                  1  [STACK] void 
 22273 ;; Registers used:
 22274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22275 ;; Tracked objects:
 22276 ;;		On entry : 0/39
 22277 ;;		On exit  : 0/0
 22278 ;;		Unchanged: 0/0
 22279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22284 ;;Total ram usage:        0 bytes
 22285 ;; Hardware stack levels used:    1
 22286 ;; Hardware stack levels required when called:   18
 22287 ;; This function calls:
 22288 ;;		___flge
 22289 ;;		___flsub
 22290 ;;		_conv_raw_result
 22291 ;;		_fabsf
 22292 ;; This function is called by:
 22293 ;;		_main
 22294 ;; This function uses a reentrant model
 22295 ;;
 22296                           
 22297                           	psect	text92
 22298  017D18                     __ptext92:
 22299                           	opt callstack 0
 22300  017D18                     _calc_ror_data:
 22301                           	opt callstack 12
 22302                           
 22303                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 22304                           
 22305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22306                           ;incstack = 0
 22307  017D18  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 22308  017D1E  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 22309  017D24  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 22310  017D2A  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 22311  017D30  0E00               	movlw	0
 22312  017D32  6EE6               	movwf	postinc1,c
 22313  017D34  0E00               	movlw	0
 22314  017D36  6EE6               	movwf	postinc1,c
 22315  017D38  EC0C  F0A5         	call	_conv_raw_result	;wreg free
 22316  017D3C  0060  F007  FFE6   	movff	btemp,postinc1
 22317  017D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22318  017D48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22319  017D4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 22320  017D54  EC81  F0D2         	call	___flsub	;wreg free
 22321  017D58  0060  F007  FFE6   	movff	btemp,postinc1
 22322  017D5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22323  017D64  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22324  017D6A  0060  F013  FFE6   	movff	btemp+3,postinc1
 22325  017D70  EC3A  F0CB         	call	_fabsf	;wreg free
 22326  017D74  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 22327  017D7A  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 22328  017D80  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 22329  017D86  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 22330                           
 22331                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 22332  017D8C  0E00               	movlw	0
 22333  017D8E  6EE6               	movwf	postinc1,c
 22334  017D90  0E00               	movlw	0
 22335  017D92  6EE6               	movwf	postinc1,c
 22336  017D94  EC0C  F0A5         	call	_conv_raw_result	;wreg free
 22337  017D98  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 22338  017D9E  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 22339  017DA4  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 22340  017DAA  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 22341                           
 22342                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 22343  017DB0  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 22344  017DB6  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 22345  017DBC  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 22346  017DC2  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 22347  017DC8  0E00               	movlw	0
 22348  017DCA  6EE6               	movwf	postinc1,c
 22349  017DCC  0E04               	movlw	4
 22350  017DCE  6EE6               	movwf	postinc1,c
 22351  017DD0  EC0C  F0A5         	call	_conv_raw_result	;wreg free
 22352  017DD4  0060  F007  FFE6   	movff	btemp,postinc1
 22353  017DDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22354  017DE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22355  017DE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 22356  017DEC  EC81  F0D2         	call	___flsub	;wreg free
 22357  017DF0  0060  F007  FFE6   	movff	btemp,postinc1
 22358  017DF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22359  017DFC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22360  017E02  0060  F013  FFE6   	movff	btemp+3,postinc1
 22361  017E08  EC3A  F0CB         	call	_fabsf	;wreg free
 22362  017E0C  0060  F004  F168   	movff	btemp,_C+104	;volatile
 22363  017E12  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 22364  017E18  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 22365  017E1E  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 22366                           
 22367                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 22368  017E24  0EE7               	movlw	231
 22369  017E26  6EE6               	movwf	postinc1,c
 22370  017E28  0E1D               	movlw	29
 22371  017E2A  6EE6               	movwf	postinc1,c
 22372  017E2C  0EA7               	movlw	167
 22373  017E2E  6EE6               	movwf	postinc1,c
 22374  017E30  0E3B               	movlw	59
 22375  017E32  6EE6               	movwf	postinc1,c
 22376  017E34  0060  F5A3  FFE6   	movff	_C+104,postinc1
 22377  017E3A  0060  F5A7  FFE6   	movff	_C+105,postinc1
 22378  017E40  0060  F5AB  FFE6   	movff	_C+106,postinc1
 22379  017E46  0060  F5AF  FFE6   	movff	_C+107,postinc1
 22380  017E4C  ECB7  F0C0         	call	___flge	;wreg free
 22381  017E50  B001               	btfsc	btemp& (0+255),0,c
 22382  017E52  D009               	goto	l10388
 22383                           
 22384                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 22385  017E54  0EB0               	movlw	176
 22386  017E56  0101               	movlb	1	; () banked
 22387  017E58  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 22388  017E5A  0E03               	movlw	3
 22389  017E5C  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 22390  017E5E  0E67               	movlw	103
 22391  017E60  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 22392  017E62  0E3C               	movlw	60
 22393  017E64  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 22394  017E66                     l10388:
 22395                           
 22396                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 22397  017E66  0E00               	movlw	0
 22398  017E68  6EE6               	movwf	postinc1,c
 22399  017E6A  0E04               	movlw	4
 22400  017E6C  6EE6               	movwf	postinc1,c
 22401  017E6E  EC0C  F0A5         	call	_conv_raw_result	;wreg free
 22402  017E72  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 22403  017E78  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 22404  017E7E  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 22405  017E84  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 22406                           
 22407                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 22408  017E8A  0012               	return		;funcret
 22409  017E8C                     __end_of_calc_ror_data:
 22410                           	opt callstack 0
 22411                           
 22412 ;; *************** function _fabsf *****************
 22413 ;; Defined at:
 22414 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 22415 ;; Parameters:    Size  Location     Type
 22416 ;;  x               4  [STACK] float 
 22417 ;; Auto vars:     Size  Location     Type
 22418 ;;  u               4  [STACK] struct .
 22419 ;; Return value:  Size  Location     Type
 22420 ;;                  4  [STACK] float 
 22421 ;; Registers used:
 22422 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 22423 ;; Tracked objects:
 22424 ;;		On entry : 0/0
 22425 ;;		On exit  : 0/0
 22426 ;;		Unchanged: 0/0
 22427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;Total ram usage:        0 bytes
 22433 ;; Hardware stack levels used:    1
 22434 ;; Hardware stack levels required when called:   15
 22435 ;; This function calls:
 22436 ;;		Nothing
 22437 ;; This function is called by:
 22438 ;;		_calc_ror_data
 22439 ;;		_esr_check
 22440 ;; This function uses a reentrant model
 22441 ;;
 22442                           
 22443                           	psect	text93
 22444  019674                     __ptext93:
 22445                           	opt callstack 0
 22446  019674                     _fabsf:
 22447                           	opt callstack 0
 22448                           
 22449                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22450  019674  52E6               	movf	postinc1,f,c
 22451  019676  52E6               	movf	postinc1,f,c
 22452  019678  52E6               	movf	postinc1,f,c
 22453  01967A  52E6               	movf	postinc1,f,c
 22454                           
 22455                           ;incstack = 0
 22456  01967C  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 22457  019682  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 22458  019688  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 22459  01968E  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 22460                           
 22461                           ;stkvar	_u @ sp[(-4)+0]
 22462  019694  0EFC               	movlw	-4
 22463  019696  0060  F027  FFE3   	movff	btemp+8,plusw1
 22464  01969C  0EFD               	movlw	-3
 22465  01969E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22466  0196A4  0EFE               	movlw	-2
 22467  0196A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22468  0196AC  0EFF               	movlw	-1
 22469  0196AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 22470                           
 22471                           ;stkvar	_x @ sp[(-4)+-4]
 22472  0196B4  0EF8               	movlw	-8
 22473  0196B6  006F FF8C  F009    	movff	plusw1,btemp+8
 22474  0196BC  0EF9               	movlw	-7
 22475  0196BE  006F FF8C  F00A    	movff	plusw1,btemp+9
 22476  0196C4  0EFA               	movlw	-6
 22477  0196C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22478  0196CC  0EFB               	movlw	-5
 22479  0196CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22480                           
 22481                           ;stkvar	_u @ sp[(-4)+0]
 22482  0196D4  0EFC               	movlw	-4
 22483  0196D6  0060  F027  FFE3   	movff	btemp+8,plusw1
 22484  0196DC  0EFD               	movlw	-3
 22485  0196DE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22486  0196E4  0EFE               	movlw	-2
 22487  0196E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22488  0196EC  0EFF               	movlw	-1
 22489  0196EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 22490                           
 22491                           ;stkvar	_u @ sp[(-4)+0]
 22492  0196F4  0EFF               	movlw	-1
 22493  0196F6  9EE3               	bcf	plusw1,7,c
 22494                           
 22495                           ;stkvar	_u @ sp[(-4)+0]
 22496  0196F8  0EFC               	movlw	-4
 22497  0196FA  006F FF8C  F001    	movff	plusw1,btemp
 22498  019700  0EFD               	movlw	-3
 22499  019702  006F FF8C  F002    	movff	plusw1,btemp+1
 22500  019708  0EFE               	movlw	-2
 22501  01970A  006F FF8C  F003    	movff	plusw1,btemp+2
 22502  019710  0EFF               	movlw	-1
 22503  019712  006F FF8C  F004    	movff	plusw1,btemp+3
 22504                           
 22505                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22506  019718  0EF8               	movlw	248
 22507  01971A  26E1               	addwf	fsr1l,f,c
 22508  01971C  0EFF               	movlw	255
 22509  01971E  22E2               	addwfc	fsr1h,f,c
 22510  019720  0012               	return		;funcret
 22511  019722                     __end_of_fabsf:
 22512                           	opt callstack 0
 22513                           
 22514 ;; *************** function _conv_raw_result *****************
 22515 ;; Defined at:
 22516 ;;		line 95 in file "daq.c"
 22517 ;; Parameters:    Size  Location     Type
 22518 ;;  chan            1  [STACK] const enum E16581
 22519 ;;  to_what         1  [STACK] const enum E16643
 22520 ;; Auto vars:     Size  Location     Type
 22521 ;;		None
 22522 ;; Return value:  Size  Location     Type
 22523 ;;                  4  [STACK] float 
 22524 ;; Registers used:
 22525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22526 ;; Tracked objects:
 22527 ;;		On entry : 0/39
 22528 ;;		On exit  : 0/0
 22529 ;;		Unchanged: 0/0
 22530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22535 ;;Total ram usage:        0 bytes
 22536 ;; Hardware stack levels used:    1
 22537 ;; Hardware stack levels required when called:   17
 22538 ;; This function calls:
 22539 ;;		___fldiv
 22540 ;;		___flmul
 22541 ;;		___flsub
 22542 ;;		___xxtofl
 22543 ;;		_get_raw_result
 22544 ;;		_nanf
 22545 ;; This function is called by:
 22546 ;;		_main
 22547 ;;		_convert_adc_data
 22548 ;;		_calc_ror_data
 22549 ;;		_init_bsoc
 22550 ;;		_esr_check
 22551 ;; This function uses a reentrant model
 22552 ;;
 22553                           
 22554                           	psect	text94
 22555  014A18                     __ptext94:
 22556                           	opt callstack 0
 22557  014A18                     _conv_raw_result:
 22558                           	opt callstack 12
 22559                           
 22560                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 22561                           
 22562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22563                           ;incstack = 0
 22564  014A18  D242               	goto	l9922
 22565  014A1A                     l9868:
 22566                           
 22567                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 22568                           ;stkvar	_chan @ sp[(0)+-1]
 22569  014A1A  0EFF               	movlw	-1
 22570  014A1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22571  014A22  0E77               	movlw	119
 22572  014A24  6E09               	movwf	(btemp+8)^0,c
 22573  014A26  0E3C               	movlw	60
 22574  014A28  6E0A               	movwf	(btemp+9)^0,c
 22575  014A2A  2A0C               	incf	(btemp+11)^0,f,c
 22576  014A2C  D003               	goto	u8964
 22577  014A2E                     u8965:
 22578  014A2E  340A               	rlcf	(btemp+9)^0,w,c
 22579  014A30  320A               	rrcf	(btemp+9)^0,f,c
 22580  014A32  3209               	rrcf	(btemp+8)^0,f,c
 22581  014A34                     u8964:
 22582  014A34  2E0C               	decfsz	(btemp+11)^0,f,c
 22583  014A36  D7FB               	goto	u8965
 22584  014A38  B009               	btfsc	(btemp+8)^0,0,c
 22585  014A3A  D007               	goto	l9874
 22586                           
 22587                           ;daq.c: 101:    return nanf("");
 22588  014A3C  0E7D               	movlw	low (STR_55+84)
 22589  014A3E  6EE6               	movwf	postinc1,c
 22590  014A40  0EFD               	movlw	high (STR_55+84)
 22591  014A42  6EE6               	movwf	postinc1,c
 22592  014A44  EC8B  F0D0         	call	_nanf	;wreg free
 22593  014A48  D23A               	goto	l1767
 22594  014A4A                     l9874:
 22595                           
 22596                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 22597                           ;stkvar	_chan @ sp[(0)+-1]
 22598  014A4A  0EFF               	movlw	-1
 22599  014A4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22600  014A52  0E03               	movlw	3
 22601  014A54  6E09               	movwf	(btemp+8)^0,c
 22602  014A56  0E00               	movlw	0
 22603  014A58  6E0A               	movwf	(btemp+9)^0,c
 22604  014A5A  2A0C               	incf	(btemp+11)^0,f,c
 22605  014A5C  D003               	goto	u8984
 22606  014A5E                     u8985:
 22607  014A5E  340A               	rlcf	(btemp+9)^0,w,c
 22608  014A60  320A               	rrcf	(btemp+9)^0,f,c
 22609  014A62  3209               	rrcf	(btemp+8)^0,f,c
 22610  014A64                     u8984:
 22611  014A64  2E0C               	decfsz	(btemp+11)^0,f,c
 22612  014A66  D7FB               	goto	u8985
 22613  014A68  A009               	btfss	(btemp+8)^0,0,c
 22614  014A6A  D0EB               	goto	l9888
 22615                           
 22616                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 22617                           ;stkvar	_chan @ sp[(0)+-1]
 22618  014A6C  0EFF               	movlw	-1
 22619  014A6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22620  014A74  0E01               	movlw	1
 22621  014A76  6E09               	movwf	(btemp+8)^0,c
 22622  014A78  0E00               	movlw	0
 22623  014A7A  6E0A               	movwf	(btemp+9)^0,c
 22624  014A7C  2A0C               	incf	(btemp+11)^0,f,c
 22625  014A7E  D003               	goto	u9004
 22626  014A80                     u9005:
 22627  014A80  340A               	rlcf	(btemp+9)^0,w,c
 22628  014A82  320A               	rrcf	(btemp+9)^0,f,c
 22629  014A84  3209               	rrcf	(btemp+8)^0,f,c
 22630  014A86                     u9004:
 22631  014A86  2E0C               	decfsz	(btemp+11)^0,f,c
 22632  014A88  D7FB               	goto	u9005
 22633  014A8A  A009               	btfss	(btemp+8)^0,0,c
 22634  014A8C  D06D               	goto	l9884
 22635                           
 22636                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 22637  014A8E  0E7B               	movlw	123
 22638  014A90  6EE6               	movwf	postinc1,c
 22639  014A92  0E14               	movlw	20
 22640  014A94  6EE6               	movwf	postinc1,c
 22641  014A96  0EAE               	movlw	174
 22642  014A98  6EE6               	movwf	postinc1,c
 22643  014A9A  0E3D               	movlw	61
 22644  014A9C  6EE6               	movwf	postinc1,c
 22645  014A9E  0060  F390  F009   	movff	_R+32,btemp+8	;volatile
 22646  014AA4  0060  F394  F00A   	movff	_R+33,btemp+9	;volatile
 22647  014AAA  0E00               	movlw	0
 22648  014AAC  BE0A               	btfsc	(btemp+9)^0,7,c
 22649  014AAE  0EFF               	movlw	255
 22650  014AB0  6E0B               	movwf	(btemp+10)^0,c
 22651  014AB2  6E0C               	movwf	(btemp+11)^0,c
 22652  014AB4  0060  F027  FFE6   	movff	btemp+8,postinc1
 22653  014ABA  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22654  014AC0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22655  014AC6  0060  F033  FFE6   	movff	btemp+11,postinc1
 22656  014ACC  0E01               	movlw	1
 22657  014ACE  6EE6               	movwf	postinc1,c
 22658  014AD0  EC2E  F0B9         	call	___xxtofl	;wreg free
 22659  014AD4  0060  F007  FFE6   	movff	btemp,postinc1
 22660  014ADA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22661  014AE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22662  014AE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 22663                           
 22664                           ;stkvar	_chan @ sp[(-8)+-1]
 22665  014AEC  0EF7               	movlw	-9
 22666  014AEE  50E3               	movf	plusw1,w,c
 22667  014AF0  6EE6               	movwf	postinc1,c
 22668  014AF2  ECB6  F0D7         	call	_get_raw_result	;wreg free
 22669  014AF6  0060  F004  F00B   	movff	btemp,btemp+10
 22670  014AFC  0060  F008  F00C   	movff	btemp+1,btemp+11
 22671  014B02  500B               	movf	(btemp+10)^0,w,c
 22672  014B04  6E05               	movwf	(btemp+4)^0,c
 22673  014B06  500C               	movf	(btemp+11)^0,w,c
 22674  014B08  6E06               	movwf	(btemp+5)^0,c
 22675  014B0A  6A07               	clrf	(btemp+6)^0,c
 22676  014B0C  6A08               	clrf	(btemp+7)^0,c
 22677  014B0E  0060  F017  FFE6   	movff	btemp+4,postinc1
 22678  014B14  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22679  014B1A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22680  014B20  0060  F023  FFE6   	movff	btemp+7,postinc1
 22681  014B26  0E00               	movlw	0
 22682  014B28  6EE6               	movwf	postinc1,c
 22683  014B2A  EC2E  F0B9         	call	___xxtofl	;wreg free
 22684  014B2E  0060  F007  FFE6   	movff	btemp,postinc1
 22685  014B34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22686  014B3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22687  014B40  0060  F013  FFE6   	movff	btemp+3,postinc1
 22688  014B46  EC81  F0D2         	call	___flsub	;wreg free
 22689  014B4A  0060  F007  FFE6   	movff	btemp,postinc1
 22690  014B50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22691  014B56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22692  014B5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 22693  014B62  EC0D  F097         	call	___flmul	;wreg free
 22694  014B66  D1AB               	goto	l1767
 22695  014B68                     l9884:
 22696                           
 22697                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 22698  014B68  0E29               	movlw	41
 22699  014B6A  6EE6               	movwf	postinc1,c
 22700  014B6C  0E5C               	movlw	92
 22701  014B6E  6EE6               	movwf	postinc1,c
 22702  014B70  0E0F               	movlw	15
 22703  014B72  6EE6               	movwf	postinc1,c
 22704  014B74  0E3D               	movlw	61
 22705  014B76  6EE6               	movwf	postinc1,c
 22706  014B78  0060  F398  F009   	movff	_R+34,btemp+8	;volatile
 22707  014B7E  0060  F39C  F00A   	movff	_R+35,btemp+9	;volatile
 22708  014B84  0E00               	movlw	0
 22709  014B86  BE0A               	btfsc	(btemp+9)^0,7,c
 22710  014B88  0EFF               	movlw	255
 22711  014B8A  6E0B               	movwf	(btemp+10)^0,c
 22712  014B8C  6E0C               	movwf	(btemp+11)^0,c
 22713  014B8E  0060  F027  FFE6   	movff	btemp+8,postinc1
 22714  014B94  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22715  014B9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22716  014BA0  0060  F033  FFE6   	movff	btemp+11,postinc1
 22717  014BA6  0E01               	movlw	1
 22718  014BA8  6EE6               	movwf	postinc1,c
 22719  014BAA  EC2E  F0B9         	call	___xxtofl	;wreg free
 22720  014BAE  0060  F007  FFE6   	movff	btemp,postinc1
 22721  014BB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22722  014BBA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22723  014BC0  0060  F013  FFE6   	movff	btemp+3,postinc1
 22724                           
 22725                           ;stkvar	_chan @ sp[(-8)+-1]
 22726  014BC6  0EF7               	movlw	-9
 22727  014BC8  50E3               	movf	plusw1,w,c
 22728  014BCA  6EE6               	movwf	postinc1,c
 22729  014BCC  ECB6  F0D7         	call	_get_raw_result	;wreg free
 22730  014BD0  0060  F004  F00B   	movff	btemp,btemp+10
 22731  014BD6  0060  F008  F00C   	movff	btemp+1,btemp+11
 22732  014BDC  500B               	movf	(btemp+10)^0,w,c
 22733  014BDE  6E05               	movwf	(btemp+4)^0,c
 22734  014BE0  500C               	movf	(btemp+11)^0,w,c
 22735  014BE2  6E06               	movwf	(btemp+5)^0,c
 22736  014BE4  6A07               	clrf	(btemp+6)^0,c
 22737  014BE6  6A08               	clrf	(btemp+7)^0,c
 22738  014BE8  0060  F017  FFE6   	movff	btemp+4,postinc1
 22739  014BEE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22740  014BF4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22741  014BFA  0060  F023  FFE6   	movff	btemp+7,postinc1
 22742  014C00  0E00               	movlw	0
 22743  014C02  6EE6               	movwf	postinc1,c
 22744  014C04  EC2E  F0B9         	call	___xxtofl	;wreg free
 22745  014C08  0060  F007  FFE6   	movff	btemp,postinc1
 22746  014C0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22747  014C14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22748  014C1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 22749  014C20  EC81  F0D2         	call	___flsub	;wreg free
 22750  014C24  0060  F007  FFE6   	movff	btemp,postinc1
 22751  014C2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22752  014C30  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22753  014C36  0060  F013  FFE6   	movff	btemp+3,postinc1
 22754  014C3C  EC0D  F097         	call	___flmul	;wreg free
 22755  014C40  D13E               	goto	l1767
 22756  014C42                     l9888:
 22757                           
 22758                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 22759                           ;stkvar	_chan @ sp[(0)+-1]
 22760  014C42  0EFF               	movlw	-1
 22761  014C44  006F FF8C  F00C    	movff	plusw1,btemp+11
 22762  014C4A  0E00               	movlw	0
 22763  014C4C  6E09               	movwf	(btemp+8)^0,c
 22764  014C4E  0E08               	movlw	8
 22765  014C50  6E0A               	movwf	(btemp+9)^0,c
 22766  014C52  2A0C               	incf	(btemp+11)^0,f,c
 22767  014C54  D003               	goto	u9024
 22768  014C56                     u9025:
 22769  014C56  340A               	rlcf	(btemp+9)^0,w,c
 22770  014C58  320A               	rrcf	(btemp+9)^0,f,c
 22771  014C5A  3209               	rrcf	(btemp+8)^0,f,c
 22772  014C5C                     u9024:
 22773  014C5C  2E0C               	decfsz	(btemp+11)^0,f,c
 22774  014C5E  D7FB               	goto	u9025
 22775  014C60  A009               	btfss	(btemp+8)^0,0,c
 22776  014C62  D008               	goto	l9896
 22777                           
 22778                           ;daq.c: 111:     return 25.0;
 22779  014C64  0E00               	movlw	0
 22780  014C66  6E01               	movwf	btemp^0,c
 22781  014C68  0E00               	movlw	0
 22782  014C6A  6E02               	movwf	(btemp+1)^0,c
 22783  014C6C  0EC8               	movlw	200
 22784  014C6E  6E03               	movwf	(btemp+2)^0,c
 22785  014C70  0E41               	movlw	65
 22786  014C72  D113               	goto	L24
 22787  014C74                     l9896:
 22788                           
 22789                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 22790  014C74  0E00               	movlw	0
 22791  014C76  6EE6               	movwf	postinc1,c
 22792  014C78  0E00               	movlw	0
 22793  014C7A  6EE6               	movwf	postinc1,c
 22794  014C7C  0E7A               	movlw	122
 22795  014C7E  6EE6               	movwf	postinc1,c
 22796  014C80  0E44               	movlw	68
 22797  014C82  6EE6               	movwf	postinc1,c
 22798  014C84  0E61               	movlw	97
 22799  014C86  6EE6               	movwf	postinc1,c
 22800  014C88  0E03               	movlw	3
 22801  014C8A  6EE6               	movwf	postinc1,c
 22802  014C8C  0E84               	movlw	132
 22803  014C8E  6EE6               	movwf	postinc1,c
 22804  014C90  0E40               	movlw	64
 22805  014C92  6EE6               	movwf	postinc1,c
 22806                           
 22807                           ;stkvar	_chan @ sp[(-8)+-1]
 22808  014C94  0EF7               	movlw	-9
 22809  014C96  50E3               	movf	plusw1,w,c
 22810  014C98  6EE6               	movwf	postinc1,c
 22811  014C9A  ECB6  F0D7         	call	_get_raw_result	;wreg free
 22812  014C9E  0060  F004  F00B   	movff	btemp,btemp+10
 22813  014CA4  0060  F008  F00C   	movff	btemp+1,btemp+11
 22814  014CAA  500B               	movf	(btemp+10)^0,w,c
 22815  014CAC  6E05               	movwf	(btemp+4)^0,c
 22816  014CAE  500C               	movf	(btemp+11)^0,w,c
 22817  014CB0  6E06               	movwf	(btemp+5)^0,c
 22818  014CB2  6A07               	clrf	(btemp+6)^0,c
 22819  014CB4  6A08               	clrf	(btemp+7)^0,c
 22820  014CB6  0060  F017  FFE6   	movff	btemp+4,postinc1
 22821  014CBC  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22822  014CC2  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22823  014CC8  0060  F023  FFE6   	movff	btemp+7,postinc1
 22824  014CCE  0E00               	movlw	0
 22825  014CD0  6EE6               	movwf	postinc1,c
 22826  014CD2  EC2E  F0B9         	call	___xxtofl	;wreg free
 22827  014CD6  0060  F007  FFE6   	movff	btemp,postinc1
 22828  014CDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22829  014CE2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22830  014CE8  0060  F013  FFE6   	movff	btemp+3,postinc1
 22831  014CEE  EC0D  F097         	call	___flmul	;wreg free
 22832  014CF2  0060  F007  FFE6   	movff	btemp,postinc1
 22833  014CF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22834  014CFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22835  014D04  0060  F013  FFE6   	movff	btemp+3,postinc1
 22836  014D0A  EC4F  F0A2         	call	___fldiv	;wreg free
 22837  014D0E  D0D7               	goto	l1767
 22838  014D10                     l9900:
 22839                           
 22840                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 22841                           ;stkvar	_chan @ sp[(0)+-1]
 22842  014D10  0EFF               	movlw	-1
 22843  014D12  006F FF8C  F00C    	movff	plusw1,btemp+11
 22844  014D18  0E03               	movlw	3
 22845  014D1A  6E09               	movwf	(btemp+8)^0,c
 22846  014D1C  0E00               	movlw	0
 22847  014D1E  6E0A               	movwf	(btemp+9)^0,c
 22848  014D20  2A0C               	incf	(btemp+11)^0,f,c
 22849  014D22  D003               	goto	u9044
 22850  014D24                     u9045:
 22851  014D24  340A               	rlcf	(btemp+9)^0,w,c
 22852  014D26  320A               	rrcf	(btemp+9)^0,f,c
 22853  014D28  3209               	rrcf	(btemp+8)^0,f,c
 22854  014D2A                     u9044:
 22855  014D2A  2E0C               	decfsz	(btemp+11)^0,f,c
 22856  014D2C  D7FB               	goto	u9045
 22857  014D2E  B009               	btfsc	(btemp+8)^0,0,c
 22858  014D30  D011               	goto	u9070
 22859                           
 22860                           ;stkvar	_chan @ sp[(0)+-1]
 22861  014D32  0EFF               	movlw	-1
 22862  014D34  006F FF8C  F00C    	movff	plusw1,btemp+11
 22863  014D3A  0E00               	movlw	0
 22864  014D3C  6E09               	movwf	(btemp+8)^0,c
 22865  014D3E  0E08               	movlw	8
 22866  014D40  6E0A               	movwf	(btemp+9)^0,c
 22867  014D42  2A0C               	incf	(btemp+11)^0,f,c
 22868  014D44  D003               	goto	u9064
 22869  014D46                     u9065:
 22870  014D46  340A               	rlcf	(btemp+9)^0,w,c
 22871  014D48  320A               	rrcf	(btemp+9)^0,f,c
 22872  014D4A  3209               	rrcf	(btemp+8)^0,f,c
 22873  014D4C                     u9064:
 22874  014D4C  2E0C               	decfsz	(btemp+11)^0,f,c
 22875  014D4E  D7FB               	goto	u9065
 22876  014D50  A009               	btfss	(btemp+8)^0,0,c
 22877  014D52  D04E               	goto	l9908
 22878  014D54                     u9070:
 22879                           
 22880                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 22881  014D54  0E00               	movlw	0
 22882  014D56  6EE6               	movwf	postinc1,c
 22883  014D58  0E00               	movlw	0
 22884  014D5A  6EE6               	movwf	postinc1,c
 22885  014D5C  0E7A               	movlw	122
 22886  014D5E  6EE6               	movwf	postinc1,c
 22887  014D60  0E44               	movlw	68
 22888  014D62  6EE6               	movwf	postinc1,c
 22889  014D64  0E00               	movlw	0
 22890  014D66  6EE6               	movwf	postinc1,c
 22891  014D68  0E00               	movlw	0
 22892  014D6A  6EE6               	movwf	postinc1,c
 22893  014D6C  0E20               	movlw	32
 22894  014D6E  6EE6               	movwf	postinc1,c
 22895  014D70  0E3F               	movlw	63
 22896  014D72  6EE6               	movwf	postinc1,c
 22897                           
 22898                           ;stkvar	_chan @ sp[(-8)+-1]
 22899  014D74  0EF7               	movlw	-9
 22900  014D76  50E3               	movf	plusw1,w,c
 22901  014D78  6EE6               	movwf	postinc1,c
 22902  014D7A  ECB6  F0D7         	call	_get_raw_result	;wreg free
 22903  014D7E  0060  F004  F00B   	movff	btemp,btemp+10
 22904  014D84  0060  F008  F00C   	movff	btemp+1,btemp+11
 22905  014D8A  500B               	movf	(btemp+10)^0,w,c
 22906  014D8C  6E05               	movwf	(btemp+4)^0,c
 22907  014D8E  500C               	movf	(btemp+11)^0,w,c
 22908  014D90  6E06               	movwf	(btemp+5)^0,c
 22909  014D92  6A07               	clrf	(btemp+6)^0,c
 22910  014D94  6A08               	clrf	(btemp+7)^0,c
 22911  014D96  0060  F017  FFE6   	movff	btemp+4,postinc1
 22912  014D9C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22913  014DA2  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22914  014DA8  0060  F023  FFE6   	movff	btemp+7,postinc1
 22915  014DAE  0E00               	movlw	0
 22916  014DB0  6EE6               	movwf	postinc1,c
 22917  014DB2  EC2E  F0B9         	call	___xxtofl	;wreg free
 22918  014DB6  0060  F007  FFE6   	movff	btemp,postinc1
 22919  014DBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22920  014DC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22921  014DC8  0060  F013  FFE6   	movff	btemp+3,postinc1
 22922  014DCE  EC0D  F097         	call	___flmul	;wreg free
 22923  014DD2  0060  F007  FFE6   	movff	btemp,postinc1
 22924  014DD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22925  014DDE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22926  014DE4  0060  F013  FFE6   	movff	btemp+3,postinc1
 22927  014DEA  EC4F  F0A2         	call	___fldiv	;wreg free
 22928  014DEE  D067               	goto	l1767
 22929  014DF0                     l9908:
 22930                           
 22931                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 22932  014DF0  0E00               	movlw	0
 22933  014DF2  6EE6               	movwf	postinc1,c
 22934  014DF4  0E00               	movlw	0
 22935  014DF6  6EE6               	movwf	postinc1,c
 22936  014DF8  0E7A               	movlw	122
 22937  014DFA  6EE6               	movwf	postinc1,c
 22938  014DFC  0E44               	movlw	68
 22939  014DFE  6EE6               	movwf	postinc1,c
 22940  014E00  0E61               	movlw	97
 22941  014E02  6EE6               	movwf	postinc1,c
 22942  014E04  0E03               	movlw	3
 22943  014E06  6EE6               	movwf	postinc1,c
 22944  014E08  0E84               	movlw	132
 22945  014E0A  6EE6               	movwf	postinc1,c
 22946  014E0C  0E40               	movlw	64
 22947  014E0E  6EE6               	movwf	postinc1,c
 22948                           
 22949                           ;stkvar	_chan @ sp[(-8)+-1]
 22950  014E10  0EF7               	movlw	-9
 22951  014E12  50E3               	movf	plusw1,w,c
 22952  014E14  6EE6               	movwf	postinc1,c
 22953  014E16  ECB6  F0D7         	call	_get_raw_result	;wreg free
 22954  014E1A  0060  F004  F00B   	movff	btemp,btemp+10
 22955  014E20  0060  F008  F00C   	movff	btemp+1,btemp+11
 22956  014E26  500B               	movf	(btemp+10)^0,w,c
 22957  014E28  6E05               	movwf	(btemp+4)^0,c
 22958  014E2A  500C               	movf	(btemp+11)^0,w,c
 22959  014E2C  6E06               	movwf	(btemp+5)^0,c
 22960  014E2E  6A07               	clrf	(btemp+6)^0,c
 22961  014E30  6A08               	clrf	(btemp+7)^0,c
 22962  014E32  0060  F017  FFE6   	movff	btemp+4,postinc1
 22963  014E38  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22964  014E3E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22965  014E44  0060  F023  FFE6   	movff	btemp+7,postinc1
 22966  014E4A  0E00               	movlw	0
 22967  014E4C  6EE6               	movwf	postinc1,c
 22968  014E4E  EC2E  F0B9         	call	___xxtofl	;wreg free
 22969  014E52  0060  F007  FFE6   	movff	btemp,postinc1
 22970  014E58  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22971  014E5E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22972  014E64  0060  F013  FFE6   	movff	btemp+3,postinc1
 22973  014E6A  EC0D  F097         	call	___flmul	;wreg free
 22974  014E6E  0060  F007  FFE6   	movff	btemp,postinc1
 22975  014E74  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22976  014E7A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22977  014E80  0060  F013  FFE6   	movff	btemp+3,postinc1
 22978  014E86  EC4F  F0A2         	call	___fldiv	;wreg free
 22979  014E8A  D019               	goto	l1767
 22980  014E8C                     l9914:
 22981                           
 22982                           ;daq.c: 124:   return 0.0;
 22983  014E8C  0E00               	movlw	0
 22984  014E8E  6E01               	movwf	btemp^0,c
 22985  014E90  0E00               	movlw	0
 22986  014E92  6E02               	movwf	(btemp+1)^0,c
 22987  014E94  0E00               	movlw	0
 22988  014E96  6E03               	movwf	(btemp+2)^0,c
 22989  014E98  0E00               	movlw	0
 22990  014E9A                     L24:
 22991  014E9A  6E04               	movwf	(btemp+3)^0,c
 22992  014E9C  D010               	goto	l1767
 22993  014E9E                     l9922:
 22994                           
 22995                           ;stkvar	_to_what @ sp[(0)+-2]
 22996  014E9E  0EFE               	movlw	-2
 22997  014EA0  50E3               	movf	plusw1,w,c
 22998  014EA2  6E0B               	movwf	(btemp+10)^0,c
 22999  014EA4  6A0C               	clrf	(btemp+11)^0,c
 23000                           
 23001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23002                           ; Switch size 1, requested type "simple"
 23003                           ; Number of cases is 1, Range of values is 0 to 0
 23004                           ; switch strategies available:
 23005                           ; Name         Instructions Cycles
 23006                           ; simple_byte            4     3 (average)
 23007                           ;	Chosen strategy is simple_byte
 23008  014EA6  500C               	movf	(btemp+11)^0,w,c
 23009  014EA8  0A00               	xorlw	0	; case 0
 23010  014EAA  A4D8               	btfss	status,2,c
 23011  014EAC  D7EF               	goto	l9914
 23012                           
 23013                           ; Switch size 1, requested type "simple"
 23014                           ; Number of cases is 2, Range of values is 0 to 1
 23015                           ; switch strategies available:
 23016                           ; Name         Instructions Cycles
 23017                           ; simple_byte            7     4 (average)
 23018                           ;	Chosen strategy is simple_byte
 23019  014EAE  500B               	movf	(btemp+10)^0,w,c
 23020  014EB0  0A00               	xorlw	0	; case 0
 23021  014EB2  B4D8               	btfsc	status,2,c
 23022  014EB4  D5B2               	goto	l9868
 23023  014EB6  0A01               	xorlw	1	; case 1
 23024  014EB8  B4D8               	btfsc	status,2,c
 23025  014EBA  D72A               	goto	l9900
 23026  014EBC  D7E7               	goto	l9914
 23027  014EBE                     l1767:
 23028                           
 23029                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23030  014EBE  52E5               	movf	postdec1,f,c
 23031  014EC0  52E5               	movf	postdec1,f,c
 23032  014EC2  0012               	return		;funcret
 23033  014EC4                     __end_of_conv_raw_result:
 23034                           	opt callstack 0
 23035                           
 23036 ;; *************** function _nanf *****************
 23037 ;; Defined at:
 23038 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23039 ;; Parameters:    Size  Location     Type
 23040 ;;  s               2  [STACK] PTR const unsigned char 
 23041 ;;		 -> STR_92(1), STR_54(1), 
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;  u               4  [STACK] struct .
 23044 ;; Return value:  Size  Location     Type
 23045 ;;                  4  [STACK] float 
 23046 ;; Registers used:
 23047 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23048 ;; Tracked objects:
 23049 ;;		On entry : 0/39
 23050 ;;		On exit  : 0/0
 23051 ;;		Unchanged: 0/0
 23052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23057 ;;Total ram usage:        0 bytes
 23058 ;; Hardware stack levels used:    1
 23059 ;; Hardware stack levels required when called:   15
 23060 ;; This function calls:
 23061 ;;		Nothing
 23062 ;; This function is called by:
 23063 ;;		_conv_raw_result
 23064 ;; This function uses a reentrant model
 23065 ;;
 23066                           
 23067                           	psect	text95
 23068  01A116                     __ptext95:
 23069                           	opt callstack 0
 23070  01A116                     _nanf:
 23071                           	opt callstack 0
 23072                           
 23073                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23074  01A116  52E6               	movf	postinc1,f,c
 23075  01A118  52E6               	movf	postinc1,f,c
 23076  01A11A  52E6               	movf	postinc1,f,c
 23077  01A11C  52E6               	movf	postinc1,f,c
 23078                           
 23079                           ;incstack = 0
 23080  01A11E  0EFF               	movlw	255
 23081  01A120  6E09               	movwf	(btemp+8)^0,c
 23082  01A122  0EFF               	movlw	255
 23083  01A124  6E0A               	movwf	(btemp+9)^0,c
 23084  01A126  0EFF               	movlw	255
 23085  01A128  6E0B               	movwf	(btemp+10)^0,c
 23086  01A12A  0E7F               	movlw	127
 23087  01A12C  6E0C               	movwf	(btemp+11)^0,c
 23088                           
 23089                           ;stkvar	_u @ sp[(-4)+0]
 23090  01A12E  0EFC               	movlw	-4
 23091  01A130  0060  F027  FFE3   	movff	btemp+8,plusw1
 23092  01A136  0EFD               	movlw	-3
 23093  01A138  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23094  01A13E  0EFE               	movlw	-2
 23095  01A140  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23096  01A146  0EFF               	movlw	-1
 23097  01A148  0060  F033  FFE3   	movff	btemp+11,plusw1
 23098                           
 23099                           ;stkvar	_u @ sp[(-4)+0]
 23100  01A14E  0EFC               	movlw	-4
 23101  01A150  006F FF8C  F001    	movff	plusw1,btemp
 23102  01A156  0EFD               	movlw	-3
 23103  01A158  006F FF8C  F002    	movff	plusw1,btemp+1
 23104  01A15E  0EFE               	movlw	-2
 23105  01A160  006F FF8C  F003    	movff	plusw1,btemp+2
 23106  01A166  0EFF               	movlw	-1
 23107  01A168  006F FF8C  F004    	movff	plusw1,btemp+3
 23108                           
 23109                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23110  01A16E  0EFA               	movlw	250
 23111  01A170  26E1               	addwf	fsr1l,f,c
 23112  01A172  0EFF               	movlw	255
 23113  01A174  22E2               	addwfc	fsr1h,f,c
 23114  01A176  0012               	return		;funcret
 23115  01A178                     __end_of_nanf:
 23116                           	opt callstack 0
 23117                           
 23118 ;; *************** function _get_raw_result *****************
 23119 ;; Defined at:
 23120 ;;		line 87 in file "daq.c"
 23121 ;; Parameters:    Size  Location     Type
 23122 ;;  index           1  [STACK] const enum E16581
 23123 ;; Auto vars:     Size  Location     Type
 23124 ;;		None
 23125 ;; Return value:  Size  Location     Type
 23126 ;;                  2  [STACK] unsigned short 
 23127 ;; Registers used:
 23128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23129 ;; Tracked objects:
 23130 ;;		On entry : 0/2
 23131 ;;		On exit  : 0/0
 23132 ;;		Unchanged: 0/0
 23133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23138 ;;Total ram usage:        0 bytes
 23139 ;; Hardware stack levels used:    1
 23140 ;; Hardware stack levels required when called:   15
 23141 ;; This function calls:
 23142 ;;		Nothing
 23143 ;; This function is called by:
 23144 ;;		_main
 23145 ;;		_conv_raw_result
 23146 ;; This function uses a reentrant model
 23147 ;;
 23148                           
 23149                           	psect	text96
 23150  01AF6C                     __ptext96:
 23151                           	opt callstack 0
 23152  01AF6C                     _get_raw_result:
 23153                           	opt callstack 13
 23154                           
 23155                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23156                           ;stkvar	_index @ sp[(0)+-1]
 23157                           
 23158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23159                           ;incstack = 0
 23160  01AF6C  0EFF               	movlw	-1
 23161  01AF6E  50E3               	movf	plusw1,w,c
 23162  01AF70  0D02               	mullw	2
 23163  01AF72  50F3               	movf	243,w,c
 23164  01AF74  0FC4               	addlw	low _R
 23165  01AF76  6ED9               	movwf	fsr2l,c
 23166  01AF78  6ADA               	clrf	fsr2h,c
 23167  01AF7A  006F FF78  F001    	movff	postinc2,btemp
 23168  01AF80  006F FF74  F002    	movff	postdec2,btemp+1
 23169                           
 23170                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23171  01AF86  52E5               	movf	postdec1,f,c
 23172  01AF88  0012               	return		;funcret
 23173  01AF8A                     __end_of_get_raw_result:
 23174                           	opt callstack 0
 23175                           
 23176 ;; *************** function ___xxtofl *****************
 23177 ;; Defined at:
 23178 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23179 ;; Parameters:    Size  Location     Type
 23180 ;;  sign            1  [STACK] unsigned char 
 23181 ;;  val             4  [STACK] long 
 23182 ;; Auto vars:     Size  Location     Type
 23183 ;;  arg             4  [STACK] unsigned long 
 23184 ;;  exp             1  [STACK] unsigned char 
 23185 ;; Return value:  Size  Location     Type
 23186 ;;                  4  [STACK] unsigned char 
 23187 ;; Registers used:
 23188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23189 ;; Tracked objects:
 23190 ;;		On entry : 0/1
 23191 ;;		On exit  : 0/0
 23192 ;;		Unchanged: 0/0
 23193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23198 ;;Total ram usage:        0 bytes
 23199 ;; Hardware stack levels used:    1
 23200 ;; Hardware stack levels required when called:   15
 23201 ;; This function calls:
 23202 ;;		Nothing
 23203 ;; This function is called by:
 23204 ;;		_conv_raw_result
 23205 ;;		_init_bsoc
 23206 ;; This function uses a reentrant model
 23207 ;;
 23208                           
 23209                           	psect	text97
 23210  01725C                     __ptext97:
 23211                           	opt callstack 0
 23212  01725C                     ___xxtofl:
 23213                           	opt callstack 0
 23214                           
 23215                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23216  01725C  0E05               	movlw	5
 23217  01725E  26E1               	addwf	fsr1l,f,c
 23218  017260  0E00               	movlw	0
 23219  017262  22E2               	addwfc	fsr1h,f,c
 23220                           
 23221                           ;stkvar	_sign @ sp[(-5)+-1]
 23222                           
 23223                           ;incstack = 0
 23224  017264  0EFA               	movlw	-6
 23225  017266  50E3               	movf	plusw1,w,c
 23226  017268  B4D8               	btfsc	status,2,c
 23227  01726A  D01D               	goto	l9404
 23228                           
 23229                           ;stkvar	_val @ sp[(-5)+-5]
 23230  01726C  0EF9               	movlw	-7
 23231  01726E  AEE3               	btfss	plusw1,7,c
 23232  017270  D01A               	goto	l9404
 23233                           
 23234                           ;stkvar	_val @ sp[(-5)+-5]
 23235  017272  0EF6               	movlw	-10
 23236  017274  006F FF8C  F009    	movff	plusw1,btemp+8
 23237  01727A  0EF7               	movlw	-9
 23238  01727C  006F FF8C  F00A    	movff	plusw1,btemp+9
 23239  017282  0EF8               	movlw	-8
 23240  017284  006F FF8C  F00B    	movff	plusw1,btemp+10
 23241  01728A  0EF9               	movlw	-7
 23242  01728C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23243  017292  1E09               	comf	(btemp+8)^0,f,c
 23244  017294  1E0A               	comf	(btemp+9)^0,f,c
 23245  017296  1E0B               	comf	(btemp+10)^0,f,c
 23246  017298  1E0C               	comf	(btemp+11)^0,f,c
 23247  01729A  2A09               	incf	(btemp+8)^0,f,c
 23248  01729C  0E00               	movlw	0
 23249  01729E  220A               	addwfc	(btemp+9)^0,f,c
 23250  0172A0  220B               	addwfc	(btemp+10)^0,f,c
 23251  0172A2  220C               	addwfc	(btemp+11)^0,f,c
 23252  0172A4  D010               	goto	L25
 23253  0172A6                     l9404:
 23254                           
 23255                           ;stkvar	_val @ sp[(-5)+-5]
 23256  0172A6  0EF6               	movlw	-10
 23257  0172A8  006F FF8C  F009    	movff	plusw1,btemp+8
 23258  0172AE  0EF7               	movlw	-9
 23259  0172B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23260  0172B6  0EF8               	movlw	-8
 23261  0172B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23262  0172BE  0EF9               	movlw	-7
 23263  0172C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23264  0172C6                     L25:
 23265                           
 23266                           ;stkvar	_arg @ sp[(-5)+0]
 23267  0172C6  0EFB               	movlw	-5
 23268  0172C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 23269  0172CE  0EFC               	movlw	-4
 23270  0172D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23271  0172D6  0EFD               	movlw	-3
 23272  0172D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23273  0172DE  0EFE               	movlw	-2
 23274  0172E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23275                           
 23276                           ;stkvar	_val @ sp[(-5)+-5]
 23277  0172E6  0EF6               	movlw	-10
 23278  0172E8  50E3               	movf	plusw1,w,c
 23279  0172EA  E113               	bnz	l9412
 23280  0172EC  0EF7               	movlw	-9
 23281  0172EE  50E3               	movf	plusw1,w,c
 23282  0172F0  E110               	bnz	l9412
 23283  0172F2  0EF8               	movlw	-8
 23284  0172F4  50E3               	movf	plusw1,w,c
 23285  0172F6  E10D               	bnz	l9412
 23286  0172F8  0EF9               	movlw	-7
 23287  0172FA  50E3               	movf	plusw1,w,c
 23288  0172FC  A4D8               	btfss	status,2,c
 23289  0172FE  D009               	goto	l9412
 23290  017300  0E00               	movlw	0
 23291  017302  6E01               	movwf	btemp^0,c
 23292  017304  0E00               	movlw	0
 23293  017306  6E02               	movwf	(btemp+1)^0,c
 23294  017308  0E00               	movlw	0
 23295  01730A  6E03               	movwf	(btemp+2)^0,c
 23296  01730C  0E00               	movlw	0
 23297  01730E  6E04               	movwf	(btemp+3)^0,c
 23298  017310  D0A2               	goto	l2993
 23299  017312                     l9412:
 23300  017312  0E96               	movlw	150
 23301  017314  6E0C               	movwf	(btemp+11)^0,c
 23302                           
 23303                           ;stkvar	_exp @ sp[(-5)+4]
 23304  017316  0EFF               	movlw	-1
 23305  017318  0060  F033  FFE3   	movff	btemp+11,plusw1
 23306  01731E  D00B               	goto	l9416
 23307  017320                     l9414:
 23308                           
 23309                           ;stkvar	_exp @ sp[(-5)+4]
 23310  017320  0EFF               	movlw	-1
 23311  017322  2AE3               	incf	plusw1,f,c
 23312                           
 23313                           ;stkvar	_arg @ sp[(-5)+0]
 23314  017324  90D8               	bcf	status,0,c
 23315  017326  0EFE               	movlw	-2
 23316  017328  32E3               	rrcf	plusw1,f,c
 23317  01732A  0EFD               	movlw	-3
 23318  01732C  32E3               	rrcf	plusw1,f,c
 23319  01732E  0EFC               	movlw	-4
 23320  017330  32E3               	rrcf	plusw1,f,c
 23321  017332  0EFB               	movlw	-5
 23322  017334  32E3               	rrcf	plusw1,f,c
 23323  017336                     l9416:
 23324                           
 23325                           ;stkvar	_arg @ sp[(-5)+0]
 23326  017336  50E1               	movf	fsr1l,w,c
 23327  017338  0FFB               	addlw	-5
 23328  01733A  6ED9               	movwf	fsr2l,c
 23329  01733C  50E2               	movf	fsr1h,w,c
 23330  01733E  6EDA               	movwf	fsr2h,c
 23331  017340  0EFF               	movlw	255
 23332  017342  22DA               	addwfc	fsr2h,f,c
 23333  017344  52DE               	movf	postinc2,f,c
 23334  017346  52DE               	movf	postinc2,f,c
 23335  017348  52DE               	movf	postinc2,f,c
 23336  01734A  0EFE               	movlw	254
 23337  01734C  14DD               	andwf	postdec2,w,c
 23338  01734E  B4D8               	btfsc	status,2,c
 23339  017350  D018               	goto	l9424
 23340  017352  D7E6               	goto	l9414
 23341  017354                     l9418:
 23342                           
 23343                           ;stkvar	_exp @ sp[(-5)+4]
 23344  017354  0EFF               	movlw	-1
 23345  017356  2AE3               	incf	plusw1,f,c
 23346                           
 23347                           ;stkvar	_arg @ sp[(-5)+0]
 23348  017358  50E1               	movf	fsr1l,w,c
 23349  01735A  0FFB               	addlw	-5
 23350  01735C  6ED9               	movwf	fsr2l,c
 23351  01735E  50E2               	movf	fsr1h,w,c
 23352  017360  6EDA               	movwf	fsr2h,c
 23353  017362  0EFF               	movlw	255
 23354  017364  22DA               	addwfc	fsr2h,f,c
 23355  017366  2ADE               	incf	postinc2,f,c
 23356  017368  0E00               	movlw	0
 23357  01736A  22DE               	addwfc	postinc2,f,c
 23358  01736C  22DE               	addwfc	postinc2,f,c
 23359  01736E  22DE               	addwfc	postinc2,f,c
 23360                           
 23361                           ;stkvar	_arg @ sp[(-5)+0]
 23362  017370  90D8               	bcf	status,0,c
 23363  017372  0EFE               	movlw	-2
 23364  017374  32E3               	rrcf	plusw1,f,c
 23365  017376  0EFD               	movlw	-3
 23366  017378  32E3               	rrcf	plusw1,f,c
 23367  01737A  0EFC               	movlw	-4
 23368  01737C  32E3               	rrcf	plusw1,f,c
 23369  01737E  0EFB               	movlw	-5
 23370  017380  32E3               	rrcf	plusw1,f,c
 23371  017382                     l9424:
 23372                           
 23373                           ;stkvar	_arg @ sp[(-5)+0]
 23374  017382  50E1               	movf	fsr1l,w,c
 23375  017384  0FFB               	addlw	-5
 23376  017386  6ED9               	movwf	fsr2l,c
 23377  017388  50E2               	movf	fsr1h,w,c
 23378  01738A  6EDA               	movwf	fsr2h,c
 23379  01738C  0EFF               	movlw	255
 23380  01738E  22DA               	addwfc	fsr2h,f,c
 23381  017390  52DE               	movf	postinc2,f,c
 23382  017392  52DE               	movf	postinc2,f,c
 23383  017394  52DE               	movf	postinc2,f,c
 23384  017396  0EFF               	movlw	255
 23385  017398  14DD               	andwf	postdec2,w,c
 23386  01739A  B4D8               	btfsc	status,2,c
 23387  01739C  D00C               	goto	l9428
 23388  01739E  D7DA               	goto	l9418
 23389  0173A0                     l9426:
 23390                           
 23391                           ;stkvar	_exp @ sp[(-5)+4]
 23392  0173A0  0EFF               	movlw	-1
 23393  0173A2  06E3               	decf	plusw1,f,c
 23394                           
 23395                           ;stkvar	_arg @ sp[(-5)+0]
 23396  0173A4  90D8               	bcf	status,0,c
 23397  0173A6  0EFB               	movlw	-5
 23398  0173A8  36E3               	rlcf	plusw1,f,c
 23399  0173AA  0EFC               	movlw	-4
 23400  0173AC  36E3               	rlcf	plusw1,f,c
 23401  0173AE  0EFD               	movlw	-3
 23402  0173B0  36E3               	rlcf	plusw1,f,c
 23403  0173B2  0EFE               	movlw	-2
 23404  0173B4  36E3               	rlcf	plusw1,f,c
 23405  0173B6                     l9428:
 23406                           
 23407                           ;stkvar	_arg @ sp[(-5)+0]
 23408  0173B6  0EFD               	movlw	-3
 23409  0173B8  BEE3               	btfsc	plusw1,7,c
 23410  0173BA  D007               	goto	u8810
 23411                           
 23412                           ;stkvar	_exp @ sp[(-5)+4]
 23413  0173BC  0EFF               	movlw	-1
 23414  0173BE  006F FF8C  F001    	movff	plusw1,btemp
 23415  0173C4  0E02               	movlw	2
 23416  0173C6  6001               	cpfslt	btemp^0,c
 23417  0173C8  D7EB               	goto	l9426
 23418  0173CA                     u8810:
 23419                           
 23420                           ;stkvar	_exp @ sp[(-5)+4]
 23421  0173CA  0EFF               	movlw	-1
 23422  0173CC  B0E3               	btfsc	plusw1,0,c
 23423  0173CE  D002               	goto	l9436
 23424                           
 23425                           ;stkvar	_arg @ sp[(-5)+0]
 23426  0173D0  0EFD               	movlw	-3
 23427  0173D2  9EE3               	bcf	plusw1,7,c
 23428  0173D4                     l9436:
 23429                           
 23430                           ;stkvar	_exp @ sp[(-5)+4]
 23431  0173D4  50E1               	movf	fsr1l,w,c
 23432  0173D6  0FFF               	addlw	-1
 23433  0173D8  6ED9               	movwf	fsr2l,c
 23434  0173DA  50E2               	movf	fsr1h,w,c
 23435  0173DC  6EDA               	movwf	fsr2h,c
 23436  0173DE  0EFF               	movlw	255
 23437  0173E0  22DA               	addwfc	fsr2h,f,c
 23438  0173E2  90D8               	bcf	status,0,c
 23439  0173E4  32DF               	rrcf	indf2,f,c
 23440                           
 23441                           ;stkvar	_exp @ sp[(-5)+4]
 23442  0173E6  0EFF               	movlw	-1
 23443  0173E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23444  0173EE  0060  F030  F005   	movff	btemp+11,btemp+4
 23445  0173F4  6A06               	clrf	(btemp+5)^0,c
 23446  0173F6  6A07               	clrf	(btemp+6)^0,c
 23447  0173F8  6A08               	clrf	(btemp+7)^0,c
 23448  0173FA  0060  F014  F008   	movff	btemp+4,btemp+7
 23449  017400  6A07               	clrf	(btemp+6)^0,c
 23450  017402  6A06               	clrf	(btemp+5)^0,c
 23451  017404  6A05               	clrf	(btemp+4)^0,c
 23452                           
 23453                           ;stkvar	_arg @ sp[(-5)+0]
 23454  017406  50E1               	movf	fsr1l,w,c
 23455  017408  0FFB               	addlw	-5
 23456  01740A  6ED9               	movwf	fsr2l,c
 23457  01740C  50E2               	movf	fsr1h,w,c
 23458  01740E  6EDA               	movwf	fsr2h,c
 23459  017410  0EFF               	movlw	255
 23460  017412  22DA               	addwfc	fsr2h,f,c
 23461  017414  5005               	movf	(btemp+4)^0,w,c
 23462  017416  12DE               	iorwf	postinc2,f,c
 23463  017418  5006               	movf	(btemp+5)^0,w,c
 23464  01741A  12DE               	iorwf	postinc2,f,c
 23465  01741C  5007               	movf	(btemp+6)^0,w,c
 23466  01741E  12DE               	iorwf	postinc2,f,c
 23467  017420  5008               	movf	(btemp+7)^0,w,c
 23468  017422  12DE               	iorwf	postinc2,f,c
 23469                           
 23470                           ;stkvar	_sign @ sp[(-5)+-1]
 23471  017424  0EFA               	movlw	-6
 23472  017426  50E3               	movf	plusw1,w,c
 23473  017428  B4D8               	btfsc	status,2,c
 23474  01742A  D005               	goto	l9446
 23475                           
 23476                           ;stkvar	_val @ sp[(-5)+-5]
 23477  01742C  0EF9               	movlw	-7
 23478  01742E  AEE3               	btfss	plusw1,7,c
 23479  017430  D002               	goto	l9446
 23480                           
 23481                           ;stkvar	_arg @ sp[(-5)+0]
 23482  017432  0EFE               	movlw	-2
 23483  017434  8EE3               	bsf	plusw1,7,c
 23484  017436                     l9446:
 23485                           
 23486                           ;stkvar	_arg @ sp[(-5)+0]
 23487  017436  0EFB               	movlw	-5
 23488  017438  006F FF8C  F001    	movff	plusw1,btemp
 23489  01743E  0EFC               	movlw	-4
 23490  017440  006F FF8C  F002    	movff	plusw1,btemp+1
 23491  017446  0EFD               	movlw	-3
 23492  017448  006F FF8C  F003    	movff	plusw1,btemp+2
 23493  01744E  0EFE               	movlw	-2
 23494  017450  006F FF8C  F004    	movff	plusw1,btemp+3
 23495  017456                     l2993:
 23496                           
 23497                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 23498  017456  0EF6               	movlw	246
 23499  017458  26E1               	addwf	fsr1l,f,c
 23500  01745A  0EFF               	movlw	255
 23501  01745C  22E2               	addwfc	fsr1h,f,c
 23502  01745E  0012               	return		;funcret
 23503  017460                     __end_of___xxtofl:
 23504                           	opt callstack 0
 23505                           
 23506 ;; *************** function ___fldiv *****************
 23507 ;; Defined at:
 23508 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 23509 ;; Parameters:    Size  Location     Type
 23510 ;;  b               4  [STACK] unsigned char 
 23511 ;;  a               4  [STACK] unsigned char 
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;  grs             4  [STACK] unsigned long 
 23514 ;;  rem             4  [STACK] unsigned long 
 23515 ;;  new_exp         2  [STACK] short 
 23516 ;;  aexp            1  [STACK] unsigned char 
 23517 ;;  bexp            1  [STACK] unsigned char 
 23518 ;;  sign            1  [STACK] unsigned char 
 23519 ;; Return value:  Size  Location     Type
 23520 ;;                  4  [STACK] unsigned char 
 23521 ;; Registers used:
 23522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23523 ;; Tracked objects:
 23524 ;;		On entry : 0/1
 23525 ;;		On exit  : 0/0
 23526 ;;		Unchanged: 0/0
 23527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;Total ram usage:        0 bytes
 23533 ;; Hardware stack levels used:    1
 23534 ;; Hardware stack levels required when called:   15
 23535 ;; This function calls:
 23536 ;;		Nothing
 23537 ;; This function is called by:
 23538 ;;		_conv_raw_result
 23539 ;;		_calc_bsoc
 23540 ;;		_init_bsoc
 23541 ;;		_esr_check
 23542 ;;		_efgtoa
 23543 ;; This function uses a reentrant model
 23544 ;;
 23545                           
 23546                           	psect	text98
 23547  01449E                     __ptext98:
 23548                           	opt callstack 0
 23549  01449E                     ___fldiv:
 23550                           	opt callstack 0
 23551                           
 23552                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23553  01449E  0E0D               	movlw	13
 23554  0144A0  26E1               	addwf	fsr1l,f,c
 23555  0144A2  0E00               	movlw	0
 23556  0144A4  22E2               	addwfc	fsr1h,f,c
 23557                           
 23558                           ;stkvar	_b @ sp[(-13)+-4]
 23559                           
 23560                           ;incstack = 0
 23561 ;; hardware stack exceeded
 23562  0144A6  0EF2               	movlw	242
 23563  0144A8  24E1               	addwf	fsr1l,w,c
 23564  0144AA  6ED9               	movwf	fsr2l,c
 23565  0144AC  0EFF               	movlw	255
 23566  0144AE  20E2               	addwfc	fsr1h,w,c
 23567  0144B0  6EDA               	movwf	fsr2h,c
 23568  0144B2  50DF               	movf	indf2,w,c
 23569  0144B4  6E0C               	movwf	(btemp+11)^0,c
 23570  0144B6  0E80               	movlw	128
 23571  0144B8  160C               	andwf	(btemp+11)^0,f,c
 23572                           
 23573                           ;stkvar	_sign @ sp[(-13)+12]
 23574  0144BA  0EFF               	movlw	-1
 23575  0144BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23576                           
 23577                           ;stkvar	_b @ sp[(-13)+-4]
 23578  0144C2  0EF2               	movlw	242
 23579  0144C4  24E1               	addwf	fsr1l,w,c
 23580  0144C6  6ED9               	movwf	fsr2l,c
 23581  0144C8  0EFF               	movlw	255
 23582  0144CA  20E2               	addwfc	fsr1h,w,c
 23583  0144CC  6EDA               	movwf	fsr2h,c
 23584  0144CE  50DF               	movf	indf2,w,c
 23585  0144D0  6E0C               	movwf	(btemp+11)^0,c
 23586  0144D2  90D8               	bcf	status,0,c
 23587  0144D4  340C               	rlcf	(btemp+11)^0,w,c
 23588  0144D6  6E0B               	movwf	(btemp+10)^0,c
 23589                           
 23590                           ;stkvar	_bexp @ sp[(-13)+11]
 23591  0144D8  0EFE               	movlw	-2
 23592  0144DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23593                           
 23594                           ;stkvar	_b @ sp[(-13)+-4]
 23595  0144E0  0EF1               	movlw	241
 23596  0144E2  24E1               	addwf	fsr1l,w,c
 23597  0144E4  6ED9               	movwf	fsr2l,c
 23598  0144E6  0EFF               	movlw	255
 23599  0144E8  20E2               	addwfc	fsr1h,w,c
 23600  0144EA  6EDA               	movwf	fsr2h,c
 23601  0144EC  AEDF               	btfss	indf2,7,c
 23602  0144EE  D002               	goto	l7776
 23603                           
 23604                           ;stkvar	_bexp @ sp[(-13)+11]
 23605  0144F0  0EFE               	movlw	-2
 23606  0144F2  80E3               	bsf	plusw1,0,c
 23607  0144F4                     l7776:
 23608                           
 23609                           ;stkvar	_bexp @ sp[(-13)+11]
 23610  0144F4  0EFE               	movlw	-2
 23611  0144F6  50E3               	movf	plusw1,w,c
 23612  0144F8  B4D8               	btfsc	status,2,c
 23613  0144FA  D027               	goto	l7786
 23614                           
 23615                           ;stkvar	_bexp @ sp[(-13)+11]
 23616  0144FC  0EFE               	movlw	-2
 23617  0144FE  28E3               	incf	plusw1,w,c
 23618  014500  A4D8               	btfss	status,2,c
 23619  014502  D018               	goto	l7782
 23620  014504  0E00               	movlw	0
 23621  014506  6E09               	movwf	(btemp+8)^0,c
 23622  014508  0E00               	movlw	0
 23623  01450A  6E0A               	movwf	(btemp+9)^0,c
 23624  01450C  0E00               	movlw	0
 23625  01450E  6E0B               	movwf	(btemp+10)^0,c
 23626  014510  0E00               	movlw	0
 23627  014512  6E0C               	movwf	(btemp+11)^0,c
 23628                           
 23629                           ;stkvar	_b @ sp[(-13)+-4]
 23630  014514  0EEF               	movlw	-17
 23631  014516  0060  F027  FFE3   	movff	btemp+8,plusw1
 23632  01451C  0EF0               	movlw	-16
 23633  01451E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23634  014524  0EF1               	movlw	-15
 23635  014526  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23636  01452C  0EF2               	movlw	-14
 23637  01452E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23638  014534                     l7782:
 23639                           
 23640                           ;stkvar	_b @ sp[(-13)+-4]
 23641  014534  0EF1               	movlw	-15
 23642  014536  8EE3               	bsf	plusw1,7,c
 23643                           
 23644                           ;stkvar	_b @ sp[(-13)+-4]
 23645  014538  0EF2               	movlw	242
 23646  01453A  24E1               	addwf	fsr1l,w,c
 23647  01453C  6ED9               	movwf	fsr2l,c
 23648  01453E  0EFF               	movlw	255
 23649  014540  20E2               	addwfc	fsr1h,w,c
 23650  014542  6EDA               	movwf	fsr2h,c
 23651  014544  0E00               	movlw	0
 23652  014546  6EDF               	movwf	indf2,c
 23653  014548  D018               	goto	l7788
 23654  01454A                     l7786:
 23655  01454A  0E00               	movlw	0
 23656  01454C  6E09               	movwf	(btemp+8)^0,c
 23657  01454E  0E00               	movlw	0
 23658  014550  6E0A               	movwf	(btemp+9)^0,c
 23659  014552  0E00               	movlw	0
 23660  014554  6E0B               	movwf	(btemp+10)^0,c
 23661  014556  0E00               	movlw	0
 23662  014558  6E0C               	movwf	(btemp+11)^0,c
 23663                           
 23664                           ;stkvar	_b @ sp[(-13)+-4]
 23665  01455A  0EEF               	movlw	-17
 23666  01455C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23667  014562  0EF0               	movlw	-16
 23668  014564  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23669  01456A  0EF1               	movlw	-15
 23670  01456C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23671  014572  0EF2               	movlw	-14
 23672  014574  0060  F033  FFE3   	movff	btemp+11,plusw1
 23673  01457A                     l7788:
 23674                           
 23675                           ;stkvar	_a @ sp[(-13)+-8]
 23676  01457A  0EEE               	movlw	238
 23677  01457C  24E1               	addwf	fsr1l,w,c
 23678  01457E  6ED9               	movwf	fsr2l,c
 23679  014580  0EFF               	movlw	255
 23680  014582  20E2               	addwfc	fsr1h,w,c
 23681  014584  6EDA               	movwf	fsr2h,c
 23682  014586  50DF               	movf	indf2,w,c
 23683  014588  6E0C               	movwf	(btemp+11)^0,c
 23684  01458A  0E80               	movlw	128
 23685  01458C  160C               	andwf	(btemp+11)^0,f,c
 23686                           
 23687                           ;stkvar	_sign @ sp[(-13)+12]
 23688  01458E  50E1               	movf	fsr1l,w,c
 23689  014590  0FFF               	addlw	-1
 23690  014592  6ED9               	movwf	fsr2l,c
 23691  014594  50E2               	movf	fsr1h,w,c
 23692  014596  6EDA               	movwf	fsr2h,c
 23693  014598  0EFF               	movlw	255
 23694  01459A  22DA               	addwfc	fsr2h,f,c
 23695  01459C  500C               	movf	(btemp+11)^0,w,c
 23696  01459E  1ADF               	xorwf	indf2,f,c
 23697                           
 23698                           ;stkvar	_a @ sp[(-13)+-8]
 23699  0145A0  0EEE               	movlw	238
 23700  0145A2  24E1               	addwf	fsr1l,w,c
 23701  0145A4  6ED9               	movwf	fsr2l,c
 23702  0145A6  0EFF               	movlw	255
 23703  0145A8  20E2               	addwfc	fsr1h,w,c
 23704  0145AA  6EDA               	movwf	fsr2h,c
 23705  0145AC  50DF               	movf	indf2,w,c
 23706  0145AE  6E0C               	movwf	(btemp+11)^0,c
 23707  0145B0  90D8               	bcf	status,0,c
 23708  0145B2  340C               	rlcf	(btemp+11)^0,w,c
 23709  0145B4  6E0B               	movwf	(btemp+10)^0,c
 23710                           
 23711                           ;stkvar	_aexp @ sp[(-13)+10]
 23712  0145B6  0EFD               	movlw	-3
 23713  0145B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23714                           
 23715                           ;stkvar	_a @ sp[(-13)+-8]
 23716  0145BE  0EED               	movlw	237
 23717  0145C0  24E1               	addwf	fsr1l,w,c
 23718  0145C2  6ED9               	movwf	fsr2l,c
 23719  0145C4  0EFF               	movlw	255
 23720  0145C6  20E2               	addwfc	fsr1h,w,c
 23721  0145C8  6EDA               	movwf	fsr2h,c
 23722  0145CA  AEDF               	btfss	indf2,7,c
 23723  0145CC  D002               	goto	l7796
 23724                           
 23725                           ;stkvar	_aexp @ sp[(-13)+10]
 23726  0145CE  0EFD               	movlw	-3
 23727  0145D0  80E3               	bsf	plusw1,0,c
 23728  0145D2                     l7796:
 23729                           
 23730                           ;stkvar	_aexp @ sp[(-13)+10]
 23731  0145D2  0EFD               	movlw	-3
 23732  0145D4  50E3               	movf	plusw1,w,c
 23733  0145D6  B4D8               	btfsc	status,2,c
 23734  0145D8  D027               	goto	l7806
 23735                           
 23736                           ;stkvar	_aexp @ sp[(-13)+10]
 23737  0145DA  0EFD               	movlw	-3
 23738  0145DC  28E3               	incf	plusw1,w,c
 23739  0145DE  A4D8               	btfss	status,2,c
 23740  0145E0  D018               	goto	l7802
 23741  0145E2  0E00               	movlw	0
 23742  0145E4  6E09               	movwf	(btemp+8)^0,c
 23743  0145E6  0E00               	movlw	0
 23744  0145E8  6E0A               	movwf	(btemp+9)^0,c
 23745  0145EA  0E00               	movlw	0
 23746  0145EC  6E0B               	movwf	(btemp+10)^0,c
 23747  0145EE  0E00               	movlw	0
 23748  0145F0  6E0C               	movwf	(btemp+11)^0,c
 23749                           
 23750                           ;stkvar	_a @ sp[(-13)+-8]
 23751  0145F2  0EEB               	movlw	-21
 23752  0145F4  0060  F027  FFE3   	movff	btemp+8,plusw1
 23753  0145FA  0EEC               	movlw	-20
 23754  0145FC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23755  014602  0EED               	movlw	-19
 23756  014604  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23757  01460A  0EEE               	movlw	-18
 23758  01460C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23759  014612                     l7802:
 23760                           
 23761                           ;stkvar	_a @ sp[(-13)+-8]
 23762  014612  0EED               	movlw	-19
 23763  014614  8EE3               	bsf	plusw1,7,c
 23764                           
 23765                           ;stkvar	_a @ sp[(-13)+-8]
 23766  014616  0EEE               	movlw	238
 23767  014618  24E1               	addwf	fsr1l,w,c
 23768  01461A  6ED9               	movwf	fsr2l,c
 23769  01461C  0EFF               	movlw	255
 23770  01461E  20E2               	addwfc	fsr1h,w,c
 23771  014620  6EDA               	movwf	fsr2h,c
 23772  014622  0E00               	movlw	0
 23773  014624  6EDF               	movwf	indf2,c
 23774  014626  D018               	goto	l7808
 23775  014628                     l7806:
 23776  014628  0E00               	movlw	0
 23777  01462A  6E09               	movwf	(btemp+8)^0,c
 23778  01462C  0E00               	movlw	0
 23779  01462E  6E0A               	movwf	(btemp+9)^0,c
 23780  014630  0E00               	movlw	0
 23781  014632  6E0B               	movwf	(btemp+10)^0,c
 23782  014634  0E00               	movlw	0
 23783  014636  6E0C               	movwf	(btemp+11)^0,c
 23784                           
 23785                           ;stkvar	_a @ sp[(-13)+-8]
 23786  014638  0EEB               	movlw	-21
 23787  01463A  0060  F027  FFE3   	movff	btemp+8,plusw1
 23788  014640  0EEC               	movlw	-20
 23789  014642  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23790  014648  0EED               	movlw	-19
 23791  01464A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23792  014650  0EEE               	movlw	-18
 23793  014652  0060  F033  FFE3   	movff	btemp+11,plusw1
 23794  014658                     l7808:
 23795                           
 23796                           ;stkvar	_a @ sp[(-13)+-8]
 23797  014658  0EEB               	movlw	-21
 23798  01465A  50E3               	movf	plusw1,w,c
 23799  01465C  E139               	bnz	l7820
 23800  01465E  0EEC               	movlw	-20
 23801  014660  50E3               	movf	plusw1,w,c
 23802  014662  E136               	bnz	l7820
 23803  014664  0EED               	movlw	-19
 23804  014666  50E3               	movf	plusw1,w,c
 23805  014668  E133               	bnz	l7820
 23806  01466A  0EEE               	movlw	-18
 23807  01466C  50E3               	movf	plusw1,w,c
 23808  01466E  A4D8               	btfss	status,2,c
 23809  014670  D02F               	goto	l7820
 23810                           
 23811                           ;stkvar	_b @ sp[(-13)+-4]
 23812  014672  0EEF               	movlw	-17
 23813  014674  6AE3               	clrf	plusw1,c
 23814  014676  0EF0               	movlw	-16
 23815  014678  6AE3               	clrf	plusw1,c
 23816  01467A  0EF1               	movlw	-15
 23817  01467C  6AE3               	clrf	plusw1,c
 23818  01467E  0EF2               	movlw	-14
 23819  014680  6AE3               	clrf	plusw1,c
 23820                           
 23821                           ;stkvar	_b @ sp[(-13)+-4]
 23822  014682  0EF1               	movlw	241
 23823  014684  24E1               	addwf	fsr1l,w,c
 23824  014686  6ED9               	movwf	fsr2l,c
 23825  014688  0EFF               	movlw	255
 23826  01468A  20E2               	addwfc	fsr1h,w,c
 23827  01468C  6EDA               	movwf	fsr2h,c
 23828  01468E  0E80               	movlw	128
 23829  014690  12DE               	iorwf	postinc2,f,c
 23830  014692  0E7F               	movlw	127
 23831  014694  12DD               	iorwf	postdec2,f,c
 23832  014696                     l7814:
 23833                           
 23834                           ;stkvar	_sign @ sp[(-13)+12]
 23835  014696  0EFF               	movlw	-1
 23836  014698  006F FF8C  F00C    	movff	plusw1,btemp+11
 23837                           
 23838                           ;stkvar	_b @ sp[(-13)+-4]
 23839  01469E  0EF2               	movlw	242
 23840  0146A0  24E1               	addwf	fsr1l,w,c
 23841  0146A2  6ED9               	movwf	fsr2l,c
 23842  0146A4  0EFF               	movlw	255
 23843  0146A6  20E2               	addwfc	fsr1h,w,c
 23844  0146A8  6EDA               	movwf	fsr2h,c
 23845  0146AA  500C               	movf	(btemp+11)^0,w,c
 23846  0146AC  12DF               	iorwf	indf2,f,c
 23847                           
 23848                           ;stkvar	_b @ sp[(-13)+-4]
 23849  0146AE  0EEF               	movlw	-17
 23850  0146B0  006F FF8C  F001    	movff	plusw1,btemp
 23851  0146B6  0EF0               	movlw	-16
 23852  0146B8  006F FF8C  F002    	movff	plusw1,btemp+1
 23853  0146BE  0EF1               	movlw	-15
 23854  0146C0  006F FF8C  F003    	movff	plusw1,btemp+2
 23855  0146C6  0EF2               	movlw	-14
 23856  0146C8  006F FF8C  F004    	movff	plusw1,btemp+3
 23857  0146CE  D19F               	goto	l2917
 23858  0146D0                     l7820:
 23859                           
 23860                           ;stkvar	_bexp @ sp[(-13)+11]
 23861  0146D0  0EFE               	movlw	-2
 23862  0146D2  50E3               	movf	plusw1,w,c
 23863  0146D4  A4D8               	btfss	status,2,c
 23864  0146D6  D009               	goto	l7828
 23865  0146D8  0E00               	movlw	0
 23866  0146DA  6E01               	movwf	btemp^0,c
 23867  0146DC  0E00               	movlw	0
 23868  0146DE  6E02               	movwf	(btemp+1)^0,c
 23869  0146E0  0E00               	movlw	0
 23870  0146E2  6E03               	movwf	(btemp+2)^0,c
 23871  0146E4  0E00               	movlw	0
 23872  0146E6  6E04               	movwf	(btemp+3)^0,c
 23873  0146E8  D192               	goto	l2917
 23874  0146EA                     l7828:
 23875                           
 23876                           ;stkvar	_bexp @ sp[(-13)+11]
 23877  0146EA  0EFE               	movlw	-2
 23878  0146EC  50E3               	movf	plusw1,w,c
 23879  0146EE  6E0B               	movwf	(btemp+10)^0,c
 23880  0146F0  6A0C               	clrf	(btemp+11)^0,c
 23881                           
 23882                           ;stkvar	_aexp @ sp[(-13)+10]
 23883  0146F2  0EFD               	movlw	-3
 23884  0146F4  50E3               	movf	plusw1,w,c
 23885  0146F6  5E0B               	subwf	(btemp+10)^0,f,c
 23886  0146F8  0E00               	movlw	0
 23887  0146FA  5A0C               	subwfb	(btemp+11)^0,f,c
 23888  0146FC  0E7F               	movlw	127
 23889  0146FE  260B               	addwf	(btemp+10)^0,f,c
 23890  014700  0E00               	movlw	0
 23891  014702  220C               	addwfc	(btemp+11)^0,f,c
 23892                           
 23893                           ;stkvar	_new_exp @ sp[(-13)+8]
 23894  014704  0EFB               	movlw	-5
 23895  014706  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23896  01470C  0EFC               	movlw	-4
 23897  01470E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23898                           
 23899                           ;stkvar	_b @ sp[(-13)+-4]
 23900  014714  0EEF               	movlw	-17
 23901  014716  006F FF8C  F009    	movff	plusw1,btemp+8
 23902  01471C  0EF0               	movlw	-16
 23903  01471E  006F FF8C  F00A    	movff	plusw1,btemp+9
 23904  014724  0EF1               	movlw	-15
 23905  014726  006F FF8C  F00B    	movff	plusw1,btemp+10
 23906  01472C  0EF2               	movlw	-14
 23907  01472E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23908                           
 23909                           ;stkvar	_rem @ sp[(-13)+4]
 23910  014734  0EF7               	movlw	-9
 23911  014736  0060  F027  FFE3   	movff	btemp+8,plusw1
 23912  01473C  0EF8               	movlw	-8
 23913  01473E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23914  014744  0EF9               	movlw	-7
 23915  014746  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23916  01474C  0EFA               	movlw	-6
 23917  01474E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23918                           
 23919                           ;stkvar	_b @ sp[(-13)+-4]
 23920  014754  0EEF               	movlw	-17
 23921  014756  6AE3               	clrf	plusw1,c
 23922  014758  0EF0               	movlw	-16
 23923  01475A  6AE3               	clrf	plusw1,c
 23924  01475C  0EF1               	movlw	-15
 23925  01475E  6AE3               	clrf	plusw1,c
 23926  014760  0EF2               	movlw	-14
 23927  014762  6AE3               	clrf	plusw1,c
 23928                           
 23929                           ;stkvar	_grs @ sp[(-13)+0]
 23930  014764  0EF3               	movlw	-13
 23931  014766  6AE3               	clrf	plusw1,c
 23932  014768  0EF4               	movlw	-12
 23933  01476A  6AE3               	clrf	plusw1,c
 23934  01476C  0EF5               	movlw	-11
 23935  01476E  6AE3               	clrf	plusw1,c
 23936  014770  0EF6               	movlw	-10
 23937  014772  6AE3               	clrf	plusw1,c
 23938                           
 23939                           ;stkvar	_aexp @ sp[(-13)+10]
 23940  014774  0EFD               	movlw	-3
 23941  014776  6AE3               	clrf	plusw1,c
 23942  014778  D050               	goto	l7856
 23943  01477A                     l7838:
 23944                           
 23945                           ;stkvar	_aexp @ sp[(-13)+10]
 23946  01477A  0EFD               	movlw	-3
 23947  01477C  50E3               	movf	plusw1,w,c
 23948  01477E  B4D8               	btfsc	status,2,c
 23949  014780  D020               	goto	l7848
 23950                           
 23951                           ;stkvar	_rem @ sp[(-13)+4]
 23952  014782  90D8               	bcf	status,0,c
 23953  014784  0EF7               	movlw	-9
 23954  014786  36E3               	rlcf	plusw1,f,c
 23955  014788  0EF8               	movlw	-8
 23956  01478A  36E3               	rlcf	plusw1,f,c
 23957  01478C  0EF9               	movlw	-7
 23958  01478E  36E3               	rlcf	plusw1,f,c
 23959  014790  0EFA               	movlw	-6
 23960  014792  36E3               	rlcf	plusw1,f,c
 23961                           
 23962                           ;stkvar	_b @ sp[(-13)+-4]
 23963  014794  90D8               	bcf	status,0,c
 23964  014796  0EEF               	movlw	-17
 23965  014798  36E3               	rlcf	plusw1,f,c
 23966  01479A  0EF0               	movlw	-16
 23967  01479C  36E3               	rlcf	plusw1,f,c
 23968  01479E  0EF1               	movlw	-15
 23969  0147A0  36E3               	rlcf	plusw1,f,c
 23970  0147A2  0EF2               	movlw	-14
 23971  0147A4  36E3               	rlcf	plusw1,f,c
 23972                           
 23973                           ;stkvar	_grs @ sp[(-13)+0]
 23974  0147A6  0EF6               	movlw	-10
 23975  0147A8  AEE3               	btfss	plusw1,7,c
 23976  0147AA  D002               	goto	l7846
 23977                           
 23978                           ;stkvar	_b @ sp[(-13)+-4]
 23979  0147AC  0EEF               	movlw	-17
 23980  0147AE  80E3               	bsf	plusw1,0,c
 23981  0147B0                     l7846:
 23982                           
 23983                           ;stkvar	_grs @ sp[(-13)+0]
 23984  0147B0  90D8               	bcf	status,0,c
 23985  0147B2  0EF3               	movlw	-13
 23986  0147B4  36E3               	rlcf	plusw1,f,c
 23987  0147B6  0EF4               	movlw	-12
 23988  0147B8  36E3               	rlcf	plusw1,f,c
 23989  0147BA  0EF5               	movlw	-11
 23990  0147BC  36E3               	rlcf	plusw1,f,c
 23991  0147BE  0EF6               	movlw	-10
 23992  0147C0  36E3               	rlcf	plusw1,f,c
 23993  0147C2                     l7848:
 23994                           
 23995                           ;stkvar	_a @ sp[(-13)+-8]
 23996                           ;stkvar	_rem @ sp[(-13)+4]
 23997  0147C2  50E1               	movf	fsr1l,w,c
 23998  0147C4  0FF7               	addlw	-9
 23999  0147C6  6ED9               	movwf	fsr2l,c
 24000  0147C8  50E2               	movf	fsr1h,w,c
 24001  0147CA  6EDA               	movwf	fsr2h,c
 24002  0147CC  0EFF               	movlw	255
 24003  0147CE  22DA               	addwfc	fsr2h,f,c
 24004  0147D0  0EEB               	movlw	-21
 24005  0147D2  50E3               	movf	plusw1,w,c
 24006  0147D4  5CDE               	subwf	postinc2,w,c
 24007  0147D6  0EEC               	movlw	-20
 24008  0147D8  50E3               	movf	plusw1,w,c
 24009  0147DA  58DE               	subwfb	postinc2,w,c
 24010  0147DC  0EED               	movlw	-19
 24011  0147DE  50E3               	movf	plusw1,w,c
 24012  0147E0  58DE               	subwfb	postinc2,w,c
 24013  0147E2  0EEE               	movlw	-18
 24014  0147E4  50E3               	movf	plusw1,w,c
 24015  0147E6  58DE               	subwfb	postinc2,w,c
 24016  0147E8  A0D8               	btfss	status,0,c
 24017  0147EA  D015               	goto	l7854
 24018                           
 24019                           ;stkvar	_grs @ sp[(-13)+0]
 24020  0147EC  0EF6               	movlw	-10
 24021  0147EE  8CE3               	bsf	plusw1,6,c
 24022                           
 24023                           ;stkvar	_a @ sp[(-13)+-8]
 24024                           ;stkvar	_rem @ sp[(-13)+4]
 24025  0147F0  50E1               	movf	fsr1l,w,c
 24026  0147F2  0FF7               	addlw	-9
 24027  0147F4  6ED9               	movwf	fsr2l,c
 24028  0147F6  50E2               	movf	fsr1h,w,c
 24029  0147F8  6EDA               	movwf	fsr2h,c
 24030  0147FA  0EFF               	movlw	255
 24031  0147FC  22DA               	addwfc	fsr2h,f,c
 24032  0147FE  0EEB               	movlw	-21
 24033  014800  50E3               	movf	plusw1,w,c
 24034  014802  5EDE               	subwf	postinc2,f,c
 24035  014804  0EEC               	movlw	-20
 24036  014806  50E3               	movf	plusw1,w,c
 24037  014808  5ADE               	subwfb	postinc2,f,c
 24038  01480A  0EED               	movlw	-19
 24039  01480C  50E3               	movf	plusw1,w,c
 24040  01480E  5ADE               	subwfb	postinc2,f,c
 24041  014810  0EEE               	movlw	-18
 24042  014812  50E3               	movf	plusw1,w,c
 24043  014814  5ADE               	subwfb	postinc2,f,c
 24044  014816                     l7854:
 24045                           
 24046                           ;stkvar	_aexp @ sp[(-13)+10]
 24047  014816  0EFD               	movlw	-3
 24048  014818  2AE3               	incf	plusw1,f,c
 24049  01481A                     l7856:
 24050                           
 24051                           ;stkvar	_aexp @ sp[(-13)+10]
 24052  01481A  0EFD               	movlw	-3
 24053  01481C  006F FF8C  F001    	movff	plusw1,btemp
 24054  014822  0E19               	movlw	25
 24055  014824  6401               	cpfsgt	btemp^0,c
 24056  014826  D7A9               	goto	l7838
 24057                           
 24058                           ;stkvar	_rem @ sp[(-13)+4]
 24059  014828  0EF7               	movlw	-9
 24060  01482A  50E3               	movf	plusw1,w,c
 24061  01482C  E10A               	bnz	u6270
 24062  01482E  0EF8               	movlw	-8
 24063  014830  50E3               	movf	plusw1,w,c
 24064  014832  E107               	bnz	u6270
 24065  014834  0EF9               	movlw	-7
 24066  014836  50E3               	movf	plusw1,w,c
 24067  014838  E104               	bnz	u6270
 24068  01483A  0EFA               	movlw	-6
 24069  01483C  50E3               	movf	plusw1,w,c
 24070  01483E  B4D8               	btfsc	status,2,c
 24071  014840  D024               	goto	l7872
 24072  014842                     u6270:
 24073                           
 24074                           ;stkvar	_grs @ sp[(-13)+0]
 24075  014842  0EF3               	movlw	-13
 24076  014844  80E3               	bsf	plusw1,0,c
 24077  014846  D021               	goto	l7872
 24078  014848                     l7862:
 24079                           
 24080                           ;stkvar	_b @ sp[(-13)+-4]
 24081  014848  90D8               	bcf	status,0,c
 24082  01484A  0EEF               	movlw	-17
 24083  01484C  36E3               	rlcf	plusw1,f,c
 24084  01484E  0EF0               	movlw	-16
 24085  014850  36E3               	rlcf	plusw1,f,c
 24086  014852  0EF1               	movlw	-15
 24087  014854  36E3               	rlcf	plusw1,f,c
 24088  014856  0EF2               	movlw	-14
 24089  014858  36E3               	rlcf	plusw1,f,c
 24090                           
 24091                           ;stkvar	_grs @ sp[(-13)+0]
 24092  01485A  0EF6               	movlw	-10
 24093  01485C  AEE3               	btfss	plusw1,7,c
 24094  01485E  D002               	goto	l7868
 24095                           
 24096                           ;stkvar	_b @ sp[(-13)+-4]
 24097  014860  0EEF               	movlw	-17
 24098  014862  80E3               	bsf	plusw1,0,c
 24099  014864                     l7868:
 24100                           
 24101                           ;stkvar	_grs @ sp[(-13)+0]
 24102  014864  90D8               	bcf	status,0,c
 24103  014866  0EF3               	movlw	-13
 24104  014868  36E3               	rlcf	plusw1,f,c
 24105  01486A  0EF4               	movlw	-12
 24106  01486C  36E3               	rlcf	plusw1,f,c
 24107  01486E  0EF5               	movlw	-11
 24108  014870  36E3               	rlcf	plusw1,f,c
 24109  014872  0EF6               	movlw	-10
 24110  014874  36E3               	rlcf	plusw1,f,c
 24111                           
 24112                           ;stkvar	_new_exp @ sp[(-13)+8]
 24113  014876  50E1               	movf	fsr1l,w,c
 24114  014878  0FFB               	addlw	-5
 24115  01487A  6ED9               	movwf	fsr2l,c
 24116  01487C  50E2               	movf	fsr1h,w,c
 24117  01487E  6EDA               	movwf	fsr2h,c
 24118  014880  0EFF               	movlw	255
 24119  014882  22DA               	addwfc	fsr2h,f,c
 24120  014884  06DE               	decf	postinc2,f,c
 24121  014886  0E00               	movlw	0
 24122  014888  5ADD               	subwfb	postdec2,f,c
 24123  01488A                     l7872:
 24124                           
 24125                           ;stkvar	_b @ sp[(-13)+-4]
 24126  01488A  0EF1               	movlw	-15
 24127  01488C  AEE3               	btfss	plusw1,7,c
 24128  01488E  D7DC               	goto	l7862
 24129                           
 24130                           ;stkvar	_aexp @ sp[(-13)+10]
 24131  014890  0EFD               	movlw	-3
 24132  014892  6AE3               	clrf	plusw1,c
 24133                           
 24134                           ;stkvar	_grs @ sp[(-13)+0]
 24135  014894  0EF6               	movlw	-10
 24136  014896  AEE3               	btfss	plusw1,7,c
 24137  014898  D020               	goto	l7886
 24138                           
 24139                           ;stkvar	_grs @ sp[(-13)+0]
 24140  01489A  50E1               	movf	fsr1l,w,c
 24141  01489C  0FF3               	addlw	-13
 24142  01489E  6ED9               	movwf	fsr2l,c
 24143  0148A0  50E2               	movf	fsr1h,w,c
 24144  0148A2  6EDA               	movwf	fsr2h,c
 24145  0148A4  0EFF               	movlw	255
 24146  0148A6  22DA               	addwfc	fsr2h,f,c
 24147  0148A8  0EFF               	movlw	255
 24148  0148AA  14DE               	andwf	postinc2,w,c
 24149  0148AC  6E09               	movwf	(btemp+8)^0,c
 24150  0148AE  0EFF               	movlw	255
 24151  0148B0  14DE               	andwf	postinc2,w,c
 24152  0148B2  6E0A               	movwf	(btemp+9)^0,c
 24153  0148B4  0EFF               	movlw	255
 24154  0148B6  14DE               	andwf	postinc2,w,c
 24155  0148B8  6E0B               	movwf	(btemp+10)^0,c
 24156  0148BA  0E7F               	movlw	127
 24157  0148BC  14DE               	andwf	postinc2,w,c
 24158  0148BE  6E0C               	movwf	(btemp+11)^0,c
 24159  0148C0  5009               	movf	(btemp+8)^0,w,c
 24160  0148C2  100A               	iorwf	(btemp+9)^0,w,c
 24161  0148C4  100B               	iorwf	(btemp+10)^0,w,c
 24162  0148C6  100C               	iorwf	(btemp+11)^0,w,c
 24163  0148C8  B4D8               	btfsc	status,2,c
 24164  0148CA  D004               	goto	l7882
 24165  0148CC                     u6310:
 24166                           
 24167                           ;stkvar	_aexp @ sp[(-13)+10]
 24168  0148CC  0EFD               	movlw	-3
 24169  0148CE  6AE3               	clrf	plusw1,c
 24170  0148D0  2AE3               	incf	plusw1,f,c
 24171  0148D2  D003               	goto	l7886
 24172  0148D4                     l7882:
 24173                           
 24174                           ;stkvar	_b @ sp[(-13)+-4]
 24175  0148D4  0EEF               	movlw	-17
 24176  0148D6  B0E3               	btfsc	plusw1,0,c
 24177  0148D8  D7F9               	goto	u6310
 24178  0148DA                     l7886:
 24179                           
 24180                           ;stkvar	_aexp @ sp[(-13)+10]
 24181  0148DA  0EFD               	movlw	-3
 24182  0148DC  50E3               	movf	plusw1,w,c
 24183  0148DE  B4D8               	btfsc	status,2,c
 24184  0148E0  D036               	goto	l7896
 24185                           
 24186                           ;stkvar	_b @ sp[(-13)+-4]
 24187  0148E2  50E1               	movf	fsr1l,w,c
 24188  0148E4  0FEF               	addlw	-17
 24189  0148E6  6ED9               	movwf	fsr2l,c
 24190  0148E8  50E2               	movf	fsr1h,w,c
 24191  0148EA  6EDA               	movwf	fsr2h,c
 24192  0148EC  0EFF               	movlw	255
 24193  0148EE  22DA               	addwfc	fsr2h,f,c
 24194  0148F0  2ADE               	incf	postinc2,f,c
 24195  0148F2  0E00               	movlw	0
 24196  0148F4  22DE               	addwfc	postinc2,f,c
 24197  0148F6  22DE               	addwfc	postinc2,f,c
 24198  0148F8  22DE               	addwfc	postinc2,f,c
 24199                           
 24200                           ;stkvar	_b @ sp[(-13)+-4]
 24201  0148FA  0EF2               	movlw	-14
 24202  0148FC  A0E3               	btfss	plusw1,0,c
 24203  0148FE  D027               	goto	l7896
 24204  014900  0E01               	movlw	1
 24205  014902  6E0C               	movwf	(btemp+11)^0,c
 24206                           
 24207                           ;stkvar	_b @ sp[(-13)+-4]
 24208  014904  50E1               	movf	fsr1l,w,c
 24209  014906  0FEF               	addlw	-17
 24210  014908  6ED9               	movwf	fsr2l,c
 24211  01490A  50E2               	movf	fsr1h,w,c
 24212  01490C  6EDA               	movwf	fsr2h,c
 24213  01490E  0EFF               	movlw	255
 24214  014910  22DA               	addwfc	fsr2h,f,c
 24215  014912  280C               	incf	(btemp+11)^0,w,c
 24216  014914  52DE               	movf	postinc2,f,c
 24217  014916  D008               	goto	u6350
 24218  014918                     u6355:
 24219  014918  52DE               	movf	postinc2,f,c
 24220  01491A  90D8               	bcf	status,0,c
 24221  01491C  BEDC               	btfsc	preinc2,7,c
 24222  01491E  80D8               	bsf	status,0,c
 24223  014920  32DD               	rrcf	postdec2,f,c
 24224  014922  32DD               	rrcf	postdec2,f,c
 24225  014924  32DD               	rrcf	postdec2,f,c
 24226  014926  32DE               	rrcf	postinc2,f,c
 24227  014928                     u6350:
 24228  014928  2EE8               	decfsz	wreg,f,c
 24229  01492A  D7F6               	goto	u6355
 24230                           
 24231                           ;stkvar	_new_exp @ sp[(-13)+8]
 24232  01492C  0EFB               	movlw	-5
 24233  01492E  50E3               	movf	plusw1,w,c
 24234  014930  0F01               	addlw	1
 24235  014932  6E01               	movwf	btemp^0,c
 24236  014934  0EFB               	movlw	-5
 24237  014936  0060  F007  FFE3   	movff	btemp,plusw1
 24238  01493C  6A01               	clrf	btemp^0,c
 24239  01493E  0EFC               	movlw	-4
 24240  014940  50E3               	movf	plusw1,w,c
 24241  014942  2001               	addwfc	btemp^0,w,c
 24242  014944  6E01               	movwf	btemp^0,c
 24243  014946  0EFC               	movlw	-4
 24244  014948  0060  F007  FFE3   	movff	btemp,plusw1
 24245  01494E                     l7896:
 24246                           
 24247                           ;stkvar	_new_exp @ sp[(-13)+8]
 24248  01494E  0EFC               	movlw	-4
 24249  014950  BEE3               	btfsc	plusw1,7,c
 24250  014952  D01B               	goto	l7902
 24251  014954  0EFC               	movlw	-4
 24252  014956  50E3               	movf	plusw1,w,c
 24253  014958  E104               	bnz	u6360
 24254  01495A  0EFB               	movlw	-5
 24255  01495C  28E3               	incf	plusw1,w,c
 24256  01495E  A0D8               	btfss	status,0,c
 24257  014960  D014               	goto	l7902
 24258  014962                     u6360:
 24259  014962  0EFF               	movlw	255
 24260  014964  6E0B               	movwf	(btemp+10)^0,c
 24261  014966  0E00               	movlw	0
 24262  014968  6E0C               	movwf	(btemp+11)^0,c
 24263                           
 24264                           ;stkvar	_new_exp @ sp[(-13)+8]
 24265  01496A  0EFB               	movlw	-5
 24266  01496C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24267  014972  0EFC               	movlw	-4
 24268  014974  0060  F033  FFE3   	movff	btemp+11,plusw1
 24269                           
 24270                           ;stkvar	_b @ sp[(-13)+-4]
 24271  01497A  0EEF               	movlw	-17
 24272  01497C  6AE3               	clrf	plusw1,c
 24273  01497E  0EF0               	movlw	-16
 24274  014980  6AE3               	clrf	plusw1,c
 24275  014982  0EF1               	movlw	-15
 24276  014984  6AE3               	clrf	plusw1,c
 24277  014986  0EF2               	movlw	-14
 24278  014988  6AE3               	clrf	plusw1,c
 24279  01498A                     l7902:
 24280                           
 24281                           ;stkvar	_new_exp @ sp[(-13)+8]
 24282  01498A  0EFC               	movlw	-4
 24283  01498C  BEE3               	btfsc	plusw1,7,c
 24284  01498E  D007               	goto	u6370
 24285  014990  0EFC               	movlw	-4
 24286  014992  50E3               	movf	plusw1,w,c
 24287  014994  E112               	bnz	l7908
 24288  014996  0EFB               	movlw	-5
 24289  014998  04E3               	decf	plusw1,w,c
 24290  01499A  B0D8               	btfsc	status,0,c
 24291  01499C  D00E               	goto	l7908
 24292  01499E                     u6370:
 24293                           
 24294                           ;stkvar	_new_exp @ sp[(-13)+8]
 24295  01499E  0EFB               	movlw	-5
 24296  0149A0  6AE3               	clrf	plusw1,c
 24297  0149A2  0EFC               	movlw	-4
 24298  0149A4  6AE3               	clrf	plusw1,c
 24299                           
 24300                           ;stkvar	_b @ sp[(-13)+-4]
 24301  0149A6  0EEF               	movlw	-17
 24302  0149A8  6AE3               	clrf	plusw1,c
 24303  0149AA  0EF0               	movlw	-16
 24304  0149AC  6AE3               	clrf	plusw1,c
 24305  0149AE  0EF1               	movlw	-15
 24306  0149B0  6AE3               	clrf	plusw1,c
 24307  0149B2  0EF2               	movlw	-14
 24308  0149B4  6AE3               	clrf	plusw1,c
 24309                           
 24310                           ;stkvar	_sign @ sp[(-13)+12]
 24311  0149B6  0EFF               	movlw	-1
 24312  0149B8  6AE3               	clrf	plusw1,c
 24313  0149BA                     l7908:
 24314                           
 24315                           ;stkvar	_new_exp @ sp[(-13)+8]
 24316                           ;stkvar	_bexp @ sp[(-13)+11]
 24317  0149BA  0EFB               	movlw	-5
 24318  0149BC  006F FF8C  F001    	movff	plusw1,btemp
 24319  0149C2  0EFE               	movlw	-2
 24320  0149C4  0060  F007  FFE3   	movff	btemp,plusw1
 24321                           
 24322                           ;stkvar	_bexp @ sp[(-13)+11]
 24323  0149CA  0EFE               	movlw	-2
 24324  0149CC  A0E3               	btfss	plusw1,0,c
 24325  0149CE  D009               	goto	l7914
 24326                           
 24327                           ;stkvar	_b @ sp[(-13)+-4]
 24328  0149D0  0EF1               	movlw	241
 24329  0149D2  24E1               	addwf	fsr1l,w,c
 24330  0149D4  6ED9               	movwf	fsr2l,c
 24331  0149D6  0EFF               	movlw	255
 24332  0149D8  20E2               	addwfc	fsr1h,w,c
 24333  0149DA  6EDA               	movwf	fsr2h,c
 24334  0149DC  0E00               	movlw	0
 24335  0149DE  8EDB               	bsf	plusw2,7,c
 24336  0149E0  D008               	goto	l7916
 24337  0149E2                     l7914:
 24338                           
 24339                           ;stkvar	_b @ sp[(-13)+-4]
 24340  0149E2  0EF1               	movlw	241
 24341  0149E4  24E1               	addwf	fsr1l,w,c
 24342  0149E6  6ED9               	movwf	fsr2l,c
 24343  0149E8  0EFF               	movlw	255
 24344  0149EA  20E2               	addwfc	fsr1h,w,c
 24345  0149EC  6EDA               	movwf	fsr2h,c
 24346  0149EE  0E7F               	movlw	127
 24347  0149F0  16DF               	andwf	indf2,f,c
 24348  0149F2                     l7916:
 24349                           
 24350                           ;stkvar	_b @ sp[(-13)+-4]
 24351  0149F2  0EF2               	movlw	242
 24352  0149F4  24E1               	addwf	fsr1l,w,c
 24353  0149F6  6ED9               	movwf	fsr2l,c
 24354  0149F8  0EFF               	movlw	255
 24355  0149FA  20E2               	addwfc	fsr1h,w,c
 24356  0149FC  6EDA               	movwf	fsr2h,c
 24357                           
 24358                           ;stkvar	_bexp @ sp[(-13)+11]
 24359  0149FE  0EFE               	movlw	-2
 24360  014A00  006F FF8C  F00C    	movff	plusw1,btemp+11
 24361  014A06  90D8               	bcf	status,0,c
 24362  014A08  300C               	rrcf	(btemp+11)^0,w,c
 24363  014A0A  6EDF               	movwf	indf2,c
 24364  014A0C  D644               	goto	l7814
 24365  014A0E                     l2917:
 24366                           
 24367                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 24368  014A0E  0EEB               	movlw	235
 24369  014A10  26E1               	addwf	fsr1l,f,c
 24370  014A12  0EFF               	movlw	255
 24371  014A14  22E2               	addwfc	fsr1h,f,c
 24372  014A16  0012               	return		;funcret
 24373  014A18                     __end_of___fldiv:
 24374                           	opt callstack 0
 24375                           
 24376 ;; *************** function ___flge *****************
 24377 ;; Defined at:
 24378 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 24379 ;; Parameters:    Size  Location     Type
 24380 ;;  ff1             4  [STACK] unsigned char 
 24381 ;;  ff2             4  [STACK] unsigned char 
 24382 ;; Auto vars:     Size  Location     Type
 24383 ;;		None
 24384 ;; Return value:  Size  Location     Type
 24385 ;;		None               void
 24386 ;; Registers used:
 24387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24388 ;; Tracked objects:
 24389 ;;		On entry : 0/0
 24390 ;;		On exit  : 0/0
 24391 ;;		Unchanged: 0/0
 24392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24397 ;;Total ram usage:        0 bytes
 24398 ;; Hardware stack levels used:    1
 24399 ;; Hardware stack levels required when called:   15
 24400 ;; This function calls:
 24401 ;;		Nothing
 24402 ;; This function is called by:
 24403 ;;		_main
 24404 ;;		_calc_ror_data
 24405 ;;		_calc_bsoc
 24406 ;;		_efgtoa
 24407 ;; This function uses a reentrant model
 24408 ;;
 24409                           
 24410                           	psect	text99
 24411  01816E                     __ptext99:
 24412                           	opt callstack 0
 24413  01816E                     ___flge:
 24414                           	opt callstack 0
 24415                           
 24416                           ;stkvar	_ff1 @ sp[(0)+-4]
 24417                           
 24418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24419                           ;incstack = 0
 24420 ;; hardware stack exceeded
 24421  01816E  50E1               	movf	fsr1l,w,c
 24422  018170  0FFC               	addlw	-4
 24423  018172  6ED9               	movwf	fsr2l,c
 24424  018174  50E2               	movf	fsr1h,w,c
 24425  018176  6EDA               	movwf	fsr2h,c
 24426  018178  0EFF               	movlw	255
 24427  01817A  22DA               	addwfc	fsr2h,f,c
 24428  01817C  0E00               	movlw	0
 24429  01817E  14DE               	andwf	postinc2,w,c
 24430  018180  6E09               	movwf	(btemp+8)^0,c
 24431  018182  0E00               	movlw	0
 24432  018184  14DE               	andwf	postinc2,w,c
 24433  018186  6E0A               	movwf	(btemp+9)^0,c
 24434  018188  0E80               	movlw	128
 24435  01818A  14DE               	andwf	postinc2,w,c
 24436  01818C  6E0B               	movwf	(btemp+10)^0,c
 24437  01818E  0E7F               	movlw	127
 24438  018190  14DE               	andwf	postinc2,w,c
 24439  018192  6E0C               	movwf	(btemp+11)^0,c
 24440  018194  5009               	movf	(btemp+8)^0,w,c
 24441  018196  100A               	iorwf	(btemp+9)^0,w,c
 24442  018198  100B               	iorwf	(btemp+10)^0,w,c
 24443  01819A  100C               	iorwf	(btemp+11)^0,w,c
 24444  01819C  A4D8               	btfss	status,2,c
 24445  01819E  D008               	goto	l8190
 24446                           
 24447                           ;stkvar	_ff1 @ sp[(0)+-4]
 24448  0181A0  0EFC               	movlw	-4
 24449  0181A2  6AE3               	clrf	plusw1,c
 24450  0181A4  0EFD               	movlw	-3
 24451  0181A6  6AE3               	clrf	plusw1,c
 24452  0181A8  0EFE               	movlw	-2
 24453  0181AA  6AE3               	clrf	plusw1,c
 24454  0181AC  0EFF               	movlw	-1
 24455  0181AE  6AE3               	clrf	plusw1,c
 24456  0181B0                     l8190:
 24457                           
 24458                           ;stkvar	_ff2 @ sp[(0)+-8]
 24459  0181B0  50E1               	movf	fsr1l,w,c
 24460  0181B2  0FF8               	addlw	-8
 24461  0181B4  6ED9               	movwf	fsr2l,c
 24462  0181B6  50E2               	movf	fsr1h,w,c
 24463  0181B8  6EDA               	movwf	fsr2h,c
 24464  0181BA  0EFF               	movlw	255
 24465  0181BC  22DA               	addwfc	fsr2h,f,c
 24466  0181BE  0E00               	movlw	0
 24467  0181C0  14DE               	andwf	postinc2,w,c
 24468  0181C2  6E09               	movwf	(btemp+8)^0,c
 24469  0181C4  0E00               	movlw	0
 24470  0181C6  14DE               	andwf	postinc2,w,c
 24471  0181C8  6E0A               	movwf	(btemp+9)^0,c
 24472  0181CA  0E80               	movlw	128
 24473  0181CC  14DE               	andwf	postinc2,w,c
 24474  0181CE  6E0B               	movwf	(btemp+10)^0,c
 24475  0181D0  0E7F               	movlw	127
 24476  0181D2  14DE               	andwf	postinc2,w,c
 24477  0181D4  6E0C               	movwf	(btemp+11)^0,c
 24478  0181D6  5009               	movf	(btemp+8)^0,w,c
 24479  0181D8  100A               	iorwf	(btemp+9)^0,w,c
 24480  0181DA  100B               	iorwf	(btemp+10)^0,w,c
 24481  0181DC  100C               	iorwf	(btemp+11)^0,w,c
 24482  0181DE  A4D8               	btfss	status,2,c
 24483  0181E0  D008               	goto	l2598
 24484                           
 24485                           ;stkvar	_ff2 @ sp[(0)+-8]
 24486  0181E2  0EF8               	movlw	-8
 24487  0181E4  6AE3               	clrf	plusw1,c
 24488  0181E6  0EF9               	movlw	-7
 24489  0181E8  6AE3               	clrf	plusw1,c
 24490  0181EA  0EFA               	movlw	-6
 24491  0181EC  6AE3               	clrf	plusw1,c
 24492  0181EE  0EFB               	movlw	-5
 24493  0181F0  6AE3               	clrf	plusw1,c
 24494  0181F2                     l2598:
 24495                           
 24496                           ;stkvar	_ff1 @ sp[(0)+-4]
 24497  0181F2  0EFF               	movlw	-1
 24498  0181F4  AEE3               	btfss	plusw1,7,c
 24499  0181F6  D024               	goto	l8196
 24500                           
 24501                           ;stkvar	_ff1 @ sp[(0)+-4]
 24502  0181F8  0E00               	movlw	0
 24503  0181FA  6E09               	movwf	(btemp+8)^0,c
 24504  0181FC  0E00               	movlw	0
 24505  0181FE  6E0A               	movwf	(btemp+9)^0,c
 24506  018200  0E00               	movlw	0
 24507  018202  6E0B               	movwf	(btemp+10)^0,c
 24508  018204  0E80               	movlw	128
 24509  018206  6E0C               	movwf	(btemp+11)^0,c
 24510  018208  0EFC               	movlw	-4
 24511  01820A  50E3               	movf	plusw1,w,c
 24512  01820C  5E09               	subwf	(btemp+8)^0,f,c
 24513  01820E  0EFD               	movlw	-3
 24514  018210  50E3               	movf	plusw1,w,c
 24515  018212  5A0A               	subwfb	(btemp+9)^0,f,c
 24516  018214  0EFE               	movlw	-2
 24517  018216  50E3               	movf	plusw1,w,c
 24518  018218  5A0B               	subwfb	(btemp+10)^0,f,c
 24519  01821A  0EFF               	movlw	-1
 24520  01821C  50E3               	movf	plusw1,w,c
 24521  01821E  5A0C               	subwfb	(btemp+11)^0,f,c
 24522                           
 24523                           ;stkvar	_ff1 @ sp[(0)+-4]
 24524  018220  0EFC               	movlw	-4
 24525  018222  0060  F027  FFE3   	movff	btemp+8,plusw1
 24526  018228  0EFD               	movlw	-3
 24527  01822A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24528  018230  0EFE               	movlw	-2
 24529  018232  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24530  018238  0EFF               	movlw	-1
 24531  01823A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24532  018240                     l8196:
 24533                           
 24534                           ;stkvar	_ff2 @ sp[(0)+-8]
 24535  018240  0EFB               	movlw	-5
 24536  018242  AEE3               	btfss	plusw1,7,c
 24537  018244  D024               	goto	l8200
 24538                           
 24539                           ;stkvar	_ff2 @ sp[(0)+-8]
 24540  018246  0E00               	movlw	0
 24541  018248  6E09               	movwf	(btemp+8)^0,c
 24542  01824A  0E00               	movlw	0
 24543  01824C  6E0A               	movwf	(btemp+9)^0,c
 24544  01824E  0E00               	movlw	0
 24545  018250  6E0B               	movwf	(btemp+10)^0,c
 24546  018252  0E80               	movlw	128
 24547  018254  6E0C               	movwf	(btemp+11)^0,c
 24548  018256  0EF8               	movlw	-8
 24549  018258  50E3               	movf	plusw1,w,c
 24550  01825A  5E09               	subwf	(btemp+8)^0,f,c
 24551  01825C  0EF9               	movlw	-7
 24552  01825E  50E3               	movf	plusw1,w,c
 24553  018260  5A0A               	subwfb	(btemp+9)^0,f,c
 24554  018262  0EFA               	movlw	-6
 24555  018264  50E3               	movf	plusw1,w,c
 24556  018266  5A0B               	subwfb	(btemp+10)^0,f,c
 24557  018268  0EFB               	movlw	-5
 24558  01826A  50E3               	movf	plusw1,w,c
 24559  01826C  5A0C               	subwfb	(btemp+11)^0,f,c
 24560                           
 24561                           ;stkvar	_ff2 @ sp[(0)+-8]
 24562  01826E  0EF8               	movlw	-8
 24563  018270  0060  F027  FFE3   	movff	btemp+8,plusw1
 24564  018276  0EF9               	movlw	-7
 24565  018278  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24566  01827E  0EFA               	movlw	-6
 24567  018280  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24568  018286  0EFB               	movlw	-5
 24569  018288  0060  F033  FFE3   	movff	btemp+11,plusw1
 24570  01828E                     l8200:
 24571                           
 24572                           ;stkvar	_ff1 @ sp[(0)+-4]
 24573  01828E  0EFF               	movlw	-1
 24574  018290  7EE3               	btg	plusw1,7,c
 24575                           
 24576                           ;stkvar	_ff2 @ sp[(0)+-8]
 24577  018292  0EFB               	movlw	-5
 24578  018294  7EE3               	btg	plusw1,7,c
 24579                           
 24580                           ;stkvar	_ff2 @ sp[(0)+-8]
 24581                           ;stkvar	_ff1 @ sp[(0)+-4]
 24582  018296  50E1               	movf	fsr1l,w,c
 24583  018298  0FFC               	addlw	-4
 24584  01829A  6ED9               	movwf	fsr2l,c
 24585  01829C  50E2               	movf	fsr1h,w,c
 24586  01829E  6EDA               	movwf	fsr2h,c
 24587  0182A0  0EFF               	movlw	255
 24588  0182A2  22DA               	addwfc	fsr2h,f,c
 24589  0182A4  0EF8               	movlw	-8
 24590  0182A6  50E3               	movf	plusw1,w,c
 24591  0182A8  5CDE               	subwf	postinc2,w,c
 24592  0182AA  0EF9               	movlw	-7
 24593  0182AC  50E3               	movf	plusw1,w,c
 24594  0182AE  58DE               	subwfb	postinc2,w,c
 24595  0182B0  0EFA               	movlw	-6
 24596  0182B2  50E3               	movf	plusw1,w,c
 24597  0182B4  58DE               	subwfb	postinc2,w,c
 24598  0182B6  0EFB               	movlw	-5
 24599  0182B8  50E3               	movf	plusw1,w,c
 24600  0182BA  58DE               	subwfb	postinc2,w,c
 24601  0182BC  B0D8               	btfsc	status,0,c
 24602  0182BE  D002               	goto	l8208
 24603  0182C0  9001               	bcf	btemp& (0+255),0,c
 24604  0182C2  D001               	goto	l2605
 24605  0182C4                     l8208:
 24606  0182C4  8001               	bsf	btemp& (0+255),0,c
 24607  0182C6                     l2605:
 24608                           
 24609                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 24610  0182C6  0EF8               	movlw	248
 24611  0182C8  26E1               	addwf	fsr1l,f,c
 24612  0182CA  0EFF               	movlw	255
 24613  0182CC  22E2               	addwfc	fsr1h,f,c
 24614  0182CE  0012               	return		;funcret
 24615  0182D0                     __end_of___flge:
 24616                           	opt callstack 0
 24617                           
 24618 ;; *************** function _calc_model_data *****************
 24619 ;; Defined at:
 24620 ;;		line 67 in file "mbmc.c"
 24621 ;; Parameters:    Size  Location     Type
 24622 ;;		None
 24623 ;; Auto vars:     Size  Location     Type
 24624 ;;		None
 24625 ;; Return value:  Size  Location     Type
 24626 ;;                  1  [STACK] void 
 24627 ;; Registers used:
 24628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24629 ;; Tracked objects:
 24630 ;;		On entry : 0/0
 24631 ;;		On exit  : 3F/1
 24632 ;;		Unchanged: 0/0
 24633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24638 ;;Total ram usage:        0 bytes
 24639 ;; Hardware stack levels used:    1
 24640 ;; Hardware stack levels required when called:   18
 24641 ;; This function calls:
 24642 ;;		___fladd
 24643 ;;		___flmul
 24644 ;;		___flsub
 24645 ;;		_lp_filter
 24646 ;;		_start_bsoc
 24647 ;;		_stop_bsoc
 24648 ;; This function is called by:
 24649 ;;		_main
 24650 ;; This function uses a reentrant model
 24651 ;;
 24652                           
 24653                           	psect	text100
 24654  0156FE                     __ptext100:
 24655                           	opt callstack 0
 24656  0156FE                     _calc_model_data:
 24657                           	opt callstack 12
 24658                           
 24659                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 24660                           
 24661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24662                           ;incstack = 0
 24663  0156FE  ECC6  F0D8         	call	_stop_bsoc	;wreg free
 24664                           
 24665                           ; BSR set to: 57
 24666                           ;mbmc.c: 72:  if (!V.calib) {
 24667  015702  0102               	movlb	2	; () banked
 24668  015704  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 24669  015706  A4D8               	btfss	status,2,c
 24670  015708  D1C5               	goto	l10496
 24671                           
 24672                           ; BSR set to: 2
 24673                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 24674  01570A  C100  F144         	movff	_C,_C+68	;volatile
 24675  01570E  C101  F145         	movff	_C+1,_C+69	;volatile
 24676  015712  C102  F146         	movff	_C+2,_C+70	;volatile
 24677  015716  C103  F147         	movff	_C+3,_C+71	;volatile
 24678                           
 24679                           ; BSR set to: 2
 24680                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 24681  01571A  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 24682  015720  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 24683  015726  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 24684  01572C  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 24685  015732  0060  F513  FFE6   	movff	_C+68,postinc1
 24686  015738  0060  F517  FFE6   	movff	_C+69,postinc1
 24687  01573E  0060  F51B  FFE6   	movff	_C+70,postinc1
 24688  015744  0060  F51F  FFE6   	movff	_C+71,postinc1
 24689  01574A  EC81  F0D2         	call	___flsub	;wreg free
 24690  01574E  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 24691  015754  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 24692  01575A  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 24693  015760  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 24694                           
 24695                           ;mbmc.c: 75:   bcror = C.c_bat;
 24696  015766  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 24697  01576A  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 24698  01576E  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 24699  015772  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 24700                           
 24701                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 24702  015776  C104  F148         	movff	_C+4,_C+72	;volatile
 24703  01577A  C105  F149         	movff	_C+5,_C+73	;volatile
 24704  01577E  C106  F14A         	movff	_C+6,_C+74	;volatile
 24705  015782  C107  F14B         	movff	_C+7,_C+75	;volatile
 24706                           
 24707                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 24708  015786  C110  F154         	movff	_C+16,_C+84	;volatile
 24709  01578A  C111  F155         	movff	_C+17,_C+85	;volatile
 24710  01578E  C112  F156         	movff	_C+18,_C+86	;volatile
 24711  015792  C113  F157         	movff	_C+19,_C+87	;volatile
 24712                           
 24713                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 24714  015796  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 24715  01579C  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 24716  0157A2  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 24717  0157A8  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 24718  0157AE  0060  F553  FFE6   	movff	_C+84,postinc1
 24719  0157B4  0060  F557  FFE6   	movff	_C+85,postinc1
 24720  0157BA  0060  F55B  FFE6   	movff	_C+86,postinc1
 24721  0157C0  0060  F55F  FFE6   	movff	_C+87,postinc1
 24722  0157C6  EC81  F0D2         	call	___flsub	;wreg free
 24723  0157CA  0060  F004  F168   	movff	btemp,_C+104	;volatile
 24724  0157D0  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 24725  0157D6  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 24726  0157DC  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 24727                           
 24728                           ;mbmc.c: 79:   bvror = C.v_bat;
 24729  0157E2  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 24730  0157E6  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 24731  0157EA  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 24732  0157EE  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 24733                           
 24734                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 24735  0157F2  C114  F150         	movff	_C+20,_C+80	;volatile
 24736  0157F6  C115  F151         	movff	_C+21,_C+81	;volatile
 24737  0157FA  C116  F152         	movff	_C+22,_C+82	;volatile
 24738  0157FE  C117  F153         	movff	_C+23,_C+83	;volatile
 24739                           
 24740                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 24741  015802  C108  F14C         	movff	_C+8,_C+76	;volatile
 24742  015806  C109  F14D         	movff	_C+9,_C+77	;volatile
 24743  01580A  C10A  F14E         	movff	_C+10,_C+78	;volatile
 24744  01580E  C10B  F14F         	movff	_C+11,_C+79	;volatile
 24745                           
 24746                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 24747  015812  C130  F164         	movff	_C+48,_C+100	;volatile
 24748  015816  C131  F165         	movff	_C+49,_C+101	;volatile
 24749  01581A  C132  F166         	movff	_C+50,_C+102	;volatile
 24750  01581E  C133  F167         	movff	_C+51,_C+103	;volatile
 24751                           
 24752                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 24753  015822  0E01               	movlw	1
 24754  015824  6EE6               	movwf	postinc1,c
 24755  015826  0E10               	movlw	16
 24756  015828  6EE6               	movwf	postinc1,c
 24757  01582A  0060  F403  FFE6   	movff	_C,postinc1
 24758  015830  0060  F407  FFE6   	movff	_C+1,postinc1
 24759  015836  0060  F40B  FFE6   	movff	_C+2,postinc1
 24760  01583C  0060  F40F  FFE6   	movff	_C+3,postinc1
 24761  015842  0060  F413  FFE6   	movff	_C+4,postinc1
 24762  015848  0060  F417  FFE6   	movff	_C+5,postinc1
 24763  01584E  0060  F41B  FFE6   	movff	_C+6,postinc1
 24764  015854  0060  F41F  FFE6   	movff	_C+7,postinc1
 24765  01585A  EC81  F0D2         	call	___flsub	;wreg free
 24766  01585E  0060  F007  FFE6   	movff	btemp,postinc1
 24767  015864  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24768  01586A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24769  015870  0060  F013  FFE6   	movff	btemp+3,postinc1
 24770  015876  EC23  F0BC         	call	_lp_filter	;wreg free
 24771  01587A  0060  F004  F140   	movff	btemp,_C+64	;volatile
 24772  015880  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 24773  015886  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 24774  01588C  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 24775                           
 24776                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 24777  015892  0E01               	movlw	1
 24778  015894  6EE6               	movwf	postinc1,c
 24779  015896  0E11               	movlw	17
 24780  015898  6EE6               	movwf	postinc1,c
 24781  01589A  0060  F553  FFE6   	movff	_C+84,postinc1
 24782  0158A0  0060  F557  FFE6   	movff	_C+85,postinc1
 24783  0158A6  0060  F55B  FFE6   	movff	_C+86,postinc1
 24784  0158AC  0060  F55F  FFE6   	movff	_C+87,postinc1
 24785  0158B2  0060  F503  FFE6   	movff	_C+64,postinc1
 24786  0158B8  0060  F507  FFE6   	movff	_C+65,postinc1
 24787  0158BE  0060  F50B  FFE6   	movff	_C+66,postinc1
 24788  0158C4  0060  F50F  FFE6   	movff	_C+67,postinc1
 24789  0158CA  EC0D  F097         	call	___flmul	;wreg free
 24790  0158CE  0060  F007  FFE6   	movff	btemp,postinc1
 24791  0158D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24792  0158DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24793  0158E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24794  0158E6  EC23  F0BC         	call	_lp_filter	;wreg free
 24795  0158EA  0060  F004  F170   	movff	btemp,_C+112	;volatile
 24796  0158F0  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 24797  0158F6  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 24798  0158FC  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 24799                           
 24800                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 24801  015902  0E01               	movlw	1
 24802  015904  6EE6               	movwf	postinc1,c
 24803  015906  0E12               	movlw	18
 24804  015908  6EE6               	movwf	postinc1,c
 24805  01590A  0060  F543  FFE6   	movff	_C+80,postinc1
 24806  015910  0060  F547  FFE6   	movff	_C+81,postinc1
 24807  015916  0060  F54B  FFE6   	movff	_C+82,postinc1
 24808  01591C  0060  F54F  FFE6   	movff	_C+83,postinc1
 24809  015922  0060  F523  FFE6   	movff	_C+72,postinc1
 24810  015928  0060  F527  FFE6   	movff	_C+73,postinc1
 24811  01592E  0060  F52B  FFE6   	movff	_C+74,postinc1
 24812  015934  0060  F52F  FFE6   	movff	_C+75,postinc1
 24813  01593A  EC0D  F097         	call	___flmul	;wreg free
 24814  01593E  0060  F007  FFE6   	movff	btemp,postinc1
 24815  015944  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24816  01594A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24817  015950  0060  F013  FFE6   	movff	btemp+3,postinc1
 24818  015956  EC23  F0BC         	call	_lp_filter	;wreg free
 24819  01595A  0060  F004  F178   	movff	btemp,_C+120	;volatile
 24820  015960  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 24821  015966  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 24822  01596C  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 24823                           
 24824                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 24825  015972  0E01               	movlw	1
 24826  015974  6EE6               	movwf	postinc1,c
 24827  015976  0E13               	movlw	19
 24828  015978  6EE6               	movwf	postinc1,c
 24829  01597A  0E00               	movlw	0
 24830  01597C  6EE6               	movwf	postinc1,c
 24831  01597E  0E00               	movlw	0
 24832  015980  6EE6               	movwf	postinc1,c
 24833  015982  0E60               	movlw	96
 24834  015984  6EE6               	movwf	postinc1,c
 24835  015986  0EC1               	movlw	193
 24836  015988  6EE6               	movwf	postinc1,c
 24837  01598A  0060  F593  FFE6   	movff	_C+100,postinc1
 24838  015990  0060  F597  FFE6   	movff	_C+101,postinc1
 24839  015996  0060  F59B  FFE6   	movff	_C+102,postinc1
 24840  01599C  0060  F59F  FFE6   	movff	_C+103,postinc1
 24841  0159A2  0060  F503  FFE6   	movff	_C+64,postinc1
 24842  0159A8  0060  F507  FFE6   	movff	_C+65,postinc1
 24843  0159AE  0060  F50B  FFE6   	movff	_C+66,postinc1
 24844  0159B4  0060  F50F  FFE6   	movff	_C+67,postinc1
 24845  0159BA  EC0D  F097         	call	___flmul	;wreg free
 24846  0159BE  0060  F007  FFE6   	movff	btemp,postinc1
 24847  0159C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24848  0159CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24849  0159D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24850  0159D6  EC22  F09B         	call	___fladd	;wreg free
 24851  0159DA  0060  F007  FFE6   	movff	btemp,postinc1
 24852  0159E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24853  0159E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24854  0159EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 24855  0159F2  EC23  F0BC         	call	_lp_filter	;wreg free
 24856  0159F6  0060  F004  F174   	movff	btemp,_C+116	;volatile
 24857  0159FC  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 24858  015A02  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 24859  015A08  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 24860                           
 24861                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 24862  015A0E  0E01               	movlw	1
 24863  015A10  6EE6               	movwf	postinc1,c
 24864  015A12  0E14               	movlw	20
 24865  015A14  6EE6               	movwf	postinc1,c
 24866  015A16  0060  F553  FFE6   	movff	_C+84,postinc1
 24867  015A1C  0060  F557  FFE6   	movff	_C+85,postinc1
 24868  015A22  0060  F55B  FFE6   	movff	_C+86,postinc1
 24869  015A28  0060  F55F  FFE6   	movff	_C+87,postinc1
 24870  015A2E  0060  F513  FFE6   	movff	_C+68,postinc1
 24871  015A34  0060  F517  FFE6   	movff	_C+69,postinc1
 24872  015A3A  0060  F51B  FFE6   	movff	_C+70,postinc1
 24873  015A40  0060  F51F  FFE6   	movff	_C+71,postinc1
 24874  015A46  EC0D  F097         	call	___flmul	;wreg free
 24875  015A4A  0060  F007  FFE6   	movff	btemp,postinc1
 24876  015A50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24877  015A56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24878  015A5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24879  015A62  EC23  F0BC         	call	_lp_filter	;wreg free
 24880  015A66  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 24881  015A6C  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 24882  015A72  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 24883  015A78  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 24884                           
 24885                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 24886  015A7E  0101               	movlb	1	; () banked
 24887  015A80  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 24888  015A82  D008               	goto	l10496
 24889                           
 24890                           ; BSR set to: 1
 24891                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 24892  015A84  0E17               	movlw	23
 24893  015A86  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 24894  015A88  0EB7               	movlw	183
 24895  015A8A  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 24896  015A8C  0ED1               	movlw	209
 24897  015A8E  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 24898  015A90  0E38               	movlw	56
 24899  015A92  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 24900  015A94                     l10496:
 24901                           
 24902                           ;mbmc.c: 94:  start_bsoc();
 24903  015A94  EC68  F0D7         	call	_start_bsoc	;wreg free
 24904                           
 24905                           ; BSR set to: 57
 24906                           ;mbmc.c: 95:  C.update = 1;
 24907  015A98  0E01               	movlw	1
 24908  015A9A  0101               	movlb	1	; () banked
 24909  015A9C  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 24910                           
 24911                           ; BSR set to: 1
 24912                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24913  015A9E  0012               	return		;funcret
 24914  015AA0                     __end_of_calc_model_data:
 24915                           	opt callstack 0
 24916                           
 24917 ;; *************** function _stop_bsoc *****************
 24918 ;; Defined at:
 24919 ;;		line 107 in file "bsoc.c"
 24920 ;; Parameters:    Size  Location     Type
 24921 ;;		None
 24922 ;; Auto vars:     Size  Location     Type
 24923 ;;		None
 24924 ;; Return value:  Size  Location     Type
 24925 ;;                  1  [STACK] void 
 24926 ;; Registers used:
 24927 ;;		None
 24928 ;; Tracked objects:
 24929 ;;		On entry : 0/0
 24930 ;;		On exit  : 3F/39
 24931 ;;		Unchanged: 0/0
 24932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24937 ;;Total ram usage:        0 bytes
 24938 ;; Hardware stack levels used:    1
 24939 ;; Hardware stack levels required when called:   15
 24940 ;; This function calls:
 24941 ;;		Nothing
 24942 ;; This function is called by:
 24943 ;;		_calc_model_data
 24944 ;; This function uses a reentrant model
 24945 ;;
 24946                           
 24947                           	psect	text101
 24948  01B18C                     __ptext101:
 24949                           	opt callstack 0
 24950  01B18C                     _stop_bsoc:
 24951                           	opt callstack 14
 24952                           
 24953                           ;bsoc.c: 110:  PIE6bits.TMR3IE = 0;
 24954                           
 24955                           ; BSR set to: 1
 24956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24957                           ;incstack = 0
 24958  01B18C  0139               	movlb	57	; () banked
 24959  01B18E  9D96               	bcf	150,6,b	;volatile
 24960                           
 24961                           ; BSR set to: 57
 24962                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24963  01B190  0012               	return		;funcret
 24964  01B192                     __end_of_stop_bsoc:
 24965                           	opt callstack 0
 24966                           
 24967 ;; *************** function _start_bsoc *****************
 24968 ;; Defined at:
 24969 ;;		line 98 in file "bsoc.c"
 24970 ;; Parameters:    Size  Location     Type
 24971 ;;		None
 24972 ;; Auto vars:     Size  Location     Type
 24973 ;;		None
 24974 ;; Return value:  Size  Location     Type
 24975 ;;                  1  [STACK] void 
 24976 ;; Registers used:
 24977 ;;		wreg, status,2, status,0, btemp+11
 24978 ;; Tracked objects:
 24979 ;;		On entry : 3C/2
 24980 ;;		On exit  : 3F/39
 24981 ;;		Unchanged: 0/0
 24982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24987 ;;Total ram usage:        0 bytes
 24988 ;; Hardware stack levels used:    1
 24989 ;; Hardware stack levels required when called:   15
 24990 ;; This function calls:
 24991 ;;		Nothing
 24992 ;; This function is called by:
 24993 ;;		_calc_model_data
 24994 ;; This function uses a reentrant model
 24995 ;;
 24996                           
 24997                           	psect	text102
 24998  01AED0                     __ptext102:
 24999                           	opt callstack 0
 25000  01AED0                     _start_bsoc:
 25001                           	opt callstack 14
 25002                           
 25003                           ;bsoc.c: 101:  PIE6bits.TMR3IE = 1;
 25004                           
 25005                           ; BSR set to: 57
 25006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25007                           ;incstack = 0
 25008  01AED0  0139               	movlb	57	; () banked
 25009  01AED2  8D96               	bsf	150,6,b	;volatile
 25010                           
 25011                           ; BSR set to: 57
 25012  01AED4  A4BE               	btfss	190,2,c	;volatile
 25013  01AED6  D002               	goto	u9180
 25014  01AED8  0E01               	movlw	1
 25015  01AEDA  D001               	goto	u9186
 25016  01AEDC                     u9180:
 25017  01AEDC  0E00               	movlw	0
 25018  01AEDE                     u9186:
 25019  01AEDE  0AFF               	xorlw	255
 25020  01AEE0  6E0C               	movwf	(btemp+11)^0,c
 25021  01AEE2  460C               	rlncf	(btemp+11)^0,f,c
 25022  01AEE4  460C               	rlncf	(btemp+11)^0,f,c
 25023  01AEE6  50BE               	movf	190,w,c	;volatile
 25024  01AEE8  180C               	xorwf	(btemp+11)^0,w,c
 25025  01AEEA  0BFB               	andlw	-5
 25026  01AEEC  180C               	xorwf	(btemp+11)^0,w,c
 25027  01AEEE  6EBE               	movwf	190,c	;volatile
 25028                           
 25029                           ; BSR set to: 57
 25030                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25031  01AEF0  0012               	return		;funcret
 25032  01AEF2                     __end_of_start_bsoc:
 25033                           	opt callstack 0
 25034                           
 25035 ;; *************** function _lp_filter *****************
 25036 ;; Defined at:
 25037 ;;		line 29 in file "mbmc.c"
 25038 ;; Parameters:    Size  Location     Type
 25039 ;;  new             4  [STACK] const float 
 25040 ;;  bn              1  [STACK] const unsigned char 
 25041 ;;  slow            1  [STACK] const char 
 25042 ;; Auto vars:     Size  Location     Type
 25043 ;;  lp_speed        4  [STACK] float 
 25044 ;; Return value:  Size  Location     Type
 25045 ;;                  4  [STACK] float 
 25046 ;; Registers used:
 25047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25048 ;; Tracked objects:
 25049 ;;		On entry : 0/2
 25050 ;;		On exit  : 0/0
 25051 ;;		Unchanged: 0/0
 25052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25057 ;;Total ram usage:        0 bytes
 25058 ;; Hardware stack levels used:    1
 25059 ;; Hardware stack levels required when called:   17
 25060 ;; This function calls:
 25061 ;;		___fladd
 25062 ;;		___flmul
 25063 ;;		___flsub
 25064 ;; This function is called by:
 25065 ;;		_main
 25066 ;;		_convert_adc_data
 25067 ;;		_calc_model_data
 25068 ;; This function uses a reentrant model
 25069 ;;
 25070                           
 25071                           	psect	text103
 25072  017846                     __ptext103:
 25073                           	opt callstack 0
 25074  017846                     _lp_filter:
 25075                           	opt callstack 0
 25076                           
 25077                           ; BSR set to: 57
 25078                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25079  017846  52E6               	movf	postinc1,f,c
 25080  017848  52E6               	movf	postinc1,f,c
 25081  01784A  52E6               	movf	postinc1,f,c
 25082  01784C  52E6               	movf	postinc1,f,c
 25083                           
 25084                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25085                           ;stkvar	_bn @ sp[(-4)+-5]
 25086                           
 25087                           ;incstack = 0
 25088  01784E  0EF7               	movlw	-9
 25089  017850  006F FF8C  F001    	movff	plusw1,btemp
 25090  017856  0E14               	movlw	20
 25091  017858  6401               	cpfsgt	btemp^0,c
 25092  01785A  D011               	goto	l9946
 25093  01785C                     u9090:
 25094                           
 25095                           ;mbmc.c: 35:   return new;
 25096                           ;stkvar	_new @ sp[(-4)+-4]
 25097  01785C  0EF8               	movlw	-8
 25098  01785E  006F FF8C  F001    	movff	plusw1,btemp
 25099  017864  0EF9               	movlw	-7
 25100  017866  006F FF8C  F002    	movff	plusw1,btemp+1
 25101  01786C  0EFA               	movlw	-6
 25102  01786E  006F FF8C  F003    	movff	plusw1,btemp+2
 25103  017874  0EFB               	movlw	-5
 25104  017876  006F FF8C  F004    	movff	plusw1,btemp+3
 25105  01787C  D0BD               	goto	l1818
 25106  01787E                     l9946:
 25107                           
 25108                           ;mbmc.c: 37:  if (slow == (-1)) {
 25109                           ;stkvar	_slow @ sp[(-4)+-6]
 25110  01787E  0EF6               	movlw	-10
 25111  017880  28E3               	incf	plusw1,w,c
 25112  017882  A4D8               	btfss	status,2,c
 25113  017884  D012               	goto	l9954
 25114                           
 25115                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25116                           ;stkvar	_bn @ sp[(-4)+-5]
 25117  017886  0EF7               	movlw	-9
 25118  017888  50E3               	movf	plusw1,w,c
 25119  01788A  0D04               	mullw	4
 25120  01788C  0E00               	movlw	low lp_filter@smooth
 25121  01788E  24F3               	addwf	243,w,c
 25122  017890  6ED9               	movwf	fsr2l,c
 25123  017892  0E03               	movlw	high lp_filter@smooth
 25124  017894  20F4               	addwfc	prodh,w,c
 25125  017896  6EDA               	movwf	fsr2h,c
 25126  017898  0E00               	movlw	0
 25127  01789A  6EDE               	movwf	postinc2,c
 25128  01789C  0E00               	movlw	0
 25129  01789E  6EDE               	movwf	postinc2,c
 25130  0178A0  0E00               	movlw	0
 25131  0178A2  6EDE               	movwf	postinc2,c
 25132  0178A4  0E00               	movlw	0
 25133  0178A6  6EDD               	movwf	postdec2,c
 25134  0178A8  D7D9               	goto	u9090
 25135  0178AA                     l9954:
 25136                           
 25137                           ;mbmc.c: 42:  if (slow) {
 25138                           ;stkvar	_slow @ sp[(-4)+-6]
 25139  0178AA  0EF6               	movlw	-10
 25140  0178AC  50E3               	movf	plusw1,w,c
 25141  0178AE  B4D8               	btfsc	status,2,c
 25142  0178B0  D006               	goto	l9958
 25143                           
 25144                           ;mbmc.c: 43:   lp_speed = 0.033;
 25145  0178B2  0E02               	movlw	2
 25146  0178B4  6E09               	movwf	(btemp+8)^0,c
 25147  0178B6  0E2B               	movlw	43
 25148  0178B8  6E0A               	movwf	(btemp+9)^0,c
 25149  0178BA  0E07               	movlw	7
 25150  0178BC  D005               	goto	L26
 25151  0178BE                     l9958:
 25152                           
 25153                           ;mbmc.c: 45:   lp_speed = 0.066;
 25154  0178BE  0E02               	movlw	2
 25155  0178C0  6E09               	movwf	(btemp+8)^0,c
 25156  0178C2  0E2B               	movlw	43
 25157  0178C4  6E0A               	movwf	(btemp+9)^0,c
 25158  0178C6  0E87               	movlw	135
 25159  0178C8                     L26:
 25160  0178C8  6E0B               	movwf	(btemp+10)^0,c
 25161  0178CA  0E3D               	movlw	61
 25162  0178CC  6E0C               	movwf	(btemp+11)^0,c
 25163                           
 25164                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25165  0178CE  0EFC               	movlw	-4
 25166  0178D0  0060  F027  FFE3   	movff	btemp+8,plusw1
 25167  0178D6  0EFD               	movlw	-3
 25168  0178D8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25169  0178DE  0EFE               	movlw	-2
 25170  0178E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25171  0178E6  0EFF               	movlw	-1
 25172  0178E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25173                           
 25174                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25175                           ;stkvar	_bn @ sp[(-4)+-5]
 25176  0178EE  0EF7               	movlw	-9
 25177  0178F0  50E3               	movf	plusw1,w,c
 25178  0178F2  0D04               	mullw	4
 25179  0178F4  0E00               	movlw	low lp_filter@smooth
 25180  0178F6  24F3               	addwf	243,w,c
 25181  0178F8  6ED9               	movwf	fsr2l,c
 25182  0178FA  0E03               	movlw	high lp_filter@smooth
 25183  0178FC  20F4               	addwfc	prodh,w,c
 25184  0178FE  6EDA               	movwf	fsr2h,c
 25185  017900  006F FF7B FFE6     	movff	postinc2,postinc1
 25186  017906  006F FF7B FFE6     	movff	postinc2,postinc1
 25187  01790C  006F FF7B FFE6     	movff	postinc2,postinc1
 25188  017912  006F FF7B FFE6     	movff	postinc2,postinc1
 25189                           
 25190                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25191  017918  0EF8               	movlw	-8
 25192  01791A  006F FF8F FFE6     	movff	plusw1,postinc1
 25193  017920  006F FF8F FFE6     	movff	plusw1,postinc1
 25194  017926  006F FF8F FFE6     	movff	plusw1,postinc1
 25195  01792C  006F FF8F FFE6     	movff	plusw1,postinc1
 25196                           
 25197                           ;stkvar	_bn @ sp[(-12)+-5]
 25198  017932  0EEF               	movlw	-17
 25199  017934  50E3               	movf	plusw1,w,c
 25200  017936  0D04               	mullw	4
 25201  017938  0E00               	movlw	low lp_filter@smooth
 25202  01793A  24F3               	addwf	243,w,c
 25203  01793C  6ED9               	movwf	fsr2l,c
 25204  01793E  0E03               	movlw	high lp_filter@smooth
 25205  017940  20F4               	addwfc	prodh,w,c
 25206  017942  6EDA               	movwf	fsr2h,c
 25207  017944  006F FF7B FFE6     	movff	postinc2,postinc1
 25208  01794A  006F FF7B FFE6     	movff	postinc2,postinc1
 25209  017950  006F FF7B FFE6     	movff	postinc2,postinc1
 25210  017956  006F FF7B FFE6     	movff	postinc2,postinc1
 25211                           
 25212                           ;stkvar	_new @ sp[(-16)+-4]
 25213  01795C  0EEC               	movlw	-20
 25214  01795E  006F FF8F FFE6     	movff	plusw1,postinc1
 25215  017964  006F FF8F FFE6     	movff	plusw1,postinc1
 25216  01796A  006F FF8F FFE6     	movff	plusw1,postinc1
 25217  017970  006F FF8F FFE6     	movff	plusw1,postinc1
 25218  017976  EC81  F0D2         	call	___flsub	;wreg free
 25219  01797A  0060  F007  FFE6   	movff	btemp,postinc1
 25220  017980  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25221  017986  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25222  01798C  0060  F013  FFE6   	movff	btemp+3,postinc1
 25223  017992  EC0D  F097         	call	___flmul	;wreg free
 25224  017996  0060  F007  FFE6   	movff	btemp,postinc1
 25225  01799C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25226  0179A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25227  0179A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 25228  0179AE  EC22  F09B         	call	___fladd	;wreg free
 25229                           
 25230                           ;stkvar	_bn @ sp[(-4)+-5]
 25231  0179B2  0EF7               	movlw	-9
 25232  0179B4  50E3               	movf	plusw1,w,c
 25233  0179B6  0D04               	mullw	4
 25234  0179B8  0E00               	movlw	low lp_filter@smooth
 25235  0179BA  24F3               	addwf	243,w,c
 25236  0179BC  6ED9               	movwf	fsr2l,c
 25237  0179BE  0E03               	movlw	high lp_filter@smooth
 25238  0179C0  20F4               	addwfc	prodh,w,c
 25239  0179C2  6EDA               	movwf	fsr2h,c
 25240  0179C4  0060  F007  FFDE   	movff	btemp,postinc2
 25241  0179CA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 25242  0179D0  0060  F00F  FFDE   	movff	btemp+2,postinc2
 25243  0179D6  0060  F013  FFDD   	movff	btemp+3,postdec2
 25244  0179DC  52DD               	movf	postdec2,f,c
 25245  0179DE  52DD               	movf	postdec2,f,c
 25246  0179E0  006F FF78  F001    	movff	postinc2,btemp
 25247  0179E6  006F FF78  F002    	movff	postinc2,btemp+1
 25248  0179EC  006F FF78  F003    	movff	postinc2,btemp+2
 25249  0179F2  006F FF78  F004    	movff	postinc2,btemp+3
 25250  0179F8                     l1818:
 25251                           
 25252                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 25253  0179F8  0EF6               	movlw	246
 25254  0179FA  26E1               	addwf	fsr1l,f,c
 25255  0179FC  0EFF               	movlw	255
 25256  0179FE  22E2               	addwfc	fsr1h,f,c
 25257  017A00  0012               	return		;funcret
 25258  017A02                     __end_of_lp_filter:
 25259                           	opt callstack 0
 25260                           
 25261 ;; *************** function ___flsub *****************
 25262 ;; Defined at:
 25263 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 25264 ;; Parameters:    Size  Location     Type
 25265 ;;  b               4  [STACK] float 
 25266 ;;  a               4  [STACK] float 
 25267 ;; Auto vars:     Size  Location     Type
 25268 ;;		None
 25269 ;; Return value:  Size  Location     Type
 25270 ;;                  4  [STACK] float 
 25271 ;; Registers used:
 25272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25273 ;; Tracked objects:
 25274 ;;		On entry : 0/0
 25275 ;;		On exit  : 0/0
 25276 ;;		Unchanged: 0/0
 25277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25282 ;;Total ram usage:        0 bytes
 25283 ;; Hardware stack levels used:    1
 25284 ;; Hardware stack levels required when called:   16
 25285 ;; This function calls:
 25286 ;;		___fladd
 25287 ;; This function is called by:
 25288 ;;		_conv_raw_result
 25289 ;;		_lp_filter
 25290 ;;		_calc_model_data
 25291 ;;		_calc_ror_data
 25292 ;;		_esr_check
 25293 ;;		_efgtoa
 25294 ;; This function uses a reentrant model
 25295 ;;
 25296                           
 25297                           	psect	text104
 25298  01A502                     __ptext104:
 25299                           	opt callstack 0
 25300  01A502                     ___flsub:
 25301                           	opt callstack 0
 25302                           
 25303                           ;stkvar	_a @ sp[(0)+-8]
 25304                           
 25305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25306                           ;incstack = 0
 25307 ;; hardware stack exceeded
 25308  01A502  0EFB               	movlw	-5
 25309  01A504  7EE3               	btg	plusw1,7,c
 25310                           
 25311                           ;stkvar	_a @ sp[(0)+-8]
 25312  01A506  0EF8               	movlw	-8
 25313  01A508  006F FF8F FFE6     	movff	plusw1,postinc1
 25314  01A50E  006F FF8F FFE6     	movff	plusw1,postinc1
 25315  01A514  006F FF8F FFE6     	movff	plusw1,postinc1
 25316  01A51A  006F FF8F FFE6     	movff	plusw1,postinc1
 25317                           
 25318                           ;stkvar	_b @ sp[(-4)+-4]
 25319  01A520  0EF8               	movlw	-8
 25320  01A522  006F FF8F FFE6     	movff	plusw1,postinc1
 25321  01A528  006F FF8F FFE6     	movff	plusw1,postinc1
 25322  01A52E  006F FF8F FFE6     	movff	plusw1,postinc1
 25323  01A534  006F FF8F FFE6     	movff	plusw1,postinc1
 25324  01A53A  EC22  F09B         	call	___fladd	;wreg free
 25325                           
 25326                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 25327  01A53E  0EF8               	movlw	248
 25328  01A540  26E1               	addwf	fsr1l,f,c
 25329  01A542  0EFF               	movlw	255
 25330  01A544  22E2               	addwfc	fsr1h,f,c
 25331  01A546  0012               	return		;funcret
 25332  01A548                     __end_of___flsub:
 25333                           	opt callstack 0
 25334                           
 25335 ;; *************** function ___fladd *****************
 25336 ;; Defined at:
 25337 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 25338 ;; Parameters:    Size  Location     Type
 25339 ;;  b               4  [STACK] float 
 25340 ;;  a               4  [STACK] float 
 25341 ;; Auto vars:     Size  Location     Type
 25342 ;;  grs             1  [STACK] unsigned char 
 25343 ;;  bexp            1  [STACK] unsigned char 
 25344 ;;  aexp            1  [STACK] unsigned char 
 25345 ;;  signs           1  [STACK] unsigned char 
 25346 ;; Return value:  Size  Location     Type
 25347 ;;                  4  [STACK] unsigned char 
 25348 ;; Registers used:
 25349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25350 ;; Tracked objects:
 25351 ;;		On entry : 0/0
 25352 ;;		On exit  : 0/0
 25353 ;;		Unchanged: 0/0
 25354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;Total ram usage:        0 bytes
 25360 ;; Hardware stack levels used:    1
 25361 ;; Hardware stack levels required when called:   15
 25362 ;; This function calls:
 25363 ;;		Nothing
 25364 ;; This function is called by:
 25365 ;;		_lp_filter
 25366 ;;		_calc_model_data
 25367 ;;		_calc_bsoc
 25368 ;;		_efgtoa
 25369 ;;		___flsub
 25370 ;; This function uses a reentrant model
 25371 ;;
 25372                           
 25373                           	psect	text105
 25374  013644                     __ptext105:
 25375                           	opt callstack 0
 25376  013644                     ___fladd:
 25377                           	opt callstack 0
 25378                           
 25379                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25380  013644  52E6               	movf	postinc1,f,c
 25381  013646  52E6               	movf	postinc1,f,c
 25382  013648  52E6               	movf	postinc1,f,c
 25383  01364A  52E6               	movf	postinc1,f,c
 25384                           
 25385                           ;stkvar	_b @ sp[(-4)+-4]
 25386                           
 25387                           ;incstack = 0
 25388 ;; hardware stack exceeded
 25389  01364C  0EFB               	movlw	251
 25390  01364E  24E1               	addwf	fsr1l,w,c
 25391  013650  6ED9               	movwf	fsr2l,c
 25392  013652  0EFF               	movlw	255
 25393  013654  20E2               	addwfc	fsr1h,w,c
 25394  013656  6EDA               	movwf	fsr2h,c
 25395  013658  50DF               	movf	indf2,w,c
 25396  01365A  6E0C               	movwf	(btemp+11)^0,c
 25397  01365C  0E80               	movlw	128
 25398  01365E  160C               	andwf	(btemp+11)^0,f,c
 25399                           
 25400                           ;stkvar	_signs @ sp[(-4)+3]
 25401  013660  0EFF               	movlw	-1
 25402  013662  0060  F033  FFE3   	movff	btemp+11,plusw1
 25403                           
 25404                           ;stkvar	_b @ sp[(-4)+-4]
 25405  013668  0EFB               	movlw	251
 25406  01366A  24E1               	addwf	fsr1l,w,c
 25407  01366C  6ED9               	movwf	fsr2l,c
 25408  01366E  0EFF               	movlw	255
 25409  013670  20E2               	addwfc	fsr1h,w,c
 25410  013672  6EDA               	movwf	fsr2h,c
 25411  013674  50DF               	movf	indf2,w,c
 25412  013676  6E0C               	movwf	(btemp+11)^0,c
 25413  013678  90D8               	bcf	status,0,c
 25414  01367A  340C               	rlcf	(btemp+11)^0,w,c
 25415  01367C  6E0B               	movwf	(btemp+10)^0,c
 25416                           
 25417                           ;stkvar	_bexp @ sp[(-4)+1]
 25418  01367E  0EFD               	movlw	-3
 25419  013680  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25420                           
 25421                           ;stkvar	_b @ sp[(-4)+-4]
 25422  013686  0EFA               	movlw	250
 25423  013688  24E1               	addwf	fsr1l,w,c
 25424  01368A  6ED9               	movwf	fsr2l,c
 25425  01368C  0EFF               	movlw	255
 25426  01368E  20E2               	addwfc	fsr1h,w,c
 25427  013690  6EDA               	movwf	fsr2h,c
 25428  013692  AEDF               	btfss	indf2,7,c
 25429  013694  D002               	goto	l7340
 25430                           
 25431                           ;stkvar	_bexp @ sp[(-4)+1]
 25432  013696  0EFD               	movlw	-3
 25433  013698  80E3               	bsf	plusw1,0,c
 25434  01369A                     l7340:
 25435                           
 25436                           ;stkvar	_bexp @ sp[(-4)+1]
 25437  01369A  0EFD               	movlw	-3
 25438  01369C  50E3               	movf	plusw1,w,c
 25439  01369E  B4D8               	btfsc	status,2,c
 25440  0136A0  D027               	goto	l7350
 25441                           
 25442                           ;stkvar	_bexp @ sp[(-4)+1]
 25443  0136A2  0EFD               	movlw	-3
 25444  0136A4  28E3               	incf	plusw1,w,c
 25445  0136A6  A4D8               	btfss	status,2,c
 25446  0136A8  D018               	goto	l7346
 25447  0136AA  0E00               	movlw	0
 25448  0136AC  6E09               	movwf	(btemp+8)^0,c
 25449  0136AE  0E00               	movlw	0
 25450  0136B0  6E0A               	movwf	(btemp+9)^0,c
 25451  0136B2  0E00               	movlw	0
 25452  0136B4  6E0B               	movwf	(btemp+10)^0,c
 25453  0136B6  0E00               	movlw	0
 25454  0136B8  6E0C               	movwf	(btemp+11)^0,c
 25455                           
 25456                           ;stkvar	_b @ sp[(-4)+-4]
 25457  0136BA  0EF8               	movlw	-8
 25458  0136BC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25459  0136C2  0EF9               	movlw	-7
 25460  0136C4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25461  0136CA  0EFA               	movlw	-6
 25462  0136CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25463  0136D2  0EFB               	movlw	-5
 25464  0136D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25465  0136DA                     l7346:
 25466                           
 25467                           ;stkvar	_b @ sp[(-4)+-4]
 25468  0136DA  0EFA               	movlw	-6
 25469  0136DC  8EE3               	bsf	plusw1,7,c
 25470                           
 25471                           ;stkvar	_b @ sp[(-4)+-4]
 25472  0136DE  0EFB               	movlw	251
 25473  0136E0  24E1               	addwf	fsr1l,w,c
 25474  0136E2  6ED9               	movwf	fsr2l,c
 25475  0136E4  0EFF               	movlw	255
 25476  0136E6  20E2               	addwfc	fsr1h,w,c
 25477  0136E8  6EDA               	movwf	fsr2h,c
 25478  0136EA  0E00               	movlw	0
 25479  0136EC  6EDF               	movwf	indf2,c
 25480  0136EE  D018               	goto	l7352
 25481  0136F0                     l7350:
 25482  0136F0  0E00               	movlw	0
 25483  0136F2  6E09               	movwf	(btemp+8)^0,c
 25484  0136F4  0E00               	movlw	0
 25485  0136F6  6E0A               	movwf	(btemp+9)^0,c
 25486  0136F8  0E00               	movlw	0
 25487  0136FA  6E0B               	movwf	(btemp+10)^0,c
 25488  0136FC  0E00               	movlw	0
 25489  0136FE  6E0C               	movwf	(btemp+11)^0,c
 25490                           
 25491                           ;stkvar	_b @ sp[(-4)+-4]
 25492  013700  0EF8               	movlw	-8
 25493  013702  0060  F027  FFE3   	movff	btemp+8,plusw1
 25494  013708  0EF9               	movlw	-7
 25495  01370A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25496  013710  0EFA               	movlw	-6
 25497  013712  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25498  013718  0EFB               	movlw	-5
 25499  01371A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25500  013720                     l7352:
 25501                           
 25502                           ;stkvar	_a @ sp[(-4)+-8]
 25503  013720  0EF7               	movlw	247
 25504  013722  24E1               	addwf	fsr1l,w,c
 25505  013724  6ED9               	movwf	fsr2l,c
 25506  013726  0EFF               	movlw	255
 25507  013728  20E2               	addwfc	fsr1h,w,c
 25508  01372A  6EDA               	movwf	fsr2h,c
 25509  01372C  50DF               	movf	indf2,w,c
 25510  01372E  6E0C               	movwf	(btemp+11)^0,c
 25511  013730  0E80               	movlw	128
 25512  013732  160C               	andwf	(btemp+11)^0,f,c
 25513                           
 25514                           ;stkvar	_aexp @ sp[(-4)+2]
 25515  013734  0EFE               	movlw	-2
 25516  013736  0060  F033  FFE3   	movff	btemp+11,plusw1
 25517                           
 25518                           ;stkvar	_signs @ sp[(-4)+3]
 25519                           ;stkvar	_aexp @ sp[(-4)+2]
 25520  01373C  50E1               	movf	fsr1l,w,c
 25521  01373E  0FFE               	addlw	-2
 25522  013740  6ED9               	movwf	fsr2l,c
 25523  013742  50E2               	movf	fsr1h,w,c
 25524  013744  6EDA               	movwf	fsr2h,c
 25525  013746  0EFF               	movlw	255
 25526  013748  22DA               	addwfc	fsr2h,f,c
 25527  01374A  0EFF               	movlw	-1
 25528  01374C  50E3               	movf	plusw1,w,c
 25529  01374E  18DE               	xorwf	postinc2,w,c
 25530  013750  B4D8               	btfsc	status,2,c
 25531  013752  D002               	goto	l7358
 25532                           
 25533                           ;stkvar	_signs @ sp[(-4)+3]
 25534  013754  0EFF               	movlw	-1
 25535  013756  8CE3               	bsf	plusw1,6,c
 25536  013758                     l7358:
 25537                           
 25538                           ;stkvar	_a @ sp[(-4)+-8]
 25539  013758  0EF7               	movlw	247
 25540  01375A  24E1               	addwf	fsr1l,w,c
 25541  01375C  6ED9               	movwf	fsr2l,c
 25542  01375E  0EFF               	movlw	255
 25543  013760  20E2               	addwfc	fsr1h,w,c
 25544  013762  6EDA               	movwf	fsr2h,c
 25545  013764  50DF               	movf	indf2,w,c
 25546  013766  6E0C               	movwf	(btemp+11)^0,c
 25547  013768  90D8               	bcf	status,0,c
 25548  01376A  340C               	rlcf	(btemp+11)^0,w,c
 25549  01376C  6E0B               	movwf	(btemp+10)^0,c
 25550                           
 25551                           ;stkvar	_aexp @ sp[(-4)+2]
 25552  01376E  0EFE               	movlw	-2
 25553  013770  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25554                           
 25555                           ;stkvar	_a @ sp[(-4)+-8]
 25556  013776  0EF6               	movlw	246
 25557  013778  24E1               	addwf	fsr1l,w,c
 25558  01377A  6ED9               	movwf	fsr2l,c
 25559  01377C  0EFF               	movlw	255
 25560  01377E  20E2               	addwfc	fsr1h,w,c
 25561  013780  6EDA               	movwf	fsr2h,c
 25562  013782  AEDF               	btfss	indf2,7,c
 25563  013784  D002               	goto	l7364
 25564                           
 25565                           ;stkvar	_aexp @ sp[(-4)+2]
 25566  013786  0EFE               	movlw	-2
 25567  013788  80E3               	bsf	plusw1,0,c
 25568  01378A                     l7364:
 25569                           
 25570                           ;stkvar	_aexp @ sp[(-4)+2]
 25571  01378A  0EFE               	movlw	-2
 25572  01378C  50E3               	movf	plusw1,w,c
 25573  01378E  B4D8               	btfsc	status,2,c
 25574  013790  D027               	goto	l7374
 25575                           
 25576                           ;stkvar	_aexp @ sp[(-4)+2]
 25577  013792  0EFE               	movlw	-2
 25578  013794  28E3               	incf	plusw1,w,c
 25579  013796  A4D8               	btfss	status,2,c
 25580  013798  D018               	goto	l7370
 25581  01379A  0E00               	movlw	0
 25582  01379C  6E09               	movwf	(btemp+8)^0,c
 25583  01379E  0E00               	movlw	0
 25584  0137A0  6E0A               	movwf	(btemp+9)^0,c
 25585  0137A2  0E00               	movlw	0
 25586  0137A4  6E0B               	movwf	(btemp+10)^0,c
 25587  0137A6  0E00               	movlw	0
 25588  0137A8  6E0C               	movwf	(btemp+11)^0,c
 25589                           
 25590                           ;stkvar	_a @ sp[(-4)+-8]
 25591  0137AA  0EF4               	movlw	-12
 25592  0137AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25593  0137B2  0EF5               	movlw	-11
 25594  0137B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25595  0137BA  0EF6               	movlw	-10
 25596  0137BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25597  0137C2  0EF7               	movlw	-9
 25598  0137C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25599  0137CA                     l7370:
 25600                           
 25601                           ;stkvar	_a @ sp[(-4)+-8]
 25602  0137CA  0EF6               	movlw	-10
 25603  0137CC  8EE3               	bsf	plusw1,7,c
 25604                           
 25605                           ;stkvar	_a @ sp[(-4)+-8]
 25606  0137CE  0EF7               	movlw	247
 25607  0137D0  24E1               	addwf	fsr1l,w,c
 25608  0137D2  6ED9               	movwf	fsr2l,c
 25609  0137D4  0EFF               	movlw	255
 25610  0137D6  20E2               	addwfc	fsr1h,w,c
 25611  0137D8  6EDA               	movwf	fsr2h,c
 25612  0137DA  0E00               	movlw	0
 25613  0137DC  6EDF               	movwf	indf2,c
 25614  0137DE  D018               	goto	l7376
 25615  0137E0                     l7374:
 25616  0137E0  0E00               	movlw	0
 25617  0137E2  6E09               	movwf	(btemp+8)^0,c
 25618  0137E4  0E00               	movlw	0
 25619  0137E6  6E0A               	movwf	(btemp+9)^0,c
 25620  0137E8  0E00               	movlw	0
 25621  0137EA  6E0B               	movwf	(btemp+10)^0,c
 25622  0137EC  0E00               	movlw	0
 25623  0137EE  6E0C               	movwf	(btemp+11)^0,c
 25624                           
 25625                           ;stkvar	_a @ sp[(-4)+-8]
 25626  0137F0  0EF4               	movlw	-12
 25627  0137F2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25628  0137F8  0EF5               	movlw	-11
 25629  0137FA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25630  013800  0EF6               	movlw	-10
 25631  013802  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25632  013808  0EF7               	movlw	-9
 25633  01380A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25634  013810                     l7376:
 25635                           
 25636                           ;stkvar	_bexp @ sp[(-4)+1]
 25637                           ;stkvar	_aexp @ sp[(-4)+2]
 25638  013810  50E1               	movf	fsr1l,w,c
 25639  013812  0FFE               	addlw	-2
 25640  013814  6ED9               	movwf	fsr2l,c
 25641  013816  50E2               	movf	fsr1h,w,c
 25642  013818  6EDA               	movwf	fsr2h,c
 25643  01381A  0EFF               	movlw	255
 25644  01381C  22DA               	addwfc	fsr2h,f,c
 25645  01381E  0EFD               	movlw	-3
 25646  013820  50E3               	movf	plusw1,w,c
 25647  013822  5CDE               	subwf	postinc2,w,c
 25648  013824  B0D8               	btfsc	status,0,c
 25649  013826  D0A4               	goto	l7412
 25650                           
 25651                           ;stkvar	_signs @ sp[(-4)+3]
 25652  013828  0EFF               	movlw	-1
 25653  01382A  ACE3               	btfss	plusw1,6,c
 25654  01382C  D002               	goto	l7382
 25655                           
 25656                           ;stkvar	_signs @ sp[(-4)+3]
 25657  01382E  0EFF               	movlw	-1
 25658  013830  7EE3               	btg	plusw1,7,c
 25659  013832                     l7382:
 25660                           
 25661                           ;stkvar	_bexp @ sp[(-4)+1]
 25662                           ;stkvar	_grs @ sp[(-4)+0]
 25663  013832  0EFD               	movlw	-3
 25664  013834  006F FF8C  F001    	movff	plusw1,btemp
 25665  01383A  0EFC               	movlw	-4
 25666  01383C  0060  F007  FFE3   	movff	btemp,plusw1
 25667                           
 25668                           ;stkvar	_aexp @ sp[(-4)+2]
 25669                           ;stkvar	_bexp @ sp[(-4)+1]
 25670  013842  0EFE               	movlw	-2
 25671  013844  006F FF8C  F001    	movff	plusw1,btemp
 25672  01384A  0EFD               	movlw	-3
 25673  01384C  0060  F007  FFE3   	movff	btemp,plusw1
 25674                           
 25675                           ;stkvar	_grs @ sp[(-4)+0]
 25676                           ;stkvar	_aexp @ sp[(-4)+2]
 25677  013852  0EFC               	movlw	-4
 25678  013854  006F FF8C  F001    	movff	plusw1,btemp
 25679  01385A  0EFE               	movlw	-2
 25680  01385C  0060  F007  FFE3   	movff	btemp,plusw1
 25681                           
 25682                           ;stkvar	_b @ sp[(-4)+-4]
 25683                           ;stkvar	_grs @ sp[(-4)+0]
 25684  013862  0EF8               	movlw	-8
 25685  013864  006F FF8C  F001    	movff	plusw1,btemp
 25686  01386A  0EFC               	movlw	-4
 25687  01386C  0060  F007  FFE3   	movff	btemp,plusw1
 25688                           
 25689                           ;stkvar	_a @ sp[(-4)+-8]
 25690                           ;stkvar	_b @ sp[(-4)+-4]
 25691  013872  0EF4               	movlw	-12
 25692  013874  006F FF8C  F001    	movff	plusw1,btemp
 25693  01387A  0EF8               	movlw	-8
 25694  01387C  0060  F007  FFE3   	movff	btemp,plusw1
 25695                           
 25696                           ;stkvar	_grs @ sp[(-4)+0]
 25697                           ;stkvar	_a @ sp[(-4)+-8]
 25698  013882  0EFC               	movlw	-4
 25699  013884  006F FF8C  F001    	movff	plusw1,btemp
 25700  01388A  0EF4               	movlw	-12
 25701  01388C  0060  F007  FFE3   	movff	btemp,plusw1
 25702                           
 25703                           ;stkvar	_b @ sp[(-4)+-4]
 25704  013892  0EF9               	movlw	249
 25705  013894  24E1               	addwf	fsr1l,w,c
 25706  013896  6ED9               	movwf	fsr2l,c
 25707  013898  0EFF               	movlw	255
 25708  01389A  20E2               	addwfc	fsr1h,w,c
 25709  01389C  6EDA               	movwf	fsr2h,c
 25710  01389E  50DF               	movf	indf2,w,c
 25711  0138A0  6E0C               	movwf	(btemp+11)^0,c
 25712                           
 25713                           ;stkvar	_grs @ sp[(-4)+0]
 25714  0138A2  0EFC               	movlw	-4
 25715  0138A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25716                           
 25717                           ;stkvar	_a @ sp[(-4)+-8]
 25718  0138AA  0EF5               	movlw	245
 25719  0138AC  24E1               	addwf	fsr1l,w,c
 25720  0138AE  6ED9               	movwf	fsr2l,c
 25721  0138B0  0EFF               	movlw	255
 25722  0138B2  20E2               	addwfc	fsr1h,w,c
 25723  0138B4  6EDA               	movwf	fsr2h,c
 25724                           
 25725                           ;stkvar	_b @ sp[(-4)+-4]
 25726  0138B6  0EF9               	movlw	249
 25727  0138B8  24E1               	addwf	fsr1l,w,c
 25728  0138BA  6EE9               	movwf	fsr0l,c
 25729  0138BC  0EFF               	movlw	255
 25730  0138BE  20E2               	addwfc	fsr1h,w,c
 25731  0138C0  6EEA               	movwf	fsr0h,c
 25732  0138C2  006F FF7F FFEF     	movff	indf2,indf0
 25733                           
 25734                           ;stkvar	_grs @ sp[(-4)+0]
 25735                           ;stkvar	_a @ sp[(-4)+-8]
 25736  0138C8  0EF5               	movlw	245
 25737  0138CA  24E1               	addwf	fsr1l,w,c
 25738  0138CC  6ED9               	movwf	fsr2l,c
 25739  0138CE  0EFF               	movlw	255
 25740  0138D0  20E2               	addwfc	fsr1h,w,c
 25741  0138D2  6EDA               	movwf	fsr2h,c
 25742  0138D4  0EFC               	movlw	-4
 25743  0138D6  006F FF8F FFDF     	movff	plusw1,indf2
 25744                           
 25745                           ;stkvar	_b @ sp[(-4)+-4]
 25746  0138DC  0EFA               	movlw	250
 25747  0138DE  24E1               	addwf	fsr1l,w,c
 25748  0138E0  6ED9               	movwf	fsr2l,c
 25749  0138E2  0EFF               	movlw	255
 25750  0138E4  20E2               	addwfc	fsr1h,w,c
 25751  0138E6  6EDA               	movwf	fsr2h,c
 25752  0138E8  50DF               	movf	indf2,w,c
 25753  0138EA  6E0C               	movwf	(btemp+11)^0,c
 25754                           
 25755                           ;stkvar	_grs @ sp[(-4)+0]
 25756  0138EC  0EFC               	movlw	-4
 25757  0138EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25758                           
 25759                           ;stkvar	_a @ sp[(-4)+-8]
 25760  0138F4  0EF6               	movlw	246
 25761  0138F6  24E1               	addwf	fsr1l,w,c
 25762  0138F8  6ED9               	movwf	fsr2l,c
 25763  0138FA  0EFF               	movlw	255
 25764  0138FC  20E2               	addwfc	fsr1h,w,c
 25765  0138FE  6EDA               	movwf	fsr2h,c
 25766                           
 25767                           ;stkvar	_b @ sp[(-4)+-4]
 25768  013900  0EFA               	movlw	250
 25769  013902  24E1               	addwf	fsr1l,w,c
 25770  013904  6EE9               	movwf	fsr0l,c
 25771  013906  0EFF               	movlw	255
 25772  013908  20E2               	addwfc	fsr1h,w,c
 25773  01390A  6EEA               	movwf	fsr0h,c
 25774  01390C  006F FF7F FFEF     	movff	indf2,indf0
 25775                           
 25776                           ;stkvar	_grs @ sp[(-4)+0]
 25777                           ;stkvar	_a @ sp[(-4)+-8]
 25778  013912  0EF6               	movlw	246
 25779  013914  24E1               	addwf	fsr1l,w,c
 25780  013916  6ED9               	movwf	fsr2l,c
 25781  013918  0EFF               	movlw	255
 25782  01391A  20E2               	addwfc	fsr1h,w,c
 25783  01391C  6EDA               	movwf	fsr2h,c
 25784  01391E  0EFC               	movlw	-4
 25785  013920  006F FF8F FFDF     	movff	plusw1,indf2
 25786                           
 25787                           ;stkvar	_b @ sp[(-4)+-4]
 25788  013926  0EFB               	movlw	251
 25789  013928  24E1               	addwf	fsr1l,w,c
 25790  01392A  6ED9               	movwf	fsr2l,c
 25791  01392C  0EFF               	movlw	255
 25792  01392E  20E2               	addwfc	fsr1h,w,c
 25793  013930  6EDA               	movwf	fsr2h,c
 25794  013932  50DF               	movf	indf2,w,c
 25795  013934  6E0C               	movwf	(btemp+11)^0,c
 25796                           
 25797                           ;stkvar	_grs @ sp[(-4)+0]
 25798  013936  0EFC               	movlw	-4
 25799  013938  0060  F033  FFE3   	movff	btemp+11,plusw1
 25800                           
 25801                           ;stkvar	_a @ sp[(-4)+-8]
 25802  01393E  0EF7               	movlw	247
 25803  013940  24E1               	addwf	fsr1l,w,c
 25804  013942  6ED9               	movwf	fsr2l,c
 25805  013944  0EFF               	movlw	255
 25806  013946  20E2               	addwfc	fsr1h,w,c
 25807  013948  6EDA               	movwf	fsr2h,c
 25808                           
 25809                           ;stkvar	_b @ sp[(-4)+-4]
 25810  01394A  0EFB               	movlw	251
 25811  01394C  24E1               	addwf	fsr1l,w,c
 25812  01394E  6EE9               	movwf	fsr0l,c
 25813  013950  0EFF               	movlw	255
 25814  013952  20E2               	addwfc	fsr1h,w,c
 25815  013954  6EEA               	movwf	fsr0h,c
 25816  013956  006F FF7F FFEF     	movff	indf2,indf0
 25817                           
 25818                           ;stkvar	_grs @ sp[(-4)+0]
 25819                           ;stkvar	_a @ sp[(-4)+-8]
 25820  01395C  0EF7               	movlw	247
 25821  01395E  24E1               	addwf	fsr1l,w,c
 25822  013960  6ED9               	movwf	fsr2l,c
 25823  013962  0EFF               	movlw	255
 25824  013964  20E2               	addwfc	fsr1h,w,c
 25825  013966  6EDA               	movwf	fsr2h,c
 25826  013968  0EFC               	movlw	-4
 25827  01396A  006F FF8F FFDF     	movff	plusw1,indf2
 25828  013970                     l7412:
 25829                           
 25830                           ;stkvar	_grs @ sp[(-4)+0]
 25831  013970  0EFC               	movlw	-4
 25832  013972  6AE3               	clrf	plusw1,c
 25833                           
 25834                           ;stkvar	_aexp @ sp[(-4)+2]
 25835  013974  0EFE               	movlw	-2
 25836  013976  50E3               	movf	plusw1,w,c
 25837  013978  6E0B               	movwf	(btemp+10)^0,c
 25838  01397A  6A0C               	clrf	(btemp+11)^0,c
 25839                           
 25840                           ;stkvar	_bexp @ sp[(-4)+1]
 25841  01397C  0EFD               	movlw	-3
 25842  01397E  50E3               	movf	plusw1,w,c
 25843  013980  5E0B               	subwf	(btemp+10)^0,f,c
 25844  013982  0E00               	movlw	0
 25845  013984  5A0C               	subwfb	(btemp+11)^0,f,c
 25846  013986  BE0C               	btfsc	(btemp+11)^0,7,c
 25847  013988  D062               	goto	l7436
 25848  01398A  500C               	movf	(btemp+11)^0,w,c
 25849  01398C  E104               	bnz	u5230
 25850  01398E  0E1A               	movlw	26
 25851  013990  5C0B               	subwf	(btemp+10)^0,w,c
 25852  013992  A0D8               	btfss	status,0,c
 25853  013994  D05C               	goto	l7436
 25854  013996                     u5230:
 25855                           
 25856                           ;stkvar	_b @ sp[(-4)+-4]
 25857  013996  0EF8               	movlw	-8
 25858  013998  50E3               	movf	plusw1,w,c
 25859  01399A  E10A               	bnz	u5241
 25860  01399C  0EF9               	movlw	-7
 25861  01399E  50E3               	movf	plusw1,w,c
 25862  0139A0  E107               	bnz	u5241
 25863  0139A2  0EFA               	movlw	-6
 25864  0139A4  50E3               	movf	plusw1,w,c
 25865  0139A6  E104               	bnz	u5241
 25866  0139A8  0EFB               	movlw	-5
 25867  0139AA  50E3               	movf	plusw1,w,c
 25868  0139AC  B4D8               	btfsc	status,2,c
 25869  0139AE  D003               	goto	u5240
 25870  0139B0                     u5241:
 25871  0139B0  6A0C               	clrf	(btemp+11)^0,c
 25872  0139B2  2A0C               	incf	(btemp+11)^0,f,c
 25873  0139B4  D001               	goto	u5258
 25874  0139B6                     u5240:
 25875  0139B6  6A0C               	clrf	(btemp+11)^0,c
 25876  0139B8                     u5258:
 25877                           
 25878                           ;stkvar	_grs @ sp[(-4)+0]
 25879  0139B8  0EFC               	movlw	-4
 25880  0139BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25881                           
 25882                           ;stkvar	_b @ sp[(-4)+-4]
 25883  0139C0  0EF8               	movlw	-8
 25884  0139C2  6AE3               	clrf	plusw1,c
 25885  0139C4  0EF9               	movlw	-7
 25886  0139C6  6AE3               	clrf	plusw1,c
 25887  0139C8  0EFA               	movlw	-6
 25888  0139CA  6AE3               	clrf	plusw1,c
 25889  0139CC  0EFB               	movlw	-5
 25890  0139CE  6AE3               	clrf	plusw1,c
 25891                           
 25892                           ;stkvar	_aexp @ sp[(-4)+2]
 25893                           ;stkvar	_bexp @ sp[(-4)+1]
 25894  0139D0  0EFE               	movlw	-2
 25895  0139D2  006F FF8C  F001    	movff	plusw1,btemp
 25896  0139D8  0EFD               	movlw	-3
 25897  0139DA  0060  F007  FFE3   	movff	btemp,plusw1
 25898  0139E0  D042               	goto	u5290
 25899  0139E2                     l7422:
 25900                           
 25901                           ;stkvar	_grs @ sp[(-4)+0]
 25902  0139E2  0EFC               	movlw	-4
 25903  0139E4  A0E3               	btfss	plusw1,0,c
 25904  0139E6  D00D               	goto	l7426
 25905                           
 25906                           ;stkvar	_grs @ sp[(-4)+0]
 25907  0139E8  0EFC               	movlw	-4
 25908  0139EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25909  0139F0  90D8               	bcf	status,0,c
 25910  0139F2  320C               	rrcf	(btemp+11)^0,f,c
 25911  0139F4  0E01               	movlw	1
 25912  0139F6  120C               	iorwf	(btemp+11)^0,f,c
 25913                           
 25914                           ;stkvar	_grs @ sp[(-4)+0]
 25915  0139F8  0EFC               	movlw	-4
 25916  0139FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25917  013A00  D009               	goto	l7428
 25918  013A02                     l7426:
 25919                           
 25920                           ;stkvar	_grs @ sp[(-4)+0]
 25921  013A02  50E1               	movf	fsr1l,w,c
 25922  013A04  0FFC               	addlw	-4
 25923  013A06  6ED9               	movwf	fsr2l,c
 25924  013A08  50E2               	movf	fsr1h,w,c
 25925  013A0A  6EDA               	movwf	fsr2h,c
 25926  013A0C  0EFF               	movlw	255
 25927  013A0E  22DA               	addwfc	fsr2h,f,c
 25928  013A10  90D8               	bcf	status,0,c
 25929  013A12  32DF               	rrcf	indf2,f,c
 25930  013A14                     l7428:
 25931                           
 25932                           ;stkvar	_b @ sp[(-4)+-4]
 25933  013A14  0EF8               	movlw	-8
 25934  013A16  A0E3               	btfss	plusw1,0,c
 25935  013A18  D002               	goto	l7432
 25936                           
 25937                           ;stkvar	_grs @ sp[(-4)+0]
 25938  013A1A  0EFC               	movlw	-4
 25939  013A1C  8EE3               	bsf	plusw1,7,c
 25940  013A1E                     l7432:
 25941  013A1E  0E01               	movlw	1
 25942  013A20  6E0C               	movwf	(btemp+11)^0,c
 25943                           
 25944                           ;stkvar	_b @ sp[(-4)+-4]
 25945  013A22  50E1               	movf	fsr1l,w,c
 25946  013A24  0FF8               	addlw	-8
 25947  013A26  6ED9               	movwf	fsr2l,c
 25948  013A28  50E2               	movf	fsr1h,w,c
 25949  013A2A  6EDA               	movwf	fsr2h,c
 25950  013A2C  0EFF               	movlw	255
 25951  013A2E  22DA               	addwfc	fsr2h,f,c
 25952  013A30  280C               	incf	(btemp+11)^0,w,c
 25953  013A32  52DE               	movf	postinc2,f,c
 25954  013A34  D008               	goto	u5280
 25955  013A36                     u5285:
 25956  013A36  52DE               	movf	postinc2,f,c
 25957  013A38  90D8               	bcf	status,0,c
 25958  013A3A  BEDC               	btfsc	preinc2,7,c
 25959  013A3C  80D8               	bsf	status,0,c
 25960  013A3E  32DD               	rrcf	postdec2,f,c
 25961  013A40  32DD               	rrcf	postdec2,f,c
 25962  013A42  32DD               	rrcf	postdec2,f,c
 25963  013A44  32DE               	rrcf	postinc2,f,c
 25964  013A46                     u5280:
 25965  013A46  2EE8               	decfsz	wreg,f,c
 25966  013A48  D7F6               	goto	u5285
 25967                           
 25968                           ;stkvar	_bexp @ sp[(-4)+1]
 25969  013A4A  0EFD               	movlw	-3
 25970  013A4C  2AE3               	incf	plusw1,f,c
 25971  013A4E                     l7436:
 25972                           
 25973                           ;stkvar	_aexp @ sp[(-4)+2]
 25974                           ;stkvar	_bexp @ sp[(-4)+1]
 25975  013A4E  50E1               	movf	fsr1l,w,c
 25976  013A50  0FFD               	addlw	-3
 25977  013A52  6ED9               	movwf	fsr2l,c
 25978  013A54  50E2               	movf	fsr1h,w,c
 25979  013A56  6EDA               	movwf	fsr2h,c
 25980  013A58  0EFF               	movlw	255
 25981  013A5A  22DA               	addwfc	fsr2h,f,c
 25982  013A5C  0EFE               	movlw	-2
 25983  013A5E  50E3               	movf	plusw1,w,c
 25984  013A60  5CDE               	subwf	postinc2,w,c
 25985  013A62  A0D8               	btfss	status,0,c
 25986  013A64  D7BE               	goto	l7422
 25987  013A66                     u5290:
 25988                           
 25989                           ;stkvar	_signs @ sp[(-4)+3]
 25990  013A66  0EFF               	movlw	-1
 25991  013A68  BCE3               	btfsc	plusw1,6,c
 25992  013A6A  D066               	goto	l7464
 25993                           
 25994                           ;stkvar	_bexp @ sp[(-4)+1]
 25995  013A6C  0EFD               	movlw	-3
 25996  013A6E  50E3               	movf	plusw1,w,c
 25997  013A70  B4D8               	btfsc	status,2,c
 25998  013A72  D0F2               	goto	u5390
 25999                           
 26000                           ;stkvar	_a @ sp[(-4)+-8]
 26001                           ;stkvar	_b @ sp[(-4)+-4]
 26002  013A74  0EF8               	movlw	-8
 26003  013A76  50E3               	movf	plusw1,w,c
 26004  013A78  6E01               	movwf	btemp^0,c
 26005  013A7A  0EF4               	movlw	-12
 26006  013A7C  50E3               	movf	plusw1,w,c
 26007  013A7E  2601               	addwf	btemp^0,f,c
 26008  013A80  0EF8               	movlw	-8
 26009  013A82  0060  F007  FFE3   	movff	btemp,plusw1
 26010  013A88  0EF9               	movlw	-7
 26011  013A8A  50E3               	movf	plusw1,w,c
 26012  013A8C  6E01               	movwf	btemp^0,c
 26013  013A8E  0EF5               	movlw	-11
 26014  013A90  50E3               	movf	plusw1,w,c
 26015  013A92  2201               	addwfc	btemp^0,f,c
 26016  013A94  0EF9               	movlw	-7
 26017  013A96  0060  F007  FFE3   	movff	btemp,plusw1
 26018  013A9C  0EFA               	movlw	-6
 26019  013A9E  50E3               	movf	plusw1,w,c
 26020  013AA0  6E01               	movwf	btemp^0,c
 26021  013AA2  0EF6               	movlw	-10
 26022  013AA4  50E3               	movf	plusw1,w,c
 26023  013AA6  2201               	addwfc	btemp^0,f,c
 26024  013AA8  0EFA               	movlw	-6
 26025  013AAA  0060  F007  FFE3   	movff	btemp,plusw1
 26026  013AB0  0EFB               	movlw	-5
 26027  013AB2  50E3               	movf	plusw1,w,c
 26028  013AB4  6E01               	movwf	btemp^0,c
 26029  013AB6  0EF7               	movlw	-9
 26030  013AB8  50E3               	movf	plusw1,w,c
 26031  013ABA  2201               	addwfc	btemp^0,f,c
 26032  013ABC  0EFB               	movlw	-5
 26033  013ABE  0060  F007  FFE3   	movff	btemp,plusw1
 26034                           
 26035                           ;stkvar	_b @ sp[(-4)+-4]
 26036  013AC4  0EFB               	movlw	-5
 26037  013AC6  A0E3               	btfss	plusw1,0,c
 26038  013AC8  D101               	goto	u5430
 26039                           
 26040                           ;stkvar	_grs @ sp[(-4)+0]
 26041  013ACA  0EFC               	movlw	-4
 26042  013ACC  A0E3               	btfss	plusw1,0,c
 26043  013ACE  D00D               	goto	l7454
 26044                           
 26045                           ;stkvar	_grs @ sp[(-4)+0]
 26046  013AD0  0EFC               	movlw	-4
 26047  013AD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 26048  013AD8  90D8               	bcf	status,0,c
 26049  013ADA  320C               	rrcf	(btemp+11)^0,f,c
 26050  013ADC  0E01               	movlw	1
 26051  013ADE  120C               	iorwf	(btemp+11)^0,f,c
 26052                           
 26053                           ;stkvar	_grs @ sp[(-4)+0]
 26054  013AE0  0EFC               	movlw	-4
 26055  013AE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26056  013AE8  D009               	goto	l7456
 26057  013AEA                     l7454:
 26058                           
 26059                           ;stkvar	_grs @ sp[(-4)+0]
 26060  013AEA  50E1               	movf	fsr1l,w,c
 26061  013AEC  0FFC               	addlw	-4
 26062  013AEE  6ED9               	movwf	fsr2l,c
 26063  013AF0  50E2               	movf	fsr1h,w,c
 26064  013AF2  6EDA               	movwf	fsr2h,c
 26065  013AF4  0EFF               	movlw	255
 26066  013AF6  22DA               	addwfc	fsr2h,f,c
 26067  013AF8  90D8               	bcf	status,0,c
 26068  013AFA  32DF               	rrcf	indf2,f,c
 26069  013AFC                     l7456:
 26070                           
 26071                           ;stkvar	_b @ sp[(-4)+-4]
 26072  013AFC  0EF8               	movlw	-8
 26073  013AFE  A0E3               	btfss	plusw1,0,c
 26074  013B00  D002               	goto	l7460
 26075                           
 26076                           ;stkvar	_grs @ sp[(-4)+0]
 26077  013B02  0EFC               	movlw	-4
 26078  013B04  8EE3               	bsf	plusw1,7,c
 26079  013B06                     l7460:
 26080  013B06  0E01               	movlw	1
 26081  013B08  6E0C               	movwf	(btemp+11)^0,c
 26082                           
 26083                           ;stkvar	_b @ sp[(-4)+-4]
 26084  013B0A  50E1               	movf	fsr1l,w,c
 26085  013B0C  0FF8               	addlw	-8
 26086  013B0E  6ED9               	movwf	fsr2l,c
 26087  013B10  50E2               	movf	fsr1h,w,c
 26088  013B12  6EDA               	movwf	fsr2h,c
 26089  013B14  0EFF               	movlw	255
 26090  013B16  22DA               	addwfc	fsr2h,f,c
 26091  013B18  280C               	incf	(btemp+11)^0,w,c
 26092  013B1A  52DE               	movf	postinc2,f,c
 26093  013B1C  D008               	goto	u5350
 26094  013B1E                     u5355:
 26095  013B1E  52DE               	movf	postinc2,f,c
 26096  013B20  90D8               	bcf	status,0,c
 26097  013B22  BEDC               	btfsc	preinc2,7,c
 26098  013B24  80D8               	bsf	status,0,c
 26099  013B26  32DD               	rrcf	postdec2,f,c
 26100  013B28  32DD               	rrcf	postdec2,f,c
 26101  013B2A  32DD               	rrcf	postdec2,f,c
 26102  013B2C  32DE               	rrcf	postinc2,f,c
 26103  013B2E                     u5350:
 26104  013B2E  2EE8               	decfsz	wreg,f,c
 26105  013B30  D7F6               	goto	u5355
 26106                           
 26107                           ;stkvar	_bexp @ sp[(-4)+1]
 26108  013B32  0EFD               	movlw	-3
 26109  013B34  2AE3               	incf	plusw1,f,c
 26110  013B36  D0CA               	goto	u5430
 26111  013B38                     l7464:
 26112                           
 26113                           ;stkvar	_a @ sp[(-4)+-8]
 26114                           ;stkvar	_b @ sp[(-4)+-4]
 26115  013B38  50E1               	movf	fsr1l,w,c
 26116  013B3A  0FF8               	addlw	-8
 26117  013B3C  6ED9               	movwf	fsr2l,c
 26118  013B3E  50E2               	movf	fsr1h,w,c
 26119  013B40  6EDA               	movwf	fsr2h,c
 26120  013B42  0EFF               	movlw	255
 26121  013B44  22DA               	addwfc	fsr2h,f,c
 26122  013B46  0EF4               	movlw	-12
 26123  013B48  50E3               	movf	plusw1,w,c
 26124  013B4A  5CDE               	subwf	postinc2,w,c
 26125  013B4C  0EF5               	movlw	-11
 26126  013B4E  50E3               	movf	plusw1,w,c
 26127  013B50  58DE               	subwfb	postinc2,w,c
 26128  013B52  0EF6               	movlw	-10
 26129  013B54  50E3               	movf	plusw1,w,c
 26130  013B56  58DE               	subwfb	postinc2,w,c
 26131  013B58  50DE               	movf	postinc2,w,c
 26132  013B5A  0A80               	xorlw	128
 26133  013B5C  6E01               	movwf	btemp^0,c
 26134  013B5E  0EF7               	movlw	-9
 26135  013B60  50E3               	movf	plusw1,w,c
 26136  013B62  0A80               	xorlw	128
 26137  013B64  5801               	subwfb	btemp^0,w,c
 26138  013B66  B0D8               	btfsc	status,0,c
 26139  013B68  D053               	goto	l7476
 26140                           
 26141                           ;stkvar	_b @ sp[(-4)+-4]
 26142                           ;stkvar	_a @ sp[(-4)+-8]
 26143  013B6A  0EF4               	movlw	-12
 26144  013B6C  006F FF8C  F009    	movff	plusw1,btemp+8
 26145  013B72  0EF5               	movlw	-11
 26146  013B74  006F FF8C  F00A    	movff	plusw1,btemp+9
 26147  013B7A  0EF6               	movlw	-10
 26148  013B7C  006F FF8C  F00B    	movff	plusw1,btemp+10
 26149  013B82  0EF7               	movlw	-9
 26150  013B84  006F FF8C  F00C    	movff	plusw1,btemp+11
 26151  013B8A  0EF8               	movlw	-8
 26152  013B8C  50E3               	movf	plusw1,w,c
 26153  013B8E  5E09               	subwf	(btemp+8)^0,f,c
 26154  013B90  0EF9               	movlw	-7
 26155  013B92  50E3               	movf	plusw1,w,c
 26156  013B94  5A0A               	subwfb	(btemp+9)^0,f,c
 26157  013B96  0EFA               	movlw	-6
 26158  013B98  50E3               	movf	plusw1,w,c
 26159  013B9A  5A0B               	subwfb	(btemp+10)^0,f,c
 26160  013B9C  0EFB               	movlw	-5
 26161  013B9E  50E3               	movf	plusw1,w,c
 26162  013BA0  5A0C               	subwfb	(btemp+11)^0,f,c
 26163  013BA2  0EFF               	movlw	255
 26164  013BA4  2409               	addwf	(btemp+8)^0,w,c
 26165  013BA6  6E05               	movwf	(btemp+4)^0,c
 26166  013BA8  0EFF               	movlw	255
 26167  013BAA  200A               	addwfc	(btemp+9)^0,w,c
 26168  013BAC  6E06               	movwf	(btemp+5)^0,c
 26169  013BAE  0EFF               	movlw	255
 26170  013BB0  200B               	addwfc	(btemp+10)^0,w,c
 26171  013BB2  6E07               	movwf	(btemp+6)^0,c
 26172  013BB4  0EFF               	movlw	255
 26173  013BB6  200C               	addwfc	(btemp+11)^0,w,c
 26174  013BB8  6E08               	movwf	(btemp+7)^0,c
 26175                           
 26176                           ;stkvar	_b @ sp[(-4)+-4]
 26177  013BBA  0EF8               	movlw	-8
 26178  013BBC  0060  F017  FFE3   	movff	btemp+4,plusw1
 26179  013BC2  0EF9               	movlw	-7
 26180  013BC4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26181  013BCA  0EFA               	movlw	-6
 26182  013BCC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26183  013BD2  0EFB               	movlw	-5
 26184  013BD4  0060  F023  FFE3   	movff	btemp+7,plusw1
 26185                           
 26186                           ;stkvar	_signs @ sp[(-4)+3]
 26187  013BDA  0EFF               	movlw	-1
 26188  013BDC  7EE3               	btg	plusw1,7,c
 26189                           
 26190                           ;stkvar	_grs @ sp[(-4)+0]
 26191  013BDE  0EFC               	movlw	-4
 26192  013BE0  50E3               	movf	plusw1,w,c
 26193  013BE2  0800               	sublw	0
 26194  013BE4  6E0C               	movwf	(btemp+11)^0,c
 26195                           
 26196                           ;stkvar	_grs @ sp[(-4)+0]
 26197  013BE6  0EFC               	movlw	-4
 26198  013BE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26199                           
 26200                           ;stkvar	_grs @ sp[(-4)+0]
 26201  013BEE  0EFC               	movlw	-4
 26202  013BF0  50E3               	movf	plusw1,w,c
 26203  013BF2  A4D8               	btfss	status,2,c
 26204  013BF4  D020               	goto	l7478
 26205                           
 26206                           ;stkvar	_b @ sp[(-4)+-4]
 26207  013BF6  50E1               	movf	fsr1l,w,c
 26208  013BF8  0FF8               	addlw	-8
 26209  013BFA  6ED9               	movwf	fsr2l,c
 26210  013BFC  50E2               	movf	fsr1h,w,c
 26211  013BFE  6EDA               	movwf	fsr2h,c
 26212  013C00  0EFF               	movlw	255
 26213  013C02  22DA               	addwfc	fsr2h,f,c
 26214  013C04  2ADE               	incf	postinc2,f,c
 26215  013C06  0E00               	movlw	0
 26216  013C08  22DE               	addwfc	postinc2,f,c
 26217  013C0A  22DE               	addwfc	postinc2,f,c
 26218  013C0C  22DE               	addwfc	postinc2,f,c
 26219  013C0E  D013               	goto	l7478
 26220  013C10                     l7476:
 26221                           
 26222                           ;stkvar	_a @ sp[(-4)+-8]
 26223                           ;stkvar	_b @ sp[(-4)+-4]
 26224  013C10  50E1               	movf	fsr1l,w,c
 26225  013C12  0FF8               	addlw	-8
 26226  013C14  6ED9               	movwf	fsr2l,c
 26227  013C16  50E2               	movf	fsr1h,w,c
 26228  013C18  6EDA               	movwf	fsr2h,c
 26229  013C1A  0EFF               	movlw	255
 26230  013C1C  22DA               	addwfc	fsr2h,f,c
 26231  013C1E  0EF4               	movlw	-12
 26232  013C20  50E3               	movf	plusw1,w,c
 26233  013C22  5EDE               	subwf	postinc2,f,c
 26234  013C24  0EF5               	movlw	-11
 26235  013C26  50E3               	movf	plusw1,w,c
 26236  013C28  5ADE               	subwfb	postinc2,f,c
 26237  013C2A  0EF6               	movlw	-10
 26238  013C2C  50E3               	movf	plusw1,w,c
 26239  013C2E  5ADE               	subwfb	postinc2,f,c
 26240  013C30  0EF7               	movlw	-9
 26241  013C32  50E3               	movf	plusw1,w,c
 26242  013C34  5ADE               	subwfb	postinc2,f,c
 26243  013C36                     l7478:
 26244                           
 26245                           ;stkvar	_b @ sp[(-4)+-4]
 26246  013C36  0EF8               	movlw	-8
 26247  013C38  50E3               	movf	plusw1,w,c
 26248  013C3A  E145               	bnz	l7500
 26249  013C3C  0EF9               	movlw	-7
 26250  013C3E  50E3               	movf	plusw1,w,c
 26251  013C40  E142               	bnz	l7500
 26252  013C42  0EFA               	movlw	-6
 26253  013C44  50E3               	movf	plusw1,w,c
 26254  013C46  E13F               	bnz	l7500
 26255  013C48  0EFB               	movlw	-5
 26256  013C4A  50E3               	movf	plusw1,w,c
 26257  013C4C  A4D8               	btfss	status,2,c
 26258  013C4E  D03B               	goto	l7500
 26259                           
 26260                           ;stkvar	_grs @ sp[(-4)+0]
 26261  013C50  0EFC               	movlw	-4
 26262  013C52  50E3               	movf	plusw1,w,c
 26263  013C54  A4D8               	btfss	status,2,c
 26264  013C56  D037               	goto	l7500
 26265  013C58                     u5390:
 26266  013C58  0E00               	movlw	0
 26267  013C5A  6E01               	movwf	btemp^0,c
 26268  013C5C  0E00               	movlw	0
 26269  013C5E  6E02               	movwf	(btemp+1)^0,c
 26270  013C60  0E00               	movlw	0
 26271  013C62  6E03               	movwf	(btemp+2)^0,c
 26272  013C64  0E00               	movlw	0
 26273  013C66  6E04               	movwf	(btemp+3)^0,c
 26274  013C68  D0C6               	goto	l2872
 26275  013C6A                     l7486:
 26276                           
 26277                           ;stkvar	_b @ sp[(-4)+-4]
 26278  013C6A  90D8               	bcf	status,0,c
 26279  013C6C  0EF8               	movlw	-8
 26280  013C6E  36E3               	rlcf	plusw1,f,c
 26281  013C70  0EF9               	movlw	-7
 26282  013C72  36E3               	rlcf	plusw1,f,c
 26283  013C74  0EFA               	movlw	-6
 26284  013C76  36E3               	rlcf	plusw1,f,c
 26285  013C78  0EFB               	movlw	-5
 26286  013C7A  36E3               	rlcf	plusw1,f,c
 26287                           
 26288                           ;stkvar	_grs @ sp[(-4)+0]
 26289  013C7C  0EFC               	movlw	-4
 26290  013C7E  AEE3               	btfss	plusw1,7,c
 26291  013C80  D002               	goto	l2884
 26292                           
 26293                           ;stkvar	_b @ sp[(-4)+-4]
 26294  013C82  0EF8               	movlw	-8
 26295  013C84  80E3               	bsf	plusw1,0,c
 26296  013C86                     l2884:
 26297                           
 26298                           ;stkvar	_grs @ sp[(-4)+0]
 26299  013C86  0EFC               	movlw	-4
 26300  013C88  A0E3               	btfss	plusw1,0,c
 26301  013C8A  D00E               	goto	l7494
 26302                           
 26303                           ;stkvar	_grs @ sp[(-4)+0]
 26304  013C8C  0EFC               	movlw	-4
 26305  013C8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26306  013C94  90D8               	bcf	status,0,c
 26307  013C96  340C               	rlcf	(btemp+11)^0,w,c
 26308  013C98  6E0B               	movwf	(btemp+10)^0,c
 26309  013C9A  0E01               	movlw	1
 26310  013C9C  120B               	iorwf	(btemp+10)^0,f,c
 26311                           
 26312                           ;stkvar	_grs @ sp[(-4)+0]
 26313  013C9E  0EFC               	movlw	-4
 26314  013CA0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26315  013CA6  D009               	goto	l7496
 26316  013CA8                     l7494:
 26317                           
 26318                           ;stkvar	_grs @ sp[(-4)+0]
 26319  013CA8  50E1               	movf	fsr1l,w,c
 26320  013CAA  0FFC               	addlw	-4
 26321  013CAC  6ED9               	movwf	fsr2l,c
 26322  013CAE  50E2               	movf	fsr1h,w,c
 26323  013CB0  6EDA               	movwf	fsr2h,c
 26324  013CB2  0EFF               	movlw	255
 26325  013CB4  22DA               	addwfc	fsr2h,f,c
 26326  013CB6  90D8               	bcf	status,0,c
 26327  013CB8  36DF               	rlcf	indf2,f,c
 26328  013CBA                     l7496:
 26329                           
 26330                           ;stkvar	_bexp @ sp[(-4)+1]
 26331  013CBA  0EFD               	movlw	-3
 26332  013CBC  50E3               	movf	plusw1,w,c
 26333  013CBE  B4D8               	btfsc	status,2,c
 26334  013CC0  D002               	goto	l7500
 26335                           
 26336                           ;stkvar	_bexp @ sp[(-4)+1]
 26337  013CC2  0EFD               	movlw	-3
 26338  013CC4  06E3               	decf	plusw1,f,c
 26339  013CC6                     l7500:
 26340                           
 26341                           ;stkvar	_b @ sp[(-4)+-4]
 26342  013CC6  0EFA               	movlw	-6
 26343  013CC8  AEE3               	btfss	plusw1,7,c
 26344  013CCA  D7CF               	goto	l7486
 26345  013CCC                     u5430:
 26346                           
 26347                           ;stkvar	_aexp @ sp[(-4)+2]
 26348  013CCC  0EFE               	movlw	-2
 26349  013CCE  6AE3               	clrf	plusw1,c
 26350                           
 26351                           ;stkvar	_grs @ sp[(-4)+0]
 26352  013CD0  0EFC               	movlw	-4
 26353  013CD2  AEE3               	btfss	plusw1,7,c
 26354  013CD4  D00F               	goto	l7514
 26355                           
 26356                           ;stkvar	_grs @ sp[(-4)+0]
 26357  013CD6  0EFC               	movlw	-4
 26358  013CD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 26359  013CDE  0E7F               	movlw	127
 26360  013CE0  160C               	andwf	(btemp+11)^0,f,c
 26361  013CE2  B4D8               	btfsc	status,2,c
 26362  013CE4  D004               	goto	l7510
 26363  013CE6                     u5450:
 26364                           
 26365                           ;stkvar	_aexp @ sp[(-4)+2]
 26366  013CE6  0EFE               	movlw	-2
 26367  013CE8  6AE3               	clrf	plusw1,c
 26368  013CEA  2AE3               	incf	plusw1,f,c
 26369  013CEC  D003               	goto	l7514
 26370  013CEE                     l7510:
 26371                           
 26372                           ;stkvar	_b @ sp[(-4)+-4]
 26373  013CEE  0EF8               	movlw	-8
 26374  013CF0  B0E3               	btfsc	plusw1,0,c
 26375  013CF2  D7F9               	goto	u5450
 26376  013CF4                     l7514:
 26377                           
 26378                           ;stkvar	_aexp @ sp[(-4)+2]
 26379  013CF4  0EFE               	movlw	-2
 26380  013CF6  50E3               	movf	plusw1,w,c
 26381  013CF8  B4D8               	btfsc	status,2,c
 26382  013CFA  D02B               	goto	l7526
 26383                           
 26384                           ;stkvar	_b @ sp[(-4)+-4]
 26385  013CFC  50E1               	movf	fsr1l,w,c
 26386  013CFE  0FF8               	addlw	-8
 26387  013D00  6ED9               	movwf	fsr2l,c
 26388  013D02  50E2               	movf	fsr1h,w,c
 26389  013D04  6EDA               	movwf	fsr2h,c
 26390  013D06  0EFF               	movlw	255
 26391  013D08  22DA               	addwfc	fsr2h,f,c
 26392  013D0A  2ADE               	incf	postinc2,f,c
 26393  013D0C  0E00               	movlw	0
 26394  013D0E  22DE               	addwfc	postinc2,f,c
 26395  013D10  22DE               	addwfc	postinc2,f,c
 26396  013D12  22DE               	addwfc	postinc2,f,c
 26397                           
 26398                           ;stkvar	_b @ sp[(-4)+-4]
 26399  013D14  0EFB               	movlw	-5
 26400  013D16  A0E3               	btfss	plusw1,0,c
 26401  013D18  D01C               	goto	l7526
 26402  013D1A  0E01               	movlw	1
 26403  013D1C  6E0C               	movwf	(btemp+11)^0,c
 26404                           
 26405                           ;stkvar	_b @ sp[(-4)+-4]
 26406  013D1E  50E1               	movf	fsr1l,w,c
 26407  013D20  0FF8               	addlw	-8
 26408  013D22  6ED9               	movwf	fsr2l,c
 26409  013D24  50E2               	movf	fsr1h,w,c
 26410  013D26  6EDA               	movwf	fsr2h,c
 26411  013D28  0EFF               	movlw	255
 26412  013D2A  22DA               	addwfc	fsr2h,f,c
 26413  013D2C  280C               	incf	(btemp+11)^0,w,c
 26414  013D2E  52DE               	movf	postinc2,f,c
 26415  013D30  D008               	goto	u5490
 26416  013D32                     u5495:
 26417  013D32  52DE               	movf	postinc2,f,c
 26418  013D34  90D8               	bcf	status,0,c
 26419  013D36  BEDC               	btfsc	preinc2,7,c
 26420  013D38  80D8               	bsf	status,0,c
 26421  013D3A  32DD               	rrcf	postdec2,f,c
 26422  013D3C  32DD               	rrcf	postdec2,f,c
 26423  013D3E  32DD               	rrcf	postdec2,f,c
 26424  013D40  32DE               	rrcf	postinc2,f,c
 26425  013D42                     u5490:
 26426  013D42  2EE8               	decfsz	wreg,f,c
 26427  013D44  D7F6               	goto	u5495
 26428                           
 26429                           ;stkvar	_bexp @ sp[(-4)+1]
 26430  013D46  0EFD               	movlw	-3
 26431  013D48  28E3               	incf	plusw1,w,c
 26432  013D4A  B4D8               	btfsc	status,2,c
 26433  013D4C  D002               	goto	l7526
 26434                           
 26435                           ;stkvar	_bexp @ sp[(-4)+1]
 26436  013D4E  0EFD               	movlw	-3
 26437  013D50  2AE3               	incf	plusw1,f,c
 26438  013D52                     l7526:
 26439                           
 26440                           ;stkvar	_bexp @ sp[(-4)+1]
 26441  013D52  0EFD               	movlw	-3
 26442  013D54  28E3               	incf	plusw1,w,c
 26443  013D56  B4D8               	btfsc	status,2,c
 26444  013D58  D004               	goto	u5520
 26445                           
 26446                           ;stkvar	_bexp @ sp[(-4)+1]
 26447  013D5A  0EFD               	movlw	-3
 26448  013D5C  50E3               	movf	plusw1,w,c
 26449  013D5E  A4D8               	btfss	status,2,c
 26450  013D60  D00E               	goto	l7536
 26451  013D62                     u5520:
 26452                           
 26453                           ;stkvar	_b @ sp[(-4)+-4]
 26454  013D62  0EF8               	movlw	-8
 26455  013D64  6AE3               	clrf	plusw1,c
 26456  013D66  0EF9               	movlw	-7
 26457  013D68  6AE3               	clrf	plusw1,c
 26458  013D6A  0EFA               	movlw	-6
 26459  013D6C  6AE3               	clrf	plusw1,c
 26460  013D6E  0EFB               	movlw	-5
 26461  013D70  6AE3               	clrf	plusw1,c
 26462                           
 26463                           ;stkvar	_bexp @ sp[(-4)+1]
 26464  013D72  0EFD               	movlw	-3
 26465  013D74  50E3               	movf	plusw1,w,c
 26466  013D76  A4D8               	btfss	status,2,c
 26467  013D78  D002               	goto	l7536
 26468                           
 26469                           ;stkvar	_signs @ sp[(-4)+3]
 26470  013D7A  0EFF               	movlw	-1
 26471  013D7C  6AE3               	clrf	plusw1,c
 26472  013D7E                     l7536:
 26473                           
 26474                           ;stkvar	_bexp @ sp[(-4)+1]
 26475  013D7E  0EFD               	movlw	-3
 26476  013D80  A0E3               	btfss	plusw1,0,c
 26477  013D82  D009               	goto	l7540
 26478                           
 26479                           ;stkvar	_b @ sp[(-4)+-4]
 26480  013D84  0EFA               	movlw	250
 26481  013D86  24E1               	addwf	fsr1l,w,c
 26482  013D88  6ED9               	movwf	fsr2l,c
 26483  013D8A  0EFF               	movlw	255
 26484  013D8C  20E2               	addwfc	fsr1h,w,c
 26485  013D8E  6EDA               	movwf	fsr2h,c
 26486  013D90  0E00               	movlw	0
 26487  013D92  8EDB               	bsf	plusw2,7,c
 26488  013D94  D008               	goto	l7542
 26489  013D96                     l7540:
 26490                           
 26491                           ;stkvar	_b @ sp[(-4)+-4]
 26492  013D96  0EFA               	movlw	250
 26493  013D98  24E1               	addwf	fsr1l,w,c
 26494  013D9A  6ED9               	movwf	fsr2l,c
 26495  013D9C  0EFF               	movlw	255
 26496  013D9E  20E2               	addwfc	fsr1h,w,c
 26497  013DA0  6EDA               	movwf	fsr2h,c
 26498  013DA2  0E7F               	movlw	127
 26499  013DA4  16DF               	andwf	indf2,f,c
 26500  013DA6                     l7542:
 26501                           
 26502                           ;stkvar	_b @ sp[(-4)+-4]
 26503  013DA6  0EFB               	movlw	251
 26504  013DA8  24E1               	addwf	fsr1l,w,c
 26505  013DAA  6ED9               	movwf	fsr2l,c
 26506  013DAC  0EFF               	movlw	255
 26507  013DAE  20E2               	addwfc	fsr1h,w,c
 26508  013DB0  6EDA               	movwf	fsr2h,c
 26509                           
 26510                           ;stkvar	_bexp @ sp[(-4)+1]
 26511  013DB2  0EFD               	movlw	-3
 26512  013DB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26513  013DBA  90D8               	bcf	status,0,c
 26514  013DBC  300C               	rrcf	(btemp+11)^0,w,c
 26515  013DBE  6EDF               	movwf	indf2,c
 26516                           
 26517                           ;stkvar	_signs @ sp[(-4)+3]
 26518  013DC0  0EFF               	movlw	-1
 26519  013DC2  AEE3               	btfss	plusw1,7,c
 26520  013DC4  D008               	goto	l7548
 26521                           
 26522                           ;stkvar	_b @ sp[(-4)+-4]
 26523  013DC6  0EFB               	movlw	251
 26524  013DC8  24E1               	addwf	fsr1l,w,c
 26525  013DCA  6ED9               	movwf	fsr2l,c
 26526  013DCC  0EFF               	movlw	255
 26527  013DCE  20E2               	addwfc	fsr1h,w,c
 26528  013DD0  6EDA               	movwf	fsr2h,c
 26529  013DD2  0E00               	movlw	0
 26530  013DD4  8EDB               	bsf	plusw2,7,c
 26531  013DD6                     l7548:
 26532                           
 26533                           ;stkvar	_b @ sp[(-4)+-4]
 26534  013DD6  0EF8               	movlw	-8
 26535  013DD8  006F FF8C  F001    	movff	plusw1,btemp
 26536  013DDE  0EF9               	movlw	-7
 26537  013DE0  006F FF8C  F002    	movff	plusw1,btemp+1
 26538  013DE6  0EFA               	movlw	-6
 26539  013DE8  006F FF8C  F003    	movff	plusw1,btemp+2
 26540  013DEE  0EFB               	movlw	-5
 26541  013DF0  006F FF8C  F004    	movff	plusw1,btemp+3
 26542  013DF6                     l2872:
 26543                           
 26544                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26545  013DF6  0EF4               	movlw	244
 26546  013DF8  26E1               	addwf	fsr1l,f,c
 26547  013DFA  0EFF               	movlw	255
 26548  013DFC  22E2               	addwfc	fsr1h,f,c
 26549  013DFE  0012               	return		;funcret
 26550  013E00                     __end_of___fladd:
 26551                           	opt callstack 0
 26552                           
 26553 ;; *************** function ___flmul *****************
 26554 ;; Defined at:
 26555 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 26556 ;; Parameters:    Size  Location     Type
 26557 ;;  b               4  [STACK] unsigned char 
 26558 ;;  a               4  [STACK] unsigned char 
 26559 ;; Auto vars:     Size  Location     Type
 26560 ;;  prod            4  [STACK] struct .
 26561 ;;  grs             4  [STACK] unsigned long 
 26562 ;;  temp            2  [STACK] struct .
 26563 ;;  bexp            1  [STACK] unsigned char 
 26564 ;;  aexp            1  [STACK] unsigned char 
 26565 ;;  sign            1  [STACK] unsigned char 
 26566 ;; Return value:  Size  Location     Type
 26567 ;;                  4  [STACK] unsigned char 
 26568 ;; Registers used:
 26569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26570 ;; Tracked objects:
 26571 ;;		On entry : 0/1
 26572 ;;		On exit  : 0/0
 26573 ;;		Unchanged: 0/0
 26574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26579 ;;Total ram usage:        0 bytes
 26580 ;; Hardware stack levels used:    1
 26581 ;; Hardware stack levels required when called:   15
 26582 ;; This function calls:
 26583 ;;		Nothing
 26584 ;; This function is called by:
 26585 ;;		_conv_raw_result
 26586 ;;		_lp_filter
 26587 ;;		_calc_model_data
 26588 ;;		_calc_bsoc
 26589 ;;		_init_bsoc
 26590 ;;		_efgtoa
 26591 ;; This function uses a reentrant model
 26592 ;;
 26593                           
 26594                           	psect	text106
 26595  012E1A                     __ptext106:
 26596                           	opt callstack 0
 26597  012E1A                     ___flmul:
 26598                           	opt callstack 0
 26599                           
 26600                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26601  012E1A  0E0D               	movlw	13
 26602  012E1C  26E1               	addwf	fsr1l,f,c
 26603  012E1E  0E00               	movlw	0
 26604  012E20  22E2               	addwfc	fsr1h,f,c
 26605                           
 26606                           ;stkvar	_b @ sp[(-13)+-4]
 26607                           
 26608                           ;incstack = 0
 26609 ;; hardware stack exceeded
 26610  012E22  0EF2               	movlw	242
 26611  012E24  24E1               	addwf	fsr1l,w,c
 26612  012E26  6ED9               	movwf	fsr2l,c
 26613  012E28  0EFF               	movlw	255
 26614  012E2A  20E2               	addwfc	fsr1h,w,c
 26615  012E2C  6EDA               	movwf	fsr2h,c
 26616  012E2E  50DF               	movf	indf2,w,c
 26617  012E30  6E0C               	movwf	(btemp+11)^0,c
 26618  012E32  0E80               	movlw	128
 26619  012E34  160C               	andwf	(btemp+11)^0,f,c
 26620                           
 26621                           ;stkvar	_sign @ sp[(-13)+12]
 26622  012E36  0EFF               	movlw	-1
 26623  012E38  0060  F033  FFE3   	movff	btemp+11,plusw1
 26624                           
 26625                           ;stkvar	_b @ sp[(-13)+-4]
 26626  012E3E  0EF2               	movlw	242
 26627  012E40  24E1               	addwf	fsr1l,w,c
 26628  012E42  6ED9               	movwf	fsr2l,c
 26629  012E44  0EFF               	movlw	255
 26630  012E46  20E2               	addwfc	fsr1h,w,c
 26631  012E48  6EDA               	movwf	fsr2h,c
 26632  012E4A  50DF               	movf	indf2,w,c
 26633  012E4C  6E0C               	movwf	(btemp+11)^0,c
 26634  012E4E  90D8               	bcf	status,0,c
 26635  012E50  340C               	rlcf	(btemp+11)^0,w,c
 26636  012E52  6E0B               	movwf	(btemp+10)^0,c
 26637                           
 26638                           ;stkvar	_bexp @ sp[(-13)+10]
 26639  012E54  0EFD               	movlw	-3
 26640  012E56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26641                           
 26642                           ;stkvar	_b @ sp[(-13)+-4]
 26643  012E5C  0EF1               	movlw	241
 26644  012E5E  24E1               	addwf	fsr1l,w,c
 26645  012E60  6ED9               	movwf	fsr2l,c
 26646  012E62  0EFF               	movlw	255
 26647  012E64  20E2               	addwfc	fsr1h,w,c
 26648  012E66  6EDA               	movwf	fsr2h,c
 26649  012E68  AEDF               	btfss	indf2,7,c
 26650  012E6A  D002               	goto	l7932
 26651                           
 26652                           ;stkvar	_bexp @ sp[(-13)+10]
 26653  012E6C  0EFD               	movlw	-3
 26654  012E6E  80E3               	bsf	plusw1,0,c
 26655  012E70                     l7932:
 26656                           
 26657                           ;stkvar	_bexp @ sp[(-13)+10]
 26658  012E70  0EFD               	movlw	-3
 26659  012E72  50E3               	movf	plusw1,w,c
 26660  012E74  B4D8               	btfsc	status,2,c
 26661  012E76  D01F               	goto	l7940
 26662                           
 26663                           ;stkvar	_bexp @ sp[(-13)+10]
 26664  012E78  0EFD               	movlw	-3
 26665  012E7A  28E3               	incf	plusw1,w,c
 26666  012E7C  A4D8               	btfss	status,2,c
 26667  012E7E  D018               	goto	l7938
 26668  012E80  0E00               	movlw	0
 26669  012E82  6E09               	movwf	(btemp+8)^0,c
 26670  012E84  0E00               	movlw	0
 26671  012E86  6E0A               	movwf	(btemp+9)^0,c
 26672  012E88  0E00               	movlw	0
 26673  012E8A  6E0B               	movwf	(btemp+10)^0,c
 26674  012E8C  0E00               	movlw	0
 26675  012E8E  6E0C               	movwf	(btemp+11)^0,c
 26676                           
 26677                           ;stkvar	_b @ sp[(-13)+-4]
 26678  012E90  0EEF               	movlw	-17
 26679  012E92  0060  F027  FFE3   	movff	btemp+8,plusw1
 26680  012E98  0EF0               	movlw	-16
 26681  012E9A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26682  012EA0  0EF1               	movlw	-15
 26683  012EA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26684  012EA8  0EF2               	movlw	-14
 26685  012EAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26686  012EB0                     l7938:
 26687                           
 26688                           ;stkvar	_b @ sp[(-13)+-4]
 26689  012EB0  0EF1               	movlw	-15
 26690  012EB2  8EE3               	bsf	plusw1,7,c
 26691  012EB4  D018               	goto	l7942
 26692  012EB6                     l7940:
 26693  012EB6  0E00               	movlw	0
 26694  012EB8  6E09               	movwf	(btemp+8)^0,c
 26695  012EBA  0E00               	movlw	0
 26696  012EBC  6E0A               	movwf	(btemp+9)^0,c
 26697  012EBE  0E00               	movlw	0
 26698  012EC0  6E0B               	movwf	(btemp+10)^0,c
 26699  012EC2  0E00               	movlw	0
 26700  012EC4  6E0C               	movwf	(btemp+11)^0,c
 26701                           
 26702                           ;stkvar	_b @ sp[(-13)+-4]
 26703  012EC6  0EEF               	movlw	-17
 26704  012EC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 26705  012ECE  0EF0               	movlw	-16
 26706  012ED0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26707  012ED6  0EF1               	movlw	-15
 26708  012ED8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26709  012EDE  0EF2               	movlw	-14
 26710  012EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26711  012EE6                     l7942:
 26712                           
 26713                           ;stkvar	_a @ sp[(-13)+-8]
 26714  012EE6  0EEE               	movlw	238
 26715  012EE8  24E1               	addwf	fsr1l,w,c
 26716  012EEA  6ED9               	movwf	fsr2l,c
 26717  012EEC  0EFF               	movlw	255
 26718  012EEE  20E2               	addwfc	fsr1h,w,c
 26719  012EF0  6EDA               	movwf	fsr2h,c
 26720  012EF2  50DF               	movf	indf2,w,c
 26721  012EF4  6E0C               	movwf	(btemp+11)^0,c
 26722  012EF6  0E80               	movlw	128
 26723  012EF8  160C               	andwf	(btemp+11)^0,f,c
 26724                           
 26725                           ;stkvar	_sign @ sp[(-13)+12]
 26726  012EFA  50E1               	movf	fsr1l,w,c
 26727  012EFC  0FFF               	addlw	-1
 26728  012EFE  6ED9               	movwf	fsr2l,c
 26729  012F00  50E2               	movf	fsr1h,w,c
 26730  012F02  6EDA               	movwf	fsr2h,c
 26731  012F04  0EFF               	movlw	255
 26732  012F06  22DA               	addwfc	fsr2h,f,c
 26733  012F08  500C               	movf	(btemp+11)^0,w,c
 26734  012F0A  1ADF               	xorwf	indf2,f,c
 26735                           
 26736                           ;stkvar	_a @ sp[(-13)+-8]
 26737  012F0C  0EEE               	movlw	238
 26738  012F0E  24E1               	addwf	fsr1l,w,c
 26739  012F10  6ED9               	movwf	fsr2l,c
 26740  012F12  0EFF               	movlw	255
 26741  012F14  20E2               	addwfc	fsr1h,w,c
 26742  012F16  6EDA               	movwf	fsr2h,c
 26743  012F18  50DF               	movf	indf2,w,c
 26744  012F1A  6E0C               	movwf	(btemp+11)^0,c
 26745  012F1C  90D8               	bcf	status,0,c
 26746  012F1E  340C               	rlcf	(btemp+11)^0,w,c
 26747  012F20  6E0B               	movwf	(btemp+10)^0,c
 26748                           
 26749                           ;stkvar	_aexp @ sp[(-13)+11]
 26750  012F22  0EFE               	movlw	-2
 26751  012F24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26752                           
 26753                           ;stkvar	_a @ sp[(-13)+-8]
 26754  012F2A  0EED               	movlw	237
 26755  012F2C  24E1               	addwf	fsr1l,w,c
 26756  012F2E  6ED9               	movwf	fsr2l,c
 26757  012F30  0EFF               	movlw	255
 26758  012F32  20E2               	addwfc	fsr1h,w,c
 26759  012F34  6EDA               	movwf	fsr2h,c
 26760  012F36  AEDF               	btfss	indf2,7,c
 26761  012F38  D002               	goto	l7950
 26762                           
 26763                           ;stkvar	_aexp @ sp[(-13)+11]
 26764  012F3A  0EFE               	movlw	-2
 26765  012F3C  80E3               	bsf	plusw1,0,c
 26766  012F3E                     l7950:
 26767                           
 26768                           ;stkvar	_aexp @ sp[(-13)+11]
 26769  012F3E  0EFE               	movlw	-2
 26770  012F40  50E3               	movf	plusw1,w,c
 26771  012F42  B4D8               	btfsc	status,2,c
 26772  012F44  D01F               	goto	l7958
 26773                           
 26774                           ;stkvar	_aexp @ sp[(-13)+11]
 26775  012F46  0EFE               	movlw	-2
 26776  012F48  28E3               	incf	plusw1,w,c
 26777  012F4A  A4D8               	btfss	status,2,c
 26778  012F4C  D018               	goto	l7956
 26779  012F4E  0E00               	movlw	0
 26780  012F50  6E09               	movwf	(btemp+8)^0,c
 26781  012F52  0E00               	movlw	0
 26782  012F54  6E0A               	movwf	(btemp+9)^0,c
 26783  012F56  0E00               	movlw	0
 26784  012F58  6E0B               	movwf	(btemp+10)^0,c
 26785  012F5A  0E00               	movlw	0
 26786  012F5C  6E0C               	movwf	(btemp+11)^0,c
 26787                           
 26788                           ;stkvar	_a @ sp[(-13)+-8]
 26789  012F5E  0EEB               	movlw	-21
 26790  012F60  0060  F027  FFE3   	movff	btemp+8,plusw1
 26791  012F66  0EEC               	movlw	-20
 26792  012F68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26793  012F6E  0EED               	movlw	-19
 26794  012F70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26795  012F76  0EEE               	movlw	-18
 26796  012F78  0060  F033  FFE3   	movff	btemp+11,plusw1
 26797  012F7E                     l7956:
 26798                           
 26799                           ;stkvar	_a @ sp[(-13)+-8]
 26800  012F7E  0EED               	movlw	-19
 26801  012F80  8EE3               	bsf	plusw1,7,c
 26802  012F82  D018               	goto	l7960
 26803  012F84                     l7958:
 26804  012F84  0E00               	movlw	0
 26805  012F86  6E09               	movwf	(btemp+8)^0,c
 26806  012F88  0E00               	movlw	0
 26807  012F8A  6E0A               	movwf	(btemp+9)^0,c
 26808  012F8C  0E00               	movlw	0
 26809  012F8E  6E0B               	movwf	(btemp+10)^0,c
 26810  012F90  0E00               	movlw	0
 26811  012F92  6E0C               	movwf	(btemp+11)^0,c
 26812                           
 26813                           ;stkvar	_a @ sp[(-13)+-8]
 26814  012F94  0EEB               	movlw	-21
 26815  012F96  0060  F027  FFE3   	movff	btemp+8,plusw1
 26816  012F9C  0EEC               	movlw	-20
 26817  012F9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26818  012FA4  0EED               	movlw	-19
 26819  012FA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26820  012FAC  0EEE               	movlw	-18
 26821  012FAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26822  012FB4                     l7960:
 26823                           
 26824                           ;stkvar	_aexp @ sp[(-13)+11]
 26825  012FB4  0EFE               	movlw	-2
 26826  012FB6  50E3               	movf	plusw1,w,c
 26827  012FB8  B4D8               	btfsc	status,2,c
 26828  012FBA  D004               	goto	u6460
 26829                           
 26830                           ;stkvar	_bexp @ sp[(-13)+10]
 26831  012FBC  0EFD               	movlw	-3
 26832  012FBE  50E3               	movf	plusw1,w,c
 26833  012FC0  A4D8               	btfss	status,2,c
 26834  012FC2  D009               	goto	l7968
 26835  012FC4                     u6460:
 26836  012FC4  0E00               	movlw	0
 26837  012FC6  6E01               	movwf	btemp^0,c
 26838  012FC8  0E00               	movlw	0
 26839  012FCA  6E02               	movwf	(btemp+1)^0,c
 26840  012FCC  0E00               	movlw	0
 26841  012FCE  6E03               	movwf	(btemp+2)^0,c
 26842  012FD0  0E00               	movlw	0
 26843  012FD2  6E04               	movwf	(btemp+3)^0,c
 26844  012FD4  D332               	goto	l2953
 26845  012FD6                     l7968:
 26846                           
 26847                           ;stkvar	_b @ sp[(-13)+-4]
 26848  012FD6  0EEF               	movlw	-17
 26849  012FD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 26850                           
 26851                           ;stkvar	_a @ sp[(-13)+-8]
 26852  012FDE  0EED               	movlw	237
 26853  012FE0  24E1               	addwf	fsr1l,w,c
 26854  012FE2  6ED9               	movwf	fsr2l,c
 26855  012FE4  0EFF               	movlw	255
 26856  012FE6  20E2               	addwfc	fsr1h,w,c
 26857  012FE8  6EDA               	movwf	fsr2h,c
 26858  012FEA  50DF               	movf	indf2,w,c
 26859  012FEC  020C               	mulwf	(btemp+11)^0,c
 26860                           
 26861                           ;stkvar	_temp @ sp[(-13)+8]
 26862  012FEE  0EFB               	movlw	-5
 26863  012FF0  006F FFCF FFE3     	movff	prodl,plusw1
 26864  012FF6  0EFC               	movlw	-4
 26865  012FF8  006F FFD3 FFE3     	movff	prodh,plusw1
 26866                           
 26867                           ;stkvar	_temp @ sp[(-13)+8]
 26868  012FFE  0EFB               	movlw	-5
 26869  013000  006F FF8C  F00C    	movff	plusw1,btemp+11
 26870  013006  0060  F030  F005   	movff	btemp+11,btemp+4
 26871  01300C  6A06               	clrf	(btemp+5)^0,c
 26872  01300E  6A07               	clrf	(btemp+6)^0,c
 26873  013010  6A08               	clrf	(btemp+7)^0,c
 26874                           
 26875                           ;stkvar	_grs @ sp[(-13)+4]
 26876  013012  0EF7               	movlw	-9
 26877  013014  0060  F017  FFE3   	movff	btemp+4,plusw1
 26878  01301A  0EF8               	movlw	-8
 26879  01301C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26880  013022  0EF9               	movlw	-7
 26881  013024  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26882  01302A  0EFA               	movlw	-6
 26883  01302C  0060  F023  FFE3   	movff	btemp+7,plusw1
 26884                           
 26885                           ;stkvar	_temp @ sp[(-13)+8]
 26886  013032  0EFC               	movlw	252
 26887  013034  24E1               	addwf	fsr1l,w,c
 26888  013036  6ED9               	movwf	fsr2l,c
 26889  013038  0EFF               	movlw	255
 26890  01303A  20E2               	addwfc	fsr1h,w,c
 26891  01303C  6EDA               	movwf	fsr2h,c
 26892  01303E  50DF               	movf	indf2,w,c
 26893  013040  6E0C               	movwf	(btemp+11)^0,c
 26894  013042  0060  F030  F005   	movff	btemp+11,btemp+4
 26895  013048  6A06               	clrf	(btemp+5)^0,c
 26896  01304A  6A07               	clrf	(btemp+6)^0,c
 26897  01304C  6A08               	clrf	(btemp+7)^0,c
 26898                           
 26899                           ;stkvar	_prod @ sp[(-13)+0]
 26900  01304E  0EF3               	movlw	-13
 26901  013050  0060  F017  FFE3   	movff	btemp+4,plusw1
 26902  013056  0EF4               	movlw	-12
 26903  013058  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26904  01305E  0EF5               	movlw	-11
 26905  013060  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26906  013066  0EF6               	movlw	-10
 26907  013068  0060  F023  FFE3   	movff	btemp+7,plusw1
 26908                           
 26909                           ;stkvar	_b @ sp[(-13)+-4]
 26910  01306E  0EF0               	movlw	240
 26911  013070  24E1               	addwf	fsr1l,w,c
 26912  013072  6ED9               	movwf	fsr2l,c
 26913  013074  0EFF               	movlw	255
 26914  013076  20E2               	addwfc	fsr1h,w,c
 26915  013078  6EDA               	movwf	fsr2h,c
 26916  01307A  50DF               	movf	indf2,w,c
 26917  01307C  6E0C               	movwf	(btemp+11)^0,c
 26918                           
 26919                           ;stkvar	_a @ sp[(-13)+-8]
 26920  01307E  0EEC               	movlw	236
 26921  013080  24E1               	addwf	fsr1l,w,c
 26922  013082  6ED9               	movwf	fsr2l,c
 26923  013084  0EFF               	movlw	255
 26924  013086  20E2               	addwfc	fsr1h,w,c
 26925  013088  6EDA               	movwf	fsr2h,c
 26926  01308A  50DF               	movf	indf2,w,c
 26927  01308C  020C               	mulwf	(btemp+11)^0,c
 26928                           
 26929                           ;stkvar	_temp @ sp[(-13)+8]
 26930  01308E  0EFB               	movlw	-5
 26931  013090  006F FFCF FFE3     	movff	prodl,plusw1
 26932  013096  0EFC               	movlw	-4
 26933  013098  006F FFD3 FFE3     	movff	prodh,plusw1
 26934                           
 26935                           ;stkvar	_grs @ sp[(-13)+4]
 26936  01309E  50E1               	movf	fsr1l,w,c
 26937  0130A0  0FF7               	addlw	-9
 26938  0130A2  6ED9               	movwf	fsr2l,c
 26939  0130A4  50E2               	movf	fsr1h,w,c
 26940  0130A6  6EDA               	movwf	fsr2h,c
 26941  0130A8  0EFF               	movlw	255
 26942  0130AA  22DA               	addwfc	fsr2h,f,c
 26943                           
 26944                           ;stkvar	_temp @ sp[(-13)+8]
 26945  0130AC  0EFB               	movlw	-5
 26946  0130AE  50E3               	movf	plusw1,w,c
 26947  0130B0  26DE               	addwf	postinc2,f,c
 26948  0130B2  0E00               	movlw	0
 26949  0130B4  22DE               	addwfc	postinc2,f,c
 26950  0130B6  22DE               	addwfc	postinc2,f,c
 26951  0130B8  22DE               	addwfc	postinc2,f,c
 26952                           
 26953                           ;stkvar	_prod @ sp[(-13)+0]
 26954  0130BA  50E1               	movf	fsr1l,w,c
 26955  0130BC  0FF3               	addlw	-13
 26956  0130BE  6ED9               	movwf	fsr2l,c
 26957  0130C0  50E2               	movf	fsr1h,w,c
 26958  0130C2  6EDA               	movwf	fsr2h,c
 26959  0130C4  0EFF               	movlw	255
 26960  0130C6  22DA               	addwfc	fsr2h,f,c
 26961                           
 26962                           ;stkvar	_temp @ sp[(-13)+8]
 26963  0130C8  0EFC               	movlw	252
 26964  0130CA  24E1               	addwf	fsr1l,w,c
 26965  0130CC  6EE9               	movwf	fsr0l,c
 26966  0130CE  0EFF               	movlw	255
 26967  0130D0  20E2               	addwfc	fsr1h,w,c
 26968  0130D2  6EEA               	movwf	fsr0h,c
 26969  0130D4  50EF               	movf	indf0,w,c
 26970  0130D6  26DE               	addwf	postinc2,f,c
 26971  0130D8  0E00               	movlw	0
 26972  0130DA  22DE               	addwfc	postinc2,f,c
 26973  0130DC  22DE               	addwfc	postinc2,f,c
 26974  0130DE  22DE               	addwfc	postinc2,f,c
 26975                           
 26976                           ;stkvar	_b @ sp[(-13)+-4]
 26977  0130E0  0EF1               	movlw	241
 26978  0130E2  24E1               	addwf	fsr1l,w,c
 26979  0130E4  6ED9               	movwf	fsr2l,c
 26980  0130E6  0EFF               	movlw	255
 26981  0130E8  20E2               	addwfc	fsr1h,w,c
 26982  0130EA  6EDA               	movwf	fsr2h,c
 26983  0130EC  50DF               	movf	indf2,w,c
 26984  0130EE  6E0C               	movwf	(btemp+11)^0,c
 26985                           
 26986                           ;stkvar	_a @ sp[(-13)+-8]
 26987  0130F0  0EEB               	movlw	-21
 26988  0130F2  50E3               	movf	plusw1,w,c
 26989  0130F4  020C               	mulwf	(btemp+11)^0,c
 26990                           
 26991                           ;stkvar	_temp @ sp[(-13)+8]
 26992  0130F6  0EFB               	movlw	-5
 26993  0130F8  006F FFCF FFE3     	movff	prodl,plusw1
 26994  0130FE  0EFC               	movlw	-4
 26995  013100  006F FFD3 FFE3     	movff	prodh,plusw1
 26996                           
 26997                           ;stkvar	_grs @ sp[(-13)+4]
 26998  013106  50E1               	movf	fsr1l,w,c
 26999  013108  0FF7               	addlw	-9
 27000  01310A  6ED9               	movwf	fsr2l,c
 27001  01310C  50E2               	movf	fsr1h,w,c
 27002  01310E  6EDA               	movwf	fsr2h,c
 27003  013110  0EFF               	movlw	255
 27004  013112  22DA               	addwfc	fsr2h,f,c
 27005                           
 27006                           ;stkvar	_temp @ sp[(-13)+8]
 27007  013114  0EFB               	movlw	-5
 27008  013116  50E3               	movf	plusw1,w,c
 27009  013118  26DE               	addwf	postinc2,f,c
 27010  01311A  0E00               	movlw	0
 27011  01311C  22DE               	addwfc	postinc2,f,c
 27012  01311E  22DE               	addwfc	postinc2,f,c
 27013  013120  22DE               	addwfc	postinc2,f,c
 27014                           
 27015                           ;stkvar	_prod @ sp[(-13)+0]
 27016  013122  50E1               	movf	fsr1l,w,c
 27017  013124  0FF3               	addlw	-13
 27018  013126  6ED9               	movwf	fsr2l,c
 27019  013128  50E2               	movf	fsr1h,w,c
 27020  01312A  6EDA               	movwf	fsr2h,c
 27021  01312C  0EFF               	movlw	255
 27022  01312E  22DA               	addwfc	fsr2h,f,c
 27023                           
 27024                           ;stkvar	_temp @ sp[(-13)+8]
 27025  013130  0EFC               	movlw	252
 27026  013132  24E1               	addwf	fsr1l,w,c
 27027  013134  6EE9               	movwf	fsr0l,c
 27028  013136  0EFF               	movlw	255
 27029  013138  20E2               	addwfc	fsr1h,w,c
 27030  01313A  6EEA               	movwf	fsr0h,c
 27031  01313C  50EF               	movf	indf0,w,c
 27032  01313E  26DE               	addwf	postinc2,f,c
 27033  013140  0E00               	movlw	0
 27034  013142  22DE               	addwfc	postinc2,f,c
 27035  013144  22DE               	addwfc	postinc2,f,c
 27036  013146  22DE               	addwfc	postinc2,f,c
 27037                           
 27038                           ;stkvar	_grs @ sp[(-13)+4]
 27039  013148  50E1               	movf	fsr1l,w,c
 27040  01314A  0FF7               	addlw	-9
 27041  01314C  6ED9               	movwf	fsr2l,c
 27042  01314E  50E2               	movf	fsr1h,w,c
 27043  013150  6EDA               	movwf	fsr2h,c
 27044  013152  0EFF               	movlw	255
 27045  013154  22DA               	addwfc	fsr2h,f,c
 27046  013156  0E08               	movlw	8
 27047  013158                     u6475:
 27048  013158  90D8               	bcf	status,0,c
 27049  01315A  36DE               	rlcf	postinc2,f,c
 27050  01315C  36DE               	rlcf	postinc2,f,c
 27051  01315E  36DE               	rlcf	postinc2,f,c
 27052  013160  36DD               	rlcf	postdec2,f,c
 27053  013162  52DD               	movf	postdec2,f,c
 27054  013164  52DD               	movf	postdec2,f,c
 27055  013166  2EE8               	decfsz	wreg,f,c
 27056  013168  D7F7               	goto	u6475
 27057                           
 27058                           ;stkvar	_b @ sp[(-13)+-4]
 27059  01316A  0EF0               	movlw	240
 27060  01316C  24E1               	addwf	fsr1l,w,c
 27061  01316E  6ED9               	movwf	fsr2l,c
 27062  013170  0EFF               	movlw	255
 27063  013172  20E2               	addwfc	fsr1h,w,c
 27064  013174  6EDA               	movwf	fsr2h,c
 27065  013176  50DF               	movf	indf2,w,c
 27066  013178  6E0C               	movwf	(btemp+11)^0,c
 27067                           
 27068                           ;stkvar	_a @ sp[(-13)+-8]
 27069  01317A  0EEB               	movlw	-21
 27070  01317C  50E3               	movf	plusw1,w,c
 27071  01317E  020C               	mulwf	(btemp+11)^0,c
 27072                           
 27073                           ;stkvar	_temp @ sp[(-13)+8]
 27074  013180  0EFB               	movlw	-5
 27075  013182  006F FFCF FFE3     	movff	prodl,plusw1
 27076  013188  0EFC               	movlw	-4
 27077  01318A  006F FFD3 FFE3     	movff	prodh,plusw1
 27078                           
 27079                           ;stkvar	_temp @ sp[(-13)+8]
 27080  013190  0EFB               	movlw	-5
 27081  013192  006F FF8C  F00B    	movff	plusw1,btemp+10
 27082  013198  0EFC               	movlw	-4
 27083  01319A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27084                           
 27085                           ;stkvar	_grs @ sp[(-13)+4]
 27086  0131A0  50E1               	movf	fsr1l,w,c
 27087  0131A2  0FF7               	addlw	-9
 27088  0131A4  6ED9               	movwf	fsr2l,c
 27089  0131A6  50E2               	movf	fsr1h,w,c
 27090  0131A8  6EDA               	movwf	fsr2h,c
 27091  0131AA  0EFF               	movlw	255
 27092  0131AC  22DA               	addwfc	fsr2h,f,c
 27093  0131AE  500B               	movf	(btemp+10)^0,w,c
 27094  0131B0  26DE               	addwf	postinc2,f,c
 27095  0131B2  500C               	movf	(btemp+11)^0,w,c
 27096  0131B4  22DE               	addwfc	postinc2,f,c
 27097  0131B6  0E00               	movlw	0
 27098  0131B8  22DE               	addwfc	postinc2,f,c
 27099  0131BA  22DE               	addwfc	postinc2,f,c
 27100                           
 27101                           ;stkvar	_b @ sp[(-13)+-4]
 27102  0131BC  0EEF               	movlw	-17
 27103  0131BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27104                           
 27105                           ;stkvar	_a @ sp[(-13)+-8]
 27106  0131C4  0EEC               	movlw	236
 27107  0131C6  24E1               	addwf	fsr1l,w,c
 27108  0131C8  6ED9               	movwf	fsr2l,c
 27109  0131CA  0EFF               	movlw	255
 27110  0131CC  20E2               	addwfc	fsr1h,w,c
 27111  0131CE  6EDA               	movwf	fsr2h,c
 27112  0131D0  50DF               	movf	indf2,w,c
 27113  0131D2  020C               	mulwf	(btemp+11)^0,c
 27114                           
 27115                           ;stkvar	_temp @ sp[(-13)+8]
 27116  0131D4  0EFB               	movlw	-5
 27117  0131D6  006F FFCF FFE3     	movff	prodl,plusw1
 27118  0131DC  0EFC               	movlw	-4
 27119  0131DE  006F FFD3 FFE3     	movff	prodh,plusw1
 27120                           
 27121                           ;stkvar	_temp @ sp[(-13)+8]
 27122  0131E4  0EFB               	movlw	-5
 27123  0131E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 27124  0131EC  0EFC               	movlw	-4
 27125  0131EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27126                           
 27127                           ;stkvar	_grs @ sp[(-13)+4]
 27128  0131F4  50E1               	movf	fsr1l,w,c
 27129  0131F6  0FF7               	addlw	-9
 27130  0131F8  6ED9               	movwf	fsr2l,c
 27131  0131FA  50E2               	movf	fsr1h,w,c
 27132  0131FC  6EDA               	movwf	fsr2h,c
 27133  0131FE  0EFF               	movlw	255
 27134  013200  22DA               	addwfc	fsr2h,f,c
 27135  013202  500B               	movf	(btemp+10)^0,w,c
 27136  013204  26DE               	addwf	postinc2,f,c
 27137  013206  500C               	movf	(btemp+11)^0,w,c
 27138  013208  22DE               	addwfc	postinc2,f,c
 27139  01320A  0E00               	movlw	0
 27140  01320C  22DE               	addwfc	postinc2,f,c
 27141  01320E  22DE               	addwfc	postinc2,f,c
 27142                           
 27143                           ;stkvar	_grs @ sp[(-13)+4]
 27144  013210  50E1               	movf	fsr1l,w,c
 27145  013212  0FF7               	addlw	-9
 27146  013214  6ED9               	movwf	fsr2l,c
 27147  013216  50E2               	movf	fsr1h,w,c
 27148  013218  6EDA               	movwf	fsr2h,c
 27149  01321A  0EFF               	movlw	255
 27150  01321C  22DA               	addwfc	fsr2h,f,c
 27151  01321E  0E08               	movlw	8
 27152  013220                     u6485:
 27153  013220  90D8               	bcf	status,0,c
 27154  013222  36DE               	rlcf	postinc2,f,c
 27155  013224  36DE               	rlcf	postinc2,f,c
 27156  013226  36DE               	rlcf	postinc2,f,c
 27157  013228  36DD               	rlcf	postdec2,f,c
 27158  01322A  52DD               	movf	postdec2,f,c
 27159  01322C  52DD               	movf	postdec2,f,c
 27160  01322E  2EE8               	decfsz	wreg,f,c
 27161  013230  D7F7               	goto	u6485
 27162                           
 27163                           ;stkvar	_b @ sp[(-13)+-4]
 27164  013232  0EEF               	movlw	-17
 27165  013234  006F FF8C  F00C    	movff	plusw1,btemp+11
 27166                           
 27167                           ;stkvar	_a @ sp[(-13)+-8]
 27168  01323A  0EEB               	movlw	-21
 27169  01323C  50E3               	movf	plusw1,w,c
 27170  01323E  020C               	mulwf	(btemp+11)^0,c
 27171                           
 27172                           ;stkvar	_temp @ sp[(-13)+8]
 27173  013240  0EFB               	movlw	-5
 27174  013242  006F FFCF FFE3     	movff	prodl,plusw1
 27175  013248  0EFC               	movlw	-4
 27176  01324A  006F FFD3 FFE3     	movff	prodh,plusw1
 27177                           
 27178                           ;stkvar	_temp @ sp[(-13)+8]
 27179  013250  0EFB               	movlw	-5
 27180  013252  006F FF8C  F00B    	movff	plusw1,btemp+10
 27181  013258  0EFC               	movlw	-4
 27182  01325A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27183                           
 27184                           ;stkvar	_grs @ sp[(-13)+4]
 27185  013260  50E1               	movf	fsr1l,w,c
 27186  013262  0FF7               	addlw	-9
 27187  013264  6ED9               	movwf	fsr2l,c
 27188  013266  50E2               	movf	fsr1h,w,c
 27189  013268  6EDA               	movwf	fsr2h,c
 27190  01326A  0EFF               	movlw	255
 27191  01326C  22DA               	addwfc	fsr2h,f,c
 27192  01326E  500B               	movf	(btemp+10)^0,w,c
 27193  013270  26DE               	addwf	postinc2,f,c
 27194  013272  500C               	movf	(btemp+11)^0,w,c
 27195  013274  22DE               	addwfc	postinc2,f,c
 27196  013276  0E00               	movlw	0
 27197  013278  22DE               	addwfc	postinc2,f,c
 27198  01327A  22DE               	addwfc	postinc2,f,c
 27199                           
 27200                           ;stkvar	_b @ sp[(-13)+-4]
 27201  01327C  0EF0               	movlw	240
 27202  01327E  24E1               	addwf	fsr1l,w,c
 27203  013280  6ED9               	movwf	fsr2l,c
 27204  013282  0EFF               	movlw	255
 27205  013284  20E2               	addwfc	fsr1h,w,c
 27206  013286  6EDA               	movwf	fsr2h,c
 27207  013288  50DF               	movf	indf2,w,c
 27208  01328A  6E0C               	movwf	(btemp+11)^0,c
 27209                           
 27210                           ;stkvar	_a @ sp[(-13)+-8]
 27211  01328C  0EED               	movlw	237
 27212  01328E  24E1               	addwf	fsr1l,w,c
 27213  013290  6ED9               	movwf	fsr2l,c
 27214  013292  0EFF               	movlw	255
 27215  013294  20E2               	addwfc	fsr1h,w,c
 27216  013296  6EDA               	movwf	fsr2h,c
 27217  013298  50DF               	movf	indf2,w,c
 27218  01329A  020C               	mulwf	(btemp+11)^0,c
 27219                           
 27220                           ;stkvar	_temp @ sp[(-13)+8]
 27221  01329C  0EFB               	movlw	-5
 27222  01329E  006F FFCF FFE3     	movff	prodl,plusw1
 27223  0132A4  0EFC               	movlw	-4
 27224  0132A6  006F FFD3 FFE3     	movff	prodh,plusw1
 27225                           
 27226                           ;stkvar	_temp @ sp[(-13)+8]
 27227  0132AC  0EFB               	movlw	-5
 27228  0132AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27229  0132B4  0EFC               	movlw	-4
 27230  0132B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27231                           
 27232                           ;stkvar	_prod @ sp[(-13)+0]
 27233  0132BC  50E1               	movf	fsr1l,w,c
 27234  0132BE  0FF3               	addlw	-13
 27235  0132C0  6ED9               	movwf	fsr2l,c
 27236  0132C2  50E2               	movf	fsr1h,w,c
 27237  0132C4  6EDA               	movwf	fsr2h,c
 27238  0132C6  0EFF               	movlw	255
 27239  0132C8  22DA               	addwfc	fsr2h,f,c
 27240  0132CA  500B               	movf	(btemp+10)^0,w,c
 27241  0132CC  26DE               	addwf	postinc2,f,c
 27242  0132CE  500C               	movf	(btemp+11)^0,w,c
 27243  0132D0  22DE               	addwfc	postinc2,f,c
 27244  0132D2  0E00               	movlw	0
 27245  0132D4  22DE               	addwfc	postinc2,f,c
 27246  0132D6  22DE               	addwfc	postinc2,f,c
 27247                           
 27248                           ;stkvar	_b @ sp[(-13)+-4]
 27249  0132D8  0EF1               	movlw	241
 27250  0132DA  24E1               	addwf	fsr1l,w,c
 27251  0132DC  6ED9               	movwf	fsr2l,c
 27252  0132DE  0EFF               	movlw	255
 27253  0132E0  20E2               	addwfc	fsr1h,w,c
 27254  0132E2  6EDA               	movwf	fsr2h,c
 27255  0132E4  50DF               	movf	indf2,w,c
 27256  0132E6  6E0C               	movwf	(btemp+11)^0,c
 27257                           
 27258                           ;stkvar	_a @ sp[(-13)+-8]
 27259  0132E8  0EEC               	movlw	236
 27260  0132EA  24E1               	addwf	fsr1l,w,c
 27261  0132EC  6ED9               	movwf	fsr2l,c
 27262  0132EE  0EFF               	movlw	255
 27263  0132F0  20E2               	addwfc	fsr1h,w,c
 27264  0132F2  6EDA               	movwf	fsr2h,c
 27265  0132F4  50DF               	movf	indf2,w,c
 27266  0132F6  020C               	mulwf	(btemp+11)^0,c
 27267                           
 27268                           ;stkvar	_temp @ sp[(-13)+8]
 27269  0132F8  0EFB               	movlw	-5
 27270  0132FA  006F FFCF FFE3     	movff	prodl,plusw1
 27271  013300  0EFC               	movlw	-4
 27272  013302  006F FFD3 FFE3     	movff	prodh,plusw1
 27273                           
 27274                           ;stkvar	_temp @ sp[(-13)+8]
 27275  013308  0EFB               	movlw	-5
 27276  01330A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27277  013310  0EFC               	movlw	-4
 27278  013312  006F FF8C  F00C    	movff	plusw1,btemp+11
 27279                           
 27280                           ;stkvar	_prod @ sp[(-13)+0]
 27281  013318  50E1               	movf	fsr1l,w,c
 27282  01331A  0FF3               	addlw	-13
 27283  01331C  6ED9               	movwf	fsr2l,c
 27284  01331E  50E2               	movf	fsr1h,w,c
 27285  013320  6EDA               	movwf	fsr2h,c
 27286  013322  0EFF               	movlw	255
 27287  013324  22DA               	addwfc	fsr2h,f,c
 27288  013326  500B               	movf	(btemp+10)^0,w,c
 27289  013328  26DE               	addwf	postinc2,f,c
 27290  01332A  500C               	movf	(btemp+11)^0,w,c
 27291  01332C  22DE               	addwfc	postinc2,f,c
 27292  01332E  0E00               	movlw	0
 27293  013330  22DE               	addwfc	postinc2,f,c
 27294  013332  22DE               	addwfc	postinc2,f,c
 27295                           
 27296                           ;stkvar	_b @ sp[(-13)+-4]
 27297  013334  0EF1               	movlw	241
 27298  013336  24E1               	addwf	fsr1l,w,c
 27299  013338  6ED9               	movwf	fsr2l,c
 27300  01333A  0EFF               	movlw	255
 27301  01333C  20E2               	addwfc	fsr1h,w,c
 27302  01333E  6EDA               	movwf	fsr2h,c
 27303  013340  50DF               	movf	indf2,w,c
 27304  013342  6E0C               	movwf	(btemp+11)^0,c
 27305                           
 27306                           ;stkvar	_a @ sp[(-13)+-8]
 27307  013344  0EED               	movlw	237
 27308  013346  24E1               	addwf	fsr1l,w,c
 27309  013348  6ED9               	movwf	fsr2l,c
 27310  01334A  0EFF               	movlw	255
 27311  01334C  20E2               	addwfc	fsr1h,w,c
 27312  01334E  6EDA               	movwf	fsr2h,c
 27313  013350  50DF               	movf	indf2,w,c
 27314  013352  020C               	mulwf	(btemp+11)^0,c
 27315                           
 27316                           ;stkvar	_temp @ sp[(-13)+8]
 27317  013354  0EFB               	movlw	-5
 27318  013356  006F FFCF FFE3     	movff	prodl,plusw1
 27319  01335C  0EFC               	movlw	-4
 27320  01335E  006F FFD3 FFE3     	movff	prodh,plusw1
 27321                           
 27322                           ;stkvar	_temp @ sp[(-13)+8]
 27323  013364  0EFB               	movlw	-5
 27324  013366  006F FF8C  F00B    	movff	plusw1,btemp+10
 27325  01336C  0EFC               	movlw	-4
 27326  01336E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27327  013374  500B               	movf	(btemp+10)^0,w,c
 27328  013376  6E05               	movwf	(btemp+4)^0,c
 27329  013378  500C               	movf	(btemp+11)^0,w,c
 27330  01337A  6E06               	movwf	(btemp+5)^0,c
 27331  01337C  6A07               	clrf	(btemp+6)^0,c
 27332  01337E  6A08               	clrf	(btemp+7)^0,c
 27333  013380  0060  F01C  F008   	movff	btemp+6,btemp+7
 27334  013386  0060  F018  F007   	movff	btemp+5,btemp+6
 27335  01338C  0060  F014  F006   	movff	btemp+4,btemp+5
 27336  013392  6A05               	clrf	(btemp+4)^0,c
 27337                           
 27338                           ;stkvar	_prod @ sp[(-13)+0]
 27339  013394  50E1               	movf	fsr1l,w,c
 27340  013396  0FF3               	addlw	-13
 27341  013398  6ED9               	movwf	fsr2l,c
 27342  01339A  50E2               	movf	fsr1h,w,c
 27343  01339C  6EDA               	movwf	fsr2h,c
 27344  01339E  0EFF               	movlw	255
 27345  0133A0  22DA               	addwfc	fsr2h,f,c
 27346  0133A2  5005               	movf	(btemp+4)^0,w,c
 27347  0133A4  26DE               	addwf	postinc2,f,c
 27348  0133A6  5006               	movf	(btemp+5)^0,w,c
 27349  0133A8  22DE               	addwfc	postinc2,f,c
 27350  0133AA  5007               	movf	(btemp+6)^0,w,c
 27351  0133AC  22DE               	addwfc	postinc2,f,c
 27352  0133AE  5008               	movf	(btemp+7)^0,w,c
 27353  0133B0  22DE               	addwfc	postinc2,f,c
 27354                           
 27355                           ;stkvar	_prod @ sp[(-13)+0]
 27356  0133B2  50E1               	movf	fsr1l,w,c
 27357  0133B4  0FF3               	addlw	-13
 27358  0133B6  6ED9               	movwf	fsr2l,c
 27359  0133B8  50E2               	movf	fsr1h,w,c
 27360  0133BA  6EDA               	movwf	fsr2h,c
 27361  0133BC  0EFF               	movlw	255
 27362  0133BE  22DA               	addwfc	fsr2h,f,c
 27363                           
 27364                           ;stkvar	_grs @ sp[(-13)+4]
 27365  0133C0  0EFA               	movlw	250
 27366  0133C2  24E1               	addwf	fsr1l,w,c
 27367  0133C4  6EE9               	movwf	fsr0l,c
 27368  0133C6  0EFF               	movlw	255
 27369  0133C8  20E2               	addwfc	fsr1h,w,c
 27370  0133CA  6EEA               	movwf	fsr0h,c
 27371  0133CC  50EF               	movf	indf0,w,c
 27372  0133CE  26DE               	addwf	postinc2,f,c
 27373  0133D0  0E00               	movlw	0
 27374  0133D2  22DE               	addwfc	postinc2,f,c
 27375  0133D4  22DE               	addwfc	postinc2,f,c
 27376  0133D6  22DE               	addwfc	postinc2,f,c
 27377                           
 27378                           ;stkvar	_grs @ sp[(-13)+4]
 27379  0133D8  50E1               	movf	fsr1l,w,c
 27380  0133DA  0FF7               	addlw	-9
 27381  0133DC  6ED9               	movwf	fsr2l,c
 27382  0133DE  50E2               	movf	fsr1h,w,c
 27383  0133E0  6EDA               	movwf	fsr2h,c
 27384  0133E2  0EFF               	movlw	255
 27385  0133E4  22DA               	addwfc	fsr2h,f,c
 27386  0133E6  0E08               	movlw	8
 27387  0133E8                     u6495:
 27388  0133E8  90D8               	bcf	status,0,c
 27389  0133EA  36DE               	rlcf	postinc2,f,c
 27390  0133EC  36DE               	rlcf	postinc2,f,c
 27391  0133EE  36DE               	rlcf	postinc2,f,c
 27392  0133F0  36DD               	rlcf	postdec2,f,c
 27393  0133F2  52DD               	movf	postdec2,f,c
 27394  0133F4  52DD               	movf	postdec2,f,c
 27395  0133F6  2EE8               	decfsz	wreg,f,c
 27396  0133F8  D7F7               	goto	u6495
 27397  0133FA  0E82               	movlw	130
 27398  0133FC  6E0B               	movwf	(btemp+10)^0,c
 27399  0133FE  0EFF               	movlw	255
 27400  013400  6E0C               	movwf	(btemp+11)^0,c
 27401                           
 27402                           ;stkvar	_bexp @ sp[(-13)+10]
 27403  013402  0EFD               	movlw	-3
 27404  013404  50E3               	movf	plusw1,w,c
 27405  013406  6E09               	movwf	(btemp+8)^0,c
 27406  013408  6A0A               	clrf	(btemp+9)^0,c
 27407                           
 27408                           ;stkvar	_aexp @ sp[(-13)+11]
 27409  01340A  0EFE               	movlw	-2
 27410  01340C  50E3               	movf	plusw1,w,c
 27411  01340E  2609               	addwf	(btemp+8)^0,f,c
 27412  013410  0E00               	movlw	0
 27413  013412  220A               	addwfc	(btemp+9)^0,f,c
 27414  013414  500B               	movf	(btemp+10)^0,w,c
 27415  013416  2609               	addwf	(btemp+8)^0,f,c
 27416  013418  500C               	movf	(btemp+11)^0,w,c
 27417  01341A  220A               	addwfc	(btemp+9)^0,f,c
 27418                           
 27419                           ;stkvar	_temp @ sp[(-13)+8]
 27420  01341C  0EFB               	movlw	-5
 27421  01341E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27422  013424  0EFC               	movlw	-4
 27423  013426  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27424  01342C  D021               	goto	l8030
 27425  01342E                     l8020:
 27426                           
 27427                           ;stkvar	_prod @ sp[(-13)+0]
 27428  01342E  90D8               	bcf	status,0,c
 27429  013430  0EF3               	movlw	-13
 27430  013432  36E3               	rlcf	plusw1,f,c
 27431  013434  0EF4               	movlw	-12
 27432  013436  36E3               	rlcf	plusw1,f,c
 27433  013438  0EF5               	movlw	-11
 27434  01343A  36E3               	rlcf	plusw1,f,c
 27435  01343C  0EF6               	movlw	-10
 27436  01343E  36E3               	rlcf	plusw1,f,c
 27437                           
 27438                           ;stkvar	_grs @ sp[(-13)+4]
 27439  013440  0EFA               	movlw	-6
 27440  013442  AEE3               	btfss	plusw1,7,c
 27441  013444  D002               	goto	l8026
 27442                           
 27443                           ;stkvar	_prod @ sp[(-13)+0]
 27444  013446  0EF3               	movlw	-13
 27445  013448  80E3               	bsf	plusw1,0,c
 27446  01344A                     l8026:
 27447                           
 27448                           ;stkvar	_grs @ sp[(-13)+4]
 27449  01344A  90D8               	bcf	status,0,c
 27450  01344C  0EF7               	movlw	-9
 27451  01344E  36E3               	rlcf	plusw1,f,c
 27452  013450  0EF8               	movlw	-8
 27453  013452  36E3               	rlcf	plusw1,f,c
 27454  013454  0EF9               	movlw	-7
 27455  013456  36E3               	rlcf	plusw1,f,c
 27456  013458  0EFA               	movlw	-6
 27457  01345A  36E3               	rlcf	plusw1,f,c
 27458                           
 27459                           ;stkvar	_temp @ sp[(-13)+8]
 27460  01345C  50E1               	movf	fsr1l,w,c
 27461  01345E  0FFB               	addlw	-5
 27462  013460  6ED9               	movwf	fsr2l,c
 27463  013462  50E2               	movf	fsr1h,w,c
 27464  013464  6EDA               	movwf	fsr2h,c
 27465  013466  0EFF               	movlw	255
 27466  013468  22DA               	addwfc	fsr2h,f,c
 27467  01346A  06DE               	decf	postinc2,f,c
 27468  01346C  0E00               	movlw	0
 27469  01346E  5ADD               	subwfb	postdec2,f,c
 27470  013470                     l8030:
 27471                           
 27472                           ;stkvar	_prod @ sp[(-13)+0]
 27473  013470  0EF5               	movlw	-11
 27474  013472  AEE3               	btfss	plusw1,7,c
 27475  013474  D7DC               	goto	l8020
 27476                           
 27477                           ;stkvar	_aexp @ sp[(-13)+11]
 27478  013476  0EFE               	movlw	-2
 27479  013478  6AE3               	clrf	plusw1,c
 27480                           
 27481                           ;stkvar	_grs @ sp[(-13)+4]
 27482  01347A  0EFA               	movlw	-6
 27483  01347C  AEE3               	btfss	plusw1,7,c
 27484  01347E  D020               	goto	l8044
 27485                           
 27486                           ;stkvar	_grs @ sp[(-13)+4]
 27487  013480  50E1               	movf	fsr1l,w,c
 27488  013482  0FF7               	addlw	-9
 27489  013484  6ED9               	movwf	fsr2l,c
 27490  013486  50E2               	movf	fsr1h,w,c
 27491  013488  6EDA               	movwf	fsr2h,c
 27492  01348A  0EFF               	movlw	255
 27493  01348C  22DA               	addwfc	fsr2h,f,c
 27494  01348E  0EFF               	movlw	255
 27495  013490  14DE               	andwf	postinc2,w,c
 27496  013492  6E09               	movwf	(btemp+8)^0,c
 27497  013494  0EFF               	movlw	255
 27498  013496  14DE               	andwf	postinc2,w,c
 27499  013498  6E0A               	movwf	(btemp+9)^0,c
 27500  01349A  0EFF               	movlw	255
 27501  01349C  14DE               	andwf	postinc2,w,c
 27502  01349E  6E0B               	movwf	(btemp+10)^0,c
 27503  0134A0  0E7F               	movlw	127
 27504  0134A2  14DE               	andwf	postinc2,w,c
 27505  0134A4  6E0C               	movwf	(btemp+11)^0,c
 27506  0134A6  5009               	movf	(btemp+8)^0,w,c
 27507  0134A8  100A               	iorwf	(btemp+9)^0,w,c
 27508  0134AA  100B               	iorwf	(btemp+10)^0,w,c
 27509  0134AC  100C               	iorwf	(btemp+11)^0,w,c
 27510  0134AE  B4D8               	btfsc	status,2,c
 27511  0134B0  D004               	goto	l8040
 27512  0134B2                     u6530:
 27513                           
 27514                           ;stkvar	_aexp @ sp[(-13)+11]
 27515  0134B2  0EFE               	movlw	-2
 27516  0134B4  6AE3               	clrf	plusw1,c
 27517  0134B6  2AE3               	incf	plusw1,f,c
 27518  0134B8  D003               	goto	l8044
 27519  0134BA                     l8040:
 27520                           
 27521                           ;stkvar	_prod @ sp[(-13)+0]
 27522  0134BA  0EF3               	movlw	-13
 27523  0134BC  B0E3               	btfsc	plusw1,0,c
 27524  0134BE  D7F9               	goto	u6530
 27525  0134C0                     l8044:
 27526                           
 27527                           ;stkvar	_aexp @ sp[(-13)+11]
 27528  0134C0  0EFE               	movlw	-2
 27529  0134C2  50E3               	movf	plusw1,w,c
 27530  0134C4  B4D8               	btfsc	status,2,c
 27531  0134C6  D036               	goto	l8054
 27532                           
 27533                           ;stkvar	_prod @ sp[(-13)+0]
 27534  0134C8  50E1               	movf	fsr1l,w,c
 27535  0134CA  0FF3               	addlw	-13
 27536  0134CC  6ED9               	movwf	fsr2l,c
 27537  0134CE  50E2               	movf	fsr1h,w,c
 27538  0134D0  6EDA               	movwf	fsr2h,c
 27539  0134D2  0EFF               	movlw	255
 27540  0134D4  22DA               	addwfc	fsr2h,f,c
 27541  0134D6  2ADE               	incf	postinc2,f,c
 27542  0134D8  0E00               	movlw	0
 27543  0134DA  22DE               	addwfc	postinc2,f,c
 27544  0134DC  22DE               	addwfc	postinc2,f,c
 27545  0134DE  22DE               	addwfc	postinc2,f,c
 27546                           
 27547                           ;stkvar	_prod @ sp[(-13)+0]
 27548  0134E0  0EF6               	movlw	-10
 27549  0134E2  A0E3               	btfss	plusw1,0,c
 27550  0134E4  D027               	goto	l8054
 27551  0134E6  0E01               	movlw	1
 27552  0134E8  6E0C               	movwf	(btemp+11)^0,c
 27553                           
 27554                           ;stkvar	_prod @ sp[(-13)+0]
 27555  0134EA  50E1               	movf	fsr1l,w,c
 27556  0134EC  0FF3               	addlw	-13
 27557  0134EE  6ED9               	movwf	fsr2l,c
 27558  0134F0  50E2               	movf	fsr1h,w,c
 27559  0134F2  6EDA               	movwf	fsr2h,c
 27560  0134F4  0EFF               	movlw	255
 27561  0134F6  22DA               	addwfc	fsr2h,f,c
 27562  0134F8  280C               	incf	(btemp+11)^0,w,c
 27563  0134FA  52DE               	movf	postinc2,f,c
 27564  0134FC  D008               	goto	u6570
 27565  0134FE                     u6575:
 27566  0134FE  52DE               	movf	postinc2,f,c
 27567  013500  90D8               	bcf	status,0,c
 27568  013502  BEDC               	btfsc	preinc2,7,c
 27569  013504  80D8               	bsf	status,0,c
 27570  013506  32DD               	rrcf	postdec2,f,c
 27571  013508  32DD               	rrcf	postdec2,f,c
 27572  01350A  32DD               	rrcf	postdec2,f,c
 27573  01350C  32DE               	rrcf	postinc2,f,c
 27574  01350E                     u6570:
 27575  01350E  2EE8               	decfsz	wreg,f,c
 27576  013510  D7F6               	goto	u6575
 27577                           
 27578                           ;stkvar	_temp @ sp[(-13)+8]
 27579  013512  0EFB               	movlw	-5
 27580  013514  50E3               	movf	plusw1,w,c
 27581  013516  0F01               	addlw	1
 27582  013518  6E01               	movwf	btemp^0,c
 27583  01351A  0EFB               	movlw	-5
 27584  01351C  0060  F007  FFE3   	movff	btemp,plusw1
 27585  013522  6A01               	clrf	btemp^0,c
 27586  013524  0EFC               	movlw	-4
 27587  013526  50E3               	movf	plusw1,w,c
 27588  013528  2001               	addwfc	btemp^0,w,c
 27589  01352A  6E01               	movwf	btemp^0,c
 27590  01352C  0EFC               	movlw	-4
 27591  01352E  0060  F007  FFE3   	movff	btemp,plusw1
 27592  013534                     l8054:
 27593                           
 27594                           ;stkvar	_temp @ sp[(-13)+8]
 27595  013534  0EFC               	movlw	-4
 27596  013536  BEE3               	btfsc	plusw1,7,c
 27597  013538  D020               	goto	l8058
 27598  01353A  0EFC               	movlw	-4
 27599  01353C  50E3               	movf	plusw1,w,c
 27600  01353E  E104               	bnz	u6580
 27601  013540  0EFB               	movlw	-5
 27602  013542  28E3               	incf	plusw1,w,c
 27603  013544  A0D8               	btfss	status,0,c
 27604  013546  D019               	goto	l8058
 27605  013548                     u6580:
 27606  013548  0E00               	movlw	0
 27607  01354A  6E09               	movwf	(btemp+8)^0,c
 27608  01354C  0E00               	movlw	0
 27609  01354E  6E0A               	movwf	(btemp+9)^0,c
 27610  013550  0E80               	movlw	128
 27611  013552  6E0B               	movwf	(btemp+10)^0,c
 27612  013554  0E7F               	movlw	127
 27613  013556  6E0C               	movwf	(btemp+11)^0,c
 27614                           
 27615                           ;stkvar	_prod @ sp[(-13)+0]
 27616  013558  0EF3               	movlw	-13
 27617  01355A  0060  F027  FFE3   	movff	btemp+8,plusw1
 27618  013560  0EF4               	movlw	-12
 27619  013562  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27620  013568  0EF5               	movlw	-11
 27621  01356A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27622  013570  0EF6               	movlw	-10
 27623  013572  0060  F033  FFE3   	movff	btemp+11,plusw1
 27624  013578  D044               	goto	l8074
 27625  01357A                     l8058:
 27626                           
 27627                           ;stkvar	_temp @ sp[(-13)+8]
 27628  01357A  0EFC               	movlw	-4
 27629  01357C  BEE3               	btfsc	plusw1,7,c
 27630  01357E  D007               	goto	u6590
 27631  013580  0EFC               	movlw	-4
 27632  013582  50E3               	movf	plusw1,w,c
 27633  013584  E10F               	bnz	l8064
 27634  013586  0EFB               	movlw	-5
 27635  013588  04E3               	decf	plusw1,w,c
 27636  01358A  B0D8               	btfsc	status,0,c
 27637  01358C  D00B               	goto	l8064
 27638  01358E                     u6590:
 27639                           
 27640                           ;stkvar	_prod @ sp[(-13)+0]
 27641  01358E  0EF3               	movlw	-13
 27642  013590  6AE3               	clrf	plusw1,c
 27643  013592  0EF4               	movlw	-12
 27644  013594  6AE3               	clrf	plusw1,c
 27645  013596  0EF5               	movlw	-11
 27646  013598  6AE3               	clrf	plusw1,c
 27647  01359A  0EF6               	movlw	-10
 27648  01359C  6AE3               	clrf	plusw1,c
 27649                           
 27650                           ;stkvar	_sign @ sp[(-13)+12]
 27651  01359E  0EFF               	movlw	-1
 27652  0135A0  6AE3               	clrf	plusw1,c
 27653  0135A2  D02F               	goto	l8074
 27654  0135A4                     l8064:
 27655                           
 27656                           ;stkvar	_temp @ sp[(-13)+8]
 27657                           ;stkvar	_bexp @ sp[(-13)+10]
 27658  0135A4  0EFB               	movlw	-5
 27659  0135A6  006F FF8C  F001    	movff	plusw1,btemp
 27660  0135AC  0EFD               	movlw	-3
 27661  0135AE  0060  F007  FFE3   	movff	btemp,plusw1
 27662                           
 27663                           ;stkvar	_prod @ sp[(-13)+0]
 27664  0135B4  50E1               	movf	fsr1l,w,c
 27665  0135B6  0FF3               	addlw	-13
 27666  0135B8  6ED9               	movwf	fsr2l,c
 27667  0135BA  50E2               	movf	fsr1h,w,c
 27668  0135BC  6EDA               	movwf	fsr2h,c
 27669  0135BE  0EFF               	movlw	255
 27670  0135C0  22DA               	addwfc	fsr2h,f,c
 27671  0135C2  0EFF               	movlw	255
 27672  0135C4  16DE               	andwf	postinc2,f,c
 27673  0135C6  0EFF               	movlw	255
 27674  0135C8  16DE               	andwf	postinc2,f,c
 27675  0135CA  0E7F               	movlw	127
 27676  0135CC  16DE               	andwf	postinc2,f,c
 27677  0135CE  0E00               	movlw	0
 27678  0135D0  16DE               	andwf	postinc2,f,c
 27679                           
 27680                           ;stkvar	_bexp @ sp[(-13)+10]
 27681  0135D2  0EFD               	movlw	-3
 27682  0135D4  A0E3               	btfss	plusw1,0,c
 27683  0135D6  D008               	goto	l8072
 27684                           
 27685                           ;stkvar	_prod @ sp[(-13)+0]
 27686  0135D8  0EF5               	movlw	245
 27687  0135DA  24E1               	addwf	fsr1l,w,c
 27688  0135DC  6ED9               	movwf	fsr2l,c
 27689  0135DE  0EFF               	movlw	255
 27690  0135E0  20E2               	addwfc	fsr1h,w,c
 27691  0135E2  6EDA               	movwf	fsr2h,c
 27692  0135E4  0E00               	movlw	0
 27693  0135E6  8EDB               	bsf	plusw2,7,c
 27694  0135E8                     l8072:
 27695                           
 27696                           ;stkvar	_prod @ sp[(-13)+0]
 27697  0135E8  0EF6               	movlw	246
 27698  0135EA  24E1               	addwf	fsr1l,w,c
 27699  0135EC  6ED9               	movwf	fsr2l,c
 27700  0135EE  0EFF               	movlw	255
 27701  0135F0  20E2               	addwfc	fsr1h,w,c
 27702  0135F2  6EDA               	movwf	fsr2h,c
 27703                           
 27704                           ;stkvar	_bexp @ sp[(-13)+10]
 27705  0135F4  0EFD               	movlw	-3
 27706  0135F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27707  0135FC  90D8               	bcf	status,0,c
 27708  0135FE  300C               	rrcf	(btemp+11)^0,w,c
 27709  013600  6EDF               	movwf	indf2,c
 27710  013602                     l8074:
 27711                           
 27712                           ;stkvar	_sign @ sp[(-13)+12]
 27713  013602  0EFF               	movlw	-1
 27714  013604  006F FF8C  F00C    	movff	plusw1,btemp+11
 27715                           
 27716                           ;stkvar	_prod @ sp[(-13)+0]
 27717  01360A  0EF6               	movlw	246
 27718  01360C  24E1               	addwf	fsr1l,w,c
 27719  01360E  6ED9               	movwf	fsr2l,c
 27720  013610  0EFF               	movlw	255
 27721  013612  20E2               	addwfc	fsr1h,w,c
 27722  013614  6EDA               	movwf	fsr2h,c
 27723  013616  500C               	movf	(btemp+11)^0,w,c
 27724  013618  12DF               	iorwf	indf2,f,c
 27725                           
 27726                           ;stkvar	_prod @ sp[(-13)+0]
 27727  01361A  0EF3               	movlw	-13
 27728  01361C  006F FF8C  F001    	movff	plusw1,btemp
 27729  013622  0EF4               	movlw	-12
 27730  013624  006F FF8C  F002    	movff	plusw1,btemp+1
 27731  01362A  0EF5               	movlw	-11
 27732  01362C  006F FF8C  F003    	movff	plusw1,btemp+2
 27733  013632  0EF6               	movlw	-10
 27734  013634  006F FF8C  F004    	movff	plusw1,btemp+3
 27735  01363A                     l2953:
 27736                           
 27737                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 27738  01363A  0EEB               	movlw	235
 27739  01363C  26E1               	addwf	fsr1l,f,c
 27740  01363E  0EFF               	movlw	255
 27741  013640  22E2               	addwfc	fsr1h,f,c
 27742  013642  0012               	return		;funcret
 27743  013644                     __end_of___flmul:
 27744                           	opt callstack 0
 27745                           
 27746 ;; *************** function _SYSTEM_Initialize *****************
 27747 ;; Defined at:
 27748 ;;		line 50 in file "mcc_generated_files/mcc.c"
 27749 ;; Parameters:    Size  Location     Type
 27750 ;;		None
 27751 ;; Auto vars:     Size  Location     Type
 27752 ;;		None
 27753 ;; Return value:  Size  Location     Type
 27754 ;;                  1  [STACK] void 
 27755 ;; Registers used:
 27756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 27757 ;; Tracked objects:
 27758 ;;		On entry : 0/0
 27759 ;;		On exit  : 3F/3C
 27760 ;;		Unchanged: 0/0
 27761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27766 ;;Total ram usage:        0 bytes
 27767 ;; Hardware stack levels used:    1
 27768 ;; Hardware stack levels required when called:   17
 27769 ;; This function calls:
 27770 ;;		_ADCC_Initialize
 27771 ;;		_CLKREF_Initialize
 27772 ;;		_DMA1_Initialize
 27773 ;;		_DMA2_Initialize
 27774 ;;		_EXT_INT_Initialize
 27775 ;;		_FVR_Initialize
 27776 ;;		_INTERRUPT_Initialize
 27777 ;;		_OSCILLATOR_Initialize
 27778 ;;		_PIN_MANAGER_Initialize
 27779 ;;		_PMD_Initialize
 27780 ;;		_PWM8_Initialize
 27781 ;;		_SPI1_Initialize
 27782 ;;		_TMR2_Initialize
 27783 ;;		_TMR3_Initialize
 27784 ;;		_TMR5_Initialize
 27785 ;;		_TMR6_Initialize
 27786 ;;		_UART1_Initialize
 27787 ;;		_UART2_Initialize
 27788 ;; This function is called by:
 27789 ;;		_main
 27790 ;; This function uses a reentrant model
 27791 ;;
 27792                           
 27793                           	psect	text107
 27794  01A42A                     __ptext107:
 27795                           	opt callstack 0
 27796  01A42A                     _SYSTEM_Initialize:
 27797                           	opt callstack 13
 27798                           
 27799                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 27800                           
 27801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27802                           ;incstack = 0
 27803  01A42A  ECF5  F0CF         	call	_INTERRUPT_Initialize	;wreg free
 27804                           
 27805                           ; BSR set to: 57
 27806                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 27807  01A42E  EC44  F0D8         	call	_PMD_Initialize	;wreg free
 27808                           
 27809                           ; BSR set to: 57
 27810                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 27811  01A432  ECBE  F0CD         	call	_PIN_MANAGER_Initialize	;wreg free
 27812                           
 27813                           ; BSR set to: 58
 27814                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 27815  01A436  EC39  F0D8         	call	_OSCILLATOR_Initialize	;wreg free
 27816                           
 27817                           ; BSR set to: 57
 27818                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 27819  01A43A  ECB9  F0D8         	call	_FVR_Initialize	;wreg free
 27820                           
 27821                           ; BSR set to: 62
 27822                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 27823  01A43E  EC8B  F0CF         	call	_ADCC_Initialize	;wreg free
 27824                           
 27825                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 27826  01A442  EC2E  F0D8         	call	_PWM8_Initialize	;wreg free
 27827                           
 27828                           ; BSR set to: 63
 27829                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 27830  01A446  EC17  F0D8         	call	_TMR2_Initialize	;wreg free
 27831                           
 27832                           ; BSR set to: 57
 27833                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 27834  01A44A  EC93  F0D4         	call	_EXT_INT_Initialize	;wreg free
 27835                           
 27836                           ; BSR set to: 57
 27837                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 27838  01A44E  EC80  F0D5         	call	_TMR6_Initialize	;wreg free
 27839                           
 27840                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 27841  01A452  ECEA  F0D2         	call	_TMR3_Initialize	;wreg free
 27842                           
 27843                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 27844  01A456  ECC7  F0D2         	call	_TMR5_Initialize	;wreg free
 27845                           
 27846                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 27847  01A45A  ECA4  F0D2         	call	_UART1_Initialize	;wreg free
 27848                           
 27849                           ; BSR set to: 57
 27850                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 27851  01A45E  ECBC  F0D0         	call	_UART2_Initialize	;wreg free
 27852                           
 27853                           ; BSR set to: 57
 27854                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 27855  01A462  EC23  F0D8         	call	_SPI1_Initialize	;wreg free
 27856                           
 27857                           ; BSR set to: 61
 27858                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 27859  01A466  EC18  F0D1         	call	_DMA2_Initialize	;wreg free
 27860                           
 27861                           ; BSR set to: 59
 27862                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 27863  01A46A  EC56  F0CF         	call	_DMA1_Initialize	;wreg free
 27864                           
 27865                           ; BSR set to: 59
 27866                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 27867  01A46E  EC8D  F0D8         	call	_CLKREF_Initialize	;wreg free
 27868                           
 27869                           ; BSR set to: 60
 27870                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27871  01A472  0012               	return		;funcret
 27872  01A474                     __end_of_SYSTEM_Initialize:
 27873                           	opt callstack 0
 27874                           
 27875 ;; *************** function _UART2_Initialize *****************
 27876 ;; Defined at:
 27877 ;;		line 78 in file "mcc_generated_files/uart2.c"
 27878 ;; Parameters:    Size  Location     Type
 27879 ;;		None
 27880 ;; Auto vars:     Size  Location     Type
 27881 ;;		None
 27882 ;; Return value:  Size  Location     Type
 27883 ;;                  1  [STACK] void 
 27884 ;; Registers used:
 27885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27886 ;; Tracked objects:
 27887 ;;		On entry : 3F/39
 27888 ;;		On exit  : 3F/39
 27889 ;;		Unchanged: 0/0
 27890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27895 ;;Total ram usage:        0 bytes
 27896 ;; Hardware stack levels used:    1
 27897 ;; Hardware stack levels required when called:   16
 27898 ;; This function calls:
 27899 ;;		_UART2_SetRxInterruptHandler
 27900 ;;		_UART2_SetTxInterruptHandler
 27901 ;; This function is called by:
 27902 ;;		_SYSTEM_Initialize
 27903 ;; This function uses a reentrant model
 27904 ;;
 27905                           
 27906                           	psect	text108
 27907  01A178                     __ptext108:
 27908                           	opt callstack 0
 27909  01A178                     _UART2_Initialize:
 27910                           	opt callstack 13
 27911                           
 27912                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 27913                           
 27914                           ; BSR set to: 60
 27915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27916                           ;incstack = 0
 27917  01A178  0139               	movlb	57	; () banked
 27918  01A17A  9596               	bcf	150,2,b	;volatile
 27919                           
 27920                           ; BSR set to: 57
 27921                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 27922  01A17C  0E8A               	movlw	low _UART2_Receive_ISR
 27923  01A17E  6EE6               	movwf	postinc1,c
 27924  01A180  0EAF               	movlw	high _UART2_Receive_ISR
 27925  01A182  6EE6               	movwf	postinc1,c
 27926  01A184  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 27927  01A186  6EE6               	movwf	postinc1,c
 27928  01A188  ECF9  F0D5         	call	_UART2_SetRxInterruptHandler	;wreg free
 27929                           
 27930                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 27931  01A18C  0139               	movlb	57	; () banked
 27932  01A18E  9796               	bcf	150,3,b	;volatile
 27933                           
 27934                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 27935  01A190  0ED4               	movlw	low _UART2_Transmit_ISR
 27936  01A192  6EE6               	movwf	postinc1,c
 27937  01A194  0EAA               	movlw	high _UART2_Transmit_ISR
 27938  01A196  6EE6               	movwf	postinc1,c
 27939  01A198  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 27940  01A19A  6EE6               	movwf	postinc1,c
 27941  01A19C  ECE5  F0D5         	call	_UART2_SetTxInterruptHandler	;wreg free
 27942                           
 27943                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 27944  01A1A0  013D               	movlb	61	; () banked
 27945  01A1A2  6BD4               	clrf	212,b	;volatile
 27946                           
 27947                           ; BSR set to: 61
 27948                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 27949  01A1A4  6BD6               	clrf	214,b	;volatile
 27950                           
 27951                           ; BSR set to: 61
 27952                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 27953  01A1A6  6BD8               	clrf	216,b	;volatile
 27954                           
 27955                           ; BSR set to: 61
 27956                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 27957  01A1A8  0EB0               	movlw	176
 27958  01A1AA  6FDA               	movwf	218,b	;volatile
 27959                           
 27960                           ; BSR set to: 61
 27961                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 27962  01A1AC  0E80               	movlw	128
 27963  01A1AE  6FDB               	movwf	219,b	;volatile
 27964                           
 27965                           ; BSR set to: 61
 27966                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 27967  01A1B0  6BDC               	clrf	220,b	;volatile
 27968                           
 27969                           ; BSR set to: 61
 27970                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 27971  01A1B2  0E82               	movlw	130
 27972  01A1B4  6FDD               	movwf	221,b	;volatile
 27973                           
 27974                           ; BSR set to: 61
 27975                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 27976  01A1B6  0E06               	movlw	6
 27977  01A1B8  6FDE               	movwf	222,b	;volatile
 27978                           
 27979                           ; BSR set to: 61
 27980                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 27981  01A1BA  6BDF               	clrf	223,b	;volatile
 27982                           
 27983                           ; BSR set to: 61
 27984                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 27985  01A1BC  6BE0               	clrf	224,b	;volatile
 27986                           
 27987                           ; BSR set to: 61
 27988                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 27989  01A1BE  6BE1               	clrf	225,b	;volatile
 27990                           
 27991                           ; BSR set to: 61
 27992                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 27993  01A1C0  6BE2               	clrf	226,b	;volatile
 27994                           
 27995                           ; BSR set to: 61
 27996                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 27997  01A1C2  6A34               	clrf	_uart2TxHead^0,c	;volatile
 27998                           
 27999                           ; BSR set to: 61
 28000                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28001  01A1C4  6A33               	clrf	_uart2TxTail^0,c	;volatile
 28002                           
 28003                           ; BSR set to: 61
 28004                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28005  01A1C6  0E40               	movlw	64
 28006  01A1C8  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28007                           
 28008                           ; BSR set to: 61
 28009                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28010  01A1CA  6A31               	clrf	_uart2RxHead^0,c	;volatile
 28011                           
 28012                           ; BSR set to: 61
 28013                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28014  01A1CC  6A30               	clrf	_uart2RxTail^0,c	;volatile
 28015                           
 28016                           ; BSR set to: 61
 28017                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28018  01A1CE  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 28019                           
 28020                           ; BSR set to: 61
 28021                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28022  01A1D0  0139               	movlb	57	; () banked
 28023  01A1D2  8596               	bsf	150,2,b	;volatile
 28024                           
 28025                           ; BSR set to: 57
 28026                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28027  01A1D4  0012               	return		;funcret
 28028  01A1D6                     __end_of_UART2_Initialize:
 28029                           	opt callstack 0
 28030                           
 28031 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28032 ;; Defined at:
 28033 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28034 ;; Parameters:    Size  Location     Type
 28035 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28036 ;;		 -> UART2_Transmit_ISR(1), 
 28037 ;; Auto vars:     Size  Location     Type
 28038 ;;		None
 28039 ;; Return value:  Size  Location     Type
 28040 ;;                  1  [STACK] void 
 28041 ;; Registers used:
 28042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28043 ;; Tracked objects:
 28044 ;;		On entry : 3F/39
 28045 ;;		On exit  : 0/0
 28046 ;;		Unchanged: 0/0
 28047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28052 ;;Total ram usage:        0 bytes
 28053 ;; Hardware stack levels used:    1
 28054 ;; Hardware stack levels required when called:   15
 28055 ;; This function calls:
 28056 ;;		Nothing
 28057 ;; This function is called by:
 28058 ;;		_UART2_Initialize
 28059 ;; This function uses a reentrant model
 28060 ;;
 28061                           
 28062                           	psect	text109
 28063  01ABCA                     __ptext109:
 28064                           	opt callstack 0
 28065  01ABCA                     _UART2_SetTxInterruptHandler:
 28066                           	opt callstack 13
 28067                           
 28068                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28069                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28070                           
 28071                           ; BSR set to: 57
 28072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28073                           ;incstack = 0
 28074  01ABCA  50E1               	movf	fsr1l,w,c
 28075  01ABCC  0FFD               	addlw	-3
 28076  01ABCE  6ED9               	movwf	fsr2l,c
 28077  01ABD0  50E2               	movf	fsr1h,w,c
 28078  01ABD2  6EDA               	movwf	fsr2h,c
 28079  01ABD4  0EFF               	movlw	255
 28080  01ABD6  22DA               	addwfc	fsr2h,f,c
 28081  01ABD8  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28082  01ABDE  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28083  01ABE4  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28084                           
 28085                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28086  01ABEA  52E5               	movf	postdec1,f,c
 28087  01ABEC  52E5               	movf	postdec1,f,c
 28088  01ABEE  52E5               	movf	postdec1,f,c
 28089  01ABF0  0012               	return		;funcret
 28090  01ABF2                     __end_of_UART2_SetTxInterruptHandler:
 28091                           	opt callstack 0
 28092                           
 28093 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28094 ;; Defined at:
 28095 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28096 ;; Parameters:    Size  Location     Type
 28097 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28098 ;;		 -> UART2_Receive_ISR(1), 
 28099 ;; Auto vars:     Size  Location     Type
 28100 ;;		None
 28101 ;; Return value:  Size  Location     Type
 28102 ;;                  1  [STACK] void 
 28103 ;; Registers used:
 28104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28105 ;; Tracked objects:
 28106 ;;		On entry : 3F/39
 28107 ;;		On exit  : 0/0
 28108 ;;		Unchanged: 0/0
 28109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28114 ;;Total ram usage:        0 bytes
 28115 ;; Hardware stack levels used:    1
 28116 ;; Hardware stack levels required when called:   15
 28117 ;; This function calls:
 28118 ;;		Nothing
 28119 ;; This function is called by:
 28120 ;;		_UART2_Initialize
 28121 ;; This function uses a reentrant model
 28122 ;;
 28123                           
 28124                           	psect	text110
 28125  01ABF2                     __ptext110:
 28126                           	opt callstack 0
 28127  01ABF2                     _UART2_SetRxInterruptHandler:
 28128                           	opt callstack 13
 28129                           
 28130                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28131                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28132                           
 28133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28134                           ;incstack = 0
 28135  01ABF2  50E1               	movf	fsr1l,w,c
 28136  01ABF4  0FFD               	addlw	-3
 28137  01ABF6  6ED9               	movwf	fsr2l,c
 28138  01ABF8  50E2               	movf	fsr1h,w,c
 28139  01ABFA  6EDA               	movwf	fsr2h,c
 28140  01ABFC  0EFF               	movlw	255
 28141  01ABFE  22DA               	addwfc	fsr2h,f,c
 28142  01AC00  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28143  01AC06  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28144  01AC0C  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28145                           
 28146                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28147  01AC12  52E5               	movf	postdec1,f,c
 28148  01AC14  52E5               	movf	postdec1,f,c
 28149  01AC16  52E5               	movf	postdec1,f,c
 28150  01AC18  0012               	return		;funcret
 28151  01AC1A                     __end_of_UART2_SetRxInterruptHandler:
 28152                           	opt callstack 0
 28153                           
 28154 ;; *************** function _UART1_Initialize *****************
 28155 ;; Defined at:
 28156 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28157 ;; Parameters:    Size  Location     Type
 28158 ;;		None
 28159 ;; Auto vars:     Size  Location     Type
 28160 ;;		None
 28161 ;; Return value:  Size  Location     Type
 28162 ;;                  1  [STACK] void 
 28163 ;; Registers used:
 28164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28165 ;; Tracked objects:
 28166 ;;		On entry : 0/39
 28167 ;;		On exit  : 3F/39
 28168 ;;		Unchanged: 0/0
 28169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28174 ;;Total ram usage:        0 bytes
 28175 ;; Hardware stack levels used:    1
 28176 ;; Hardware stack levels required when called:   16
 28177 ;; This function calls:
 28178 ;;		_UART1_SetRxInterruptHandler
 28179 ;; This function is called by:
 28180 ;;		_SYSTEM_Initialize
 28181 ;; This function uses a reentrant model
 28182 ;;
 28183                           
 28184                           	psect	text111
 28185  01A548                     __ptext111:
 28186                           	opt callstack 0
 28187  01A548                     _UART1_Initialize:
 28188                           	opt callstack 13
 28189                           
 28190                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28191                           
 28192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28193                           ;incstack = 0
 28194  01A548  0139               	movlb	57	; () banked
 28195  01A54A  9793               	bcf	147,3,b	;volatile
 28196                           
 28197                           ; BSR set to: 57
 28198                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28199  01A54C  0EC4               	movlw	low _UART1_Receive_ISR
 28200  01A54E  6EE6               	movwf	postinc1,c
 28201  01A550  0EAF               	movlw	high _UART1_Receive_ISR
 28202  01A552  6EE6               	movwf	postinc1,c
 28203  01A554  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 28204  01A556  6EE6               	movwf	postinc1,c
 28205  01A558  EC0D  F0D6         	call	_UART1_SetRxInterruptHandler	;wreg free
 28206                           
 28207                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 28208  01A55C  013D               	movlb	61	; () banked
 28209  01A55E  6BEC               	clrf	236,b	;volatile
 28210                           
 28211                           ; BSR set to: 61
 28212                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 28213  01A560  6BED               	clrf	237,b	;volatile
 28214                           
 28215                           ; BSR set to: 61
 28216                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 28217  01A562  6BEE               	clrf	238,b	;volatile
 28218                           
 28219                           ; BSR set to: 61
 28220                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 28221  01A564  6BEF               	clrf	239,b	;volatile
 28222                           
 28223                           ; BSR set to: 61
 28224                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 28225  01A566  6BF0               	clrf	240,b	;volatile
 28226                           
 28227                           ; BSR set to: 61
 28228                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 28229  01A568  6BF1               	clrf	241,b	;volatile
 28230                           
 28231                           ; BSR set to: 61
 28232                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 28233  01A56A  0EB0               	movlw	176
 28234  01A56C  6FF2               	movwf	242,b	;volatile
 28235                           
 28236                           ; BSR set to: 61
 28237                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 28238  01A56E  0E80               	movlw	128
 28239  01A570  6FF3               	movwf	243,b	;volatile
 28240                           
 28241                           ; BSR set to: 61
 28242                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 28243  01A572  6BF4               	clrf	244,b	;volatile
 28244                           
 28245                           ; BSR set to: 61
 28246                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 28247  01A574  0E8A               	movlw	138
 28248  01A576  6FF5               	movwf	245,b	;volatile
 28249                           
 28250                           ; BSR set to: 61
 28251                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 28252  01A578  6BF6               	clrf	246,b	;volatile
 28253                           
 28254                           ; BSR set to: 61
 28255                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 28256  01A57A  6BF7               	clrf	247,b	;volatile
 28257                           
 28258                           ; BSR set to: 61
 28259                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 28260  01A57C  6BF8               	clrf	248,b	;volatile
 28261                           
 28262                           ; BSR set to: 61
 28263                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 28264  01A57E  6BF9               	clrf	249,b	;volatile
 28265                           
 28266                           ; BSR set to: 61
 28267                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 28268  01A580  6BFA               	clrf	250,b	;volatile
 28269                           
 28270                           ; BSR set to: 61
 28271                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 28272  01A582  6A37               	clrf	_uart1RxHead^0,c	;volatile
 28273                           
 28274                           ; BSR set to: 61
 28275                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 28276  01A584  6A36               	clrf	_uart1RxTail^0,c	;volatile
 28277                           
 28278                           ; BSR set to: 61
 28279                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 28280  01A586  6A35               	clrf	_uart1RxCount^0,c	;volatile
 28281                           
 28282                           ; BSR set to: 61
 28283                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 28284  01A588  0139               	movlb	57	; () banked
 28285  01A58A  8793               	bsf	147,3,b	;volatile
 28286                           
 28287                           ; BSR set to: 57
 28288                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28289  01A58C  0012               	return		;funcret
 28290  01A58E                     __end_of_UART1_Initialize:
 28291                           	opt callstack 0
 28292                           
 28293 ;; *************** function _UART1_SetRxInterruptHandler *****************
 28294 ;; Defined at:
 28295 ;;		line 207 in file "mcc_generated_files/uart1.c"
 28296 ;; Parameters:    Size  Location     Type
 28297 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28298 ;;		 -> UART1_Receive_ISR(1), 
 28299 ;; Auto vars:     Size  Location     Type
 28300 ;;		None
 28301 ;; Return value:  Size  Location     Type
 28302 ;;                  1  [STACK] void 
 28303 ;; Registers used:
 28304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28305 ;; Tracked objects:
 28306 ;;		On entry : 3F/39
 28307 ;;		On exit  : 0/0
 28308 ;;		Unchanged: 0/0
 28309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28314 ;;Total ram usage:        0 bytes
 28315 ;; Hardware stack levels used:    1
 28316 ;; Hardware stack levels required when called:   15
 28317 ;; This function calls:
 28318 ;;		Nothing
 28319 ;; This function is called by:
 28320 ;;		_UART1_Initialize
 28321 ;; This function uses a reentrant model
 28322 ;;
 28323                           
 28324                           	psect	text112
 28325  01AC1A                     __ptext112:
 28326                           	opt callstack 0
 28327  01AC1A                     _UART1_SetRxInterruptHandler:
 28328                           	opt callstack 13
 28329                           
 28330                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 28331                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28332                           
 28333                           ; BSR set to: 57
 28334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28335                           ;incstack = 0
 28336  01AC1A  50E1               	movf	fsr1l,w,c
 28337  01AC1C  0FFD               	addlw	-3
 28338  01AC1E  6ED9               	movwf	fsr2l,c
 28339  01AC20  50E2               	movf	fsr1h,w,c
 28340  01AC22  6EDA               	movwf	fsr2h,c
 28341  01AC24  0EFF               	movlw	255
 28342  01AC26  22DA               	addwfc	fsr2h,f,c
 28343  01AC28  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 28344  01AC2E  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 28345  01AC34  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 28346                           
 28347                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28348  01AC3A  52E5               	movf	postdec1,f,c
 28349  01AC3C  52E5               	movf	postdec1,f,c
 28350  01AC3E  52E5               	movf	postdec1,f,c
 28351  01AC40  0012               	return		;funcret
 28352  01AC42                     __end_of_UART1_SetRxInterruptHandler:
 28353                           	opt callstack 0
 28354                           
 28355 ;; *************** function _TMR6_Initialize *****************
 28356 ;; Defined at:
 28357 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 28358 ;; Parameters:    Size  Location     Type
 28359 ;;		None
 28360 ;; Auto vars:     Size  Location     Type
 28361 ;;		None
 28362 ;; Return value:  Size  Location     Type
 28363 ;;                  1  [STACK] void 
 28364 ;; Registers used:
 28365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28366 ;; Tracked objects:
 28367 ;;		On entry : 3F/39
 28368 ;;		On exit  : 0/0
 28369 ;;		Unchanged: 0/0
 28370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28375 ;;Total ram usage:        0 bytes
 28376 ;; Hardware stack levels used:    1
 28377 ;; Hardware stack levels required when called:   16
 28378 ;; This function calls:
 28379 ;;		_TMR6_SetInterruptHandler
 28380 ;; This function is called by:
 28381 ;;		_SYSTEM_Initialize
 28382 ;; This function uses a reentrant model
 28383 ;;
 28384                           
 28385                           	psect	text113
 28386  01AB00                     __ptext113:
 28387                           	opt callstack 0
 28388  01AB00                     _TMR6_Initialize:
 28389                           	opt callstack 13
 28390                           
 28391                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 28392                           
 28393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28394                           ;incstack = 0
 28395  01AB00  0E01               	movlw	1
 28396  01AB02  6E96               	movwf	150,c	;volatile
 28397                           
 28398                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 28399  01AB04  6A95               	clrf	149,c	;volatile
 28400                           
 28401                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 28402  01AB06  6A97               	clrf	151,c	;volatile
 28403                           
 28404                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 28405  01AB08  0E7C               	movlw	124
 28406  01AB0A  6E93               	movwf	147,c	;volatile
 28407                           
 28408                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 28409  01AB0C  6A92               	clrf	146,c	;volatile
 28410                           
 28411                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 28412  01AB0E  0139               	movlb	57	; () banked
 28413  01AB10  91A9               	bcf	169,0,b	;volatile
 28414                           
 28415                           ; BSR set to: 57
 28416                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 28417  01AB12  8199               	bsf	153,0,b	;volatile
 28418                           
 28419                           ; BSR set to: 57
 28420                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 28421  01AB14  0EDC               	movlw	low _TMR6_DefaultInterruptHandler
 28422  01AB16  6EE6               	movwf	postinc1,c
 28423  01AB18  0EA3               	movlw	high _TMR6_DefaultInterruptHandler
 28424  01AB1A  6EE6               	movwf	postinc1,c
 28425  01AB1C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 28426  01AB1E  6EE6               	movwf	postinc1,c
 28427  01AB20  EC21  F0D6         	call	_TMR6_SetInterruptHandler	;wreg free
 28428                           
 28429                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 28430  01AB24  0EE0               	movlw	224
 28431  01AB26  6E94               	movwf	148,c	;volatile
 28432                           
 28433                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28434  01AB28  0012               	return		;funcret
 28435  01AB2A                     __end_of_TMR6_Initialize:
 28436                           	opt callstack 0
 28437                           
 28438 ;; *************** function _TMR6_SetInterruptHandler *****************
 28439 ;; Defined at:
 28440 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 28441 ;; Parameters:    Size  Location     Type
 28442 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28443 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 28444 ;; Auto vars:     Size  Location     Type
 28445 ;;		None
 28446 ;; Return value:  Size  Location     Type
 28447 ;;                  1  [STACK] void 
 28448 ;; Registers used:
 28449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28450 ;; Tracked objects:
 28451 ;;		On entry : 3F/39
 28452 ;;		On exit  : 0/0
 28453 ;;		Unchanged: 0/0
 28454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28459 ;;Total ram usage:        0 bytes
 28460 ;; Hardware stack levels used:    1
 28461 ;; Hardware stack levels required when called:   15
 28462 ;; This function calls:
 28463 ;;		Nothing
 28464 ;; This function is called by:
 28465 ;;		_TMR6_Initialize
 28466 ;; This function uses a reentrant model
 28467 ;;
 28468                           
 28469                           	psect	text114
 28470  01AC42                     __ptext114:
 28471                           	opt callstack 0
 28472  01AC42                     _TMR6_SetInterruptHandler:
 28473                           	opt callstack 13
 28474                           
 28475                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 28476                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28477                           
 28478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28479                           ;incstack = 0
 28480  01AC42  50E1               	movf	fsr1l,w,c
 28481  01AC44  0FFD               	addlw	-3
 28482  01AC46  6ED9               	movwf	fsr2l,c
 28483  01AC48  50E2               	movf	fsr1h,w,c
 28484  01AC4A  6EDA               	movwf	fsr2h,c
 28485  01AC4C  0EFF               	movlw	255
 28486  01AC4E  22DA               	addwfc	fsr2h,f,c
 28487  01AC50  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 28488  01AC56  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 28489  01AC5C  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 28490                           
 28491                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28492  01AC62  52E5               	movf	postdec1,f,c
 28493  01AC64  52E5               	movf	postdec1,f,c
 28494  01AC66  52E5               	movf	postdec1,f,c
 28495  01AC68  0012               	return		;funcret
 28496  01AC6A                     __end_of_TMR6_SetInterruptHandler:
 28497                           	opt callstack 0
 28498                           
 28499 ;; *************** function _TMR5_Initialize *****************
 28500 ;; Defined at:
 28501 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 28502 ;; Parameters:    Size  Location     Type
 28503 ;;		None
 28504 ;; Auto vars:     Size  Location     Type
 28505 ;;		None
 28506 ;; Return value:  Size  Location     Type
 28507 ;;                  1  [STACK] void 
 28508 ;; Registers used:
 28509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28510 ;; Tracked objects:
 28511 ;;		On entry : 0/39
 28512 ;;		On exit  : 0/0
 28513 ;;		Unchanged: 0/0
 28514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28519 ;;Total ram usage:        0 bytes
 28520 ;; Hardware stack levels used:    1
 28521 ;; Hardware stack levels required when called:   16
 28522 ;; This function calls:
 28523 ;;		_TMR5_SetInterruptHandler
 28524 ;; This function is called by:
 28525 ;;		_SYSTEM_Initialize
 28526 ;; This function uses a reentrant model
 28527 ;;
 28528                           
 28529                           	psect	text115
 28530  01A58E                     __ptext115:
 28531                           	opt callstack 0
 28532  01A58E                     _TMR5_Initialize:
 28533                           	opt callstack 13
 28534                           
 28535                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 28536                           
 28537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28538                           ;incstack = 0
 28539  01A58E  6A9B               	clrf	155,c	;volatile
 28540                           
 28541                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 28542  01A590  6A9C               	clrf	156,c	;volatile
 28543                           
 28544                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 28545  01A592  0E01               	movlw	1
 28546  01A594  6E9D               	movwf	157,c	;volatile
 28547                           
 28548                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 28549  01A596  0E63               	movlw	99
 28550  01A598  6E99               	movwf	153,c	;volatile
 28551                           
 28552                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 28553  01A59A  0EC0               	movlw	192
 28554  01A59C  6E98               	movwf	152,c	;volatile
 28555                           
 28556                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 28557  01A59E  5098               	movf	152,w,c	;volatile
 28558  01A5A0  006F FE64  F001    	movff	16281,btemp	;volatile
 28559  01A5A6  6A02               	clrf	(btemp+1)^0,c
 28560  01A5A8  0060  F004  F002   	movff	btemp,btemp+1
 28561  01A5AE  6A01               	clrf	btemp^0,c
 28562  01A5B0  1001               	iorwf	btemp^0,w,c
 28563  01A5B2  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 28564  01A5B4  5002               	movf	(btemp+1)^0,w,c
 28565  01A5B6  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 28566                           
 28567                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 28568  01A5B8  0139               	movlb	57	; () banked
 28569  01A5BA  9DA8               	bcf	168,6,b	;volatile
 28570                           
 28571                           ; BSR set to: 57
 28572                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 28573  01A5BC  8D98               	bsf	152,6,b	;volatile
 28574                           
 28575                           ; BSR set to: 57
 28576                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 28577  01A5BE  0E5A               	movlw	low _TMR5_DefaultInterruptHandler
 28578  01A5C0  6EE6               	movwf	postinc1,c
 28579  01A5C2  0EA9               	movlw	high _TMR5_DefaultInterruptHandler
 28580  01A5C4  6EE6               	movwf	postinc1,c
 28581  01A5C6  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 28582  01A5C8  6EE6               	movwf	postinc1,c
 28583  01A5CA  EC35  F0D6         	call	_TMR5_SetInterruptHandler	;wreg free
 28584                           
 28585                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 28586  01A5CE  0E31               	movlw	49
 28587  01A5D0  6E9A               	movwf	154,c	;volatile
 28588                           
 28589                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28590  01A5D2  0012               	return		;funcret
 28591  01A5D4                     __end_of_TMR5_Initialize:
 28592                           	opt callstack 0
 28593                           
 28594 ;; *************** function _TMR5_SetInterruptHandler *****************
 28595 ;; Defined at:
 28596 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 28597 ;; Parameters:    Size  Location     Type
 28598 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28599 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 28600 ;; Auto vars:     Size  Location     Type
 28601 ;;		None
 28602 ;; Return value:  Size  Location     Type
 28603 ;;                  1  [STACK] void 
 28604 ;; Registers used:
 28605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28606 ;; Tracked objects:
 28607 ;;		On entry : 3F/39
 28608 ;;		On exit  : 0/0
 28609 ;;		Unchanged: 0/0
 28610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28615 ;;Total ram usage:        0 bytes
 28616 ;; Hardware stack levels used:    1
 28617 ;; Hardware stack levels required when called:   15
 28618 ;; This function calls:
 28619 ;;		Nothing
 28620 ;; This function is called by:
 28621 ;;		_TMR5_Initialize
 28622 ;; This function uses a reentrant model
 28623 ;;
 28624                           
 28625                           	psect	text116
 28626  01AC6A                     __ptext116:
 28627                           	opt callstack 0
 28628  01AC6A                     _TMR5_SetInterruptHandler:
 28629                           	opt callstack 13
 28630                           
 28631                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 28632                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28633                           
 28634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28635                           ;incstack = 0
 28636  01AC6A  50E1               	movf	fsr1l,w,c
 28637  01AC6C  0FFD               	addlw	-3
 28638  01AC6E  6ED9               	movwf	fsr2l,c
 28639  01AC70  50E2               	movf	fsr1h,w,c
 28640  01AC72  6EDA               	movwf	fsr2h,c
 28641  01AC74  0EFF               	movlw	255
 28642  01AC76  22DA               	addwfc	fsr2h,f,c
 28643  01AC78  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 28644  01AC7E  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 28645  01AC84  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 28646                           
 28647                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28648  01AC8A  52E5               	movf	postdec1,f,c
 28649  01AC8C  52E5               	movf	postdec1,f,c
 28650  01AC8E  52E5               	movf	postdec1,f,c
 28651  01AC90  0012               	return		;funcret
 28652  01AC92                     __end_of_TMR5_SetInterruptHandler:
 28653                           	opt callstack 0
 28654                           
 28655 ;; *************** function _TMR3_Initialize *****************
 28656 ;; Defined at:
 28657 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 28658 ;; Parameters:    Size  Location     Type
 28659 ;;		None
 28660 ;; Auto vars:     Size  Location     Type
 28661 ;;		None
 28662 ;; Return value:  Size  Location     Type
 28663 ;;                  1  [STACK] void 
 28664 ;; Registers used:
 28665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28666 ;; Tracked objects:
 28667 ;;		On entry : 0/39
 28668 ;;		On exit  : 0/0
 28669 ;;		Unchanged: 0/0
 28670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28675 ;;Total ram usage:        0 bytes
 28676 ;; Hardware stack levels used:    1
 28677 ;; Hardware stack levels required when called:   16
 28678 ;; This function calls:
 28679 ;;		_TMR3_SetInterruptHandler
 28680 ;; This function is called by:
 28681 ;;		_SYSTEM_Initialize
 28682 ;; This function uses a reentrant model
 28683 ;;
 28684                           
 28685                           	psect	text117
 28686  01A5D4                     __ptext117:
 28687                           	opt callstack 0
 28688  01A5D4                     _TMR3_Initialize:
 28689                           	opt callstack 13
 28690                           
 28691                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 28692                           
 28693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28694                           ;incstack = 0
 28695  01A5D4  6AA7               	clrf	167,c	;volatile
 28696                           
 28697                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 28698  01A5D6  6AA8               	clrf	168,c	;volatile
 28699                           
 28700                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 28701  01A5D8  0E01               	movlw	1
 28702  01A5DA  6EA9               	movwf	169,c	;volatile
 28703                           
 28704                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 28705  01A5DC  0E3C               	movlw	60
 28706  01A5DE  6EA5               	movwf	165,c	;volatile
 28707                           
 28708                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 28709  01A5E0  0EB0               	movlw	176
 28710  01A5E2  6EA4               	movwf	164,c	;volatile
 28711                           
 28712                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 28713  01A5E4  50A4               	movf	164,w,c	;volatile
 28714  01A5E6  006F FE94  F001    	movff	16293,btemp	;volatile
 28715  01A5EC  6A02               	clrf	(btemp+1)^0,c
 28716  01A5EE  0060  F004  F002   	movff	btemp,btemp+1
 28717  01A5F4  6A01               	clrf	btemp^0,c
 28718  01A5F6  1001               	iorwf	btemp^0,w,c
 28719  01A5F8  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 28720  01A5FA  5002               	movf	(btemp+1)^0,w,c
 28721  01A5FC  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 28722                           
 28723                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 28724  01A5FE  0139               	movlb	57	; () banked
 28725  01A600  9DA6               	bcf	166,6,b	;volatile
 28726                           
 28727                           ; BSR set to: 57
 28728                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 28729  01A602  8D96               	bsf	150,6,b	;volatile
 28730                           
 28731                           ; BSR set to: 57
 28732                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 28733  01A604  0E9C               	movlw	low _TMR3_DefaultInterruptHandler
 28734  01A606  6EE6               	movwf	postinc1,c
 28735  01A608  0EB1               	movlw	high _TMR3_DefaultInterruptHandler
 28736  01A60A  6EE6               	movwf	postinc1,c
 28737  01A60C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 28738  01A60E  6EE6               	movwf	postinc1,c
 28739  01A610  EC49  F0D6         	call	_TMR3_SetInterruptHandler	;wreg free
 28740                           
 28741                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 28742  01A614  0E31               	movlw	49
 28743  01A616  6EA6               	movwf	166,c	;volatile
 28744                           
 28745                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28746  01A618  0012               	return		;funcret
 28747  01A61A                     __end_of_TMR3_Initialize:
 28748                           	opt callstack 0
 28749                           
 28750 ;; *************** function _TMR3_SetInterruptHandler *****************
 28751 ;; Defined at:
 28752 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 28753 ;; Parameters:    Size  Location     Type
 28754 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28755 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 28756 ;; Auto vars:     Size  Location     Type
 28757 ;;		None
 28758 ;; Return value:  Size  Location     Type
 28759 ;;                  1  [STACK] void 
 28760 ;; Registers used:
 28761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28762 ;; Tracked objects:
 28763 ;;		On entry : 0/1
 28764 ;;		On exit  : 0/0
 28765 ;;		Unchanged: 0/0
 28766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28771 ;;Total ram usage:        0 bytes
 28772 ;; Hardware stack levels used:    1
 28773 ;; Hardware stack levels required when called:   15
 28774 ;; This function calls:
 28775 ;;		Nothing
 28776 ;; This function is called by:
 28777 ;;		_TMR3_Initialize
 28778 ;;		_init_bsoc
 28779 ;; This function uses a reentrant model
 28780 ;;
 28781                           
 28782                           	psect	text118
 28783  01AC92                     __ptext118:
 28784                           	opt callstack 0
 28785  01AC92                     _TMR3_SetInterruptHandler:
 28786                           	opt callstack 14
 28787                           
 28788                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 28789                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28790                           
 28791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28792                           ;incstack = 0
 28793  01AC92  50E1               	movf	fsr1l,w,c
 28794  01AC94  0FFD               	addlw	-3
 28795  01AC96  6ED9               	movwf	fsr2l,c
 28796  01AC98  50E2               	movf	fsr1h,w,c
 28797  01AC9A  6EDA               	movwf	fsr2h,c
 28798  01AC9C  0EFF               	movlw	255
 28799  01AC9E  22DA               	addwfc	fsr2h,f,c
 28800  01ACA0  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 28801  01ACA6  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 28802  01ACAC  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 28803                           
 28804                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28805  01ACB2  52E5               	movf	postdec1,f,c
 28806  01ACB4  52E5               	movf	postdec1,f,c
 28807  01ACB6  52E5               	movf	postdec1,f,c
 28808  01ACB8  0012               	return		;funcret
 28809  01ACBA                     __end_of_TMR3_SetInterruptHandler:
 28810                           	opt callstack 0
 28811                           
 28812 ;; *************** function _TMR2_Initialize *****************
 28813 ;; Defined at:
 28814 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 28815 ;; Parameters:    Size  Location     Type
 28816 ;;		None
 28817 ;; Auto vars:     Size  Location     Type
 28818 ;;		None
 28819 ;; Return value:  Size  Location     Type
 28820 ;;                  1  [STACK] void 
 28821 ;; Registers used:
 28822 ;;		wreg, status,2
 28823 ;; Tracked objects:
 28824 ;;		On entry : 3F/3F
 28825 ;;		On exit  : 3F/39
 28826 ;;		Unchanged: 0/0
 28827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28832 ;;Total ram usage:        0 bytes
 28833 ;; Hardware stack levels used:    1
 28834 ;; Hardware stack levels required when called:   15
 28835 ;; This function calls:
 28836 ;;		Nothing
 28837 ;; This function is called by:
 28838 ;;		_SYSTEM_Initialize
 28839 ;; This function uses a reentrant model
 28840 ;;
 28841                           
 28842                           	psect	text119
 28843  01B02E                     __ptext119:
 28844                           	opt callstack 0
 28845  01B02E                     _TMR2_Initialize:
 28846                           	opt callstack 14
 28847                           
 28848                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 28849                           
 28850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28851                           ;incstack = 0
 28852  01B02E  0E01               	movlw	1
 28853  01B030  6EAE               	movwf	174,c	;volatile
 28854                           
 28855                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 28856  01B032  6AAD               	clrf	173,c	;volatile
 28857                           
 28858                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 28859  01B034  6AAF               	clrf	175,c	;volatile
 28860                           
 28861                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 28862  01B036  0E63               	movlw	99
 28863  01B038  6EAB               	movwf	171,c	;volatile
 28864                           
 28865                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 28866  01B03A  6AAA               	clrf	170,c	;volatile
 28867                           
 28868                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 28869  01B03C  0139               	movlb	57	; () banked
 28870  01B03E  95A4               	bcf	164,2,b	;volatile
 28871                           
 28872                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 28873  01B040  0EC0               	movlw	192
 28874  01B042  6EAC               	movwf	172,c	;volatile
 28875                           
 28876                           ; BSR set to: 57
 28877                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28878  01B044  0012               	return		;funcret
 28879  01B046                     __end_of_TMR2_Initialize:
 28880                           	opt callstack 0
 28881                           
 28882 ;; *************** function _SPI1_Initialize *****************
 28883 ;; Defined at:
 28884 ;;		line 64 in file "mcc_generated_files/spi1.c"
 28885 ;; Parameters:    Size  Location     Type
 28886 ;;		None
 28887 ;; Auto vars:     Size  Location     Type
 28888 ;;		None
 28889 ;; Return value:  Size  Location     Type
 28890 ;;                  1  [STACK] void 
 28891 ;; Registers used:
 28892 ;;		wreg, status,2
 28893 ;; Tracked objects:
 28894 ;;		On entry : 3F/39
 28895 ;;		On exit  : 3F/3D
 28896 ;;		Unchanged: 0/0
 28897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28902 ;;Total ram usage:        0 bytes
 28903 ;; Hardware stack levels used:    1
 28904 ;; Hardware stack levels required when called:   15
 28905 ;; This function calls:
 28906 ;;		Nothing
 28907 ;; This function is called by:
 28908 ;;		_SYSTEM_Initialize
 28909 ;; This function uses a reentrant model
 28910 ;;
 28911                           
 28912                           	psect	text120
 28913  01B046                     __ptext120:
 28914                           	opt callstack 0
 28915  01B046                     _SPI1_Initialize:
 28916                           	opt callstack 14
 28917                           
 28918                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 28919                           
 28920                           ; BSR set to: 57
 28921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28922                           ;incstack = 0
 28923  01B046  0E40               	movlw	64
 28924  01B048  013D               	movlb	61	; () banked
 28925  01B04A  6F15               	movwf	21,b	;volatile
 28926                           
 28927                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 28928  01B04C  0E03               	movlw	3
 28929  01B04E  6F16               	movwf	22,b	;volatile
 28930                           
 28931                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 28932  01B050  0E4F               	movlw	79
 28933  01B052  6F19               	movwf	25,b	;volatile
 28934                           
 28935                           ; BSR set to: 61
 28936                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 28937  01B054  6B1C               	clrf	28,b	;volatile
 28938                           
 28939                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 28940  01B056  0E83               	movlw	131
 28941  01B058  6F14               	movwf	20,b	;volatile
 28942                           
 28943                           ; BSR set to: 61
 28944                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28945  01B05A  0012               	return		;funcret
 28946  01B05C                     __end_of_SPI1_Initialize:
 28947                           	opt callstack 0
 28948                           
 28949 ;; *************** function _PWM8_Initialize *****************
 28950 ;; Defined at:
 28951 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 28952 ;; Parameters:    Size  Location     Type
 28953 ;;		None
 28954 ;; Auto vars:     Size  Location     Type
 28955 ;;		None
 28956 ;; Return value:  Size  Location     Type
 28957 ;;                  1  [STACK] void 
 28958 ;; Registers used:
 28959 ;;		wreg, status,2
 28960 ;; Tracked objects:
 28961 ;;		On entry : 0/3E
 28962 ;;		On exit  : 3F/3F
 28963 ;;		Unchanged: 0/0
 28964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28969 ;;Total ram usage:        0 bytes
 28970 ;; Hardware stack levels used:    1
 28971 ;; Hardware stack levels required when called:   15
 28972 ;; This function calls:
 28973 ;;		Nothing
 28974 ;; This function is called by:
 28975 ;;		_SYSTEM_Initialize
 28976 ;; This function uses a reentrant model
 28977 ;;
 28978                           
 28979                           	psect	text121
 28980  01B05C                     __ptext121:
 28981                           	opt callstack 0
 28982  01B05C                     _PWM8_Initialize:
 28983                           	opt callstack 14
 28984                           
 28985                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 28986                           
 28987                           ; BSR set to: 61
 28988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28989                           ;incstack = 0
 28990  01B05C  0E80               	movlw	128
 28991  01B05E  6E62               	movwf	98,c	;volatile
 28992                           
 28993                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 28994  01B060  6A61               	clrf	97,c	;volatile
 28995                           
 28996                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 28997  01B062  0E40               	movlw	64
 28998  01B064  6E60               	movwf	96,c	;volatile
 28999                           
 29000                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29001  01B066  013F               	movlb	63	; () banked
 29002  01B068  515F               	movf	95,w,b	;volatile
 29003  01B06A  0B3F               	andlw	-193
 29004  01B06C  0940               	iorlw	64
 29005  01B06E  6F5F               	movwf	95,b	;volatile
 29006                           
 29007                           ; BSR set to: 63
 29008                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29009  01B070  0012               	return		;funcret
 29010  01B072                     __end_of_PWM8_Initialize:
 29011                           	opt callstack 0
 29012                           
 29013 ;; *************** function _PMD_Initialize *****************
 29014 ;; Defined at:
 29015 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29016 ;; Parameters:    Size  Location     Type
 29017 ;;		None
 29018 ;; Auto vars:     Size  Location     Type
 29019 ;;		None
 29020 ;; Return value:  Size  Location     Type
 29021 ;;                  1  [STACK] void 
 29022 ;; Registers used:
 29023 ;;		None
 29024 ;; Tracked objects:
 29025 ;;		On entry : 3F/39
 29026 ;;		On exit  : 3F/39
 29027 ;;		Unchanged: 0/0
 29028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29033 ;;Total ram usage:        0 bytes
 29034 ;; Hardware stack levels used:    1
 29035 ;; Hardware stack levels required when called:   15
 29036 ;; This function calls:
 29037 ;;		Nothing
 29038 ;; This function is called by:
 29039 ;;		_SYSTEM_Initialize
 29040 ;; This function uses a reentrant model
 29041 ;;
 29042                           
 29043                           	psect	text122
 29044  01B088                     __ptext122:
 29045                           	opt callstack 0
 29046  01B088                     _PMD_Initialize:
 29047                           	opt callstack 14
 29048                           
 29049                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29050                           
 29051                           ; BSR set to: 63
 29052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29053                           ;incstack = 0
 29054  01B088  0139               	movlb	57	; () banked
 29055  01B08A  6BC0               	clrf	192,b	;volatile
 29056                           
 29057                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29058  01B08C  6BC1               	clrf	193,b	;volatile
 29059                           
 29060                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29061  01B08E  6BC2               	clrf	194,b	;volatile
 29062                           
 29063                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29064  01B090  6BC3               	clrf	195,b	;volatile
 29065                           
 29066                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29067  01B092  6BC4               	clrf	196,b	;volatile
 29068                           
 29069                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29070  01B094  6BC5               	clrf	197,b	;volatile
 29071                           
 29072                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29073  01B096  6BC6               	clrf	198,b	;volatile
 29074                           
 29075                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29076  01B098  6BC7               	clrf	199,b	;volatile
 29077                           
 29078                           ; BSR set to: 57
 29079                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29080  01B09A  0012               	return		;funcret
 29081  01B09C                     __end_of_PMD_Initialize:
 29082                           	opt callstack 0
 29083                           
 29084 ;; *************** function _PIN_MANAGER_Initialize *****************
 29085 ;; Defined at:
 29086 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29087 ;; Parameters:    Size  Location     Type
 29088 ;;		None
 29089 ;; Auto vars:     Size  Location     Type
 29090 ;;		None
 29091 ;; Return value:  Size  Location     Type
 29092 ;;                  1  [STACK] void 
 29093 ;; Registers used:
 29094 ;;		wreg, status,2
 29095 ;; Tracked objects:
 29096 ;;		On entry : 3F/39
 29097 ;;		On exit  : 3F/3A
 29098 ;;		Unchanged: 0/0
 29099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29104 ;;Total ram usage:        0 bytes
 29105 ;; Hardware stack levels used:    1
 29106 ;; Hardware stack levels required when called:   15
 29107 ;; This function calls:
 29108 ;;		Nothing
 29109 ;; This function is called by:
 29110 ;;		_SYSTEM_Initialize
 29111 ;; This function uses a reentrant model
 29112 ;;
 29113                           
 29114                           	psect	text123
 29115  019B7C                     __ptext123:
 29116                           	opt callstack 0
 29117  019B7C                     _PIN_MANAGER_Initialize:
 29118                           	opt callstack 14
 29119                           
 29120                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29121                           
 29122                           ; BSR set to: 57
 29123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29124                           ;incstack = 0
 29125  019B7C  0E07               	movlw	7
 29126  019B7E  6EBE               	movwf	190,c	;volatile
 29127                           
 29128                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29129  019B80  0E80               	movlw	128
 29130  019B82  6EBD               	movwf	189,c	;volatile
 29131                           
 29132                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29133  019B84  6ABA               	clrf	186,c	;volatile
 29134                           
 29135                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 29136  019B86  6ABF               	clrf	191,c	;volatile
 29137                           
 29138                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29139  019B88  6ABB               	clrf	187,c	;volatile
 29140                           
 29141                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29142  019B8A  0E07               	movlw	7
 29143  019B8C  6EBC               	movwf	188,c	;volatile
 29144                           
 29145                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29146  019B8E  6AC6               	clrf	198,c	;volatile
 29147                           
 29148                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29149  019B90  0E0F               	movlw	15
 29150  019B92  6EC7               	movwf	199,c	;volatile
 29151                           
 29152                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29153  019B94  68C2               	setf	194,c	;volatile
 29154                           
 29155                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29156  019B96  0EBF               	movlw	191
 29157  019B98  6EC3               	movwf	195,c	;volatile
 29158                           
 29159                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29160  019B9A  0E90               	movlw	144
 29161  019B9C  6EC4               	movwf	196,c	;volatile
 29162                           
 29163                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29164  019B9E  0E0C               	movlw	12
 29165  019BA0  6EC5               	movwf	197,c	;volatile
 29166                           
 29167                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29168  019BA2  013A               	movlb	58	; () banked
 29169  019BA4  6B70               	clrf	112,b	;volatile
 29170                           
 29171                           ; BSR set to: 58
 29172                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29173  019BA6  6B60               	clrf	96,b	;volatile
 29174                           
 29175                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29176  019BA8  0E3C               	movlw	60
 29177  019BAA  6F50               	movwf	80,b	;volatile
 29178                           
 29179                           ; BSR set to: 58
 29180                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29181  019BAC  6B80               	clrf	128,b	;volatile
 29182                           
 29183                           ; BSR set to: 58
 29184                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29185  019BAE  6B90               	clrf	144,b	;volatile
 29186                           
 29187                           ; BSR set to: 58
 29188                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29189  019BB0  6940               	setf	64,b	;volatile
 29190                           
 29191                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29192  019BB2  0E0C               	movlw	12
 29193  019BB4  6F71               	movwf	113,b	;volatile
 29194                           
 29195                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29196  019BB6  0E0F               	movlw	15
 29197  019BB8  6F91               	movwf	145,b	;volatile
 29198                           
 29199                           ; BSR set to: 58
 29200                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 29201  019BBA  6B81               	clrf	129,b	;volatile
 29202                           
 29203                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 29204  019BBC  0E83               	movlw	131
 29205  019BBE  6F51               	movwf	81,b	;volatile
 29206                           
 29207                           ; BSR set to: 58
 29208                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 29209  019BC0  6B41               	clrf	65,b	;volatile
 29210                           
 29211                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 29212  019BC2  0E97               	movlw	151
 29213  019BC4  6F61               	movwf	97,b	;volatile
 29214                           
 29215                           ; BSR set to: 58
 29216                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 29217  019BC6  6B82               	clrf	130,b	;volatile
 29218                           
 29219                           ; BSR set to: 58
 29220                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 29221  019BC8  6B92               	clrf	146,b	;volatile
 29222                           
 29223                           ; BSR set to: 58
 29224                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 29225  019BCA  6B42               	clrf	66,b	;volatile
 29226                           
 29227                           ; BSR set to: 58
 29228                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 29229  019BCC  6B52               	clrf	82,b	;volatile
 29230                           
 29231                           ; BSR set to: 58
 29232                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 29233  019BCE  6B62               	clrf	98,b	;volatile
 29234                           
 29235                           ; BSR set to: 58
 29236                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 29237  019BD0  6B72               	clrf	114,b	;volatile
 29238                           
 29239                           ; BSR set to: 58
 29240                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 29241  019BD2  6943               	setf	67,b	;volatile
 29242                           
 29243                           ; BSR set to: 58
 29244                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 29245  019BD4  6953               	setf	83,b	;volatile
 29246                           
 29247                           ; BSR set to: 58
 29248                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 29249  019BD6  6963               	setf	99,b	;volatile
 29250                           
 29251                           ; BSR set to: 58
 29252                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 29253  019BD8  6973               	setf	115,b	;volatile
 29254                           
 29255                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 29256  019BDA  0E07               	movlw	7
 29257  019BDC  6F83               	movwf	131,b	;volatile
 29258                           
 29259                           ; BSR set to: 58
 29260                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 29261  019BDE  6993               	setf	147,b	;volatile
 29262                           
 29263                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 29264  019BE0  0E0F               	movlw	15
 29265  019BE2  6FE8               	movwf	232,b	;volatile
 29266                           
 29267                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 29268  019BE4  0E13               	movlw	19
 29269  019BE6  6FDE               	movwf	222,b	;volatile
 29270                           
 29271                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 29272  019BE8  0E16               	movlw	22
 29273  019BEA  6F0E               	movwf	14,b	;volatile
 29274                           
 29275                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 29276  019BEC  0E1E               	movlw	30
 29277  019BEE  6F13               	movwf	19,b	;volatile
 29278                           
 29279                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 29280  019BF0  0E08               	movlw	8
 29281  019BF2  6FC0               	movwf	192,b	;volatile
 29282                           
 29283                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 29284  019BF4  0E10               	movlw	16
 29285  019BF6  6F19               	movwf	25,b	;volatile
 29286                           
 29287                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 29288  019BF8  0E09               	movlw	9
 29289  019BFA  6FC1               	movwf	193,b	;volatile
 29290                           
 29291                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 29292  019BFC  0E1F               	movlw	31
 29293  019BFE  6F15               	movwf	21,b	;volatile
 29294                           
 29295                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 29296  019C00  0E13               	movlw	19
 29297  019C02  6F16               	movwf	22,b	;volatile
 29298                           
 29299                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 29300  019C04  0E17               	movlw	23
 29301  019C06  6FE5               	movwf	229,b	;volatile
 29302                           
 29303                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 29304  019C08  0E14               	movlw	20
 29305  019C0A  6FDF               	movwf	223,b	;volatile
 29306                           
 29307                           ; BSR set to: 58
 29308                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 29309  019C0C  0012               	return		;funcret
 29310  019C0E                     __end_of_PIN_MANAGER_Initialize:
 29311                           	opt callstack 0
 29312                           
 29313 ;; *************** function _OSCILLATOR_Initialize *****************
 29314 ;; Defined at:
 29315 ;;		line 72 in file "mcc_generated_files/mcc.c"
 29316 ;; Parameters:    Size  Location     Type
 29317 ;;		None
 29318 ;; Auto vars:     Size  Location     Type
 29319 ;;		None
 29320 ;; Return value:  Size  Location     Type
 29321 ;;                  1  [STACK] void 
 29322 ;; Registers used:
 29323 ;;		wreg, status,2
 29324 ;; Tracked objects:
 29325 ;;		On entry : 3F/3A
 29326 ;;		On exit  : 3F/39
 29327 ;;		Unchanged: 0/0
 29328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29333 ;;Total ram usage:        0 bytes
 29334 ;; Hardware stack levels used:    1
 29335 ;; Hardware stack levels required when called:   15
 29336 ;; This function calls:
 29337 ;;		Nothing
 29338 ;; This function is called by:
 29339 ;;		_SYSTEM_Initialize
 29340 ;; This function uses a reentrant model
 29341 ;;
 29342                           
 29343                           	psect	text124
 29344  01B072                     __ptext124:
 29345                           	opt callstack 0
 29346  01B072                     _OSCILLATOR_Initialize:
 29347                           	opt callstack 14
 29348                           
 29349                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 29350                           
 29351                           ; BSR set to: 58
 29352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29353                           ;incstack = 0
 29354  01B072  0E20               	movlw	32
 29355  01B074  0139               	movlb	57	; () banked
 29356  01B076  6FD9               	movwf	217,b	;volatile
 29357                           
 29358                           ; BSR set to: 57
 29359                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 29360  01B078  6BDB               	clrf	219,b	;volatile
 29361                           
 29362                           ; BSR set to: 57
 29363                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 29364  01B07A  6BDD               	clrf	221,b	;volatile
 29365                           
 29366                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 29367  01B07C  0E02               	movlw	2
 29368  01B07E  6FDF               	movwf	223,b	;volatile
 29369                           
 29370                           ; BSR set to: 57
 29371                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 29372  01B080  6BDE               	clrf	222,b	;volatile
 29373  01B082                     l169:
 29374                           
 29375                           ; BSR set to: 57
 29376                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 29377  01B082  B1DC               	btfsc	220,0,b	;volatile
 29378  01B084  0012               	return	
 29379  01B086  D7FD               	goto	l169
 29380  01B088                     __end_of_OSCILLATOR_Initialize:
 29381                           	opt callstack 0
 29382                           
 29383 ;; *************** function _INTERRUPT_Initialize *****************
 29384 ;; Defined at:
 29385 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29386 ;; Parameters:    Size  Location     Type
 29387 ;;		None
 29388 ;; Auto vars:     Size  Location     Type
 29389 ;;  state           1  [STACK] _Bool 
 29390 ;; Return value:  Size  Location     Type
 29391 ;;                  1  [STACK] void 
 29392 ;; Registers used:
 29393 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 29394 ;; Tracked objects:
 29395 ;;		On entry : 0/0
 29396 ;;		On exit  : 3F/39
 29397 ;;		Unchanged: 0/0
 29398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29403 ;;Total ram usage:        0 bytes
 29404 ;; Hardware stack levels used:    1
 29405 ;; Hardware stack levels required when called:   15
 29406 ;; This function calls:
 29407 ;;		Nothing
 29408 ;; This function is called by:
 29409 ;;		_SYSTEM_Initialize
 29410 ;; This function uses a reentrant model
 29411 ;;
 29412                           
 29413                           	psect	text125
 29414  019FEA                     __ptext125:
 29415                           	opt callstack 0
 29416  019FEA                     _INTERRUPT_Initialize:
 29417                           	opt callstack 0
 29418                           
 29419                           ; BSR set to: 57
 29420                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29421  019FEA  52E6               	movf	postinc1,f,c
 29422                           
 29423                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 29424                           
 29425                           ;incstack = 0
 29426  019FEC  8AD2               	bsf	210,5,c	;volatile
 29427                           
 29428                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 29429  019FEE  AED2               	btfss	16338,7,c	;volatile
 29430  019FF0  D003               	goto	u8850
 29431  019FF2  6A0C               	clrf	(btemp+11)^0,c
 29432  019FF4  2A0C               	incf	(btemp+11)^0,f,c
 29433  019FF6  D001               	goto	u8868
 29434  019FF8                     u8850:
 29435  019FF8  6A0C               	clrf	(btemp+11)^0,c
 29436  019FFA                     u8868:
 29437                           
 29438                           ;stkvar	_state @ sp[(-1)+0]
 29439  019FFA  0EFF               	movlw	-1
 29440  019FFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 29441                           
 29442                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 29443  01A002  9ED2               	bcf	16338,7,c	;volatile
 29444                           
 29445                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 29446  01A004  0E55               	movlw	85
 29447  01A006  6ED4               	movwf	212,c	;volatile
 29448                           
 29449                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 29450  01A008  0EAA               	movlw	170
 29451  01A00A  6ED4               	movwf	212,c	;volatile
 29452                           
 29453                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 29454  01A00C  90D4               	bcf	212,0,c	;volatile
 29455                           
 29456                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 29457  01A00E  0138               	movlb	56	; () banked
 29458  01A010  6B9F               	clrf	159,b	;volatile
 29459                           
 29460                           ; BSR set to: 56
 29461                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 29462  01A012  6B9E               	clrf	158,b	;volatile
 29463                           
 29464                           ; BSR set to: 56
 29465                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 29466  01A014  0E08               	movlw	8
 29467  01A016  6F9D               	movwf	157,b	;volatile
 29468                           
 29469                           ; BSR set to: 56
 29470                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 29471  01A018  0E55               	movlw	85
 29472  01A01A  6ED4               	movwf	212,c	;volatile
 29473                           
 29474                           ; BSR set to: 56
 29475                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 29476  01A01C  0EAA               	movlw	170
 29477  01A01E  6ED4               	movwf	212,c	;volatile
 29478                           
 29479                           ; BSR set to: 56
 29480                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 29481  01A020  80D4               	bsf	212,0,c	;volatile
 29482                           
 29483                           ; BSR set to: 56
 29484                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 29485                           ;stkvar	_state @ sp[(-1)+0]
 29486  01A022  0EFF               	movlw	-1
 29487  01A024  B0E3               	btfsc	plusw1,0,c
 29488  01A026  D002               	bra	u8875
 29489  01A028  9ED2               	bcf	16338,7,c	;volatile
 29490  01A02A  D001               	bra	u8876
 29491  01A02C                     u8875:
 29492  01A02C  8ED2               	bsf	16338,7,c	;volatile
 29493  01A02E                     u8876:
 29494                           
 29495                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 29496  01A02E  0139               	movlb	57	; () banked
 29497  01A030  8782               	bsf	130,3,b	;volatile
 29498                           
 29499                           ; BSR set to: 57
 29500                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 29501  01A032  8382               	bsf	130,1,b	;volatile
 29502                           
 29503                           ; BSR set to: 57
 29504                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 29505  01A034  8182               	bsf	130,0,b	;volatile
 29506                           
 29507                           ; BSR set to: 57
 29508                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 29509  01A036  8582               	bsf	130,2,b	;volatile
 29510                           
 29511                           ; BSR set to: 57
 29512                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 29513  01A038  8786               	bsf	134,3,b	;volatile
 29514                           
 29515                           ; BSR set to: 57
 29516                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 29517  01A03A  8586               	bsf	134,2,b	;volatile
 29518                           
 29519                           ; BSR set to: 57
 29520                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 29521  01A03C  8783               	bsf	131,3,b	;volatile
 29522                           
 29523                           ; BSR set to: 57
 29524                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 29525  01A03E  8181               	bsf	129,0,b	;volatile
 29526                           
 29527                           ; BSR set to: 57
 29528                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 29529  01A040  9185               	bcf	133,0,b	;volatile
 29530                           
 29531                           ; BSR set to: 57
 29532                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 29533  01A042  8189               	bsf	137,0,b	;volatile
 29534                           
 29535                           ; BSR set to: 57
 29536                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 29537  01A044  9D88               	bcf	136,6,b	;volatile
 29538                           
 29539                           ; BSR set to: 57
 29540                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 29541  01A046  9D86               	bcf	134,6,b	;volatile
 29542                           
 29543                           ; BSR set to: 57
 29544                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 29545  01A048  8581               	bsf	129,2,b	;volatile
 29546                           
 29547                           ; BSR set to: 57
 29548                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 29549  01A04A  8781               	bsf	129,3,b	;volatile
 29550                           
 29551                           ; BSR set to: 57
 29552                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 29553  01A04C  52E5               	movf	postdec1,f,c
 29554  01A04E  0012               	return		;funcret
 29555  01A050                     __end_of_INTERRUPT_Initialize:
 29556                           	opt callstack 0
 29557                           
 29558 ;; *************** function _FVR_Initialize *****************
 29559 ;; Defined at:
 29560 ;;		line 58 in file "mcc_generated_files/fvr.c"
 29561 ;; Parameters:    Size  Location     Type
 29562 ;;		None
 29563 ;; Auto vars:     Size  Location     Type
 29564 ;;		None
 29565 ;; Return value:  Size  Location     Type
 29566 ;;                  1  [STACK] void 
 29567 ;; Registers used:
 29568 ;;		wreg, status,2
 29569 ;; Tracked objects:
 29570 ;;		On entry : 3F/39
 29571 ;;		On exit  : 3F/3E
 29572 ;;		Unchanged: 0/0
 29573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29578 ;;Total ram usage:        0 bytes
 29579 ;; Hardware stack levels used:    1
 29580 ;; Hardware stack levels required when called:   15
 29581 ;; This function calls:
 29582 ;;		Nothing
 29583 ;; This function is called by:
 29584 ;;		_SYSTEM_Initialize
 29585 ;; This function uses a reentrant model
 29586 ;;
 29587                           
 29588                           	psect	text126
 29589  01B172                     __ptext126:
 29590                           	opt callstack 0
 29591  01B172                     _FVR_Initialize:
 29592                           	opt callstack 14
 29593                           
 29594                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 29595                           
 29596                           ; BSR set to: 57
 29597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29598                           ;incstack = 0
 29599  01B172  0EAF               	movlw	175
 29600  01B174  013E               	movlb	62	; () banked
 29601  01B176  6FC1               	movwf	193,b	;volatile
 29602                           
 29603                           ; BSR set to: 62
 29604                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29605  01B178  0012               	return		;funcret
 29606  01B17A                     __end_of_FVR_Initialize:
 29607                           	opt callstack 0
 29608                           
 29609 ;; *************** function _EXT_INT_Initialize *****************
 29610 ;; Defined at:
 29611 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 29612 ;; Parameters:    Size  Location     Type
 29613 ;;		None
 29614 ;; Auto vars:     Size  Location     Type
 29615 ;;		None
 29616 ;; Return value:  Size  Location     Type
 29617 ;;                  1  [STACK] void 
 29618 ;; Registers used:
 29619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29620 ;; Tracked objects:
 29621 ;;		On entry : 3F/39
 29622 ;;		On exit  : 3F/39
 29623 ;;		Unchanged: 0/0
 29624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29629 ;;Total ram usage:        0 bytes
 29630 ;; Hardware stack levels used:    1
 29631 ;; Hardware stack levels required when called:   16
 29632 ;; This function calls:
 29633 ;;		_INT0_SetInterruptHandler
 29634 ;;		_INT1_SetInterruptHandler
 29635 ;; This function is called by:
 29636 ;;		_SYSTEM_Initialize
 29637 ;; This function uses a reentrant model
 29638 ;;
 29639                           
 29640                           	psect	text127
 29641  01A926                     __ptext127:
 29642                           	opt callstack 0
 29643  01A926                     _EXT_INT_Initialize:
 29644                           	opt callstack 13
 29645                           
 29646                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 29647                           
 29648                           ; BSR set to: 62
 29649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29650                           ;incstack = 0
 29651  01A926  0139               	movlb	57	; () banked
 29652  01A928  91A1               	bcf	161,0,b	;volatile
 29653                           
 29654                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 29655  01A92A  90D2               	bcf	210,0,c	;volatile
 29656                           
 29657                           ; BSR set to: 57
 29658                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 29659  01A92C  0E9E               	movlw	low _INT0_DefaultInterruptHandler
 29660  01A92E  6EE6               	movwf	postinc1,c
 29661  01A930  0EB1               	movlw	high _INT0_DefaultInterruptHandler
 29662  01A932  6EE6               	movwf	postinc1,c
 29663  01A934  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 29664  01A936  6EE6               	movwf	postinc1,c
 29665  01A938  EC71  F0D6         	call	_INT0_SetInterruptHandler	;wreg free
 29666                           
 29667                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 29668  01A93C  0139               	movlb	57	; () banked
 29669  01A93E  8191               	bsf	145,0,b	;volatile
 29670                           
 29671                           ; BSR set to: 57
 29672                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 29673  01A940  91A5               	bcf	165,0,b	;volatile
 29674                           
 29675                           ; BSR set to: 57
 29676                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 29677  01A942  92D2               	bcf	210,1,c	;volatile
 29678                           
 29679                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 29680  01A944  0E9A               	movlw	low _INT1_DefaultInterruptHandler
 29681  01A946  6EE6               	movwf	postinc1,c
 29682  01A948  0EB1               	movlw	high _INT1_DefaultInterruptHandler
 29683  01A94A  6EE6               	movwf	postinc1,c
 29684  01A94C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 29685  01A94E  6EE6               	movwf	postinc1,c
 29686  01A950  EC5D  F0D6         	call	_INT1_SetInterruptHandler	;wreg free
 29687                           
 29688                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 29689  01A954  0139               	movlb	57	; () banked
 29690  01A956  8195               	bsf	149,0,b	;volatile
 29691                           
 29692                           ; BSR set to: 57
 29693                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 29694  01A958  0012               	return		;funcret
 29695  01A95A                     __end_of_EXT_INT_Initialize:
 29696                           	opt callstack 0
 29697                           
 29698 ;; *************** function _INT1_SetInterruptHandler *****************
 29699 ;; Defined at:
 29700 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 29701 ;; Parameters:    Size  Location     Type
 29702 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29703 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 29704 ;; Auto vars:     Size  Location     Type
 29705 ;;		None
 29706 ;; Return value:  Size  Location     Type
 29707 ;;                  1  [STACK] void 
 29708 ;; Registers used:
 29709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29710 ;; Tracked objects:
 29711 ;;		On entry : 3F/39
 29712 ;;		On exit  : 0/0
 29713 ;;		Unchanged: 0/0
 29714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29719 ;;Total ram usage:        0 bytes
 29720 ;; Hardware stack levels used:    1
 29721 ;; Hardware stack levels required when called:   15
 29722 ;; This function calls:
 29723 ;;		Nothing
 29724 ;; This function is called by:
 29725 ;;		_EXT_INT_Initialize
 29726 ;;		_start_switch_handler
 29727 ;; This function uses a reentrant model
 29728 ;;
 29729                           
 29730                           	psect	text128
 29731  01ACBA                     __ptext128:
 29732                           	opt callstack 0
 29733  01ACBA                     _INT1_SetInterruptHandler:
 29734                           	opt callstack 14
 29735                           
 29736                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 29737                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29738                           
 29739                           ; BSR set to: 57
 29740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29741                           ;incstack = 0
 29742  01ACBA  50E1               	movf	fsr1l,w,c
 29743  01ACBC  0FFD               	addlw	-3
 29744  01ACBE  6ED9               	movwf	fsr2l,c
 29745  01ACC0  50E2               	movf	fsr1h,w,c
 29746  01ACC2  6EDA               	movwf	fsr2h,c
 29747  01ACC4  0EFF               	movlw	255
 29748  01ACC6  22DA               	addwfc	fsr2h,f,c
 29749  01ACC8  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 29750  01ACCE  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 29751  01ACD4  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 29752                           
 29753                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29754  01ACDA  52E5               	movf	postdec1,f,c
 29755  01ACDC  52E5               	movf	postdec1,f,c
 29756  01ACDE  52E5               	movf	postdec1,f,c
 29757  01ACE0  0012               	return		;funcret
 29758  01ACE2                     __end_of_INT1_SetInterruptHandler:
 29759                           	opt callstack 0
 29760                           
 29761 ;; *************** function _INT0_SetInterruptHandler *****************
 29762 ;; Defined at:
 29763 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 29764 ;; Parameters:    Size  Location     Type
 29765 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29766 ;;		 -> INT0_DefaultInterruptHandler(1), 
 29767 ;; Auto vars:     Size  Location     Type
 29768 ;;		None
 29769 ;; Return value:  Size  Location     Type
 29770 ;;                  1  [STACK] void 
 29771 ;; Registers used:
 29772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29773 ;; Tracked objects:
 29774 ;;		On entry : 3F/39
 29775 ;;		On exit  : 0/0
 29776 ;;		Unchanged: 0/0
 29777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29782 ;;Total ram usage:        0 bytes
 29783 ;; Hardware stack levels used:    1
 29784 ;; Hardware stack levels required when called:   15
 29785 ;; This function calls:
 29786 ;;		Nothing
 29787 ;; This function is called by:
 29788 ;;		_EXT_INT_Initialize
 29789 ;; This function uses a reentrant model
 29790 ;;
 29791                           
 29792                           	psect	text129
 29793  01ACE2                     __ptext129:
 29794                           	opt callstack 0
 29795  01ACE2                     _INT0_SetInterruptHandler:
 29796                           	opt callstack 13
 29797                           
 29798                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 29799                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29800                           
 29801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29802                           ;incstack = 0
 29803  01ACE2  50E1               	movf	fsr1l,w,c
 29804  01ACE4  0FFD               	addlw	-3
 29805  01ACE6  6ED9               	movwf	fsr2l,c
 29806  01ACE8  50E2               	movf	fsr1h,w,c
 29807  01ACEA  6EDA               	movwf	fsr2h,c
 29808  01ACEC  0EFF               	movlw	255
 29809  01ACEE  22DA               	addwfc	fsr2h,f,c
 29810  01ACF0  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 29811  01ACF6  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 29812  01ACFC  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 29813                           
 29814                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29815  01AD02  52E5               	movf	postdec1,f,c
 29816  01AD04  52E5               	movf	postdec1,f,c
 29817  01AD06  52E5               	movf	postdec1,f,c
 29818  01AD08  0012               	return		;funcret
 29819  01AD0A                     __end_of_INT0_SetInterruptHandler:
 29820                           	opt callstack 0
 29821                           
 29822 ;; *************** function _DMA2_Initialize *****************
 29823 ;; Defined at:
 29824 ;;		line 61 in file "mcc_generated_files/dma2.c"
 29825 ;; Parameters:    Size  Location     Type
 29826 ;;		None
 29827 ;; Auto vars:     Size  Location     Type
 29828 ;;		None
 29829 ;; Return value:  Size  Location     Type
 29830 ;;                  1  [STACK] void 
 29831 ;; Registers used:
 29832 ;;		wreg, status,2
 29833 ;; Tracked objects:
 29834 ;;		On entry : 3F/3D
 29835 ;;		On exit  : 3F/3B
 29836 ;;		Unchanged: 0/0
 29837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29842 ;;Total ram usage:        0 bytes
 29843 ;; Hardware stack levels used:    1
 29844 ;; Hardware stack levels required when called:   15
 29845 ;; This function calls:
 29846 ;;		Nothing
 29847 ;; This function is called by:
 29848 ;;		_SYSTEM_Initialize
 29849 ;; This function uses a reentrant model
 29850 ;;
 29851                           
 29852                           	psect	text130
 29853  01A230                     __ptext130:
 29854                           	opt callstack 0
 29855  01A230                     _DMA2_Initialize:
 29856                           	opt callstack 14
 29857                           
 29858                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 29859                           
 29860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29861                           ;incstack = 0
 29862  01A230  0E00               	movlw	0
 29863  01A232  013B               	movlb	59	; () banked
 29864  01A234  6FD9               	movwf	217,b	;volatile
 29865  01A236  0E10               	movlw	16
 29866  01A238  6FDA               	movwf	218,b	;volatile
 29867  01A23A  0E00               	movlw	0
 29868  01A23C  6FDB               	movwf	219,b	;volatile
 29869                           
 29870                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 29871  01A23E  0E3F               	movlw	63
 29872  01A240  6FD1               	movwf	209,b	;volatile
 29873  01A242  0EBB               	movlw	187
 29874  01A244  6FD0               	movwf	208,b	;volatile
 29875                           
 29876                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 29877  01A246  0E03               	movlw	3
 29878  01A248  6FDD               	movwf	221,b	;volatile
 29879                           
 29880                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 29881  01A24A  0E00               	movlw	0
 29882  01A24C  6FD8               	movwf	216,b	;volatile
 29883  01A24E  0E01               	movlw	1
 29884  01A250  6FD7               	movwf	215,b	;volatile
 29885                           
 29886                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 29887  01A252  0E00               	movlw	0
 29888  01A254  6FCF               	movwf	207,b	;volatile
 29889  01A256  0E01               	movlw	1
 29890  01A258  6FCE               	movwf	206,b	;volatile
 29891                           
 29892                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 29893  01A25A  0E1C               	movlw	28
 29894  01A25C  6FDF               	movwf	223,b	;volatile
 29895                           
 29896                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 29897  01A25E  0E3D               	movlw	61
 29898  01A260  6FDE               	movwf	222,b	;volatile
 29899                           
 29900                           ; BSR set to: 59
 29901                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 29902  01A262  0139               	movlb	57	; () banked
 29903  01A264  97A5               	bcf	165,3,b	;volatile
 29904                           
 29905                           ; BSR set to: 57
 29906                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 29907  01A266  95A5               	bcf	165,2,b	;volatile
 29908                           
 29909                           ; BSR set to: 57
 29910                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 29911  01A268  9BA5               	bcf	165,5,b	;volatile
 29912                           
 29913                           ; BSR set to: 57
 29914                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 29915  01A26A  99A5               	bcf	165,4,b	;volatile
 29916                           
 29917                           ; BSR set to: 57
 29918                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 29919  01A26C  9795               	bcf	149,3,b	;volatile
 29920                           
 29921                           ; BSR set to: 57
 29922                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 29923  01A26E  9595               	bcf	149,2,b	;volatile
 29924                           
 29925                           ; BSR set to: 57
 29926                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 29927  01A270  9B95               	bcf	149,5,b	;volatile
 29928                           
 29929                           ; BSR set to: 57
 29930                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 29931  01A272  9995               	bcf	149,4,b	;volatile
 29932  01A274  9ED2               	bcf	16338,7,c	;# 
 29933  01A276  0139               	banksel	14831	;# 
 29934  01A278  0E55               	movlw	85	;# 
 29935  01A27A  6FEF               	movwf	14831,b	;# 
 29936  01A27C  0EAA               	movlw	170	;# 
 29937  01A27E  6FEF               	movwf	14831,b	;# 
 29938  01A280  81EF               	bsf	14831,0,b	;# 
 29939  01A282  8ED2               	bsf	16338,7,c	;# 
 29940                           
 29941                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 29942  01A284  013B               	movlb	59	; () banked
 29943  01A286  6BDC               	clrf	220,b	;volatile
 29944                           
 29945                           ; BSR set to: 59
 29946                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29947  01A288  0012               	return		;funcret
 29948  01A28A                     __end_of_DMA2_Initialize:
 29949                           	opt callstack 0
 29950                           
 29951 ;; *************** function _DMA1_Initialize *****************
 29952 ;; Defined at:
 29953 ;;		line 86 in file "mcc_generated_files/dma1.c"
 29954 ;; Parameters:    Size  Location     Type
 29955 ;;		None
 29956 ;; Auto vars:     Size  Location     Type
 29957 ;;		None
 29958 ;; Return value:  Size  Location     Type
 29959 ;;                  1  [STACK] void 
 29960 ;; Registers used:
 29961 ;;		wreg, status,2
 29962 ;; Tracked objects:
 29963 ;;		On entry : 3F/3B
 29964 ;;		On exit  : 3F/3B
 29965 ;;		Unchanged: 0/0
 29966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29971 ;;Total ram usage:        0 bytes
 29972 ;; Hardware stack levels used:    1
 29973 ;; Hardware stack levels required when called:   15
 29974 ;; This function calls:
 29975 ;;		Nothing
 29976 ;; This function is called by:
 29977 ;;		_SYSTEM_Initialize
 29978 ;; This function uses a reentrant model
 29979 ;;
 29980                           
 29981                           	psect	text131
 29982  019EAC                     __ptext131:
 29983                           	opt callstack 0
 29984  019EAC                     _DMA1_Initialize:
 29985                           	opt callstack 14
 29986                           
 29987                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 29988                           
 29989                           ; BSR set to: 59
 29990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29991                           ;incstack = 0
 29992  019EAC  0E00               	movlw	0
 29993  019EAE  013B               	movlb	59	; () banked
 29994  019EB0  6FF9               	movwf	249,b	;volatile
 29995  019EB2  0E10               	movlw	16
 29996  019EB4  6FFA               	movwf	250,b	;volatile
 29997  019EB6  0E00               	movlw	0
 29998  019EB8  6FFB               	movwf	251,b	;volatile
 29999                           
 30000                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30001  019EBA  0E3D               	movlw	61
 30002  019EBC  6FF1               	movwf	241,b	;volatile
 30003  019EBE  0E11               	movlw	17
 30004  019EC0  6FF0               	movwf	240,b	;volatile
 30005                           
 30006                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30007  019EC2  0E03               	movlw	3
 30008  019EC4  6FFD               	movwf	253,b	;volatile
 30009                           
 30010                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30011  019EC6  0E00               	movlw	0
 30012  019EC8  6FF8               	movwf	248,b	;volatile
 30013  019ECA  0E01               	movlw	1
 30014  019ECC  6FF7               	movwf	247,b	;volatile
 30015                           
 30016                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30017  019ECE  0E00               	movlw	0
 30018  019ED0  6FEF               	movwf	239,b	;volatile
 30019  019ED2  0E01               	movlw	1
 30020  019ED4  6FEE               	movwf	238,b	;volatile
 30021                           
 30022                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30023  019ED6  0E15               	movlw	21
 30024  019ED8  6FFF               	movwf	255,b	;volatile
 30025                           
 30026                           ; BSR set to: 59
 30027                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30028  019EDA  6BFE               	clrf	254,b	;volatile
 30029                           
 30030                           ; BSR set to: 59
 30031                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30032  019EDC  0139               	movlb	57	; () banked
 30033  019EDE  93A2               	bcf	162,1,b	;volatile
 30034                           
 30035                           ; BSR set to: 57
 30036                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30037  019EE0  91A2               	bcf	162,0,b	;volatile
 30038                           
 30039                           ; BSR set to: 57
 30040                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30041  019EE2  97A2               	bcf	162,3,b	;volatile
 30042                           
 30043                           ; BSR set to: 57
 30044                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30045  019EE4  95A2               	bcf	162,2,b	;volatile
 30046                           
 30047                           ; BSR set to: 57
 30048                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30049  019EE6  8392               	bsf	146,1,b	;volatile
 30050                           
 30051                           ; BSR set to: 57
 30052                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30053  019EE8  8192               	bsf	146,0,b	;volatile
 30054                           
 30055                           ; BSR set to: 57
 30056                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30057  019EEA  8792               	bsf	146,3,b	;volatile
 30058                           
 30059                           ; BSR set to: 57
 30060                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30061  019EEC  8592               	bsf	146,2,b	;volatile
 30062                           
 30063                           ; BSR set to: 57
 30064                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30065  019EEE  6BF1               	clrf	241,b	;volatile
 30066                           
 30067                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30068  019EF0  0E01               	movlw	1
 30069  019EF2  6FF2               	movwf	242,b	;volatile
 30070                           
 30071                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30072  019EF4  0E04               	movlw	4
 30073  019EF6  6FF3               	movwf	243,b	;volatile
 30074                           
 30075                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30076  019EF8  0E02               	movlw	2
 30077  019EFA  6FF4               	movwf	244,b	;volatile
 30078                           
 30079                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30080  019EFC  0E03               	movlw	3
 30081  019EFE  6FF7               	movwf	247,b	;volatile
 30082  019F00  9ED2               	bcf	16338,7,c	;# 
 30083  019F02  0139               	banksel	14831	;# 
 30084  019F04  0E55               	movlw	85	;# 
 30085  019F06  6FEF               	movwf	14831,b	;# 
 30086  019F08  0EAA               	movlw	170	;# 
 30087  019F0A  6FEF               	movwf	14831,b	;# 
 30088  019F0C  81EF               	bsf	14831,0,b	;# 
 30089  019F0E  8ED2               	bsf	16338,7,c	;# 
 30090                           
 30091                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30092  019F10  013B               	movlb	59	; () banked
 30093  019F12  6BFC               	clrf	252,b	;volatile
 30094                           
 30095                           ; BSR set to: 59
 30096                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30097  019F14  0012               	return		;funcret
 30098  019F16                     __end_of_DMA1_Initialize:
 30099                           	opt callstack 0
 30100                           
 30101 ;; *************** function _CLKREF_Initialize *****************
 30102 ;; Defined at:
 30103 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30104 ;; Parameters:    Size  Location     Type
 30105 ;;		None
 30106 ;; Auto vars:     Size  Location     Type
 30107 ;;		None
 30108 ;; Return value:  Size  Location     Type
 30109 ;;                  1  [STACK] void 
 30110 ;; Registers used:
 30111 ;;		wreg, status,2
 30112 ;; Tracked objects:
 30113 ;;		On entry : 3F/3B
 30114 ;;		On exit  : 3F/3C
 30115 ;;		Unchanged: 0/0
 30116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30121 ;;Total ram usage:        0 bytes
 30122 ;; Hardware stack levels used:    1
 30123 ;; Hardware stack levels required when called:   15
 30124 ;; This function calls:
 30125 ;;		Nothing
 30126 ;; This function is called by:
 30127 ;;		_SYSTEM_Initialize
 30128 ;; This function uses a reentrant model
 30129 ;;
 30130                           
 30131                           	psect	text132
 30132  01B11A                     __ptext132:
 30133                           	opt callstack 0
 30134  01B11A                     _CLKREF_Initialize:
 30135                           	opt callstack 14
 30136                           
 30137                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30138                           
 30139                           ; BSR set to: 59
 30140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30141                           ;incstack = 0
 30142  01B11A  013C               	movlb	60	; () banked
 30143  01B11C  6BE6               	clrf	230,b	;volatile
 30144                           
 30145                           ; BSR set to: 60
 30146                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30147  01B11E  0E94               	movlw	148
 30148  01B120  6FE5               	movwf	229,b	;volatile
 30149                           
 30150                           ; BSR set to: 60
 30151                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30152  01B122  0012               	return		;funcret
 30153  01B124                     __end_of_CLKREF_Initialize:
 30154                           	opt callstack 0
 30155                           
 30156 ;; *************** function _ADCC_Initialize *****************
 30157 ;; Defined at:
 30158 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30159 ;; Parameters:    Size  Location     Type
 30160 ;;		None
 30161 ;; Auto vars:     Size  Location     Type
 30162 ;;		None
 30163 ;; Return value:  Size  Location     Type
 30164 ;;                  1  [STACK] void 
 30165 ;; Registers used:
 30166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30167 ;; Tracked objects:
 30168 ;;		On entry : 3F/3E
 30169 ;;		On exit  : 0/0
 30170 ;;		Unchanged: 0/0
 30171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30176 ;;Total ram usage:        0 bytes
 30177 ;; Hardware stack levels used:    1
 30178 ;; Hardware stack levels required when called:   16
 30179 ;; This function calls:
 30180 ;;		_ADCC_SetADIInterruptHandler
 30181 ;;		_ADCC_SetADTIInterruptHandler
 30182 ;; This function is called by:
 30183 ;;		_SYSTEM_Initialize
 30184 ;; This function uses a reentrant model
 30185 ;;
 30186                           
 30187                           	psect	text133
 30188  019F16                     __ptext133:
 30189                           	opt callstack 0
 30190  019F16                     _ADCC_Initialize:
 30191                           	opt callstack 13
 30192                           
 30193                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30194                           
 30195                           ; BSR set to: 60
 30196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30197                           ;incstack = 0
 30198  019F16  013E               	movlb	62	; () banked
 30199  019F18  6BDE               	clrf	222,b	;volatile
 30200                           
 30201                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 30202  019F1A  6BDF               	clrf	223,b	;volatile
 30203                           
 30204                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 30205  019F1C  6BE0               	clrf	224,b	;volatile
 30206                           
 30207                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 30208  019F1E  6BE1               	clrf	225,b	;volatile
 30209                           
 30210                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 30211  019F20  6BE4               	clrf	228,b	;volatile
 30212                           
 30213                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 30214  019F22  6BE5               	clrf	229,b	;volatile
 30215                           
 30216                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 30217  019F24  6BEA               	clrf	234,b	;volatile
 30218                           
 30219                           ; BSR set to: 62
 30220                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 30221  019F26  0E40               	movlw	64
 30222  019F28  6FEC               	movwf	236,b	;volatile
 30223                           
 30224                           ; BSR set to: 62
 30225                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 30226  019F2A  6BF1               	clrf	241,b	;volatile
 30227                           
 30228                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 30229  019F2C  0E20               	movlw	32
 30230  019F2E  6FF3               	movwf	243,b	;volatile
 30231                           
 30232                           ; BSR set to: 62
 30233                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 30234  019F30  6BF4               	clrf	244,b	;volatile
 30235                           
 30236                           ; BSR set to: 62
 30237                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 30238  019F32  6BF5               	clrf	245,b	;volatile
 30239                           
 30240                           ; BSR set to: 62
 30241                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 30242  019F34  6BF6               	clrf	246,b	;volatile
 30243                           
 30244                           ; BSR set to: 62
 30245                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 30246  019F36  6BF7               	clrf	247,b	;volatile
 30247                           
 30248                           ; BSR set to: 62
 30249                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 30250  019F38  6BF9               	clrf	249,b	;volatile
 30251                           
 30252                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 30253  019F3A  0E5B               	movlw	91
 30254  019F3C  6FFA               	movwf	250,b	;volatile
 30255                           
 30256                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 30257  019F3E  0E27               	movlw	39
 30258  019F40  6FFB               	movwf	251,b	;volatile
 30259                           
 30260                           ; BSR set to: 62
 30261                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 30262  019F42  6BFC               	clrf	252,b	;volatile
 30263                           
 30264                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 30265  019F44  0E02               	movlw	2
 30266  019F46  6FFD               	movwf	253,b	;volatile
 30267                           
 30268                           ; BSR set to: 62
 30269                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 30270  019F48  6BFE               	clrf	254,b	;volatile
 30271                           
 30272                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 30273  019F4A  0E07               	movlw	7
 30274  019F4C  6FFF               	movwf	255,b	;volatile
 30275                           
 30276                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 30277  019F4E  0E84               	movlw	132
 30278  019F50  6FF8               	movwf	248,b	;volatile
 30279                           
 30280                           ; BSR set to: 62
 30281                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 30282  019F52  0139               	movlb	57	; () banked
 30283  019F54  95A1               	bcf	161,2,b	;volatile
 30284                           
 30285                           ; BSR set to: 57
 30286                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 30287  019F56  8591               	bsf	145,2,b	;volatile
 30288                           
 30289                           ; BSR set to: 57
 30290                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 30291  019F58  0EA0               	movlw	low _ADCC_DefaultInterruptHandler
 30292  019F5A  6EE6               	movwf	postinc1,c
 30293  019F5C  0EB1               	movlw	high _ADCC_DefaultInterruptHandler
 30294  019F5E  6EE6               	movwf	postinc1,c
 30295  019F60  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30296  019F62  6EE6               	movwf	postinc1,c
 30297  019F64  EC99  F0D6         	call	_ADCC_SetADIInterruptHandler	;wreg free
 30298                           
 30299                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 30300  019F68  0139               	movlb	57	; () banked
 30301  019F6A  97A1               	bcf	161,3,b	;volatile
 30302                           
 30303                           ; BSR set to: 57
 30304                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 30305  019F6C  8791               	bsf	145,3,b	;volatile
 30306                           
 30307                           ; BSR set to: 57
 30308                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 30309  019F6E  0EA0               	movlw	low _ADCC_DefaultInterruptHandler
 30310  019F70  6EE6               	movwf	postinc1,c
 30311  019F72  0EB1               	movlw	high _ADCC_DefaultInterruptHandler
 30312  019F74  6EE6               	movwf	postinc1,c
 30313  019F76  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30314  019F78  6EE6               	movwf	postinc1,c
 30315  019F7A  EC85  F0D6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 30316                           
 30317                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30318  019F7E  0012               	return		;funcret
 30319  019F80                     __end_of_ADCC_Initialize:
 30320                           	opt callstack 0
 30321                           
 30322 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 30323 ;; Defined at:
 30324 ;;		line 336 in file "mcc_generated_files/adcc.c"
 30325 ;; Parameters:    Size  Location     Type
 30326 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30327 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 30328 ;; Auto vars:     Size  Location     Type
 30329 ;;		None
 30330 ;; Return value:  Size  Location     Type
 30331 ;;                  1  [STACK] void 
 30332 ;; Registers used:
 30333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30334 ;; Tracked objects:
 30335 ;;		On entry : 0/0
 30336 ;;		On exit  : 0/0
 30337 ;;		Unchanged: 0/0
 30338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30343 ;;Total ram usage:        0 bytes
 30344 ;; Hardware stack levels used:    1
 30345 ;; Hardware stack levels required when called:   15
 30346 ;; This function calls:
 30347 ;;		Nothing
 30348 ;; This function is called by:
 30349 ;;		_ADCC_Initialize
 30350 ;;		_start_adc_scan
 30351 ;; This function uses a reentrant model
 30352 ;;
 30353                           
 30354                           	psect	text134
 30355  01AD0A                     __ptext134:
 30356                           	opt callstack 0
 30357  01AD0A                     _ADCC_SetADTIInterruptHandler:
 30358                           	opt callstack 14
 30359                           
 30360                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 30361                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30362                           
 30363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30364                           ;incstack = 0
 30365  01AD0A  50E1               	movf	fsr1l,w,c
 30366  01AD0C  0FFD               	addlw	-3
 30367  01AD0E  6ED9               	movwf	fsr2l,c
 30368  01AD10  50E2               	movf	fsr1h,w,c
 30369  01AD12  6EDA               	movwf	fsr2h,c
 30370  01AD14  0EFF               	movlw	255
 30371  01AD16  22DA               	addwfc	fsr2h,f,c
 30372  01AD18  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 30373  01AD1E  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 30374  01AD24  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 30375                           
 30376                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 30377  01AD2A  52E5               	movf	postdec1,f,c
 30378  01AD2C  52E5               	movf	postdec1,f,c
 30379  01AD2E  52E5               	movf	postdec1,f,c
 30380  01AD30  0012               	return		;funcret
 30381  01AD32                     __end_of_ADCC_SetADTIInterruptHandler:
 30382                           	opt callstack 0
 30383                           
 30384 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 30385 ;; Defined at:
 30386 ;;		line 323 in file "mcc_generated_files/adcc.c"
 30387 ;; Parameters:    Size  Location     Type
 30388 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30389 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 30390 ;; Auto vars:     Size  Location     Type
 30391 ;;		None
 30392 ;; Return value:  Size  Location     Type
 30393 ;;                  1  [STACK] void 
 30394 ;; Registers used:
 30395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30396 ;; Tracked objects:
 30397 ;;		On entry : 6/0
 30398 ;;		On exit  : 0/0
 30399 ;;		Unchanged: 0/0
 30400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30405 ;;Total ram usage:        0 bytes
 30406 ;; Hardware stack levels used:    1
 30407 ;; Hardware stack levels required when called:   15
 30408 ;; This function calls:
 30409 ;;		Nothing
 30410 ;; This function is called by:
 30411 ;;		_ADCC_Initialize
 30412 ;;		_start_adc_scan
 30413 ;; This function uses a reentrant model
 30414 ;;
 30415                           
 30416                           	psect	text135
 30417  01AD32                     __ptext135:
 30418                           	opt callstack 0
 30419  01AD32                     _ADCC_SetADIInterruptHandler:
 30420                           	opt callstack 14
 30421                           
 30422                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 30423                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30424                           
 30425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30426                           ;incstack = 0
 30427  01AD32  50E1               	movf	fsr1l,w,c
 30428  01AD34  0FFD               	addlw	-3
 30429  01AD36  6ED9               	movwf	fsr2l,c
 30430  01AD38  50E2               	movf	fsr1h,w,c
 30431  01AD3A  6EDA               	movwf	fsr2h,c
 30432  01AD3C  0EFF               	movlw	255
 30433  01AD3E  22DA               	addwfc	fsr2h,f,c
 30434  01AD40  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 30435  01AD46  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 30436  01AD4C  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 30437                           
 30438                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30439  01AD52  52E5               	movf	postdec1,f,c
 30440  01AD54  52E5               	movf	postdec1,f,c
 30441  01AD56  52E5               	movf	postdec1,f,c
 30442  01AD58  0012               	return		;funcret
 30443  01AD5A                     __end_of_ADCC_SetADIInterruptHandler:
 30444                           	opt callstack 0
 30445                           
 30446 ;; *************** function _INT1_ISR *****************
 30447 ;; Defined at:
 30448 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 30449 ;; Parameters:    Size  Location     Type
 30450 ;;		None
 30451 ;; Auto vars:     Size  Location     Type
 30452 ;;		None
 30453 ;; Return value:  Size  Location     Type
 30454 ;;                  1    wreg      void 
 30455 ;; Registers used:
 30456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30457 ;; Tracked objects:
 30458 ;;		On entry : 0/0
 30459 ;;		On exit  : 0/0
 30460 ;;		Unchanged: 0/0
 30461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30464 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30466 ;;Total ram usage:        4 bytes
 30467 ;; Hardware stack levels used:    1
 30468 ;; Hardware stack levels required when called:    5
 30469 ;; This function calls:
 30470 ;;		_INT1_CallBack
 30471 ;; This function is called by:
 30472 ;;		Interrupt level 1
 30473 ;; This function uses a non-reentrant model
 30474 ;;
 30475                           
 30476                           	psect	text136
 30477  01A7A0                     __ptext136:
 30478                           	opt callstack 0
 30479  01A7A0                     _INT1_ISR:
 30480                           	opt callstack 12
 30481                           
 30482                           ;incstack = 0
 30483  01A7A0  006F FF60  F03E    	movff	status,??_INT1_ISR
 30484  01A7A6  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 30485  01A7AC  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 30486  01A7B2  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 30487  01A7B8  EE16  F061         	lfsr	1,___intlo_sp
 30488                           
 30489                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 30490  01A7BC  0139               	movlb	57	; () banked
 30491  01A7BE  91A5               	bcf	165,0,b	;volatile
 30492                           
 30493                           ; BSR set to: 57
 30494                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 30495  01A7C0  EC0E  F0D7         	call	_INT1_CallBack	;wreg free
 30496  01A7C4  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 30497  01A7CA  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 30498  01A7D0  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 30499  01A7D6  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 30500  01A7DC  0011               	retfie		f
 30501  01A7DE                     __end_of_INT1_ISR:
 30502                           	opt callstack 0
 30503                           
 30504 ;; *************** function _INT1_CallBack *****************
 30505 ;; Defined at:
 30506 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 30507 ;; Parameters:    Size  Location     Type
 30508 ;;		None
 30509 ;; Auto vars:     Size  Location     Type
 30510 ;;		None
 30511 ;; Return value:  Size  Location     Type
 30512 ;;                  1  [STACK] void 
 30513 ;; Registers used:
 30514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30515 ;; Tracked objects:
 30516 ;;		On entry : 3F/39
 30517 ;;		On exit  : 0/0
 30518 ;;		Unchanged: 0/0
 30519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30524 ;;Total ram usage:        0 bytes
 30525 ;; Hardware stack levels used:    1
 30526 ;; Hardware stack levels required when called:    4
 30527 ;; This function calls:
 30528 ;;		Absolute function
 30529 ;;		_INT1_DefaultInterruptHandler
 30530 ;;		_switch_handler
 30531 ;; This function is called by:
 30532 ;;		_INT1_ISR
 30533 ;; This function uses a reentrant model
 30534 ;;
 30535                           
 30536                           	psect	text137
 30537  01AE1C                     __ptext137:
 30538                           	opt callstack 0
 30539  01AE1C                     _INT1_CallBack:
 30540                           	opt callstack 12
 30541                           
 30542                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 30543                           
 30544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30545                           ;incstack = 0
 30546  01AE1C  0100               	movlb	0	; () banked
 30547  01AE1E  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 30548  01AE20  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30549  01AE22  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30550  01AE24  B4D8               	btfsc	status,2,c
 30551  01AE26  0012               	return	
 30552                           
 30553                           ; BSR set to: 0
 30554                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 30555  01AE28  D801               	call	u946_28
 30556  01AE2A  0012               	return	
 30557  01AE2C                     u946_28:
 30558  01AE2C  0005               	push	
 30559  01AE2E  6EFA               	movwf	pclath,c
 30560  01AE30  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 30561  01AE32  6EFD               	movwf	tosl,c
 30562  01AE34  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30563  01AE36  6EFE               	movwf	tosh,c
 30564  01AE38  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30565  01AE3A  6EFF               	movwf	tosu,c
 30566  01AE3C  50FA               	movf	pclath,w,c
 30567  01AE3E  0012               	return		;indir
 30568  01AE40                     __end_of_INT1_CallBack:
 30569                           	opt callstack 0
 30570                           
 30571 ;; *************** function _INT1_DefaultInterruptHandler *****************
 30572 ;; Defined at:
 30573 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 30574 ;; Parameters:    Size  Location     Type
 30575 ;;		None
 30576 ;; Auto vars:     Size  Location     Type
 30577 ;;		None
 30578 ;; Return value:  Size  Location     Type
 30579 ;;                  1  [STACK] void 
 30580 ;; Registers used:
 30581 ;;		None
 30582 ;; Tracked objects:
 30583 ;;		On entry : 3F/0
 30584 ;;		On exit  : 0/0
 30585 ;;		Unchanged: 0/0
 30586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30591 ;;Total ram usage:        0 bytes
 30592 ;; Hardware stack levels used:    1
 30593 ;; Hardware stack levels required when called:    3
 30594 ;; This function calls:
 30595 ;;		Nothing
 30596 ;; This function is called by:
 30597 ;;		_EXT_INT_Initialize
 30598 ;;		_INT1_CallBack
 30599 ;; This function uses a reentrant model
 30600 ;;
 30601                           
 30602                           	psect	text138
 30603  01B19A                     __ptext138:
 30604                           	opt callstack 0
 30605  01B19A                     _INT1_DefaultInterruptHandler:
 30606                           	opt callstack 12
 30607                           
 30608                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30609                           
 30610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30611                           ;incstack = 0
 30612  01B19A  0012               	return		;funcret
 30613  01B19C                     __end_of_INT1_DefaultInterruptHandler:
 30614                           	opt callstack 0
 30615                           
 30616 ;; *************** function _switch_handler *****************
 30617 ;; Defined at:
 30618 ;;		line 58 in file "dio.c"
 30619 ;; Parameters:    Size  Location     Type
 30620 ;;		None
 30621 ;; Auto vars:     Size  Location     Type
 30622 ;;  i               1  [STACK] unsigned char 
 30623 ;;  sw_value        1  [STACK] unsigned char 
 30624 ;; Return value:  Size  Location     Type
 30625 ;;                  1  [STACK] void 
 30626 ;; Registers used:
 30627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 30628 ;; Tracked objects:
 30629 ;;		On entry : 3F/0
 30630 ;;		On exit  : 0/0
 30631 ;;		Unchanged: 0/0
 30632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30637 ;;Total ram usage:        0 bytes
 30638 ;; Hardware stack levels used:    1
 30639 ;; Hardware stack levels required when called:    3
 30640 ;; This function calls:
 30641 ;;		Nothing
 30642 ;; This function is called by:
 30643 ;;		_start_switch_handler
 30644 ;;		_INT1_CallBack
 30645 ;; This function uses a reentrant model
 30646 ;;
 30647                           
 30648                           	psect	text139
 30649  0186C0                     __ptext139:
 30650                           	opt callstack 0
 30651  0186C0                     _switch_handler:
 30652                           	opt callstack 0
 30653                           
 30654                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30655  0186C0  52E6               	movf	postinc1,f,c
 30656  0186C2  52E6               	movf	postinc1,f,c
 30657                           
 30658                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 30659                           ;stkvar	_i @ sp[(-2)+0]
 30660                           
 30661                           ;incstack = 0
 30662  0186C4  0EFE               	movlw	-2
 30663  0186C6  6AE3               	clrf	plusw1,c
 30664  0186C8  9EBD               	bcf	189,7,c	;volatile
 30665                           
 30666                           ;dio.c: 72:  __nop();
 30667  0186CA  F000               	nop	
 30668                           
 30669                           ;dio.c: 73:  __nop();
 30670  0186CC  F000               	nop	
 30671                           
 30672                           ;dio.c: 74:  __nop();
 30673  0186CE  F000               	nop	
 30674  0186D0  D019               	goto	l10076
 30675  0186D2                     l10064:
 30676                           
 30677                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 30678  0186D2  A6CF               	btfss	207,3,c	;volatile
 30679  0186D4  D011               	goto	u922_20
 30680  0186D6  D00D               	goto	u922_21
 30681  0186D8                     u919_28:
 30682                           
 30683                           ;stkvar	_sw_value @ sp[(-2)+1]
 30684  0186D8  0EFF               	movlw	-1
 30685  0186DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30686                           
 30687                           ;dio.c: 80:    break;
 30688  0186E0  D027               	goto	l10078
 30689  0186E2                     l10066:
 30690                           
 30691                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 30692  0186E2  A4CF               	btfss	207,2,c	;volatile
 30693  0186E4  D009               	goto	u922_20
 30694  0186E6  D005               	goto	u922_21
 30695  0186E8                     l10068:
 30696                           
 30697                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 30698  0186E8  A2CF               	btfss	207,1,c	;volatile
 30699  0186EA  D006               	goto	u922_20
 30700  0186EC  D002               	goto	u922_21
 30701  0186EE                     l10070:
 30702                           
 30703                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 30704  0186EE  A0CF               	btfss	207,0,c	;volatile
 30705  0186F0  D003               	goto	u922_20
 30706  0186F2                     u922_21:
 30707  0186F2  6A0C               	clrf	(btemp+11)^0,c
 30708  0186F4  2A0C               	incf	(btemp+11)^0,f,c
 30709  0186F6  D7F0               	goto	u919_28
 30710  0186F8                     u922_20:
 30711  0186F8  6A0C               	clrf	(btemp+11)^0,c
 30712  0186FA  D7EE               	goto	u919_28
 30713  0186FC                     l10072:
 30714                           
 30715                           ;dio.c: 91:    sw_value = 1;
 30716                           ;stkvar	_sw_value @ sp[(-2)+1]
 30717  0186FC  0EFF               	movlw	-1
 30718  0186FE  6AE3               	clrf	plusw1,c
 30719  018700  2AE3               	incf	plusw1,f,c
 30720                           
 30721                           ;dio.c: 92:    break;
 30722  018702  D016               	goto	l10078
 30723  018704                     l10076:
 30724                           
 30725                           ;stkvar	_i @ sp[(-2)+0]
 30726  018704  0EFE               	movlw	-2
 30727  018706  50E3               	movf	plusw1,w,c
 30728  018708  6E0B               	movwf	(btemp+10)^0,c
 30729  01870A  6A0C               	clrf	(btemp+11)^0,c
 30730                           
 30731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30732                           ; Switch size 1, requested type "simple"
 30733                           ; Number of cases is 1, Range of values is 0 to 0
 30734                           ; switch strategies available:
 30735                           ; Name         Instructions Cycles
 30736                           ; simple_byte            4     3 (average)
 30737                           ;	Chosen strategy is simple_byte
 30738  01870C  500C               	movf	(btemp+11)^0,w,c
 30739  01870E  0A00               	xorlw	0	; case 0
 30740  018710  A4D8               	btfss	status,2,c
 30741  018712  D7F4               	goto	l10072
 30742                           
 30743                           ; Switch size 1, requested type "simple"
 30744                           ; Number of cases is 4, Range of values is 0 to 3
 30745                           ; switch strategies available:
 30746                           ; Name         Instructions Cycles
 30747                           ; simple_byte           13     7 (average)
 30748                           ;	Chosen strategy is simple_byte
 30749  018714  500B               	movf	(btemp+10)^0,w,c
 30750  018716  0A00               	xorlw	0	; case 0
 30751  018718  B4D8               	btfsc	status,2,c
 30752  01871A  D7E9               	goto	l10070
 30753  01871C  0A01               	xorlw	1	; case 1
 30754  01871E  B4D8               	btfsc	status,2,c
 30755  018720  D7E3               	goto	l10068
 30756  018722  0A03               	xorlw	3	; case 2
 30757  018724  B4D8               	btfsc	status,2,c
 30758  018726  D7DD               	goto	l10066
 30759  018728  0A01               	xorlw	1	; case 3
 30760  01872A  B4D8               	btfsc	status,2,c
 30761  01872C  D7D2               	goto	l10064
 30762  01872E  D7E6               	goto	l10072
 30763  018730                     l10078:
 30764                           
 30765                           ;dio.c: 96:   if (sw_value) {
 30766                           ;stkvar	_sw_value @ sp[(-2)+1]
 30767  018730  0EFF               	movlw	-1
 30768  018732  50E3               	movf	plusw1,w,c
 30769  018734  B4D8               	btfsc	status,2,c
 30770  018736  D018               	goto	l10084
 30771                           
 30772                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 30773                           ;stkvar	_i @ sp[(-2)+0]
 30774  018738  0EFE               	movlw	-2
 30775  01873A  50E3               	movf	plusw1,w,c
 30776  01873C  0D05               	mullw	5
 30777  01873E  0EBC               	movlw	low _S
 30778  018740  24F3               	addwf	243,w,c
 30779  018742  6ED9               	movwf	fsr2l,c
 30780  018744  0E02               	movlw	high _S
 30781  018746  20F4               	addwfc	prodh,w,c
 30782  018748  6EDA               	movwf	fsr2h,c
 30783  01874A  04DE               	decf	postinc2,w,c
 30784  01874C  A4D8               	btfss	status,2,c
 30785  01874E  D049               	goto	l10092
 30786                           
 30787                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 30788                           ;stkvar	_i @ sp[(-2)+0]
 30789  018750  0EFE               	movlw	-2
 30790  018752  50E3               	movf	plusw1,w,c
 30791  018754  0D05               	mullw	5
 30792  018756  0EBC               	movlw	low _S
 30793  018758  24F3               	addwf	243,w,c
 30794  01875A  6ED9               	movwf	fsr2l,c
 30795  01875C  0E02               	movlw	high _S
 30796  01875E  20F4               	addwfc	prodh,w,c
 30797  018760  6EDA               	movwf	fsr2h,c
 30798  018762  0E00               	movlw	0
 30799  018764  6EDF               	movwf	indf2,c
 30800  018766  D03D               	goto	l10092
 30801  018768                     l10084:
 30802                           
 30803                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 30804                           ;stkvar	_i @ sp[(-2)+0]
 30805  018768  0EFE               	movlw	-2
 30806  01876A  50E3               	movf	plusw1,w,c
 30807  01876C  0D05               	mullw	5
 30808  01876E  0EBC               	movlw	low _S
 30809  018770  24F3               	addwf	243,w,c
 30810  018772  6ED9               	movwf	fsr2l,c
 30811  018774  0E02               	movlw	high _S
 30812  018776  20F4               	addwfc	prodh,w,c
 30813  018778  6EDA               	movwf	fsr2h,c
 30814  01877A  50DF               	movf	indf2,w,c
 30815  01877C  A4D8               	btfss	status,2,c
 30816  01877E  D031               	goto	l10092
 30817                           
 30818                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 30819                           ;stkvar	_i @ sp[(-2)+0]
 30820  018780  0EFE               	movlw	-2
 30821  018782  50E3               	movf	plusw1,w,c
 30822  018784  0D05               	mullw	5
 30823  018786  0EBC               	movlw	low _S
 30824  018788  24F3               	addwf	243,w,c
 30825  01878A  6ED9               	movwf	fsr2l,c
 30826  01878C  0E02               	movlw	high _S
 30827  01878E  20F4               	addwfc	prodh,w,c
 30828  018790  6EDA               	movwf	fsr2h,c
 30829  018792  0E01               	movlw	1
 30830  018794  6EDF               	movwf	indf2,c
 30831                           
 30832                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 30833  018796  EE20  F2B8         	lfsr	2,_V+184	;volatile
 30834                           
 30835                           ;stkvar	_i @ sp[(-2)+0]
 30836  01879A  0EFE               	movlw	-2
 30837  01879C  50E3               	movf	plusw1,w,c
 30838  01879E  0D05               	mullw	5
 30839  0187A0  0EBD               	movlw	low (_S+1)
 30840  0187A2  24F3               	addwf	243,w,c
 30841  0187A4  6EE9               	movwf	fsr0l,c
 30842  0187A6  0E02               	movlw	high (_S+1)
 30843  0187A8  20F4               	addwfc	prodh,w,c
 30844  0187AA  6EEA               	movwf	fsr0h,c
 30845  0187AC  006F FF7B FFEE     	movff	postinc2,postinc0
 30846  0187B2  006F FF7B FFEE     	movff	postinc2,postinc0
 30847  0187B8  006F FF7B FFEE     	movff	postinc2,postinc0
 30848  0187BE  006F FF7B FFEE     	movff	postinc2,postinc0
 30849                           
 30850                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 30851                           ;stkvar	_i @ sp[(-2)+0]
 30852  0187C4  0EFE               	movlw	-2
 30853  0187C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 30854  0187CC  0E01               	movlw	1
 30855  0187CE  6E0B               	movwf	(btemp+10)^0,c
 30856  0187D0  2A0C               	incf	(btemp+11)^0,f,c
 30857  0187D2  D002               	goto	u926_24
 30858  0187D4                     u926_25:
 30859  0187D4  90D8               	bcf	status,0,c
 30860  0187D6  360B               	rlcf	(btemp+10)^0,f,c
 30861  0187D8                     u926_24:
 30862  0187D8  2E0C               	decfsz	(btemp+11)^0,f,c
 30863  0187DA  D7FC               	goto	u926_25
 30864  0187DC  500B               	movf	(btemp+10)^0,w,c
 30865  0187DE  0102               	movlb	2	; () banked
 30866  0187E0  13E4               	iorwf	(_S+40)& (0+255),f,b	;volatile
 30867  0187E2                     l10092:
 30868                           
 30869                           ;dio.c: 107:  } while (++i < 4);
 30870                           ;stkvar	_i @ sp[(-2)+0]
 30871  0187E2  0EFE               	movlw	-2
 30872  0187E4  2AE3               	incf	plusw1,f,c
 30873  0187E6  0EFE               	movlw	-2
 30874  0187E8  006F FF8C  F001    	movff	plusw1,btemp
 30875  0187EE  0E03               	movlw	3
 30876  0187F0  6401               	cpfsgt	btemp^0,c
 30877  0187F2  D788               	goto	l10076
 30878                           
 30879                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 30880  0187F4  8EBD               	bsf	189,7,c	;volatile
 30881                           
 30882                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30883  0187F6  52E5               	movf	postdec1,f,c
 30884  0187F8  52E5               	movf	postdec1,f,c
 30885  0187FA  0012               	return		;funcret
 30886  0187FC                     __end_of_switch_handler:
 30887                           	opt callstack 0
 30888                           
 30889 ;; *************** function _TMR5_ISR *****************
 30890 ;; Defined at:
 30891 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 30892 ;; Parameters:    Size  Location     Type
 30893 ;;		None
 30894 ;; Auto vars:     Size  Location     Type
 30895 ;;		None
 30896 ;; Return value:  Size  Location     Type
 30897 ;;                  1    wreg      void 
 30898 ;; Registers used:
 30899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 30900 ;; Tracked objects:
 30901 ;;		On entry : 0/0
 30902 ;;		On exit  : 0/0
 30903 ;;		Unchanged: 0/0
 30904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30909 ;;Total ram usage:        4 bytes
 30910 ;; Hardware stack levels used:    1
 30911 ;; Hardware stack levels required when called:    5
 30912 ;; This function calls:
 30913 ;;		_TMR5_CallBack
 30914 ;;		_TMR5_WriteTimer
 30915 ;; This function is called by:
 30916 ;;		Interrupt level 1
 30917 ;; This function uses a non-reentrant model
 30918 ;;
 30919                           
 30920                           	psect	text140
 30921  01A28C                     __ptext140:
 30922                           	opt callstack 0
 30923  01A28C                     _TMR5_ISR:
 30924                           	opt callstack 12
 30925                           
 30926                           ;incstack = 0
 30927  01A28C  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 30928  01A292  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 30929  01A298  EE16  F061         	lfsr	1,___intlo_sp
 30930                           
 30931                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 30932  01A29C  0139               	movlb	57	; () banked
 30933  01A29E  9DA8               	bcf	168,6,b	;volatile
 30934                           
 30935                           ; BSR set to: 57
 30936                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 30937  01A2A0  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 30938  01A2A6  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 30939  01A2AC  EC90  F0D3         	call	_TMR5_WriteTimer	;wreg free
 30940                           
 30941                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 30942  01A2B0  0102               	movlb	2	; () banked
 30943  01A2B2  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 30944  01A2B4  6E42               	movwf	??_TMR5_ISR^0,c
 30945  01A2B6  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 30946  01A2B8  0E05               	movlw	5
 30947  01A2BA  2642               	addwf	??_TMR5_ISR^0,f,c
 30948  01A2BC  0E00               	movlw	0
 30949  01A2BE  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 30950  01A2C0  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 30951  01A2C2  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 30952  01A2C4  5042               	movf	??_TMR5_ISR^0,w,c
 30953  01A2C6  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 30954  01A2C8  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 30955  01A2CA  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 30956  01A2CC  A0D8               	btfss	status,0,c
 30957  01A2CE  D004               	goto	i1l1017
 30958                           
 30959                           ; BSR set to: 2
 30960                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 30961  01A2D0  EC20  F0D7         	call	_TMR5_CallBack	;wreg free
 30962                           
 30963                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 30964  01A2D4  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 30965  01A2D6  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 30966  01A2D8                     i1l1017:
 30967  01A2D8  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 30968  01A2DE  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 30969  01A2E4  0011               	retfie		f
 30970  01A2E6                     __end_of_TMR5_ISR:
 30971                           	opt callstack 0
 30972                           
 30973 ;; *************** function _TMR5_WriteTimer *****************
 30974 ;; Defined at:
 30975 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 30976 ;; Parameters:    Size  Location     Type
 30977 ;;  timerVal        2  [STACK] unsigned short 
 30978 ;; Auto vars:     Size  Location     Type
 30979 ;;		None
 30980 ;; Return value:  Size  Location     Type
 30981 ;;                  1  [STACK] void 
 30982 ;; Registers used:
 30983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30984 ;; Tracked objects:
 30985 ;;		On entry : 3F/39
 30986 ;;		On exit  : 0/0
 30987 ;;		Unchanged: 0/0
 30988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30993 ;;Total ram usage:        0 bytes
 30994 ;; Hardware stack levels used:    1
 30995 ;; Hardware stack levels required when called:    3
 30996 ;; This function calls:
 30997 ;;		Nothing
 30998 ;; This function is called by:
 30999 ;;		_TMR5_ISR
 31000 ;; This function uses a reentrant model
 31001 ;;
 31002                           
 31003                           	psect	text141
 31004  01A720                     __ptext141:
 31005                           	opt callstack 0
 31006  01A720                     _TMR5_WriteTimer:
 31007                           	opt callstack 13
 31008                           
 31009                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31010                           
 31011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31012                           ;incstack = 0
 31013  01A720  A49A               	btfss	154,2,c	;volatile
 31014  01A722  D00F               	goto	l10274
 31015                           
 31016                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31017  01A724  909A               	bcf	154,0,c	;volatile
 31018                           
 31019                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31020                           ;stkvar	_timerVal @ sp[(0)+-2]
 31021  01A726  0EFF               	movlw	255
 31022  01A728  24E1               	addwf	fsr1l,w,c
 31023  01A72A  6ED9               	movwf	fsr2l,c
 31024  01A72C  0EFF               	movlw	255
 31025  01A72E  20E2               	addwfc	fsr1h,w,c
 31026  01A730  6EDA               	movwf	fsr2h,c
 31027  01A732  50DF               	movf	indf2,w,c
 31028  01A734  6E99               	movwf	153,c	;volatile
 31029                           
 31030                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31031                           ;stkvar	_timerVal @ sp[(0)+-2]
 31032  01A736  0EFE               	movlw	-2
 31033  01A738  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31034                           
 31035                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31036  01A73E  809A               	bsf	154,0,c	;volatile
 31037                           
 31038                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31039  01A740  D00C               	goto	l1000
 31040  01A742                     l10274:
 31041                           
 31042                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31043                           ;stkvar	_timerVal @ sp[(0)+-2]
 31044  01A742  0EFF               	movlw	255
 31045  01A744  24E1               	addwf	fsr1l,w,c
 31046  01A746  6ED9               	movwf	fsr2l,c
 31047  01A748  0EFF               	movlw	255
 31048  01A74A  20E2               	addwfc	fsr1h,w,c
 31049  01A74C  6EDA               	movwf	fsr2h,c
 31050  01A74E  50DF               	movf	indf2,w,c
 31051  01A750  6E99               	movwf	153,c	;volatile
 31052                           
 31053                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31054                           ;stkvar	_timerVal @ sp[(0)+-2]
 31055  01A752  0EFE               	movlw	-2
 31056  01A754  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31057  01A75A                     l1000:
 31058                           
 31059                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31060  01A75A  52E5               	movf	postdec1,f,c
 31061  01A75C  52E5               	movf	postdec1,f,c
 31062  01A75E  0012               	return		;funcret
 31063  01A760                     __end_of_TMR5_WriteTimer:
 31064                           	opt callstack 0
 31065                           
 31066 ;; *************** function _TMR5_CallBack *****************
 31067 ;; Defined at:
 31068 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31069 ;; Parameters:    Size  Location     Type
 31070 ;;		None
 31071 ;; Auto vars:     Size  Location     Type
 31072 ;;		None
 31073 ;; Return value:  Size  Location     Type
 31074 ;;                  1  [STACK] void 
 31075 ;; Registers used:
 31076 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31077 ;; Tracked objects:
 31078 ;;		On entry : 3F/2
 31079 ;;		On exit  : 0/0
 31080 ;;		Unchanged: 0/0
 31081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31086 ;;Total ram usage:        0 bytes
 31087 ;; Hardware stack levels used:    1
 31088 ;; Hardware stack levels required when called:    4
 31089 ;; This function calls:
 31090 ;;		Absolute function
 31091 ;;		_TMR5_DefaultInterruptHandler
 31092 ;; This function is called by:
 31093 ;;		_TMR5_ISR
 31094 ;; This function uses a reentrant model
 31095 ;;
 31096                           
 31097                           	psect	text142
 31098  01AE40                     __ptext142:
 31099                           	opt callstack 0
 31100  01AE40                     _TMR5_CallBack:
 31101                           	opt callstack 12
 31102                           
 31103                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31104                           
 31105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31106                           ;incstack = 0
 31107  01AE40  0100               	movlb	0	; () banked
 31108  01AE42  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31109  01AE44  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31110  01AE46  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31111  01AE48  B4D8               	btfsc	status,2,c
 31112  01AE4A  0012               	return	
 31113                           
 31114                           ; BSR set to: 0
 31115                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31116  01AE4C  D801               	call	u955_28
 31117  01AE4E  0012               	return	
 31118  01AE50                     u955_28:
 31119  01AE50  0005               	push	
 31120  01AE52  6EFA               	movwf	pclath,c
 31121  01AE54  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31122  01AE56  6EFD               	movwf	tosl,c
 31123  01AE58  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31124  01AE5A  6EFE               	movwf	tosh,c
 31125  01AE5C  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31126  01AE5E  6EFF               	movwf	tosu,c
 31127  01AE60  50FA               	movf	pclath,w,c
 31128  01AE62  0012               	return		;indir
 31129  01AE64                     __end_of_TMR5_CallBack:
 31130                           	opt callstack 0
 31131                           
 31132 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31133 ;; Defined at:
 31134 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31135 ;; Parameters:    Size  Location     Type
 31136 ;;		None
 31137 ;; Auto vars:     Size  Location     Type
 31138 ;;		None
 31139 ;; Return value:  Size  Location     Type
 31140 ;;                  1  [STACK] void 
 31141 ;; Registers used:
 31142 ;;		wreg, status,2, status,0, btemp+11
 31143 ;; Tracked objects:
 31144 ;;		On entry : 3F/0
 31145 ;;		On exit  : 3F/2
 31146 ;;		Unchanged: 0/0
 31147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31152 ;;Total ram usage:        0 bytes
 31153 ;; Hardware stack levels used:    1
 31154 ;; Hardware stack levels required when called:    3
 31155 ;; This function calls:
 31156 ;;		Nothing
 31157 ;; This function is called by:
 31158 ;;		_TMR5_Initialize
 31159 ;;		_TMR5_CallBack
 31160 ;; This function uses a reentrant model
 31161 ;;
 31162                           
 31163                           	psect	text143
 31164  01A95A                     __ptext143:
 31165                           	opt callstack 0
 31166  01A95A                     _TMR5_DefaultInterruptHandler:
 31167                           	opt callstack 12
 31168                           
 31169                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31170                           
 31171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31172                           ;incstack = 0
 31173  01A95A  A0BE               	btfss	190,0,c	;volatile
 31174  01A95C  D002               	goto	u891_20
 31175  01A95E  0E01               	movlw	1
 31176  01A960  D001               	goto	u891_26
 31177  01A962                     u891_20:
 31178  01A962  0E00               	movlw	0
 31179  01A964                     u891_26:
 31180  01A964  0AFF               	xorlw	255
 31181  01A966  6E0C               	movwf	(btemp+11)^0,c
 31182  01A968  50BE               	movf	190,w,c	;volatile
 31183  01A96A  180C               	xorwf	(btemp+11)^0,w,c
 31184  01A96C  0BFE               	andlw	-2
 31185  01A96E  180C               	xorwf	(btemp+11)^0,w,c
 31186  01A970  6EBE               	movwf	190,c	;volatile
 31187                           
 31188                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31189  01A972  0E01               	movlw	1
 31190  01A974  0102               	movlb	2	; () banked
 31191  01A976  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 31192  01A978  0E00               	movlw	0
 31193  01A97A  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 31194  01A97C  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 31195  01A97E  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31196                           
 31197                           ; BSR set to: 2
 31198                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 31199  01A980  0E01               	movlw	1
 31200  01A982  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 31201  01A984  0E00               	movlw	0
 31202  01A986  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 31203  01A988  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 31204  01A98A  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 31205                           
 31206                           ; BSR set to: 2
 31207                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31208  01A98C  0012               	return		;funcret
 31209  01A98E                     __end_of_TMR5_DefaultInterruptHandler:
 31210                           	opt callstack 0
 31211                           
 31212 ;; *************** function _TMR3_ISR *****************
 31213 ;; Defined at:
 31214 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 31215 ;; Parameters:    Size  Location     Type
 31216 ;;		None
 31217 ;; Auto vars:     Size  Location     Type
 31218 ;;		None
 31219 ;; Return value:  Size  Location     Type
 31220 ;;                  1    wreg      void 
 31221 ;; Registers used:
 31222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31223 ;; Tracked objects:
 31224 ;;		On entry : 0/0
 31225 ;;		On exit  : 3F/0
 31226 ;;		Unchanged: 0/0
 31227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31230 ;;      Temps:          0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31231 ;;      Totals:         0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31232 ;;Total ram usage:       25 bytes
 31233 ;; Hardware stack levels used:    1
 31234 ;; Hardware stack levels required when called:   14
 31235 ;; This function calls:
 31236 ;;		_TMR3_CallBack
 31237 ;;		_TMR3_WriteTimer
 31238 ;; This function is called by:
 31239 ;;		Interrupt level 1
 31240 ;; This function uses a non-reentrant model
 31241 ;;
 31242                           
 31243                           	psect	text144
 31244  0182D0                     __ptext144:
 31245                           	opt callstack 0
 31246  0182D0                     _TMR3_ISR:
 31247                           	opt callstack 3
 31248                           
 31249                           ; BSR set to: 2
 31250                           ;incstack = 0
 31251  0182D0  006F FF60  F3E4    	movff	status,??_TMR3_ISR
 31252  0182D6  006F FFD8  F3E5    	movff	tblptrl,??_TMR3_ISR+1
 31253  0182DC  006F FFDC  F3E6    	movff	tblptrh,??_TMR3_ISR+2
 31254  0182E2  006F FFE0  F3E7    	movff	tblptru,??_TMR3_ISR+3
 31255  0182E8  006F FFD4  F3E8    	movff	tablat,??_TMR3_ISR+4
 31256  0182EE  0060  F004  F3E9   	movff	btemp,??_TMR3_ISR+5
 31257  0182F4  0060  F008  F3EA   	movff	btemp+1,??_TMR3_ISR+6
 31258  0182FA  0060  F00C  F3EB   	movff	btemp+2,??_TMR3_ISR+7
 31259  018300  0060  F010  F3EC   	movff	btemp+3,??_TMR3_ISR+8
 31260  018306  0060  F014  F3ED   	movff	btemp+4,??_TMR3_ISR+9
 31261  01830C  0060  F018  F3EE   	movff	btemp+5,??_TMR3_ISR+10
 31262  018312  0060  F01C  F3EF   	movff	btemp+6,??_TMR3_ISR+11
 31263  018318  0060  F020  F3F0   	movff	btemp+7,??_TMR3_ISR+12
 31264  01831E  0060  F024  F3F1   	movff	btemp+8,??_TMR3_ISR+13
 31265  018324  0060  F028  F3F2   	movff	btemp+9,??_TMR3_ISR+14
 31266  01832A  0060  F02C  F3F3   	movff	btemp+10,??_TMR3_ISR+15
 31267  018330  0060  F030  F3F4   	movff	btemp+11,??_TMR3_ISR+16
 31268  018336  0060  F044  F3F5   	movff	btemp+16,??_TMR3_ISR+17
 31269  01833C  0060  F048  F3F6   	movff	btemp+17,??_TMR3_ISR+18
 31270  018342  0060  F04C  F3F7   	movff	btemp+18,??_TMR3_ISR+19
 31271  018348  0060  F050  F3F8   	movff	btemp+19,??_TMR3_ISR+20
 31272  01834E  0060  F054  F3F9   	movff	btemp+20,??_TMR3_ISR+21
 31273  018354  0060  F058  F3FA   	movff	btemp+21,??_TMR3_ISR+22
 31274  01835A  0060  F05C  F3FB   	movff	btemp+22,??_TMR3_ISR+23
 31275  018360  0060  F060  F3FC   	movff	btemp+23,??_TMR3_ISR+24
 31276  018366  EE16  F061         	lfsr	1,___intlo_sp
 31277                           
 31278                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 31279  01836A  0139               	movlb	57	; () banked
 31280  01836C  9DA6               	bcf	166,6,b	;volatile
 31281                           
 31282                           ; BSR set to: 57
 31283                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 31284  01836E  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 31285  018374  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 31286  01837A  ECB0  F0D3         	call	_TMR3_WriteTimer	;wreg free
 31287                           
 31288                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 31289  01837E  0100               	movlb	0	; () banked
 31290  018380  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 31291  018382  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 31292  018384  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 31293  018386  E104               	bnz	i1u1183_20
 31294  018388  0E28               	movlw	40
 31295  01838A  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 31296  01838C  A0D8               	btfss	status,0,c
 31297  01838E  D005               	goto	i1l1205
 31298  018390                     i1u1183_20:
 31299                           
 31300                           ; BSR set to: 0
 31301                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 31302  018390  EC32  F0D7         	call	_TMR3_CallBack	;wreg free
 31303                           
 31304                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 31305  018394  0100               	movlb	0	; () banked
 31306  018396  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 31307  018398  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 31308  01839A                     i1l1205:
 31309                           
 31310                           ; BSR set to: 0
 31311  01839A  0060  FFF0  F018   	movff	??_TMR3_ISR+24,btemp+23
 31312  0183A0  0060  FFEC  F017   	movff	??_TMR3_ISR+23,btemp+22
 31313  0183A6  0060  FFE8  F016   	movff	??_TMR3_ISR+22,btemp+21
 31314  0183AC  0060  FFE4  F015   	movff	??_TMR3_ISR+21,btemp+20
 31315  0183B2  0060  FFE0  F014   	movff	??_TMR3_ISR+20,btemp+19
 31316  0183B8  0060  FFDC  F013   	movff	??_TMR3_ISR+19,btemp+18
 31317  0183BE  0060  FFD8  F012   	movff	??_TMR3_ISR+18,btemp+17
 31318  0183C4  0060  FFD4  F011   	movff	??_TMR3_ISR+17,btemp+16
 31319  0183CA  0060  FFD0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 31320  0183D0  0060  FFCC  F00B   	movff	??_TMR3_ISR+15,btemp+10
 31321  0183D6  0060  FFC8  F00A   	movff	??_TMR3_ISR+14,btemp+9
 31322  0183DC  0060  FFC4  F009   	movff	??_TMR3_ISR+13,btemp+8
 31323  0183E2  0060  FFC0  F008   	movff	??_TMR3_ISR+12,btemp+7
 31324  0183E8  0060  FFBC  F007   	movff	??_TMR3_ISR+11,btemp+6
 31325  0183EE  0060  FFB8  F006   	movff	??_TMR3_ISR+10,btemp+5
 31326  0183F4  0060  FFB4  F005   	movff	??_TMR3_ISR+9,btemp+4
 31327  0183FA  0060  FFB0  F004   	movff	??_TMR3_ISR+8,btemp+3
 31328  018400  0060  FFAC  F003   	movff	??_TMR3_ISR+7,btemp+2
 31329  018406  0060  FFA8  F002   	movff	??_TMR3_ISR+6,btemp+1
 31330  01840C  0060  FFA4  F001   	movff	??_TMR3_ISR+5,btemp
 31331  018412  0060  FFA3  FFF5   	movff	??_TMR3_ISR+4,tablat
 31332  018418  0060  FF9F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 31333  01841E  0060  FF9B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 31334  018424  0060  FF97  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 31335  01842A  0060  FF93  FFD8   	movff	??_TMR3_ISR,status
 31336  018430  0011               	retfie		f
 31337  018432                     __end_of_TMR3_ISR:
 31338                           	opt callstack 0
 31339                           
 31340 ;; *************** function _TMR3_WriteTimer *****************
 31341 ;; Defined at:
 31342 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 31343 ;; Parameters:    Size  Location     Type
 31344 ;;  timerVal        2  [STACK] unsigned short 
 31345 ;; Auto vars:     Size  Location     Type
 31346 ;;		None
 31347 ;; Return value:  Size  Location     Type
 31348 ;;                  1  [STACK] void 
 31349 ;; Registers used:
 31350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31351 ;; Tracked objects:
 31352 ;;		On entry : 3F/39
 31353 ;;		On exit  : 0/0
 31354 ;;		Unchanged: 0/0
 31355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31360 ;;Total ram usage:        0 bytes
 31361 ;; Hardware stack levels used:    1
 31362 ;; Hardware stack levels required when called:    3
 31363 ;; This function calls:
 31364 ;;		Nothing
 31365 ;; This function is called by:
 31366 ;;		_TMR3_ISR
 31367 ;; This function uses a reentrant model
 31368 ;;
 31369                           
 31370                           	psect	text145
 31371  01A760                     __ptext145:
 31372                           	opt callstack 0
 31373  01A760                     _TMR3_WriteTimer:
 31374                           	opt callstack 13
 31375                           
 31376                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 31377                           
 31378                           ; BSR set to: 0
 31379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31380                           ;incstack = 0
 31381  01A760  A4A6               	btfss	166,2,c	;volatile
 31382  01A762  D00F               	goto	l10292
 31383                           
 31384                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 31385  01A764  90A6               	bcf	166,0,c	;volatile
 31386                           
 31387                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 31388                           ;stkvar	_timerVal @ sp[(0)+-2]
 31389  01A766  0EFF               	movlw	255
 31390  01A768  24E1               	addwf	fsr1l,w,c
 31391  01A76A  6ED9               	movwf	fsr2l,c
 31392  01A76C  0EFF               	movlw	255
 31393  01A76E  20E2               	addwfc	fsr1h,w,c
 31394  01A770  6EDA               	movwf	fsr2h,c
 31395  01A772  50DF               	movf	indf2,w,c
 31396  01A774  6EA5               	movwf	165,c	;volatile
 31397                           
 31398                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 31399                           ;stkvar	_timerVal @ sp[(0)+-2]
 31400  01A776  0EFE               	movlw	-2
 31401  01A778  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31402                           
 31403                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 31404  01A77E  80A6               	bsf	166,0,c	;volatile
 31405                           
 31406                           ;mcc_generated_files/tmr3.c: 141:     }
 31407  01A780  D00C               	goto	l1188
 31408  01A782                     l10292:
 31409                           
 31410                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 31411                           ;stkvar	_timerVal @ sp[(0)+-2]
 31412  01A782  0EFF               	movlw	255
 31413  01A784  24E1               	addwf	fsr1l,w,c
 31414  01A786  6ED9               	movwf	fsr2l,c
 31415  01A788  0EFF               	movlw	255
 31416  01A78A  20E2               	addwfc	fsr1h,w,c
 31417  01A78C  6EDA               	movwf	fsr2h,c
 31418  01A78E  50DF               	movf	indf2,w,c
 31419  01A790  6EA5               	movwf	165,c	;volatile
 31420                           
 31421                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 31422                           ;stkvar	_timerVal @ sp[(0)+-2]
 31423  01A792  0EFE               	movlw	-2
 31424  01A794  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31425  01A79A                     l1188:
 31426                           
 31427                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31428  01A79A  52E5               	movf	postdec1,f,c
 31429  01A79C  52E5               	movf	postdec1,f,c
 31430  01A79E  0012               	return		;funcret
 31431  01A7A0                     __end_of_TMR3_WriteTimer:
 31432                           	opt callstack 0
 31433                           
 31434 ;; *************** function _TMR3_CallBack *****************
 31435 ;; Defined at:
 31436 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 31437 ;; Parameters:    Size  Location     Type
 31438 ;;		None
 31439 ;; Auto vars:     Size  Location     Type
 31440 ;;		None
 31441 ;; Return value:  Size  Location     Type
 31442 ;;                  1  [STACK] void 
 31443 ;; Registers used:
 31444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31445 ;; Tracked objects:
 31446 ;;		On entry : 3F/0
 31447 ;;		On exit  : 0/0
 31448 ;;		Unchanged: 0/0
 31449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31454 ;;Total ram usage:        0 bytes
 31455 ;; Hardware stack levels used:    1
 31456 ;; Hardware stack levels required when called:   13
 31457 ;; This function calls:
 31458 ;;		Absolute function
 31459 ;;		_TMR3_DefaultInterruptHandler
 31460 ;;		_calc_bsoc
 31461 ;; This function is called by:
 31462 ;;		_TMR3_ISR
 31463 ;; This function uses a reentrant model
 31464 ;;
 31465                           
 31466                           	psect	text146
 31467  01AE64                     __ptext146:
 31468                           	opt callstack 0
 31469  01AE64                     _TMR3_CallBack:
 31470                           	opt callstack 3
 31471                           
 31472                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 31473                           
 31474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31475                           ;incstack = 0
 31476  01AE64  0100               	movlb	0	; () banked
 31477  01AE66  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31478  01AE68  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31479  01AE6A  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31480  01AE6C  B4D8               	btfsc	status,2,c
 31481  01AE6E  0012               	return	
 31482                           
 31483                           ; BSR set to: 0
 31484                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 31485  01AE70  D801               	call	u1174_28
 31486  01AE72  0012               	return	
 31487  01AE74                     u1174_28:
 31488  01AE74  0005               	push	
 31489  01AE76  6EFA               	movwf	pclath,c
 31490  01AE78  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31491  01AE7A  6EFD               	movwf	tosl,c
 31492  01AE7C  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31493  01AE7E  6EFE               	movwf	tosh,c
 31494  01AE80  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31495  01AE82  6EFF               	movwf	tosu,c
 31496  01AE84  50FA               	movf	pclath,w,c
 31497  01AE86  0012               	return		;indir
 31498  01AE88                     __end_of_TMR3_CallBack:
 31499                           	opt callstack 0
 31500                           
 31501 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 31502 ;; Defined at:
 31503 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 31504 ;; Parameters:    Size  Location     Type
 31505 ;;		None
 31506 ;; Auto vars:     Size  Location     Type
 31507 ;;		None
 31508 ;; Return value:  Size  Location     Type
 31509 ;;                  1  [STACK] void 
 31510 ;; Registers used:
 31511 ;;		None
 31512 ;; Tracked objects:
 31513 ;;		On entry : 3F/0
 31514 ;;		On exit  : 0/0
 31515 ;;		Unchanged: 0/0
 31516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31521 ;;Total ram usage:        0 bytes
 31522 ;; Hardware stack levels used:    1
 31523 ;; Hardware stack levels required when called:    3
 31524 ;; This function calls:
 31525 ;;		Nothing
 31526 ;; This function is called by:
 31527 ;;		_TMR3_Initialize
 31528 ;;		_TMR3_CallBack
 31529 ;; This function uses a reentrant model
 31530 ;;
 31531                           
 31532                           	psect	text147
 31533  01B19C                     __ptext147:
 31534                           	opt callstack 0
 31535  01B19C                     _TMR3_DefaultInterruptHandler:
 31536                           	opt callstack 12
 31537                           
 31538                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31539                           
 31540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31541                           ;incstack = 0
 31542  01B19C  0012               	return		;funcret
 31543  01B19E                     __end_of_TMR3_DefaultInterruptHandler:
 31544                           	opt callstack 0
 31545                           
 31546 ;; *************** function _calc_bsoc *****************
 31547 ;; Defined at:
 31548 ;;		line 39 in file "bsoc.c"
 31549 ;; Parameters:    Size  Location     Type
 31550 ;;		None
 31551 ;; Auto vars:     Size  Location     Type
 31552 ;;  log_ptr         2  [STACK] PTR unsigned char 
 31553 ;;		 -> port_data(512), 
 31554 ;; Return value:  Size  Location     Type
 31555 ;;                  1  [STACK] void 
 31556 ;; Registers used:
 31557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 31558 ;; Tracked objects:
 31559 ;;		On entry : 3F/0
 31560 ;;		On exit  : 3F/1
 31561 ;;		Unchanged: 0/0
 31562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31567 ;;Total ram usage:        0 bytes
 31568 ;; Hardware stack levels used:    1
 31569 ;; Hardware stack levels required when called:   12
 31570 ;; This function calls:
 31571 ;;		_StartTimer
 31572 ;;		___fladd
 31573 ;;		___fldiv
 31574 ;;		___flge
 31575 ;;		___flmul
 31576 ;;		___flneg
 31577 ;;		___fltol
 31578 ;;		_port_data_dma_ptr
 31579 ;;		_send_port_data_dma
 31580 ;;		_sprintf
 31581 ;;		_strlen
 31582 ;; This function is called by:
 31583 ;;		_init_bsoc
 31584 ;;		_TMR3_CallBack
 31585 ;; This function uses a reentrant model
 31586 ;;
 31587                           
 31588                           	psect	text148
 31589  013E00                     __ptext148:
 31590                           	opt callstack 0
 31591  013E00                     _calc_bsoc:
 31592                           	opt callstack 0
 31593                           
 31594                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31595  013E00  52E6               	movf	postinc1,f,c
 31596  013E02  52E6               	movf	postinc1,f,c
 31597                           
 31598                           ;incstack = 0
 31599                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 31600  013E04  82BE               	bsf	190,1,c	;volatile
 31601                           
 31602                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 31603  013E06  0E00               	movlw	0
 31604  013E08  6EE6               	movwf	postinc1,c
 31605  013E0A  0E00               	movlw	0
 31606  013E0C  6EE6               	movwf	postinc1,c
 31607  013E0E  0E61               	movlw	97
 31608  013E10  6EE6               	movwf	postinc1,c
 31609  013E12  0E45               	movlw	69
 31610  013E14  6EE6               	movwf	postinc1,c
 31611  013E16  0060  F513  FFE6   	movff	_C+68,postinc1
 31612  013E1C  0060  F517  FFE6   	movff	_C+69,postinc1
 31613  013E22  0060  F51B  FFE6   	movff	_C+70,postinc1
 31614  013E28  0060  F51F  FFE6   	movff	_C+71,postinc1
 31615  013E2E  EC4F  F0A2         	call	___fldiv	;wreg free
 31616  013E32  0060  F007  FFE6   	movff	btemp,postinc1
 31617  013E38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31618  013E3E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31619  013E44  0060  F013  FFE6   	movff	btemp+3,postinc1
 31620  013E4A  0060  F633  FFE6   	movff	_C+140,postinc1
 31621  013E50  0060  F637  FFE6   	movff	_C+141,postinc1
 31622  013E56  0060  F63B  FFE6   	movff	_C+142,postinc1
 31623  013E5C  0060  F63F  FFE6   	movff	_C+143,postinc1
 31624  013E62  EC22  F09B         	call	___fladd	;wreg free
 31625  013E66  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 31626  013E6C  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 31627  013E72  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 31628  013E78  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 31629                           
 31630                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 31631  013E7E  0060  F633  FFE6   	movff	_C+140,postinc1
 31632  013E84  0060  F637  FFE6   	movff	_C+141,postinc1
 31633  013E8A  0060  F63B  FFE6   	movff	_C+142,postinc1
 31634  013E90  0060  F63F  FFE6   	movff	_C+143,postinc1
 31635  013E96  0060  F623  FFE6   	movff	_C+136,postinc1
 31636  013E9C  0060  F627  FFE6   	movff	_C+137,postinc1
 31637  013EA2  0060  F62B  FFE6   	movff	_C+138,postinc1
 31638  013EA8  0060  F62F  FFE6   	movff	_C+139,postinc1
 31639  013EAE  ECB7  F0C0         	call	___flge	;wreg free
 31640  013EB2  B001               	btfsc	btemp& (0+255),0,c
 31641  013EB4  D008               	goto	l12112
 31642                           
 31643                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 31644  013EB6  C188  F18C         	movff	_C+136,_C+140	;volatile
 31645  013EBA  C189  F18D         	movff	_C+137,_C+141	;volatile
 31646  013EBE  C18A  F18E         	movff	_C+138,_C+142	;volatile
 31647  013EC2  C18B  F18F         	movff	_C+139,_C+143	;volatile
 31648  013EC6                     l12112:
 31649                           
 31650                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 31651  013EC6  0ECD               	movlw	205
 31652  013EC8  6EE6               	movwf	postinc1,c
 31653  013ECA  0ECC               	movlw	204
 31654  013ECC  6EE6               	movwf	postinc1,c
 31655  013ECE  0ECC               	movlw	204
 31656  013ED0  6EE6               	movwf	postinc1,c
 31657  013ED2  0E3D               	movlw	61
 31658  013ED4  6EE6               	movwf	postinc1,c
 31659  013ED6  0060  F633  FFE6   	movff	_C+140,postinc1
 31660  013EDC  0060  F637  FFE6   	movff	_C+141,postinc1
 31661  013EE2  0060  F63B  FFE6   	movff	_C+142,postinc1
 31662  013EE8  0060  F63F  FFE6   	movff	_C+143,postinc1
 31663  013EEE  ECB7  F0C0         	call	___flge	;wreg free
 31664  013EF2  B001               	btfsc	btemp& (0+255),0,c
 31665  013EF4  D009               	goto	l12116
 31666                           
 31667                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 31668  013EF6  0ECD               	movlw	205
 31669  013EF8  0101               	movlb	1	; () banked
 31670  013EFA  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 31671  013EFC  0ECC               	movlw	204
 31672  013EFE  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 31673  013F00  0ECC               	movlw	204
 31674  013F02  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 31675  013F04  0E3D               	movlw	61
 31676  013F06  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 31677  013F08                     l12116:
 31678                           
 31679                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 31680  013F08  0E00               	movlw	0
 31681  013F0A  6EE6               	movwf	postinc1,c
 31682  013F0C  0E00               	movlw	0
 31683  013F0E  6EE6               	movwf	postinc1,c
 31684  013F10  0E61               	movlw	97
 31685  013F12  6EE6               	movwf	postinc1,c
 31686  013F14  0E45               	movlw	69
 31687  013F16  6EE6               	movwf	postinc1,c
 31688  013F18  0060  F523  FFE6   	movff	_C+72,postinc1
 31689  013F1E  0060  F527  FFE6   	movff	_C+73,postinc1
 31690  013F24  0060  F52B  FFE6   	movff	_C+74,postinc1
 31691  013F2A  0060  F52F  FFE6   	movff	_C+75,postinc1
 31692  013F30  EC4F  F0A2         	call	___fldiv	;wreg free
 31693  013F34  0060  F007  FFE6   	movff	btemp,postinc1
 31694  013F3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31695  013F40  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31696  013F46  0060  F013  FFE6   	movff	btemp+3,postinc1
 31697  013F4C  0060  F643  FFE6   	movff	_C+144,postinc1
 31698  013F52  0060  F647  FFE6   	movff	_C+145,postinc1
 31699  013F58  0060  F64B  FFE6   	movff	_C+146,postinc1
 31700  013F5E  0060  F64F  FFE6   	movff	_C+147,postinc1
 31701  013F64  EC22  F09B         	call	___fladd	;wreg free
 31702  013F68  0060  F004  F190   	movff	btemp,_C+144	;volatile
 31703  013F6E  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 31704  013F74  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 31705  013F7A  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 31706                           
 31707                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 31708  013F80  0E00               	movlw	0
 31709  013F82  6EE6               	movwf	postinc1,c
 31710  013F84  0E00               	movlw	0
 31711  013F86  6EE6               	movwf	postinc1,c
 31712  013F88  0E61               	movlw	97
 31713  013F8A  6EE6               	movwf	postinc1,c
 31714  013F8C  0E45               	movlw	69
 31715  013F8E  6EE6               	movwf	postinc1,c
 31716  013F90  0060  F5E3  FFE6   	movff	_C+120,postinc1
 31717  013F96  0060  F5E7  FFE6   	movff	_C+121,postinc1
 31718  013F9C  0060  F5EB  FFE6   	movff	_C+122,postinc1
 31719  013FA2  0060  F5EF  FFE6   	movff	_C+123,postinc1
 31720  013FA8  EC4F  F0A2         	call	___fldiv	;wreg free
 31721  013FAC  0060  F007  FFE6   	movff	btemp,postinc1
 31722  013FB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31723  013FB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31724  013FBE  0060  F013  FFE6   	movff	btemp+3,postinc1
 31725  013FC4  0060  F683  FFE6   	movff	_C+160,postinc1
 31726  013FCA  0060  F687  FFE6   	movff	_C+161,postinc1
 31727  013FD0  0060  F68B  FFE6   	movff	_C+162,postinc1
 31728  013FD6  0060  F68F  FFE6   	movff	_C+163,postinc1
 31729  013FDC  EC22  F09B         	call	___fladd	;wreg free
 31730  013FE0  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 31731  013FE6  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 31732  013FEC  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 31733  013FF2  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 31734                           
 31735                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 31736  013FF8  0E00               	movlw	0
 31737  013FFA  6EE6               	movwf	postinc1,c
 31738  013FFC  0E00               	movlw	0
 31739  013FFE  6EE6               	movwf	postinc1,c
 31740  014000  0E61               	movlw	97
 31741  014002  6EE6               	movwf	postinc1,c
 31742  014004  0E45               	movlw	69
 31743  014006  6EE6               	movwf	postinc1,c
 31744  014008  0060  F5D3  FFE6   	movff	_C+116,postinc1
 31745  01400E  0060  F5D7  FFE6   	movff	_C+117,postinc1
 31746  014014  0060  F5DB  FFE6   	movff	_C+118,postinc1
 31747  01401A  0060  F5DF  FFE6   	movff	_C+119,postinc1
 31748  014020  EC4F  F0A2         	call	___fldiv	;wreg free
 31749  014024  0060  F007  FFE6   	movff	btemp,postinc1
 31750  01402A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31751  014030  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31752  014036  0060  F013  FFE6   	movff	btemp+3,postinc1
 31753  01403C  0060  F693  FFE6   	movff	_C+164,postinc1
 31754  014042  0060  F697  FFE6   	movff	_C+165,postinc1
 31755  014048  0060  F69B  FFE6   	movff	_C+166,postinc1
 31756  01404E  0060  F69F  FFE6   	movff	_C+167,postinc1
 31757  014054  EC22  F09B         	call	___fladd	;wreg free
 31758  014058  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 31759  01405E  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 31760  014064  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 31761  01406A  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 31762                           
 31763                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 31764  014070  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31765  014076  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31766  01407C  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31767  014082  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31768  014088  0E00               	movlw	0
 31769  01408A  6EE6               	movwf	postinc1,c
 31770  01408C  0E00               	movlw	0
 31771  01408E  6EE6               	movwf	postinc1,c
 31772  014090  0E00               	movlw	0
 31773  014092  6EE6               	movwf	postinc1,c
 31774  014094  0E00               	movlw	0
 31775  014096  6EE6               	movwf	postinc1,c
 31776  014098  ECB7  F0C0         	call	___flge	;wreg free
 31777  01409C  B001               	btfsc	btemp& (0+255),0,c
 31778  01409E  D03C               	goto	l12126
 31779                           
 31780                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 31781  0140A0  0E00               	movlw	0
 31782  0140A2  6EE6               	movwf	postinc1,c
 31783  0140A4  0E00               	movlw	0
 31784  0140A6  6EE6               	movwf	postinc1,c
 31785  0140A8  0E61               	movlw	97
 31786  0140AA  6EE6               	movwf	postinc1,c
 31787  0140AC  0E45               	movlw	69
 31788  0140AE  6EE6               	movwf	postinc1,c
 31789  0140B0  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31790  0140B6  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31791  0140BC  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31792  0140C2  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31793  0140C8  EC4F  F0A2         	call	___fldiv	;wreg free
 31794  0140CC  0060  F007  FFE6   	movff	btemp,postinc1
 31795  0140D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31796  0140D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31797  0140DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 31798  0140E4  0060  F663  FFE6   	movff	_C+152,postinc1
 31799  0140EA  0060  F667  FFE6   	movff	_C+153,postinc1
 31800  0140F0  0060  F66B  FFE6   	movff	_C+154,postinc1
 31801  0140F6  0060  F66F  FFE6   	movff	_C+155,postinc1
 31802  0140FC  EC22  F09B         	call	___fladd	;wreg free
 31803  014100  0060  F004  F198   	movff	btemp,_C+152	;volatile
 31804  014106  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 31805  01410C  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 31806  014112  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 31807  014118                     l12126:
 31808                           
 31809                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 31810  014118  0101               	movlb	1	; () banked
 31811  01411A  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 31812  01411C  D03C               	goto	l12130
 31813                           
 31814                           ; BSR set to: 1
 31815                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 31816  01411E  0E00               	movlw	0
 31817  014120  6EE6               	movwf	postinc1,c
 31818  014122  0E00               	movlw	0
 31819  014124  6EE6               	movwf	postinc1,c
 31820  014126  0E61               	movlw	97
 31821  014128  6EE6               	movwf	postinc1,c
 31822  01412A  0E45               	movlw	69
 31823  01412C  6EE6               	movwf	postinc1,c
 31824  01412E  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31825  014134  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31826  01413A  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31827  014140  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31828  014146  EC4F  F0A2         	call	___fldiv	;wreg free
 31829  01414A  0060  F007  FFE6   	movff	btemp,postinc1
 31830  014150  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31831  014156  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31832  01415C  0060  F013  FFE6   	movff	btemp+3,postinc1
 31833  014162  0060  F673  FFE6   	movff	_C+156,postinc1
 31834  014168  0060  F677  FFE6   	movff	_C+157,postinc1
 31835  01416E  0060  F67B  FFE6   	movff	_C+158,postinc1
 31836  014174  0060  F67F  FFE6   	movff	_C+159,postinc1
 31837  01417A  EC22  F09B         	call	___fladd	;wreg free
 31838  01417E  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 31839  014184  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 31840  01418A  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 31841  014190  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 31842  014196                     l12130:
 31843                           
 31844                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 31845  014196  0E00               	movlw	0
 31846  014198  6EE6               	movwf	postinc1,c
 31847  01419A  0E00               	movlw	0
 31848  01419C  6EE6               	movwf	postinc1,c
 31849  01419E  0EC8               	movlw	200
 31850  0141A0  6EE6               	movwf	postinc1,c
 31851  0141A2  0E42               	movlw	66
 31852  0141A4  6EE6               	movwf	postinc1,c
 31853  0141A6  0060  F623  FFE6   	movff	_C+136,postinc1
 31854  0141AC  0060  F627  FFE6   	movff	_C+137,postinc1
 31855  0141B2  0060  F62B  FFE6   	movff	_C+138,postinc1
 31856  0141B8  0060  F62F  FFE6   	movff	_C+139,postinc1
 31857  0141BE  0060  F633  FFE6   	movff	_C+140,postinc1
 31858  0141C4  0060  F637  FFE6   	movff	_C+141,postinc1
 31859  0141CA  0060  F63B  FFE6   	movff	_C+142,postinc1
 31860  0141D0  0060  F63F  FFE6   	movff	_C+143,postinc1
 31861  0141D6  EC4F  F0A2         	call	___fldiv	;wreg free
 31862  0141DA  0060  F007  FFE6   	movff	btemp,postinc1
 31863  0141E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31864  0141E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31865  0141EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 31866  0141F2  EC0D  F097         	call	___flmul	;wreg free
 31867  0141F6  0060  F007  FFE6   	movff	btemp,postinc1
 31868  0141FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31869  014202  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31870  014208  0060  F013  FFE6   	movff	btemp+3,postinc1
 31871  01420E  EC46  F0BF         	call	___fltol	;wreg free
 31872  014212  0060  F004  F00B   	movff	btemp,btemp+10
 31873  014218  0060  F008  F00C   	movff	btemp+1,btemp+11
 31874  01421E  0E01               	movlw	1
 31875  014220  240B               	addwf	(btemp+10)^0,w,c
 31876  014222  0101               	movlb	1	; () banked
 31877  014224  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 31878  014226  0E00               	movlw	0
 31879  014228  200C               	addwfc	(btemp+11)^0,w,c
 31880  01422A  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 31881                           
 31882                           ; BSR set to: 1
 31883                           ;bsoc.c: 60:  if (C.soc > 100)
 31884  01422C  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
 31885  01422E  E104               	bnz	u1170_20
 31886  014230  0E65               	movlw	101
 31887  014232  5DAA               	subwf	(_C+170)& (0+255),w,b	;volatile
 31888  014234  A0D8               	btfss	status,0,c
 31889  014236  D004               	goto	l12136
 31890  014238                     u1170_20:
 31891                           
 31892                           ; BSR set to: 1
 31893                           ;bsoc.c: 61:   C.soc = 100;
 31894  014238  0E00               	movlw	0
 31895  01423A  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 31896  01423C  0E64               	movlw	100
 31897  01423E  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 31898  014240                     l12136:
 31899                           
 31900                           ; BSR set to: 1
 31901                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 31902  014240  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 31903  014242  D043               	goto	l12140
 31904                           
 31905                           ; BSR set to: 1
 31906                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 31907  014244  0060  F513  FFE6   	movff	_C+68,postinc1
 31908  01424A  0060  F517  FFE6   	movff	_C+69,postinc1
 31909  014250  0060  F51B  FFE6   	movff	_C+70,postinc1
 31910  014256  0060  F51F  FFE6   	movff	_C+71,postinc1
 31911  01425C  0060  F633  FFE6   	movff	_C+140,postinc1
 31912  014262  0060  F637  FFE6   	movff	_C+141,postinc1
 31913  014268  0060  F63B  FFE6   	movff	_C+142,postinc1
 31914  01426E  0060  F63F  FFE6   	movff	_C+143,postinc1
 31915  014274  EC4F  F0A2         	call	___fldiv	;wreg free
 31916  014278  0060  F007  FFE6   	movff	btemp,postinc1
 31917  01427E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31918  014284  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31919  01428A  0060  F013  FFE6   	movff	btemp+3,postinc1
 31920  014290  EC3A  F0D2         	call	___flneg	;wreg free
 31921  014294  0060  F007  FFE6   	movff	btemp,postinc1
 31922  01429A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31923  0142A0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31924  0142A6  0060  F013  FFE6   	movff	btemp+3,postinc1
 31925  0142AC  EC46  F0BF         	call	___fltol	;wreg free
 31926  0142B0  0060  F004  F00B   	movff	btemp,btemp+10
 31927  0142B6  0060  F008  F00C   	movff	btemp+1,btemp+11
 31928  0142BC  0060  F02C  F1A8   	movff	btemp+10,_C+168	;volatile
 31929  0142C2  0060  F030  F1A9   	movff	btemp+11,_C+169	;volatile
 31930                           
 31931                           ;bsoc.c: 65:  } else {
 31932  0142C8  D004               	goto	l12142
 31933  0142CA                     l12140:
 31934                           
 31935                           ; BSR set to: 1
 31936                           ;bsoc.c: 66:   C.runtime = 120;
 31937  0142CA  0E00               	movlw	0
 31938  0142CC  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 31939  0142CE  0E78               	movlw	120
 31940  0142D0  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 31941  0142D2                     l12142:
 31942                           
 31943                           ;bsoc.c: 68:  if (C.runtime > 120)
 31944  0142D2  0101               	movlb	1	; () banked
 31945  0142D4  51A9               	movf	(_C+169)& (0+255),w,b	;volatile
 31946  0142D6  E104               	bnz	u1172_20
 31947  0142D8  0E79               	movlw	121
 31948  0142DA  5DA8               	subwf	(_C+168)& (0+255),w,b	;volatile
 31949  0142DC  A0D8               	btfss	status,0,c
 31950  0142DE  D004               	goto	l12146
 31951  0142E0                     u1172_20:
 31952                           
 31953                           ; BSR set to: 1
 31954                           ;bsoc.c: 69:   C.runtime = 120;
 31955  0142E0  0E00               	movlw	0
 31956  0142E2  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 31957  0142E4  0E78               	movlw	120
 31958  0142E6  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 31959  0142E8                     l12146:
 31960                           
 31961                           ; BSR set to: 1
 31962                           ;bsoc.c: 71:  V.lowint_count++;
 31963  0142E8  0E01               	movlw	1
 31964  0142EA  0102               	movlb	2	; () banked
 31965  0142EC  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 31966  0142EE  0E00               	movlw	0
 31967  0142F0  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 31968  0142F2  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 31969  0142F4  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 31970                           
 31971                           ; BSR set to: 2
 31972                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 31973  0142F6  EC92  F0D8         	call	_port_data_dma_ptr	;wreg free
 31974                           
 31975                           ;stkvar	_log_ptr @ sp[(-2)+0]
 31976  0142FA  0EFF               	movlw	-1
 31977  0142FC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 31978  014302  0EFE               	movlw	-2
 31979  014304  0060  F007  FFE3   	movff	btemp,plusw1
 31980                           
 31981                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 31982  01430A  0060  F613  FFE6   	movff	_C+132,postinc1
 31983  014310  0060  F617  FFE6   	movff	_C+133,postinc1
 31984  014316  0060  F61B  FFE6   	movff	_C+134,postinc1
 31985  01431C  0060  F61F  FFE6   	movff	_C+135,postinc1
 31986  014322  0060  F6A3  FFE6   	movff	_C+168,postinc1
 31987  014328  0060  F6A7  FFE6   	movff	_C+169,postinc1
 31988  01432E  0060  F6AB  FFE6   	movff	_C+170,postinc1
 31989  014334  0060  F6AF  FFE6   	movff	_C+171,postinc1
 31990  01433A  0060  F643  FFE6   	movff	_C+144,postinc1
 31991  014340  0060  F647  FFE6   	movff	_C+145,postinc1
 31992  014346  0060  F64B  FFE6   	movff	_C+146,postinc1
 31993  01434C  0060  F64F  FFE6   	movff	_C+147,postinc1
 31994  014352  0060  F633  FFE6   	movff	_C+140,postinc1
 31995  014358  0060  F637  FFE6   	movff	_C+141,postinc1
 31996  01435E  0060  F63B  FFE6   	movff	_C+142,postinc1
 31997  014364  0060  F63F  FFE6   	movff	_C+143,postinc1
 31998  01436A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 31999  014370  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32000  014376  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32001  01437C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32002  014382  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32003  014388  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32004  01438E  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32005  014394  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32006  01439A  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32007  0143A0  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32008  0143A6  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32009  0143AC  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32010  0143B2  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32011  0143B8  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32012  0143BE  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32013  0143C4  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32014  0143CA  0060  F593  FFE6   	movff	_C+100,postinc1
 32015  0143D0  0060  F597  FFE6   	movff	_C+101,postinc1
 32016  0143D6  0060  F59B  FFE6   	movff	_C+102,postinc1
 32017  0143DC  0060  F59F  FFE6   	movff	_C+103,postinc1
 32018  0143E2  0060  F533  FFE6   	movff	_C+76,postinc1
 32019  0143E8  0060  F537  FFE6   	movff	_C+77,postinc1
 32020  0143EE  0060  F53B  FFE6   	movff	_C+78,postinc1
 32021  0143F4  0060  F53F  FFE6   	movff	_C+79,postinc1
 32022  0143FA  0060  F543  FFE6   	movff	_C+80,postinc1
 32023  014400  0060  F547  FFE6   	movff	_C+81,postinc1
 32024  014406  0060  F54B  FFE6   	movff	_C+82,postinc1
 32025  01440C  0060  F54F  FFE6   	movff	_C+83,postinc1
 32026  014412  0060  F553  FFE6   	movff	_C+84,postinc1
 32027  014418  0060  F557  FFE6   	movff	_C+85,postinc1
 32028  01441E  0060  F55B  FFE6   	movff	_C+86,postinc1
 32029  014424  0060  F55F  FFE6   	movff	_C+87,postinc1
 32030  01442A  0060  FA07  FFE6   	movff	_V+129,postinc1
 32031  014430  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32032  014436  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32033  01443C  0060  FA13  FFE6   	movff	_V+132,postinc1
 32034  014442  0E29               	movlw	low STR_55
 32035  014444  6EE6               	movwf	postinc1,c
 32036  014446  0EFD               	movlw	high STR_55
 32037  014448  6EE6               	movwf	postinc1,c
 32038                           
 32039                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32040  01444A  0EC8               	movlw	-56
 32041  01444C  006F FF8F FFE6     	movff	plusw1,postinc1
 32042  014452  006F FF8F FFE6     	movff	plusw1,postinc1
 32043  014458  0E38               	movlw	56
 32044  01445A  6EE6               	movwf	postinc1,c
 32045  01445C  EC4C  F0C7         	call	_sprintf	;wreg free
 32046                           
 32047                           ; BSR set to: 0
 32048                           ;bsoc.c: 80:  StartTimer(TMR_DISPLAY, 125);
 32049  014460  0E7D               	movlw	125
 32050  014462  6EE6               	movwf	postinc1,c
 32051  014464  0E00               	movlw	0
 32052  014466  6EE6               	movwf	postinc1,c
 32053  014468  0E0A               	movlw	10
 32054  01446A  6EE6               	movwf	postinc1,c
 32055  01446C  EC50  F0D3         	call	_StartTimer	;wreg free
 32056                           
 32057                           ;bsoc.c: 81:  send_port_data_dma(strlen((char*) log_ptr));
 32058                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32059  014470  0EFE               	movlw	-2
 32060  014472  006F FF8F FFE6     	movff	plusw1,postinc1
 32061  014478  006F FF8F FFE6     	movff	plusw1,postinc1
 32062  01447E  EC8F  F0CC         	call	_strlen	;wreg free
 32063  014482  0060  F007  FFE6   	movff	btemp,postinc1
 32064  014488  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32065  01448E  ECC5  F0D1         	call	_send_port_data_dma	;wreg free
 32066                           
 32067                           ; BSR set to: 59
 32068                           ;bsoc.c: 82:  C.update = 0;
 32069  014492  0101               	movlb	1	; () banked
 32070  014494  6BAC               	clrf	(_C+172)& (0+255),b	;volatile
 32071                           
 32072                           ; BSR set to: 1
 32073  014496  92BE               	bcf	190,1,c	;volatile
 32074                           
 32075                           ; BSR set to: 1
 32076                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32077  014498  52E5               	movf	postdec1,f,c
 32078  01449A  52E5               	movf	postdec1,f,c
 32079  01449C  0012               	return		;funcret
 32080  01449E                     __end_of_calc_bsoc:
 32081                           	opt callstack 0
 32082                           
 32083 ;; *************** function _send_port_data_dma *****************
 32084 ;; Defined at:
 32085 ;;		line 258 in file "eadog.c"
 32086 ;; Parameters:    Size  Location     Type
 32087 ;;  dsize           2  [STACK] unsigned short 
 32088 ;; Auto vars:     Size  Location     Type
 32089 ;;		None
 32090 ;; Return value:  Size  Location     Type
 32091 ;;                  1  [STACK] void 
 32092 ;; Registers used:
 32093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32094 ;; Tracked objects:
 32095 ;;		On entry : 0/0
 32096 ;;		On exit  : 3F/3B
 32097 ;;		Unchanged: 0/0
 32098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32103 ;;Total ram usage:        0 bytes
 32104 ;; Hardware stack levels used:    1
 32105 ;; Hardware stack levels required when called:    3
 32106 ;; This function calls:
 32107 ;;		Nothing
 32108 ;; This function is called by:
 32109 ;;		_calc_bsoc
 32110 ;; This function uses a reentrant model
 32111 ;;
 32112                           
 32113                           	psect	text149
 32114  01A38A                     __ptext149:
 32115                           	opt callstack 0
 32116  01A38A                     _send_port_data_dma:
 32117                           	opt callstack 11
 32118                           
 32119                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32120                           ;stkvar	_dsize @ sp[(0)+-2]
 32121                           
 32122                           ; BSR set to: 1
 32123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32124                           ;incstack = 0
 32125  01A38A  0EFE               	movlw	-2
 32126  01A38C  04E3               	decf	plusw1,w,c
 32127  01A38E  0EFF               	movlw	-1
 32128  01A390  006F FF8C  F001    	movff	plusw1,btemp
 32129  01A396  0E02               	movlw	2
 32130  01A398  5A01               	subwfb	btemp^0,f,c
 32131  01A39A  A0D8               	btfss	status,0,c
 32132  01A39C  D00C               	goto	l9376
 32133                           
 32134                           ;eadog.c: 261:   dsize = 512;
 32135  01A39E  0E00               	movlw	0
 32136  01A3A0  6E0B               	movwf	(btemp+10)^0,c
 32137  01A3A2  0E02               	movlw	2
 32138  01A3A4  6E0C               	movwf	(btemp+11)^0,c
 32139                           
 32140                           ;stkvar	_dsize @ sp[(0)+-2]
 32141  01A3A6  0EFE               	movlw	-2
 32142  01A3A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32143  01A3AE  0EFF               	movlw	-1
 32144  01A3B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 32145  01A3B6                     l9376:
 32146                           
 32147                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32148  01A3B6  013B               	movlb	59	; () banked
 32149  01A3B8  9FDC               	bcf	220,7,b	;volatile
 32150                           
 32151                           ; BSR set to: 59
 32152                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32153                           ;stkvar	_dsize @ sp[(0)+-2]
 32154  01A3BA  0EFE               	movlw	-2
 32155  01A3BC  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32156  01A3C2  0EFF               	movlw	-1
 32157  01A3C4  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32158                           
 32159                           ; BSR set to: 59
 32160                           ;eadog.c: 265:  DMA2DSZ = 1;
 32161  01A3CA  0E00               	movlw	0
 32162  01A3CC  6FCF               	movwf	207,b	;volatile
 32163  01A3CE  0E01               	movlw	1
 32164  01A3D0  6FCE               	movwf	206,b	;volatile
 32165                           
 32166                           ; BSR set to: 59
 32167                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 32168  01A3D2  8FDC               	bsf	220,7,b	;volatile
 32169                           
 32170                           ; BSR set to: 59
 32171                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 32172  01A3D4  8DDC               	bsf	220,6,b	;volatile
 32173                           
 32174                           ; BSR set to: 59
 32175                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 32176  01A3D6  52E5               	movf	postdec1,f,c
 32177  01A3D8  52E5               	movf	postdec1,f,c
 32178  01A3DA  0012               	return		;funcret
 32179  01A3DC                     __end_of_send_port_data_dma:
 32180                           	opt callstack 0
 32181                           
 32182 ;; *************** function _port_data_dma_ptr *****************
 32183 ;; Defined at:
 32184 ;;		line 273 in file "eadog.c"
 32185 ;; Parameters:    Size  Location     Type
 32186 ;;		None
 32187 ;; Auto vars:     Size  Location     Type
 32188 ;;		None
 32189 ;; Return value:  Size  Location     Type
 32190 ;;                  2  [STACK] PTR unsigned char 
 32191 ;; Registers used:
 32192 ;;		wreg, status,2, status,0, btemp, btemp+1
 32193 ;; Tracked objects:
 32194 ;;		On entry : 3F/2
 32195 ;;		On exit  : 0/0
 32196 ;;		Unchanged: 0/0
 32197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32202 ;;Total ram usage:        0 bytes
 32203 ;; Hardware stack levels used:    1
 32204 ;; Hardware stack levels required when called:    3
 32205 ;; This function calls:
 32206 ;;		Nothing
 32207 ;; This function is called by:
 32208 ;;		_calc_bsoc
 32209 ;; This function uses a reentrant model
 32210 ;;
 32211                           
 32212                           	psect	text150
 32213  01B124                     __ptext150:
 32214                           	opt callstack 0
 32215  01B124                     _port_data_dma_ptr:
 32216                           	opt callstack 11
 32217                           
 32218                           ;eadog.c: 275:  return port_data;
 32219                           
 32220                           ; BSR set to: 59
 32221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32222                           ;incstack = 0
 32223  01B124  0EFF               	movlw	low _port_data
 32224  01B126  6E01               	movwf	btemp^0,c
 32225  01B128  0E05               	movlw	high _port_data
 32226  01B12A  6E02               	movwf	(btemp+1)^0,c
 32227                           
 32228                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32229  01B12C  0012               	return		;funcret
 32230  01B12E                     __end_of_port_data_dma_ptr:
 32231                           	opt callstack 0
 32232                           
 32233 ;; *************** function _INT0_ISR *****************
 32234 ;; Defined at:
 32235 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 32236 ;; Parameters:    Size  Location     Type
 32237 ;;		None
 32238 ;; Auto vars:     Size  Location     Type
 32239 ;;		None
 32240 ;; Return value:  Size  Location     Type
 32241 ;;                  1    wreg      void 
 32242 ;; Registers used:
 32243 ;;		wreg, status,2, status,0, pclath, tosl
 32244 ;; Tracked objects:
 32245 ;;		On entry : 0/0
 32246 ;;		On exit  : 0/0
 32247 ;;		Unchanged: 0/0
 32248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32253 ;;Total ram usage:        0 bytes
 32254 ;; Hardware stack levels used:    1
 32255 ;; Hardware stack levels required when called:    2
 32256 ;; This function calls:
 32257 ;;		_INT0_CallBack
 32258 ;; This function is called by:
 32259 ;;		Interrupt level 2
 32260 ;; This function uses a non-reentrant model
 32261 ;;
 32262                           
 32263                           	psect	text151
 32264  01B0FC                     __ptext151:
 32265                           	opt callstack 0
 32266  01B0FC                     _INT0_ISR:
 32267                           	opt callstack 3
 32268                           
 32269                           ;incstack = 0
 32270  01B0FC  EE14  F0C2         	lfsr	1,___inthi_sp
 32271                           
 32272                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 32273  01B100  0139               	movlb	57	; () banked
 32274  01B102  91A1               	bcf	161,0,b	;volatile
 32275                           
 32276                           ; BSR set to: 57
 32277                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 32278  01B104  EC44  F0D7         	call	_INT0_CallBack	;wreg free
 32279  01B108  0011               	retfie		f
 32280  01B10A                     __end_of_INT0_ISR:
 32281                           	opt callstack 0
 32282                           
 32283 ;; *************** function _INT0_CallBack *****************
 32284 ;; Defined at:
 32285 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 32286 ;; Parameters:    Size  Location     Type
 32287 ;;		None
 32288 ;; Auto vars:     Size  Location     Type
 32289 ;;		None
 32290 ;; Return value:  Size  Location     Type
 32291 ;;                  1  [STACK] void 
 32292 ;; Registers used:
 32293 ;;		wreg, status,2, status,0, pclath, tosl
 32294 ;; Tracked objects:
 32295 ;;		On entry : 3F/39
 32296 ;;		On exit  : 0/0
 32297 ;;		Unchanged: 0/0
 32298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32303 ;;Total ram usage:        0 bytes
 32304 ;; Hardware stack levels used:    1
 32305 ;; Hardware stack levels required when called:    1
 32306 ;; This function calls:
 32307 ;;		Absolute function
 32308 ;;		_INT0_DefaultInterruptHandler
 32309 ;; This function is called by:
 32310 ;;		_INT0_ISR
 32311 ;; This function uses a reentrant model
 32312 ;;
 32313                           
 32314                           	psect	text152
 32315  01AE88                     __ptext152:
 32316                           	opt callstack 0
 32317  01AE88                     _INT0_CallBack:
 32318                           	opt callstack 3
 32319                           
 32320                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 32321                           
 32322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32323                           ;incstack = 0
 32324  01AE88  0100               	movlb	0	; () banked
 32325  01AE8A  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 32326  01AE8C  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32327  01AE8E  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32328  01AE90  B4D8               	btfsc	status,2,c
 32329  01AE92  0012               	return	
 32330                           
 32331                           ; BSR set to: 0
 32332                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 32333  01AE94  D801               	call	u944_48
 32334  01AE96  0012               	return	
 32335  01AE98                     u944_48:
 32336  01AE98  0005               	push	
 32337  01AE9A  6EFA               	movwf	pclath,c
 32338  01AE9C  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 32339  01AE9E  6EFD               	movwf	tosl,c
 32340  01AEA0  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32341  01AEA2  6EFE               	movwf	tosh,c
 32342  01AEA4  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32343  01AEA6  6EFF               	movwf	tosu,c
 32344  01AEA8  50FA               	movf	pclath,w,c
 32345  01AEAA  0012               	return		;indir
 32346  01AEAC                     __end_of_INT0_CallBack:
 32347                           	opt callstack 0
 32348                           
 32349 ;; *************** function _INT0_DefaultInterruptHandler *****************
 32350 ;; Defined at:
 32351 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 32352 ;; Parameters:    Size  Location     Type
 32353 ;;		None
 32354 ;; Auto vars:     Size  Location     Type
 32355 ;;		None
 32356 ;; Return value:  Size  Location     Type
 32357 ;;                  1  [STACK] void 
 32358 ;; Registers used:
 32359 ;;		None
 32360 ;; Tracked objects:
 32361 ;;		On entry : 3F/0
 32362 ;;		On exit  : 0/0
 32363 ;;		Unchanged: 0/0
 32364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32369 ;;Total ram usage:        0 bytes
 32370 ;; Hardware stack levels used:    1
 32371 ;; This function calls:
 32372 ;;		Nothing
 32373 ;; This function is called by:
 32374 ;;		_EXT_INT_Initialize
 32375 ;;		_INT0_CallBack
 32376 ;; This function uses a reentrant model
 32377 ;;
 32378                           
 32379                           	psect	text153
 32380  01B19E                     __ptext153:
 32381                           	opt callstack 0
 32382  01B19E                     _INT0_DefaultInterruptHandler:
 32383                           	opt callstack 3
 32384                           
 32385                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32386                           
 32387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32388                           ;incstack = 0
 32389  01B19E  0012               	return		;funcret
 32390  01B1A0                     __end_of_INT0_DefaultInterruptHandler:
 32391                           	opt callstack 0
 32392                           
 32393 ;; *************** function _Default_ISR *****************
 32394 ;; Defined at:
 32395 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 32396 ;; Parameters:    Size  Location     Type
 32397 ;;		None
 32398 ;; Auto vars:     Size  Location     Type
 32399 ;;		None
 32400 ;; Return value:  Size  Location     Type
 32401 ;;                  1    wreg      void 
 32402 ;; Registers used:
 32403 ;;		None
 32404 ;; Tracked objects:
 32405 ;;		On entry : 0/0
 32406 ;;		On exit  : 0/0
 32407 ;;		Unchanged: 0/0
 32408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32413 ;;Total ram usage:        0 bytes
 32414 ;; Hardware stack levels used:    1
 32415 ;; This function calls:
 32416 ;;		Nothing
 32417 ;; This function is called by:
 32418 ;;		Interrupt level 2
 32419 ;; This function uses a non-reentrant model
 32420 ;;
 32421                           
 32422                           	psect	text154
 32423  01B194                     __ptext154:
 32424                           	opt callstack 0
 32425  01B194                     _Default_ISR:
 32426                           	opt callstack 5
 32427                           
 32428                           ;incstack = 0
 32429  01B194  EE14  F0C2         	lfsr	1,___inthi_sp
 32430  01B198  0011               	retfie		f
 32431  01B19A                     __end_of_Default_ISR:
 32432                           	opt callstack 0
 32433                           
 32434 ;; *************** function _ADCC_ISR *****************
 32435 ;; Defined at:
 32436 ;;		line 314 in file "mcc_generated_files/adcc.c"
 32437 ;; Parameters:    Size  Location     Type
 32438 ;;		None
 32439 ;; Auto vars:     Size  Location     Type
 32440 ;;		None
 32441 ;; Return value:  Size  Location     Type
 32442 ;;                  1    wreg      void 
 32443 ;; Registers used:
 32444 ;;		wreg, status,2, status,0, pclath, tosl
 32445 ;; Tracked objects:
 32446 ;;		On entry : 0/0
 32447 ;;		On exit  : 0/0
 32448 ;;		Unchanged: 0/0
 32449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32454 ;;Total ram usage:        0 bytes
 32455 ;; Hardware stack levels used:    1
 32456 ;; Hardware stack levels required when called:    1
 32457 ;; This function calls:
 32458 ;;		Absolute function
 32459 ;;		_ADCC_DefaultInterruptHandler
 32460 ;;		_adc_int_handler
 32461 ;; This function is called by:
 32462 ;;		Interrupt level 2
 32463 ;; This function uses a non-reentrant model
 32464 ;;
 32465                           
 32466                           	psect	text155
 32467  01AAA8                     __ptext155:
 32468                           	opt callstack 0
 32469  01AAA8                     _ADCC_ISR:
 32470                           	opt callstack 4
 32471                           
 32472                           ;incstack = 0
 32473  01AAA8  EE14  F0C2         	lfsr	1,___inthi_sp
 32474                           
 32475                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 32476  01AAAC  0139               	movlb	57	; () banked
 32477  01AAAE  95A1               	bcf	161,2,b	;volatile
 32478                           
 32479                           ; BSR set to: 57
 32480                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 32481  01AAB0  0100               	movlb	0	; () banked
 32482  01AAB2  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32483  01AAB4  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32484  01AAB6  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32485  01AAB8  B4D8               	btfsc	status,2,c
 32486  01AABA  0011               	retfie		f
 32487                           
 32488                           ; BSR set to: 0
 32489                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 32490  01AABC  D801               	call	i2u983_48
 32491  01AABE  0011               	retfie		f
 32492  01AAC0                     i2u983_48:
 32493  01AAC0  0005               	push	
 32494  01AAC2  6EFA               	movwf	pclath,c
 32495  01AAC4  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32496  01AAC6  6EFD               	movwf	tosl,c
 32497  01AAC8  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32498  01AACA  6EFE               	movwf	tosh,c
 32499  01AACC  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32500  01AACE  6EFF               	movwf	tosu,c
 32501  01AAD0  50FA               	movf	pclath,w,c
 32502  01AAD2  0012               	return		;indir
 32503  01AAD4                     __end_of_ADCC_ISR:
 32504                           	opt callstack 0
 32505                           
 32506 ;; *************** function _adc_int_t_handler *****************
 32507 ;; Defined at:
 32508 ;;		line 143 in file "daq.c"
 32509 ;; Parameters:    Size  Location     Type
 32510 ;;		None
 32511 ;; Auto vars:     Size  Location     Type
 32512 ;;		None
 32513 ;; Return value:  Size  Location     Type
 32514 ;;                  1  [STACK] void 
 32515 ;; Registers used:
 32516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 32517 ;; Tracked objects:
 32518 ;;		On entry : 3F/0
 32519 ;;		On exit  : 1/0
 32520 ;;		Unchanged: 0/0
 32521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32526 ;;Total ram usage:        0 bytes
 32527 ;; Hardware stack levels used:    1
 32528 ;; Hardware stack levels required when called:    1
 32529 ;; This function calls:
 32530 ;;		_ADCC_DischargeSampleCapacitor
 32531 ;;		_ADCC_StartConversion
 32532 ;; This function is called by:
 32533 ;;		_start_adc_scan
 32534 ;;		_ADCC_ThresholdISR
 32535 ;; This function uses a reentrant model
 32536 ;;
 32537                           
 32538                           	psect	text156
 32539  019E2E                     __ptext156:
 32540                           	opt callstack 0
 32541  019E2E                     _adc_int_t_handler:
 32542                           	opt callstack 3
 32543                           
 32544                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 32545                           
 32546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32547                           ;incstack = 0
 32548  019E2E  013E               	movlb	62	; () banked
 32549  019E30  51E6               	movf	230,w,b	;volatile
 32550  019E32  006F FB9C  F001    	movff	16103,btemp	;volatile
 32551  019E38  6A02               	clrf	(btemp+1)^0,c
 32552  019E3A  0060  F004  F002   	movff	btemp,btemp+1
 32553  019E40  6A01               	clrf	btemp^0,c
 32554  019E42  2601               	addwf	btemp^0,f,c
 32555  019E44  0E00               	movlw	0
 32556  019E46  2202               	addwfc	(btemp+1)^0,f,c
 32557  019E48  0100               	movlb	0	; () banked
 32558  019E4A  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 32559  019E4C  0D02               	mullw	2
 32560  019E4E  50F3               	movf	243,w,c
 32561  019E50  0FC4               	addlw	low _R
 32562  019E52  6ED9               	movwf	fsr2l,c
 32563  019E54  6ADA               	clrf	fsr2h,c
 32564  019E56  0060  F007  FFDE   	movff	btemp,postinc2
 32565  019E5C  0060  F00B  FFDD   	movff	btemp+1,postdec2
 32566  019E62                     l10602:
 32567                           
 32568                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 32569  019E62  0100               	movlb	0	; () banked
 32570  019E64  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 32571  019E66  0E0D               	movlw	13
 32572  019E68  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 32573  019E6A  D003               	goto	l10608
 32574                           
 32575                           ; BSR set to: 0
 32576                           ;daq.c: 151:    R.done = 1;
 32577  019E6C  0E01               	movlw	1
 32578  019E6E  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 32579  019E70  0012               	return	
 32580  019E72                     l10608:
 32581                           
 32582                           ; BSR set to: 0
 32583                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 32584  019E72  0060  F3A0  F00C   	movff	_R+36,btemp+11	;volatile
 32585  019E78  EE20  F0E9         	lfsr	2,_R+37	;volatile
 32586  019E7C  006F FF78  F009    	movff	postinc2,btemp+8
 32587  019E82  006F FF74  F00A    	movff	postdec2,btemp+9
 32588  019E88  2A0C               	incf	(btemp+11)^0,f,c
 32589  019E8A  D003               	goto	u980_44
 32590  019E8C                     u980_45:
 32591  019E8C  90D8               	bcf	status,0,c
 32592  019E8E  320A               	rrcf	(btemp+9)^0,f,c
 32593  019E90  3209               	rrcf	(btemp+8)^0,f,c
 32594  019E92                     u980_44:
 32595  019E92  2E0C               	decfsz	(btemp+11)^0,f,c
 32596  019E94  D7FB               	goto	u980_45
 32597  019E96  A009               	btfss	(btemp+8)^0,0,c
 32598  019E98  D7E4               	goto	l10602
 32599                           
 32600                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 32601  019E9A  ECA9  F0D8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 32602                           
 32603                           ; BSR set to: 62
 32604                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 32605  019E9E  0100               	movlb	0	; () banked
 32606  019EA0  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 32607  019EA2  0B0F               	andlw	15
 32608  019EA4  6EE6               	movwf	postinc1,c
 32609  019EA6  EC4E  F0D8         	call	_ADCC_StartConversion	;wreg free
 32610                           
 32611                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32612  019EAA  0012               	return		;funcret
 32613  019EAC                     __end_of_adc_int_t_handler:
 32614                           	opt callstack 0
 32615                           
 32616 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 32617 ;; Defined at:
 32618 ;;		line 339 in file "mcc_generated_files/adcc.c"
 32619 ;; Parameters:    Size  Location     Type
 32620 ;;		None
 32621 ;; Auto vars:     Size  Location     Type
 32622 ;;		None
 32623 ;; Return value:  Size  Location     Type
 32624 ;;                  1  [STACK] void 
 32625 ;; Registers used:
 32626 ;;		None
 32627 ;; Tracked objects:
 32628 ;;		On entry : 3F/0
 32629 ;;		On exit  : 0/0
 32630 ;;		Unchanged: 0/0
 32631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32636 ;;Total ram usage:        0 bytes
 32637 ;; Hardware stack levels used:    1
 32638 ;; This function calls:
 32639 ;;		Nothing
 32640 ;; This function is called by:
 32641 ;;		_ADCC_Initialize
 32642 ;;		_ADCC_ISR
 32643 ;;		_ADCC_ThresholdISR
 32644 ;; This function uses a reentrant model
 32645 ;;
 32646                           
 32647                           	psect	text157
 32648  01B1A0                     __ptext157:
 32649                           	opt callstack 0
 32650  01B1A0                     _ADCC_DefaultInterruptHandler:
 32651                           	opt callstack 4
 32652                           
 32653                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32654                           
 32655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32656                           ;incstack = 0
 32657  01B1A0  0012               	return		;funcret
 32658  01B1A2                     __end_of_ADCC_DefaultInterruptHandler:
 32659                           	opt callstack 0
 32660                           
 32661 ;; *************** function _adc_int_handler *****************
 32662 ;; Defined at:
 32663 ;;		line 133 in file "daq.c"
 32664 ;; Parameters:    Size  Location     Type
 32665 ;;		None
 32666 ;; Auto vars:     Size  Location     Type
 32667 ;;		None
 32668 ;; Return value:  Size  Location     Type
 32669 ;;                  1  [STACK] void 
 32670 ;; Registers used:
 32671 ;;		None
 32672 ;; Tracked objects:
 32673 ;;		On entry : 3F/0
 32674 ;;		On exit  : 0/0
 32675 ;;		Unchanged: 0/0
 32676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32681 ;;Total ram usage:        0 bytes
 32682 ;; Hardware stack levels used:    1
 32683 ;; This function calls:
 32684 ;;		Nothing
 32685 ;; This function is called by:
 32686 ;;		_start_adc_scan
 32687 ;;		_ADCC_ISR
 32688 ;; This function uses a reentrant model
 32689 ;;
 32690                           
 32691                           	psect	text158
 32692  01B1A2                     __ptext158:
 32693                           	opt callstack 0
 32694  01B1A2                     _adc_int_handler:
 32695                           	opt callstack 4
 32696                           
 32697                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32698                           
 32699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32700                           ;incstack = 0
 32701  01B1A2  0012               	return		;funcret
 32702  01B1A4                     __end_of_adc_int_handler:
 32703                           	opt callstack 0
 32704                           
 32705 ;; *************** function _ADCC_ThresholdISR *****************
 32706 ;; Defined at:
 32707 ;;		line 327 in file "mcc_generated_files/adcc.c"
 32708 ;; Parameters:    Size  Location     Type
 32709 ;;		None
 32710 ;; Auto vars:     Size  Location     Type
 32711 ;;		None
 32712 ;; Return value:  Size  Location     Type
 32713 ;;                  1    wreg      void 
 32714 ;; Registers used:
 32715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 32716 ;; Tracked objects:
 32717 ;;		On entry : 0/0
 32718 ;;		On exit  : 0/0
 32719 ;;		Unchanged: 0/0
 32720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32723 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32724 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32725 ;;Total ram usage:        5 bytes
 32726 ;; Hardware stack levels used:    1
 32727 ;; Hardware stack levels required when called:    2
 32728 ;; This function calls:
 32729 ;;		Absolute function
 32730 ;;		_ADCC_DefaultInterruptHandler
 32731 ;;		_adc_int_t_handler
 32732 ;; This function is called by:
 32733 ;;		Interrupt level 2
 32734 ;; This function uses a non-reentrant model
 32735 ;;
 32736                           
 32737                           	psect	text159
 32738  019F80                     __ptext159:
 32739                           	opt callstack 0
 32740  019F80                     _ADCC_ThresholdISR:
 32741                           	opt callstack 3
 32742                           
 32743                           ;incstack = 0
 32744  019F80  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 32745  019F86  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 32746  019F8C  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 32747  019F92  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 32748  019F98  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 32749  019F9E  EE14  F0C2         	lfsr	1,___inthi_sp
 32750                           
 32751                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 32752  019FA2  0139               	movlb	57	; () banked
 32753  019FA4  97A1               	bcf	161,3,b	;volatile
 32754                           
 32755                           ; BSR set to: 57
 32756                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 32757  019FA6  0100               	movlb	0	; () banked
 32758  019FA8  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 32759  019FAA  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 32760  019FAC  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 32761  019FAE  B4D8               	btfsc	status,2,c
 32762  019FB0  D00C               	goto	i2u985_49
 32763                           
 32764                           ; BSR set to: 0
 32765                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 32766  019FB2  D801               	call	i2u985_48
 32767  019FB4  D00A               	goto	i2u985_49
 32768  019FB6                     i2u985_48:
 32769  019FB6  0005               	push	
 32770  019FB8  6EFA               	movwf	pclath,c
 32771  019FBA  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 32772  019FBC  6EFD               	movwf	tosl,c
 32773  019FBE  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 32774  019FC0  6EFE               	movwf	tosh,c
 32775  019FC2  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 32776  019FC4  6EFF               	movwf	tosu,c
 32777  019FC6  50FA               	movf	pclath,w,c
 32778  019FC8  0012               	return		;indir
 32779  019FCA                     i2u985_49:
 32780  019FCA  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 32781  019FD0  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 32782  019FD6  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 32783  019FDC  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 32784  019FE2  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 32785  019FE8  0011               	retfie		f
 32786  019FEA                     __end_of_ADCC_ThresholdISR:
 32787                           	opt callstack 0
 32788                           
 32789 ;; *************** function _UART1_rx_vect_isr *****************
 32790 ;; Defined at:
 32791 ;;		line 181 in file "mcc_generated_files/uart1.c"
 32792 ;; Parameters:    Size  Location     Type
 32793 ;;		None
 32794 ;; Auto vars:     Size  Location     Type
 32795 ;;		None
 32796 ;; Return value:  Size  Location     Type
 32797 ;;                  1    wreg      void 
 32798 ;; Registers used:
 32799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32800 ;; Tracked objects:
 32801 ;;		On entry : 0/0
 32802 ;;		On exit  : 0/0
 32803 ;;		Unchanged: 0/0
 32804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32809 ;;Total ram usage:        0 bytes
 32810 ;; Hardware stack levels used:    1
 32811 ;; Hardware stack levels required when called:    1
 32812 ;; This function calls:
 32813 ;;		Absolute function
 32814 ;;		_UART1_Receive_ISR
 32815 ;; This function is called by:
 32816 ;;		Interrupt level 2
 32817 ;; This function uses a non-reentrant model
 32818 ;;
 32819                           
 32820                           	psect	text160
 32821  01AD5C                     __ptext160:
 32822                           	opt callstack 0
 32823  01AD5C                     _UART1_rx_vect_isr:
 32824                           	opt callstack 4
 32825                           
 32826                           ;incstack = 0
 32827  01AD5C  EE14  F0C2         	lfsr	1,___inthi_sp
 32828                           
 32829                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 32830  01AD60  0100               	movlb	0	; () banked
 32831  01AD62  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32832  01AD64  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32833  01AD66  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 32834  01AD68  B4D8               	btfsc	status,2,c
 32835  01AD6A  0011               	retfie		f
 32836                           
 32837                           ; BSR set to: 0
 32838                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 32839  01AD6C  D801               	call	i2u987_48
 32840  01AD6E  0011               	retfie		f
 32841  01AD70                     i2u987_48:
 32842  01AD70  0005               	push	
 32843  01AD72  6EFA               	movwf	pclath,c
 32844  01AD74  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32845  01AD76  6EFD               	movwf	tosl,c
 32846  01AD78  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32847  01AD7A  6EFE               	movwf	tosh,c
 32848  01AD7C  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 32849  01AD7E  6EFF               	movwf	tosu,c
 32850  01AD80  50FA               	movf	pclath,w,c
 32851  01AD82  0012               	return		;indir
 32852  01AD84                     __end_of_UART1_rx_vect_isr:
 32853                           	opt callstack 0
 32854                           
 32855 ;; *************** function _UART1_Receive_ISR *****************
 32856 ;; Defined at:
 32857 ;;		line 192 in file "mcc_generated_files/uart1.c"
 32858 ;; Parameters:    Size  Location     Type
 32859 ;;		None
 32860 ;; Auto vars:     Size  Location     Type
 32861 ;;		None
 32862 ;; Return value:  Size  Location     Type
 32863 ;;                  1  [STACK] void 
 32864 ;; Registers used:
 32865 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32866 ;; Tracked objects:
 32867 ;;		On entry : 3F/0
 32868 ;;		On exit  : 0/0
 32869 ;;		Unchanged: 0/0
 32870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32875 ;;Total ram usage:        0 bytes
 32876 ;; Hardware stack levels used:    1
 32877 ;; This function calls:
 32878 ;;		Nothing
 32879 ;; This function is called by:
 32880 ;;		_UART1_Initialize
 32881 ;;		_UART1_rx_vect_isr
 32882 ;; This function uses a reentrant model
 32883 ;;
 32884                           
 32885                           	psect	text161
 32886  01AFC4                     __ptext161:
 32887                           	opt callstack 0
 32888  01AFC4                     _UART1_Receive_ISR:
 32889                           	opt callstack 4
 32890                           
 32891                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 32892                           
 32893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32894                           ;incstack = 0
 32895  01AFC4  5037               	movf	_uart1RxHead^0,w,c
 32896  01AFC6  0F6C               	addlw	low _uart1RxBuffer
 32897  01AFC8  6ED9               	movwf	fsr2l,c
 32898  01AFCA  6ADA               	clrf	fsr2h,c
 32899  01AFCC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 32900  01AFD2  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 32901                           
 32902                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 32903  01AFD4  0E07               	movlw	7
 32904  01AFD6  6437               	cpfsgt	_uart1RxHead^0,c
 32905  01AFD8  D001               	goto	l10236
 32906                           
 32907                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 32908  01AFDA  6A37               	clrf	_uart1RxHead^0,c	;volatile
 32909  01AFDC                     l10236:
 32910                           
 32911                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 32912  01AFDC  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 32913                           
 32914                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32915  01AFDE  0012               	return		;funcret
 32916  01AFE0                     __end_of_UART1_Receive_ISR:
 32917                           	opt callstack 0
 32918                           
 32919 ;; *************** function _UART2_tx_vect_isr *****************
 32920 ;; Defined at:
 32921 ;;		line 195 in file "mcc_generated_files/uart2.c"
 32922 ;; Parameters:    Size  Location     Type
 32923 ;;		None
 32924 ;; Auto vars:     Size  Location     Type
 32925 ;;		None
 32926 ;; Return value:  Size  Location     Type
 32927 ;;                  1    wreg      void 
 32928 ;; Registers used:
 32929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32930 ;; Tracked objects:
 32931 ;;		On entry : 0/0
 32932 ;;		On exit  : 0/0
 32933 ;;		Unchanged: 0/0
 32934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32939 ;;Total ram usage:        0 bytes
 32940 ;; Hardware stack levels used:    1
 32941 ;; Hardware stack levels required when called:    1
 32942 ;; This function calls:
 32943 ;;		Absolute function
 32944 ;;		_UART2_Transmit_ISR
 32945 ;; This function is called by:
 32946 ;;		Interrupt level 2
 32947 ;; This function uses a non-reentrant model
 32948 ;;
 32949                           
 32950                           	psect	text162
 32951  01AD84                     __ptext162:
 32952                           	opt callstack 0
 32953  01AD84                     _UART2_tx_vect_isr:
 32954                           	opt callstack 4
 32955                           
 32956                           ;incstack = 0
 32957  01AD84  EE14  F0C2         	lfsr	1,___inthi_sp
 32958                           
 32959                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 32960  01AD88  0100               	movlb	0	; () banked
 32961  01AD8A  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 32962  01AD8C  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 32963  01AD8E  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 32964  01AD90  B4D8               	btfsc	status,2,c
 32965  01AD92  0011               	retfie		f
 32966                           
 32967                           ; BSR set to: 0
 32968                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 32969  01AD94  D801               	call	i2u989_48
 32970  01AD96  0011               	retfie		f
 32971  01AD98                     i2u989_48:
 32972  01AD98  0005               	push	
 32973  01AD9A  6EFA               	movwf	pclath,c
 32974  01AD9C  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 32975  01AD9E  6EFD               	movwf	tosl,c
 32976  01ADA0  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 32977  01ADA2  6EFE               	movwf	tosh,c
 32978  01ADA4  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 32979  01ADA6  6EFF               	movwf	tosu,c
 32980  01ADA8  50FA               	movf	pclath,w,c
 32981  01ADAA  0012               	return		;indir
 32982  01ADAC                     __end_of_UART2_tx_vect_isr:
 32983                           	opt callstack 0
 32984                           
 32985 ;; *************** function _UART2_Transmit_ISR *****************
 32986 ;; Defined at:
 32987 ;;		line 213 in file "mcc_generated_files/uart2.c"
 32988 ;; Parameters:    Size  Location     Type
 32989 ;;		None
 32990 ;; Auto vars:     Size  Location     Type
 32991 ;;		None
 32992 ;; Return value:  Size  Location     Type
 32993 ;;                  1  [STACK] void 
 32994 ;; Registers used:
 32995 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32996 ;; Tracked objects:
 32997 ;;		On entry : 3F/0
 32998 ;;		On exit  : 3B/39
 32999 ;;		Unchanged: 0/0
 33000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33005 ;;Total ram usage:        0 bytes
 33006 ;; Hardware stack levels used:    1
 33007 ;; This function calls:
 33008 ;;		Nothing
 33009 ;; This function is called by:
 33010 ;;		_UART2_Initialize
 33011 ;;		_UART2_tx_vect_isr
 33012 ;; This function uses a reentrant model
 33013 ;;
 33014                           
 33015                           	psect	text163
 33016  01AAD4                     __ptext163:
 33017                           	opt callstack 0
 33018  01AAD4                     _UART2_Transmit_ISR:
 33019                           	opt callstack 4
 33020                           
 33021                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33022                           
 33023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33024                           ;incstack = 0
 33025  01AAD4  0E40               	movlw	64
 33026  01AAD6  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 33027  01AAD8  D010               	goto	l673
 33028                           
 33029                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33030  01AADA  0E54               	movlw	low _uart2TxBuffer
 33031  01AADC  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 33032  01AADE  6ED9               	movwf	fsr2l,c
 33033  01AAE0  6ADA               	clrf	fsr2h,c
 33034  01AAE2  0E03               	movlw	high _uart2TxBuffer
 33035  01AAE4  22DA               	addwfc	fsr2h,f,c
 33036  01AAE6  50DF               	movf	indf2,w,c
 33037  01AAE8  013D               	movlb	61	; () banked
 33038  01AAEA  6FD2               	movwf	210,b	;volatile
 33039                           
 33040                           ; BSR set to: 61
 33041  01AAEC  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 33042                           
 33043                           ; BSR set to: 61
 33044                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33045  01AAEE  0E3F               	movlw	63
 33046  01AAF0  6433               	cpfsgt	_uart2TxTail^0,c
 33047  01AAF2  D001               	goto	l10248
 33048                           
 33049                           ; BSR set to: 61
 33050                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33051  01AAF4  6A33               	clrf	_uart2TxTail^0,c	;volatile
 33052  01AAF6                     l10248:
 33053                           
 33054                           ; BSR set to: 61
 33055                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33056  01AAF6  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33057                           
 33058                           ;mcc_generated_files/uart2.c: 224:     }
 33059  01AAF8  0012               	return	
 33060  01AAFA                     l673:
 33061                           
 33062                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33063  01AAFA  0139               	movlb	57	; () banked
 33064  01AAFC  9796               	bcf	150,3,b	;volatile
 33065                           
 33066                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33067  01AAFE  0012               	return		;funcret
 33068  01AB00                     __end_of_UART2_Transmit_ISR:
 33069                           	opt callstack 0
 33070                           
 33071 ;; *************** function _UART2_rx_vect_isr *****************
 33072 ;; Defined at:
 33073 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33074 ;; Parameters:    Size  Location     Type
 33075 ;;		None
 33076 ;; Auto vars:     Size  Location     Type
 33077 ;;		None
 33078 ;; Return value:  Size  Location     Type
 33079 ;;                  1    wreg      void 
 33080 ;; Registers used:
 33081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33082 ;; Tracked objects:
 33083 ;;		On entry : 0/0
 33084 ;;		On exit  : 0/0
 33085 ;;		Unchanged: 0/0
 33086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33091 ;;Total ram usage:        0 bytes
 33092 ;; Hardware stack levels used:    1
 33093 ;; Hardware stack levels required when called:    1
 33094 ;; This function calls:
 33095 ;;		Absolute function
 33096 ;;		_UART2_Receive_ISR
 33097 ;; This function is called by:
 33098 ;;		Interrupt level 2
 33099 ;; This function uses a non-reentrant model
 33100 ;;
 33101                           
 33102                           	psect	text164
 33103  01ADAC                     __ptext164:
 33104                           	opt callstack 0
 33105  01ADAC                     _UART2_rx_vect_isr:
 33106                           	opt callstack 4
 33107                           
 33108                           ;incstack = 0
 33109  01ADAC  EE14  F0C2         	lfsr	1,___inthi_sp
 33110                           
 33111                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33112  01ADB0  0100               	movlb	0	; () banked
 33113  01ADB2  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33114  01ADB4  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33115  01ADB6  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33116  01ADB8  B4D8               	btfsc	status,2,c
 33117  01ADBA  0011               	retfie		f
 33118                           
 33119                           ; BSR set to: 0
 33120                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33121  01ADBC  D801               	call	i2u991_48
 33122  01ADBE  0011               	retfie		f
 33123  01ADC0                     i2u991_48:
 33124  01ADC0  0005               	push	
 33125  01ADC2  6EFA               	movwf	pclath,c
 33126  01ADC4  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33127  01ADC6  6EFD               	movwf	tosl,c
 33128  01ADC8  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33129  01ADCA  6EFE               	movwf	tosh,c
 33130  01ADCC  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33131  01ADCE  6EFF               	movwf	tosu,c
 33132  01ADD0  50FA               	movf	pclath,w,c
 33133  01ADD2  0012               	return		;indir
 33134  01ADD4                     __end_of_UART2_rx_vect_isr:
 33135                           	opt callstack 0
 33136                           
 33137 ;; *************** function _UART2_Receive_ISR *****************
 33138 ;; Defined at:
 33139 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33140 ;; Parameters:    Size  Location     Type
 33141 ;;		None
 33142 ;; Auto vars:     Size  Location     Type
 33143 ;;		None
 33144 ;; Return value:  Size  Location     Type
 33145 ;;                  1  [STACK] void 
 33146 ;; Registers used:
 33147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33148 ;; Tracked objects:
 33149 ;;		On entry : 3F/0
 33150 ;;		On exit  : 0/0
 33151 ;;		Unchanged: 0/0
 33152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33157 ;;Total ram usage:        0 bytes
 33158 ;; Hardware stack levels used:    1
 33159 ;; This function calls:
 33160 ;;		Nothing
 33161 ;; This function is called by:
 33162 ;;		_UART2_Initialize
 33163 ;;		_UART2_rx_vect_isr
 33164 ;; This function uses a reentrant model
 33165 ;;
 33166                           
 33167                           	psect	text165
 33168  01AF8A                     __ptext165:
 33169                           	opt callstack 0
 33170  01AF8A                     _UART2_Receive_ISR:
 33171                           	opt callstack 4
 33172                           
 33173                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 33174                           
 33175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33176                           ;incstack = 0
 33177  01AF8A  0E00               	movlw	low _uart2RxBuffer
 33178  01AF8C  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 33179  01AF8E  6ED9               	movwf	fsr2l,c
 33180  01AF90  6ADA               	clrf	fsr2h,c
 33181  01AF92  0E05               	movlw	high _uart2RxBuffer
 33182  01AF94  22DA               	addwfc	fsr2h,f,c
 33183  01AF96  006F F743 FFDF     	movff	15824,indf2	;volatile
 33184  01AF9C  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 33185                           
 33186                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 33187  01AF9E  2831               	incf	_uart2RxHead^0,w,c
 33188  01AFA0  B4D8               	btfsc	status,2,c
 33189                           
 33190                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 33191  01AFA2  6A31               	clrf	_uart2RxHead^0,c	;volatile
 33192                           
 33193                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 33194  01AFA4  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 33195                           
 33196                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33197  01AFA6  0012               	return		;funcret
 33198  01AFA8                     __end_of_UART2_Receive_ISR:
 33199                           	opt callstack 0
 33200                           
 33201 ;; *************** function _TMR6_ISR *****************
 33202 ;; Defined at:
 33203 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 33204 ;; Parameters:    Size  Location     Type
 33205 ;;		None
 33206 ;; Auto vars:     Size  Location     Type
 33207 ;;		None
 33208 ;; Return value:  Size  Location     Type
 33209 ;;                  1    wreg      void 
 33210 ;; Registers used:
 33211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 33212 ;; Tracked objects:
 33213 ;;		On entry : 0/0
 33214 ;;		On exit  : 0/0
 33215 ;;		Unchanged: 0/0
 33216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33221 ;;Total ram usage:        1 bytes
 33222 ;; Hardware stack levels used:    1
 33223 ;; Hardware stack levels required when called:    2
 33224 ;; This function calls:
 33225 ;;		_TMR6_CallBack
 33226 ;; This function is called by:
 33227 ;;		Interrupt level 2
 33228 ;; This function uses a non-reentrant model
 33229 ;;
 33230                           
 33231                           	psect	text166
 33232  01AFFC                     __ptext166:
 33233                           	opt callstack 0
 33234  01AFFC                     _TMR6_ISR:
 33235                           	opt callstack 3
 33236                           
 33237                           ;incstack = 0
 33238  01AFFC  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 33239  01B002  EE14  F0C2         	lfsr	1,___inthi_sp
 33240                           
 33241                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 33242  01B006  0139               	movlb	57	; () banked
 33243  01B008  91A9               	bcf	169,0,b	;volatile
 33244                           
 33245                           ; BSR set to: 57
 33246                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 33247  01B00A  EC56  F0D7         	call	_TMR6_CallBack	;wreg free
 33248  01B00E  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 33249  01B014  0011               	retfie		f
 33250  01B016                     __end_of_TMR6_ISR:
 33251                           	opt callstack 0
 33252                           
 33253 ;; *************** function _TMR6_CallBack *****************
 33254 ;; Defined at:
 33255 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 33256 ;; Parameters:    Size  Location     Type
 33257 ;;		None
 33258 ;; Auto vars:     Size  Location     Type
 33259 ;;		None
 33260 ;; Return value:  Size  Location     Type
 33261 ;;                  1  [STACK] void 
 33262 ;; Registers used:
 33263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 33264 ;; Tracked objects:
 33265 ;;		On entry : 3F/39
 33266 ;;		On exit  : 0/0
 33267 ;;		Unchanged: 0/0
 33268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33273 ;;Total ram usage:        0 bytes
 33274 ;; Hardware stack levels used:    1
 33275 ;; Hardware stack levels required when called:    1
 33276 ;; This function calls:
 33277 ;;		Absolute function
 33278 ;;		_TMR6_DefaultInterruptHandler
 33279 ;; This function is called by:
 33280 ;;		_TMR6_ISR
 33281 ;; This function uses a reentrant model
 33282 ;;
 33283                           
 33284                           	psect	text167
 33285  01AEAC                     __ptext167:
 33286                           	opt callstack 0
 33287  01AEAC                     _TMR6_CallBack:
 33288                           	opt callstack 3
 33289                           
 33290                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 33291                           
 33292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33293                           ;incstack = 0
 33294  01AEAC  0100               	movlb	0	; () banked
 33295  01AEAE  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 33296  01AEB0  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 33297  01AEB2  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 33298  01AEB4  B4D8               	btfsc	status,2,c
 33299  01AEB6  0012               	return	
 33300                           
 33301                           ; BSR set to: 0
 33302                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 33303  01AEB8  D801               	call	u952_48
 33304  01AEBA  0012               	return	
 33305  01AEBC                     u952_48:
 33306  01AEBC  0005               	push	
 33307  01AEBE  6EFA               	movwf	pclath,c
 33308  01AEC0  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 33309  01AEC2  6EFD               	movwf	tosl,c
 33310  01AEC4  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 33311  01AEC6  6EFE               	movwf	tosh,c
 33312  01AEC8  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 33313  01AECA  6EFF               	movwf	tosu,c
 33314  01AECC  50FA               	movf	pclath,w,c
 33315  01AECE  0012               	return		;indir
 33316  01AED0                     __end_of_TMR6_CallBack:
 33317                           	opt callstack 0
 33318                           
 33319 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 33320 ;; Defined at:
 33321 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 33322 ;; Parameters:    Size  Location     Type
 33323 ;;		None
 33324 ;; Auto vars:     Size  Location     Type
 33325 ;;  i               1  [STACK] unsigned char 
 33326 ;; Return value:  Size  Location     Type
 33327 ;;                  1  [STACK] void 
 33328 ;; Registers used:
 33329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 33330 ;; Tracked objects:
 33331 ;;		On entry : 3F/0
 33332 ;;		On exit  : 0/0
 33333 ;;		Unchanged: 0/0
 33334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33339 ;;Total ram usage:        0 bytes
 33340 ;; Hardware stack levels used:    1
 33341 ;; This function calls:
 33342 ;;		Nothing
 33343 ;; This function is called by:
 33344 ;;		_TMR6_Initialize
 33345 ;;		_TMR6_CallBack
 33346 ;; This function uses a reentrant model
 33347 ;;
 33348                           
 33349                           	psect	text168
 33350  01A3DC                     __ptext168:
 33351                           	opt callstack 0
 33352  01A3DC                     _TMR6_DefaultInterruptHandler:
 33353                           	opt callstack 0
 33354                           
 33355                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33356  01A3DC  52E6               	movf	postinc1,f,c
 33357                           
 33358                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 33359                           ;stkvar	_i @ sp[(-1)+0]
 33360                           
 33361                           ;incstack = 0
 33362  01A3DE  0EFF               	movlw	-1
 33363  01A3E0  6AE3               	clrf	plusw1,c
 33364  01A3E2                     l9818:
 33365                           
 33366                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 33367                           ;stkvar	_i @ sp[(-1)+0]
 33368  01A3E2  0EFF               	movlw	-1
 33369  01A3E4  50E3               	movf	plusw1,w,c
 33370  01A3E6  0D02               	mullw	2
 33371  01A3E8  0EE5               	movlw	low _tickCount
 33372  01A3EA  24F3               	addwf	243,w,c
 33373  01A3EC  6ED9               	movwf	fsr2l,c
 33374  01A3EE  0E02               	movlw	high _tickCount
 33375  01A3F0  20F4               	addwfc	prodh,w,c
 33376  01A3F2  6EDA               	movwf	fsr2h,c
 33377  01A3F4  50DE               	movf	postinc2,w,c
 33378  01A3F6  10DE               	iorwf	postinc2,w,c
 33379  01A3F8  B4D8               	btfsc	status,2,c
 33380  01A3FA  D00C               	goto	l9822
 33381                           
 33382                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 33383                           ;stkvar	_i @ sp[(-1)+0]
 33384  01A3FC  0EFF               	movlw	-1
 33385  01A3FE  50E3               	movf	plusw1,w,c
 33386  01A400  0D02               	mullw	2
 33387  01A402  0EE5               	movlw	low _tickCount
 33388  01A404  24F3               	addwf	243,w,c
 33389  01A406  6ED9               	movwf	fsr2l,c
 33390  01A408  0E02               	movlw	high _tickCount
 33391  01A40A  20F4               	addwfc	prodh,w,c
 33392  01A40C  6EDA               	movwf	fsr2h,c
 33393  01A40E  06DE               	decf	postinc2,f,c
 33394  01A410  0E00               	movlw	0
 33395  01A412  5ADD               	subwfb	postdec2,f,c
 33396  01A414                     l9822:
 33397                           
 33398                           ;mcc_generated_files/tmr6.c: 207:  }
 33399                           ;stkvar	_i @ sp[(-1)+0]
 33400  01A414  0EFF               	movlw	-1
 33401  01A416  2AE3               	incf	plusw1,f,c
 33402                           
 33403                           ;stkvar	_i @ sp[(-1)+0]
 33404  01A418  0EFF               	movlw	-1
 33405  01A41A  006F FF8C  F001    	movff	plusw1,btemp
 33406  01A420  0E0B               	movlw	11
 33407  01A422  6401               	cpfsgt	btemp^0,c
 33408  01A424  D7DE               	goto	l9818
 33409                           
 33410                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33411  01A426  52E5               	movf	postdec1,f,c
 33412  01A428  0012               	return		;funcret
 33413  01A42A                     __end_of_TMR6_DefaultInterruptHandler:
 33414                           	opt callstack 0
 33415                           
 33416 ;; *************** function _DMA1_DMASCNT_ISR *****************
 33417 ;; Defined at:
 33418 ;;		line 126 in file "mcc_generated_files/dma1.c"
 33419 ;; Parameters:    Size  Location     Type
 33420 ;;		None
 33421 ;; Auto vars:     Size  Location     Type
 33422 ;;		None
 33423 ;; Return value:  Size  Location     Type
 33424 ;;                  1    wreg      void 
 33425 ;; Registers used:
 33426 ;;		None
 33427 ;; Tracked objects:
 33428 ;;		On entry : 0/0
 33429 ;;		On exit  : 3F/0
 33430 ;;		Unchanged: 0/0
 33431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33436 ;;Total ram usage:        0 bytes
 33437 ;; Hardware stack levels used:    1
 33438 ;; This function calls:
 33439 ;;		Nothing
 33440 ;; This function is called by:
 33441 ;;		Interrupt level 2
 33442 ;; This function uses a non-reentrant model
 33443 ;;
 33444                           
 33445                           	psect	text169
 33446  01B10C                     __ptext169:
 33447                           	opt callstack 0
 33448  01B10C                     _DMA1_DMASCNT_ISR:
 33449                           	opt callstack 5
 33450                           
 33451                           ;incstack = 0
 33452  01B10C  EE14  F0C2         	lfsr	1,___inthi_sp
 33453                           
 33454                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 33455  01B110  0139               	movlb	57	; () banked
 33456  01B112  91A2               	bcf	162,0,b	;volatile
 33457                           
 33458                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 33459  01B114  0100               	movlb	0	; () banked
 33460  01B116  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 33461                           
 33462                           ; BSR set to: 0
 33463  01B118  0011               	retfie		f
 33464  01B11A                     __end_of_DMA1_DMASCNT_ISR:
 33465                           	opt callstack 0
 33466                           
 33467 ;; *************** function _DMA1_DMADCNT_ISR *****************
 33468 ;; Defined at:
 33469 ;;		line 134 in file "mcc_generated_files/dma1.c"
 33470 ;; Parameters:    Size  Location     Type
 33471 ;;		None
 33472 ;; Auto vars:     Size  Location     Type
 33473 ;;		None
 33474 ;; Return value:  Size  Location     Type
 33475 ;;                  1    wreg      void 
 33476 ;; Registers used:
 33477 ;;		None
 33478 ;; Tracked objects:
 33479 ;;		On entry : 0/0
 33480 ;;		On exit  : 3F/39
 33481 ;;		Unchanged: 0/0
 33482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33487 ;;Total ram usage:        0 bytes
 33488 ;; Hardware stack levels used:    1
 33489 ;; This function calls:
 33490 ;;		Nothing
 33491 ;; This function is called by:
 33492 ;;		Interrupt level 2
 33493 ;; This function uses a non-reentrant model
 33494 ;;
 33495                           
 33496                           	psect	text170
 33497  01B130                     __ptext170:
 33498                           	opt callstack 0
 33499  01B130                     _DMA1_DMADCNT_ISR:
 33500                           	opt callstack 5
 33501                           
 33502                           ; BSR set to: 0
 33503                           ;incstack = 0
 33504  01B130  EE14  F0C2         	lfsr	1,___inthi_sp
 33505                           
 33506                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 33507  01B134  0139               	movlb	57	; () banked
 33508  01B136  93A2               	bcf	162,1,b	;volatile
 33509                           
 33510                           ; BSR set to: 57
 33511  01B138  0011               	retfie		f
 33512  01B13A                     __end_of_DMA1_DMADCNT_ISR:
 33513                           	opt callstack 0
 33514                           
 33515 ;; *************** function _DMA1_DMAA_ISR *****************
 33516 ;; Defined at:
 33517 ;;		line 144 in file "mcc_generated_files/dma1.c"
 33518 ;; Parameters:    Size  Location     Type
 33519 ;;		None
 33520 ;; Auto vars:     Size  Location     Type
 33521 ;;		None
 33522 ;; Return value:  Size  Location     Type
 33523 ;;                  1    wreg      void 
 33524 ;; Registers used:
 33525 ;;		None
 33526 ;; Tracked objects:
 33527 ;;		On entry : 0/0
 33528 ;;		On exit  : 3F/39
 33529 ;;		Unchanged: 0/0
 33530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33535 ;;Total ram usage:        0 bytes
 33536 ;; Hardware stack levels used:    1
 33537 ;; This function calls:
 33538 ;;		Nothing
 33539 ;; This function is called by:
 33540 ;;		Interrupt level 2
 33541 ;; This function uses a non-reentrant model
 33542 ;;
 33543                           
 33544                           	psect	text171
 33545  01B13C                     __ptext171:
 33546                           	opt callstack 0
 33547  01B13C                     _DMA1_DMAA_ISR:
 33548                           	opt callstack 5
 33549                           
 33550                           ; BSR set to: 57
 33551                           ;incstack = 0
 33552  01B13C  EE14  F0C2         	lfsr	1,___inthi_sp
 33553                           
 33554                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 33555  01B140  0139               	movlb	57	; () banked
 33556  01B142  97A2               	bcf	162,3,b	;volatile
 33557                           
 33558                           ; BSR set to: 57
 33559  01B144  0011               	retfie		f
 33560  01B146                     __end_of_DMA1_DMAA_ISR:
 33561                           	opt callstack 0
 33562                           
 33563 ;; *************** function _DMA1_DMAOR_ISR *****************
 33564 ;; Defined at:
 33565 ;;		line 155 in file "mcc_generated_files/dma1.c"
 33566 ;; Parameters:    Size  Location     Type
 33567 ;;		None
 33568 ;; Auto vars:     Size  Location     Type
 33569 ;;		None
 33570 ;; Return value:  Size  Location     Type
 33571 ;;                  1    wreg      void 
 33572 ;; Registers used:
 33573 ;;		None
 33574 ;; Tracked objects:
 33575 ;;		On entry : 0/0
 33576 ;;		On exit  : 3F/39
 33577 ;;		Unchanged: 0/0
 33578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33583 ;;Total ram usage:        0 bytes
 33584 ;; Hardware stack levels used:    1
 33585 ;; This function calls:
 33586 ;;		Nothing
 33587 ;; This function is called by:
 33588 ;;		Interrupt level 2
 33589 ;; This function uses a non-reentrant model
 33590 ;;
 33591                           
 33592                           	psect	text172
 33593  01B148                     __ptext172:
 33594                           	opt callstack 0
 33595  01B148                     _DMA1_DMAOR_ISR:
 33596                           	opt callstack 5
 33597                           
 33598                           ; BSR set to: 57
 33599                           ;incstack = 0
 33600  01B148  EE14  F0C2         	lfsr	1,___inthi_sp
 33601                           
 33602                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 33603  01B14C  0139               	movlb	57	; () banked
 33604  01B14E  95A2               	bcf	162,2,b	;volatile
 33605                           
 33606                           ; BSR set to: 57
 33607  01B150  0011               	retfie		f
 33608  01B152                     __end_of_DMA1_DMAOR_ISR:
 33609                           	opt callstack 0
 33610                           
 33611                           ;
 33612                           ; Interrupt Vector Table @ 0x8
 33613                           ;
 33614                           
 33615                           	psect	ivt0x8
 33616  000008                     __pivt0x8:
 33617                           	opt callstack 0
 33618  000008                     ivt0x8_base:
 33619                           	opt callstack 0
 33620                           
 33621                           ; Vector 0 : SWINT
 33622  000008  6C65               	dw	_Default_ISR shr (0+2)
 33623                           
 33624                           ; Vector 1 : HLVD
 33625  00000A  6C65               	dw	_Default_ISR shr (0+2)
 33626                           
 33627                           ; Vector 2 : OSF
 33628  00000C  6C65               	dw	_Default_ISR shr (0+2)
 33629                           
 33630                           ; Vector 3 : CSW
 33631  00000E  6C65               	dw	_Default_ISR shr (0+2)
 33632                           
 33633                           ; Vector 4 : NVM
 33634  000010  6C65               	dw	_Default_ISR shr (0+2)
 33635                           
 33636                           ; Vector 5 : SCAN
 33637  000012  6C65               	dw	_Default_ISR shr (0+2)
 33638                           
 33639                           ; Vector 6 : CRC
 33640  000014  6C65               	dw	_Default_ISR shr (0+2)
 33641                           
 33642                           ; Vector 7 : IOC
 33643  000016  6C65               	dw	_Default_ISR shr (0+2)
 33644                           
 33645                           ; Vector 8 : INT0
 33646  000018  6C3F               	dw	_INT0_ISR shr (0+2)
 33647                           
 33648                           ; Vector 9 : ZCD
 33649  00001A  6C65               	dw	_Default_ISR shr (0+2)
 33650                           
 33651                           ; Vector 10 : AD
 33652  00001C  6AAA               	dw	_ADCC_ISR shr (0+2)
 33653                           
 33654                           ; Vector 11 : ADT
 33655  00001E  67E0               	dw	_ADCC_ThresholdISR shr (0+2)
 33656                           
 33657                           ; Vector 12 : CMP1
 33658  000020  6C65               	dw	_Default_ISR shr (0+2)
 33659                           
 33660                           ; Vector 13 : SMT1
 33661  000022  6C65               	dw	_Default_ISR shr (0+2)
 33662                           
 33663                           ; Vector 14 : SMT1PRA
 33664  000024  6C65               	dw	_Default_ISR shr (0+2)
 33665                           
 33666                           ; Vector 15 : SMT1PRW
 33667  000026  6C65               	dw	_Default_ISR shr (0+2)
 33668                           
 33669                           ; Vector 16 : DMA1SCNT
 33670  000028  6C43               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 33671                           
 33672                           ; Vector 17 : DMA1DCNT
 33673  00002A  6C4C               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 33674                           
 33675                           ; Vector 18 : DMA1OR
 33676  00002C  6C52               	dw	_DMA1_DMAOR_ISR shr (0+2)
 33677                           
 33678                           ; Vector 19 : DMA1A
 33679  00002E  6C4F               	dw	_DMA1_DMAA_ISR shr (0+2)
 33680                           
 33681                           ; Vector 20 : SPI1RX
 33682  000030  6C65               	dw	_Default_ISR shr (0+2)
 33683                           
 33684                           ; Vector 21 : SPI1TX
 33685  000032  6C65               	dw	_Default_ISR shr (0+2)
 33686                           
 33687                           ; Vector 22 : SPI1
 33688  000034  6C65               	dw	_Default_ISR shr (0+2)
 33689                           
 33690                           ; Vector 23 : I2C1RX
 33691  000036  6C65               	dw	_Default_ISR shr (0+2)
 33692                           
 33693                           ; Vector 24 : I2C1TX
 33694  000038  6C65               	dw	_Default_ISR shr (0+2)
 33695                           
 33696                           ; Vector 25 : I2C1
 33697  00003A  6C65               	dw	_Default_ISR shr (0+2)
 33698                           
 33699                           ; Vector 26 : I2C1E
 33700  00003C  6C65               	dw	_Default_ISR shr (0+2)
 33701                           
 33702                           ; Vector 27 : U1RX
 33703  00003E  6B57               	dw	_UART1_rx_vect_isr shr (0+2)
 33704                           
 33705                           ; Vector 28 : U1TX
 33706  000040  6C65               	dw	_Default_ISR shr (0+2)
 33707                           
 33708                           ; Vector 29 : U1E
 33709  000042  6C65               	dw	_Default_ISR shr (0+2)
 33710                           
 33711                           ; Vector 30 : U1
 33712  000044  6C65               	dw	_Default_ISR shr (0+2)
 33713                           
 33714                           ; Vector 31 : TMR0
 33715  000046  6C65               	dw	_Default_ISR shr (0+2)
 33716                           
 33717                           ; Vector 32 : TMR1
 33718  000048  6C65               	dw	_Default_ISR shr (0+2)
 33719                           
 33720                           ; Vector 33 : TMR1G
 33721  00004A  6C65               	dw	_Default_ISR shr (0+2)
 33722                           
 33723                           ; Vector 34 : TMR2
 33724  00004C  6C65               	dw	_Default_ISR shr (0+2)
 33725                           
 33726                           ; Vector 35 : CCP1
 33727  00004E  6C65               	dw	_Default_ISR shr (0+2)
 33728                           
 33729                           ; Vector 36 : Undefined
 33730  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33731                           
 33732                           ; Vector 37 : NCO1
 33733  000052  6C65               	dw	_Default_ISR shr (0+2)
 33734                           
 33735                           ; Vector 38 : CWG1
 33736  000054  6C65               	dw	_Default_ISR shr (0+2)
 33737                           
 33738                           ; Vector 39 : CLC1
 33739  000056  6C65               	dw	_Default_ISR shr (0+2)
 33740                           
 33741                           ; Vector 40 : INT1
 33742  000058  69E8               	dw	_INT1_ISR shr (0+2)
 33743                           
 33744                           ; Vector 41 : CMP2
 33745  00005A  6C65               	dw	_Default_ISR shr (0+2)
 33746                           
 33747                           ; Vector 42 : DMA2SCNT
 33748  00005C  6C65               	dw	_Default_ISR shr (0+2)
 33749                           
 33750                           ; Vector 43 : DMA2DCNT
 33751  00005E  6C65               	dw	_Default_ISR shr (0+2)
 33752                           
 33753                           ; Vector 44 : DMA2OR
 33754  000060  6C65               	dw	_Default_ISR shr (0+2)
 33755                           
 33756                           ; Vector 45 : DMA2A
 33757  000062  6C65               	dw	_Default_ISR shr (0+2)
 33758                           
 33759                           ; Vector 46 : I2C2RX
 33760  000064  6C65               	dw	_Default_ISR shr (0+2)
 33761                           
 33762                           ; Vector 47 : I2C2TX
 33763  000066  6C65               	dw	_Default_ISR shr (0+2)
 33764                           
 33765                           ; Vector 48 : I2C2
 33766  000068  6C65               	dw	_Default_ISR shr (0+2)
 33767                           
 33768                           ; Vector 49 : I2C2E
 33769  00006A  6C65               	dw	_Default_ISR shr (0+2)
 33770                           
 33771                           ; Vector 50 : U2RX
 33772  00006C  6B6B               	dw	_UART2_rx_vect_isr shr (0+2)
 33773                           
 33774                           ; Vector 51 : U2TX
 33775  00006E  6B61               	dw	_UART2_tx_vect_isr shr (0+2)
 33776                           
 33777                           ; Vector 52 : U2E
 33778  000070  6C65               	dw	_Default_ISR shr (0+2)
 33779                           
 33780                           ; Vector 53 : U2
 33781  000072  6C65               	dw	_Default_ISR shr (0+2)
 33782                           
 33783                           ; Vector 54 : TMR3
 33784  000074  60B4               	dw	_TMR3_ISR shr (0+2)
 33785                           
 33786                           ; Vector 55 : TMR3G
 33787  000076  6C65               	dw	_Default_ISR shr (0+2)
 33788                           
 33789                           ; Vector 56 : TMR4
 33790  000078  6C65               	dw	_Default_ISR shr (0+2)
 33791                           
 33792                           ; Vector 57 : CCP2
 33793  00007A  6C65               	dw	_Default_ISR shr (0+2)
 33794                           
 33795                           ; Vector 58 : Undefined
 33796  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 33797                           
 33798                           ; Vector 59 : CWG2
 33799  00007E  6C65               	dw	_Default_ISR shr (0+2)
 33800                           
 33801                           ; Vector 60 : CLC2
 33802  000080  6C65               	dw	_Default_ISR shr (0+2)
 33803                           
 33804                           ; Vector 61 : INT2
 33805  000082  6C65               	dw	_Default_ISR shr (0+2)
 33806                           
 33807                           ; Vector 62 : Undefined
 33808  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 33809                           
 33810                           ; Vector 63 : Undefined
 33811  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 33812                           
 33813                           ; Vector 64 : Undefined
 33814  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 33815                           
 33816                           ; Vector 65 : Undefined
 33817  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 33818                           
 33819                           ; Vector 66 : Undefined
 33820  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 33821                           
 33822                           ; Vector 67 : Undefined
 33823  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 33824                           
 33825                           ; Vector 68 : Undefined
 33826  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 33827                           
 33828                           ; Vector 69 : Undefined
 33829  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 33830                           
 33831                           ; Vector 70 : TMR5
 33832  000094  68A3               	dw	_TMR5_ISR shr (0+2)
 33833                           
 33834                           ; Vector 71 : TMR5G
 33835  000096  6C65               	dw	_Default_ISR shr (0+2)
 33836                           
 33837                           ; Vector 72 : TMR6
 33838  000098  6BFF               	dw	_TMR6_ISR shr (0+2)
 33839                           
 33840                           ; Vector 73 : CCP3
 33841  00009A  6C65               	dw	_Default_ISR shr (0+2)
 33842                           
 33843                           ; Vector 74 : CWG3
 33844  00009C  6C65               	dw	_Default_ISR shr (0+2)
 33845                           
 33846                           ; Vector 75 : CLC3
 33847  00009E  6C65               	dw	_Default_ISR shr (0+2)
 33848                           
 33849                           ; Vector 76 : Undefined
 33850  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 33851                           
 33852                           ; Vector 77 : Undefined
 33853  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 33854                           
 33855                           ; Vector 78 : Undefined
 33856  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 33857                           
 33858                           ; Vector 79 : Undefined
 33859  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 33860                           
 33861                           ; Vector 80 : CCP4
 33862  0000A8  6C65               	dw	_Default_ISR shr (0+2)
 33863                           
 33864                           ; Vector 81 : CLC4
 33865  0000AA  6C65               	dw	_Default_ISR shr (0+2)
 33866  0000AC                     ivt0x8_undefint:
 33867                           	opt callstack 0
 33868  0000AC  00FF               	reset	
 33869                           
 33870                           	psect	text173
 33871  000000                     __ptext173:
 33872                           	opt callstack 0
 33873                           
 33874                           	psect	rparam
 33875  0000                     
 33876                           	psect	temp
 33877  000001                     btemp:
 33878                           	opt callstack 0
 33879  000001                     	ds	32
 33880  0000                     wtemp0	set	btemp
 33881  0000                     wtemp1	set	btemp+2
 33882  0000                     wtemp2	set	btemp+4
 33883  0000                     wtemp3	set	btemp+6
 33884  0000                     wtemp4	set	btemp+8
 33885  0000                     wtemp5	set	btemp+10
 33886  0000                     wtemp8	set	btemp+1
 33887  0000                     ttemp0	set	btemp
 33888  0000                     ttemp1	set	btemp+3
 33889  0000                     ttemp2	set	btemp+6
 33890  0000                     ttemp3	set	btemp+9
 33891  0000                     ttemp5	set	btemp+1
 33892  0000                     ttemp6	set	btemp+4
 33893  0000                     ttemp7	set	btemp+8
 33894  0000                     ltemp0	set	btemp
 33895  0000                     ltemp1	set	btemp+4
 33896  0000                     ltemp2	set	btemp+8
 33897  0000                     lltemp0	set	btemp
 33898  0000                     lltemp1	set	btemp+8
 33899  0000                     lltemp2	set	btemp+16
 33900  0000                     lltemp3	set	btemp+24
 33901                           tosu	equ	0x3FFF
 33902                           tosh	equ	0x3FFE
 33903                           tosl	equ	0x3FFD
 33904                           stkptr	equ	0x3FFC
 33905                           pclatu	equ	0x3FFB
 33906                           pclath	equ	0x3FFA
 33907                           pcl	equ	0x3FF9
 33908                           tblptru	equ	0x3FF8
 33909                           tblptrh	equ	0x3FF7
 33910                           tblptrl	equ	0x3FF6
 33911                           tablat	equ	0x3FF5
 33912                           prodh	equ	0x3FF4
 33913                           prodl	equ	0x3FF3
 33914                           indf0	equ	0x3FEF
 33915                           postinc0	equ	0x3FEE
 33916                           postdec0	equ	0x3FED
 33917                           preinc0	equ	0x3FEC
 33918                           plusw0	equ	0x3FEB
 33919                           fsr0h	equ	0x3FEA
 33920                           fsr0l	equ	0x3FE9
 33921                           wreg	equ	0x3FE8
 33922                           indf1	equ	0x3FE7
 33923                           postinc1	equ	0x3FE6
 33924                           postdec1	equ	0x3FE5
 33925                           preinc1	equ	0x3FE4
 33926                           plusw1	equ	0x3FE3
 33927                           fsr1h	equ	0x3FE2
 33928                           fsr1l	equ	0x3FE1
 33929                           bsr	equ	0x3FE0
 33930                           indf2	equ	0x3FDF
 33931                           postinc2	equ	0x3FDE
 33932                           postdec2	equ	0x3FDD
 33933                           preinc2	equ	0x3FDC
 33934                           plusw2	equ	0x3FDB
 33935                           fsr2h	equ	0x3FDA
 33936                           fsr2l	equ	0x3FD9
 33937                           status	equ	0x3FD8


Data Sizes:
    Strings     726
    Constant    492
    Data        997
    BSS         1103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     154
    BANK1           256      0     251
    BANK2           256      0     253
    BANK3           256     25     253
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_92(CODE[1]), STR_54(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_89(CODE[3]), STR_85(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[3]), STR_66(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_89(CODE[3]), STR_85(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[3]), STR_66(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[20]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[20]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_37(CODE[9]), STR_36(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_37(CODE[9]), STR_36(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_61(CODE[4]), STR_60(CODE[4]), STR_57(CODE[4]), STR_56(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_61(CODE[4]), STR_60(CODE[4]), STR_57(CODE[4]), STR_56(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[20]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5937_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[20]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[20]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[20]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_37(CODE[9]), STR_36(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_37(CODE[9]), STR_36(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_37(CODE[9]), 
		 -> STR_36(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4457tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_37(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  371520
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                             ___flge
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            0     0      0    8599
                             _WaitMs
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK3     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___flge
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     539      58        0.0%
DATA                 0      0     85B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 13 00:54:00 2019

                     _SPI1_Exchange8bit AF12                __end_of_set_display_info AF6C  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BC  
                                     _T FC0D                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler AC92            __end_of_start_switch_handler AF12  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FD15                  __end_of_FVR_Initialize B17A  
                           __CFG_LVP$ON 000000                                     l169 B082  
                                   l807 AF20                                     l673 AAFA  
                                   _GIE 01FE97                                     _abs A4BC  
                                   _pad 8B66                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B02E                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack AE88                       _update_adc_result A7DE  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack AE1C                            __CFG_ZCD$OFF 000000  
                                  l1000 A75A                                    l1320 224E  
                                  l1332 2776                                    l2134 123A  
                                  l2302 21E6                                    l1430 A1E0  
                                  l1342 2814                                    l1334 277C  
                                  l3024 A4FC                                    l3016 7B8E  
                                  l2216 6522                                    l1344 28DA  
                                  l1345 29E8                                    l2163 066A  
                       _timer3ReloadVal 0027                                    l1188 A79A  
                                  l3124 8A44                                    l2252 5388  
                                  l2237 5E50                                    l1349 2DDE  
                                  l2078 8BC2                                    l3055 6BE0  
                                  l1705 AF68                                    l1570 9870  
                                  l2098 4FA2                                    l2178 0B1A  
                                  l2605 82C6                                    l3406 9E24  
                                  l1574 9B74                                    l1648 A834  
                                  l2632 7FF4                                    l1665 8D86  
                                  l1657 70FC                                    l1921 9C9A  
                                  l1818 79F8                                    l1658 7258  
                                  l1930 90A0                                    l3419 9DA0  
                                  l1589 A89E                    _ADCC_StartConversion B09C  
                                  l1767 4EBE                                    l3391 7040  
                                  l2594 94F6                                    l1859 9296  
                                  l2917 4A0E                                    l2598 81F2  
                                  l2872 3DF6                                    l2953 363A  
                                  l8020 342E                                    l2884 3C86  
                                  l8100 846C                                    l8030 3470  
                                  l8040 34BA                                    l8200 828E  
                                  l7312 9944                                    l8120 8532  
                                  l2993 7456                                    l8026 344A  
                                  l7314 9966                                    l8106 848C  
                                  l8044 34C0                                    l7500 3CC6  
                                  l7412 3970                                    l7340 369A  
                                  l8140 8A6E                                    l8054 3534  
                                  l7510 3CEE                                    l7422 39E2  
                                  l7350 36F0                                    l8072 35E8  
                                  l8064 35A4                                    l7432 3A1E  
                                  l7352 3720                                    l8208 82C4  
                                  l8128 8566                                    l8144 8A80  
                                  l8216 A492                                    l7600 7B30  
                                  l8074 3602                                    l8058 357A  
                                  l7514 3CF4                                    l7426 3A02  
                                  l7370 37CA                                    l7346 36DA  
                                  l8314 A37A                                    l8250 7F8C  
                                  l8242 7F60                                    l8226 7EDE  
                                  l7540 3D96                                    l7460 3B06  
                                  l7428 3A14                                    l7436 3A4E  
                                  l7364 378A                                    l8148 8A98  
                                  l8252 7FA2                                    l8244 7F7C  
                                  l7542 3DA6                                    l7526 3D52  
                                  l7454 3AEA                                    l7382 3832  
                                  l7374 37E0                                    l7358 3758  
                                  l8190 81B0                                    l7702 67AC  
                                  l8094 8456                                    l8166 8B4C  
                                  l8158 8B18                                    l8182 94F4  
                                  l8174 947E                                    l7606 7B86  
                                  l7536 3D7E                                    l7456 3AFC  
                                  l7464 3B38                                    l7376 3810  
                                  l7720 68C4                                    l7624 9E14  
                                  l7802 4612                                    l9226 ABC2  
                                  l8178 94C0                                    l8266 7BE6  
                                  l8290 85BA                                    l9314 A8A8  
                                  l7548 3DD6                                    l7476 3C10  
                                  l8196 8240                                    l7820 46D0  
                                  l9412 7312                                    l9404 72A6  
                                  l7708 67F2                                    l7740 6C48  
                                  l7652 5CDC                                    l7494 3CA8  
                                  l7486 3C6A                                    l7478 3C36  
                                  l7902 498A                                    l7814 4696  
                                  l7806 4628                                    l9414 7320  
                                  l7582 A4EC                                    l7662 5DE2  
                                  l7654 5D2C                                    l7638 5BBE  
                                  l8278 7CB8                                    l7496 3CBA  
                                  l7808 4658                                    l9424 7382  
                                  l9416 7336                                    l7680 9D90  
                                  l7914 49E2                                    l9426 73A0  
                                  l9418 7354                                    l7658 5D74  
                                  l8298 8666                                    l7940 2EB6  
                                  l7932 2E70                                    l7916 49F2  
                                  l7908 49BA                                    l7828 46EA  
                                  l9436 73D4                                    l9428 73B6  
                                  l7756 6D7C                                    l7748 6CD0  
                                  l7596 7B2C                                    l7950 2F3E  
                                  l7942 2EE6                                    l7862 4848  
                                  l7854 4816                                    l7846 47B0  
                                  l7838 477A                                    l7782 4534  
                                  l9446 7436                                    l9376 A3B6  
                                  l7960 2FB4                                    l7872 488A  
                                  l7848 47C2                                    l7856 481A  
                                  l7776 44F4                                    l8920 6990  
                                  l7696 6758                                    l9368 AA8E  
                                  l7938 2EB0                                    l7882 48D4  
                                  l7786 454A                                    l8930 6A26  
                                  l8922 69B2                                    l7956 2F7E  
                                  l7868 4864                                    l7796 45D2  
                                  l7788 457A                                    l9900 4D10  
                                  l8940 6A8E                                    l9822 A414  
                                  l7958 2F84                                    l7886 48DA  
                                  l8942 6ACC                                    l7968 2FD6  
                                  l7896 494E                                    l8936 6A52  
                                  l9818 A3E2                                    l9914 4E8C  
                                  l9922 4E9E                                    l8946 6B34  
                                  l8938 6A6A                                    l9908 4DF0  
                                  l8956 6BD0                                    l8972 6EB2  
                                  l8974 6F1E                                    STR_1 FF51  
                                  STR_2 FFA3                                    STR_3 FFD1  
                                  l9954 78AA                                    l9946 787E  
                                  l9874 4A4A                                    STR_4 FF1E  
                                  STR_5 FE50                                    l9884 4B68  
                                  l9868 4A1A                                    STR_6 FE50  
                                  STR_7 FE50                                    l9958 78BE  
                                  STR_8 FF0C                                    STR_9 FDB2  
                                  l9896 4C74                                    l9888 4C42  
                                  l9992 A84A                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 68FC                                    u5120 AA12  
                                  u5130 AA14                                    u6020 694E  
                                  u5230 3996                                    u6110 6DB4  
                                  u5240 39B6                                    u7000 85B4  
                                  u5241 39B0                                    u5090 9994  
                                  u6130 6E06                                    u6050 6C42  
                                  u7010 85E6                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u5430 3CCC                                    u5350 3B2E  
                                  u6310 48CC                                    u6070 6C98  
                                  u7030 869E                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u5520 3D62  
                                  u5280 3A46                                    u6080 6CCA  
                                  _PMD4 0039C4                                    u5097 9986  
                                  _PMD5 0039C5                                    u5450 3CE6  
                                  u5290 3A66                                    u5258 39B8  
                                  u7050 A356                                    u6090 6CFC  
                                  _PMD6 0039C6                                    u5355 3B1E  
                                  _PMD7 0039C7                                    u7060 A376  
                                  u5620 A4D0                                    u5285 3A36  
                                  u5390 3C58                                    u6350 4928  
                                  u6270 4842                                    u5630 7AB0  
                                  u6360 4962                                    u8200 6A22  
                                  u5800 5C82                                    u5720 9DD2  
                                  u5560 A9E2                                    u6530 34B2  
                                  u5490 3D42                                    u6370 499E  
                                  u5730 9DD4                                    u5570 A9E4  
                                  u6355 4918                                    u5635 7AA6  
                                  u6460 2FC4                                    u9004 4A86  
                                  u5900 AA42                                    u8220 6B7A  
                                  u5820 5D5A                                    u9005 4A80  
                                  u5805 5C78                                    u5910 AA44  
                                  u8230 6B7C                                    u6710 8AC4  
                                  u5750 5B56                                    u8310 6FE6  
                                  u5495 3D32                                    u9024 4C5C  
                                  u6640 84B8                                    u5680 7B7E  
                                  u5760 5BA2                                    u8320 7014  
                                  u9025 4C56                                    u5825 5D50  
                                  u6570 350E                                    u5930 6752  
                                  u6730 8B38                                    u5690 7B80  
                                  u5850 A652                                    u6475 3158  
                                  u5675 7B60                                    u5755 5B4C  
                                  u8315 6FE0                                    u6580 3548  
                                  u9044 4D2A                                    u6660 8552  
                                  u5860 A654                                    u6485 3220  
                                  u9045 4D24                                    u8317 6FD2  
                                  u6590 358E                                    u9070 4D54  
                                  u5950 67A8                                    u6830 A48E  
                                  u6910 7FAA                                    u8270 6F4C  
                                  u5870 9D4E                                    u6575 34FE  
                                  u6495 33E8                                    u8327 7006  
                                  u9064 4D4C                                    u6840 7EBE  
                                  u5880 9D50                                    u9320 9C86  
                                  u9065 4D46                                    u5961 67B2  
                                  u5785 5BDC                                    u9090 785C  
                                  u5970 67EC                                    u6770 94F0  
                                  u6930 7FD4                                    u6850 7ED2  
                                  u5786 5BE2                                    u5787 5BF0  
                                  u9180 AEDC                                    u5980 681E  
                                  u6860 7F0C                                    u9308 9C42  
                                  u6845 7EB4                                    u8277 6F3E  
                                  u6941 7BA6                                    u6950 7BE0  
                                  u6960 7C12                                    u8705 A68E  
                                  u6865 7F02                                    u9186 AEDE  
                                  u8810 73CA                                    u9338 9C88  
                                  u9290 9C40                                    u6980 7CF0  
                                  u8850 9FF8                                    _PLLR 01CEE0  
                                  u8925 B0C8                                    u8926 B0CA  
                                  u8935 B0B8                                    u8936 B0BA  
                                  u8875 A02C                                    u8876 A02E  
                                  u8868 9FFA                                    u8964 4A34  
                                  u8965 4A2E                                    u8984 4A64  
                                  u8985 4A5E                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR AAD4  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FD25                                    _cp_l FD21  
                                  _atoi 6976                                    _ctoa 9C9E  
                                  _main 21F0                                    _dtoa 4EC4  
                                  _nanf A116                                    _seed 01F3  
                                  _prec 0023                                    _nout 00C0  
                                  _spin FC9D                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6438                                    btemp 0001  
                                  _utoa 5E0C                                    _xtoa 5344  
                __end_of_check_adc_scan B162                           ___fpclassifyf 7A02  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit AF30               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize A5D4             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr AD5C                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR B10A  
                      __end_of_INT1_ISR A7DE          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9878           __end_of_OSCILLATOR_Initialize B088  
                                 l10104 9C54                                   l10034 A7FE  
                                 l10070 86EE                                   l10072 86FC  
                                 l10064 86D2                                   l10066 86E2  
                                 l11210 630C                                   l10402 9358  
                                 l10236 AFDC                                   l10092 87E2  
                                 l10084 8768                                   l10068 86E8  
                                 l10076 8704                                   l11140 895A  
                                 l11204 62A2                                   l10172 9A60  
                                 l10078 8730                                   l11230 9CBC  
                                 l11302 52FA                                   l10502 8FAE  
                                 l10248 AAF6                                   l12112 3EC6  
                                 l11152 99D0                                   l11232 9CE8  
                                 l12040 974E                                   l10176 9AC8  
                                 l10602 9E62                                   l12130 4196  
                                 l10274 A742                                   l11162 8B92  
                                 l11402 0554                                   l12042 9790  
                                 l11218 63BA                                   l12026 98D0  
                                 l10514 900A                                   l12140 42CA  
                                 l12116 3F08                                   l10292 A782  
                                 l11156 9A0E                                   l11172 8C08  
                                 l11316 00AC                                   l10452 95C2  
                                 l10524 907A                                   l12142 42D2  
                                 l12126 4118                                   l11166 8BBA  
                                 l11182 93B0                                   l11510 0CBA  
                                 l11422 05F6                                   l11414 0594  
                                 l11406 057C                                   l11350 022C  
                                 l10608 9E72                                   l12136 4240  
                                 l11176 8C52                                   l11168 8BCC  
                                 l11264 4FDC                                   l11256 4F92  
                                 l11440 06B8                                   l11424 0602  
                                 l11408 058E                                   l11328 00F0  
                                 l11336 0146                                   l12072 8C9E  
                                 l10456 9600                                   l12320 2238  
                                 l12146 42E8                                   l11450 077A  
                                 l11346 01EA                                   l11354 0258  
                                 l10388 7E66                                   l11268 4FFA  
                                 l11460 0926                                   l11444 06F0  
                                 l11380 0396                                   l11364 02FC  
                                 l11372 032A                                   l11348 0216  
                                 l10396 92B2                                   l12500 2D46  
                                 l12324 2256                                   l11278 520C  
                                 l11518 0D24                                   l11526 0D90  
                                 l11534 0EA2                                   l11390 04D2  
                                 l11710 5378                                   l11198 61E4  
                                 l12270 71F4                                   l12326 2268  
                                 l12318 2230                                   l10496 5A94  
                                 l11560 0FD6                                   l11384 0406  
                                 l12256 70CC                                   l11298 52BE  
                                 l11562 0FF0                                   l11546 0F3A  
                                 l11482 0B12                                   l11474 0A48  
                                 l11386 0470                                   l11642 65C4  
                                 l11634 6558                                   l11618 64A4  
                                 l11730 544E                                   l11722 53EE  
                                 l12514 2D8E                                   l12506 2D58  
                                 l12434 2780                                   l10596 A718  
                                 l11572 1092                                   l11484 0B34  
                                 l11652 667A                                   l11716 53B2  
                                 l11804 1326                                   l12508 2D70  
                                 l12436 27AE                                   PRLOCK 0039EF  
                                 l11582 10E2                                   l11638 6594  
                                 l11670 5E40                                   l11830 14F8  
                                 l11806 1360                                   l12518 2DB4  
                                 l11656 66B6                                   l11648 664E  
                                 l11912 1BDA                                   l11808 1376  
                                 l12528 2E08                                   l12472 2B3C  
                                 l12456 2806                                   l12448 27E2  
                                 l12376 241A                                   l11498 0C32  
                                 l11770 56B4                                   l11746 5544  
                                 l11754 55CA                                   l11922 1C88  
                                 l11826 14A8                                   l12482 2CB8  
                                 l12490 2D02                                   l11932 1DAA  
                                 l11828 14E2                                   l12468 2ADA  
                                 l12484 2CE2                                   l11598 119A  
                                 l11678 5E9C                                   l11942 1E60  
                                 l11846 165C                                   l11688 6092  
                                 l11880 198E                                   l11864 17E0  
                                 l11856 16F4                                   l11970 2114  
                                 l11980 2172                                   l11956 1FDC  
                                 l11892 1A7A                                   l11868 1834  
                                 l11976 216E                                   l11888 1A46  
                                 l11986 2192                         __end_of___aodiv 6976  
                          _Volts_to_SOC 9A58                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 3E00  
                                 _ADCLK 003EFF                         __end_of___aomod 6E2A  
                                 _ADPCH 003EF1                         __end_of___fldiv 4A18  
                                 _ADREF 003EFD                         __end_of___awdiv 8580  
                       __end_of___flneg A4BC                                   STR_10 FDFA  
                                 STR_11 FE10                                   STR_20 FF62  
                                 STR_12 FF2F                                   STR_13 FF40  
                                 STR_21 FE87                                   STR_30 FF84  
                                 STR_14 FF73                                   STR_22 FEAD  
                                 STR_31 FF84                                   STR_23 FE9A  
                                 STR_15 FDE4                                   STR_32 FF62  
                                 STR_40 FFBE                                   STR_24 FEF9  
                                 STR_16 FD7E                                   STR_41 FFBE  
                                 STR_33 FFFC                                   STR_25 FED3  
                                 STR_17 FD98                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFF9                                   STR_42 FF94  
                                 STR_18 FF84                                   STR_26 FEE6  
                                 STR_43 FF94                                   STR_27 FEC0  
                                 STR_44 FF94                                   STR_60 FFDB  
                                 STR_36 FFB2                                   STR_28 FE3A  
                       __end_of___awmod 8B66                                   STR_61 FFE3  
                                 STR_37 FFC8                                   STR_29 FE26  
                                 STR_45 FDCC                                   STR_54 FD7D  
                                 STR_70 FFF0                                   STR_38 FE61  
                                 STR_39 FE61                                   STR_47 FE74  
                                 STR_55 FD29                                   STR_80 FFF3  
                                 STR_64 FFEA                                   STR_56 FFD7  
                                 STR_48 FE4E                                   _ADRPT 003EEC  
                                 STR_73 FFED                                   STR_57 FFDF  
                                 STR_66 FFEA                                   STR_75 FFED  
                                 STR_83 FFF6                                   STR_68 FFF0  
                                 STR_85 FFF6                                   STR_78 FFF3  
                                 STR_87 FFE7                         __end_of___flmul 3644  
                                 STR_89 FFE7                         __end_of___flsub A548  
                       __end_of___fltol 7FFE                                   u10110 89CA  
                                 u11000 6600                                   u11100 60FE  
                                 u10310 4F78                                   u11030 66DC  
                                 u11110 6102                                   u10230 642E  
                                 u11007 65F2                                   u10400 5294  
                                 u11200 54FA                                   u10090 894E  
                                 u10330 4FC8                                   u10170 942A  
                                 u11050 5E26                                   u11210 54FC  
                                 u11130 535E                                   u10340 5220  
                                 u10260 4EF4                                   u10270 4EF6  
                                 u10510 02A6                                   u11230 55C6  
                                 u10351 5250                                   u10360 5266  
                                 u10520 02A8                                   u10440 00DA  
                                 u11240 55E6                                   u11160 5446  
                                 u11400 1542                                   u10361 5264  
                                 u10177 941C                                   u11081 60D4  
                                 u10370 527A                                   u10290 4F66  
                                 u11090 60EA                                   u11170 549A  
                                 u11410 1568                         __end_of___lodiv 7D18  
                                 u11091 60E8                                   u11251 5616  
                                 u11235 55A8                                   u10380 527E  
                                 u10620 05C6                                   u11260 562C  
                                 u11180 549C                                   u11340 13BE  
                                 u11261 562A                                   u10470 0194  
                                 u11270 5640                                   u11510 1B34  
                                 u11350 13C0                                   u10560 050E  
                                 u10480 0196                                   u11280 5644  
                                 u11600 2064                                   u11520 1B36  
                                 u11360 13E6                                   u10730 0A18  
                                 _U1P1H 003DED                                   u10660 0648  
                                 u11460 1748                                   u11620 98B0  
                                 _U1P2H 003DEF                                   u10910 116E  
                                 u10830 0EE4                                   u10590 0562  
                                 u11390 1540                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u10920 1170                                   u11480 18BC  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11810 7244                                   _U1P3L 003DF0  
                                 u11580 1EB4                                   u11820 7246  
                                 _U2P1L 003DD4                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10890 10B8  
                                 _U2P3L 003DD8                                   u10990 65BA  
                                 u11870 254C                                   _T5CLK 003F9D  
                       __end_of___lomod 86C0                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003D                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result A818  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR B194                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 8432  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A2E6                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR B016                            _DMA1CON1bits 003BFD  
                                 _fabsf 9674                                   _flags 0025  
              __size_of_calc_model_data 03A2                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 892A  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha A65E  
                                 _fputs 99C0                         __end_of_isdigit AA4E  
                       __end_of_ivln2_h FD21                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand A8F2                                   _width 0021  
                                 _putch AFE0                         __end_of_islower A9EE  
                       __end_of_isspace A38A                _INT1_SetInterruptHandler ACBA  
                       __end_of_isupper AA1E                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler AC42  
           _UART1_SetRxInterruptHandler AC1A                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 8FA2                         __end_of_tolower 9E2E  
                       __end_of_strncmp 704A                         __end_of_toupper 9DAA  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr AD84  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize A58E  
                 __end_of_ringBufS_init ABA2                         __initialization 8D8A  
                     _UART2_rx_vect_isr ADAC                            __end_of_cp_h FD29  
                          __end_of_cp_l FD25                            __end_of_atoi 6BEA  
                          __end_of_ctoa 9D26                            __end_of_main 2E1A  
                          __end_of_dtoa 5344                            __end_of_nanf A178  
                          __end_of_spin FD15                            __end_of_stoa 66F6  
                          __end_of_utoa 614C                            __end_of_xtoa 56FE  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0038  
               __end_of_TMR2_Initialize B046                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button A720                _TMR5_SetInterruptHandler AC6A  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr B124  
                   ??_UART2_rx_vect_isr 003D                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize AB00                         _PWM8_Initialize B05C  
                      _UART1_Initialize A548                       _UART2_tx_vect_isr AD84  
                    _UART2_Transmit_ISR AAD4                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A050                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue A65E                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0038  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 A2D8  
                                _RB6PPS 003A0E                                  i1l1205 839A  
                  _start_switch_handler AEF2                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize A61A  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B0EC                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u922_20 86F8  
                                u922_21 86F2                                  u926_24 87D8  
                                u926_25 87D4                                  u919_28 86D8  
                                u952_48 AEBC                                  u944_48 AE98  
                                u891_20 A962                                  u946_28 AE2C  
                                u891_26 A964                                  u955_28 AE50  
                  __size_of_hid_display 0102                                  u980_44 9E92  
                                u980_45 9E8C                        __end_of___xxtofl 7460  
 __end_of_ADCC_DischargeSampleCapacitor B15A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B152                __end_of_send_lcd_cmd_dma A338  
                       _TMR3_WriteTimer A760                     ??_UART2_tx_vect_isr 003D  
             __end_of_UART2_rx_vect_isr ADD4              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B11A                        _UART2_Initialize A178  
                                _WaitMs A886                         _conv_raw_result 4A18  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 816E                                  ___fleq 943C  
                     _ADCC_ThresholdISR 9F80                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 9AEA                                  _efgtoa 0000  
                                _floorf 5AA0                      ?_ADCC_ThresholdISR 0038  
                                _memset 614C                    __size_of_help_button 0038  
                                clear_0 8E1E                                  clear_1 8E32  
                                clear_2 8E44                                  clear_3 8E50  
                                clear_4 8E5C                                  clear_5 8E68  
                                clear_6 8E74                                  clear_7 8E80  
             __end_of_port_data_dma_ptr B12E                                  _printf A0B4  
                    _eaDogM_WriteString 9878                                  _strcpy 9368  
                             ?_ADCC_ISR 0038                                  _strlen 991E  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize 9F16                          _PMD_Initialize B088  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr ADAC  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan A0B4  
                          __mediumconst FB3C                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A230                        __end_of_spinners 9368  
                      __end_of_vfprintf 97CE                              _StartTimer A6A0  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize A5D4  
                     _SYSTEM_Initialize A42A                              __accesstop 0060  
               __end_of__initialization 8E92                               ?_INT0_ISR 0038  
                             ?_INT1_ISR 0038                    __end_of_display_help B172  
                  __end_of_display_info B16A               __end_of_CLKREF_Initialize B124  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer A720                   _set_temp_display_help B0CE  
                      _clear_hid_pflags ADF8                   __end_of_TMR3_CallBack AE88  
             __end_of_ADCC_ThresholdISR 9FEA                      __size_of_calc_bsoc 069E  
                __end_of_ringBufS_flush 9B7C                          __pcstackCOMRAM 0038  
                            ___inthi_sp 10C2                              ___intlo_sp 1861  
                          __pidataBANK0 A850                            __pidataBANK1 90A4  
                          __pidataBANK2 9500             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 9722                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8A4E  
                         __end_of_fputs 9A58                           __end_of_srand A926  
                 __end_of_TMR5_CallBack AE64                           __end_of_putch AFFA  
               __end_of_PWM8_Initialize B072                 __end_of_TMR6_Initialize AB2A  
                     _adc_int_t_handler 9E2E                  __end_of_PMD_Initialize B09C  
                            __end_of_bp FD1D                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack AED0             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B13C  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan B17A  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize A474  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer A7A0                              __pbssBANK0 0060  
                            __pbssBANK1 01F3                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 704A  
               __end_of_conv_raw_result 4EC4                      __size_of_esr_check 01E6  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone ABCA  
                      _DMA1_DMADCNT_ISR B130                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma A98E  
                 __end_of_wait_lcd_done AFC4        __end_of_TMR3_SetInterruptHandler ACBA  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler AC6A  
                            ??_TMR3_ISR 03E4                 __end_of_ADCC_Initialize 9F80  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 9EAC  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler AD32  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler AD0A  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR AFC4  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan B180                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR B10C                                 _U1ERRIE 003DFA  
                               u1170_20 4238                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1172_20 42E0  
                               _U2ERRIE 003DE2                                 u1174_28 AE74  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 449E                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch AA7C                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer A760                 __size_of_switch_handler 013C  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one B0CE  
            __end_of_set_load_relay_two B0BE       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 7D18  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim B016  
                               __Lparam 0000                __end_of_UART1_Initialize A58E  
                     __end_of_hid_input 9C9E                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 66F6                                 ___fladd 3644  
                               ___aomod 6BEA                                 ___fldiv 449E  
                               ___awdiv 8432                                 ___flneg A474  
                               ___awmod 8A4E                                 ___flmul 2E1A  
                               ___flsub A502                                 ___fltol 7E8C  
                               ___lodiv 7B98                                 ___lomod 8580  
             __end_of_UART1_Receive_ISR AFE0                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 9282  
                               __pcinit 8D8A                __end_of_mode_lamp_bright B0FA  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand B0DE                                 __ramtop 2000  
                               __ptext0 21F0                                 __ptext1 ADD4  
                               __ptext2 AEF2                                 __ptext3 A8F2  
                               __ptext4 9282                                 __ptext5 A98E  
                               __ptext6 9198                                 __ptext7 AB2A  
                               __ptext8 AB52                                 __ptext9 AF12  
                     __end_of_esr_check 7846                       _UART2_Receive_ISR AF8A  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                               us603999 6960                   _OSCILLATOR_Initialize B072  
                               us614999 6E18                            __size_of_abs 0046  
                               us704999 86B0                            __size_of_pad 0114  
                     __end_of_init_bsoc 816E                                 _isalpha A61A  
                               _isdigit AA1E                                 _ivln2_h FD1D  
                             _T3CONbits 003FA6                                 _mode_sw 002E  
                               us699999 7D02                       __end_of_lp_filter 7A02  
                               _islower A9BE                                 _isspace A338  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize A1D6                                 _isupper A9EE  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 8E98  
                               _tolower 9DAA                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 6E2A                                 _toupper 9D26  
                  end_of_initialization 8E92               __size_of_convert_adc_data 00B8  
                    _check_enter_button A6E0                               i1u1183_20 8390  
   __end_of_UART2_SetRxInterruptHandler AC1A             _UART2_SetRxInterruptHandler ABF2  
                     __end_of_set_vterm AF4E                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd B18C  
             __end_of_UART2_Receive_ISR AFA8                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003E  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc B192                _TMR3_SetInterruptHandler AC92  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler AC42  
                          _display_help B16A                   _TMR5_InterruptHandler 00A5  
                          _display_info B162    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags AE1C                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler AD5A             _ADCC_SetADIInterruptHandler AD32  
                            _update_lcd 8C7A                         _calc_model_data 56FE  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc ADD4                         _DMA1_Initialize 9EAC  
                            _start_bsoc AED0                         _SPI1_Initialize B046  
                 __end_of_get_vterm_ptr AA7C                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs A8BC  
          __end_of_INTERRUPT_Initialize A050                              _vterm_dump 87FC  
                        __end_of___flge 82D0                          __end_of___fleq 9500  
  __end_of_INT0_DefaultInterruptHandler B1A0   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler B19E              __size_of_UART1_Receive_ISR 001C  
                       _DMA2_Initialize A230                           __pidataBIGRAM 7460  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 5E0C  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 007A  
                        __end_of_memset 6438                          __end_of_printf A116  
              __end_of_DMA1_DMADCNT_ISR B13A             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack AEAC                          __end_of_strcpy 943C  
                        __end_of_strlen 99C0                     start_initialization 8D8A  
  __end_of_TMR5_DefaultInterruptHandler A98E   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler A95A         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs A502                   __end_of_INT1_CallBack AE40  
             __size_of_set_display_info 001E                             __end_of_pad 8C7A  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd AB7A  
                        _switch_handler 86C0           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 006C  
                 __end_of___fpclassifyf 7B98                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR B11A                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR B148                     __end_of_hid_display 90A4  
            __end_of_send_port_data_dma A3DC                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone ABA2                           _ringBufS_init AB7A  
                           __pdataBANK0 00C4                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize A95A  
               __end_of_calc_model_data 5AA0                     __end_of_help_button A850  
       __end_of_eaDogM_WriteStringAtPos A8F2                     __end_of_BVSOC_TABLE FC0D  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize 9F16                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler AD0A  
                         __pcstackBANK3 03E4                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 87FC  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B05C  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FC9D                        _convert_adc_data 95BC  
                             _calc_bsoc 3E00               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9198                  __end_of_DMA1_DMAOR_ISR B152  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A28A                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize 9B7C                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B186                           __pmediumconst FB3C  
                             __ptext100 56FE                               __ptext101 B18C  
                             __ptext110 ABF2                               __ptext102 AED0  
                             __ptext111 A548                               __ptext103 7846  
                             __ptext120 B046                               __ptext112 AC1A  
                             __ptext104 A502                               __ptext121 B05C  
                             __ptext113 AB00                               __ptext105 3644  
                             __ptext130 A230                               __ptext122 B088  
                             __ptext114 AC42                               __ptext106 2E1A  
                             __ptext131 9EAC                               __ptext123 9B7C  
                             __ptext115 A58E                               __ptext107 A42A  
                             __ptext140 A28C                               __ptext132 B11A  
                             __ptext124 B072                               __ptext116 AC6A  
                             __ptext108 A178                               __ptext141 A720  
                             __ptext133 9F16                               __ptext125 9FEA  
                             __ptext117 A5D4                               __ptext109 ABCA  
                             __ptext150 B124                               __ptext142 AE40  
                             __ptext134 AD0A                               __ptext126 B172  
                             __ptext118 AC92                               __ptext151 B0FC  
                             __ptext143 A95A                               __ptext135 AD32  
                             __ptext127 A926                               __ptext119 B02E  
                             __ptext160 AD5C                               __ptext152 AE88  
                             __ptext144 82D0                               __ptext136 A7A0  
                             __ptext128 ACBA                               __ptext161 AFC4  
                             __ptext153 B19E                               __ptext145 A760  
                             __ptext137 AE1C                               __ptext129 ACE2  
                             __ptext170 B130                               __ptext162 AD84  
                             __ptext154 B194                               __ptext146 AE64  
                             __ptext138 B19A                               __ptext171 B13C  
                             __ptext163 AAD4                               __ptext155 AAA8  
                             __ptext147 B19C                               __ptext139 86C0  
                             __ptext172 B148                               __ptext164 ADAC  
                             __ptext156 9E2E                               __ptext148 3E00  
                             __ptext173 0000                               __ptext165 AF8A  
                             __ptext157 B1A0                               __ptext149 A38A  
                             __ptext166 AFFC                               __ptext158 B1A2  
                             __ptext167 AEAC                               __ptext159 9F80  
                             __ptext168 A3DC                               __ptext169 B10C  
                             _hid_input 9C0E                      __end_of_StartTimer A6E0  
                    _set_load_relay_one B0BE                      _set_load_relay_two B0AE  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR AAA8  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 7660                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 7FFE  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 7846                             _hid_display 8FA2  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 9FEA                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0038  
                              _INT0_ISR B0FC                                _INT1_ISR A7A0  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 02E5  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack AE64  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                                i2u991_48 ADC0  
                              i2u983_48 AAC0                                i2u985_48 9FB6  
                              i2u985_49 9FCA                                i2u987_48 AD70  
                              i2u989_48 AD98                               _set_vterm AF30  
                   __size_of_update_lcd 0110                             _help_button A818  
                              _TMR3_ISR 82D0                             _BVSOC_TABLE FB3D  
                              _TMR5_ISR A28C                                _TMR6_ISR AFFC  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack AE40  
                            _ADCON0bits 003EF8                      __end_of_check_help 725C  
                             _start_lcd B186                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack AEAC  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B18C                        _set_display_info AF4E  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 8D9E  
                             copy_data1 8DC4                               copy_data2 8DE6  
                             copy_data3 8E08                _INT0_SetInterruptHandler ACE2  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler ABF2  
           _UART2_SetTxInterruptHandler ABCA                            _uart1RxCount 0035  
                          _uart2RxCount 002F                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done AFA8  
                          _send_lcd_cmd AB52                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B1A2                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch AAA8                   __end_of_DMA1_DMAA_ISR B146  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 725C  
                     ?_DMA1_DMADCNT_ISR 0038             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand B0EC  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 003E  
                              __ptext10 AB7A                                __ptext11 7FFE  
                              __ptext20 B152                                __ptext12 9A58  
                              __ptext21 B17A                                __ptext13 8FA2  
                              __ptext30 8E98                                __ptext22 B15A  
                              __ptext14 9C0E                                __ptext31 AA4E  
                              __ptext23 B0AE                                __ptext15 AA7C  
                              __ptext40 B186                                __ptext32 A886  
                              __ptext24 B0BE                                __ptext16 7660  
                              __ptext41 9AEA                                __ptext33 8C7A  
                              __ptext25 B0DE                                __ptext17 A7DE  
                              __ptext50 5E0C                                __ptext42 614C  
                              __ptext34 A8BC                                __ptext26 95BC  
                              __ptext18 A050                                __ptext51 8580  
                              __ptext43 A0B4                                __ptext35 A2E6  
                              __ptext27 ADF8                                __ptext19 B09C  
                              __ptext60 7A02                                __ptext52 7B98  
                              __ptext44 9722                                __ptext36 AFA8  
                              __ptext28 704A                                __ptext61 7E8C  
                              __ptext53 6E2A                                __ptext45 1244  
                              __ptext37 A1D6                                __ptext29 87FC  
                              __ptext70 9C9E                                __ptext62 A474  
                              __ptext54 6438                                __ptext46 5344  
                              __ptext38 9878                                __ptext71 8B66  
                              __ptext63 943C                                __ptext55 0000  
                              __ptext47 9D26                                __ptext39 B180  
                              __ptext80 AF30                                __ptext72 991E  
                              __ptext64 8A4E                                __ptext56 9DAA  
                              __ptext48 A9BE                                __ptext81 B0CE  
                              __ptext73 99C0                                __ptext65 8432  
                              __ptext57 A9EE                                __ptext49 A61A  
                              __ptext90 B16A                                __ptext82 AF4E  
                              __ptext74 892A                                __ptext66 4EC4  
                              __ptext58 9368                                __ptext91 A6E0  
                              __ptext83 B016                                __ptext75 AFE0  
                              __ptext67 A4BC                                __ptext59 5AA0  
                              __ptext92 7D18                                __ptext84 B0EC  
                              __ptext76 97CE                                __ptext68 6BEA  
                              __ptext93 9674                                __ptext85 A65E  
                              __ptext77 6976                                __ptext69 66F6  
                              __ptext94 4A18                                __ptext86 A818  
                              __ptext78 A338                                __ptext95 A116  
                              __ptext87 ABA2                                __ptext79 AA1E  
                              __ptext96 AF6C                                __ptext88 A6A0  
                              __ptext97 725C                                __ptext89 B162  
                              __ptext98 449E                                __ptext99 816E  
                      __size_of_isupper 0030                                us1025999 4EDE  
                              us1106999 5E72                                us1115999 53C4  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1094999 644A                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 97CE  
                  __end_of_Volts_to_SOC 9AEA                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 0C2A  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0038  
                 __end_of_init_port_dma A9BE                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00EC                      ??_DMA1_DMASCNT_ISR 003E  
          __end_of_ADCC_StartConversion B0AE                                _spi_link 0060  
                              _wdtdelay A1D6              __end_of_UART2_Transmit_ISR AB00  
                              _spinners 9282                                _vfprintf 9722  
              __end_of_convert_adc_data 9674              __end_of_PWM8_LoadDutyValue A6A0  
  __end_of_TMR3_DefaultInterruptHandler B19E   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler B19C    __end_of_INT1_DefaultInterruptHandler B19C  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler B19A  
                    _send_port_data_dma A38A                           ??_Default_ISR 0038  
                           _uart1RxHead 0037                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0031                             _uart1RxTail 0036  
                        _get_raw_result AF6C                             _uart2TxHead 0034  
                           _uart2RxTail 0030                               spinners@s 0074  
                           _uart2TxTail 0033                            _wait_lcd_set B180  
                      Volts_to_SOC@slot 002D                      _EXT_INT_Initialize A926  
  __end_of_TMR6_DefaultInterruptHandler A42A   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler A3DC    __end_of_ADCC_DefaultInterruptHandler B1A2  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler B1A0  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long AB2A          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help B0DE                   __end_of_calc_ror_data 7E8C  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 991E  
                 __end_of_mode_lamp_dim B02E                 __end_of_adc_int_handler B1A4  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 8D8A                  _uart2TxBufferRemaining 0032  
                    __end_of_static_soc ADF8                      __end_of_start_bsoc AEF2  
                        _FVR_Initialize B172                  __end_of_get_raw_result AF8A  
                      _send_lcd_cmd_dma A2E6                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler ACE2  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003E  
             __end_of_send_lcd_cmd_long AB52                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR B19A          __end_of_PIN_MANAGER_Initialize 9C0E  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 892A  
               _eaDogM_WriteStringAtPos A8BC                           _get_vterm_ptr AA4E  
                        _check_adc_scan B15A               __size_of_UART2_Initialize 005E  
