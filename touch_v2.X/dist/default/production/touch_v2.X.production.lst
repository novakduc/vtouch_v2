

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jan 18 05:21:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=4,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=4,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=4,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=4,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=4,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=4,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=4,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   208                           	psect	text184,global,reloc=4,class=CODE,delta=1
   209                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   210                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   211  0000                     
   212                           ; Version 2.10
   213                           ; Generated 31/07/2019 GMT
   214                           ; 
   215                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   216                           ; All rights reserved.
   217                           ; 
   218                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   219                           ; 
   220                           ; Redistribution and use in source and binary forms, with or without modification, are
   221                           ; permitted provided that the following conditions are met:
   222                           ; 
   223                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   224                           ;        conditions and the following disclaimer.
   225                           ; 
   226                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   227                           ;        of conditions and the following disclaimer in the documentation and/or other
   228                           ;        materials provided with the distribution.
   229                           ; 
   230                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   231                           ;        software without specific prior written permission.
   232                           ; 
   233                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   234                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   235                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   236                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   237                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   238                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   239                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   240                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   241                           ; 
   242                           ; 
   243                           ; Code-generator required, PIC18F57K42 Definitions
   244                           ; 
   245                           ; SFR Addresses
   246  0000                     
   247 ;;_main$3774	offset	0
   248 ;;_main$3770	offset	2
   249 ;;_esr_temp	offset	4
   250 ;;_i_esr	offset	8
   251 ;;_shape	offset	10
   252 ;;_inp_index	offset	11
   253 ;;_k	offset	12
   254 ;;_j	offset	13
   255 ;;_i	offset	14
   256 ;;_mode	offset	15
   257 ;;_i_ror	offset	16
   258 ;;_s	offset=-2 (param)
   259 ;;_c	offset	0
   260 ;;_shape	offset=-1 (param)
   261 ;;_reset	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_i	offset=-1 (param)
   277 ;;_fsm	offset=-1 (param)
   278 ;;_channel	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_mode	offset=-1 (param)
   281 ;;_cmd	offset=-1 (param)
   282 ;;_i	offset	0
   283 ;;_h	offset=-2 (param)
   284 ;;_flipper	offset=-1 (param)
   285 ;;_f	offset	0
   286 ;;_ap	offset	6
   287 ;;_s	offset=-3 (param)
   288 ;;_fmt	offset=-5 (param)
   289 ;;_line	offset=-1 (param)
   290 ;;_vterm	offset=-2 (param)
   291 ;;_numMilliseconds	offset=-2 (param)
   292 ;;_vterm	offset=-1 (param)
   293 ;;_row	offset	0
   294 ;;_r	offset=-1 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_strPtr	offset=-4 (param)
   297 ;;_strPtr	offset=-1 (param)
   298 ;;_delay	offset=-4 (param)
   299 ;;_strPtr	offset=-1 (param)
   300 ;;_strPtr	offset=-2 (param)
   301 ;;__this	offset=-2 (param)
   302 ;;_clearBuffer	offset=-3 (param)
   303 ;;_s	offset	0
   304 ;;_k	offset	2
   305 ;;_dest	offset=-2 (param)
   306 ;;_c	offset=-4 (param)
   307 ;;_n	offset=-6 (param)
   308 ;;_ap	offset	0
   309 ;;_fmt	offset=-3 (param)
   310 ;;_cfmt	offset	0
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_vfpfcnvrt$5738	offset	0
   315 ;;_vfpfcnvrt$5749	offset	2
   316 ;;_vfpfcnvrt$5737	offset	4
   317 ;;_llu	offset	6
   318 ;;_ll	offset	14
   319 ;;_f	offset	22
   320 ;;_ct	offset	26
   321 ;;_cp	offset	29
   322 ;;_c	offset	31
   323 ;;_fp	offset=-2 (param)
   324 ;;_fmt	offset=-4 (param)
   325 ;;_ap	offset=-6 (param)
   326 ;;_xtoa$5723	offset	0
   327 ;;_xtoa$5722	offset	2
   328 ;;_n	offset	4
   329 ;;_c	offset	12
   330 ;;_i	offset	14
   331 ;;_w	offset	16
   332 ;;_p	offset	18
   333 ;;_fp	offset=-2 (param)
   334 ;;_d	offset=-10 (param)
   335 ;;_x	offset=-11 (param)
   336 ;;_toupper$6529	offset	0
   337 ;;_c	offset=-2 (param)
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_n	offset	0
   341 ;;_i	offset	8
   342 ;;_w	offset	10
   343 ;;_p	offset	12
   344 ;;_fp	offset=-2 (param)
   345 ;;_d	offset=-10 (param)
   346 ;;_counter	offset	0
   347 ;;_dividend	offset=-8 (param)
   348 ;;_divisor	offset=-16 (param)
   349 ;;_quotient	offset	0
   350 ;;_counter	offset	8
   351 ;;_dividend	offset=-8 (param)
   352 ;;_divisor	offset=-16 (param)
   353 ;;_r	offset	0
   354 ;;_l	offset	2
   355 ;;__l	offset=-2 (param)
   356 ;;__r	offset=-4 (param)
   357 ;;_n	offset=-6 (param)
   358 ;;_nuls	offset	0
   359 ;;_l	offset	7
   360 ;;_p	offset	9
   361 ;;_cp	offset	11
   362 ;;_w	offset	13
   363 ;;_i	offset	15
   364 ;;_fp	offset=-2 (param)
   365 ;;_s	offset=-4 (param)
   366 ;;_efgtoa$5695	offset	0
   367 ;;_efgtoa$5694	offset	2
   368 ;;_efgtoa$5693	offset	4
   369 ;;_efgtoa$5689	offset	6
   370 ;;_efgtoa$5685	offset	8
   371 ;;_efgtoa$5684	offset	10
   372 ;;_u	offset	12
   373 ;;_g	offset	16
   374 ;;_l	offset	20
   375 ;;_h	offset	24
   376 ;;_ou	offset	28
   377 ;;_n	offset	32
   378 ;;_e	offset	34
   379 ;;_i	offset	36
   380 ;;_w	offset	38
   381 ;;_p	offset	40
   382 ;;_sign	offset	42
   383 ;;_d	offset	44
   384 ;;_ne	offset	46
   385 ;;_m	offset	48
   386 ;;_pp	offset	50
   387 ;;_t	offset	52
   388 ;;_mode	offset	54
   389 ;;_nmode	offset	55
   390 ;;_fp	offset=-2 (param)
   391 ;;_f	offset=-6 (param)
   392 ;;_c	offset=-7 (param)
   393 ;;_tolower$6514	offset	0
   394 ;;_c	offset=-2 (param)
   395 ;;_c	offset=-2 (param)
   396 ;;_d	offset	0
   397 ;;_s	offset	2
   398 ;;_dest	offset=-2 (param)
   399 ;;_src	offset=-4 (param)
   400 ;;_u	offset	0
   401 ;;_m	offset	4
   402 ;;_e	offset	8
   403 ;;_x	offset=-4 (param)
   404 ;;_u	offset	0
   405 ;;_e	offset	4
   406 ;;_x	offset=-4 (param)
   407 ;;_exp1	offset	0
   408 ;;_sign1	offset	1
   409 ;;_f1	offset=-4 (param)
   410 ;;_f1	offset=-4 (param)
   411 ;;_ff1	offset=-4 (param)
   412 ;;_ff2	offset=-8 (param)
   413 ;;_sign	offset	0
   414 ;;_counter	offset	1
   415 ;;_dividend	offset=-2 (param)
   416 ;;_divisor	offset=-4 (param)
   417 ;;_quotient	offset	0
   418 ;;_sign	offset	2
   419 ;;_counter	offset	3
   420 ;;_dividend	offset=-2 (param)
   421 ;;_divisor	offset=-4 (param)
   422 ;;_dtoa$5661	offset	0
   423 ;;_n	offset	2
   424 ;;_i	offset	10
   425 ;;_s	offset	12
   426 ;;_w	offset	14
   427 ;;_p	offset	16
   428 ;;_fp	offset=-2 (param)
   429 ;;_d	offset=-10 (param)
   430 ;;_a	offset=-2 (param)
   431 ;;_sign	offset	0
   432 ;;_counter	offset	1
   433 ;;_dividend	offset=-8 (param)
   434 ;;_divisor	offset=-16 (param)
   435 ;;_quotient	offset	0
   436 ;;_sign	offset	8
   437 ;;_counter	offset	9
   438 ;;_dividend	offset=-8 (param)
   439 ;;_divisor	offset=-16 (param)
   440 ;;_w	offset	0
   441 ;;_fp	offset=-2 (param)
   442 ;;_c	offset=-3 (param)
   443 ;;_w	offset	0
   444 ;;_i	offset	2
   445 ;;_fp	offset=-2 (param)
   446 ;;_buf	offset=-4 (param)
   447 ;;_p	offset=-6 (param)
   448 ;;_a	offset	0
   449 ;;_s	offset=-2 (param)
   450 ;;_i	offset	0
   451 ;;_c	offset	2
   452 ;;_s	offset=-2 (param)
   453 ;;_fp	offset=-4 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_fp	offset=-4 (param)
   456 ;;_c	offset=-1 (param)
   457 ;;__this	offset=-2 (param)
   458 ;;_c	offset=-3 (param)
   459 ;;_atoi$6245	offset	0
   460 ;;_atoi$6243	offset	2
   461 ;;_atoi$6244	offset	4
   462 ;;_n	offset	5
   463 ;;_neg	offset	7
   464 ;;_s	offset=-2 (param)
   465 ;;_isspace$6294	offset	0
   466 ;;_c	offset=-2 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_vterm	offset=-1 (param)
   469 ;;_new_response_info	offset=-1 (param)
   470 ;;_new_response_info	offset=-1 (param)
   471 ;;_level	offset=-2 (param)
   472 ;;_dutyValue	offset=-2 (param)
   473 ;;_timer	offset=-1 (param)
   474 ;;_timer	offset=-1 (param)
   475 ;;_count	offset=-3 (param)
   476 ;;_h	offset=-2 (param)
   477 ;;_u	offset	0
   478 ;;_x	offset=-4 (param)
   479 ;;_chan	offset=-1 (param)
   480 ;;_to_what	offset=-2 (param)
   481 ;;_u	offset	0
   482 ;;_s	offset=-2 (param)
   483 ;;_index	offset=-1 (param)
   484 ;;_arg	offset	0
   485 ;;_exp	offset	4
   486 ;;_sign	offset=-1 (param)
   487 ;;_val	offset=-5 (param)
   488 ;;_grs	offset	0
   489 ;;_rem	offset	4
   490 ;;_new_exp	offset	8
   491 ;;_aexp	offset	10
   492 ;;_bexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_ff1	offset=-4 (param)
   497 ;;_ff2	offset=-8 (param)
   498 ;;_lp_speed	offset	0
   499 ;;_new	offset=-4 (param)
   500 ;;_bn	offset=-5 (param)
   501 ;;_slow	offset=-6 (param)
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_grs	offset	0
   505 ;;_bexp	offset	1
   506 ;;_aexp	offset	2
   507 ;;_signs	offset	3
   508 ;;_b	offset=-4 (param)
   509 ;;_a	offset=-8 (param)
   510 ;;_prod	offset	0
   511 ;;_grs	offset	4
   512 ;;_temp	offset	8
   513 ;;_bexp	offset	10
   514 ;;_aexp	offset	11
   515 ;;_sign	offset	12
   516 ;;_b	offset=-4 (param)
   517 ;;_a	offset=-8 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_InterruptHandler	offset=-3 (param)
   524 ;;_state	offset	0
   525 ;;_InterruptHandler	offset=-3 (param)
   526 ;;_InterruptHandler	offset=-3 (param)
   527 ;;_InterruptHandler	offset=-3 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_i	offset	0
   530 ;;_sw_value	offset	1
   531 ;;_timerVal	offset=-2 (param)
   532 ;;_light	offset	0
   533 ;;_mode	offset=-1 (param)
   534 ;;_chan	offset=-1 (param)
   535 ;;_to_what	offset=-2 (param)
   536 ;;_u	offset	0
   537 ;;_s	offset=-2 (param)
   538 ;;_index	offset=-1 (param)
   539 ;;_arg	offset	0
   540 ;;_exp	offset	4
   541 ;;_sign	offset=-1 (param)
   542 ;;_val	offset=-5 (param)
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_grs	offset	0
   546 ;;_bexp	offset	1
   547 ;;_aexp	offset	2
   548 ;;_signs	offset	3
   549 ;;_b	offset=-4 (param)
   550 ;;_a	offset=-8 (param)
   551 ;;_prod	offset	0
   552 ;;_grs	offset	4
   553 ;;_temp	offset	8
   554 ;;_bexp	offset	10
   555 ;;_aexp	offset	11
   556 ;;_sign	offset	12
   557 ;;_b	offset=-4 (param)
   558 ;;_a	offset=-8 (param)
   559 ;;_grs	offset	0
   560 ;;_rem	offset	4
   561 ;;_new_exp	offset	8
   562 ;;_aexp	offset	10
   563 ;;_bexp	offset	11
   564 ;;_sign	offset	12
   565 ;;_b	offset=-4 (param)
   566 ;;_a	offset=-8 (param)
   567 ;;_ff1	offset=-4 (param)
   568 ;;_ff2	offset=-8 (param)
   569 ;;_timerVal	offset=-2 (param)
   570 ;;_adj	offset	0
   571 ;;_log_ptr	offset	4
   572 ;;_f	offset	0
   573 ;;_ap	offset	6
   574 ;;_s	offset=-3 (param)
   575 ;;_fmt	offset=-5 (param)
   576 ;;_cfmt	offset	0
   577 ;;_fp	offset=-2 (param)
   578 ;;_fmt	offset=-4 (param)
   579 ;;_ap	offset=-6 (param)
   580 ;;_vfpfcnvrt$5738	offset	0
   581 ;;_vfpfcnvrt$5749	offset	2
   582 ;;_vfpfcnvrt$5737	offset	4
   583 ;;_llu	offset	6
   584 ;;_ll	offset	14
   585 ;;_f	offset	22
   586 ;;_ct	offset	26
   587 ;;_cp	offset	29
   588 ;;_c	offset	31
   589 ;;_fp	offset=-2 (param)
   590 ;;_fmt	offset=-4 (param)
   591 ;;_ap	offset=-6 (param)
   592 ;;_xtoa$5723	offset	0
   593 ;;_xtoa$5722	offset	2
   594 ;;_n	offset	4
   595 ;;_c	offset	12
   596 ;;_i	offset	14
   597 ;;_w	offset	16
   598 ;;_p	offset	18
   599 ;;_fp	offset=-2 (param)
   600 ;;_d	offset=-10 (param)
   601 ;;_x	offset=-11 (param)
   602 ;;_toupper$6529	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_c	offset=-2 (param)
   606 ;;_n	offset	0
   607 ;;_i	offset	8
   608 ;;_w	offset	10
   609 ;;_p	offset	12
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_counter	offset	0
   613 ;;_dividend	offset=-8 (param)
   614 ;;_divisor	offset=-16 (param)
   615 ;;_quotient	offset	0
   616 ;;_counter	offset	8
   617 ;;_dividend	offset=-8 (param)
   618 ;;_divisor	offset=-16 (param)
   619 ;;_r	offset	0
   620 ;;_l	offset	2
   621 ;;__l	offset=-2 (param)
   622 ;;__r	offset=-4 (param)
   623 ;;_n	offset=-6 (param)
   624 ;;_nuls	offset	0
   625 ;;_l	offset	7
   626 ;;_p	offset	9
   627 ;;_cp	offset	11
   628 ;;_w	offset	13
   629 ;;_i	offset	15
   630 ;;_fp	offset=-2 (param)
   631 ;;_s	offset=-4 (param)
   632 ;;_efgtoa$5695	offset	0
   633 ;;_efgtoa$5694	offset	2
   634 ;;_efgtoa$5693	offset	4
   635 ;;_efgtoa$5689	offset	6
   636 ;;_efgtoa$5685	offset	8
   637 ;;_efgtoa$5684	offset	10
   638 ;;_u	offset	12
   639 ;;_g	offset	16
   640 ;;_l	offset	20
   641 ;;_h	offset	24
   642 ;;_ou	offset	28
   643 ;;_n	offset	32
   644 ;;_e	offset	34
   645 ;;_i	offset	36
   646 ;;_w	offset	38
   647 ;;_p	offset	40
   648 ;;_sign	offset	42
   649 ;;_d	offset	44
   650 ;;_ne	offset	46
   651 ;;_m	offset	48
   652 ;;_pp	offset	50
   653 ;;_t	offset	52
   654 ;;_mode	offset	54
   655 ;;_nmode	offset	55
   656 ;;_fp	offset=-2 (param)
   657 ;;_f	offset=-6 (param)
   658 ;;_c	offset=-7 (param)
   659 ;;_tolower$6514	offset	0
   660 ;;_c	offset=-2 (param)
   661 ;;_c	offset=-2 (param)
   662 ;;_d	offset	0
   663 ;;_s	offset	2
   664 ;;_dest	offset=-2 (param)
   665 ;;_src	offset=-4 (param)
   666 ;;_u	offset	0
   667 ;;_m	offset	4
   668 ;;_e	offset	8
   669 ;;_x	offset=-4 (param)
   670 ;;_u	offset	0
   671 ;;_e	offset	4
   672 ;;_x	offset=-4 (param)
   673 ;;_exp1	offset	0
   674 ;;_sign1	offset	1
   675 ;;_f1	offset=-4 (param)
   676 ;;_f1	offset=-4 (param)
   677 ;;_ff1	offset=-4 (param)
   678 ;;_ff2	offset=-8 (param)
   679 ;;_sign	offset	0
   680 ;;_counter	offset	1
   681 ;;_dividend	offset=-2 (param)
   682 ;;_divisor	offset=-4 (param)
   683 ;;_quotient	offset	0
   684 ;;_sign	offset	2
   685 ;;_counter	offset	3
   686 ;;_dividend	offset=-2 (param)
   687 ;;_divisor	offset=-4 (param)
   688 ;;_dtoa$5661	offset	0
   689 ;;_n	offset	2
   690 ;;_i	offset	10
   691 ;;_s	offset	12
   692 ;;_w	offset	14
   693 ;;_p	offset	16
   694 ;;_fp	offset=-2 (param)
   695 ;;_d	offset=-10 (param)
   696 ;;_a	offset=-2 (param)
   697 ;;_sign	offset	0
   698 ;;_counter	offset	1
   699 ;;_dividend	offset=-8 (param)
   700 ;;_divisor	offset=-16 (param)
   701 ;;_quotient	offset	0
   702 ;;_sign	offset	8
   703 ;;_counter	offset	9
   704 ;;_dividend	offset=-8 (param)
   705 ;;_divisor	offset=-16 (param)
   706 ;;_w	offset	0
   707 ;;_fp	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_w	offset	0
   710 ;;_i	offset	2
   711 ;;_fp	offset=-2 (param)
   712 ;;_buf	offset=-4 (param)
   713 ;;_p	offset=-6 (param)
   714 ;;_a	offset	0
   715 ;;_s	offset=-2 (param)
   716 ;;_i	offset	0
   717 ;;_c	offset	2
   718 ;;_s	offset=-2 (param)
   719 ;;_fp	offset=-4 (param)
   720 ;;_c	offset=-2 (param)
   721 ;;_fp	offset=-4 (param)
   722 ;;_c	offset=-1 (param)
   723 ;;__this	offset=-2 (param)
   724 ;;_c	offset=-3 (param)
   725 ;;_atoi$6245	offset	0
   726 ;;_atoi$6243	offset	2
   727 ;;_atoi$6244	offset	4
   728 ;;_n	offset	5
   729 ;;_neg	offset	7
   730 ;;_s	offset=-2 (param)
   731 ;;_isspace$6294	offset	0
   732 ;;_c	offset=-2 (param)
   733 ;;_c	offset=-2 (param)
   734 ;;_dsize	offset=-2 (param)
   735 ;;_u	offset	0
   736 ;;_x	offset=-4 (param)
   737 ;;_f1p	offset=-2 (param)
   738 ;;_f2	offset=-6 (param)
   739 ;;_timer	offset=-1 (param)
   740 ;;_count	offset=-3 (param)
   741 ;;_channel	offset=-1 (param)
   742 ;;_i	offset	0
   743                           
   744                           	psect	idataBIGRAM
   745  016B70                     __pidataBIGRAM:
   746                           	opt callstack 0
   747                           
   748                           ;initializer for _port_data
   749  016B70  FF                 	db	255
   750  016B71  00                 	db	0
   751  016B72  FF                 	db	255
   752  016B73  00                 	db	0
   753  016B74  FF                 	db	255
   754  016B75  00                 	db	0
   755  016B76  FF                 	db	255
   756  016B77  00                 	db	0
   757  016B78  FF                 	db	255
   758  016B79  00                 	db	0
   759  016B7A  FF                 	db	255
   760  016B7B  00                 	db	0
   761  016B7C  FF                 	db	255
   762  016B7D  00                 	db	0
   763  016B7E  FF                 	db	255
   764  016B7F  00                 	db	0
   765  016B80  00                 	db	0
   766  016B81  00                 	db	0
   767  016B82  00                 	db	0
   768  016B83  00                 	db	0
   769  016B84  00                 	db	0
   770  016B85  00                 	db	0
   771  016B86  00                 	db	0
   772  016B87  00                 	db	0
   773  016B88  00                 	db	0
   774  016B89  00                 	db	0
   775  016B8A  00                 	db	0
   776  016B8B  00                 	db	0
   777  016B8C  00                 	db	0
   778  016B8D  00                 	db	0
   779  016B8E  00                 	db	0
   780  016B8F  00                 	db	0
   781  016B90  00                 	db	0
   782  016B91  00                 	db	0
   783  016B92  00                 	db	0
   784  016B93  00                 	db	0
   785  016B94  00                 	db	0
   786  016B95  00                 	db	0
   787  016B96  00                 	db	0
   788  016B97  00                 	db	0
   789  016B98  00                 	db	0
   790  016B99  00                 	db	0
   791  016B9A  00                 	db	0
   792  016B9B  00                 	db	0
   793  016B9C  00                 	db	0
   794  016B9D  00                 	db	0
   795  016B9E  00                 	db	0
   796  016B9F  00                 	db	0
   797  016BA0  00                 	db	0
   798  016BA1  00                 	db	0
   799  016BA2  00                 	db	0
   800  016BA3  00                 	db	0
   801  016BA4  00                 	db	0
   802  016BA5  00                 	db	0
   803  016BA6  00                 	db	0
   804  016BA7  00                 	db	0
   805  016BA8  00                 	db	0
   806  016BA9  00                 	db	0
   807  016BAA  00                 	db	0
   808  016BAB  00                 	db	0
   809  016BAC  00                 	db	0
   810  016BAD  00                 	db	0
   811  016BAE  00                 	db	0
   812  016BAF  00                 	db	0
   813  016BB0  00                 	db	0
   814  016BB1  00                 	db	0
   815  016BB2  00                 	db	0
   816  016BB3  00                 	db	0
   817  016BB4  00                 	db	0
   818  016BB5  00                 	db	0
   819  016BB6  00                 	db	0
   820  016BB7  00                 	db	0
   821  016BB8  00                 	db	0
   822  016BB9  00                 	db	0
   823  016BBA  00                 	db	0
   824  016BBB  00                 	db	0
   825  016BBC  00                 	db	0
   826  016BBD  00                 	db	0
   827  016BBE  00                 	db	0
   828  016BBF  00                 	db	0
   829  016BC0  00                 	db	0
   830  016BC1  00                 	db	0
   831  016BC2  00                 	db	0
   832  016BC3  00                 	db	0
   833  016BC4  00                 	db	0
   834  016BC5  00                 	db	0
   835  016BC6  00                 	db	0
   836  016BC7  00                 	db	0
   837  016BC8  00                 	db	0
   838  016BC9  00                 	db	0
   839  016BCA  00                 	db	0
   840  016BCB  00                 	db	0
   841  016BCC  00                 	db	0
   842  016BCD  00                 	db	0
   843  016BCE  00                 	db	0
   844  016BCF  00                 	db	0
   845  016BD0  00                 	db	0
   846  016BD1  00                 	db	0
   847  016BD2  00                 	db	0
   848  016BD3  00                 	db	0
   849  016BD4  00                 	db	0
   850  016BD5  00                 	db	0
   851  016BD6  00                 	db	0
   852  016BD7  00                 	db	0
   853  016BD8  00                 	db	0
   854  016BD9  00                 	db	0
   855  016BDA  00                 	db	0
   856  016BDB  00                 	db	0
   857  016BDC  00                 	db	0
   858  016BDD  00                 	db	0
   859  016BDE  00                 	db	0
   860  016BDF  00                 	db	0
   861  016BE0  00                 	db	0
   862  016BE1  00                 	db	0
   863  016BE2  00                 	db	0
   864  016BE3  00                 	db	0
   865  016BE4  00                 	db	0
   866  016BE5  00                 	db	0
   867  016BE6  00                 	db	0
   868  016BE7  00                 	db	0
   869  016BE8  00                 	db	0
   870  016BE9  00                 	db	0
   871  016BEA  00                 	db	0
   872  016BEB  00                 	db	0
   873  016BEC  00                 	db	0
   874  016BED  00                 	db	0
   875  016BEE  00                 	db	0
   876  016BEF  00                 	db	0
   877  016BF0  00                 	db	0
   878  016BF1  00                 	db	0
   879  016BF2  00                 	db	0
   880  016BF3  00                 	db	0
   881  016BF4  00                 	db	0
   882  016BF5  00                 	db	0
   883  016BF6  00                 	db	0
   884  016BF7  00                 	db	0
   885  016BF8  00                 	db	0
   886  016BF9  00                 	db	0
   887  016BFA  00                 	db	0
   888  016BFB  00                 	db	0
   889  016BFC  00                 	db	0
   890  016BFD  00                 	db	0
   891  016BFE  00                 	db	0
   892  016BFF  00                 	db	0
   893  016C00  00                 	db	0
   894  016C01  00                 	db	0
   895  016C02  00                 	db	0
   896  016C03  00                 	db	0
   897  016C04  00                 	db	0
   898  016C05  00                 	db	0
   899  016C06  00                 	db	0
   900  016C07  00                 	db	0
   901  016C08  00                 	db	0
   902  016C09  00                 	db	0
   903  016C0A  00                 	db	0
   904  016C0B  00                 	db	0
   905  016C0C  00                 	db	0
   906  016C0D  00                 	db	0
   907  016C0E  00                 	db	0
   908  016C0F  00                 	db	0
   909  016C10  00                 	db	0
   910  016C11  00                 	db	0
   911  016C12  00                 	db	0
   912  016C13  00                 	db	0
   913  016C14  00                 	db	0
   914  016C15  00                 	db	0
   915  016C16  00                 	db	0
   916  016C17  00                 	db	0
   917  016C18  00                 	db	0
   918  016C19  00                 	db	0
   919  016C1A  00                 	db	0
   920  016C1B  00                 	db	0
   921  016C1C  00                 	db	0
   922  016C1D  00                 	db	0
   923  016C1E  00                 	db	0
   924  016C1F  00                 	db	0
   925  016C20  00                 	db	0
   926  016C21  00                 	db	0
   927  016C22  00                 	db	0
   928  016C23  00                 	db	0
   929  016C24  00                 	db	0
   930  016C25  00                 	db	0
   931  016C26  00                 	db	0
   932  016C27  00                 	db	0
   933  016C28  00                 	db	0
   934  016C29  00                 	db	0
   935  016C2A  00                 	db	0
   936  016C2B  00                 	db	0
   937  016C2C  00                 	db	0
   938  016C2D  00                 	db	0
   939  016C2E  00                 	db	0
   940  016C2F  00                 	db	0
   941  016C30  00                 	db	0
   942  016C31  00                 	db	0
   943  016C32  00                 	db	0
   944  016C33  00                 	db	0
   945  016C34  00                 	db	0
   946  016C35  00                 	db	0
   947  016C36  00                 	db	0
   948  016C37  00                 	db	0
   949  016C38  00                 	db	0
   950  016C39  00                 	db	0
   951  016C3A  00                 	db	0
   952  016C3B  00                 	db	0
   953  016C3C  00                 	db	0
   954  016C3D  00                 	db	0
   955  016C3E  00                 	db	0
   956  016C3F  00                 	db	0
   957  016C40  00                 	db	0
   958  016C41  00                 	db	0
   959  016C42  00                 	db	0
   960  016C43  00                 	db	0
   961  016C44  00                 	db	0
   962  016C45  00                 	db	0
   963  016C46  00                 	db	0
   964  016C47  00                 	db	0
   965  016C48  00                 	db	0
   966  016C49  00                 	db	0
   967  016C4A  00                 	db	0
   968  016C4B  00                 	db	0
   969  016C4C  00                 	db	0
   970  016C4D  00                 	db	0
   971  016C4E  00                 	db	0
   972  016C4F  00                 	db	0
   973  016C50  00                 	db	0
   974  016C51  00                 	db	0
   975  016C52  00                 	db	0
   976  016C53  00                 	db	0
   977  016C54  00                 	db	0
   978  016C55  00                 	db	0
   979  016C56  00                 	db	0
   980  016C57  00                 	db	0
   981  016C58  00                 	db	0
   982  016C59  00                 	db	0
   983  016C5A  00                 	db	0
   984  016C5B  00                 	db	0
   985  016C5C  00                 	db	0
   986  016C5D  00                 	db	0
   987  016C5E  00                 	db	0
   988  016C5F  00                 	db	0
   989  016C60  00                 	db	0
   990  016C61  00                 	db	0
   991  016C62  00                 	db	0
   992  016C63  00                 	db	0
   993  016C64  00                 	db	0
   994  016C65  00                 	db	0
   995  016C66  00                 	db	0
   996  016C67  00                 	db	0
   997  016C68  00                 	db	0
   998  016C69  00                 	db	0
   999  016C6A  00                 	db	0
  1000  016C6B  00                 	db	0
  1001  016C6C  00                 	db	0
  1002  016C6D  00                 	db	0
  1003  016C6E  00                 	db	0
  1004  016C6F  00                 	db	0
  1005  016C70  00                 	db	0
  1006  016C71  00                 	db	0
  1007  016C72  00                 	db	0
  1008  016C73  00                 	db	0
  1009  016C74  00                 	db	0
  1010  016C75  00                 	db	0
  1011  016C76  00                 	db	0
  1012  016C77  00                 	db	0
  1013  016C78  00                 	db	0
  1014  016C79  00                 	db	0
  1015  016C7A  00                 	db	0
  1016  016C7B  00                 	db	0
  1017  016C7C  00                 	db	0
  1018  016C7D  00                 	db	0
  1019  016C7E  00                 	db	0
  1020  016C7F  00                 	db	0
  1021  016C80  00                 	db	0
  1022  016C81  00                 	db	0
  1023  016C82  00                 	db	0
  1024  016C83  00                 	db	0
  1025  016C84  00                 	db	0
  1026  016C85  00                 	db	0
  1027  016C86  00                 	db	0
  1028  016C87  00                 	db	0
  1029  016C88  00                 	db	0
  1030  016C89  00                 	db	0
  1031  016C8A  00                 	db	0
  1032  016C8B  00                 	db	0
  1033  016C8C  00                 	db	0
  1034  016C8D  00                 	db	0
  1035  016C8E  00                 	db	0
  1036  016C8F  00                 	db	0
  1037  016C90  00                 	db	0
  1038  016C91  00                 	db	0
  1039  016C92  00                 	db	0
  1040  016C93  00                 	db	0
  1041  016C94  00                 	db	0
  1042  016C95  00                 	db	0
  1043  016C96  00                 	db	0
  1044  016C97  00                 	db	0
  1045  016C98  00                 	db	0
  1046  016C99  00                 	db	0
  1047  016C9A  00                 	db	0
  1048  016C9B  00                 	db	0
  1049  016C9C  00                 	db	0
  1050  016C9D  00                 	db	0
  1051  016C9E  00                 	db	0
  1052  016C9F  00                 	db	0
  1053  016CA0  00                 	db	0
  1054  016CA1  00                 	db	0
  1055  016CA2  00                 	db	0
  1056  016CA3  00                 	db	0
  1057  016CA4  00                 	db	0
  1058  016CA5  00                 	db	0
  1059  016CA6  00                 	db	0
  1060  016CA7  00                 	db	0
  1061  016CA8  00                 	db	0
  1062  016CA9  00                 	db	0
  1063  016CAA  00                 	db	0
  1064  016CAB  00                 	db	0
  1065  016CAC  00                 	db	0
  1066  016CAD  00                 	db	0
  1067  016CAE  00                 	db	0
  1068  016CAF  00                 	db	0
  1069  016CB0  00                 	db	0
  1070  016CB1  00                 	db	0
  1071  016CB2  00                 	db	0
  1072  016CB3  00                 	db	0
  1073  016CB4  00                 	db	0
  1074  016CB5  00                 	db	0
  1075  016CB6  00                 	db	0
  1076  016CB7  00                 	db	0
  1077  016CB8  00                 	db	0
  1078  016CB9  00                 	db	0
  1079  016CBA  00                 	db	0
  1080  016CBB  00                 	db	0
  1081  016CBC  00                 	db	0
  1082  016CBD  00                 	db	0
  1083  016CBE  00                 	db	0
  1084  016CBF  00                 	db	0
  1085  016CC0  00                 	db	0
  1086  016CC1  00                 	db	0
  1087  016CC2  00                 	db	0
  1088  016CC3  00                 	db	0
  1089  016CC4  00                 	db	0
  1090  016CC5  00                 	db	0
  1091  016CC6  00                 	db	0
  1092  016CC7  00                 	db	0
  1093  016CC8  00                 	db	0
  1094  016CC9  00                 	db	0
  1095  016CCA  00                 	db	0
  1096  016CCB  00                 	db	0
  1097  016CCC  00                 	db	0
  1098  016CCD  00                 	db	0
  1099  016CCE  00                 	db	0
  1100  016CCF  00                 	db	0
  1101  016CD0  00                 	db	0
  1102  016CD1  00                 	db	0
  1103  016CD2  00                 	db	0
  1104  016CD3  00                 	db	0
  1105  016CD4  00                 	db	0
  1106  016CD5  00                 	db	0
  1107  016CD6  00                 	db	0
  1108  016CD7  00                 	db	0
  1109  016CD8  00                 	db	0
  1110  016CD9  00                 	db	0
  1111  016CDA  00                 	db	0
  1112  016CDB  00                 	db	0
  1113  016CDC  00                 	db	0
  1114  016CDD  00                 	db	0
  1115  016CDE  00                 	db	0
  1116  016CDF  00                 	db	0
  1117  016CE0  00                 	db	0
  1118  016CE1  00                 	db	0
  1119  016CE2  00                 	db	0
  1120  016CE3  00                 	db	0
  1121  016CE4  00                 	db	0
  1122  016CE5  00                 	db	0
  1123  016CE6  00                 	db	0
  1124  016CE7  00                 	db	0
  1125  016CE8  00                 	db	0
  1126  016CE9  00                 	db	0
  1127  016CEA  00                 	db	0
  1128  016CEB  00                 	db	0
  1129  016CEC  00                 	db	0
  1130  016CED  00                 	db	0
  1131  016CEE  00                 	db	0
  1132  016CEF  00                 	db	0
  1133  016CF0  00                 	db	0
  1134  016CF1  00                 	db	0
  1135  016CF2  00                 	db	0
  1136  016CF3  00                 	db	0
  1137  016CF4  00                 	db	0
  1138  016CF5  00                 	db	0
  1139  016CF6  00                 	db	0
  1140  016CF7  00                 	db	0
  1141  016CF8  00                 	db	0
  1142  016CF9  00                 	db	0
  1143  016CFA  00                 	db	0
  1144  016CFB  00                 	db	0
  1145  016CFC  00                 	db	0
  1146  016CFD  00                 	db	0
  1147  016CFE  00                 	db	0
  1148  016CFF  00                 	db	0
  1149  016D00  00                 	db	0
  1150  016D01  00                 	db	0
  1151  016D02  00                 	db	0
  1152  016D03  00                 	db	0
  1153  016D04  00                 	db	0
  1154  016D05  00                 	db	0
  1155  016D06  00                 	db	0
  1156  016D07  00                 	db	0
  1157  016D08  00                 	db	0
  1158  016D09  00                 	db	0
  1159  016D0A  00                 	db	0
  1160  016D0B  00                 	db	0
  1161  016D0C  00                 	db	0
  1162  016D0D  00                 	db	0
  1163  016D0E  00                 	db	0
  1164  016D0F  00                 	db	0
  1165  016D10  00                 	db	0
  1166  016D11  00                 	db	0
  1167  016D12  00                 	db	0
  1168  016D13  00                 	db	0
  1169  016D14  00                 	db	0
  1170  016D15  00                 	db	0
  1171  016D16  00                 	db	0
  1172  016D17  00                 	db	0
  1173  016D18  00                 	db	0
  1174  016D19  00                 	db	0
  1175  016D1A  00                 	db	0
  1176  016D1B  00                 	db	0
  1177  016D1C  00                 	db	0
  1178  016D1D  00                 	db	0
  1179  016D1E  00                 	db	0
  1180  016D1F  00                 	db	0
  1181  016D20  00                 	db	0
  1182  016D21  00                 	db	0
  1183  016D22  00                 	db	0
  1184  016D23  00                 	db	0
  1185  016D24  00                 	db	0
  1186  016D25  00                 	db	0
  1187  016D26  00                 	db	0
  1188  016D27  00                 	db	0
  1189  016D28  00                 	db	0
  1190  016D29  00                 	db	0
  1191  016D2A  00                 	db	0
  1192  016D2B  00                 	db	0
  1193  016D2C  00                 	db	0
  1194  016D2D  00                 	db	0
  1195  016D2E  00                 	db	0
  1196  016D2F  00                 	db	0
  1197  016D30  00                 	db	0
  1198  016D31  00                 	db	0
  1199  016D32  00                 	db	0
  1200  016D33  00                 	db	0
  1201  016D34  00                 	db	0
  1202  016D35  00                 	db	0
  1203  016D36  00                 	db	0
  1204  016D37  00                 	db	0
  1205  016D38  00                 	db	0
  1206  016D39  00                 	db	0
  1207  016D3A  00                 	db	0
  1208  016D3B  00                 	db	0
  1209  016D3C  00                 	db	0
  1210  016D3D  00                 	db	0
  1211  016D3E  00                 	db	0
  1212  016D3F  00                 	db	0
  1213  016D40  00                 	db	0
  1214  016D41  00                 	db	0
  1215  016D42  00                 	db	0
  1216  016D43  00                 	db	0
  1217  016D44  00                 	db	0
  1218  016D45  00                 	db	0
  1219  016D46  00                 	db	0
  1220  016D47  00                 	db	0
  1221  016D48  00                 	db	0
  1222  016D49  00                 	db	0
  1223  016D4A  00                 	db	0
  1224  016D4B  00                 	db	0
  1225  016D4C  00                 	db	0
  1226  016D4D  00                 	db	0
  1227  016D4E  00                 	db	0
  1228  016D4F  00                 	db	0
  1229  016D50  00                 	db	0
  1230  016D51  00                 	db	0
  1231  016D52  00                 	db	0
  1232  016D53  00                 	db	0
  1233  016D54  00                 	db	0
  1234  016D55  00                 	db	0
  1235  016D56  00                 	db	0
  1236  016D57  00                 	db	0
  1237  016D58  00                 	db	0
  1238  016D59  00                 	db	0
  1239  016D5A  00                 	db	0
  1240  016D5B  00                 	db	0
  1241  016D5C  00                 	db	0
  1242  016D5D  00                 	db	0
  1243  016D5E  00                 	db	0
  1244  016D5F  00                 	db	0
  1245  016D60  00                 	db	0
  1246  016D61  00                 	db	0
  1247  016D62  00                 	db	0
  1248  016D63  00                 	db	0
  1249  016D64  00                 	db	0
  1250  016D65  00                 	db	0
  1251  016D66  00                 	db	0
  1252  016D67  00                 	db	0
  1253  016D68  00                 	db	0
  1254  016D69  00                 	db	0
  1255  016D6A  00                 	db	0
  1256  016D6B  00                 	db	0
  1257  016D6C  00                 	db	0
  1258  016D6D  00                 	db	0
  1259  016D6E  00                 	db	0
  1260  016D6F  00                 	db	0
  1261                           
  1262                           ;initializer for _C
  1263  016D70  0000               	dw	0
  1264  016D72  0000               	dw	0
  1265  016D74  0000               	dw	0
  1266  016D76  0000               	dw	0
  1267  016D78  0000               	dw	0
  1268  016D7A  0000               	dw	0
  1269  016D7C  0000               	dw	0
  1270  016D7E  0000               	dw	0
  1271  016D80  0000               	dw	0
  1272  016D82  0000               	dw	0
  1273  016D84  0000               	dw	0
  1274  016D86  0000               	dw	0
  1275  016D88  0000               	dw	0
  1276  016D8A  0000               	dw	0
  1277  016D8C  0000               	dw	0
  1278  016D8E  0000               	dw	0
  1279  016D90  0000               	dw	0
  1280  016D92  0000               	dw	0
  1281  016D94  0000               	dw	0
  1282  016D96  0000               	dw	0
  1283  016D98  0000               	dw	0
  1284  016D9A  0000               	dw	0
  1285  016D9C  0000               	dw	0
  1286  016D9E  0000               	dw	0
  1287  016DA0  0000               	dw	0
  1288  016DA2  0000               	dw	0
  1289  016DA4  0000               	dw	0
  1290  016DA6  0000               	dw	0
  1291  016DA8  0000               	dw	0
  1292  016DAA  0000               	dw	0
  1293  016DAC  0000               	dw	0
  1294  016DAE  0000               	dw	0
  1295  016DB0  0000               	dw	0
  1296  016DB2  0000               	dw	0
  1297  016DB4  0000               	dw	0
  1298  016DB6  0000               	dw	0
  1299  016DB8  0000               	dw	0
  1300  016DBA  0000               	dw	0
  1301  016DBC  0000               	dw	0
  1302  016DBE  0000               	dw	0
  1303  016DC0  0000               	dw	0
  1304  016DC2  0000               	dw	0
  1305  016DC4  0000               	dw	0
  1306  016DC6  0000               	dw	0
  1307  016DC8  0000               	dw	0
  1308  016DCA  0000               	dw	0
  1309  016DCC  0000               	dw	0
  1310  016DCE  0000               	dw	0
  1311  016DD0  0000               	dw	0
  1312  016DD2  0000               	dw	0
  1313  016DD4  0000               	dw	0
  1314  016DD6  0000               	dw	0
  1315  016DD8  0000               	dw	0
  1316  016DDA  0000               	dw	0
  1317  016DDC  0000               	dw	0
  1318  016DDE  0000               	dw	0
  1319  016DE0  0000               	dw	0
  1320  016DE2  0000               	dw	0
  1321  016DE4  0000               	dw	0
  1322  016DE6  0000               	dw	0
  1323  016DE8  0000               	dw	0
  1324  016DEA  0000               	dw	0
  1325  016DEC  0000               	dw	0
  1326  016DEE  0000               	dw	0
  1327  016DF0  0000               	dw	0
  1328  016DF2  0000               	dw	0
  1329  016DF4  0000               	dw	0
  1330  016DF6  0000               	dw	0
  1331  016DF8  0000               	dw	0
  1332  016DFA  0000               	dw	0
  1333  016DFC  0000               	dw	0
  1334  016DFE  42FA               	dw	17146
  1335  016E00  0000               	dw	0
  1336  016E02  0000               	dw	0
  1337  016E04  0000               	dw	0
  1338  016E06  0000               	dw	0
  1339  016E08  0000               	dw	0
  1340  016E0A  0000               	dw	0
  1341  016E0C  0000               	dw	0
  1342  016E0E  0000               	dw	0
  1343  016E10  0000               	dw	0
  1344  016E12  0000               	dw	0
  1345  016E14  0000               	dw	0
  1346  016E16  0000               	dw	0
  1347  016E18  0000               	dw	0
  1348  016E1A  0000               	dw	0
  1349  016E1C  0000               	dw	0
  1350  016E1E  0000               	dw	0
  1351  016E20  0000               	dw	0
  1352  016E22  0000               	dw	0
  1353  016E24  0000               	dw	0
  1354  016E26  0000               	dw	0
  1355  016E28  00                 	db	0
  1356  016E29  01                 	db	1
  1357  016E2A  0000               	dw	0
  1358  016E2C  3F80               	dw	16256
  1359  016E2E  0000               	dw	0
  1360  016E30  3F80               	dw	16256
  1361  016E32  00                 	db	0
  1362  016E33  00                 	db	0
  1363  016E34  00                 	db	0
  1364  016E35  00                 	db	0
  1365  016E36  00                 	db	0
  1366  016E37  00                 	db	0
  1367  016E38  00                 	db	0
  1368  016E39  00                 	db	0
  1369  016E3A  00                 	db	0
  1370  016E3B  00                 	db	0
  1371  016E3C  00                 	db	0
  1372  016E3D  00                 	db	0
  1373  016E3E  00                 	db	0
  1374  016E3F  00                 	db	0
  1375  016E40  00                 	db	0
  1376  016E41  00                 	db	0
  1377  016E42  00                 	db	0
  1378  016E43  00                 	db	0
  1379  016E44  00                 	db	0
  1380  016E45  00                 	db	0
  1381  016E46  00                 	db	0
  1382  016E47  00                 	db	0
  1383  016E48  00                 	db	0
  1384  016E49  00                 	db	0
  1385  016E4A  00                 	db	0
  1386  016E4B  00                 	db	0
  1387  016E4C  00                 	db	0
  1388  016E4D  00                 	db	0
  1389  016E4E  00                 	db	0
  1390  016E4F  00                 	db	0
  1391  016E50  00                 	db	0
  1392  016E51  00                 	db	0
  1393  016E52  00                 	db	0
  1394  016E53  00                 	db	0
  1395  016E54  00                 	db	0
  1396  016E55  00                 	db	0
  1397  016E56  00                 	db	0
  1398  016E57  00                 	db	0
  1399  016E58  00                 	db	0
  1400  016E59  00                 	db	0
  1401  016E5A  00                 	db	0
  1402  016E5B  00                 	db	0
  1403  016E5C  00                 	db	0
  1404  016E5D  00                 	db	0
  1405  016E5E  00                 	db	0
  1406  016E5F  00                 	db	0
  1407  016E60  00                 	db	0
  1408  016E61  00                 	db	0
  1409  016E62  00                 	db	0
  1410  016E63  00                 	db	0
  1411  016E64  00                 	db	0
  1412  016E65  00                 	db	0
  1413  016E66  00                 	db	0
  1414  016E67  00                 	db	0
  1415  016E68  00                 	db	0
  1416  016E69  00                 	db	0
  1417  016E6A  00                 	db	0
  1418  016E6B  00                 	db	0
  1419  016E6C  00                 	db	0
  1420  016E6D  00                 	db	0
  1421  016E6E  00                 	db	0
  1422  016E6F  00                 	db	0
  1423  016E70  00                 	db	0
  1424  016E71  00                 	db	0
  1425  016E72  00                 	db	0
  1426  016E73  00                 	db	0
  1427  016E74  00                 	db	0
  1428  016E75  00                 	db	0
  1429  016E76  00                 	db	0
  1430  016E77  00                 	db	0
  1431  016E78  00                 	db	0
  1432  016E79  00                 	db	0
  1433  016E7A  00                 	db	0
  1434  016E7B  00                 	db	0
  1435  016E7C  00                 	db	0
  1436  016E7D  00                 	db	0
  1437  016E7E  0000               	dw	0
  1438  016E80  0000               	dw	0
  1439  016E82  0000               	dw	0
  1440  016E84  0000               	dw	0
  1441  016E86  0000               	dw	0
  1442  016E88  0000               	dw	0
  1443  016E8A  0000               	dw	0
  1444  016E8C  0000               	dw	0
  1445  016E8E  0000               	dw	0
  1446  016E90  0000               	dw	0
  1447  016E92  01                 	db	1
  1448  016E93  00                 	db	0
  1449  016E94  00                 	db	0
  1450  016E95  00                 	db	0
  1451  016E96  00                 	db	0
  1452  016E97  00                 	db	0
  1453  016E98  00                 	db	0
  1454  016E99  00                 	db	0
  1455  016E9A  00                 	db	0
  1456                           
  1457                           	psect	idataBANK0
  1458  01BC94                     __pidataBANK0:
  1459                           	opt callstack 0
  1460                           
  1461                           ;initializer for _R
  1462  01BC94  0000               	dw	0
  1463  01BC96  0000               	dw	0
  1464  01BC98  0000               	dw	0
  1465  01BC9A  0000               	dw	0
  1466  01BC9C  0000               	dw	0
  1467  01BC9E  0000               	dw	0
  1468  01BCA0  0000               	dw	0
  1469  01BCA2  0000               	dw	0
  1470  01BCA4  0000               	dw	0
  1471  01BCA6  0000               	dw	0
  1472  01BCA8  0000               	dw	0
  1473  01BCAA  0000               	dw	0
  1474  01BCAC  0000               	dw	0
  1475  01BCAE  0000               	dw	0
  1476  01BCB0  0000               	dw	0
  1477  01BCB2  0000               	dw	0
  1478  01BCB4  0FFF               	dw	4095
  1479  01BCB6  0777               	dw	1911
  1480  01BCB8  0000               	dw	0
  1481  01BCBA  0F67               	dw	3943
  1482  01BCBC  0F8F               	dw	3983
  1483  01BCBE  0000               	dw	0
  1484  01BCC0  0000               	dw	0
  1485  01BCC2  0000               	dw	0
  1486  01BCC4  0000               	dw	0
  1487  01BCC6  00                 	db	0
  1488  01BCC7  0000               	dw	0
  1489  01BCC9  00                 	db	0
  1490                           
  1491                           	psect	idataBANK1
  1492  01A56C                     __pidataBANK1:
  1493                           	opt callstack 0
  1494                           
  1495                           ;initializer for stoa@F1166
  1496  01A56C  28                 	db	40
  1497  01A56D  6E                 	db	110
  1498  01A56E  75                 	db	117
  1499  01A56F  6C                 	db	108
  1500  01A570  6C                 	db	108
  1501  01A571  29                 	db	41
  1502  01A572  00                 	db	0
  1503                           
  1504                           ;initializer for _V
  1505  01A573  00                 	db	0
  1506  01A574  00                 	db	0
  1507  01A575  00                 	db	0
  1508  01A576  00                 	db	0
  1509  01A577  00                 	db	0
  1510  01A578  00                 	db	0
  1511  01A579  00                 	db	0
  1512  01A57A  00                 	db	0
  1513  01A57B  00                 	db	0
  1514  01A57C  00                 	db	0
  1515  01A57D  00                 	db	0
  1516  01A57E  00                 	db	0
  1517  01A57F  00                 	db	0
  1518  01A580  00                 	db	0
  1519  01A581  00                 	db	0
  1520  01A582  00                 	db	0
  1521  01A583  00                 	db	0
  1522  01A584  00                 	db	0
  1523  01A585  00                 	db	0
  1524  01A586  00                 	db	0
  1525  01A587  00                 	db	0
  1526  01A588  00                 	db	0
  1527  01A589  00                 	db	0
  1528  01A58A  00                 	db	0
  1529  01A58B  00                 	db	0
  1530  01A58C  00                 	db	0
  1531  01A58D  00                 	db	0
  1532  01A58E  00                 	db	0
  1533  01A58F  00                 	db	0
  1534  01A590  00                 	db	0
  1535  01A591  00                 	db	0
  1536  01A592  00                 	db	0
  1537  01A593  00                 	db	0
  1538  01A594  00                 	db	0
  1539  01A595  00                 	db	0
  1540  01A596  00                 	db	0
  1541  01A597  00                 	db	0
  1542  01A598  00                 	db	0
  1543  01A599  00                 	db	0
  1544  01A59A  00                 	db	0
  1545  01A59B  00                 	db	0
  1546  01A59C  00                 	db	0
  1547  01A59D  00                 	db	0
  1548  01A59E  00                 	db	0
  1549  01A59F  00                 	db	0
  1550  01A5A0  00                 	db	0
  1551  01A5A1  00                 	db	0
  1552  01A5A2  00                 	db	0
  1553  01A5A3  00                 	db	0
  1554  01A5A4  00                 	db	0
  1555  01A5A5  00                 	db	0
  1556  01A5A6  00                 	db	0
  1557  01A5A7  00                 	db	0
  1558  01A5A8  00                 	db	0
  1559  01A5A9  00                 	db	0
  1560  01A5AA  00                 	db	0
  1561  01A5AB  00                 	db	0
  1562  01A5AC  00                 	db	0
  1563  01A5AD  00                 	db	0
  1564  01A5AE  00                 	db	0
  1565  01A5AF  00                 	db	0
  1566  01A5B0  00                 	db	0
  1567  01A5B1  00                 	db	0
  1568  01A5B2  00                 	db	0
  1569  01A5B3  00                 	db	0
  1570  01A5B4  00                 	db	0
  1571  01A5B5  00                 	db	0
  1572  01A5B6  00                 	db	0
  1573  01A5B7  00                 	db	0
  1574  01A5B8  00                 	db	0
  1575  01A5B9  00                 	db	0
  1576  01A5BA  00                 	db	0
  1577  01A5BB  00                 	db	0
  1578  01A5BC  00                 	db	0
  1579  01A5BD  00                 	db	0
  1580  01A5BE  00                 	db	0
  1581  01A5BF  00                 	db	0
  1582  01A5C0  00                 	db	0
  1583  01A5C1  00                 	db	0
  1584  01A5C2  00                 	db	0
  1585  01A5C3  00                 	db	0
  1586  01A5C4  00                 	db	0
  1587  01A5C5  00                 	db	0
  1588  01A5C6  00                 	db	0
  1589  01A5C7  00                 	db	0
  1590  01A5C8  00                 	db	0
  1591  01A5C9  00                 	db	0
  1592  01A5CA  00                 	db	0
  1593  01A5CB  00                 	db	0
  1594  01A5CC  00                 	db	0
  1595  01A5CD  00                 	db	0
  1596  01A5CE  00                 	db	0
  1597  01A5CF  00                 	db	0
  1598  01A5D0  00                 	db	0
  1599  01A5D1  00                 	db	0
  1600  01A5D2  00                 	db	0
  1601  01A5D3  00                 	db	0
  1602  01A5D4  00                 	db	0
  1603  01A5D5  00                 	db	0
  1604  01A5D6  00                 	db	0
  1605  01A5D7  00                 	db	0
  1606  01A5D8  00                 	db	0
  1607  01A5D9  00                 	db	0
  1608  01A5DA  00                 	db	0
  1609  01A5DB  00                 	db	0
  1610  01A5DC  00                 	db	0
  1611  01A5DD  00                 	db	0
  1612  01A5DE  00                 	db	0
  1613  01A5DF  00                 	db	0
  1614  01A5E0  00                 	db	0
  1615  01A5E1  00                 	db	0
  1616  01A5E2  00                 	db	0
  1617  01A5E3  00                 	db	0
  1618  01A5E4  00                 	db	0
  1619  01A5E5  00                 	db	0
  1620  01A5E6  00                 	db	0
  1621  01A5E7  00                 	db	0
  1622  01A5E8  00                 	db	0
  1623  01A5E9  00                 	db	0
  1624  01A5EA  00                 	db	0
  1625  01A5EB  00                 	db	0
  1626  01A5EC  00                 	db	0
  1627  01A5ED  00                 	db	0
  1628  01A5EE  00                 	db	0
  1629  01A5EF  00                 	db	0
  1630  01A5F0  00                 	db	0
  1631  01A5F1  00                 	db	0
  1632  01A5F2  00                 	db	0
  1633  01A5F3  00                 	db	0
  1634  01A5F4  0000               	dw	0
  1635  01A5F6  0000               	dw	0
  1636  01A5F8  0000               	dw	0
  1637  01A5FA  0000               	dw	0
  1638  01A5FC  00                 	db	0
  1639  01A5FD  00                 	db	0
  1640  01A5FE  00                 	db	0
  1641  01A5FF  00                 	db	0
  1642  01A600  00                 	db	0
  1643  01A601  00                 	db	0
  1644  01A602  0000               	dw	0
  1645  01A604  0000               	dw	0
  1646  01A606  0000               	dw	0
  1647  01A608  0000               	dw	0
  1648  01A60A  0000               	dw	0
  1649  01A60C  0000               	dw	0
  1650  01A60E  00                 	db	0
  1651  01A60F  00                 	db	0
  1652  01A610  00                 	db	0
  1653  01A611  00                 	db	0
  1654  01A612  00                 	db	0
  1655  01A613  00                 	db	0
  1656  01A614  00                 	db	0
  1657  01A615  00                 	db	0
  1658  01A616  00                 	db	0
  1659  01A617  00                 	db	0
  1660  01A618  00                 	db	0
  1661  01A619  0000               	dw	0
  1662  01A61B  0000               	dw	0
  1663  01A61D  2D                 	db	45
  1664  01A61E  00                 	db	0
  1665  01A61F  00                 	db	0
  1666  01A620  00                 	db	0
  1667  01A621  00                 	db	0
  1668  01A622  0000               	dw	0
  1669  01A624  0000               	dw	0
  1670  01A626  0000               	dw	0
  1671  01A628  0000               	dw	0
  1672  01A62A  0000               	dw	0
  1673  01A62C  0000               	dw	0
  1674  01A62E  0000               	dw	0
  1675  01A630  0000               	dw	0
  1676                           
  1677                           ;initializer for _H
  1678  01A632  00                 	db	0
  1679  01A633  00                 	db	0
  1680  01A634  01                 	db	1
  1681  01A635  00                 	db	0
  1682  01A636  01                 	db	1
  1683  01A637  00                 	db	0
  1684  01A638  00                 	db	0
  1685                           
  1686                           	psect	mediumconst
  1687  00F9E4                     __pmediumconst:
  1688                           	opt callstack 0
  1689  00F9E4  00                 	db	0
  1690  00F9E5                     _BVSOC_TABLE:
  1691                           	opt callstack 0
  1692  00F9E5  59D8               	dw	23000
  1693  00F9E7  0000               	dw	0
  1694  00F9E9  0005               	dw	5
  1695  00F9EB  0000               	dw	0
  1696  00F9ED  5B68               	dw	23400
  1697  00F9EF  0000               	dw	0
  1698  00F9F1  000A               	dw	10
  1699  00F9F3  0000               	dw	0
  1700  00F9F5  5C30               	dw	23600
  1701  00F9F7  0000               	dw	0
  1702  00F9F9  0014               	dw	20
  1703  00F9FB  0000               	dw	0
  1704  00F9FD  5E38               	dw	24120
  1705  00F9FF  0000               	dw	0
  1706  00FA01  0019               	dw	25
  1707  00FA03  0000               	dw	0
  1708  00FA05  5E88               	dw	24200
  1709  00FA07  0000               	dw	0
  1710  00FA09  001E               	dw	30
  1711  00FA0B  0000               	dw	0
  1712  00FA0D  5F78               	dw	24440
  1713  00FA0F  0000               	dw	0
  1714  00FA11  0028               	dw	40
  1715  00FA13  0000               	dw	0
  1716  00FA15  5FDC               	dw	24540
  1717  00FA17  0000               	dw	0
  1718  00FA19  002D               	dw	45
  1719  00FA1B  0000               	dw	0
  1720  00FA1D  6018               	dw	24600
  1721  00FA1F  0000               	dw	0
  1722  00FA21  0032               	dw	50
  1723  00FA23  0000               	dw	0
  1724  00FA25  6046               	dw	24646
  1725  00FA27  0000               	dw	0
  1726  00FA29  0035               	dw	53
  1727  00FA2B  0000               	dw	0
  1728  00FA2D  607C               	dw	24700
  1729  00FA2F  0000               	dw	0
  1730  00FA31  0037               	dw	55
  1731  00FA33  0000               	dw	0
  1732  00FA35  60AE               	dw	24750
  1733  00FA37  0000               	dw	0
  1734  00FA39  0039               	dw	57
  1735  00FA3B  0000               	dw	0
  1736  00FA3D  60E0               	dw	24800
  1737  00FA3F  0000               	dw	0
  1738  00FA41  003C               	dw	60
  1739  00FA43  0000               	dw	0
  1740  00FA45  6112               	dw	24850
  1741  00FA47  0000               	dw	0
  1742  00FA49  003F               	dw	63
  1743  00FA4B  0000               	dw	0
  1744  00FA4D  615D               	dw	24925
  1745  00FA4F  0000               	dw	0
  1746  00FA51  0043               	dw	67
  1747  00FA53  0000               	dw	0
  1748  00FA55  61A8               	dw	25000
  1749  00FA57  0000               	dw	0
  1750  00FA59  0046               	dw	70
  1751  00FA5B  0000               	dw	0
  1752  00FA5D  61BC               	dw	25020
  1753  00FA5F  0000               	dw	0
  1754  00FA61  0048               	dw	72
  1755  00FA63  0000               	dw	0
  1756  00FA65  61D0               	dw	25040
  1757  00FA67  0000               	dw	0
  1758  00FA69  004B               	dw	75
  1759  00FA6B  0000               	dw	0
  1760  00FA6D  61DA               	dw	25050
  1761  00FA6F  0000               	dw	0
  1762  00FA71  0050               	dw	80
  1763  00FA73  0000               	dw	0
  1764  00FA75  61E4               	dw	25060
  1765  00FA77  0000               	dw	0
  1766  00FA79  0055               	dw	85
  1767  00FA7B  0000               	dw	0
  1768  00FA7D  61F8               	dw	25080
  1769  00FA7F  0000               	dw	0
  1770  00FA81  005A               	dw	90
  1771  00FA83  0000               	dw	0
  1772  00FA85  6208               	dw	25096
  1773  00FA87  0000               	dw	0
  1774  00FA89  005C               	dw	92
  1775  00FA8B  0000               	dw	0
  1776  00FA8D  6222               	dw	25122
  1777  00FA8F  0000               	dw	0
  1778  00FA91  005D               	dw	93
  1779  00FA93  0000               	dw	0
  1780  00FA95  6234               	dw	25140
  1781  00FA97  0000               	dw	0
  1782  00FA99  005F               	dw	95
  1783  00FA9B  0000               	dw	0
  1784  00FA9D  6248               	dw	25160
  1785  00FA9F  0000               	dw	0
  1786  00FAA1  0061               	dw	97
  1787  00FAA3  0000               	dw	0
  1788  00FAA5  625C               	dw	25180
  1789  00FAA7  0000               	dw	0
  1790  00FAA9  0064               	dw	100
  1791  00FAAB  0000               	dw	0
  1792  00FAAD  6784               	dw	26500
  1793  00FAAF  0000               	dw	0
  1794  00FAB1  0062               	dw	98
  1795  00FAB3  0000               	dw	0
  1796  00FAB5                     __end_of_BVSOC_TABLE:
  1797                           	opt callstack 0
  1798  00FAB5                     _T:
  1799                           	opt callstack 0
  1800  00FAB5  63                 	db	99
  1801  00FAB6  6F                 	db	111
  1802  00FAB7  6D                 	db	109
  1803  00FAB8  6D                 	db	109
  1804  00FAB9  61                 	db	97
  1805  00FABA  6E                 	db	110
  1806  00FABB  64                 	db	100
  1807  00FABC  73                 	db	115
  1808  00FABD  20                 	db	32
  1809  00FABE  31                 	db	49
  1810  00FABF  00                 	db	0
  1811  00FAC0  00                 	db	0
  1812  00FAC1  00                 	db	0
  1813  00FAC2  00                 	db	0
  1814  00FAC3  00                 	db	0
  1815  00FAC4  00                 	db	0
  1816  00FAC5  00                 	db	0
  1817  00FAC6  00                 	db	0
  1818  00FAC7  64                 	db	100
  1819  00FAC8  69                 	db	105
  1820  00FAC9  73                 	db	115
  1821  00FACA  70                 	db	112
  1822  00FACB  6C                 	db	108
  1823  00FACC  61                 	db	97
  1824  00FACD  79                 	db	121
  1825  00FACE  73                 	db	115
  1826  00FACF  20                 	db	32
  1827  00FAD0  31                 	db	49
  1828  00FAD1  00                 	db	0
  1829  00FAD2  00                 	db	0
  1830  00FAD3  00                 	db	0
  1831  00FAD4  00                 	db	0
  1832  00FAD5  00                 	db	0
  1833  00FAD6  00                 	db	0
  1834  00FAD7  00                 	db	0
  1835  00FAD8  00                 	db	0
  1836  00FAD9  63                 	db	99
  1837  00FADA  6F                 	db	111
  1838  00FADB  6D                 	db	109
  1839  00FADC  6D                 	db	109
  1840  00FADD  61                 	db	97
  1841  00FADE  6E                 	db	110
  1842  00FADF  64                 	db	100
  1843  00FAE0  73                 	db	115
  1844  00FAE1  20                 	db	32
  1845  00FAE2  32                 	db	50
  1846  00FAE3  00                 	db	0
  1847  00FAE4  00                 	db	0
  1848  00FAE5  00                 	db	0
  1849  00FAE6  00                 	db	0
  1850  00FAE7  00                 	db	0
  1851  00FAE8  00                 	db	0
  1852  00FAE9  00                 	db	0
  1853  00FAEA  00                 	db	0
  1854  00FAEB  64                 	db	100
  1855  00FAEC  69                 	db	105
  1856  00FAED  73                 	db	115
  1857  00FAEE  70                 	db	112
  1858  00FAEF  6C                 	db	108
  1859  00FAF0  61                 	db	97
  1860  00FAF1  79                 	db	121
  1861  00FAF2  73                 	db	115
  1862  00FAF3  20                 	db	32
  1863  00FAF4  32                 	db	50
  1864  00FAF5  00                 	db	0
  1865  00FAF6  00                 	db	0
  1866  00FAF7  00                 	db	0
  1867  00FAF8  00                 	db	0
  1868  00FAF9  00                 	db	0
  1869  00FAFA  00                 	db	0
  1870  00FAFB  00                 	db	0
  1871  00FAFC  00                 	db	0
  1872  00FAFD  63                 	db	99
  1873  00FAFE  6F                 	db	111
  1874  00FAFF  6D                 	db	109
  1875  00FB00  6D                 	db	109
  1876  00FB01  61                 	db	97
  1877  00FB02  6E                 	db	110
  1878  00FB03  64                 	db	100
  1879  00FB04  73                 	db	115
  1880  00FB05  20                 	db	32
  1881  00FB06  33                 	db	51
  1882  00FB07  00                 	db	0
  1883  00FB08  00                 	db	0
  1884  00FB09  00                 	db	0
  1885  00FB0A  00                 	db	0
  1886  00FB0B  00                 	db	0
  1887  00FB0C  00                 	db	0
  1888  00FB0D  00                 	db	0
  1889  00FB0E  00                 	db	0
  1890  00FB0F  64                 	db	100
  1891  00FB10  69                 	db	105
  1892  00FB11  73                 	db	115
  1893  00FB12  70                 	db	112
  1894  00FB13  6C                 	db	108
  1895  00FB14  61                 	db	97
  1896  00FB15  79                 	db	121
  1897  00FB16  73                 	db	115
  1898  00FB17  20                 	db	32
  1899  00FB18  33                 	db	51
  1900  00FB19  00                 	db	0
  1901  00FB1A  00                 	db	0
  1902  00FB1B  00                 	db	0
  1903  00FB1C  00                 	db	0
  1904  00FB1D  00                 	db	0
  1905  00FB1E  00                 	db	0
  1906  00FB1F  00                 	db	0
  1907  00FB20  00                 	db	0
  1908  00FB21  63                 	db	99
  1909  00FB22  6F                 	db	111
  1910  00FB23  6D                 	db	109
  1911  00FB24  6D                 	db	109
  1912  00FB25  61                 	db	97
  1913  00FB26  6E                 	db	110
  1914  00FB27  64                 	db	100
  1915  00FB28  73                 	db	115
  1916  00FB29  20                 	db	32
  1917  00FB2A  34                 	db	52
  1918  00FB2B  00                 	db	0
  1919  00FB2C  00                 	db	0
  1920  00FB2D  00                 	db	0
  1921  00FB2E  00                 	db	0
  1922  00FB2F  00                 	db	0
  1923  00FB30  00                 	db	0
  1924  00FB31  00                 	db	0
  1925  00FB32  00                 	db	0
  1926  00FB33  64                 	db	100
  1927  00FB34  69                 	db	105
  1928  00FB35  73                 	db	115
  1929  00FB36  70                 	db	112
  1930  00FB37  6C                 	db	108
  1931  00FB38  61                 	db	97
  1932  00FB39  79                 	db	121
  1933  00FB3A  73                 	db	115
  1934  00FB3B  20                 	db	32
  1935  00FB3C  34                 	db	52
  1936  00FB3D  00                 	db	0
  1937  00FB3E  00                 	db	0
  1938  00FB3F  00                 	db	0
  1939  00FB40  00                 	db	0
  1940  00FB41  00                 	db	0
  1941  00FB42  00                 	db	0
  1942  00FB43  00                 	db	0
  1943  00FB44  00                 	db	0
  1944  00FB45                     __end_of_T:
  1945                           	opt callstack 0
  1946  00FB45                     _spin:
  1947                           	opt callstack 0
  1948  00FB45  7C                 	db	124
  1949  00FB46  7C                 	db	124
  1950  00FB47  2F                 	db	47
  1951  00FB48  2F                 	db	47
  1952  00FB49  2D                 	db	45
  1953  00FB4A  2D                 	db	45
  1954  00FB4B  00                 	db	0
  1955  00FB4C  00                 	db	0
  1956  00FB4D  00                 	db	0
  1957  00FB4E  00                 	db	0
  1958  00FB4F  00                 	db	0
  1959  00FB50  00                 	db	0
  1960  00FB51  00                 	db	0
  1961  00FB52  00                 	db	0
  1962  00FB53  00                 	db	0
  1963  00FB54  00                 	db	0
  1964  00FB55  00                 	db	0
  1965  00FB56  00                 	db	0
  1966  00FB57  00                 	db	0
  1967  00FB58  00                 	db	0
  1968  00FB59  7C                 	db	124
  1969  00FB5A  7C                 	db	124
  1970  00FB5B  2F                 	db	47
  1971  00FB5C  2F                 	db	47
  1972  00FB5D  2D                 	db	45
  1973  00FB5E  2D                 	db	45
  1974  00FB5F  5C                 	db	92
  1975  00FB60  5C                 	db	92
  1976  00FB61  00                 	db	0
  1977  00FB62  00                 	db	0
  1978  00FB63  00                 	db	0
  1979  00FB64  00                 	db	0
  1980  00FB65  00                 	db	0
  1981  00FB66  00                 	db	0
  1982  00FB67  00                 	db	0
  1983  00FB68  00                 	db	0
  1984  00FB69  00                 	db	0
  1985  00FB6A  00                 	db	0
  1986  00FB6B  00                 	db	0
  1987  00FB6C  00                 	db	0
  1988  00FB6D  4F                 	db	79
  1989  00FB6E  4F                 	db	79
  1990  00FB6F  4F                 	db	79
  1991  00FB70  4F                 	db	79
  1992  00FB71  4F                 	db	79
  1993  00FB72  4F                 	db	79
  1994  00FB73  2D                 	db	45
  1995  00FB74  2D                 	db	45
  1996  00FB75  5F                 	db	95
  1997  00FB76  5F                 	db	95
  1998  00FB77  2D                 	db	45
  1999  00FB78  00                 	db	0
  2000  00FB79  00                 	db	0
  2001  00FB7A  00                 	db	0
  2002  00FB7B  00                 	db	0
  2003  00FB7C  00                 	db	0
  2004  00FB7D  00                 	db	0
  2005  00FB7E  00                 	db	0
  2006  00FB7F  00                 	db	0
  2007  00FB80  00                 	db	0
  2008  00FB81  76                 	db	118
  2009  00FB82  76                 	db	118
  2010  00FB83  3C                 	db	60
  2011  00FB84  3C                 	db	60
  2012  00FB85  5E                 	db	94
  2013  00FB86  5E                 	db	94
  2014  00FB87  3E                 	db	62
  2015  00FB88  3E                 	db	62
  2016  00FB89  00                 	db	0
  2017  00FB8A  00                 	db	0
  2018  00FB8B  00                 	db	0
  2019  00FB8C  00                 	db	0
  2020  00FB8D  00                 	db	0
  2021  00FB8E  00                 	db	0
  2022  00FB8F  00                 	db	0
  2023  00FB90  00                 	db	0
  2024  00FB91  00                 	db	0
  2025  00FB92  00                 	db	0
  2026  00FB93  00                 	db	0
  2027  00FB94  00                 	db	0
  2028  00FB95  2E                 	db	46
  2029  00FB96  2E                 	db	46
  2030  00FB97  2A                 	db	42
  2031  00FB98  2A                 	db	42
  2032  00FB99  78                 	db	120
  2033  00FB9A  23                 	db	35
  2034  00FB9B  78                 	db	120
  2035  00FB9C  23                 	db	35
  2036  00FB9D  58                 	db	88
  2037  00FB9E  58                 	db	88
  2038  00FB9F  7C                 	db	124
  2039  00FBA0  7C                 	db	124
  2040  00FBA1  2D                 	db	45
  2041  00FBA2  2D                 	db	45
  2042  00FBA3  00                 	db	0
  2043  00FBA4  00                 	db	0
  2044  00FBA5  00                 	db	0
  2045  00FBA6  00                 	db	0
  2046  00FBA7  00                 	db	0
  2047  00FBA8  00                 	db	0
  2048  00FBA9  2E                 	db	46
  2049  00FBAA  2E                 	db	46
  2050  00FBAB  6F                 	db	111
  2051  00FBAC  6F                 	db	111
  2052  00FBAD  4F                 	db	79
  2053  00FBAE  4F                 	db	79
  2054  00FBAF  6F                 	db	111
  2055  00FBB0  6F                 	db	111
  2056  00FBB1  00                 	db	0
  2057  00FBB2  00                 	db	0
  2058  00FBB3  00                 	db	0
  2059  00FBB4  00                 	db	0
  2060  00FBB5  00                 	db	0
  2061  00FBB6  00                 	db	0
  2062  00FBB7  00                 	db	0
  2063  00FBB8  00                 	db	0
  2064  00FBB9  00                 	db	0
  2065  00FBBA  00                 	db	0
  2066  00FBBB  00                 	db	0
  2067  00FBBC  00                 	db	0
  2068  00FBBD                     __end_of_spin:
  2069                           	opt callstack 0
  2070  00FBBD  0000               	dw	0
  2071  00FBBF  3F80               	dw	16256
  2072  00FBC1  0000               	dw	0
  2073  00FBC3  3FC0               	dw	16320
  2074  00FBC5                     __end_of_bp:
  2075                           	opt callstack 0
  2076  00FBC5  AA00               	dw	43520
  2077  00FBC7  3FB8               	dw	16312
  2078  00FBC9                     __end_of_ivln2_h:
  2079                           	opt callstack 0
  2080  00FBC9  23C6               	dw	9158
  2081  00FBCB  B8F6               	dw	47350
  2082  00FBCD                     __end_of_cp_l:
  2083                           	opt callstack 0
  2084  00FBCD  4000               	dw	16384
  2085  00FBCF  3F76               	dw	16246
  2086  00FBD1                     __end_of_cp_h:
  2087                           	opt callstack 0
  2088  0000                     _IVTADL	set	14493
  2089  0000                     _IVTADH	set	14494
  2090  0000                     _IVTADU	set	14495
  2091  0000                     _PIR6bits	set	14758
  2092  0000                     _PIR4bits	set	14756
  2093  0000                     _PIE8bits	set	14744
  2094  0000                     _PIR8bits	set	14760
  2095  0000                     _SCANPR	set	14839
  2096  0000                     _DMA2PR	set	14836
  2097  0000                     _DMA1PR	set	14835
  2098  0000                     _MAINPR	set	14834
  2099  0000                     _ISRPR	set	14833
  2100  0000                     _PIE2bits	set	14738
  2101  0000                     _PIR2bits	set	14754
  2102  0000                     _PIE9bits	set	14745
  2103  0000                     _PIR9bits	set	14761
  2104  0000                     _PIE6bits	set	14742
  2105  0000                     _PIE3bits	set	14739
  2106  0000                     _PMD7	set	14791
  2107  0000                     _PMD6	set	14790
  2108  0000                     _PMD5	set	14789
  2109  0000                     _PMD4	set	14788
  2110  0000                     _PMD3	set	14787
  2111  0000                     _PMD2	set	14786
  2112  0000                     _PMD1	set	14785
  2113  0000                     _PMD0	set	14784
  2114  0000                     _OSCTUNE	set	14814
  2115  0000                     _OSCFRQ	set	14815
  2116  0000                     _OSCEN	set	14813
  2117  0000                     _OSCCON3	set	14811
  2118  0000                     _OSCCON1	set	14809
  2119  0000                     _IPR8bits	set	14728
  2120  0000                     _IPR9bits	set	14729
  2121  0000                     _IPR5bits	set	14725
  2122  0000                     _IPR1bits	set	14721
  2123  0000                     _IPR3bits	set	14723
  2124  0000                     _IPR6bits	set	14726
  2125  0000                     _IPR2bits	set	14722
  2126  0000                     _PIE5bits	set	14741
  2127  0000                     _PIE1bits	set	14737
  2128  0000                     _PIR5bits	set	14757
  2129  0000                     _PIR1bits	set	14753
  2130  0000                     _PLLR	set	118496
  2131  0000                     _SPI1SDIPPS	set	15071
  2132  0000                     _U1RXPPS	set	15077
  2133  0000                     _RC6PPS	set	14870
  2134  0000                     _RC5PPS	set	14869
  2135  0000                     _INT1PPS	set	15041
  2136  0000                     _RD1PPS	set	14873
  2137  0000                     _INT0PPS	set	15040
  2138  0000                     _RC3PPS	set	14867
  2139  0000                     _RB6PPS	set	14862
  2140  0000                     _SPI1SCKPPS	set	15070
  2141  0000                     _U2RXPPS	set	15080
  2142  0000                     _SLRCONF	set	14995
  2143  0000                     _SLRCONE	set	14979
  2144  0000                     _SLRCOND	set	14963
  2145  0000                     _SLRCONC	set	14947
  2146  0000                     _SLRCONB	set	14931
  2147  0000                     _SLRCONA	set	14915
  2148  0000                     _ODCOND	set	14962
  2149  0000                     _ODCONC	set	14946
  2150  0000                     _ODCONB	set	14930
  2151  0000                     _ODCONA	set	14914
  2152  0000                     _ODCONF	set	14994
  2153  0000                     _ODCONE	set	14978
  2154  0000                     _WPUC	set	14945
  2155  0000                     _WPUA	set	14913
  2156  0000                     _WPUB	set	14929
  2157  0000                     _WPUE	set	14977
  2158  0000                     _WPUF	set	14993
  2159  0000                     _WPUD	set	14961
  2160  0000                     _ANSELA	set	14912
  2161  0000                     _ANSELF	set	14992
  2162  0000                     _ANSELE	set	14976
  2163  0000                     _ANSELB	set	14928
  2164  0000                     _ANSELC	set	14944
  2165  0000                     _ANSELD	set	14960
  2166  0000                     _DMA2SSA	set	15321
  2167  0000                     _DMA1SSA	set	15353
  2168  0000                     _DMA2DSZ	set	15310
  2169  0000                     _DMA2SSZ	set	15319
  2170  0000                     _DMA2DSA	set	15312
  2171  0000                     _DMA1DSZ	set	15342
  2172  0000                     _DMA1SSZ	set	15351
  2173  0000                     _DMA1DSA	set	15344
  2174  0000                     _DMA2CON0bits	set	15324
  2175  0000                     _DMA2CON1bits	set	15325
  2176  0000                     _DMA1CON0bits	set	15356
  2177  0000                     _DMA1CON1bits	set	15357
  2178  0000                     _DMA2CON0	set	15324
  2179  0000                     _DMA2AIRQ	set	15326
  2180  0000                     _DMA2SIRQ	set	15327
  2181  0000                     _DMA2CON1	set	15325
  2182  0000                     _DMA1CON0	set	15356
  2183  0000                     _DMA1AIRQ	set	15358
  2184  0000                     _DMA1SIRQ	set	15359
  2185  0000                     _DMA1CON1	set	15357
  2186  0000                     _CLKRCON	set	15589
  2187  0000                     _CLKRCLK	set	15590
  2188  0000                     _SPI1STATUSbits	set	15639
  2189  0000                     _SPI1INTFbits	set	15642
  2190  0000                     _SPI1CON0bits	set	15636
  2191  0000                     _SPI1RXB	set	15632
  2192  0000                     _SPI1TXB	set	15633
  2193  0000                     _SPI1TCNTL	set	15634
  2194  0000                     _SPI1CON0	set	15636
  2195  0000                     _SPI1CLK	set	15644
  2196  0000                     _SPI1BAUD	set	15641
  2197  0000                     _SPI1CON2	set	15638
  2198  0000                     _SPI1CON1	set	15637
  2199  0000                     _U2RXB	set	15824
  2200  0000                     _U2TXB	set	15826
  2201  0000                     _U2ERRIE	set	15842
  2202  0000                     _U2ERRIR	set	15841
  2203  0000                     _U2UIR	set	15840
  2204  0000                     _U2FIFO	set	15839
  2205  0000                     _U2BRGH	set	15838
  2206  0000                     _U2BRGL	set	15837
  2207  0000                     _U2CON2	set	15836
  2208  0000                     _U2CON1	set	15835
  2209  0000                     _U2CON0	set	15834
  2210  0000                     _U2P3L	set	15832
  2211  0000                     _U2P2L	set	15830
  2212  0000                     _U2P1L	set	15828
  2213  0000                     _U1RXB	set	15848
  2214  0000                     _U1ERRIE	set	15866
  2215  0000                     _U1ERRIR	set	15865
  2216  0000                     _U1UIR	set	15864
  2217  0000                     _U1FIFO	set	15863
  2218  0000                     _U1BRGH	set	15862
  2219  0000                     _U1BRGL	set	15861
  2220  0000                     _U1CON2	set	15860
  2221  0000                     _U1CON1	set	15859
  2222  0000                     _U1CON0	set	15858
  2223  0000                     _U1P3H	set	15857
  2224  0000                     _U1P3L	set	15856
  2225  0000                     _U1P2H	set	15855
  2226  0000                     _U1P2L	set	15854
  2227  0000                     _U1P1H	set	15853
  2228  0000                     _U1P1L	set	15852
  2229  0000                     _FVRCON	set	16065
  2230  0000                     _ADFLTRL	set	16102
  2231  0000                     _ADFLTRH	set	16103
  2232  0000                     _ADCON0bits	set	16120
  2233  0000                     _ADCON0	set	16120
  2234  0000                     _ADCLK	set	16127
  2235  0000                     _ADACT	set	16126
  2236  0000                     _ADREF	set	16125
  2237  0000                     _ADSTAT	set	16124
  2238  0000                     _ADCON3	set	16123
  2239  0000                     _ADCON2	set	16122
  2240  0000                     _ADCON1	set	16121
  2241  0000                     _ADPREH	set	16119
  2242  0000                     _ADPREL	set	16118
  2243  0000                     _ADCAP	set	16117
  2244  0000                     _ADACQH	set	16116
  2245  0000                     _ADACQL	set	16115
  2246  0000                     _ADPCH	set	16113
  2247  0000                     _ADRPT	set	16108
  2248  0000                     _ADACCU	set	16106
  2249  0000                     _ADSTPTH	set	16101
  2250  0000                     _ADSTPTL	set	16100
  2251  0000                     _ADUTHH	set	16097
  2252  0000                     _ADUTHL	set	16096
  2253  0000                     _ADLTHH	set	16095
  2254  0000                     _ADLTHL	set	16094
  2255  0000                     _CCPTMRS1bits	set	16223
  2256  0000                     _PORTFbits	set	16335
  2257  0000                     _LATFbits	set	16319
  2258  0000                     _LATCbits	set	16316
  2259  0000                     _LATDbits	set	16317
  2260  0000                     _PORTBbits	set	16331
  2261  0000                     _T3CONbits	set	16294
  2262  0000                     _T3CON	set	16294
  2263  0000                     _TMR3L	set	16292
  2264  0000                     _TMR3H	set	16293
  2265  0000                     _T3CLK	set	16297
  2266  0000                     _T3GATE	set	16296
  2267  0000                     _T3GCON	set	16295
  2268  0000                     _T2CON	set	16300
  2269  0000                     _T2TMR	set	16298
  2270  0000                     _T2PR	set	16299
  2271  0000                     _T2RST	set	16303
  2272  0000                     _T2HLT	set	16301
  2273  0000                     _T2CLKCON	set	16302
  2274  0000                     _PWM8DCL	set	16224
  2275  0000                     _PWM8DCH	set	16225
  2276  0000                     _PWM8CON	set	16226
  2277  0000                     _LATEbits	set	16318
  2278  0000                     _T5CONbits	set	16282
  2279  0000                     _T5CON	set	16282
  2280  0000                     _TMR5L	set	16280
  2281  0000                     _TMR5H	set	16281
  2282  0000                     _T5CLK	set	16285
  2283  0000                     _T5GATE	set	16284
  2284  0000                     _T5GCON	set	16283
  2285  0000                     _T6CON	set	16276
  2286  0000                     _T6TMR	set	16274
  2287  0000                     _T6PR	set	16275
  2288  0000                     _T6RST	set	16279
  2289  0000                     _T6HLT	set	16277
  2290  0000                     _T6CLKCON	set	16278
  2291  0000                     _TRISD	set	16325
  2292  0000                     _TRISC	set	16324
  2293  0000                     _TRISB	set	16323
  2294  0000                     _TRISA	set	16322
  2295  0000                     _TRISF	set	16327
  2296  0000                     _TRISE	set	16326
  2297  0000                     _LATC	set	16316
  2298  0000                     _LATB	set	16315
  2299  0000                     _LATF	set	16319
  2300  0000                     _LATA	set	16314
  2301  0000                     _LATD	set	16317
  2302  0000                     _LATE	set	16318
  2303  0000                     _IVTLOCKbits	set	16340
  2304  0000                     _IVTLOCK	set	16340
  2305  0000                     _INTCON0bits	set	16338
  2306  0000                     _GIE	set	130711
  2307  00FBD1                     STR_64:
  2308                           
  2309                           ; BSR set to: 57
  2310  00FBD1  20                 	db	32
  2311  00FBD2  25                 	db	37
  2312  00FBD3  63                 	db	99	;'c'
  2313  00FBD4  20                 	db	32
  2314  00FBD5  2C                 	db	44
  2315  00FBD6  25                 	db	37
  2316  00FBD7  6C                 	db	108	;'l'
  2317  00FBD8  75                 	db	117	;'u'
  2318  00FBD9  2C                 	db	44
  2319  00FBDA  25                 	db	37
  2320  00FBDB  34                 	db	52	;'4'
  2321  00FBDC  2E                 	db	46
  2322  00FBDD  34                 	db	52	;'4'
  2323  00FBDE  66                 	db	102	;'f'
  2324  00FBDF  2C                 	db	44
  2325  00FBE0  25                 	db	37
  2326  00FBE1  34                 	db	52	;'4'
  2327  00FBE2  2E                 	db	46
  2328  00FBE3  34                 	db	52	;'4'
  2329  00FBE4  66                 	db	102	;'f'
  2330  00FBE5  2C                 	db	44
  2331  00FBE6  25                 	db	37
  2332  00FBE7  34                 	db	52	;'4'
  2333  00FBE8  2E                 	db	46
  2334  00FBE9  34                 	db	52	;'4'
  2335  00FBEA  66                 	db	102	;'f'
  2336  00FBEB  2C                 	db	44
  2337  00FBEC  25                 	db	37
  2338  00FBED  34                 	db	52	;'4'
  2339  00FBEE  2E                 	db	46
  2340  00FBEF  34                 	db	52	;'4'
  2341  00FBF0  66                 	db	102	;'f'
  2342  00FBF1  2C                 	db	44
  2343  00FBF2  25                 	db	37
  2344  00FBF3  34                 	db	52	;'4'
  2345  00FBF4  2E                 	db	46
  2346  00FBF5  33                 	db	51	;'3'
  2347  00FBF6  66                 	db	102	;'f'
  2348  00FBF7  2C                 	db	44
  2349  00FBF8  25                 	db	37
  2350  00FBF9  34                 	db	52	;'4'
  2351  00FBFA  2E                 	db	46
  2352  00FBFB  33                 	db	51	;'3'
  2353  00FBFC  66                 	db	102	;'f'
  2354  00FBFD  2C                 	db	44
  2355  00FBFE  25                 	db	37
  2356  00FBFF  34                 	db	52	;'4'
  2357  00FC00  2E                 	db	46
  2358  00FC01  33                 	db	51	;'3'
  2359  00FC02  66                 	db	102	;'f'
  2360  00FC03  2C                 	db	44
  2361  00FC04  25                 	db	37
  2362  00FC05  34                 	db	52	;'4'
  2363  00FC06  2E                 	db	46
  2364  00FC07  33                 	db	51	;'3'
  2365  00FC08  66                 	db	102	;'f'
  2366  00FC09  2C                 	db	44
  2367  00FC0A  25                 	db	37
  2368  00FC0B  34                 	db	52	;'4'
  2369  00FC0C  2E                 	db	46
  2370  00FC0D  33                 	db	51	;'3'
  2371  00FC0E  66                 	db	102	;'f'
  2372  00FC0F  2C                 	db	44
  2373  00FC10  25                 	db	37
  2374  00FC11  34                 	db	52	;'4'
  2375  00FC12  2E                 	db	46
  2376  00FC13  33                 	db	51	;'3'
  2377  00FC14  66                 	db	102	;'f'
  2378  00FC15  2C                 	db	44
  2379  00FC16  25                 	db	37
  2380  00FC17  64                 	db	100	;'d'
  2381  00FC18  2C                 	db	44
  2382  00FC19  25                 	db	37
  2383  00FC1A  64                 	db	100	;'d'
  2384  00FC1B  2C                 	db	44
  2385  00FC1C  25                 	db	37
  2386  00FC1D  32                 	db	50	;'2'
  2387  00FC1E  2E                 	db	46
  2388  00FC1F  36                 	db	54	;'6'
  2389  00FC20  66                 	db	102	;'f'
  2390  00FC21  2C                 	db	44
  2391  00FC22  25                 	db	37
  2392  00FC23  34                 	db	52	;'4'
  2393  00FC24  2E                 	db	46
  2394  00FC25  33                 	db	51	;'3'
  2395  00FC26  66                 	db	102	;'f'
  2396  00FC27  2C                 	db	44
  2397  00FC28  25                 	db	37
  2398  00FC29  64                 	db	100	;'d'
  2399  00FC2A  2C                 	db	44
  2400  00FC2B  25                 	db	37
  2401  00FC2C  64                 	db	100	;'d'
  2402  00FC2D  2C                 	db	44
  2403  00FC2E  25                 	db	37
  2404  00FC2F  6C                 	db	108	;'l'
  2405  00FC30  75                 	db	117	;'u'
  2406  00FC31  2C                 	db	44
  2407  00FC32  25                 	db	37
  2408  00FC33  6C                 	db	108	;'l'
  2409  00FC34  75                 	db	117	;'u'
  2410  00FC35  2C                 	db	44
  2411  00FC36  25                 	db	37
  2412  00FC37  34                 	db	52	;'4'
  2413  00FC38  2E                 	db	46
  2414  00FC39  33                 	db	51	;'3'
  2415  00FC3A  66                 	db	102	;'f'
  2416  00FC3B  2C                 	db	44
  2417  00FC3C  25                 	db	37
  2418  00FC3D  34                 	db	52	;'4'
  2419  00FC3E  2E                 	db	46
  2420  00FC3F  33                 	db	51	;'3'
  2421  00FC40  66                 	db	102	;'f'
  2422  00FC41  2C                 	db	44
  2423  00FC42  25                 	db	37
  2424  00FC43  34                 	db	52	;'4'
  2425  00FC44  2E                 	db	46
  2426  00FC45  33                 	db	51	;'3'
  2427  00FC46  66                 	db	102	;'f'
  2428  00FC47  0D                 	db	13
  2429  00FC48  0A                 	db	10
  2430  00FC49  00                 	db	0
  2431  00FC4A                     STR_36:
  2432                           
  2433                           ; BSR set to: 57
  2434  00FC4A  53                 	db	83	;'S'
  2435  00FC4B  25                 	db	37
  2436  00FC4C  63                 	db	99	;'c'
  2437  00FC4D  43                 	db	67	;'C'
  2438  00FC4E  20                 	db	32
  2439  00FC4F  25                 	db	37
  2440  00FC50  64                 	db	100	;'d'
  2441  00FC51  20                 	db	32
  2442  00FC52  52                 	db	82	;'R'
  2443  00FC53  55                 	db	85	;'U'
  2444  00FC54  4E                 	db	78	;'N'
  2445  00FC55  20                 	db	32
  2446  00FC56  25                 	db	37
  2447  00FC57  64                 	db	100	;'d'
  2448  00FC58  20                 	db	32
  2449  00FC59  56                 	db	86	;'V'
  2450  00FC5A  25                 	db	37
  2451  00FC5B  32                 	db	50	;'2'
  2452  00FC5C  2E                 	db	46
  2453  00FC5D  32                 	db	50	;'2'
  2454  00FC5E  66                 	db	102	;'f'
  2455  00FC5F  20                 	db	32
  2456  00FC60  20                 	db	32
  2457  00FC61  20                 	db	32
  2458  00FC62  20                 	db	32
  2459  00FC63  20                 	db	32
  2460  00FC64  20                 	db	32
  2461  00FC65  20                 	db	32
  2462  00FC66  00                 	db	0
  2463  00FC67                     STR_17:
  2464                           
  2465                           ; BSR set to: 57
  2466  00FC67  52                 	db	82	;'R'
  2467  00FC68  31                 	db	49	;'1'
  2468  00FC69  20                 	db	32
  2469  00FC6A  25                 	db	37
  2470  00FC6B  32                 	db	50	;'2'
  2471  00FC6C  2E                 	db	46
  2472  00FC6D  33                 	db	51	;'3'
  2473  00FC6E  66                 	db	102	;'f'
  2474  00FC6F  20                 	db	32
  2475  00FC70  25                 	db	37
  2476  00FC71  33                 	db	51	;'3'
  2477  00FC72  2E                 	db	46
  2478  00FC73  34                 	db	52	;'4'
  2479  00FC74  66                 	db	102	;'f'
  2480  00FC75  20                 	db	32
  2481  00FC76  20                 	db	32
  2482  00FC77  20                 	db	32
  2483  00FC78  20                 	db	32
  2484  00FC79  20                 	db	32
  2485  00FC7A  20                 	db	32
  2486  00FC7B  20                 	db	32
  2487  00FC7C  20                 	db	32
  2488  00FC7D  20                 	db	32
  2489  00FC7E  20                 	db	32
  2490  00FC7F  20                 	db	32
  2491  00FC80  00                 	db	0
  2492  00FC81                     STR_18:
  2493                           
  2494                           ; BSR set to: 57
  2495  00FC81  52                 	db	82	;'R'
  2496  00FC82  32                 	db	50	;'2'
  2497  00FC83  20                 	db	32
  2498  00FC84  25                 	db	37
  2499  00FC85  32                 	db	50	;'2'
  2500  00FC86  2E                 	db	46
  2501  00FC87  33                 	db	51	;'3'
  2502  00FC88  66                 	db	102	;'f'
  2503  00FC89  20                 	db	32
  2504  00FC8A  25                 	db	37
  2505  00FC8B  33                 	db	51	;'3'
  2506  00FC8C  2E                 	db	46
  2507  00FC8D  34                 	db	52	;'4'
  2508  00FC8E  66                 	db	102	;'f'
  2509  00FC8F  20                 	db	32
  2510  00FC90  20                 	db	32
  2511  00FC91  20                 	db	32
  2512  00FC92  20                 	db	32
  2513  00FC93  20                 	db	32
  2514  00FC94  20                 	db	32
  2515  00FC95  20                 	db	32
  2516  00FC96  20                 	db	32
  2517  00FC97  20                 	db	32
  2518  00FC98  20                 	db	32
  2519  00FC99  20                 	db	32
  2520  00FC9A  00                 	db	0
  2521  00FC9B                     STR_9:
  2522                           
  2523                           ; BSR set to: 57
  2524  00FC9B  53                 	db	83	;'S'
  2525  00FC9C  20                 	db	32
  2526  00FC9D  53                 	db	83	;'S'
  2527  00FC9E  25                 	db	37
  2528  00FC9F  63                 	db	99	;'c'
  2529  00FCA0  43                 	db	67	;'C'
  2530  00FCA1  20                 	db	32
  2531  00FCA2  25                 	db	37
  2532  00FCA3  64                 	db	100	;'d'
  2533  00FCA4  20                 	db	32
  2534  00FCA5  25                 	db	37
  2535  00FCA6  32                 	db	50	;'2'
  2536  00FCA7  2E                 	db	46
  2537  00FCA8  34                 	db	52	;'4'
  2538  00FCA9  66                 	db	102	;'f'
  2539  00FCAA  20                 	db	32
  2540  00FCAB  20                 	db	32
  2541  00FCAC  20                 	db	32
  2542  00FCAD  20                 	db	32
  2543  00FCAE  20                 	db	32
  2544  00FCAF  20                 	db	32
  2545  00FCB0  20                 	db	32
  2546  00FCB1  20                 	db	32
  2547  00FCB2  20                 	db	32
  2548  00FCB3  20                 	db	32
  2549  00FCB4  00                 	db	0
  2550  00FCB5                     
  2551                           ; BSR set to: 57
  2552  00FCB5  20                 	db	32
  2553  00FCB6  4D                 	db	77	;'M'
  2554  00FCB7  65                 	db	101	;'e'
  2555  00FCB8  73                 	db	115	;'s'
  2556  00FCB9  67                 	db	103	;'g'
  2557  00FCBA  20                 	db	32
  2558  00FCBB  25                 	db	37
  2559  00FCBC  64                 	db	100	;'d'
  2560  00FCBD  20                 	db	32
  2561  00FCBE  53                 	db	83	;'S'
  2562  00FCBF  74                 	db	116	;'t'
  2563  00FCC0  61                 	db	97	;'a'
  2564  00FCC1  63                 	db	99	;'c'
  2565  00FCC2  6B                 	db	107	;'k'
  2566  00FCC3  20                 	db	32
  2567  00FCC4  25                 	db	37
  2568  00FCC5  64                 	db	100	;'d'
  2569  00FCC6  20                 	db	32
  2570  00FCC7  20                 	db	32
  2571  00FCC8  20                 	db	32
  2572  00FCC9  20                 	db	32
  2573  00FCCA  20                 	db	32
  2574  00FCCB  20                 	db	32
  2575  00FCCC  00                 	db	0
  2576  00FCCD                     STR_37:
  2577                           
  2578                           ; BSR set to: 57
  2579  00FCCD  45                 	db	69	;'E'
  2580  00FCCE  53                 	db	83	;'S'
  2581  00FCCF  52                 	db	82	;'R'
  2582  00FCD0  20                 	db	32
  2583  00FCD1  20                 	db	32
  2584  00FCD2  25                 	db	37
  2585  00FCD3  32                 	db	50	;'2'
  2586  00FCD4  2E                 	db	46
  2587  00FCD5  36                 	db	54	;'6'
  2588  00FCD6  66                 	db	102	;'f'
  2589  00FCD7  20                 	db	32
  2590  00FCD8  20                 	db	32
  2591  00FCD9  20                 	db	32
  2592  00FCDA  20                 	db	32
  2593  00FCDB  20                 	db	32
  2594  00FCDC  20                 	db	32
  2595  00FCDD  20                 	db	32
  2596  00FCDE  20                 	db	32
  2597  00FCDF  20                 	db	32
  2598  00FCE0  20                 	db	32
  2599  00FCE1  20                 	db	32
  2600  00FCE2  20                 	db	32
  2601  00FCE3  00                 	db	0
  2602  00FCE4                     STR_34:
  2603                           
  2604                           ; BSR set to: 57
  2605  00FCE4  42                 	db	66	;'B'
  2606  00FCE5  41                 	db	65	;'A'
  2607  00FCE6  54                 	db	84	;'T'
  2608  00FCE7  54                 	db	84	;'T'
  2609  00FCE8  20                 	db	32
  2610  00FCE9  50                 	db	80	;'P'
  2611  00FCEA  57                 	db	87	;'W'
  2612  00FCEB  52                 	db	82	;'R'
  2613  00FCEC  20                 	db	32
  2614  00FCED  25                 	db	37
  2615  00FCEE  33                 	db	51	;'3'
  2616  00FCEF  2E                 	db	46
  2617  00FCF0  32                 	db	50	;'2'
  2618  00FCF1  66                 	db	102	;'f'
  2619  00FCF2  20                 	db	32
  2620  00FCF3  20                 	db	32
  2621  00FCF4  20                 	db	32
  2622  00FCF5  20                 	db	32
  2623  00FCF6  20                 	db	32
  2624  00FCF7  20                 	db	32
  2625  00FCF8  20                 	db	32
  2626  00FCF9  20                 	db	32
  2627  00FCFA  00                 	db	0
  2628  00FCFB                     STR_38:
  2629                           
  2630                           ; BSR set to: 57
  2631  00FCFB  52                 	db	82	;'R'
  2632  00FCFC  31                 	db	49	;'1'
  2633  00FCFD  20                 	db	32
  2634  00FCFE  25                 	db	37
  2635  00FCFF  32                 	db	50	;'2'
  2636  00FD00  2E                 	db	46
  2637  00FD01  33                 	db	51	;'3'
  2638  00FD02  66                 	db	102	;'f'
  2639  00FD03  20                 	db	32
  2640  00FD04  25                 	db	37
  2641  00FD05  33                 	db	51	;'3'
  2642  00FD06  2E                 	db	46
  2643  00FD07  34                 	db	52	;'4'
  2644  00FD08  66                 	db	102	;'f'
  2645  00FD09  20                 	db	32
  2646  00FD0A  20                 	db	32
  2647  00FD0B  20                 	db	32
  2648  00FD0C  20                 	db	32
  2649  00FD0D  20                 	db	32
  2650  00FD0E  20                 	db	32
  2651  00FD0F  20                 	db	32
  2652  00FD10  20                 	db	32
  2653  00FD11  00                 	db	0
  2654  00FD12                     STR_39:
  2655                           
  2656                           ; BSR set to: 57
  2657  00FD12  52                 	db	82	;'R'
  2658  00FD13  32                 	db	50	;'2'
  2659  00FD14  20                 	db	32
  2660  00FD15  25                 	db	37
  2661  00FD16  32                 	db	50	;'2'
  2662  00FD17  2E                 	db	46
  2663  00FD18  33                 	db	51	;'3'
  2664  00FD19  66                 	db	102	;'f'
  2665  00FD1A  20                 	db	32
  2666  00FD1B  25                 	db	37
  2667  00FD1C  33                 	db	51	;'3'
  2668  00FD1D  2E                 	db	46
  2669  00FD1E  34                 	db	52	;'4'
  2670  00FD1F  66                 	db	102	;'f'
  2671  00FD20  20                 	db	32
  2672  00FD21  20                 	db	32
  2673  00FD22  20                 	db	32
  2674  00FD23  20                 	db	32
  2675  00FD24  20                 	db	32
  2676  00FD25  20                 	db	32
  2677  00FD26  20                 	db	32
  2678  00FD27  20                 	db	32
  2679  00FD28  00                 	db	0
  2680  00FD29                     STR_35:
  2681                           
  2682                           ; BSR set to: 57
  2683  00FD29  42                 	db	66	;'B'
  2684  00FD2A  41                 	db	65	;'A'
  2685  00FD2B  48                 	db	72	;'H'
  2686  00FD2C  20                 	db	32
  2687  00FD2D  25                 	db	37
  2688  00FD2E  33                 	db	51	;'3'
  2689  00FD2F  2E                 	db	46
  2690  00FD30  32                 	db	50	;'2'
  2691  00FD31  66                 	db	102	;'f'
  2692  00FD32  20                 	db	32
  2693  00FD33  50                 	db	80	;'P'
  2694  00FD34  25                 	db	37
  2695  00FD35  33                 	db	51	;'3'
  2696  00FD36  2E                 	db	46
  2697  00FD37  32                 	db	50	;'2'
  2698  00FD38  66                 	db	102	;'f'
  2699  00FD39  20                 	db	32
  2700  00FD3A  20                 	db	32
  2701  00FD3B  20                 	db	32
  2702  00FD3C  20                 	db	32
  2703  00FD3D  20                 	db	32
  2704  00FD3E  20                 	db	32
  2705  00FD3F  00                 	db	0
  2706  00FD40                     STR_16:
  2707                           
  2708                           ; BSR set to: 57
  2709  00FD40  45                 	db	69	;'E'
  2710  00FD41  53                 	db	83	;'S'
  2711  00FD42  52                 	db	82	;'R'
  2712  00FD43  20                 	db	32
  2713  00FD44  20                 	db	32
  2714  00FD45  25                 	db	37
  2715  00FD46  32                 	db	50	;'2'
  2716  00FD47  2E                 	db	46
  2717  00FD48  36                 	db	54	;'6'
  2718  00FD49  66                 	db	102	;'f'
  2719  00FD4A  20                 	db	32
  2720  00FD4B  20                 	db	32
  2721  00FD4C  20                 	db	32
  2722  00FD4D  20                 	db	32
  2723  00FD4E  20                 	db	32
  2724  00FD4F  20                 	db	32
  2725  00FD50  20                 	db	32
  2726  00FD51  20                 	db	32
  2727  00FD52  20                 	db	32
  2728  00FD53  20                 	db	32
  2729  00FD54  20                 	db	32
  2730  00FD55  00                 	db	0
  2731  00FD56                     STR_10:
  2732                           
  2733                           ; BSR set to: 57
  2734  00FD56  53                 	db	83	;'S'
  2735  00FD57  74                 	db	116	;'t'
  2736  00FD58  61                 	db	97	;'a'
  2737  00FD59  74                 	db	116	;'t'
  2738  00FD5A  69                 	db	105	;'i'
  2739  00FD5B  63                 	db	99	;'c'
  2740  00FD5C  20                 	db	32
  2741  00FD5D  53                 	db	83	;'S'
  2742  00FD5E  4F                 	db	79	;'O'
  2743  00FD5F  43                 	db	67	;'C'
  2744  00FD60  20                 	db	32
  2745  00FD61  25                 	db	37
  2746  00FD62  64                 	db	100	;'d'
  2747  00FD63  20                 	db	32
  2748  00FD64  20                 	db	32
  2749  00FD65  20                 	db	32
  2750  00FD66  20                 	db	32
  2751  00FD67  20                 	db	32
  2752  00FD68  20                 	db	32
  2753  00FD69  20                 	db	32
  2754  00FD6A  20                 	db	32
  2755  00FD6B  00                 	db	0
  2756  00FD6C                     STR_31:
  2757                           
  2758                           ; BSR set to: 57
  2759  00FD6C  42                 	db	66	;'B'
  2760  00FD6D  41                 	db	65	;'A'
  2761  00FD6E  54                 	db	84	;'T'
  2762  00FD6F  20                 	db	32
  2763  00FD70  49                 	db	73	;'I'
  2764  00FD71  57                 	db	87	;'W'
  2765  00FD72  48                 	db	72	;'H'
  2766  00FD73  20                 	db	32
  2767  00FD74  25                 	db	37
  2768  00FD75  34                 	db	52	;'4'
  2769  00FD76  2E                 	db	46
  2770  00FD77  31                 	db	49	;'1'
  2771  00FD78  66                 	db	102	;'f'
  2772  00FD79  20                 	db	32
  2773  00FD7A  20                 	db	32
  2774  00FD7B  20                 	db	32
  2775  00FD7C  20                 	db	32
  2776  00FD7D  20                 	db	32
  2777  00FD7E  20                 	db	32
  2778  00FD7F  20                 	db	32
  2779  00FD80  20                 	db	32
  2780  00FD81  00                 	db	0
  2781  00FD82                     STR_32:
  2782                           
  2783                           ; BSR set to: 57
  2784  00FD82  42                 	db	66	;'B'
  2785  00FD83  41                 	db	65	;'A'
  2786  00FD84  54                 	db	84	;'T'
  2787  00FD85  20                 	db	32
  2788  00FD86  4F                 	db	79	;'O'
  2789  00FD87  57                 	db	87	;'W'
  2790  00FD88  48                 	db	72	;'H'
  2791  00FD89  20                 	db	32
  2792  00FD8A  25                 	db	37
  2793  00FD8B  34                 	db	52	;'4'
  2794  00FD8C  2E                 	db	46
  2795  00FD8D  31                 	db	49	;'1'
  2796  00FD8E  66                 	db	102	;'f'
  2797  00FD8F  20                 	db	32
  2798  00FD90  20                 	db	32
  2799  00FD91  20                 	db	32
  2800  00FD92  20                 	db	32
  2801  00FD93  20                 	db	32
  2802  00FD94  20                 	db	32
  2803  00FD95  20                 	db	32
  2804  00FD96  20                 	db	32
  2805  00FD97  00                 	db	0
  2806  00FD98                     STR_33:
  2807                           
  2808                           ; BSR set to: 57
  2809  00FD98  42                 	db	66	;'B'
  2810  00FD99  41                 	db	65	;'A'
  2811  00FD9A  54                 	db	84	;'T'
  2812  00FD9B  20                 	db	32
  2813  00FD9C  54                 	db	84	;'T'
  2814  00FD9D  57                 	db	87	;'W'
  2815  00FD9E  48                 	db	72	;'H'
  2816  00FD9F  20                 	db	32
  2817  00FDA0  25                 	db	37
  2818  00FDA1  34                 	db	52	;'4'
  2819  00FDA2  2E                 	db	46
  2820  00FDA3  31                 	db	49	;'1'
  2821  00FDA4  66                 	db	102	;'f'
  2822  00FDA5  20                 	db	32
  2823  00FDA6  20                 	db	32
  2824  00FDA7  20                 	db	32
  2825  00FDA8  20                 	db	32
  2826  00FDA9  20                 	db	32
  2827  00FDAA  20                 	db	32
  2828  00FDAB  20                 	db	32
  2829  00FDAC  20                 	db	32
  2830  00FDAD  00                 	db	0
  2831  00FDAE                     STR_27:
  2832                           
  2833                           ; BSR set to: 57
  2834  00FDAE  49                 	db	73	;'I'
  2835  00FDAF  4E                 	db	78	;'N'
  2836  00FDB0  56                 	db	86	;'V'
  2837  00FDB1  20                 	db	32
  2838  00FDB2  20                 	db	32
  2839  00FDB3  57                 	db	87	;'W'
  2840  00FDB4  48                 	db	72	;'H'
  2841  00FDB5  20                 	db	32
  2842  00FDB6  25                 	db	37
  2843  00FDB7  33                 	db	51	;'3'
  2844  00FDB8  2E                 	db	46
  2845  00FDB9  32                 	db	50	;'2'
  2846  00FDBA  66                 	db	102	;'f'
  2847  00FDBB  20                 	db	32
  2848  00FDBC  20                 	db	32
  2849  00FDBD  20                 	db	32
  2850  00FDBE  20                 	db	32
  2851  00FDBF  20                 	db	32
  2852  00FDC0  20                 	db	32
  2853  00FDC1  20                 	db	32
  2854  00FDC2  20                 	db	32
  2855  00FDC3  00                 	db	0
  2856  00FDC4                     STR_26:
  2857                           
  2858                           ; BSR set to: 57
  2859  00FDC4  4C                 	db	76	;'L'
  2860  00FDC5  4F                 	db	79	;'O'
  2861  00FDC6  41                 	db	65	;'A'
  2862  00FDC7  44                 	db	68	;'D'
  2863  00FDC8  20                 	db	32
  2864  00FDC9  57                 	db	87	;'W'
  2865  00FDCA  48                 	db	72	;'H'
  2866  00FDCB  20                 	db	32
  2867  00FDCC  25                 	db	37
  2868  00FDCD  33                 	db	51	;'3'
  2869  00FDCE  2E                 	db	46
  2870  00FDCF  32                 	db	50	;'2'
  2871  00FDD0  66                 	db	102	;'f'
  2872  00FDD1  20                 	db	32
  2873  00FDD2  20                 	db	32
  2874  00FDD3  20                 	db	32
  2875  00FDD4  20                 	db	32
  2876  00FDD5  20                 	db	32
  2877  00FDD6  20                 	db	32
  2878  00FDD7  20                 	db	32
  2879  00FDD8  20                 	db	32
  2880  00FDD9  00                 	db	0
  2881  00FDDA                     STR_25:
  2882                           
  2883                           ; BSR set to: 57
  2884  00FDDA  50                 	db	80	;'P'
  2885  00FDDB  56                 	db	86	;'V'
  2886  00FDDC  20                 	db	32
  2887  00FDDD  25                 	db	37
  2888  00FDDE  63                 	db	99	;'c'
  2889  00FDDF  20                 	db	32
  2890  00FDE0  57                 	db	87	;'W'
  2891  00FDE1  48                 	db	72	;'H'
  2892  00FDE2  20                 	db	32
  2893  00FDE3  25                 	db	37
  2894  00FDE4  33                 	db	51	;'3'
  2895  00FDE5  2E                 	db	46
  2896  00FDE6  32                 	db	50	;'2'
  2897  00FDE7  66                 	db	102	;'f'
  2898  00FDE8  20                 	db	32
  2899  00FDE9  20                 	db	32
  2900  00FDEA  20                 	db	32
  2901  00FDEB  20                 	db	32
  2902  00FDEC  20                 	db	32
  2903  00FDED  20                 	db	32
  2904  00FDEE  20                 	db	32
  2905  00FDEF  00                 	db	0
  2906  00FDF0                     STR_24:
  2907                           
  2908                           ; BSR set to: 57
  2909  00FDF0  49                 	db	73	;'I'
  2910  00FDF1  4E                 	db	78	;'N'
  2911  00FDF2  56                 	db	86	;'V'
  2912  00FDF3  20                 	db	32
  2913  00FDF4  20                 	db	32
  2914  00FDF5  50                 	db	80	;'P'
  2915  00FDF6  57                 	db	87	;'W'
  2916  00FDF7  52                 	db	82	;'R'
  2917  00FDF8  20                 	db	32
  2918  00FDF9  25                 	db	37
  2919  00FDFA  33                 	db	51	;'3'
  2920  00FDFB  2E                 	db	46
  2921  00FDFC  32                 	db	50	;'2'
  2922  00FDFD  66                 	db	102	;'f'
  2923  00FDFE  20                 	db	32
  2924  00FDFF  20                 	db	32
  2925  00FE00  20                 	db	32
  2926  00FE01  20                 	db	32
  2927  00FE02  20                 	db	32
  2928  00FE03  20                 	db	32
  2929  00FE04  20                 	db	32
  2930  00FE05  00                 	db	0
  2931  00FE06                     STR_23:
  2932                           
  2933                           ; BSR set to: 57
  2934  00FE06  4C                 	db	76	;'L'
  2935  00FE07  4F                 	db	79	;'O'
  2936  00FE08  41                 	db	65	;'A'
  2937  00FE09  44                 	db	68	;'D'
  2938  00FE0A  20                 	db	32
  2939  00FE0B  50                 	db	80	;'P'
  2940  00FE0C  57                 	db	87	;'W'
  2941  00FE0D  52                 	db	82	;'R'
  2942  00FE0E  20                 	db	32
  2943  00FE0F  25                 	db	37
  2944  00FE10  33                 	db	51	;'3'
  2945  00FE11  2E                 	db	46
  2946  00FE12  32                 	db	50	;'2'
  2947  00FE13  66                 	db	102	;'f'
  2948  00FE14  20                 	db	32
  2949  00FE15  20                 	db	32
  2950  00FE16  20                 	db	32
  2951  00FE17  20                 	db	32
  2952  00FE18  20                 	db	32
  2953  00FE19  20                 	db	32
  2954  00FE1A  20                 	db	32
  2955  00FE1B  00                 	db	0
  2956  00FE1C                     STR_22:
  2957                           
  2958                           ; BSR set to: 57
  2959  00FE1C  50                 	db	80	;'P'
  2960  00FE1D  56                 	db	86	;'V'
  2961  00FE1E  20                 	db	32
  2962  00FE1F  25                 	db	37
  2963  00FE20  63                 	db	99	;'c'
  2964  00FE21  20                 	db	32
  2965  00FE22  50                 	db	80	;'P'
  2966  00FE23  57                 	db	87	;'W'
  2967  00FE24  52                 	db	82	;'R'
  2968  00FE25  20                 	db	32
  2969  00FE26  25                 	db	37
  2970  00FE27  33                 	db	51	;'3'
  2971  00FE28  2E                 	db	46
  2972  00FE29  32                 	db	50	;'2'
  2973  00FE2A  66                 	db	102	;'f'
  2974  00FE2B  20                 	db	32
  2975  00FE2C  20                 	db	32
  2976  00FE2D  20                 	db	32
  2977  00FE2E  20                 	db	32
  2978  00FE2F  20                 	db	32
  2979  00FE30  20                 	db	32
  2980  00FE31  00                 	db	0
  2981  00FE32                     STR_11:
  2982                           
  2983                           ; BSR set to: 57
  2984  00FE32  42                 	db	66	;'B'
  2985  00FE33  61                 	db	97	;'a'
  2986  00FE34  74                 	db	116	;'t'
  2987  00FE35  74                 	db	116	;'t'
  2988  00FE36  65                 	db	101	;'e'
  2989  00FE37  72                 	db	114	;'r'
  2990  00FE38  79                 	db	121	;'y'
  2991  00FE39  20                 	db	32
  2992  00FE3A  41                 	db	65	;'A'
  2993  00FE3B  68                 	db	104	;'h'
  2994  00FE3C  20                 	db	32
  2995  00FE3D  25                 	db	37
  2996  00FE3E  33                 	db	51	;'3'
  2997  00FE3F  2E                 	db	46
  2998  00FE40  32                 	db	50	;'2'
  2999  00FE41  66                 	db	102	;'f'
  3000  00FE42  20                 	db	32
  3001  00FE43  20                 	db	32
  3002  00FE44  20                 	db	32
  3003  00FE45  20                 	db	32
  3004  00FE46  20                 	db	32
  3005  00FE47  00                 	db	0
  3006  00FE48                     STR_29:
  3007                           
  3008                           ; BSR set to: 57
  3009  00FE48  42                 	db	66	;'B'
  3010  00FE49  56                 	db	86	;'V'
  3011  00FE4A  20                 	db	32
  3012  00FE4B  25                 	db	37
  3013  00FE4C  32                 	db	50	;'2'
  3014  00FE4D  2E                 	db	46
  3015  00FE4E  32                 	db	50	;'2'
  3016  00FE4F  66                 	db	102	;'f'
  3017  00FE50  20                 	db	32
  3018  00FE51  42                 	db	66	;'B'
  3019  00FE52  41                 	db	65	;'A'
  3020  00FE53  20                 	db	32
  3021  00FE54  25                 	db	37
  3022  00FE55  32                 	db	50	;'2'
  3023  00FE56  2E                 	db	46
  3024  00FE57  32                 	db	50	;'2'
  3025  00FE58  66                 	db	102	;'f'
  3026  00FE59  20                 	db	32
  3027  00FE5A  20                 	db	32
  3028  00FE5B  20                 	db	32
  3029  00FE5C  20                 	db	32
  3030  00FE5D  00                 	db	0
  3031  00FE5E                     STR_30:
  3032                           
  3033                           ; BSR set to: 57
  3034  00FE5E  43                 	db	67	;'C'
  3035  00FE5F  56                 	db	86	;'V'
  3036  00FE60  20                 	db	32
  3037  00FE61  25                 	db	37
  3038  00FE62  32                 	db	50	;'2'
  3039  00FE63  2E                 	db	46
  3040  00FE64  32                 	db	50	;'2'
  3041  00FE65  66                 	db	102	;'f'
  3042  00FE66  20                 	db	32
  3043  00FE67  4C                 	db	76	;'L'
  3044  00FE68  41                 	db	65	;'A'
  3045  00FE69  20                 	db	32
  3046  00FE6A  25                 	db	37
  3047  00FE6B  32                 	db	50	;'2'
  3048  00FE6C  2E                 	db	46
  3049  00FE6D  32                 	db	50	;'2'
  3050  00FE6E  66                 	db	102	;'f'
  3051  00FE6F  20                 	db	32
  3052  00FE70  20                 	db	32
  3053  00FE71  20                 	db	32
  3054  00FE72  20                 	db	32
  3055  00FE73  00                 	db	0
  3056  00FE74                     STR_28:
  3057                           
  3058                           ; BSR set to: 57
  3059  00FE74  50                 	db	80	;'P'
  3060  00FE75  56                 	db	86	;'V'
  3061  00FE76  20                 	db	32
  3062  00FE77  25                 	db	37
  3063  00FE78  32                 	db	50	;'2'
  3064  00FE79  2E                 	db	46
  3065  00FE7A  32                 	db	50	;'2'
  3066  00FE7B  66                 	db	102	;'f'
  3067  00FE7C  20                 	db	32
  3068  00FE7D  50                 	db	80	;'P'
  3069  00FE7E  41                 	db	65	;'A'
  3070  00FE7F  20                 	db	32
  3071  00FE80  25                 	db	37
  3072  00FE81  32                 	db	50	;'2'
  3073  00FE82  2E                 	db	46
  3074  00FE83  32                 	db	50	;'2'
  3075  00FE84  66                 	db	102	;'f'
  3076  00FE85  20                 	db	32
  3077  00FE86  20                 	db	32
  3078  00FE87  20                 	db	32
  3079  00FE88  20                 	db	32
  3080  00FE89  00                 	db	0
  3081  00FE8A                     STR_40:
  3082                           
  3083                           ; BSR set to: 57
  3084  00FE8A  25                 	db	37
  3085  00FE8B  64                 	db	100	;'d'
  3086  00FE8C  20                 	db	32
  3087  00FE8D  25                 	db	37
  3088  00FE8E  32                 	db	50	;'2'
  3089  00FE8F  2E                 	db	46
  3090  00FE90  34                 	db	52	;'4'
  3091  00FE91  66                 	db	102	;'f'
  3092  00FE92  2C                 	db	44
  3093  00FE93  20                 	db	32
  3094  00FE94  25                 	db	37
  3095  00FE95  64                 	db	100	;'d'
  3096  00FE96  20                 	db	32
  3097  00FE97  20                 	db	32
  3098  00FE98  54                 	db	84	;'T'
  3099  00FE99  52                 	db	82	;'R'
  3100  00FE9A  49                 	db	73	;'I'
  3101  00FE9B  4D                 	db	77	;'M'
  3102  00FE9C  20                 	db	32
  3103  00FE9D  20                 	db	32
  3104  00FE9E  20                 	db	32
  3105  00FE9F  00                 	db	0
  3106  00FEA0                     STR_5:
  3107                           
  3108                           ; BSR set to: 57
  3109  00FEA0  20                 	db	32
  3110  00FEA1  20                 	db	32
  3111  00FEA2  20                 	db	32
  3112  00FEA3  20                 	db	32
  3113  00FEA4  20                 	db	32
  3114  00FEA5  20                 	db	32
  3115  00FEA6  20                 	db	32
  3116  00FEA7  20                 	db	32
  3117  00FEA8  20                 	db	32
  3118  00FEA9  20                 	db	32
  3119  00FEAA  20                 	db	32
  3120  00FEAB  20                 	db	32
  3121  00FEAC  20                 	db	32
  3122  00FEAD  20                 	db	32
  3123  00FEAE  20                 	db	32
  3124  00FEAF  20                 	db	32
  3125  00FEB0  20                 	db	32
  3126  00FEB1  20                 	db	32
  3127  00FEB2  20                 	db	32
  3128  00FEB3  20                 	db	32
  3129  00FEB4  00                 	db	0
  3130  00FEB5                     STR_8:
  3131                           
  3132                           ; BSR set to: 57
  3133  00FEB5  42                 	db	66	;'B'
  3134  00FEB6  56                 	db	86	;'V'
  3135  00FEB7  20                 	db	32
  3136  00FEB8  25                 	db	37
  3137  00FEB9  32                 	db	50	;'2'
  3138  00FEBA  2E                 	db	46
  3139  00FEBB  34                 	db	52	;'4'
  3140  00FEBC  66                 	db	102	;'f'
  3141  00FEBD  20                 	db	32
  3142  00FEBE  20                 	db	32
  3143  00FEBF  20                 	db	32
  3144  00FEC0  20                 	db	32
  3145  00FEC1  20                 	db	32
  3146  00FEC2  20                 	db	32
  3147  00FEC3  20                 	db	32
  3148  00FEC4  20                 	db	32
  3149  00FEC5  20                 	db	32
  3150  00FEC6  20                 	db	32
  3151  00FEC7  20                 	db	32
  3152  00FEC8  20                 	db	32
  3153  00FEC9  00                 	db	0
  3154  00FECA                     STR_4:
  3155                           
  3156                           ; BSR set to: 57
  3157  00FECA  20                 	db	32
  3158  00FECB  4E                 	db	78	;'N'
  3159  00FECC  53                 	db	83	;'S'
  3160  00FECD  41                 	db	65	;'A'
  3161  00FECE  53                 	db	83	;'S'
  3162  00FECF  50                 	db	80	;'P'
  3163  00FED0  4F                 	db	79	;'O'
  3164  00FED1  4F                 	db	79	;'O'
  3165  00FED2  4B                 	db	75	;'K'
  3166  00FED3  20                 	db	32
  3167  00FED4  20                 	db	32
  3168  00FED5  20                 	db	32
  3169  00FED6  20                 	db	32
  3170  00FED7  20                 	db	32
  3171  00FED8  20                 	db	32
  3172  00FED9  20                 	db	32
  3173  00FEDA  20                 	db	32
  3174  00FEDB  20                 	db	32
  3175  00FEDC  20                 	db	32
  3176  00FEDD  20                 	db	32
  3177  00FEDE  00                 	db	0
  3178  00FEDF                     STR_12:
  3179                           
  3180                           ; BSR set to: 57
  3181  00FEDF  42                 	db	66	;'B'
  3182  00FEE0  61                 	db	97	;'a'
  3183  00FEE1  74                 	db	116	;'t'
  3184  00FEE2  74                 	db	116	;'t'
  3185  00FEE3  65                 	db	101	;'e'
  3186  00FEE4  72                 	db	114	;'r'
  3187  00FEE5  79                 	db	121	;'y'
  3188  00FEE6  20                 	db	32
  3189  00FEE7  45                 	db	69	;'E'
  3190  00FEE8  53                 	db	83	;'S'
  3191  00FEE9  52                 	db	82	;'R'
  3192  00FEEA  20                 	db	32
  3193  00FEEB  20                 	db	32
  3194  00FEEC  20                 	db	32
  3195  00FEED  20                 	db	32
  3196  00FEEE  20                 	db	32
  3197  00FEEF  20                 	db	32
  3198  00FEF0  20                 	db	32
  3199  00FEF1  20                 	db	32
  3200  00FEF2  20                 	db	32
  3201  00FEF3  00                 	db	0
  3202  00FEF4                     STR_13:
  3203                           
  3204                           ; BSR set to: 57
  3205  00FEF4  43                 	db	67	;'C'
  3206  00FEF5  61                 	db	97	;'a'
  3207  00FEF6  6C                 	db	108	;'l'
  3208  00FEF7  63                 	db	99	;'c'
  3209  00FEF8  75                 	db	117	;'u'
  3210  00FEF9  6C                 	db	108	;'l'
  3211  00FEFA  61                 	db	97	;'a'
  3212  00FEFB  74                 	db	116	;'t'
  3213  00FEFC  69                 	db	105	;'i'
  3214  00FEFD  6F                 	db	111	;'o'
  3215  00FEFE  6E                 	db	110	;'n'
  3216  00FEFF  20                 	db	32
  3217  00FF00  20                 	db	32
  3218  00FF01  20                 	db	32
  3219  00FF02  20                 	db	32
  3220  00FF03  20                 	db	32
  3221  00FF04  20                 	db	32
  3222  00FF05  20                 	db	32
  3223  00FF06  20                 	db	32
  3224  00FF07  20                 	db	32
  3225  00FF08  00                 	db	0
  3226  00FF09                     STR_2:
  3227                           
  3228                           ; BSR set to: 57
  3229  00FF09  20                 	db	32
  3230  00FF0A  56                 	db	86	;'V'
  3231  00FF0B  65                 	db	101	;'e'
  3232  00FF0C  72                 	db	114	;'r'
  3233  00FF0D  73                 	db	115	;'s'
  3234  00FF0E  69                 	db	105	;'i'
  3235  00FF0F  6F                 	db	111	;'o'
  3236  00FF10  6E                 	db	110	;'n'
  3237  00FF11  20                 	db	32
  3238  00FF12  25                 	db	37
  3239  00FF13  73                 	db	115	;'s'
  3240  00FF14  20                 	db	32
  3241  00FF15  20                 	db	32
  3242  00FF16  20                 	db	32
  3243  00FF17  20                 	db	32
  3244  00FF18  20                 	db	32
  3245  00FF19  20                 	db	32
  3246  00FF1A  20                 	db	32
  3247  00FF1B  20                 	db	32
  3248  00FF1C  20                 	db	32
  3249  00FF1D  00                 	db	0
  3250  00FF1E                     STR_1:
  3251                           
  3252                           ; BSR set to: 57
  3253  00FF1E  20                 	db	32
  3254  00FF1F  4D                 	db	77	;'M'
  3255  00FF20  42                 	db	66	;'B'
  3256  00FF21  4D                 	db	77	;'M'
  3257  00FF22  43                 	db	67	;'C'
  3258  00FF23  20                 	db	32
  3259  00FF24  53                 	db	83	;'S'
  3260  00FF25  4F                 	db	79	;'O'
  3261  00FF26  4C                 	db	76	;'L'
  3262  00FF27  41                 	db	65	;'A'
  3263  00FF28  52                 	db	82	;'R'
  3264  00FF29  4D                 	db	77	;'M'
  3265  00FF2A  4F                 	db	79	;'O'
  3266  00FF2B  4E                 	db	78	;'N'
  3267  00FF2C  20                 	db	32
  3268  00FF2D  20                 	db	32
  3269  00FF2E  20                 	db	32
  3270  00FF2F  20                 	db	32
  3271  00FF30  20                 	db	32
  3272  00FF31  20                 	db	32
  3273  00FF32  00                 	db	0
  3274  00FF33                     STR_15:
  3275                           
  3276                           ; BSR set to: 57
  3277  00FF33  43                 	db	67	;'C'
  3278  00FF34  68                 	db	104	;'h'
  3279  00FF35  65                 	db	101	;'e'
  3280  00FF36  63                 	db	99	;'c'
  3281  00FF37  6B                 	db	107	;'k'
  3282  00FF38  69                 	db	105	;'i'
  3283  00FF39  6E                 	db	110	;'n'
  3284  00FF3A  67                 	db	103	;'g'
  3285  00FF3B  20                 	db	32
  3286  00FF3C  25                 	db	37
  3287  00FF3D  63                 	db	99	;'c'
  3288  00FF3E  20                 	db	32
  3289  00FF3F  25                 	db	37
  3290  00FF40  63                 	db	99	;'c'
  3291  00FF41  20                 	db	32
  3292  00FF42  20                 	db	32
  3293  00FF43  20                 	db	32
  3294  00FF44  20                 	db	32
  3295  00FF45  20                 	db	32
  3296  00FF46  20                 	db	32
  3297  00FF47  00                 	db	0
  3298  00FF48                     STR_14:
  3299                           
  3300                           ; BSR set to: 57
  3301  00FF48  43                 	db	67	;'C'
  3302  00FF49  68                 	db	104	;'h'
  3303  00FF4A  65                 	db	101	;'e'
  3304  00FF4B  63                 	db	99	;'c'
  3305  00FF4C  6B                 	db	107	;'k'
  3306  00FF4D  20                 	db	32
  3307  00FF4E  33                 	db	51	;'3'
  3308  00FF4F  30                 	db	48	;'0'
  3309  00FF50  20                 	db	32
  3310  00FF51  73                 	db	115	;'s'
  3311  00FF52  65                 	db	101	;'e'
  3312  00FF53  63                 	db	99	;'c'
  3313  00FF54  6F                 	db	111	;'o'
  3314  00FF55  6E                 	db	110	;'n'
  3315  00FF56  64                 	db	100	;'d'
  3316  00FF57  73                 	db	115	;'s'
  3317  00FF58  20                 	db	32
  3318  00FF59  20                 	db	32
  3319  00FF5A  20                 	db	32
  3320  00FF5B  20                 	db	32
  3321  00FF5C  00                 	db	0
  3322  00FF5D                     STR_47:
  3323                           
  3324                           ; BSR set to: 57
  3325  00FF5D  48                 	db	72	;'H'
  3326  00FF5E  45                 	db	69	;'E'
  3327  00FF5F  4C                 	db	76	;'L'
  3328  00FF60  50                 	db	80	;'P'
  3329  00FF61  20                 	db	32
  3330  00FF62  25                 	db	37
  3331  00FF63  73                 	db	115	;'s'
  3332  00FF64  20                 	db	32
  3333  00FF65  20                 	db	32
  3334  00FF66  20                 	db	32
  3335  00FF67  20                 	db	32
  3336  00FF68  20                 	db	32
  3337  00FF69  20                 	db	32
  3338  00FF6A  20                 	db	32
  3339  00FF6B  20                 	db	32
  3340  00FF6C  20                 	db	32
  3341  00FF6D  20                 	db	32
  3342  00FF6E  20                 	db	32
  3343  00FF6F  00                 	db	0
  3344  00FF70                     
  3345                           ; BSR set to: 57
  3346  00FF70  44                 	db	68	;'D'
  3347  00FF71  49                 	db	73	;'I'
  3348  00FF72  53                 	db	83	;'S'
  3349  00FF73  50                 	db	80	;'P'
  3350  00FF74  4C                 	db	76	;'L'
  3351  00FF75  41                 	db	65	;'A'
  3352  00FF76  59                 	db	89	;'Y'
  3353  00FF77  20                 	db	32
  3354  00FF78  25                 	db	37
  3355  00FF79  73                 	db	115	;'s'
  3356  00FF7A  20                 	db	32
  3357  00FF7B  20                 	db	32
  3358  00FF7C  20                 	db	32
  3359  00FF7D  20                 	db	32
  3360  00FF7E  20                 	db	32
  3361  00FF7F  20                 	db	32
  3362  00FF80  20                 	db	32
  3363  00FF81  20                 	db	32
  3364  00FF82  00                 	db	0
  3365  00FF83                     
  3366                           ; BSR set to: 57
  3367  00FF83  25                 	db	37
  3368  00FF84  64                 	db	100	;'d'
  3369  00FF85  20                 	db	32
  3370  00FF86  25                 	db	37
  3371  00FF87  32                 	db	50	;'2'
  3372  00FF88  2E                 	db	46
  3373  00FF89  34                 	db	52	;'4'
  3374  00FF8A  66                 	db	102	;'f'
  3375  00FF8B  2C                 	db	44
  3376  00FF8C  20                 	db	32
  3377  00FF8D  25                 	db	37
  3378  00FF8E  64                 	db	100	;'d'
  3379  00FF8F  20                 	db	32
  3380  00FF90  20                 	db	32
  3381  00FF91  20                 	db	32
  3382  00FF92  23                 	db	35
  3383  00FF93  00                 	db	0
  3384  00FF94                     STR_19:
  3385                           
  3386                           ; BSR set to: 57
  3387  00FF94  25                 	db	37
  3388  00FF95  64                 	db	100	;'d'
  3389  00FF96  20                 	db	32
  3390  00FF97  25                 	db	37
  3391  00FF98  32                 	db	50	;'2'
  3392  00FF99  2E                 	db	46
  3393  00FF9A  34                 	db	52	;'4'
  3394  00FF9B  66                 	db	102	;'f'
  3395  00FF9C  20                 	db	32
  3396  00FF9D  20                 	db	32
  3397  00FF9E  20                 	db	32
  3398  00FF9F  25                 	db	37
  3399  00FFA0  64                 	db	100	;'d'
  3400  00FFA1  20                 	db	32
  3401  00FFA2  20                 	db	32
  3402  00FFA3  00                 	db	0
  3403  00FFA4                     STR_51:
  3404                           
  3405                           ; BSR set to: 57
  3406  00FFA4  76                 	db	118	;'v'
  3407  00FFA5  74                 	db	116	;'t'
  3408  00FFA6  65                 	db	101	;'e'
  3409  00FFA7  72                 	db	114	;'r'
  3410  00FFA8  6D                 	db	109	;'m'
  3411  00FFA9  20                 	db	32
  3412  00FFAA  25                 	db	37
  3413  00FFAB  78                 	db	120	;'x'
  3414  00FFAC  3A                 	db	58	;':'
  3415  00FFAD  25                 	db	37
  3416  00FFAE  78                 	db	120	;'x'
  3417  00FFAF  20                 	db	32
  3418  00FFB0  20                 	db	32
  3419  00FFB1  20                 	db	32
  3420  00FFB2  00                 	db	0
  3421  00FFB3                     STR_45:
  3422                           
  3423                           ; BSR set to: 57
  3424  00FFB3  4A                 	db	74	;'J'
  3425  00FFB4  61                 	db	97	;'a'
  3426  00FFB5  6E                 	db	110	;'n'
  3427  00FFB6  20                 	db	32
  3428  00FFB7  31                 	db	49	;'1'
  3429  00FFB8  37                 	db	55	;'7'
  3430  00FFB9  20                 	db	32
  3431  00FFBA  32                 	db	50	;'2'
  3432  00FFBB  30                 	db	48	;'0'
  3433  00FFBC  32                 	db	50	;'2'
  3434  00FFBD  30                 	db	48	;'0'
  3435  00FFBE  00                 	db	0
  3436  00FFBF                     STR_49:
  3437                           
  3438                           ; BSR set to: 57
  3439  00FFBF  25                 	db	37
  3440  00FFC0  73                 	db	115	;'s'
  3441  00FFC1  20                 	db	32
  3442  00FFC2  20                 	db	32
  3443  00FFC3  20                 	db	32
  3444  00FFC4  20                 	db	32
  3445  00FFC5  20                 	db	32
  3446  00FFC6  20                 	db	32
  3447  00FFC7  20                 	db	32
  3448  00FFC8  00                 	db	0
  3449  00FFC9                     STR_46:
  3450                           
  3451                           ; BSR set to: 57
  3452  00FFC9  32                 	db	50	;'2'
  3453  00FFCA  30                 	db	48	;'0'
  3454  00FFCB  3A                 	db	58	;':'
  3455  00FFCC  35                 	db	53	;'5'
  3456  00FFCD  34                 	db	52	;'4'
  3457  00FFCE  3A                 	db	58	;':'
  3458  00FFCF  33                 	db	51	;'3'
  3459  00FFD0  35                 	db	53	;'5'
  3460  00FFD1  00                 	db	0
  3461  00FFD2                     STR_3:
  3462                           
  3463                           ; BSR set to: 57
  3464  00FFD2  31                 	db	49	;'1'
  3465  00FFD3  2E                 	db	46
  3466  00FFD4  31                 	db	49	;'1'
  3467  00FFD5  33                 	db	51	;'3'
  3468  00FFD6  00                 	db	0
  3469  00FFD7                     STR_65:
  3470                           
  3471                           ; BSR set to: 57
  3472  00FFD7  49                 	db	73	;'I'
  3473  00FFD8  4E                 	db	78	;'N'
  3474  00FFD9  46                 	db	70	;'F'
  3475  00FFDA  00                 	db	0
  3476  00FFDB                     STR_69:
  3477                           
  3478                           ; BSR set to: 57
  3479  00FFDB  4E                 	db	78	;'N'
  3480  00FFDC  41                 	db	65	;'A'
  3481  00FFDD  4E                 	db	78	;'N'
  3482  00FFDE  00                 	db	0
  3483  00FFDF                     STR_66:
  3484                           
  3485                           ; BSR set to: 57
  3486  00FFDF  69                 	db	105	;'i'
  3487  00FFE0  6E                 	db	110	;'n'
  3488  00FFE1  66                 	db	102	;'f'
  3489  00FFE2  00                 	db	0
  3490  00FFE3                     STR_70:
  3491                           
  3492                           ; BSR set to: 57
  3493  00FFE3  6E                 	db	110	;'n'
  3494  00FFE4  61                 	db	97	;'a'
  3495  00FFE5  6E                 	db	110	;'n'
  3496  00FFE6  00                 	db	0
  3497  00FFE7                     STR_96:
  3498                           
  3499                           ; BSR set to: 57
  3500  00FFE7  6C                 	db	108	;'l'
  3501  00FFE8  58                 	db	88	;'X'
  3502  00FFE9  00                 	db	0
  3503  00FFEA                     STR_73:
  3504                           
  3505                           ; BSR set to: 57
  3506  00FFEA  6C                 	db	108	;'l'
  3507  00FFEB  64                 	db	100	;'d'
  3508  00FFEC  00                 	db	0
  3509  00FFED                     STR_82:
  3510                           
  3511                           ; BSR set to: 57
  3512  00FFED  6C                 	db	108	;'l'
  3513  00FFEE  66                 	db	102	;'f'
  3514  00FFEF  00                 	db	0
  3515  00FFF0                     STR_77:
  3516                           
  3517                           ; BSR set to: 57
  3518  00FFF0  6C                 	db	108	;'l'
  3519  00FFF1  69                 	db	105	;'i'
  3520  00FFF2  00                 	db	0
  3521  00FFF3                     STR_87:
  3522                           
  3523                           ; BSR set to: 57
  3524  00FFF3  6C                 	db	108	;'l'
  3525  00FFF4  75                 	db	117	;'u'
  3526  00FFF5  00                 	db	0
  3527  00FFF6                     STR_92:
  3528                           
  3529                           ; BSR set to: 57
  3530  00FFF6  6C                 	db	108	;'l'
  3531  00FFF7  78                 	db	120	;'x'
  3532  00FFF8  00                 	db	0
  3533  00FFF9                     STR_44:
  3534                           
  3535                           ; BSR set to: 57
  3536  00FFF9  25                 	db	37
  3537  00FFFA  63                 	db	99	;'c'
  3538  00FFFB  00                 	db	0
  3539  00FFFC                     STR_43:
  3540                           
  3541                           ; BSR set to: 57
  3542  00FFFC  25                 	db	37
  3543  00FFFD  73                 	db	115	;'s'
  3544  00FFFE  00                 	db	0
  3545  0000                     
  3546                           ; #config settings
  3547  00FFFF  00                 	db	0	; dummy byte at the end
  3548  0000                     
  3549                           	psect	cinit
  3550  01A2E6                     __pcinit:
  3551                           	opt callstack 0
  3552  01A2E6                     start_initialization:
  3553                           	opt callstack 0
  3554  01A2E6                     __initialization:
  3555                           	opt callstack 0
  3556                           
  3557                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3558                           ; load TBLPTR registers with __pidataBIGRAM
  3559  01A2E6  0E70               	movlw	low __pidataBIGRAM
  3560  01A2E8  6EF6               	movwf	tblptrl,c
  3561  01A2EA  0E6B               	movlw	high __pidataBIGRAM
  3562  01A2EC  6EF7               	movwf	tblptrh,c
  3563  01A2EE  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3564  01A2F0  6EF8               	movwf	tblptru,c
  3565  01A2F2  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3566  01A2F6  EE20 F32B          	lfsr	2,811
  3567  01A2FA                     copy_data0:
  3568  01A2FA  0009               	tblrd		*+
  3569  01A2FC  006F FFD7 FFEE     	movff	tablat,postinc0
  3570  01A302  50DD               	movf	postdec2,w,c
  3571  01A304  50D9               	movf	fsr2l,w,c
  3572  01A306  E1F9               	bnz	copy_data0
  3573  01A308  50DA               	movf	fsr2h,w,c
  3574  01A30A  E1F7               	bnz	copy_data0
  3575                           
  3576                           ; Initialize objects allocated to BANK1 (205 bytes)
  3577                           ; load TBLPTR registers with __pidataBANK1
  3578  01A30C  0E6C               	movlw	low __pidataBANK1
  3579  01A30E  6EF6               	movwf	tblptrl,c
  3580  01A310  0EA5               	movlw	high __pidataBANK1
  3581  01A312  6EF7               	movwf	tblptrh,c
  3582  01A314  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3583  01A316  6EF8               	movwf	tblptru,c
  3584  01A318  EE00  F100         	lfsr	0,__pdataBANK1
  3585  01A31C  EE20 F0CD          	lfsr	2,205
  3586  01A320                     copy_data1:
  3587  01A320  0009               	tblrd		*+
  3588  01A322  006F FFD7 FFEE     	movff	tablat,postinc0
  3589  01A328  50DD               	movf	postdec2,w,c
  3590  01A32A  50D9               	movf	fsr2l,w,c
  3591  01A32C  E1F9               	bnz	copy_data1
  3592                           
  3593                           ; Initialize objects allocated to BANK0 (54 bytes)
  3594                           ; load TBLPTR registers with __pidataBANK0
  3595  01A32E  0E94               	movlw	low __pidataBANK0
  3596  01A330  6EF6               	movwf	tblptrl,c
  3597  01A332  0EBC               	movlw	high __pidataBANK0
  3598  01A334  6EF7               	movwf	tblptrh,c
  3599  01A336  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3600  01A338  6EF8               	movwf	tblptru,c
  3601  01A33A  EE00  F0AF         	lfsr	0,__pdataBANK0
  3602  01A33E  EE20 F036          	lfsr	2,54
  3603  01A342                     copy_data2:
  3604  01A342  0009               	tblrd		*+
  3605  01A344  006F FFD7 FFEE     	movff	tablat,postinc0
  3606  01A34A  50DD               	movf	postdec2,w,c
  3607  01A34C  50D9               	movf	fsr2l,w,c
  3608  01A34E  E1F9               	bnz	copy_data2
  3609                           
  3610                           ; Clear objects allocated to BIGRAM (482 bytes)
  3611  01A350  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3612  01A354  EE20 F1E2          	lfsr	2,482
  3613  01A358                     clear_0:
  3614  01A358  6AEE               	clrf	postinc0,c
  3615  01A35A  50DD               	movf	postdec2,w,c
  3616  01A35C  50D9               	movf	fsr2l,w,c
  3617  01A35E  E1FC               	bnz	clear_0
  3618  01A360  50DA               	movf	fsr2h,w,c
  3619  01A362  E1FA               	bnz	clear_0
  3620                           
  3621                           ; Clear objects allocated to BANK4 (255 bytes)
  3622  01A364  EE01  F000         	lfsr	0,__pbssBANK4
  3623  01A368  EE20 F0FF          	lfsr	2,255
  3624  01A36C                     clear_1:
  3625  01A36C  6AEE               	clrf	postinc0,c
  3626  01A36E  50DD               	movf	postdec2,w,c
  3627  01A370  50D9               	movf	fsr2l,w,c
  3628  01A372  E1FC               	bnz	clear_1
  3629  01A374  50DA               	movf	fsr2h,w,c
  3630  01A376  E1FA               	bnz	clear_1
  3631                           
  3632                           ; Clear objects allocated to BANK3 (198 bytes)
  3633  01A378  EE00  F300         	lfsr	0,__pbssBANK3
  3634  01A37C  0EC6               	movlw	198
  3635  01A37E                     clear_2:
  3636  01A37E  6AEE               	clrf	postinc0,c
  3637  01A380  06E8               	decf	wreg,f,c
  3638  01A382  E1FD               	bnz	clear_2
  3639                           
  3640                           ; Clear objects allocated to BANK2 (231 bytes)
  3641  01A384  EE00  F200         	lfsr	0,__pbssBANK2
  3642  01A388  0EE7               	movlw	231
  3643  01A38A                     clear_3:
  3644  01A38A  6AEE               	clrf	postinc0,c
  3645  01A38C  06E8               	decf	wreg,f,c
  3646  01A38E  E1FD               	bnz	clear_3
  3647                           
  3648                           ; Clear objects allocated to BANK1 (46 bytes)
  3649  01A390  EE00  F1CD         	lfsr	0,__pbssBANK1
  3650  01A394  0E2E               	movlw	46
  3651  01A396                     clear_4:
  3652  01A396  6AEE               	clrf	postinc0,c
  3653  01A398  06E8               	decf	wreg,f,c
  3654  01A39A  E1FD               	bnz	clear_4
  3655                           
  3656                           ; Clear objects allocated to BANK0 (79 bytes)
  3657  01A39C  EE00  F060         	lfsr	0,__pbssBANK0
  3658  01A3A0  0E4F               	movlw	79
  3659  01A3A2                     clear_5:
  3660  01A3A2  6AEE               	clrf	postinc0,c
  3661  01A3A4  06E8               	decf	wreg,f,c
  3662  01A3A6  E1FD               	bnz	clear_5
  3663                           
  3664                           ; Clear objects allocated to COMRAM (14 bytes)
  3665  01A3A8  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3666  01A3AC  0E0E               	movlw	14
  3667  01A3AE                     clear_6:
  3668  01A3AE  6AEE               	clrf	postinc0,c
  3669  01A3B0  06E8               	decf	wreg,f,c
  3670  01A3B2  E1FD               	bnz	clear_6
  3671                           
  3672                           ;
  3673                           ; Setup IVTBASE
  3674                           ;
  3675  01A3B4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3676  01A3B6  6ED5               	movwf	213,c
  3677  01A3B8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3678  01A3BA  6ED6               	movwf	214,c
  3679  01A3BC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3680  01A3BE  6ED7               	movwf	215,c
  3681  01A3C0                     end_of_initialization:
  3682                           	opt callstack 0
  3683  01A3C0                     __end_of__initialization:
  3684                           	opt callstack 0
  3685  01A3C0  0100               	movlb	0
  3686  01A3C2  EF22  F089         	goto	_main	;jump to C main() function
  3687                           
  3688                           	psect	bssCOMRAM
  3689  00003A                     __pbssCOMRAM:
  3690                           	opt callstack 0
  3691  00003A                     _width:
  3692                           	opt callstack 0
  3693  00003A                     	ds	2
  3694  00003C                     _prec:
  3695                           	opt callstack 0
  3696  00003C                     	ds	2
  3697  00003E                     _flags:
  3698                           	opt callstack 0
  3699  00003E                     	ds	2
  3700  000040                     calc_bsoc@log_update_wait:
  3701                           	opt callstack 0
  3702  000040                     	ds	1
  3703  000041                     check_day_time@day_delay:
  3704                           	opt callstack 0
  3705  000041                     	ds	1
  3706  000042                     dac_spi_control@S0:
  3707                           	opt callstack 0
  3708  000042                     	ds	1
  3709  000043                     dac_spi_control@init:
  3710                           	opt callstack 0
  3711  000043                     	ds	1
  3712  000044                     _uart2RxHead:
  3713                           	opt callstack 0
  3714  000044                     	ds	1
  3715  000045                     _uart2TxBufferRemaining:
  3716                           	opt callstack 0
  3717  000045                     	ds	1
  3718  000046                     _uart2TxTail:
  3719                           	opt callstack 0
  3720  000046                     	ds	1
  3721  000047                     _uart1RxHead:
  3722                           	opt callstack 0
  3723  000047                     	ds	1
  3724                           
  3725                           	psect	bssBANK0
  3726  000060                     __pbssBANK0:
  3727                           	opt callstack 0
  3728  000060                     fabsf@F463:
  3729                           	opt callstack 0
  3730  000060                     	ds	4
  3731  000064                     ___fpclassifyf@F463:
  3732                           	opt callstack 0
  3733  000064                     	ds	4
  3734  000068                     calc_ror_data@bcror:
  3735                           	opt callstack 0
  3736  000068                     	ds	4
  3737  00006C                     calc_ror_data@bvror:
  3738                           	opt callstack 0
  3739  00006C                     	ds	4
  3740  000070                     calc_model_data@bcror:
  3741                           	opt callstack 0
  3742  000070                     	ds	4
  3743  000074                     calc_model_data@bvror:
  3744                           	opt callstack 0
  3745  000074                     	ds	4
  3746  000078                     wdtdelay@dcount:
  3747                           	opt callstack 0
  3748  000078                     	ds	4
  3749  00007C                     _TMR3_InterruptHandler:
  3750                           	opt callstack 0
  3751  00007C                     	ds	3
  3752  00007F                     _TMR5_InterruptHandler:
  3753                           	opt callstack 0
  3754  00007F                     	ds	3
  3755  000082                     _TMR6_InterruptHandler:
  3756                           	opt callstack 0
  3757  000082                     	ds	3
  3758  000085                     _ADCC_ADTI_InterruptHandler:
  3759                           	opt callstack 0
  3760  000085                     	ds	3
  3761  000088                     _ADCC_ADI_InterruptHandler:
  3762                           	opt callstack 0
  3763  000088                     	ds	3
  3764  00008B                     _UART1_RxInterruptHandler:
  3765                           	opt callstack 0
  3766  00008B                     	ds	3
  3767  00008E                     _UART2_TxInterruptHandler:
  3768                           	opt callstack 0
  3769  00008E                     	ds	3
  3770  000091                     _UART2_RxInterruptHandler:
  3771                           	opt callstack 0
  3772  000091                     	ds	3
  3773  000094                     _INT1_InterruptHandler:
  3774                           	opt callstack 0
  3775  000094                     	ds	3
  3776  000097                     _INT0_InterruptHandler:
  3777                           	opt callstack 0
  3778  000097                     	ds	3
  3779  00009A                     _nout:
  3780                           	opt callstack 0
  3781  00009A                     	ds	2
  3782  00009C                     TMR3_ISR@CountCallBack:
  3783                           	opt callstack 0
  3784  00009C                     	ds	2
  3785  00009E                     _timer3ReloadVal:
  3786                           	opt callstack 0
  3787  00009E                     	ds	2
  3788  0000A0                     TMR5_ISR@CountCallBack:
  3789                           	opt callstack 0
  3790  0000A0                     	ds	2
  3791  0000A2                     _timer5ReloadVal:
  3792                           	opt callstack 0
  3793  0000A2                     	ds	2
  3794  0000A4                     esr_check@esr_state:
  3795                           	opt callstack 0
  3796  0000A4                     	ds	1
  3797  0000A5                     dac_spi_control@SB:
  3798                           	opt callstack 0
  3799  0000A5                     	ds	1
  3800  0000A6                     dac_spi_control@SC:
  3801                           	opt callstack 0
  3802  0000A6                     	ds	1
  3803  0000A7                     dac_spi_control@S2:
  3804                           	opt callstack 0
  3805  0000A7                     	ds	1
  3806  0000A8                     dac_spi_control@S1:
  3807                           	opt callstack 0
  3808  0000A8                     	ds	1
  3809  0000A9                     _mode_sw:
  3810                           	opt callstack 0
  3811  0000A9                     	ds	1
  3812  0000AA                     _uart2RxCount:
  3813                           	opt callstack 0
  3814  0000AA                     	ds	1
  3815  0000AB                     _uart2RxTail:
  3816                           	opt callstack 0
  3817  0000AB                     	ds	1
  3818  0000AC                     _uart2TxHead:
  3819                           	opt callstack 0
  3820  0000AC                     	ds	1
  3821  0000AD                     _uart1RxCount:
  3822                           	opt callstack 0
  3823  0000AD                     	ds	1
  3824  0000AE                     _uart1RxTail:
  3825                           	opt callstack 0
  3826  0000AE                     	ds	1
  3827                           
  3828                           	psect	dataBANK0
  3829  0000AF                     __pdataBANK0:
  3830                           	opt callstack 0
  3831  0000AF                     _R:
  3832                           	opt callstack 0
  3833  0000AF                     	ds	54
  3834                           
  3835                           	psect	bssBANK1
  3836  0001CD                     __pbssBANK1:
  3837                           	opt callstack 0
  3838  0001CD                     _spi_link:
  3839                           	opt callstack 0
  3840  0001CD                     	ds	12
  3841  0001D9                     _uart1RxBuffer:
  3842                           	opt callstack 0
  3843  0001D9                     	ds	8
  3844  0001E1                     spinners@s:
  3845                           	opt callstack 0
  3846  0001E1                     	ds	6
  3847  0001E7                     floorf@F524:
  3848                           	opt callstack 0
  3849  0001E7                     	ds	4
  3850  0001EB                     _utctime:
  3851                           	opt callstack 0
  3852  0001EB                     	ds	4
  3853  0001EF                     _P:
  3854                           	opt callstack 0
  3855  0001EF                     	ds	4
  3856  0001F3                     _seed:
  3857                           	opt callstack 0
  3858  0001F3                     	ds	8
  3859                           
  3860                           	psect	dataBANK1
  3861  000100                     __pdataBANK1:
  3862                           	opt callstack 0
  3863  000100                     stoa@F1166:
  3864                           	opt callstack 0
  3865  000100                     	ds	7
  3866  000107                     _V:
  3867                           	opt callstack 0
  3868  000107                     	ds	191
  3869  0001C6                     _H:
  3870                           	opt callstack 0
  3871  0001C6                     	ds	7
  3872                           
  3873                           	psect	bssBANK2
  3874  000200                     __pbssBANK2:
  3875                           	opt callstack 0
  3876  000200                     lp_filter@smooth:
  3877                           	opt callstack 0
  3878  000200                     	ds	84
  3879  000254                     _S:
  3880                           	opt callstack 0
  3881  000254                     	ds	41
  3882  00027D                     _tickCount:
  3883                           	opt callstack 0
  3884  00027D                     	ds	26
  3885  000297                     _dbuf:
  3886                           	opt callstack 0
  3887  000297                     	ds	80
  3888                           
  3889                           	psect	bssBANK3
  3890  000300                     __pbssBANK3:
  3891                           	opt callstack 0
  3892  000300                     _uart2TxBuffer:
  3893                           	opt callstack 0
  3894  000300                     	ds	64
  3895  000340                     _ring_buf2:
  3896                           	opt callstack 0
  3897  000340                     	ds	67
  3898  000383                     _ring_buf1:
  3899                           	opt callstack 0
  3900  000383                     	ds	67
  3901                           
  3902                           	psect	bssBANK4
  3903  000400                     __pbssBANK4:
  3904                           	opt callstack 0
  3905  000400                     _uart2RxBuffer:
  3906                           	opt callstack 0
  3907  000400                     	ds	255
  3908                           
  3909                           	psect	bssBIGRAM
  3910  00082A                     __pbssBIGRAM:
  3911                           	opt callstack 0
  3912  00082A                     _D:
  3913                           	opt callstack 0
  3914  00082A                     	ds	482
  3915                           
  3916                           	psect	dataBIGRAM
  3917  0004FF                     __pdataBIGRAM:
  3918                           	opt callstack 0
  3919  0004FF                     _port_data:
  3920                           	opt callstack 0
  3921  0004FF                     	ds	512
  3922  0006FF                     _C:
  3923                           	opt callstack 0
  3924  0006FF                     	ds	299
  3925                           
  3926                           	psect	cstackBANK0
  3927  0000E5                     __pcstackBANK0:
  3928                           	opt callstack 0
  3929  0000E5                     ??_TMR3_ISR:
  3930                           
  3931                           ; 1 bytes @ 0x0
  3932  0000E5                     	ds	25
  3933                           
  3934                           	psect	cstackCOMRAM
  3935  000021                     __pcstackCOMRAM:
  3936                           	opt callstack 0
  3937  000021                     ??_ADCC_ThresholdISR:
  3938  000021                     
  3939                           ; 1 bytes @ 0x0
  3940  000021                     	ds	5
  3941  000026                     ??_TMR6_ISR:
  3942                           
  3943                           ; 1 bytes @ 0x5
  3944  000026                     	ds	1
  3945  000027                     ??_INT1_ISR:
  3946  000027                     
  3947                           ; 1 bytes @ 0x6
  3948  000027                     	ds	4
  3949  00002B                     ??_TMR5_ISR:
  3950                           
  3951                           ; 1 bytes @ 0xA
  3952  00002B                     	ds	15
  3953                           
  3954 ;;
  3955 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3956 ;;
  3957 ;; *************** function _main *****************
  3958 ;; Defined at:
  3959 ;;		line 187 in file "main.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  esr_temp        4  [STACK] float 
  3964 ;;  i_esr           2  [STACK] unsigned short 
  3965 ;;  shape           1  [STACK] unsigned char 
  3966 ;;  inp_index       1  [STACK] unsigned char 
  3967 ;;  k               1  [STACK] unsigned char 
  3968 ;;  j               1  [STACK] unsigned char 
  3969 ;;  i               1  [STACK] unsigned char 
  3970 ;;  mode            1  [STACK] enum E17013
  3971 ;;  i_ror           1  [STACK] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1  [STACK] void 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels required when called:   29
  3987 ;; This function calls:
  3988 ;;		_SYSTEM_Initialize
  3989 ;;		_StartTimer
  3990 ;;		_TimerDone
  3991 ;;		_WaitMs
  3992 ;;		___fladd
  3993 ;;		___flge
  3994 ;;		___fltol
  3995 ;;		_calc_model_data
  3996 ;;		_calc_ror_data
  3997 ;;		_check_adc_scan
  3998 ;;		_check_enter_button
  3999 ;;		_check_help
  4000 ;;		_clear_adc_scan
  4001 ;;		_clear_hid_pflags
  4002 ;;		_conv_raw_result
  4003 ;;		_convert_adc_data
  4004 ;;		_eaDogM_WriteCommand
  4005 ;;		_esr_check
  4006 ;;		_fabsf
  4007 ;;		_get_raw_result
  4008 ;;		_get_switch
  4009 ;;		_get_vterm_ptr
  4010 ;;		_hid_display
  4011 ;;		_init_bsoc
  4012 ;;		_init_display
  4013 ;;		_init_port_dma
  4014 ;;		_lp_filter
  4015 ;;		_mode_lamp_dim
  4016 ;;		_set_dac
  4017 ;;		_set_dac_a
  4018 ;;		_set_dac_b
  4019 ;;		_set_display_info
  4020 ;;		_set_load_relay_one
  4021 ;;		_set_load_relay_two
  4022 ;;		_set_vterm
  4023 ;;		_spinners
  4024 ;;		_sprintf
  4025 ;;		_srand
  4026 ;;		_start_adc_scan
  4027 ;;		_start_switch_handler
  4028 ;;		_static_soc
  4029 ;;		_update_lcd
  4030 ;;		_wait_lcd_done
  4031 ;; This function is called by:
  4032 ;;		Startup code after reset
  4033 ;; This function uses a reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text0
  4037  011244                     __ptext0:
  4038                           	opt callstack 0
  4039  011244                     _main:
  4040                           	opt callstack 0
  4041                           
  4042                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4043  011244  0E11               	movlw	17
  4044  011246  26E1               	addwf	fsr1l,f,c
  4045  011248  0E00               	movlw	0
  4046  01124A  22E2               	addwfc	fsr1h,f,c
  4047                           
  4048                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4049                           ;stkvar	_inp_index @ sp[(-17)+11]
  4050                           
  4051                           ;incstack = 0
  4052  01124C  0EFA               	movlw	-6
  4053  01124E  6AE3               	clrf	plusw1,c
  4054                           
  4055                           ;stkvar	_i @ sp[(-17)+14]
  4056  011250  0EFD               	movlw	-3
  4057  011252  6AE3               	clrf	plusw1,c
  4058                           
  4059                           ;stkvar	_j @ sp[(-17)+13]
  4060  011254  0EFC               	movlw	-4
  4061  011256  6AE3               	clrf	plusw1,c
  4062  011258  2AE3               	incf	plusw1,f,c
  4063                           
  4064                           ;stkvar	_k @ sp[(-17)+12]
  4065  01125A  0EFB               	movlw	-5
  4066  01125C  6AE3               	clrf	plusw1,c
  4067  01125E  82E3               	bsf	plusw1,1,c
  4068                           
  4069                           ;main.c: 193:  SYSTEM_Initialize();
  4070  011260  ECD5  F0DB         	call	_SYSTEM_Initialize	;wreg free
  4071                           
  4072                           ; BSR set to: 60
  4073                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4074  011264  8ED2               	bsf	210,7,c	;volatile
  4075                           
  4076                           ; BSR set to: 60
  4077                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4078  011266  8CD2               	bsf	210,6,c	;volatile
  4079                           
  4080                           ; BSR set to: 60
  4081                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4082  011268  0101               	movlb	1	; () banked
  4083  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;main.c: 206:  WaitMs(300);
  4087  01126C  0E2C               	movlw	44
  4088  01126E  6EE6               	movwf	postinc1,c
  4089  011270  0E01               	movlw	1
  4090  011272  6EE6               	movwf	postinc1,c
  4091  011274  EC65  F0DE         	call	_WaitMs	;wreg free
  4092                           
  4093                           ;main.c: 207:  if (PORTBbits.RB0) {
  4094  011278  A0CB               	btfss	203,0,c	;volatile
  4095  01127A  D004               	goto	l13360
  4096                           
  4097                           ;main.c: 208:   mode = UI_STATE_HOST;
  4098                           ;stkvar	_mode @ sp[(-17)+15]
  4099  01127C  0EFE               	movlw	-2
  4100  01127E  6AE3               	clrf	plusw1,c
  4101  011280  2AE3               	incf	plusw1,f,c
  4102                           
  4103                           ;main.c: 209:  } else {
  4104  011282  D004               	goto	l13362
  4105  011284                     l13360:
  4106                           
  4107                           ;main.c: 210:   mode = UI_STATE_LOG;
  4108                           ;stkvar	_mode @ sp[(-17)+15]
  4109  011284  0EFE               	movlw	-2
  4110  011286  6AE3               	clrf	plusw1,c
  4111  011288  80E3               	bsf	plusw1,0,c
  4112  01128A  82E3               	bsf	plusw1,1,c	;indir
  4113  01128C                     l13362:
  4114                           
  4115                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4116                           ;stkvar	_mode @ sp[(-17)+15]
  4117  01128C  0EFE               	movlw	-2
  4118  01128E  04E3               	decf	plusw1,w,c
  4119  011290  A4D8               	btfss	status,2,c
  4120  011292  D007               	goto	l1332
  4121                           
  4122                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4123  011294  80BD               	bsf	189,0,c	;volatile
  4124                           
  4125                           ;main.c: 215:   V.mode_pwm = 70;
  4126  011296  0E00               	movlw	0
  4127  011298  0101               	movlb	1	; () banked
  4128  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4129  01129C  0E46               	movlw	70
  4130  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4131                           
  4132                           ;main.c: 216:  } else {
  4133  0112A0  D004               	goto	l13366
  4134  0112A2                     l1332:
  4135  0112A2  90BD               	bcf	189,0,c	;volatile
  4136                           
  4137                           ;main.c: 218:   V.mode_pwm = 0;
  4138  0112A4  0101               	movlb	1	; () banked
  4139  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4140  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4141  0112AA                     l13366:
  4142                           
  4143                           ; BSR set to: 1
  4144                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4145  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4146  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4147  0112B6  EC09  F0E2         	call	_mode_lamp_dim	;wreg free
  4148  0112BA  D325               	goto	l13486
  4149  0112BC                     l13368:
  4150                           
  4151                           ; BSR set to: 1
  4152                           ;main.c: 228:    init_port_dma();
  4153  0112BC  ECE8  F0DE         	call	_init_port_dma	;wreg free
  4154                           
  4155                           ; BSR set to: 59
  4156                           ;main.c: 230:    init_display();
  4157  0112C0  EC8C  F0D0         	call	_init_display	;wreg free
  4158                           
  4159                           ; BSR set to: 61
  4160                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4161  0112C4  0E0C               	movlw	12
  4162  0112C6  6EE6               	movwf	postinc1,c
  4163  0112C8  EC75  F0E2         	call	_eaDogM_WriteCommand	;wreg free
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;main.c: 235:    set_load_relay_one(1);
  4167  0112CC  0E01               	movlw	1
  4168  0112CE  6EE6               	movwf	postinc1,c
  4169  0112D0  EC5D  F0E2         	call	_set_load_relay_one	;wreg free
  4170                           
  4171                           ;main.c: 236:    set_load_relay_two(1);
  4172  0112D4  0E01               	movlw	1
  4173  0112D6  6EE6               	movwf	postinc1,c
  4174  0112D8  EC55  F0E2         	call	_set_load_relay_two	;wreg free
  4175                           
  4176                           ;main.c: 238:    V.ui_state = mode;
  4177                           ;stkvar	_mode @ sp[(-17)+15]
  4178  0112DC  0EFE               	movlw	-2
  4179  0112DE  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4180                           
  4181                           ;main.c: 239:    srand(1957);
  4182  0112E4  0EA5               	movlw	165
  4183  0112E6  6EE6               	movwf	postinc1,c
  4184  0112E8  0E07               	movlw	7
  4185  0112EA  6EE6               	movwf	postinc1,c
  4186  0112EC  EC80  F0DE         	call	_srand	;wreg free
  4187                           
  4188                           ; BSR set to: 1
  4189                           ;main.c: 240:    set_vterm(0);
  4190  0112F0  0E00               	movlw	0
  4191  0112F2  6EE6               	movwf	postinc1,c
  4192  0112F4  ECC1  F0E1         	call	_set_vterm	;wreg free
  4193                           
  4194                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4195  0112F8  0E1E               	movlw	low STR_1
  4196  0112FA  6EE6               	movwf	postinc1,c
  4197  0112FC  0EFF               	movlw	high STR_1
  4198  0112FE  6EE6               	movwf	postinc1,c
  4199  011300  0E00               	movlw	0
  4200  011302  6EE6               	movwf	postinc1,c
  4201  011304  0E00               	movlw	0
  4202  011306  6EE6               	movwf	postinc1,c
  4203  011308  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4204  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4205  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4206  011318  0E04               	movlw	4
  4207  01131A  6EE6               	movwf	postinc1,c
  4208  01131C  EC16  F0CF         	call	_sprintf	;wreg free
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.13");
  4212  011320  0ED2               	movlw	low STR_3
  4213  011322  6EE6               	movwf	postinc1,c
  4214  011324  0EFF               	movlw	high STR_3
  4215  011326  6EE6               	movwf	postinc1,c
  4216  011328  0E09               	movlw	low STR_2
  4217  01132A  6EE6               	movwf	postinc1,c
  4218  01132C  0EFF               	movlw	high STR_2
  4219  01132E  6EE6               	movwf	postinc1,c
  4220  011330  0E00               	movlw	0
  4221  011332  6EE6               	movwf	postinc1,c
  4222  011334  0E01               	movlw	1
  4223  011336  6EE6               	movwf	postinc1,c
  4224  011338  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4225  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4226  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4227  011348  0E06               	movlw	6
  4228  01134A  6EE6               	movwf	postinc1,c
  4229  01134C  EC16  F0CF         	call	_sprintf	;wreg free
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4233  011350  0ECA               	movlw	low STR_4
  4234  011352  6EE6               	movwf	postinc1,c
  4235  011354  0EFE               	movlw	high STR_4
  4236  011356  6EE6               	movwf	postinc1,c
  4237  011358  0E00               	movlw	0
  4238  01135A  6EE6               	movwf	postinc1,c
  4239  01135C  0E02               	movlw	2
  4240  01135E  6EE6               	movwf	postinc1,c
  4241  011360  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4242  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4243  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4244  011370  0E04               	movlw	4
  4245  011372  6EE6               	movwf	postinc1,c
  4246  011374  EC16  F0CF         	call	_sprintf	;wreg free
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4250  011378  0EA0               	movlw	low STR_5
  4251  01137A  6EE6               	movwf	postinc1,c
  4252  01137C  0EFE               	movlw	high STR_5
  4253  01137E  6EE6               	movwf	postinc1,c
  4254  011380  0E02               	movlw	2
  4255  011382  6EE6               	movwf	postinc1,c
  4256  011384  0E00               	movlw	0
  4257  011386  6EE6               	movwf	postinc1,c
  4258  011388  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4259  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4260  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4261  011398  0E04               	movlw	4
  4262  01139A  6EE6               	movwf	postinc1,c
  4263  01139C  EC16  F0CF         	call	_sprintf	;wreg free
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4267  0113A0  0EA0               	movlw	low STR_5
  4268  0113A2  6EE6               	movwf	postinc1,c
  4269  0113A4  0EFE               	movlw	high STR_5
  4270  0113A6  6EE6               	movwf	postinc1,c
  4271  0113A8  0E02               	movlw	2
  4272  0113AA  6EE6               	movwf	postinc1,c
  4273  0113AC  0E01               	movlw	1
  4274  0113AE  6EE6               	movwf	postinc1,c
  4275  0113B0  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4276  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4277  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4278  0113C0  0E04               	movlw	4
  4279  0113C2  6EE6               	movwf	postinc1,c
  4280  0113C4  EC16  F0CF         	call	_sprintf	;wreg free
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4284  0113C8  0EA0               	movlw	low STR_5
  4285  0113CA  6EE6               	movwf	postinc1,c
  4286  0113CC  0EFE               	movlw	high STR_5
  4287  0113CE  6EE6               	movwf	postinc1,c
  4288  0113D0  0E02               	movlw	2
  4289  0113D2  6EE6               	movwf	postinc1,c
  4290  0113D4  0E02               	movlw	2
  4291  0113D6  6EE6               	movwf	postinc1,c
  4292  0113D8  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4293  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4294  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4295  0113E8  0E04               	movlw	4
  4296  0113EA  6EE6               	movwf	postinc1,c
  4297  0113EC  EC16  F0CF         	call	_sprintf	;wreg free
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;main.c: 247:    update_lcd(0);
  4301  0113F0  0E00               	movlw	0
  4302  0113F2  6EE6               	movwf	postinc1,c
  4303  0113F4  EC8E  F0CE         	call	_update_lcd	;wreg free
  4304                           
  4305                           ;main.c: 248:    WaitMs(1000);
  4306  0113F8  0EE8               	movlw	232
  4307  0113FA  6EE6               	movwf	postinc1,c
  4308  0113FC  0E03               	movlw	3
  4309  0113FE  6EE6               	movwf	postinc1,c
  4310  011400  EC65  F0DE         	call	_WaitMs	;wreg free
  4311                           
  4312                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4313  011404  0EFA               	movlw	250
  4314  011406  6EE6               	movwf	postinc1,c
  4315  011408  0E00               	movlw	0
  4316  01140A  6EE6               	movwf	postinc1,c
  4317  01140C  0E0A               	movlw	10
  4318  01140E  6EE6               	movwf	postinc1,c
  4319  011410  EC76  F0DD         	call	_StartTimer	;wreg free
  4320                           
  4321                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4322  011414  0EC8               	movlw	200
  4323  011416  6EE6               	movwf	postinc1,c
  4324  011418  0E00               	movlw	0
  4325  01141A  6EE6               	movwf	postinc1,c
  4326  01141C  0E01               	movlw	1
  4327  01141E  6EE6               	movwf	postinc1,c
  4328  011420  EC76  F0DD         	call	_StartTimer	;wreg free
  4329                           
  4330                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4331  011424  0EB8               	movlw	184
  4332  011426  6EE6               	movwf	postinc1,c
  4333  011428  0E0B               	movlw	11
  4334  01142A  6EE6               	movwf	postinc1,c
  4335  01142C  0E07               	movlw	7
  4336  01142E  6EE6               	movwf	postinc1,c
  4337  011430  EC76  F0DD         	call	_StartTimer	;wreg free
  4338                           
  4339                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4340  011434  0EDC               	movlw	220
  4341  011436  6EE6               	movwf	postinc1,c
  4342  011438  0E05               	movlw	5
  4343  01143A  6EE6               	movwf	postinc1,c
  4344  01143C  0E0B               	movlw	11
  4345  01143E  6EE6               	movwf	postinc1,c
  4346  011440  EC76  F0DD         	call	_StartTimer	;wreg free
  4347                           
  4348                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4349  011444  0EB8               	movlw	184
  4350  011446  6EE6               	movwf	postinc1,c
  4351  011448  0E0B               	movlw	11
  4352  01144A  6EE6               	movwf	postinc1,c
  4353  01144C  0E09               	movlw	9
  4354  01144E  6EE6               	movwf	postinc1,c
  4355  011450  EC76  F0DD         	call	_StartTimer	;wreg free
  4356                           
  4357                           ;main.c: 255:    start_adc_scan();
  4358  011454  ECEC  F0D9         	call	_start_adc_scan	;wreg free
  4359                           
  4360                           ;main.c: 256:    start_switch_handler();
  4361  011458  EC83  F0E1         	call	_start_switch_handler	;wreg free
  4362                           
  4363                           ; BSR set to: 57
  4364                           ;main.c: 257:    WaitMs(1000);
  4365  01145C  0EE8               	movlw	232
  4366  01145E  6EE6               	movwf	postinc1,c
  4367  011460  0E03               	movlw	3
  4368  011462  6EE6               	movwf	postinc1,c
  4369  011464  EC65  F0DE         	call	_WaitMs	;wreg free
  4370                           
  4371                           ;main.c: 262:    i_ror = 1;
  4372                           ;stkvar	_i_ror @ sp[(-17)+16]
  4373  011468  0EFF               	movlw	-1
  4374  01146A  6AE3               	clrf	plusw1,c
  4375  01146C  2AE3               	incf	plusw1,f,c
  4376  01146E                     l13418:
  4377                           
  4378                           ;main.c: 264:     calc_ror_data();
  4379  01146E  ECCE  F0C6         	call	_calc_ror_data	;wreg free
  4380                           
  4381                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4382  011472  0E00               	movlw	0
  4383  011474  6EE6               	movwf	postinc1,c
  4384  011476  0E04               	movlw	4
  4385  011478  6EE6               	movwf	postinc1,c
  4386  01147A  EC95  F0A9         	call	_conv_raw_result	;wreg free
  4387  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4388  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4389  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4390  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4391  011496  0EB5               	movlw	low STR_8
  4392  011498  6EE6               	movwf	postinc1,c
  4393  01149A  0EFE               	movlw	high STR_8
  4394  01149C  6EE6               	movwf	postinc1,c
  4395  01149E  0E00               	movlw	0
  4396  0114A0  6EE6               	movwf	postinc1,c
  4397  0114A2  0E01               	movlw	1
  4398  0114A4  6EE6               	movwf	postinc1,c
  4399  0114A6  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4400  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4401  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4402  0114B6  0E08               	movlw	8
  4403  0114B8  6EE6               	movwf	postinc1,c
  4404  0114BA  EC16  F0CF         	call	_sprintf	;wreg free
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4408  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4409  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4410  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4411  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4412  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4413                           
  4414                           ;stkvar	_i_ror @ sp[(-21)+16]
  4415  0114DA  0EFB               	movlw	-5
  4416  0114DC  50E3               	movf	plusw1,w,c
  4417  0114DE  6EE6               	movwf	postinc1,c
  4418  0114E0  0E00               	movlw	0
  4419  0114E2  6EE6               	movwf	postinc1,c
  4420  0114E4  0E00               	movlw	0
  4421  0114E6  6EE6               	movwf	postinc1,c
  4422  0114E8  0E05               	movlw	5
  4423  0114EA  6EE6               	movwf	postinc1,c
  4424  0114EC  EC9B  F0CF         	call	_spinners	;wreg free
  4425  0114F0  5001               	movf	btemp^0,w,c
  4426  0114F2  6EE6               	movwf	postinc1,c
  4427  0114F4  0E00               	movlw	0
  4428  0114F6  6EE6               	movwf	postinc1,c
  4429  0114F8  0E9B               	movlw	low STR_9
  4430  0114FA  6EE6               	movwf	postinc1,c
  4431  0114FC  0EFC               	movlw	high STR_9
  4432  0114FE  6EE6               	movwf	postinc1,c
  4433  011500  0E00               	movlw	0
  4434  011502  6EE6               	movwf	postinc1,c
  4435  011504  0E02               	movlw	2
  4436  011506  6EE6               	movwf	postinc1,c
  4437  011508  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4438  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4439  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4440  011518  0E0C               	movlw	12
  4441  01151A  6EE6               	movwf	postinc1,c
  4442  01151C  EC16  F0CF         	call	_sprintf	;wreg free
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;main.c: 267:     update_lcd(0);
  4446  011520  0E00               	movlw	0
  4447  011522  6EE6               	movwf	postinc1,c
  4448  011524  EC8E  F0CE         	call	_update_lcd	;wreg free
  4449                           
  4450                           ;main.c: 268:     clear_adc_scan();
  4451  011528  ECC9  F0E2         	call	_clear_adc_scan	;wreg free
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;main.c: 269:     start_adc_scan();
  4455  01152C  ECEC  F0D9         	call	_start_adc_scan	;wreg free
  4456                           
  4457                           ;main.c: 270:     WaitMs(2000);
  4458  011530  0ED0               	movlw	208
  4459  011532  6EE6               	movwf	postinc1,c
  4460  011534  0E07               	movlw	7
  4461  011536  6EE6               	movwf	postinc1,c
  4462  011538  EC65  F0DE         	call	_WaitMs	;wreg free
  4463                           
  4464                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4465                           ;stkvar	_i_ror @ sp[(-17)+16]
  4466  01153C  0EFF               	movlw	-1
  4467  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4468  011544  2A0C               	incf	(btemp+11)^0,f,c
  4469  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4470  01154C  060C               	decf	(btemp+11)^0,f,c
  4471  01154E  0E1E               	movlw	30
  4472  011550  600C               	cpfslt	(btemp+11)^0,c
  4473  011552  D01A               	goto	u12860
  4474  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4475  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4476  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4477  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4478  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4479  011570  0E42               	movlw	66
  4480  011572  6EE6               	movwf	postinc1,c
  4481  011574  0E60               	movlw	96
  4482  011576  6EE6               	movwf	postinc1,c
  4483  011578  0E65               	movlw	101
  4484  01157A  6EE6               	movwf	postinc1,c
  4485  01157C  0E3C               	movlw	60
  4486  01157E  6EE6               	movwf	postinc1,c
  4487  011580  EC0A  F0C9         	call	___flge	;wreg free
  4488  011584  A001               	btfss	btemp& (0+255),0,c
  4489  011586  D773               	goto	l13418
  4490  011588                     u12860:
  4491                           
  4492                           ;main.c: 275:    static_soc();
  4493  011588  ECB0  F0DA         	call	_static_soc	;wreg free
  4494                           
  4495                           ;main.c: 276:    init_bsoc();
  4496  01158C  EC09  F0BE         	call	_init_bsoc	;wreg free
  4497                           
  4498                           ;main.c: 277:    set_load_relay_one(0);
  4499  011590  0E00               	movlw	0
  4500  011592  6EE6               	movwf	postinc1,c
  4501  011594  EC5D  F0E2         	call	_set_load_relay_one	;wreg free
  4502                           
  4503                           ;main.c: 278:    set_load_relay_two(0);
  4504  011598  0E00               	movlw	0
  4505  01159A  6EE6               	movwf	postinc1,c
  4506  01159C  EC55  F0E2         	call	_set_load_relay_two	;wreg free
  4507                           
  4508                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4509  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4510  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4511  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4512  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4513  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4514  0115BC  0E56               	movlw	low STR_10
  4515  0115BE  6EE6               	movwf	postinc1,c
  4516  0115C0  0EFD               	movlw	high STR_10
  4517  0115C2  6EE6               	movwf	postinc1,c
  4518  0115C4  0E00               	movlw	0
  4519  0115C6  6EE6               	movwf	postinc1,c
  4520  0115C8  0E00               	movlw	0
  4521  0115CA  6EE6               	movwf	postinc1,c
  4522  0115CC  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4523  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4524  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4525  0115DC  0E06               	movlw	6
  4526  0115DE  6EE6               	movwf	postinc1,c
  4527  0115E0  EC16  F0CF         	call	_sprintf	;wreg free
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4531  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4532  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4533  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4534  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4535  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4536  011600  0E32               	movlw	low STR_11
  4537  011602  6EE6               	movwf	postinc1,c
  4538  011604  0EFE               	movlw	high STR_11
  4539  011606  6EE6               	movwf	postinc1,c
  4540  011608  0E00               	movlw	0
  4541  01160A  6EE6               	movwf	postinc1,c
  4542  01160C  0E01               	movlw	1
  4543  01160E  6EE6               	movwf	postinc1,c
  4544  011610  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4545  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4546  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4547  011620  0E08               	movlw	8
  4548  011622  6EE6               	movwf	postinc1,c
  4549  011624  EC16  F0CF         	call	_sprintf	;wreg free
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;main.c: 281:    update_lcd(0);
  4553  011628  0E00               	movlw	0
  4554  01162A  6EE6               	movwf	postinc1,c
  4555  01162C  EC8E  F0CE         	call	_update_lcd	;wreg free
  4556                           
  4557                           ;main.c: 282:    WaitMs(2000);
  4558  011630  0ED0               	movlw	208
  4559  011632  6EE6               	movwf	postinc1,c
  4560  011634  0E07               	movlw	7
  4561  011636  6EE6               	movwf	postinc1,c
  4562  011638  EC65  F0DE         	call	_WaitMs	;wreg free
  4563                           
  4564                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4565  01163C  0EDF               	movlw	low STR_12
  4566  01163E  6EE6               	movwf	postinc1,c
  4567  011640  0EFE               	movlw	high STR_12
  4568  011642  6EE6               	movwf	postinc1,c
  4569  011644  0E00               	movlw	0
  4570  011646  6EE6               	movwf	postinc1,c
  4571  011648  0E00               	movlw	0
  4572  01164A  6EE6               	movwf	postinc1,c
  4573  01164C  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4574  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4575  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4576  01165C  0E04               	movlw	4
  4577  01165E  6EE6               	movwf	postinc1,c
  4578  011660  EC16  F0CF         	call	_sprintf	;wreg free
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4582  011664  0EF4               	movlw	low STR_13
  4583  011666  6EE6               	movwf	postinc1,c
  4584  011668  0EFE               	movlw	high STR_13
  4585  01166A  6EE6               	movwf	postinc1,c
  4586  01166C  0E00               	movlw	0
  4587  01166E  6EE6               	movwf	postinc1,c
  4588  011670  0E01               	movlw	1
  4589  011672  6EE6               	movwf	postinc1,c
  4590  011674  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4591  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4592  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4593  011684  0E04               	movlw	4
  4594  011686  6EE6               	movwf	postinc1,c
  4595  011688  EC16  F0CF         	call	_sprintf	;wreg free
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4599  01168C  0E48               	movlw	low STR_14
  4600  01168E  6EE6               	movwf	postinc1,c
  4601  011690  0EFF               	movlw	high STR_14
  4602  011692  6EE6               	movwf	postinc1,c
  4603  011694  0E00               	movlw	0
  4604  011696  6EE6               	movwf	postinc1,c
  4605  011698  0E02               	movlw	2
  4606  01169A  6EE6               	movwf	postinc1,c
  4607  01169C  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4608  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4609  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4610  0116AC  0E04               	movlw	4
  4611  0116AE  6EE6               	movwf	postinc1,c
  4612  0116B0  EC16  F0CF         	call	_sprintf	;wreg free
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;main.c: 286:    update_lcd(0);
  4616  0116B4  0E00               	movlw	0
  4617  0116B6  6EE6               	movwf	postinc1,c
  4618  0116B8  EC8E  F0CE         	call	_update_lcd	;wreg free
  4619                           
  4620                           ;main.c: 287:    uint16_t i_esr = 1;
  4621  0116BC  0E01               	movlw	1
  4622  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4623  0116C0  0E00               	movlw	0
  4624  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4625                           
  4626                           ;stkvar	_i_esr @ sp[(-17)+8]
  4627  0116C4  0EF7               	movlw	-9
  4628  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4629  0116CC  0EF8               	movlw	-8
  4630  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4631                           
  4632                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4633  0116D4  D06D               	goto	l13476
  4634  0116D6                     l13464:
  4635                           
  4636                           ;main.c: 291:     WaitMs(110);
  4637  0116D6  0E6E               	movlw	110
  4638  0116D8  6EE6               	movwf	postinc1,c
  4639  0116DA  0E00               	movlw	0
  4640  0116DC  6EE6               	movwf	postinc1,c
  4641  0116DE  EC65  F0DE         	call	_WaitMs	;wreg free
  4642                           
  4643                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4644                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4645  0116E2  0EF3               	movlw	-13
  4646  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4647  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4648  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4649  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4650  0116FC  EC38  F0D4         	call	_fabsf	;wreg free
  4651  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4652  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4653  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4654  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4655  011718  EC51  F0C8         	call	___fltol	;wreg free
  4656  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4657                           
  4658                           ;stkvar	_shape @ sp[(-17)+10]
  4659  011722  0EF9               	movlw	-7
  4660  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4661                           
  4662                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4663  01172A  0E00               	movlw	0
  4664  01172C  6EE6               	movwf	postinc1,c
  4665                           
  4666                           ;stkvar	_shape @ sp[(-18)+10]
  4667  01172E  0EF8               	movlw	-8
  4668  011730  50E3               	movf	plusw1,w,c
  4669  011732  6EE6               	movwf	postinc1,c
  4670  011734  EC9B  F0CF         	call	_spinners	;wreg free
  4671  011738  5001               	movf	btemp^0,w,c
  4672  01173A  6EE6               	movwf	postinc1,c
  4673  01173C  0E00               	movlw	0
  4674  01173E  6EE6               	movwf	postinc1,c
  4675  011740  0E00               	movlw	0
  4676  011742  6EE6               	movwf	postinc1,c
  4677  011744  0E00               	movlw	0
  4678  011746  6EE6               	movwf	postinc1,c
  4679  011748  EC9B  F0CF         	call	_spinners	;wreg free
  4680  01174C  5001               	movf	btemp^0,w,c
  4681  01174E  6EE6               	movwf	postinc1,c
  4682  011750  0E00               	movlw	0
  4683  011752  6EE6               	movwf	postinc1,c
  4684  011754  0E33               	movlw	low STR_15
  4685  011756  6EE6               	movwf	postinc1,c
  4686  011758  0EFF               	movlw	high STR_15
  4687  01175A  6EE6               	movwf	postinc1,c
  4688  01175C  0E00               	movlw	0
  4689  01175E  6EE6               	movwf	postinc1,c
  4690  011760  0E02               	movlw	2
  4691  011762  6EE6               	movwf	postinc1,c
  4692  011764  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4693  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4694  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4695  011774  0E08               	movlw	8
  4696  011776  6EE6               	movwf	postinc1,c
  4697  011778  EC16  F0CF         	call	_sprintf	;wreg free
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;main.c: 294:     update_lcd(0);
  4701  01177C  0E00               	movlw	0
  4702  01177E  6EE6               	movwf	postinc1,c
  4703  011780  EC8E  F0CE         	call	_update_lcd	;wreg free
  4704                           
  4705                           ;main.c: 296:     if (i_esr++ > 512)
  4706                           ;stkvar	_i_esr @ sp[(-17)+8]
  4707  011784  50E1               	movf	fsr1l,w,c
  4708  011786  0FF7               	addlw	-9
  4709  011788  6ED9               	movwf	fsr2l,c
  4710  01178A  50E2               	movf	fsr1h,w,c
  4711  01178C  6EDA               	movwf	fsr2h,c
  4712  01178E  0EFF               	movlw	255
  4713  011790  22DA               	addwfc	fsr2h,f,c
  4714  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4715  011798  0E01               	movlw	1
  4716  01179A  26DE               	addwf	postinc2,f,c
  4717  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4718  0117A2  0E00               	movlw	0
  4719  0117A4  22DD               	addwfc	postdec2,f,c
  4720  0117A6  040B               	decf	(btemp+10)^0,w,c
  4721  0117A8  0E02               	movlw	2
  4722  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4723  0117AC  B0D8               	btfsc	status,0,c
  4724  0117AE  D017               	goto	u12880
  4725  0117B0                     l13476:
  4726                           
  4727                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4728  0117B0  0E00               	movlw	0
  4729  0117B2  6EE6               	movwf	postinc1,c
  4730  0117B4  ECC4  F0B8         	call	_esr_check	;wreg free
  4731                           
  4732                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4733  0117B8  0EF3               	movlw	-13
  4734  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4735  0117C0  0EF4               	movlw	-12
  4736  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4737  0117C8  0EF5               	movlw	-11
  4738  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4739  0117D0  0EF6               	movlw	-10
  4740  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4741  0117D8  0EF6               	movlw	-10
  4742  0117DA  BEE3               	btfsc	plusw1,7,c
  4743  0117DC  D77C               	goto	l13464
  4744  0117DE                     u12880:
  4745                           
  4746                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4747  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4748  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4749  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4750  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4751  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4752  0117FA  0E40               	movlw	low STR_16
  4753  0117FC  6EE6               	movwf	postinc1,c
  4754  0117FE  0EFD               	movlw	high STR_16
  4755  011800  6EE6               	movwf	postinc1,c
  4756  011802  0E00               	movlw	0
  4757  011804  6EE6               	movwf	postinc1,c
  4758  011806  0E00               	movlw	0
  4759  011808  6EE6               	movwf	postinc1,c
  4760  01180A  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4761  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4762  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4763  01181A  0E08               	movlw	8
  4764  01181C  6EE6               	movwf	postinc1,c
  4765  01181E  EC16  F0CF         	call	_sprintf	;wreg free
  4766                           
  4767                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4768  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4769  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4770  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4771  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4772  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4773  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4774  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4775  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4776  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4777  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4778  01185A  0E67               	movlw	low STR_17
  4779  01185C  6EE6               	movwf	postinc1,c
  4780  01185E  0EFC               	movlw	high STR_17
  4781  011860  6EE6               	movwf	postinc1,c
  4782  011862  0E00               	movlw	0
  4783  011864  6EE6               	movwf	postinc1,c
  4784  011866  0E01               	movlw	1
  4785  011868  6EE6               	movwf	postinc1,c
  4786  01186A  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4787  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4788  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4789  01187A  0E0C               	movlw	12
  4790  01187C  6EE6               	movwf	postinc1,c
  4791  01187E  EC16  F0CF         	call	_sprintf	;wreg free
  4792                           
  4793                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4794  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4795  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4796  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4797  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4798  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4799  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4800  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4801  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4802  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4803  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4804  0118BA  0E81               	movlw	low STR_18
  4805  0118BC  6EE6               	movwf	postinc1,c
  4806  0118BE  0EFC               	movlw	high STR_18
  4807  0118C0  6EE6               	movwf	postinc1,c
  4808  0118C2  0E00               	movlw	0
  4809  0118C4  6EE6               	movwf	postinc1,c
  4810  0118C6  0E02               	movlw	2
  4811  0118C8  6EE6               	movwf	postinc1,c
  4812  0118CA  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  4813  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4814  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4815  0118DA  0E0C               	movlw	12
  4816  0118DC  6EE6               	movwf	postinc1,c
  4817  0118DE  EC16  F0CF         	call	_sprintf	;wreg free
  4818                           
  4819                           ;main.c: 302:    update_lcd(0);
  4820  0118E2  0E00               	movlw	0
  4821  0118E4  6EE6               	movwf	postinc1,c
  4822  0118E6  EC8E  F0CE         	call	_update_lcd	;wreg free
  4823                           
  4824                           ;main.c: 303:    WaitMs(5000);
  4825  0118EA  0E88               	movlw	136
  4826  0118EC  6EE6               	movwf	postinc1,c
  4827  0118EE  0E13               	movlw	19
  4828  0118F0  6EE6               	movwf	postinc1,c
  4829  0118F2  EC65  F0DE         	call	_WaitMs	;wreg free
  4830                           
  4831                           ;main.c: 304:    V.system_stable = 1;
  4832  0118F6  0E01               	movlw	1
  4833  0118F8  0101               	movlb	1	; () banked
  4834  0118FA  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4835                           
  4836                           ;main.c: 305:    break;
  4837  0118FC  D01B               	goto	l13488
  4838  0118FE                     l1348:
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4842  0118FE  81F0               	bsf	(_P+1)& (0+255),0,b	;volatile
  4843                           
  4844                           ;main.c: 312:    break;
  4845  011900  D019               	goto	l13488
  4846  011902                     l1350:
  4847                           
  4848                           ; BSR set to: 1
  4849                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4850  011902  6B07               	clrf	_V& (0+255),b	;volatile
  4851                           
  4852                           ;main.c: 316:    break;
  4853  011904  D017               	goto	l13488
  4854  011906                     l13486:
  4855  011906  0101               	movlb	1	; () banked
  4856  011908  5107               	movf	_V& (0+255),w,b	;volatile
  4857  01190A  6E0B               	movwf	(btemp+10)^0,c
  4858  01190C  6A0C               	clrf	(btemp+11)^0,c
  4859                           
  4860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4861                           ; Switch size 1, requested type "simple"
  4862                           ; Number of cases is 1, Range of values is 0 to 0
  4863                           ; switch strategies available:
  4864                           ; Name         Instructions Cycles
  4865                           ; simple_byte            4     3 (average)
  4866                           ;	Chosen strategy is simple_byte
  4867  01190E  500C               	movf	(btemp+11)^0,w,c
  4868  011910  0A00               	xorlw	0	; case 0
  4869  011912  A4D8               	btfss	status,2,c
  4870  011914  D7F6               	goto	l1350
  4871                           
  4872                           ; BSR set to: 1
  4873                           ; Switch size 1, requested type "simple"
  4874                           ; Number of cases is 5, Range of values is 0 to 5
  4875                           ; switch strategies available:
  4876                           ; Name         Instructions Cycles
  4877                           ; simple_byte           16     9 (average)
  4878                           ;	Chosen strategy is simple_byte
  4879  011916  500B               	movf	(btemp+10)^0,w,c
  4880  011918  0A00               	xorlw	0	; case 0
  4881  01191A  B4D8               	btfsc	status,2,c
  4882  01191C  D4CF               	goto	l13368
  4883  01191E  0A01               	xorlw	1	; case 1
  4884  011920  B4D8               	btfsc	status,2,c
  4885  011922  D008               	goto	l13488
  4886  011924  0A02               	xorlw	2	; case 3
  4887  011926  B4D8               	btfsc	status,2,c
  4888  011928  D005               	goto	l13488
  4889  01192A  0A07               	xorlw	7	; case 4
  4890  01192C  B4D8               	btfsc	status,2,c
  4891  01192E  D7E7               	goto	l1348
  4892  011930  0A01               	xorlw	1	; case 5
  4893  011932  D7E7               	goto	l1350
  4894  011934                     l13488:
  4895                           
  4896                           ; BSR set to: 1
  4897                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4898  011934  0E01               	movlw	1
  4899  011936  6EE6               	movwf	postinc1,c
  4900  011938  ECCB  F0DF         	call	_TimerDone	;wreg free
  4901  01193C  5001               	movf	btemp^0,w,c
  4902  01193E  B4D8               	btfsc	status,2,c
  4903  011940  D013               	goto	l13500
  4904  011942  ECB9  F0E2         	call	_check_adc_scan	;wreg free
  4905  011946  5001               	movf	btemp^0,w,c
  4906  011948  B4D8               	btfsc	status,2,c
  4907  01194A  D00E               	goto	l13500
  4908                           
  4909                           ;main.c: 323:    convert_adc_data();
  4910  01194C  ECDC  F0D3         	call	_convert_adc_data	;wreg free
  4911                           
  4912                           ;main.c: 327:    clear_adc_scan();
  4913  011950  ECC9  F0E2         	call	_clear_adc_scan	;wreg free
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;main.c: 328:    start_adc_scan();
  4917  011954  ECEC  F0D9         	call	_start_adc_scan	;wreg free
  4918                           
  4919                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4920  011958  0EC8               	movlw	200
  4921  01195A  6EE6               	movwf	postinc1,c
  4922  01195C  0E00               	movlw	0
  4923  01195E  6EE6               	movwf	postinc1,c
  4924  011960  0E01               	movlw	1
  4925  011962  6EE6               	movwf	postinc1,c
  4926  011964  EC76  F0DD         	call	_StartTimer	;wreg free
  4927  011968                     l13500:
  4928                           
  4929                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4930                           
  4931                           ;main.c: 332:   if (V.ticks) {
  4932  011968  0E0A               	movlw	10
  4933  01196A  6EE6               	movwf	postinc1,c
  4934  01196C  ECCB  F0DF         	call	_TimerDone	;wreg free
  4935  011970  5001               	movf	btemp^0,w,c
  4936  011972  B4D8               	btfsc	status,2,c
  4937  011974  EF69  F091         	goto	l13584
  4938                           
  4939                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4940  011978  0E09               	movlw	9
  4941  01197A  6EE6               	movwf	postinc1,c
  4942  01197C  ECCB  F0DF         	call	_TimerDone	;wreg free
  4943  011980  5001               	movf	btemp^0,w,c
  4944  011982  B4D8               	btfsc	status,2,c
  4945  011984  D004               	goto	l13508
  4946                           
  4947                           ;main.c: 338:     set_display_info(DIS_STR);
  4948  011986  0E00               	movlw	0
  4949  011988  6EE6               	movwf	postinc1,c
  4950  01198A  ECD0  F0E1         	call	_set_display_info	;wreg free
  4951  01198E                     l13508:
  4952                           
  4953                           ;main.c: 340:    calc_model_data();
  4954  01198E  EC5F  F0AE         	call	_calc_model_data	;wreg free
  4955                           
  4956                           ; BSR set to: 57
  4957                           ;main.c: 347:     hid_display(&H);
  4958                           
  4959                           ;main.c: 342:    if (0) {
  4960  011992  0EC6               	movlw	low _H
  4961  011994  6EE6               	movwf	postinc1,c
  4962  011996  0E01               	movlw	high _H
  4963  011998  6EE6               	movwf	postinc1,c
  4964  01199A  EC67  F0C3         	call	_hid_display	;wreg free
  4965                           
  4966                           ;main.c: 348:     switch (H.hid_display) {
  4967  01199E  EFFF  F090         	goto	l13556
  4968  0119A2                     l1358:
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;main.c: 350:      V.calib = 0;
  4972  0119A2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4973                           
  4974                           ; BSR set to: 1
  4975                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4976  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4977  0119A8  50DF               	movf	indf2,w,c
  4978  0119AA  A4D8               	btfss	status,2,c
  4979  0119AC  D002               	goto	l13518
  4980                           
  4981                           ; BSR set to: 1
  4982  0119AE  0E20               	movlw	32
  4983  0119B0  D001               	goto	L1
  4984  0119B2                     l13518:
  4985                           
  4986                           ; BSR set to: 1
  4987  0119B2  0E44               	movlw	68
  4988  0119B4                     L1:
  4989  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4990  0119B6  0E00               	movlw	0
  4991  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4992                           
  4993                           ;stkvar	_main$3770 @ sp[(-17)+2]
  4994  0119BA  0EF1               	movlw	-15
  4995  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4996  0119C2  0EF2               	movlw	-14
  4997  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4998                           
  4999                           ; BSR set to: 1
  5000  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  5001  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5002  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  5005                           
  5006                           ;stkvar	_main$3770 @ sp[(-21)+2]
  5007  0119E6  0EED               	movlw	-19
  5008  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  5009  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  5010  0119F4  0E1C               	movlw	low STR_22
  5011  0119F6  6EE6               	movwf	postinc1,c
  5012  0119F8  0EFE               	movlw	high STR_22
  5013  0119FA  6EE6               	movwf	postinc1,c
  5014  0119FC  0E00               	movlw	0
  5015  0119FE  6EE6               	movwf	postinc1,c
  5016  011A00  0E00               	movlw	0
  5017  011A02  6EE6               	movwf	postinc1,c
  5018  011A04  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5019  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  5020  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5021  011A14  0E0A               	movlw	10
  5022  011A16  6EE6               	movwf	postinc1,c
  5023  011A18  EC16  F0CF         	call	_sprintf	;wreg free
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5027  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  5028  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  5029  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  5030  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5031  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  5032  011A38  0E06               	movlw	low STR_23
  5033  011A3A  6EE6               	movwf	postinc1,c
  5034  011A3C  0EFE               	movlw	high STR_23
  5035  011A3E  6EE6               	movwf	postinc1,c
  5036  011A40  0E00               	movlw	0
  5037  011A42  6EE6               	movwf	postinc1,c
  5038  011A44  0E01               	movlw	1
  5039  011A46  6EE6               	movwf	postinc1,c
  5040  011A48  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5041  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  5042  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5043  011A58  0E08               	movlw	8
  5044  011A5A  6EE6               	movwf	postinc1,c
  5045  011A5C  EC16  F0CF         	call	_sprintf	;wreg free
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5049  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  5050  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  5051  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5052  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5053  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5054  011A7C  0EF0               	movlw	low STR_24
  5055  011A7E  6EE6               	movwf	postinc1,c
  5056  011A80  0EFD               	movlw	high STR_24
  5057  011A82  6EE6               	movwf	postinc1,c
  5058  011A84  0E00               	movlw	0
  5059  011A86  6EE6               	movwf	postinc1,c
  5060  011A88  0E02               	movlw	2
  5061  011A8A  6EE6               	movwf	postinc1,c
  5062  011A8C  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5063  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5064  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5065  011A9C  0E08               	movlw	8
  5066  011A9E  6EE6               	movwf	postinc1,c
  5067  011AA0  EC16  F0CF         	call	_sprintf	;wreg free
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5071  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5072  011AA8  50DF               	movf	indf2,w,c
  5073  011AAA  A4D8               	btfss	status,2,c
  5074  011AAC  D002               	goto	l13530
  5075                           
  5076                           ; BSR set to: 0
  5077  011AAE  0E20               	movlw	32
  5078  011AB0  D001               	goto	L2
  5079  011AB2                     l13530:
  5080                           
  5081                           ; BSR set to: 0
  5082  011AB2  0E44               	movlw	68
  5083  011AB4                     L2:
  5084  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5085  011AB6  0E00               	movlw	0
  5086  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5087                           
  5088                           ;stkvar	_main$3774 @ sp[(-17)+0]
  5089  011ABA  0EEF               	movlw	-17
  5090  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5091  011AC2  0EF0               	movlw	-16
  5092  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5093                           
  5094                           ; BSR set to: 0
  5095  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5096  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5097  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5098  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5099  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5100                           
  5101                           ;stkvar	_main$3774 @ sp[(-21)+0]
  5102  011AE6  0EEB               	movlw	-21
  5103  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5104  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5105  011AF4  0EDA               	movlw	low STR_25
  5106  011AF6  6EE6               	movwf	postinc1,c
  5107  011AF8  0EFD               	movlw	high STR_25
  5108  011AFA  6EE6               	movwf	postinc1,c
  5109  011AFC  0E01               	movlw	1
  5110  011AFE  6EE6               	movwf	postinc1,c
  5111  011B00  0E00               	movlw	0
  5112  011B02  6EE6               	movwf	postinc1,c
  5113  011B04  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5114  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5115  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5116  011B14  0E0A               	movlw	10
  5117  011B16  6EE6               	movwf	postinc1,c
  5118  011B18  EC16  F0CF         	call	_sprintf	;wreg free
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5122  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5123  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5124  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5126  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  011B38  0EC4               	movlw	low STR_26
  5128  011B3A  6EE6               	movwf	postinc1,c
  5129  011B3C  0EFD               	movlw	high STR_26
  5130  011B3E  6EE6               	movwf	postinc1,c
  5131  011B40  0E01               	movlw	1
  5132  011B42  6EE6               	movwf	postinc1,c
  5133  011B44  0E01               	movlw	1
  5134  011B46  6EE6               	movwf	postinc1,c
  5135  011B48  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5136  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5137  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5138  011B58  0E08               	movlw	8
  5139  011B5A  6EE6               	movwf	postinc1,c
  5140  011B5C  EC16  F0CF         	call	_sprintf	;wreg free
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5144  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5145  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5146  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5147  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5148  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5149  011B7C  0EAE               	movlw	low STR_27
  5150  011B7E  6EE6               	movwf	postinc1,c
  5151  011B80  0EFD               	movlw	high STR_27
  5152  011B82  6EE6               	movwf	postinc1,c
  5153  011B84  0E01               	movlw	1
  5154  011B86  6EE6               	movwf	postinc1,c
  5155  011B88  0E02               	movlw	2
  5156  011B8A  6EE6               	movwf	postinc1,c
  5157  011B8C  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5158  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5159  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5160  011B9C  0E08               	movlw	8
  5161  011B9E  6EE6               	movwf	postinc1,c
  5162  011BA0  EC16  F0CF         	call	_sprintf	;wreg free
  5163                           
  5164                           ;main.c: 358:      break;
  5165  011BA4  D342               	goto	l13558
  5166  011BA6                     l1368:
  5167                           
  5168                           ; BSR set to: 1
  5169                           ;main.c: 360:      V.calib = 0;
  5170  011BA6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5171                           
  5172                           ; BSR set to: 1
  5173                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5174  011BA8  EE21  F303         	lfsr	2,_C+4	;volatile
  5175  011BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  011BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5178  011BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011BC4  EE21  F313         	lfsr	2,_C+20	;volatile
  5180  011BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  011BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5183  011BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5184  011BE0  0E74               	movlw	low STR_28
  5185  011BE2  6EE6               	movwf	postinc1,c
  5186  011BE4  0EFE               	movlw	high STR_28
  5187  011BE6  6EE6               	movwf	postinc1,c
  5188  011BE8  0E00               	movlw	0
  5189  011BEA  6EE6               	movwf	postinc1,c
  5190  011BEC  0E00               	movlw	0
  5191  011BEE  6EE6               	movwf	postinc1,c
  5192  011BF0  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5193  011BF4  0060  F007  FFE6   	movff	btemp,postinc1
  5194  011BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5195  011C00  0E0C               	movlw	12
  5196  011C02  6EE6               	movwf	postinc1,c
  5197  011C04  EC16  F0CF         	call	_sprintf	;wreg free
  5198                           
  5199                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5200  011C08  EE21  F2FF         	lfsr	2,_C
  5201  011C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  011C12  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5204  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5205  011C24  EE21  F30F         	lfsr	2,_C+16	;volatile
  5206  011C28  006F FF7B FFE6     	movff	postinc2,postinc1
  5207  011C2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5208  011C34  006F FF7B FFE6     	movff	postinc2,postinc1
  5209  011C3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5210  011C40  0E48               	movlw	low STR_29
  5211  011C42  6EE6               	movwf	postinc1,c
  5212  011C44  0EFE               	movlw	high STR_29
  5213  011C46  6EE6               	movwf	postinc1,c
  5214  011C48  0E00               	movlw	0
  5215  011C4A  6EE6               	movwf	postinc1,c
  5216  011C4C  0E01               	movlw	1
  5217  011C4E  6EE6               	movwf	postinc1,c
  5218  011C50  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5219  011C54  0060  F007  FFE6   	movff	btemp,postinc1
  5220  011C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5221  011C60  0E0C               	movlw	12
  5222  011C62  6EE6               	movwf	postinc1,c
  5223  011C64  EC16  F0CF         	call	_sprintf	;wreg free
  5224                           
  5225                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5226  011C68  EE21  F33F         	lfsr	2,_C+64	;volatile
  5227  011C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5228  011C72  006F FF7B FFE6     	movff	postinc2,postinc1
  5229  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5230  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5231  011C84  EE21  F307         	lfsr	2,_C+8	;volatile
  5232  011C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5233  011C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5234  011C94  006F FF7B FFE6     	movff	postinc2,postinc1
  5235  011C9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5236  011CA0  0E5E               	movlw	low STR_30
  5237  011CA2  6EE6               	movwf	postinc1,c
  5238  011CA4  0EFE               	movlw	high STR_30
  5239  011CA6  6EE6               	movwf	postinc1,c
  5240  011CA8  0E00               	movlw	0
  5241  011CAA  6EE6               	movwf	postinc1,c
  5242  011CAC  0E02               	movlw	2
  5243  011CAE  6EE6               	movwf	postinc1,c
  5244  011CB0  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5245  011CB4  0060  F007  FFE6   	movff	btemp,postinc1
  5246  011CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5247  011CC0  0E0C               	movlw	12
  5248  011CC2  6EE6               	movwf	postinc1,c
  5249  011CC4  EC16  F0CF         	call	_sprintf	;wreg free
  5250                           
  5251                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5252  011CC8  EE21  F39F         	lfsr	2,_C+160	;volatile
  5253  011CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5254  011CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5255  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5256  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5257  011CE4  0E6C               	movlw	low STR_31
  5258  011CE6  6EE6               	movwf	postinc1,c
  5259  011CE8  0EFD               	movlw	high STR_31
  5260  011CEA  6EE6               	movwf	postinc1,c
  5261  011CEC  0E01               	movlw	1
  5262  011CEE  6EE6               	movwf	postinc1,c
  5263  011CF0  0E00               	movlw	0
  5264  011CF2  6EE6               	movwf	postinc1,c
  5265  011CF4  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5266  011CF8  0060  F007  FFE6   	movff	btemp,postinc1
  5267  011CFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5268  011D04  0E08               	movlw	8
  5269  011D06  6EE6               	movwf	postinc1,c
  5270  011D08  EC16  F0CF         	call	_sprintf	;wreg free
  5271                           
  5272                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5273  011D0C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5274  011D10  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  011D16  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5278  011D28  0E82               	movlw	low STR_32
  5279  011D2A  6EE6               	movwf	postinc1,c
  5280  011D2C  0EFD               	movlw	high STR_32
  5281  011D2E  6EE6               	movwf	postinc1,c
  5282  011D30  0E01               	movlw	1
  5283  011D32  6EE6               	movwf	postinc1,c
  5284  011D34  0E01               	movlw	1
  5285  011D36  6EE6               	movwf	postinc1,c
  5286  011D38  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5287  011D3C  0060  F007  FFE6   	movff	btemp,postinc1
  5288  011D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5289  011D48  0E08               	movlw	8
  5290  011D4A  6EE6               	movwf	postinc1,c
  5291  011D4C  EC16  F0CF         	call	_sprintf	;wreg free
  5292                           
  5293                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5294  011D50  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5295  011D54  006F FF7B FFE6     	movff	postinc2,postinc1
  5296  011D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5299  011D6C  EE21  F39F         	lfsr	2,_C+160	;volatile
  5300  011D70  006F FF7B FFE6     	movff	postinc2,postinc1
  5301  011D76  006F FF7B FFE6     	movff	postinc2,postinc1
  5302  011D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5303  011D82  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011D88  ECFA  F0A2         	call	___fladd	;wreg free
  5305  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5306  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5307  011D98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5308  011D9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5309  011DA4  0E98               	movlw	low STR_33
  5310  011DA6  6EE6               	movwf	postinc1,c
  5311  011DA8  0EFD               	movlw	high STR_33
  5312  011DAA  6EE6               	movwf	postinc1,c
  5313  011DAC  0E01               	movlw	1
  5314  011DAE  6EE6               	movwf	postinc1,c
  5315  011DB0  0E02               	movlw	2
  5316  011DB2  6EE6               	movwf	postinc1,c
  5317  011DB4  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5318  011DB8  0060  F007  FFE6   	movff	btemp,postinc1
  5319  011DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5320  011DC4  0E08               	movlw	8
  5321  011DC6  6EE6               	movwf	postinc1,c
  5322  011DC8  EC16  F0CF         	call	_sprintf	;wreg free
  5323                           
  5324                           ;main.c: 368:      break;
  5325  011DCC  D22E               	goto	l13558
  5326  011DCE                     l1369:
  5327                           
  5328                           ; BSR set to: 1
  5329                           ;main.c: 370:      V.calib = 0;
  5330  011DCE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5331                           
  5332                           ; BSR set to: 1
  5333                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5334  011DD0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5335  011DD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5336  011DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5337  011DE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5338  011DE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5339  011DEC  0EE4               	movlw	low STR_34
  5340  011DEE  6EE6               	movwf	postinc1,c
  5341  011DF0  0EFC               	movlw	high STR_34
  5342  011DF2  6EE6               	movwf	postinc1,c
  5343  011DF4  0E00               	movlw	0
  5344  011DF6  6EE6               	movwf	postinc1,c
  5345  011DF8  0E00               	movlw	0
  5346  011DFA  6EE6               	movwf	postinc1,c
  5347  011DFC  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5348  011E00  0060  F007  FFE6   	movff	btemp,postinc1
  5349  011E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5350  011E0C  0E08               	movlw	8
  5351  011E0E  6EE6               	movwf	postinc1,c
  5352  011E10  EC16  F0CF         	call	_sprintf	;wreg free
  5353                           
  5354                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5355  011E14  EE21  F393         	lfsr	2,_C+148	;volatile
  5356  011E18  006F FF7B FFE6     	movff	postinc2,postinc1
  5357  011E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5358  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5359  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5360  011E30  EE21  F38F         	lfsr	2,_C+144	;volatile
  5361  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5362  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5363  011E40  006F FF7B FFE6     	movff	postinc2,postinc1
  5364  011E46  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011E4C  0E29               	movlw	low STR_35
  5366  011E4E  6EE6               	movwf	postinc1,c
  5367  011E50  0EFD               	movlw	high STR_35
  5368  011E52  6EE6               	movwf	postinc1,c
  5369  011E54  0E00               	movlw	0
  5370  011E56  6EE6               	movwf	postinc1,c
  5371  011E58  0E01               	movlw	1
  5372  011E5A  6EE6               	movwf	postinc1,c
  5373  011E5C  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5374  011E60  0060  F007  FFE6   	movff	btemp,postinc1
  5375  011E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5376  011E6C  0E0C               	movlw	12
  5377  011E6E  6EE6               	movwf	postinc1,c
  5378  011E70  EC16  F0CF         	call	_sprintf	;wreg free
  5379                           
  5380                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5381  011E74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5382  011E78  006F FF7B FFE6     	movff	postinc2,postinc1
  5383  011E7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5384  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5385  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5386  011E90  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5387  011E94  006F FF78  F00B    	movff	postinc2,btemp+10
  5388  011E9A  006F FF74  F00C    	movff	postdec2,btemp+11
  5389  011EA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5390  011EA6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5391  011EAC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5392  011EB0  006F FF78  F00B    	movff	postinc2,btemp+10
  5393  011EB6  006F FF74  F00C    	movff	postdec2,btemp+11
  5394  011EBC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5395  011EC2  0060  F033  FFE6   	movff	btemp+11,postinc1
  5396  011EC8  0E00               	movlw	0
  5397  011ECA  6EE6               	movwf	postinc1,c
  5398  011ECC  0E05               	movlw	5
  5399  011ECE  6EE6               	movwf	postinc1,c
  5400  011ED0  EC9B  F0CF         	call	_spinners	;wreg free
  5401  011ED4  5001               	movf	btemp^0,w,c
  5402  011ED6  6EE6               	movwf	postinc1,c
  5403  011ED8  0E00               	movlw	0
  5404  011EDA  6EE6               	movwf	postinc1,c
  5405  011EDC  0E4A               	movlw	low STR_36
  5406  011EDE  6EE6               	movwf	postinc1,c
  5407  011EE0  0EFC               	movlw	high STR_36
  5408  011EE2  6EE6               	movwf	postinc1,c
  5409  011EE4  0E00               	movlw	0
  5410  011EE6  6EE6               	movwf	postinc1,c
  5411  011EE8  0E02               	movlw	2
  5412  011EEA  6EE6               	movwf	postinc1,c
  5413  011EEC  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5414  011EF0  0060  F007  FFE6   	movff	btemp,postinc1
  5415  011EF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5416  011EFC  0E0E               	movlw	14
  5417  011EFE  6EE6               	movwf	postinc1,c
  5418  011F00  EC16  F0CF         	call	_sprintf	;wreg free
  5419                           
  5420                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5421  011F04  EE21  F387         	lfsr	2,_C+136	;volatile
  5422  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5423  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5424  011F14  006F FF7B FFE6     	movff	postinc2,postinc1
  5425  011F1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5426  011F20  0ECD               	movlw	low STR_37
  5427  011F22  6EE6               	movwf	postinc1,c
  5428  011F24  0EFC               	movlw	high STR_37
  5429  011F26  6EE6               	movwf	postinc1,c
  5430  011F28  0E01               	movlw	1
  5431  011F2A  6EE6               	movwf	postinc1,c
  5432  011F2C  0E00               	movlw	0
  5433  011F2E  6EE6               	movwf	postinc1,c
  5434  011F30  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5435  011F34  0060  F007  FFE6   	movff	btemp,postinc1
  5436  011F3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5437  011F40  0E08               	movlw	8
  5438  011F42  6EE6               	movwf	postinc1,c
  5439  011F44  EC16  F0CF         	call	_sprintf	;wreg free
  5440                           
  5441                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5442  011F48  EE22  F00D         	lfsr	2,_C+270	;volatile
  5443  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5444  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5445  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5446  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5447  011F64  EE22  F019         	lfsr	2,_C+282	;volatile
  5448  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5449  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5450  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  011F80  0EFB               	movlw	low STR_38
  5453  011F82  6EE6               	movwf	postinc1,c
  5454  011F84  0EFC               	movlw	high STR_38
  5455  011F86  6EE6               	movwf	postinc1,c
  5456  011F88  0E01               	movlw	1
  5457  011F8A  6EE6               	movwf	postinc1,c
  5458  011F8C  0E01               	movlw	1
  5459  011F8E  6EE6               	movwf	postinc1,c
  5460  011F90  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5461  011F94  0060  F007  FFE6   	movff	btemp,postinc1
  5462  011F9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5463  011FA0  0E0C               	movlw	12
  5464  011FA2  6EE6               	movwf	postinc1,c
  5465  011FA4  EC16  F0CF         	call	_sprintf	;wreg free
  5466                           
  5467                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5468  011FA8  EE22  F011         	lfsr	2,_C+274	;volatile
  5469  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  011FC4  EE22  F01D         	lfsr	2,_C+286	;volatile
  5474  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5475  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5476  011FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  011FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  011FE0  0E12               	movlw	low STR_39
  5479  011FE2  6EE6               	movwf	postinc1,c
  5480  011FE4  0EFD               	movlw	high STR_39
  5481  011FE6  6EE6               	movwf	postinc1,c
  5482  011FE8  0E01               	movlw	1
  5483  011FEA  6EE6               	movwf	postinc1,c
  5484  011FEC  0E02               	movlw	2
  5485  011FEE  6EE6               	movwf	postinc1,c
  5486  011FF0  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5487  011FF4  0060  F007  FFE6   	movff	btemp,postinc1
  5488  011FFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5489  012000  0E0C               	movlw	12
  5490  012002  6EE6               	movwf	postinc1,c
  5491  012004  EC16  F0CF         	call	_sprintf	;wreg free
  5492                           
  5493                           ;main.c: 378:      break;
  5494  012008  D110               	goto	l13558
  5495  01200A                     l13542:
  5496                           
  5497                           ; BSR set to: 1
  5498                           ;main.c: 380:      if (!V.calib) {
  5499  01200A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5500  01200C  A4D8               	btfss	status,2,c
  5501  01200E  D02D               	goto	l13546
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5505  012010  0EFF               	movlw	255
  5506  012012  6EE6               	movwf	postinc1,c
  5507                           
  5508                           ;stkvar	_i @ sp[(-18)+14]
  5509  012014  0EFC               	movlw	-4
  5510  012016  50E3               	movf	plusw1,w,c
  5511  012018  6EE6               	movwf	postinc1,c
  5512  01201A  0E00               	movlw	0
  5513  01201C  6EE6               	movwf	postinc1,c
  5514  01201E  0E00               	movlw	0
  5515  012020  6EE6               	movwf	postinc1,c
  5516  012022  0E00               	movlw	0
  5517  012024  6EE6               	movwf	postinc1,c
  5518  012026  0E00               	movlw	0
  5519  012028  6EE6               	movwf	postinc1,c
  5520  01202A  EC55  F0C4         	call	_lp_filter	;wreg free
  5521                           
  5522                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5523  01202E  0EFF               	movlw	255
  5524  012030  6EE6               	movwf	postinc1,c
  5525                           
  5526                           ;stkvar	_j @ sp[(-18)+13]
  5527  012032  0EFB               	movlw	-5
  5528  012034  50E3               	movf	plusw1,w,c
  5529  012036  6EE6               	movwf	postinc1,c
  5530  012038  0E00               	movlw	0
  5531  01203A  6EE6               	movwf	postinc1,c
  5532  01203C  0E00               	movlw	0
  5533  01203E  6EE6               	movwf	postinc1,c
  5534  012040  0E00               	movlw	0
  5535  012042  6EE6               	movwf	postinc1,c
  5536  012044  0E00               	movlw	0
  5537  012046  6EE6               	movwf	postinc1,c
  5538  012048  EC55  F0C4         	call	_lp_filter	;wreg free
  5539                           
  5540                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5541  01204C  0EFF               	movlw	255
  5542  01204E  6EE6               	movwf	postinc1,c
  5543                           
  5544                           ;stkvar	_k @ sp[(-18)+12]
  5545  012050  0EFA               	movlw	-6
  5546  012052  50E3               	movf	plusw1,w,c
  5547  012054  6EE6               	movwf	postinc1,c
  5548  012056  0E00               	movlw	0
  5549  012058  6EE6               	movwf	postinc1,c
  5550  01205A  0E00               	movlw	0
  5551  01205C  6EE6               	movwf	postinc1,c
  5552  01205E  0E00               	movlw	0
  5553  012060  6EE6               	movwf	postinc1,c
  5554  012062  0E00               	movlw	0
  5555  012064  6EE6               	movwf	postinc1,c
  5556  012066  EC55  F0C4         	call	_lp_filter	;wreg free
  5557  01206A                     l13546:
  5558                           
  5559                           ;main.c: 385:      V.calib = 1;
  5560  01206A  0E01               	movlw	1
  5561  01206C  0101               	movlb	1	; () banked
  5562  01206E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5563                           
  5564                           ; BSR set to: 1
  5565                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5566                           ;stkvar	_inp_index @ sp[(-17)+11]
  5567  012070  0EFA               	movlw	-6
  5568  012072  50E3               	movf	plusw1,w,c
  5569  012074  6E0B               	movwf	(btemp+10)^0,c
  5570  012076  6A0C               	clrf	(btemp+11)^0,c
  5571  012078  0E01               	movlw	1
  5572  01207A  260B               	addwf	(btemp+10)^0,f,c
  5573  01207C  0E00               	movlw	0
  5574  01207E  220C               	addwfc	(btemp+11)^0,f,c
  5575  012080  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5576  012086  0060  F033  FFE6   	movff	btemp+11,postinc1
  5577                           
  5578                           ;stkvar	_i @ sp[(-19)+14]
  5579  01208C  0EFB               	movlw	-5
  5580  01208E  50E3               	movf	plusw1,w,c
  5581  012090  0D04               	mullw	4
  5582  012092  0EFF               	movlw	low _C
  5583  012094  24F3               	addwf	243,w,c
  5584  012096  6ED9               	movwf	fsr2l,c
  5585  012098  0E06               	movlw	high _C
  5586  01209A  20F4               	addwfc	prodh,w,c
  5587  01209C  6EDA               	movwf	fsr2h,c
  5588  01209E  006F FF7B FFE6     	movff	postinc2,postinc1
  5589  0120A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5590  0120AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5591  0120B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5592                           
  5593                           ;stkvar	_i @ sp[(-23)+14]
  5594  0120B6  0EF7               	movlw	-9
  5595  0120B8  50E3               	movf	plusw1,w,c
  5596  0120BA  6EE6               	movwf	postinc1,c
  5597  0120BC  ECDF  F0E1         	call	_get_raw_result	;wreg free
  5598  0120C0  0060  F007  FFE6   	movff	btemp,postinc1
  5599  0120C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5600  0120CC  0E8A               	movlw	low STR_40
  5601  0120CE  6EE6               	movwf	postinc1,c
  5602  0120D0  0EFE               	movlw	high STR_40
  5603  0120D2  6EE6               	movwf	postinc1,c
  5604  0120D4  0E00               	movlw	0
  5605  0120D6  6EE6               	movwf	postinc1,c
  5606  0120D8  0E00               	movlw	0
  5607  0120DA  6EE6               	movwf	postinc1,c
  5608  0120DC  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5609  0120E0  0060  F007  FFE6   	movff	btemp,postinc1
  5610  0120E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5611  0120EC  0E0C               	movlw	12
  5612  0120EE  6EE6               	movwf	postinc1,c
  5613  0120F0  EC16  F0CF         	call	_sprintf	;wreg free
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5617                           ;stkvar	_inp_index @ sp[(-17)+11]
  5618  0120F4  0EFA               	movlw	-6
  5619  0120F6  50E3               	movf	plusw1,w,c
  5620  0120F8  6E0B               	movwf	(btemp+10)^0,c
  5621  0120FA  6A0C               	clrf	(btemp+11)^0,c
  5622  0120FC  0E02               	movlw	2
  5623  0120FE  260B               	addwf	(btemp+10)^0,f,c
  5624  012100  0E00               	movlw	0
  5625  012102  220C               	addwfc	(btemp+11)^0,f,c
  5626  012104  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5627  01210A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5628                           
  5629                           ;stkvar	_j @ sp[(-19)+13]
  5630  012110  0EFA               	movlw	-6
  5631  012112  50E3               	movf	plusw1,w,c
  5632  012114  0D04               	mullw	4
  5633  012116  0EFF               	movlw	low _C
  5634  012118  24F3               	addwf	243,w,c
  5635  01211A  6ED9               	movwf	fsr2l,c
  5636  01211C  0E06               	movlw	high _C
  5637  01211E  20F4               	addwfc	prodh,w,c
  5638  012120  6EDA               	movwf	fsr2h,c
  5639  012122  006F FF7B FFE6     	movff	postinc2,postinc1
  5640  012128  006F FF7B FFE6     	movff	postinc2,postinc1
  5641  01212E  006F FF7B FFE6     	movff	postinc2,postinc1
  5642  012134  006F FF7B FFE6     	movff	postinc2,postinc1
  5643                           
  5644                           ;stkvar	_j @ sp[(-23)+13]
  5645  01213A  0EF6               	movlw	-10
  5646  01213C  50E3               	movf	plusw1,w,c
  5647  01213E  6EE6               	movwf	postinc1,c
  5648  012140  ECDF  F0E1         	call	_get_raw_result	;wreg free
  5649  012144  0060  F007  FFE6   	movff	btemp,postinc1
  5650  01214A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5651  012150  0E8A               	movlw	low STR_40
  5652  012152  6EE6               	movwf	postinc1,c
  5653  012154  0EFE               	movlw	high STR_40
  5654  012156  6EE6               	movwf	postinc1,c
  5655  012158  0E00               	movlw	0
  5656  01215A  6EE6               	movwf	postinc1,c
  5657  01215C  0E01               	movlw	1
  5658  01215E  6EE6               	movwf	postinc1,c
  5659  012160  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5660  012164  0060  F007  FFE6   	movff	btemp,postinc1
  5661  01216A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5662  012170  0E0C               	movlw	12
  5663  012172  6EE6               	movwf	postinc1,c
  5664  012174  EC16  F0CF         	call	_sprintf	;wreg free
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5668                           ;stkvar	_inp_index @ sp[(-17)+11]
  5669  012178  0EFA               	movlw	-6
  5670  01217A  50E3               	movf	plusw1,w,c
  5671  01217C  6E0B               	movwf	(btemp+10)^0,c
  5672  01217E  6A0C               	clrf	(btemp+11)^0,c
  5673  012180  0E03               	movlw	3
  5674  012182  260B               	addwf	(btemp+10)^0,f,c
  5675  012184  0E00               	movlw	0
  5676  012186  220C               	addwfc	(btemp+11)^0,f,c
  5677  012188  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5678  01218E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5679                           
  5680                           ;stkvar	_k @ sp[(-19)+12]
  5681  012194  0EF9               	movlw	-7
  5682  012196  50E3               	movf	plusw1,w,c
  5683  012198  0D04               	mullw	4
  5684  01219A  0EFF               	movlw	low _C
  5685  01219C  24F3               	addwf	243,w,c
  5686  01219E  6ED9               	movwf	fsr2l,c
  5687  0121A0  0E06               	movlw	high _C
  5688  0121A2  20F4               	addwfc	prodh,w,c
  5689  0121A4  6EDA               	movwf	fsr2h,c
  5690  0121A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  0121AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  0121B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5693  0121B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5694                           
  5695                           ;stkvar	_k @ sp[(-23)+12]
  5696  0121BE  0EF5               	movlw	-11
  5697  0121C0  50E3               	movf	plusw1,w,c
  5698  0121C2  6EE6               	movwf	postinc1,c
  5699  0121C4  ECDF  F0E1         	call	_get_raw_result	;wreg free
  5700  0121C8  0060  F007  FFE6   	movff	btemp,postinc1
  5701  0121CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5702  0121D4  0E8A               	movlw	low STR_40
  5703  0121D6  6EE6               	movwf	postinc1,c
  5704  0121D8  0EFE               	movlw	high STR_40
  5705  0121DA  6EE6               	movwf	postinc1,c
  5706  0121DC  0E00               	movlw	0
  5707  0121DE  6EE6               	movwf	postinc1,c
  5708  0121E0  0E02               	movlw	2
  5709  0121E2  6EE6               	movwf	postinc1,c
  5710  0121E4  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  5711  0121E8  0060  F007  FFE6   	movff	btemp,postinc1
  5712  0121EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5713  0121F4  0E0C               	movlw	12
  5714  0121F6  6EE6               	movwf	postinc1,c
  5715  0121F8  EC16  F0CF         	call	_sprintf	;wreg free
  5716                           
  5717                           ;main.c: 389:      break;
  5718  0121FC  D016               	goto	l13558
  5719  0121FE                     l13556:
  5720  0121FE  0101               	movlb	1	; () banked
  5721  012200  51C6               	movf	_H& (0+255),w,b
  5722  012202  6E0B               	movwf	(btemp+10)^0,c
  5723  012204  6A0C               	clrf	(btemp+11)^0,c
  5724                           
  5725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5726                           ; Switch size 1, requested type "simple"
  5727                           ; Number of cases is 1, Range of values is 0 to 0
  5728                           ; switch strategies available:
  5729                           ; Name         Instructions Cycles
  5730                           ; simple_byte            4     3 (average)
  5731                           ;	Chosen strategy is simple_byte
  5732  012206  500C               	movf	(btemp+11)^0,w,c
  5733  012208  0A00               	xorlw	0	; case 0
  5734  01220A  A4D8               	btfss	status,2,c
  5735  01220C  D00E               	goto	l13558
  5736                           
  5737                           ; BSR set to: 1
  5738                           ; Switch size 1, requested type "simple"
  5739                           ; Number of cases is 4, Range of values is 0 to 3
  5740                           ; switch strategies available:
  5741                           ; Name         Instructions Cycles
  5742                           ; simple_byte           13     7 (average)
  5743                           ;	Chosen strategy is simple_byte
  5744  01220E  500B               	movf	(btemp+10)^0,w,c
  5745  012210  0A00               	xorlw	0	; case 0
  5746  012212  B4D8               	btfsc	status,2,c
  5747  012214  D4C8               	goto	l1368
  5748  012216  0A01               	xorlw	1	; case 1
  5749  012218  B4D8               	btfsc	status,2,c
  5750  01221A  EFD1  F08C         	goto	l1358
  5751  01221E  0A03               	xorlw	3	; case 2
  5752  012220  B4D8               	btfsc	status,2,c
  5753  012222  D5D5               	goto	l1369
  5754  012224  0A01               	xorlw	1	; case 3
  5755  012226  B4D8               	btfsc	status,2,c
  5756  012228  D6F0               	goto	l13542
  5757  01222A                     l13558:
  5758                           
  5759                           ;main.c: 393:     clear_hid_pflags(&H);
  5760  01222A  0EC6               	movlw	low _H
  5761  01222C  6EE6               	movwf	postinc1,c
  5762  01222E  0E01               	movlw	high _H
  5763  012230  6EE6               	movwf	postinc1,c
  5764  012232  EC8A  F0DC         	call	_clear_hid_pflags	;wreg free
  5765                           
  5766                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5767  012236  0EFA               	movlw	250
  5768  012238  6EE6               	movwf	postinc1,c
  5769  01223A  0E00               	movlw	0
  5770  01223C  6EE6               	movwf	postinc1,c
  5771  01223E  0E0A               	movlw	10
  5772  012240  6EE6               	movwf	postinc1,c
  5773  012242  EC76  F0DD         	call	_StartTimer	;wreg free
  5774                           
  5775                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5776  012246  0EC6               	movlw	low _H
  5777  012248  6EE6               	movwf	postinc1,c
  5778  01224A  0E01               	movlw	high _H
  5779  01224C  6EE6               	movwf	postinc1,c
  5780  01224E  ECE0  F0D8         	call	_check_enter_button	;wreg free
  5781  012252  5001               	movf	btemp^0,w,c
  5782  012254  0101               	movlb	1	; () banked
  5783  012256  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5784                           
  5785                           ; BSR set to: 1
  5786                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5787  012258  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5788  01225A  B4D8               	btfsc	status,2,c
  5789  01225C  D011               	goto	l13572
  5790                           
  5791                           ; BSR set to: 1
  5792  01225E  0E03               	movlw	3
  5793  012260  19C6               	xorwf	_H& (0+255),w,b
  5794  012262  B4D8               	btfsc	status,2,c
  5795  012264  D00D               	goto	l13572
  5796                           
  5797                           ; BSR set to: 1
  5798                           ;main.c: 398:     V.enter = 0;
  5799  012266  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5800                           
  5801                           ; BSR set to: 1
  5802                           ;main.c: 399:     V.screen = ~V.screen;
  5803  012268  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5804  01226A  D002               	goto	u12980
  5805  01226C  0E01               	movlw	1
  5806  01226E  D001               	goto	u12986
  5807  012270                     u12980:
  5808  012270  0E00               	movlw	0
  5809  012272                     u12986:
  5810  012272  0AFF               	xorlw	255
  5811  012274  6E0C               	movwf	(btemp+11)^0,c
  5812  012276  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5813  012278  180C               	xorwf	(btemp+11)^0,w,c
  5814  01227A  0BFE               	andlw	-2
  5815  01227C  180C               	xorwf	(btemp+11)^0,w,c
  5816  01227E  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5817  012280                     l13572:
  5818                           
  5819                           ; BSR set to: 1
  5820                           ;main.c: 401:    set_vterm(V.screen);
  5821  012280  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5822  012282  D002               	goto	u12990
  5823  012284  0E01               	movlw	1
  5824  012286  D001               	goto	u12996
  5825  012288                     u12990:
  5826  012288  0E00               	movlw	0
  5827  01228A                     u12996:
  5828  01228A  6EE6               	movwf	postinc1,c
  5829  01228C  ECC1  F0E1         	call	_set_vterm	;wreg free
  5830                           
  5831                           ;main.c: 402:    update_lcd(V.screen);
  5832  012290  0101               	movlb	1	; () banked
  5833  012292  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5834  012294  D002               	goto	u13000
  5835  012296  0E01               	movlw	1
  5836  012298  D001               	goto	u13006
  5837  01229A                     u13000:
  5838  01229A  0E00               	movlw	0
  5839  01229C                     u13006:
  5840  01229C  6EE6               	movwf	postinc1,c
  5841  01229E  EC8E  F0CE         	call	_update_lcd	;wreg free
  5842                           
  5843                           ;main.c: 404:    wait_lcd_done();
  5844  0122A2  EC50  F0E1         	call	_wait_lcd_done	;wreg free
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;main.c: 405:    set_dac_a(1.00);
  5848  0122A6  0E00               	movlw	0
  5849  0122A8  6EE6               	movwf	postinc1,c
  5850  0122AA  0E00               	movlw	0
  5851  0122AC  6EE6               	movwf	postinc1,c
  5852  0122AE  0E80               	movlw	128
  5853  0122B0  6EE6               	movwf	postinc1,c
  5854  0122B2  0E3F               	movlw	63
  5855  0122B4  6EE6               	movwf	postinc1,c
  5856  0122B6  ECB4  F0DE         	call	_set_dac_a	;wreg free
  5857                           
  5858                           ;main.c: 406:    set_dac_b(2.00);
  5859  0122BA  0E00               	movlw	0
  5860  0122BC  6EE6               	movwf	postinc1,c
  5861  0122BE  0E00               	movlw	0
  5862  0122C0  6EE6               	movwf	postinc1,c
  5863  0122C2  0E00               	movlw	0
  5864  0122C4  6EE6               	movwf	postinc1,c
  5865  0122C6  0E40               	movlw	64
  5866  0122C8  6EE6               	movwf	postinc1,c
  5867  0122CA  EC9A  F0DE         	call	_set_dac_b	;wreg free
  5868                           
  5869                           ;main.c: 407:    set_dac();
  5870  0122CE  EC8E  F0D5         	call	_set_dac	;wreg free
  5871  0122D2                     l13584:
  5872                           
  5873                           ;main.c: 413:   check_help(V.flipper);
  5874  0122D2  0101               	movlb	1	; () banked
  5875  0122D4  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5876  0122D6  6EE6               	movwf	postinc1,c
  5877  0122D8  EC5C  F0C1         	call	_check_help	;wreg free
  5878                           
  5879                           ;main.c: 415:   if (V.enter) {
  5880  0122DC  0101               	movlb	1	; () banked
  5881  0122DE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5882  0122E0  B4D8               	btfsc	status,2,c
  5883  0122E2  D062               	goto	l1374
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;main.c: 416:    V.enter = 0;
  5887  0122E4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5888                           
  5889                           ;main.c: 417:    V.calib = 0;
  5890  0122E6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;main.c: 418:    inp_index += 3;
  5894                           ;stkvar	_inp_index @ sp[(-17)+11]
  5895  0122E8  0EFA               	movlw	-6
  5896  0122EA  006F FF8C  F001    	movff	plusw1,btemp
  5897  0122F0  0E03               	movlw	3
  5898  0122F2  2601               	addwf	btemp^0,f,c
  5899  0122F4  0EFA               	movlw	-6
  5900  0122F6  0060  F007  FFE3   	movff	btemp,plusw1
  5901                           
  5902                           ;main.c: 419:    if (inp_index > 9)
  5903                           ;stkvar	_inp_index @ sp[(-17)+11]
  5904  0122FC  0EFA               	movlw	-6
  5905  0122FE  006F FF8C  F001    	movff	plusw1,btemp
  5906  012304  0E09               	movlw	9
  5907  012306  6401               	cpfsgt	btemp^0,c
  5908  012308  D03A               	goto	l13612
  5909                           
  5910                           ; BSR set to: 1
  5911                           ;main.c: 420:     inp_index = 0;
  5912                           ;stkvar	_inp_index @ sp[(-17)+11]
  5913  01230A  0EFA               	movlw	-6
  5914  01230C  6AE3               	clrf	plusw1,c
  5915  01230E  D037               	goto	l13612
  5916  012310                     l13594:
  5917                           
  5918                           ; BSR set to: 1
  5919                           ;main.c: 423:     i = C_BATT;
  5920                           ;stkvar	_i @ sp[(-17)+14]
  5921  012310  0EFD               	movlw	-3
  5922  012312  6AE3               	clrf	plusw1,c
  5923                           
  5924                           ; BSR set to: 1
  5925                           ;main.c: 424:     j = C_PV;
  5926                           ;stkvar	_j @ sp[(-17)+13]
  5927  012314  0EFC               	movlw	-4
  5928  012316  6AE3               	clrf	plusw1,c
  5929  012318  2AE3               	incf	plusw1,f,c
  5930                           
  5931                           ; BSR set to: 1
  5932                           ;main.c: 425:     k = V_CC;
  5933                           ;stkvar	_k @ sp[(-17)+12]
  5934  01231A  0EFB               	movlw	-5
  5935  01231C  6AE3               	clrf	plusw1,c
  5936  01231E  82E3               	bsf	plusw1,1,c
  5937                           
  5938                           ;main.c: 426:     break;
  5939  012320  D043               	goto	l1374
  5940  012322                     l13600:
  5941                           
  5942                           ; BSR set to: 1
  5943                           ;main.c: 428:     i = V_BAT;
  5944                           ;stkvar	_i @ sp[(-17)+14]
  5945  012322  0EFD               	movlw	-3
  5946  012324  6AE3               	clrf	plusw1,c
  5947  012326  84E3               	bsf	plusw1,2,c
  5948                           
  5949                           ;main.c: 429:     j = V_PV;
  5950                           ;stkvar	_j @ sp[(-17)+13]
  5951  012328  0EFC               	movlw	-4
  5952  01232A  6AE3               	clrf	plusw1,c
  5953  01232C  80E3               	bsf	plusw1,0,c
  5954  01232E  84E3               	bsf	plusw1,2,c	;indir
  5955                           
  5956                           ;main.c: 430:     k = V_CBUS;
  5957                           ;stkvar	_k @ sp[(-17)+12]
  5958  012330  0EFB               	movlw	-5
  5959  012332  6AE3               	clrf	plusw1,c
  5960  012334  82E3               	bsf	plusw1,1,c
  5961  012336  84E3               	bsf	plusw1,2,c	;indir
  5962                           
  5963                           ;main.c: 431:     break;
  5964  012338  D037               	goto	l1374
  5965  01233A                     l13602:
  5966                           
  5967                           ; BSR set to: 1
  5968                           ;main.c: 433:     i = V_BBAT;
  5969                           ;stkvar	_i @ sp[(-17)+14]
  5970  01233A  0EFD               	movlw	-3
  5971  01233C  6AE3               	clrf	plusw1,c
  5972  01233E  82E3               	bsf	plusw1,1,c
  5973  012340  86E3               	bsf	plusw1,3,c	;indir
  5974                           
  5975                           ; BSR set to: 1
  5976                           ;main.c: 434:     j = V_TEMP;
  5977  012342  0E0B               	movlw	11
  5978  012344  6E0C               	movwf	(btemp+11)^0,c
  5979                           
  5980                           ;stkvar	_j @ sp[(-17)+13]
  5981  012346  0EFC               	movlw	-4
  5982  012348  0060  F033  FFE3   	movff	btemp+11,plusw1
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;main.c: 435:     k = V_INVERTER;
  5986                           ;stkvar	_k @ sp[(-17)+12]
  5987  01234E  0EFB               	movlw	-5
  5988  012350  6AE3               	clrf	plusw1,c
  5989  012352  84E3               	bsf	plusw1,2,c
  5990  012354  86E3               	bsf	plusw1,3,c	;indir
  5991                           
  5992                           ;main.c: 436:     break;
  5993  012356  D028               	goto	l1374
  5994  012358                     l13608:
  5995                           
  5996                           ; BSR set to: 1
  5997                           ;main.c: 438:     i = V_LIGHT_SENSOR;
  5998  012358  0E0D               	movlw	13
  5999  01235A  6E0C               	movwf	(btemp+11)^0,c
  6000                           
  6001                           ;stkvar	_i @ sp[(-17)+14]
  6002  01235C  0EFD               	movlw	-3
  6003  01235E  0060  F033  FFE3   	movff	btemp+11,plusw1
  6004                           
  6005                           ;main.c: 439:     j = V_LIGHT_SENSOR;
  6006  012364  0E0D               	movlw	13
  6007  012366  6E0C               	movwf	(btemp+11)^0,c
  6008                           
  6009                           ;stkvar	_j @ sp[(-17)+13]
  6010  012368  0EFC               	movlw	-4
  6011  01236A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6012                           
  6013                           ;main.c: 440:     k = V_LIGHT_SENSOR;
  6014  012370  0E0D               	movlw	13
  6015  012372  6E0C               	movwf	(btemp+11)^0,c
  6016                           
  6017                           ;stkvar	_k @ sp[(-17)+12]
  6018  012374  0EFB               	movlw	-5
  6019  012376  0060  F033  FFE3   	movff	btemp+11,plusw1
  6020                           
  6021                           ;main.c: 441:     break;
  6022  01237C  D015               	goto	l1374
  6023  01237E                     l13612:
  6024                           
  6025                           ; BSR set to: 1
  6026                           ;stkvar	_inp_index @ sp[(-17)+11]
  6027  01237E  0EFA               	movlw	-6
  6028  012380  50E3               	movf	plusw1,w,c
  6029  012382  6E0B               	movwf	(btemp+10)^0,c
  6030  012384  6A0C               	clrf	(btemp+11)^0,c
  6031                           
  6032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6033                           ; Switch size 1, requested type "simple"
  6034                           ; Number of cases is 1, Range of values is 0 to 0
  6035                           ; switch strategies available:
  6036                           ; Name         Instructions Cycles
  6037                           ; simple_byte            4     3 (average)
  6038                           ;	Chosen strategy is simple_byte
  6039  012386  500C               	movf	(btemp+11)^0,w,c
  6040  012388  0A00               	xorlw	0	; case 0
  6041  01238A  A4D8               	btfss	status,2,c
  6042  01238C  D00D               	goto	l1374
  6043                           
  6044                           ; BSR set to: 1
  6045                           ; Switch size 1, requested type "simple"
  6046                           ; Number of cases is 4, Range of values is 0 to 9
  6047                           ; switch strategies available:
  6048                           ; Name         Instructions Cycles
  6049                           ; simple_byte           13     7 (average)
  6050                           ;	Chosen strategy is simple_byte
  6051  01238E  500B               	movf	(btemp+10)^0,w,c
  6052  012390  0A00               	xorlw	0	; case 0
  6053  012392  B4D8               	btfsc	status,2,c
  6054  012394  D7BD               	goto	l13594
  6055  012396  0A03               	xorlw	3	; case 3
  6056  012398  B4D8               	btfsc	status,2,c
  6057  01239A  D7C3               	goto	l13600
  6058  01239C  0A05               	xorlw	5	; case 6
  6059  01239E  B4D8               	btfsc	status,2,c
  6060  0123A0  D7CC               	goto	l13602
  6061  0123A2  0A0F               	xorlw	15	; case 9
  6062  0123A4  B4D8               	btfsc	status,2,c
  6063  0123A6  D7D8               	goto	l13608
  6064  0123A8                     l1374:
  6065                           
  6066                           ; BSR set to: 1
  6067                           ;main.c: 450:   if (V.set_sequ) {
  6068  0123A8  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6069  0123AA  EF83  F08C         	goto	l13486
  6070                           
  6071                           ; BSR set to: 1
  6072                           ;main.c: 451:    if (TimerDone(TMR_INFO)) {
  6073  0123AE  0E07               	movlw	7
  6074  0123B0  6EE6               	movwf	postinc1,c
  6075  0123B2  ECCB  F0DF         	call	_TimerDone	;wreg free
  6076  0123B6  5001               	movf	btemp^0,w,c
  6077  0123B8  B4D8               	btfsc	status,2,c
  6078  0123BA  D00C               	goto	l13622
  6079                           
  6080                           ;main.c: 452:     V.set_sequ = 0;
  6081  0123BC  0101               	movlb	1	; () banked
  6082  0123BE  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;main.c: 453:     set_vterm(0);
  6086  0123C0  0E00               	movlw	0
  6087  0123C2  6EE6               	movwf	postinc1,c
  6088  0123C4  ECC1  F0E1         	call	_set_vterm	;wreg free
  6089                           
  6090                           ;main.c: 454:     update_lcd(0);
  6091  0123C8  0E00               	movlw	0
  6092  0123CA  6EE6               	movwf	postinc1,c
  6093  0123CC  EC8E  F0CE         	call	_update_lcd	;wreg free
  6094                           
  6095                           ;main.c: 455:    } else {
  6096  0123D0  EF83  F08C         	goto	l13486
  6097  0123D4                     l13622:
  6098                           
  6099                           ;main.c: 456:     set_vterm(2);
  6100  0123D4  0E02               	movlw	2
  6101  0123D6  6EE6               	movwf	postinc1,c
  6102  0123D8  ECC1  F0E1         	call	_set_vterm	;wreg free
  6103                           
  6104                           ;main.c: 457:     update_lcd(2);
  6105  0123DC  0E02               	movlw	2
  6106  0123DE  6EE6               	movwf	postinc1,c
  6107  0123E0  EC8E  F0CE         	call	_update_lcd	;wreg free
  6108  0123E4  EF83  F08C         	goto	l13486
  6109  0123E8                     __end_of_main:
  6110                           	opt callstack 0
  6111                           
  6112 ;; *************** function _static_soc *****************
  6113 ;; Defined at:
  6114 ;;		line 117 in file "mbmc.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1  [STACK] void 
  6121 ;; Registers used:
  6122 ;;		wreg, fsr2l, fsr2h
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:   15
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;; This function uses a reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text1
  6143  01B560                     __ptext1:
  6144                           	opt callstack 0
  6145  01B560                     _static_soc:
  6146                           	opt callstack 15
  6147                           
  6148                           ;mbmc.c: 119:  C.runtime = 120;
  6149                           
  6150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6151                           ;incstack = 0
  6152  01B560  0E78               	movlw	120
  6153  01B562  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6154  01B568  0E00               	movlw	0
  6155  01B56A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6156                           
  6157                           ;mbmc.c: 120:  C.soc = 100;
  6158  01B570  0E64               	movlw	100
  6159  01B572  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6160  01B578  0E00               	movlw	0
  6161  01B57A  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6162                           
  6163                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6164  01B580  EE21  F38B         	lfsr	2,_C+140	;volatile
  6165  01B584  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6166  01B58A  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6167  01B590  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6168  01B596  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6169                           
  6170                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6171  01B59C  EE21  F38F         	lfsr	2,_C+144	;volatile
  6172  01B5A0  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6173  01B5A6  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6174  01B5AC  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6175  01B5B2  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6176                           
  6177                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6178  01B5B8  0012               	return		;funcret
  6179  01B5BA                     __end_of_static_soc:
  6180                           	opt callstack 0
  6181                           
  6182 ;; *************** function _start_switch_handler *****************
  6183 ;; Defined at:
  6184 ;;		line 122 in file "dio.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1  [STACK] void 
  6191 ;; Registers used:
  6192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6193 ;; Tracked objects:
  6194 ;;		On entry : 1/0
  6195 ;;		On exit  : 3F/39
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6202 ;;Total ram usage:        0 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:   16
  6205 ;; This function calls:
  6206 ;;		_INT1_SetInterruptHandler
  6207 ;; This function is called by:
  6208 ;;		_main
  6209 ;; This function uses a reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text2
  6213  01C306                     __ptext2:
  6214                           	opt callstack 0
  6215  01C306                     _start_switch_handler:
  6216                           	opt callstack 14
  6217                           
  6218                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6219                           
  6220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6221                           ;incstack = 0
  6222  01C306  0139               	movlb	57	; () banked
  6223  01C308  9195               	bcf	149,0,b	;volatile
  6224                           
  6225                           ; BSR set to: 57
  6226                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6227  01C30A  0E68               	movlw	low _switch_handler
  6228  01C30C  6EE6               	movwf	postinc1,c
  6229  01C30E  0E97               	movlw	high _switch_handler
  6230  01C310  6EE6               	movwf	postinc1,c
  6231  01C312  0E01               	movlw	low (_switch_handler shr (0+16))
  6232  01C314  6EE6               	movwf	postinc1,c
  6233  01C316  EC57  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
  6234                           
  6235                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6236  01C31A  0E02               	movlw	2
  6237  01C31C  0102               	movlb	2	; () banked
  6238  01C31E  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6239                           
  6240                           ; BSR set to: 2
  6241                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6242  01C320  0139               	movlb	57	; () banked
  6243  01C322  8195               	bsf	149,0,b	;volatile
  6244                           
  6245                           ; BSR set to: 57
  6246                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6247  01C324  0012               	return		;funcret
  6248  01C326                     __end_of_start_switch_handler:
  6249                           	opt callstack 0
  6250                           
  6251 ;; *************** function _srand *****************
  6252 ;; Defined at:
  6253 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  s               2  [STACK] unsigned int 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1  [STACK] void 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 3F/1
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6271 ;;Total ram usage:        0 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:   15
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_main
  6278 ;; This function uses a reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text3
  6282  01BD00                     __ptext3:
  6283                           	opt callstack 0
  6284  01BD00                     _srand:
  6285                           	opt callstack 15
  6286                           
  6287                           ;stkvar	_s @ sp[(0)+-2]
  6288                           
  6289                           ; BSR set to: 57
  6290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6291                           ;incstack = 0
  6292  01BD00  0EFE               	movlw	-2
  6293  01BD02  50E3               	movf	plusw1,w,c
  6294  01BD04  0FFF               	addlw	255
  6295  01BD06  6E0B               	movwf	(btemp+10)^0,c
  6296  01BD08  0EFF               	movlw	-1
  6297  01BD0A  006F FF8C  F00C    	movff	plusw1,btemp+11
  6298  01BD10  0EFF               	movlw	255
  6299  01BD12  220C               	addwfc	(btemp+11)^0,f,c
  6300  01BD14  0060  F02C  F1F3   	movff	btemp+10,_seed
  6301  01BD1A  0060  F030  F1F4   	movff	btemp+11,_seed+1
  6302  01BD20  0101               	movlb	1	; () banked
  6303  01BD22  6BF5               	clrf	(_seed+2)& (0+255),b
  6304  01BD24  6BF6               	clrf	(_seed+3)& (0+255),b
  6305  01BD26  6BF7               	clrf	(_seed+4)& (0+255),b
  6306  01BD28  6BF8               	clrf	(_seed+5)& (0+255),b
  6307  01BD2A  6BF9               	clrf	(_seed+6)& (0+255),b
  6308  01BD2C  6BFA               	clrf	(_seed+7)& (0+255),b
  6309                           
  6310                           ; BSR set to: 1
  6311                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6312  01BD2E  52E5               	movf	postdec1,f,c
  6313  01BD30  52E5               	movf	postdec1,f,c
  6314  01BD32  0012               	return		;funcret
  6315  01BD34                     __end_of_srand:
  6316                           	opt callstack 0
  6317                           
  6318 ;; *************** function _spinners *****************
  6319 ;; Defined at:
  6320 ;;		line 146 in file "mbmc.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  shape           1  [STACK] unsigned char 
  6323 ;;  reset           1  [STACK] const unsigned char 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  c               1  [STACK] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1  [STACK] unsigned char 
  6328 ;; Registers used:
  6329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:   16
  6342 ;; This function calls:
  6343 ;;		_strlen
  6344 ;; This function is called by:
  6345 ;;		_main
  6346 ;; This function uses a reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text4
  6350  019F36                     __ptext4:
  6351                           	opt callstack 0
  6352  019F36                     _spinners:
  6353                           	opt callstack 0
  6354                           
  6355                           ; BSR set to: 1
  6356                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6357  019F36  52E6               	movf	postinc1,f,c
  6358                           
  6359                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6360                           ;stkvar	_shape @ sp[(-1)+-1]
  6361                           
  6362                           ;incstack = 0
  6363  019F38  0EFE               	movlw	-2
  6364  019F3A  006F FF8C  F001    	movff	plusw1,btemp
  6365  019F40  0E05               	movlw	5
  6366  019F42  6401               	cpfsgt	btemp^0,c
  6367  019F44  D002               	goto	l1955
  6368                           
  6369                           ;mbmc.c: 152:   shape = 0;
  6370                           ;stkvar	_shape @ sp[(-1)+-1]
  6371  019F46  0EFE               	movlw	-2
  6372  019F48  6AE3               	clrf	plusw1,c
  6373  019F4A                     l1955:
  6374                           
  6375                           ;mbmc.c: 153:  if (reset)
  6376                           ;stkvar	_reset @ sp[(-1)+-2]
  6377  019F4A  0EFD               	movlw	-3
  6378  019F4C  50E3               	movf	plusw1,w,c
  6379  019F4E  B4D8               	btfsc	status,2,c
  6380  019F50  D00C               	goto	l11096
  6381                           
  6382                           ;mbmc.c: 154:   s[shape] = 0;
  6383                           ;stkvar	_shape @ sp[(-1)+-1]
  6384  019F52  0EFE               	movlw	-2
  6385  019F54  50E3               	movf	plusw1,w,c
  6386  019F56  6E0B               	movwf	(btemp+10)^0,c
  6387  019F58  6A0C               	clrf	(btemp+11)^0,c
  6388  019F5A  0EE1               	movlw	low spinners@s
  6389  019F5C  240B               	addwf	(btemp+10)^0,w,c
  6390  019F5E  6ED9               	movwf	fsr2l,c
  6391  019F60  0E01               	movlw	high spinners@s
  6392  019F62  200C               	addwfc	(btemp+11)^0,w,c
  6393  019F64  6EDA               	movwf	fsr2h,c
  6394  019F66  0E00               	movlw	0
  6395  019F68  6EDF               	movwf	indf2,c
  6396  019F6A                     l11096:
  6397                           
  6398                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6399                           ;stkvar	_shape @ sp[(-1)+-1]
  6400  019F6A  0EFE               	movlw	-2
  6401  019F6C  50E3               	movf	plusw1,w,c
  6402  019F6E  0D14               	mullw	20
  6403  019F70  0E45               	movlw	low _spin
  6404  019F72  6E0B               	movwf	(btemp+10)^0,c
  6405  019F74  0EFB               	movlw	high _spin
  6406  019F76  6E0C               	movwf	(btemp+11)^0,c
  6407  019F78  50F3               	movf	243,w,c
  6408  019F7A  260B               	addwf	(btemp+10)^0,f,c
  6409  019F7C  50F4               	movf	244,w,c
  6410  019F7E  220C               	addwfc	(btemp+11)^0,f,c
  6411                           
  6412                           ;stkvar	_shape @ sp[(-1)+-1]
  6413  019F80  0EFE               	movlw	-2
  6414  019F82  50E3               	movf	plusw1,w,c
  6415  019F84  6E09               	movwf	(btemp+8)^0,c
  6416  019F86  6A0A               	clrf	(btemp+9)^0,c
  6417  019F88  0EE1               	movlw	low spinners@s
  6418  019F8A  2409               	addwf	(btemp+8)^0,w,c
  6419  019F8C  6ED9               	movwf	fsr2l,c
  6420  019F8E  0E01               	movlw	high spinners@s
  6421  019F90  200A               	addwfc	(btemp+9)^0,w,c
  6422  019F92  6EDA               	movwf	fsr2h,c
  6423  019F94  50DF               	movf	indf2,w,c
  6424  019F96  260B               	addwf	(btemp+10)^0,f,c
  6425  019F98  0E00               	movlw	0
  6426  019F9A  220C               	addwfc	(btemp+11)^0,f,c
  6427  019F9C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6428  019FA2  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6429  019FA8                     	if	0	;tblptru may be non-zero
  6430  019FA8                     	endif
  6431  019FA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6432  019FA8  0E00               	movlw	low (__mediumconst shr (0+16))
  6433  019FAA  6EF8               	movwf	tblptru,c
  6434  019FAC                     	endif
  6435                           
  6436                           ;stkvar	_c @ sp[(-1)+0]
  6437  019FAC  0008               	tblrd		*
  6438  019FAE  0EFF               	movlw	-1
  6439  019FB0  006F FFD7 FFE3     	movff	tablat,plusw1
  6440                           
  6441                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6442                           ;stkvar	_shape @ sp[(-1)+-1]
  6443  019FB6  0EFE               	movlw	-2
  6444  019FB8  50E3               	movf	plusw1,w,c
  6445  019FBA  0D14               	mullw	20
  6446  019FBC  0E45               	movlw	low _spin
  6447  019FBE  6E0B               	movwf	(btemp+10)^0,c
  6448  019FC0  0EFB               	movlw	high _spin
  6449  019FC2  6E0C               	movwf	(btemp+11)^0,c
  6450  019FC4  50F3               	movf	243,w,c
  6451  019FC6  260B               	addwf	(btemp+10)^0,f,c
  6452  019FC8  50F4               	movf	244,w,c
  6453  019FCA  220C               	addwfc	(btemp+11)^0,f,c
  6454  019FCC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6455  019FD2  0060  F033  FFE6   	movff	btemp+11,postinc1
  6456  019FD8  EC34  F0D6         	call	_strlen	;wreg free
  6457                           
  6458                           ;stkvar	_shape @ sp[(-1)+-1]
  6459  019FDC  0EFE               	movlw	-2
  6460  019FDE  50E3               	movf	plusw1,w,c
  6461  019FE0  6E0B               	movwf	(btemp+10)^0,c
  6462  019FE2  6A0C               	clrf	(btemp+11)^0,c
  6463  019FE4  0EE1               	movlw	low spinners@s
  6464  019FE6  240B               	addwf	(btemp+10)^0,w,c
  6465  019FE8  6ED9               	movwf	fsr2l,c
  6466  019FEA  0E01               	movlw	high spinners@s
  6467  019FEC  200C               	addwfc	(btemp+11)^0,w,c
  6468  019FEE  6EDA               	movwf	fsr2h,c
  6469  019FF0  2ADF               	incf	indf2,f,c
  6470  019FF2  50DF               	movf	indf2,w,c
  6471  019FF4  6E0B               	movwf	(btemp+10)^0,c
  6472  019FF6  6A0C               	clrf	(btemp+11)^0,c
  6473  019FF8  5001               	movf	btemp^0,w,c
  6474  019FFA  5C0B               	subwf	(btemp+10)^0,w,c
  6475  019FFC  5002               	movf	(btemp+1)^0,w,c
  6476  019FFE  580C               	subwfb	(btemp+11)^0,w,c
  6477  01A000  A0D8               	btfss	status,0,c
  6478  01A002  D00C               	goto	l11102
  6479                           
  6480                           ;mbmc.c: 157:   s[shape] = 0;
  6481                           ;stkvar	_shape @ sp[(-1)+-1]
  6482  01A004  0EFE               	movlw	-2
  6483  01A006  50E3               	movf	plusw1,w,c
  6484  01A008  6E0B               	movwf	(btemp+10)^0,c
  6485  01A00A  6A0C               	clrf	(btemp+11)^0,c
  6486  01A00C  0EE1               	movlw	low spinners@s
  6487  01A00E  240B               	addwf	(btemp+10)^0,w,c
  6488  01A010  6ED9               	movwf	fsr2l,c
  6489  01A012  0E01               	movlw	high spinners@s
  6490  01A014  200C               	addwfc	(btemp+11)^0,w,c
  6491  01A016  6EDA               	movwf	fsr2h,c
  6492  01A018  0E00               	movlw	0
  6493  01A01A  6EDF               	movwf	indf2,c
  6494  01A01C                     l11102:
  6495                           
  6496                           ;mbmc.c: 158:  return c;
  6497                           ;stkvar	_c @ sp[(-1)+0]
  6498  01A01C  0EFF               	movlw	-1
  6499  01A01E  006F FF8C  F001    	movff	plusw1,btemp
  6500                           
  6501                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6502  01A024  52E5               	movf	postdec1,f,c
  6503  01A026  52E5               	movf	postdec1,f,c
  6504  01A028  52E5               	movf	postdec1,f,c
  6505  01A02A  0012               	return		;funcret
  6506  01A02C                     __end_of_spinners:
  6507                           	opt callstack 0
  6508                           
  6509 ;; *************** function _set_dac_b *****************
  6510 ;; Defined at:
  6511 ;;		line 282 in file "daq.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  voltage         4  [STACK] float 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2  [STACK] unsigned short 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6529 ;;Total ram usage:        0 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:   17
  6532 ;; This function calls:
  6533 ;;		_convert_dac_raw
  6534 ;; This function is called by:
  6535 ;;		_main
  6536 ;; This function uses a reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text5
  6540  01BD34                     __ptext5:
  6541                           	opt callstack 0
  6542  01BD34                     _set_dac_b:
  6543                           	opt callstack 13
  6544                           
  6545                           ;daq.c: 282: uint16_t set_dac_b(float voltage);daq.c: 283: {;daq.c: 284:  R.raw_dac[1] =
      +                           convert_dac_raw(voltage);
  6546                           ;stkvar	_voltage @ sp[(0)+-4]
  6547                           
  6548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6549                           ;incstack = 0
  6550  01BD34  0EFC               	movlw	-4
  6551  01BD36  006F FF8F FFE6     	movff	plusw1,postinc1
  6552  01BD3C  006F FF8F FFE6     	movff	plusw1,postinc1
  6553  01BD42  006F FF8F FFE6     	movff	plusw1,postinc1
  6554  01BD48  006F FF8F FFE6     	movff	plusw1,postinc1
  6555  01BD4E  EC16  F0D0         	call	_convert_dac_raw	;wreg free
  6556  01BD52  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6557  01BD58  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6558                           
  6559                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6560                           
  6561                           ;daq.c: 285:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6562  01BD5E  52E5               	movf	postdec1,f,c
  6563  01BD60  52E5               	movf	postdec1,f,c
  6564  01BD62  52E5               	movf	postdec1,f,c
  6565  01BD64  52E5               	movf	postdec1,f,c
  6566  01BD66  0012               	return		;funcret
  6567  01BD68                     __end_of_set_dac_b:
  6568                           	opt callstack 0
  6569                           
  6570 ;; *************** function _set_dac_a *****************
  6571 ;; Defined at:
  6572 ;;		line 276 in file "daq.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  voltage         4  [STACK] float 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  2  [STACK] unsigned short 
  6579 ;; Registers used:
  6580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6581 ;; Tracked objects:
  6582 ;;		On entry : 3F/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6590 ;;Total ram usage:        0 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:   17
  6593 ;; This function calls:
  6594 ;;		_convert_dac_raw
  6595 ;; This function is called by:
  6596 ;;		_main
  6597 ;; This function uses a reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text6
  6601  01BD68                     __ptext6:
  6602                           	opt callstack 0
  6603  01BD68                     _set_dac_a:
  6604                           	opt callstack 13
  6605                           
  6606                           ;daq.c: 276: uint16_t set_dac_a(float voltage);daq.c: 277: {;daq.c: 278:  R.raw_dac[0] =
      +                           convert_dac_raw(voltage);
  6607                           ;stkvar	_voltage @ sp[(0)+-4]
  6608                           
  6609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6610                           ;incstack = 0
  6611  01BD68  0EFC               	movlw	-4
  6612  01BD6A  006F FF8F FFE6     	movff	plusw1,postinc1
  6613  01BD70  006F FF8F FFE6     	movff	plusw1,postinc1
  6614  01BD76  006F FF8F FFE6     	movff	plusw1,postinc1
  6615  01BD7C  006F FF8F FFE6     	movff	plusw1,postinc1
  6616  01BD82  EC16  F0D0         	call	_convert_dac_raw	;wreg free
  6617  01BD86  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6618  01BD8C  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6619                           
  6620                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6621                           
  6622                           ;daq.c: 279:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6623  01BD92  52E5               	movf	postdec1,f,c
  6624  01BD94  52E5               	movf	postdec1,f,c
  6625  01BD96  52E5               	movf	postdec1,f,c
  6626  01BD98  52E5               	movf	postdec1,f,c
  6627  01BD9A  0012               	return		;funcret
  6628  01BD9C                     __end_of_set_dac_a:
  6629                           	opt callstack 0
  6630                           
  6631 ;; *************** function _convert_dac_raw *****************
  6632 ;; Defined at:
  6633 ;;		line 261 in file "daq.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  voltage         4  [STACK] float 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  2  [STACK] unsigned short 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:   16
  6654 ;; This function calls:
  6655 ;;		___fldiv
  6656 ;;		___flge
  6657 ;;		___fltol
  6658 ;; This function is called by:
  6659 ;;		_set_dac_a
  6660 ;;		_set_dac_b
  6661 ;; This function uses a reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text7
  6665  01A02C                     __ptext7:
  6666                           	opt callstack 0
  6667  01A02C                     _convert_dac_raw:
  6668                           	opt callstack 13
  6669                           
  6670                           ;daq.c: 261: static uint16_t convert_dac_raw(float voltage);daq.c: 262: {;daq.c: 266:  i
      +                          f (voltage < 0.0)
  6671                           ;stkvar	_voltage @ sp[(0)+-4]
  6672                           
  6673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6674                           ;incstack = 0
  6675  01A02C  0EFF               	movlw	-1
  6676  01A02E  AEE3               	btfss	plusw1,7,c
  6677  01A030  D018               	goto	l10708
  6678                           
  6679                           ;daq.c: 267:   voltage = 0.0;
  6680  01A032  0E00               	movlw	0
  6681  01A034  6E09               	movwf	(btemp+8)^0,c
  6682  01A036  0E00               	movlw	0
  6683  01A038  6E0A               	movwf	(btemp+9)^0,c
  6684  01A03A  0E00               	movlw	0
  6685  01A03C  6E0B               	movwf	(btemp+10)^0,c
  6686  01A03E  0E00               	movlw	0
  6687  01A040  6E0C               	movwf	(btemp+11)^0,c
  6688                           
  6689                           ;stkvar	_voltage @ sp[(0)+-4]
  6690  01A042  0EFC               	movlw	-4
  6691  01A044  0060  F027  FFE3   	movff	btemp+8,plusw1
  6692  01A04A  0EFD               	movlw	-3
  6693  01A04C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6694  01A052  0EFE               	movlw	-2
  6695  01A054  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6696  01A05A  0EFF               	movlw	-1
  6697  01A05C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6698  01A062                     l10708:
  6699                           
  6700                           ;daq.c: 268:  if (voltage > 10.0)
  6701                           ;stkvar	_voltage @ sp[(0)+-4]
  6702  01A062  0EFC               	movlw	-4
  6703  01A064  006F FF8F FFE6     	movff	plusw1,postinc1
  6704  01A06A  006F FF8F FFE6     	movff	plusw1,postinc1
  6705  01A070  006F FF8F FFE6     	movff	plusw1,postinc1
  6706  01A076  006F FF8F FFE6     	movff	plusw1,postinc1
  6707  01A07C  0E00               	movlw	0
  6708  01A07E  6EE6               	movwf	postinc1,c
  6709  01A080  0E00               	movlw	0
  6710  01A082  6EE6               	movwf	postinc1,c
  6711  01A084  0E20               	movlw	32
  6712  01A086  6EE6               	movwf	postinc1,c
  6713  01A088  0E41               	movlw	65
  6714  01A08A  6EE6               	movwf	postinc1,c
  6715  01A08C  EC0A  F0C9         	call	___flge	;wreg free
  6716  01A090  B001               	btfsc	btemp& (0+255),0,c
  6717  01A092  D018               	goto	l10712
  6718                           
  6719                           ;daq.c: 269:   voltage = 10.0;
  6720  01A094  0E00               	movlw	0
  6721  01A096  6E09               	movwf	(btemp+8)^0,c
  6722  01A098  0E00               	movlw	0
  6723  01A09A  6E0A               	movwf	(btemp+9)^0,c
  6724  01A09C  0E20               	movlw	32
  6725  01A09E  6E0B               	movwf	(btemp+10)^0,c
  6726  01A0A0  0E41               	movlw	65
  6727  01A0A2  6E0C               	movwf	(btemp+11)^0,c
  6728                           
  6729                           ;stkvar	_voltage @ sp[(0)+-4]
  6730  01A0A4  0EFC               	movlw	-4
  6731  01A0A6  0060  F027  FFE3   	movff	btemp+8,plusw1
  6732  01A0AC  0EFD               	movlw	-3
  6733  01A0AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6734  01A0B4  0EFE               	movlw	-2
  6735  01A0B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6736  01A0BC  0EFF               	movlw	-1
  6737  01A0BE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6738  01A0C4                     l10712:
  6739                           
  6740                           ;daq.c: 273:  return(uint16_t) (voltage / 0.002442);
  6741  01A0C4  0EF6               	movlw	246
  6742  01A0C6  6EE6               	movwf	postinc1,c
  6743  01A0C8  0E09               	movlw	9
  6744  01A0CA  6EE6               	movwf	postinc1,c
  6745  01A0CC  0E20               	movlw	32
  6746  01A0CE  6EE6               	movwf	postinc1,c
  6747  01A0D0  0E3B               	movlw	59
  6748  01A0D2  6EE6               	movwf	postinc1,c
  6749                           
  6750                           ;stkvar	_voltage @ sp[(-4)+-4]
  6751  01A0D4  0EF8               	movlw	-8
  6752  01A0D6  006F FF8F FFE6     	movff	plusw1,postinc1
  6753  01A0DC  006F FF8F FFE6     	movff	plusw1,postinc1
  6754  01A0E2  006F FF8F FFE6     	movff	plusw1,postinc1
  6755  01A0E8  006F FF8F FFE6     	movff	plusw1,postinc1
  6756  01A0EE  ECD8  F0A6         	call	___fldiv	;wreg free
  6757  01A0F2  0060  F007  FFE6   	movff	btemp,postinc1
  6758  01A0F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6759  01A0FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6760  01A104  0060  F013  FFE6   	movff	btemp+3,postinc1
  6761  01A10A  EC51  F0C8         	call	___fltol	;wreg free
  6762                           
  6763                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6764  01A10E  52E5               	movf	postdec1,f,c
  6765  01A110  52E5               	movf	postdec1,f,c
  6766  01A112  52E5               	movf	postdec1,f,c
  6767  01A114  52E5               	movf	postdec1,f,c
  6768  01A116  0012               	return		;funcret
  6769  01A118                     __end_of_convert_dac_raw:
  6770                           	opt callstack 0
  6771                           
  6772 ;; *************** function _set_dac *****************
  6773 ;; Defined at:
  6774 ;;		line 239 in file "daq.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1  [STACK] void 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+11
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6792 ;;Total ram usage:        0 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:   16
  6795 ;; This function calls:
  6796 ;;		_SPI1_Exchange8bit
  6797 ;;		_dac_spi_control
  6798 ;; This function is called by:
  6799 ;;		_main
  6800 ;; This function uses a reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text8
  6804  01AB1C                     __ptext8:
  6805                           	opt callstack 0
  6806  01AB1C                     _set_dac:
  6807                           	opt callstack 14
  6808                           
  6809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6810                           ;incstack = 0
  6811                           ;daq.c: 241:  do { LATCbits.LATC2 = 1; } while(0);
  6812  01AB1C  84BC               	bsf	188,2,c	;volatile
  6813                           
  6814                           ;daq.c: 242:  do { LATCbits.LATC0 = 1; } while(0);
  6815  01AB1E  80BC               	bsf	188,0,c	;volatile
  6816                           
  6817                           ;daq.c: 243:  dac_spi_control(1);
  6818  01AB20  0E01               	movlw	1
  6819  01AB22  6EE6               	movwf	postinc1,c
  6820  01AB24  ECA6  F0D8         	call	_dac_spi_control	;wreg free
  6821                           
  6822                           ;daq.c: 244:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6823  01AB28  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6824                           
  6825                           ;daq.c: 245:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] > 8) &0xf;
  6826  01AB2C  0100               	movlb	0	; () banked
  6827  01AB2E  51D0               	movf	(_R+33)& (0+255),w,b	;volatile
  6828  01AB30  E104               	bnz	u10401
  6829  01AB32  0E09               	movlw	9
  6830  01AB34  5DCF               	subwf	(_R+32)& (0+255),w,b	;volatile
  6831  01AB36  A0D8               	btfss	status,0,c
  6832  01AB38  D003               	goto	u10400
  6833  01AB3A                     u10401:
  6834  01AB3A  6A0C               	clrf	(btemp+11)^0,c
  6835  01AB3C  2A0C               	incf	(btemp+11)^0,f,c
  6836  01AB3E  D001               	goto	u10418
  6837  01AB40                     u10400:
  6838  01AB40  6A0C               	clrf	(btemp+11)^0,c
  6839  01AB42                     u10418:
  6840  01AB42  0E0F               	movlw	15
  6841  01AB44  160C               	andwf	(btemp+11)^0,f,c
  6842  01AB46  0100               	movlb	0	; () banked
  6843  01AB48  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6844  01AB4A  180C               	xorwf	(btemp+11)^0,w,c
  6845  01AB4C  0BF0               	andlw	-16
  6846  01AB4E  180C               	xorwf	(btemp+11)^0,w,c
  6847  01AB50  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;daq.c: 246:  R.max5322_cmd.map.cont = 0b0100;
  6851  01AB52  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6852  01AB54  0B0F               	andlw	-241
  6853  01AB56  0940               	iorlw	64
  6854  01AB58  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6855                           
  6856                           ; BSR set to: 0
  6857  01AB5A  90BF               	bcf	191,0,c	;volatile
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;daq.c: 248:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6861  01AB5C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6862  01AB5E  6EE6               	movwf	postinc1,c
  6863  01AB60  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6864                           
  6865                           ; BSR set to: 57
  6866                           ;daq.c: 249:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6867  01AB64  0100               	movlb	0	; () banked
  6868  01AB66  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6869  01AB68  6EE6               	movwf	postinc1,c
  6870  01AB6A  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6871                           
  6872                           ; BSR set to: 57
  6873  01AB6E  80BF               	bsf	191,0,c	;volatile
  6874                           
  6875                           ; BSR set to: 57
  6876                           ;daq.c: 251:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6877  01AB70  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6878                           
  6879                           ; BSR set to: 57
  6880                           ;daq.c: 252:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] > 8) &0xf;
  6881  01AB74  0100               	movlb	0	; () banked
  6882  01AB76  51D2               	movf	(_R+35)& (0+255),w,b	;volatile
  6883  01AB78  E104               	bnz	u10421
  6884  01AB7A  0E09               	movlw	9
  6885  01AB7C  5DD1               	subwf	(_R+34)& (0+255),w,b	;volatile
  6886  01AB7E  A0D8               	btfss	status,0,c
  6887  01AB80  D003               	goto	u10420
  6888  01AB82                     u10421:
  6889  01AB82  6A0C               	clrf	(btemp+11)^0,c
  6890  01AB84  2A0C               	incf	(btemp+11)^0,f,c
  6891  01AB86  D001               	goto	u10438
  6892  01AB88                     u10420:
  6893  01AB88  6A0C               	clrf	(btemp+11)^0,c
  6894  01AB8A                     u10438:
  6895  01AB8A  0E0F               	movlw	15
  6896  01AB8C  160C               	andwf	(btemp+11)^0,f,c
  6897  01AB8E  0100               	movlb	0	; () banked
  6898  01AB90  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6899  01AB92  180C               	xorwf	(btemp+11)^0,w,c
  6900  01AB94  0BF0               	andlw	-16
  6901  01AB96  180C               	xorwf	(btemp+11)^0,w,c
  6902  01AB98  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;daq.c: 253:  R.max5322_cmd.map.cont = 0b0101;
  6906  01AB9A  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6907  01AB9C  0B0F               	andlw	-241
  6908  01AB9E  0950               	iorlw	80
  6909  01ABA0  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6910                           
  6911                           ; BSR set to: 0
  6912  01ABA2  90BF               	bcf	191,0,c	;volatile
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6916  01ABA4  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6917  01ABA6  6EE6               	movwf	postinc1,c
  6918  01ABA8  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6919                           
  6920                           ; BSR set to: 57
  6921                           ;daq.c: 256:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6922  01ABAC  0100               	movlb	0	; () banked
  6923  01ABAE  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6924  01ABB0  6EE6               	movwf	postinc1,c
  6925  01ABB2  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6926                           
  6927                           ; BSR set to: 57
  6928  01ABB6  80BF               	bsf	191,0,c	;volatile
  6929                           
  6930                           ; BSR set to: 57
  6931                           ;daq.c: 258:  dac_spi_control(0);
  6932  01ABB8  0E00               	movlw	0
  6933  01ABBA  6EE6               	movwf	postinc1,c
  6934  01ABBC  ECA6  F0D8         	call	_dac_spi_control	;wreg free
  6935                           
  6936                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6937  01ABC0  0012               	return		;funcret
  6938  01ABC2                     __end_of_set_dac:
  6939                           	opt callstack 0
  6940                           
  6941 ;; *************** function _dac_spi_control *****************
  6942 ;; Defined at:
  6943 ;;		line 194 in file "daq.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  set             1  [STACK] _Bool 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1  [STACK] void 
  6950 ;; Registers used:
  6951 ;;		wreg, fsr1l, fsr1h, status,2
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:   15
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_set_dac
  6968 ;; This function uses a reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text9
  6972  01B14C                     __ptext9:
  6973                           	opt callstack 0
  6974  01B14C                     _dac_spi_control:
  6975                           	opt callstack 14
  6976                           
  6977                           ;daq.c: 194: void dac_spi_control(_Bool set);daq.c: 195: {;daq.c: 196:  static _Bool ini
      +                          t = 0;;daq.c: 197:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 199:  if (set) {
  6978                           ;stkvar	_set @ sp[(0)+-1]
  6979                           
  6980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6981                           ;incstack = 0
  6982  01B14C  0EFF               	movlw	-1
  6983  01B14E  50E3               	movf	plusw1,w,c
  6984  01B150  B4D8               	btfsc	status,2,c
  6985  01B152  D01F               	goto	l10700
  6986                           
  6987                           ;daq.c: 200:   SPI1CON0bits.EN = 0;
  6988  01B154  013D               	movlb	61	; () banked
  6989  01B156  9F14               	bcf	20,7,b	;volatile
  6990                           
  6991                           ; BSR set to: 61
  6992                           ;daq.c: 201:   if (!init) {
  6993  01B158  5043               	movf	dac_spi_control@init^0,w,c
  6994  01B15A  A4D8               	btfss	status,2,c
  6995  01B15C  D011               	goto	l10694
  6996                           
  6997                           ; BSR set to: 61
  6998                           ;daq.c: 202:    init = 1;
  6999  01B15E  0E01               	movlw	1
  7000  01B160  6E43               	movwf	dac_spi_control@init^0,c
  7001                           
  7002                           ; BSR set to: 61
  7003                           ;daq.c: 203:    S0 = SPI1CON0;
  7004  01B162  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7005                           
  7006                           ; BSR set to: 61
  7007                           ;daq.c: 204:    S1 = SPI1CON1;
  7008  01B168  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7009                           
  7010                           ; BSR set to: 61
  7011                           ;daq.c: 205:    S2 = SPI1CON2;
  7012  01B16E  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7013                           
  7014                           ; BSR set to: 61
  7015                           ;daq.c: 206:    SC = SPI1CLK;
  7016  01B174  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7017                           
  7018                           ; BSR set to: 61
  7019                           ;daq.c: 207:    SB = SPI1BAUD;
  7020  01B17A  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7021  01B180                     l10694:
  7022                           
  7023                           ; BSR set to: 61
  7024                           ;daq.c: 213:   SPI1CON1 = 0x00;
  7025  01B180  6B15               	clrf	21,b	;volatile
  7026                           
  7027                           ;daq.c: 215:   SPI1CON2 = 0x03;
  7028  01B182  0E03               	movlw	3
  7029  01B184  6F16               	movwf	22,b	;volatile
  7030                           
  7031                           ;daq.c: 217:   SPI1BAUD = 0x0f;
  7032  01B186  0E0F               	movlw	15
  7033  01B188  6F19               	movwf	25,b	;volatile
  7034                           
  7035                           ; BSR set to: 61
  7036                           ;daq.c: 219:   SPI1CLK = 0x00;
  7037  01B18A  6B1C               	clrf	28,b	;volatile
  7038                           
  7039                           ;daq.c: 221:   SPI1CON0 = 0x83;
  7040  01B18C  0E83               	movlw	131
  7041  01B18E  6F14               	movwf	20,b	;volatile
  7042  01B190  D014               	goto	L3
  7043  01B192                     l10700:
  7044                           
  7045                           ;daq.c: 224:   if (init) {
  7046  01B192  5043               	movf	dac_spi_control@init^0,w,c
  7047  01B194  B4D8               	btfsc	status,2,c
  7048  01B196  D012               	goto	l1852
  7049                           
  7050                           ;daq.c: 228:    SPI1CON0bits.EN = 0;
  7051  01B198  013D               	movlb	61	; () banked
  7052  01B19A  9F14               	bcf	20,7,b	;volatile
  7053                           
  7054                           ;daq.c: 229:    SPI1CON1 = S1;
  7055  01B19C  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7056                           
  7057                           ;daq.c: 230:    SPI1CON2 = S2;
  7058  01B1A2  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7059                           
  7060                           ;daq.c: 231:    SPI1CLK = SC;
  7061  01B1A8  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7062                           
  7063                           ;daq.c: 232:    SPI1BAUD = SB;
  7064  01B1AE  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7065                           
  7066                           ;daq.c: 233:    SPI1CON0 = S0;
  7067  01B1B4  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7068  01B1BA                     L3:
  7069                           
  7070                           ;daq.c: 234:    SPI1CON0bits.EN = 1;
  7071  01B1BA  8F14               	bsf	20,7,b	;volatile
  7072  01B1BC                     l1852:
  7073                           
  7074                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7075  01B1BC  52E5               	movf	postdec1,f,c
  7076  01B1BE  0012               	return		;funcret
  7077  01B1C0                     __end_of_dac_spi_control:
  7078                           	opt callstack 0
  7079                           
  7080 ;; *************** function _init_port_dma *****************
  7081 ;; Defined at:
  7082 ;;		line 104 in file "eadog.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;		None
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1  [STACK] void 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/1
  7093 ;;		On exit  : 3F/3B
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7100 ;;Total ram usage:        0 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:   15
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text10
  7111  01BDD0                     __ptext10:
  7112                           	opt callstack 0
  7113  01BDD0                     _init_port_dma:
  7114                           	opt callstack 15
  7115                           
  7116                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7117                           
  7118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7119                           ;incstack = 0
  7120  01BDD0  0E3F               	movlw	-193
  7121  01BDD2  013B               	movlb	59	; () banked
  7122  01BDD4  17DD               	andwf	221,f,b	;volatile
  7123                           
  7124                           ; BSR set to: 59
  7125                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7126  01BDD6  9BDD               	bcf	221,5,b	;volatile
  7127                           
  7128                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7129  01BDD8  51DD               	movf	221,w,b	;volatile
  7130  01BDDA  0BF9               	andlw	-7
  7131  01BDDC  0902               	iorlw	2
  7132  01BDDE  6FDD               	movwf	221,b	;volatile
  7133                           
  7134                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7135  01BDE0  0EE7               	movlw	-25
  7136  01BDE2  17DD               	andwf	221,f,b	;volatile
  7137                           
  7138                           ; BSR set to: 59
  7139                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7140  01BDE4  81DD               	bsf	221,0,b	;volatile
  7141                           
  7142                           ; BSR set to: 59
  7143                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7144  01BDE6  9DDC               	bcf	220,6,b	;volatile
  7145                           
  7146                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7147  01BDE8  0E3D               	movlw	61
  7148  01BDEA  6FD1               	movwf	209,b	;volatile
  7149  01BDEC  0EEA               	movlw	234
  7150  01BDEE  6FD0               	movwf	208,b	;volatile
  7151                           
  7152                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7153  01BDF0  0EFF               	movlw	low _port_data
  7154  01BDF2  6FD9               	movwf	217,b	;volatile
  7155  01BDF4  0E04               	movlw	high _port_data
  7156  01BDF6  6FDA               	movwf	218,b	;volatile
  7157  01BDF8  0E00               	movlw	low (_port_data shr (0+16))
  7158  01BDFA  6FDB               	movwf	219,b	;volatile
  7159                           
  7160                           ; BSR set to: 59
  7161                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7162  01BDFC  9BDC               	bcf	220,5,b	;volatile
  7163                           
  7164                           ; BSR set to: 59
  7165                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7166  01BDFE  0012               	return		;funcret
  7167  01BE00                     __end_of_init_port_dma:
  7168                           	opt callstack 0
  7169                           
  7170 ;; *************** function _init_display *****************
  7171 ;; Defined at:
  7172 ;;		line 38 in file "eadog.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1  [STACK] void 
  7179 ;; Registers used:
  7180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7181 ;; Tracked objects:
  7182 ;;		On entry : 3F/3B
  7183 ;;		On exit  : 3F/3D
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7190 ;;Total ram usage:        0 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:   17
  7193 ;; This function calls:
  7194 ;;		_ringBufS_init
  7195 ;;		_send_lcd_cmd
  7196 ;;		_send_lcd_cmd_long
  7197 ;;		_send_lcd_data
  7198 ;;		_wdtdelay
  7199 ;; This function is called by:
  7200 ;;		_main
  7201 ;; This function uses a reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text11
  7205  01A118                     __ptext11:
  7206                           	opt callstack 0
  7207  01A118                     _init_display:
  7208                           	opt callstack 13
  7209                           
  7210                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7211                           
  7212                           ; BSR set to: 59
  7213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7214                           ;incstack = 0
  7215  01A118  0E83               	movlw	low _ring_buf1
  7216  01A11A  0101               	movlb	1	; () banked
  7217  01A11C  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7218  01A11E  0E03               	movlw	high _ring_buf1
  7219  01A120  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7220                           
  7221                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7222  01A122  0E40               	movlw	low _ring_buf2
  7223  01A124  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7224  01A126  0E03               	movlw	high _ring_buf2
  7225  01A128  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7226                           
  7227                           ; BSR set to: 1
  7228                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7229  01A12A  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
  7230  01A130  0060  F753  FFE6   	movff	_spi_link+7,postinc1
  7231  01A136  ECB7  F0DF         	call	_ringBufS_init	;wreg free
  7232                           
  7233                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7234  01A13A  0060  F747  FFE6   	movff	_spi_link+4,postinc1
  7235  01A140  0060  F74B  FFE6   	movff	_spi_link+5,postinc1
  7236  01A146  ECB7  F0DF         	call	_ringBufS_init	;wreg free
  7237                           
  7238                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7239  01A14A  84BE               	bsf	190,2,c	;volatile
  7240                           
  7241                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7242  01A14C  013D               	movlb	61	; () banked
  7243  01A14E  9F14               	bcf	20,7,b	;volatile
  7244                           
  7245                           ; BSR set to: 61
  7246                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7247  01A150  0E20               	movlw	32
  7248  01A152  6F15               	movwf	21,b	;volatile
  7249                           
  7250                           ; BSR set to: 61
  7251                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7252  01A154  0E03               	movlw	3
  7253  01A156  6F16               	movwf	22,b	;volatile
  7254                           
  7255                           ; BSR set to: 61
  7256                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7257  01A158  0E04               	movlw	4
  7258  01A15A  6F19               	movwf	25,b	;volatile
  7259                           
  7260                           ; BSR set to: 61
  7261                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7262  01A15C  0E02               	movlw	2
  7263  01A15E  6F1C               	movwf	28,b	;volatile
  7264                           
  7265                           ; BSR set to: 61
  7266                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7267  01A160  0E83               	movlw	131
  7268  01A162  6F14               	movwf	20,b	;volatile
  7269                           
  7270                           ; BSR set to: 61
  7271                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7272  01A164  8F14               	bsf	20,7,b	;volatile
  7273                           
  7274                           ; BSR set to: 61
  7275                           ;eadog.c: 60:  wdtdelay(350000);
  7276  01A166  0E30               	movlw	48
  7277  01A168  6EE6               	movwf	postinc1,c
  7278  01A16A  0E57               	movlw	87
  7279  01A16C  6EE6               	movwf	postinc1,c
  7280  01A16E  0E05               	movlw	5
  7281  01A170  6EE6               	movwf	postinc1,c
  7282  01A172  0E00               	movlw	0
  7283  01A174  6EE6               	movwf	postinc1,c
  7284  01A176  ECDD  F0DA         	call	_wdtdelay	;wreg free
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7288  01A17A  0E46               	movlw	70
  7289  01A17C  6EE6               	movwf	postinc1,c
  7290  01A17E  EC36  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7294  01A182  0E41               	movlw	65
  7295  01A184  6EE6               	movwf	postinc1,c
  7296  01A186  EC56  F0DD         	call	_send_lcd_cmd	;wreg free
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;eadog.c: 63:  wdtdelay(80);
  7300  01A18A  0E50               	movlw	80
  7301  01A18C  6EE6               	movwf	postinc1,c
  7302  01A18E  0E00               	movlw	0
  7303  01A190  6EE6               	movwf	postinc1,c
  7304  01A192  0E00               	movlw	0
  7305  01A194  6EE6               	movwf	postinc1,c
  7306  01A196  0E00               	movlw	0
  7307  01A198  6EE6               	movwf	postinc1,c
  7308  01A19A  ECDD  F0DA         	call	_wdtdelay	;wreg free
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7312  01A19E  0E53               	movlw	83
  7313  01A1A0  6EE6               	movwf	postinc1,c
  7314  01A1A2  EC56  F0DD         	call	_send_lcd_cmd	;wreg free
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;eadog.c: 65:  send_lcd_data(2);
  7318  01A1A6  0E02               	movlw	2
  7319  01A1A8  6EE6               	movwf	postinc1,c
  7320  01A1AA  ECE4  F0E0         	call	_send_lcd_data	;wreg free
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;eadog.c: 66:  wdtdelay(80);
  7324  01A1AE  0E50               	movlw	80
  7325  01A1B0  6EE6               	movwf	postinc1,c
  7326  01A1B2  0E00               	movlw	0
  7327  01A1B4  6EE6               	movwf	postinc1,c
  7328  01A1B6  0E00               	movlw	0
  7329  01A1B8  6EE6               	movwf	postinc1,c
  7330  01A1BA  0E00               	movlw	0
  7331  01A1BC  6EE6               	movwf	postinc1,c
  7332  01A1BE  ECDD  F0DA         	call	_wdtdelay	;wreg free
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7336  01A1C2  0E51               	movlw	81
  7337  01A1C4  6EE6               	movwf	postinc1,c
  7338  01A1C6  EC36  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7342  01A1CA  013D               	movlb	61	; () banked
  7343  01A1CC  9F14               	bcf	20,7,b	;volatile
  7344                           
  7345                           ; BSR set to: 61
  7346                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7347  01A1CE  0E02               	movlw	2
  7348  01A1D0  6F16               	movwf	22,b	;volatile
  7349                           
  7350                           ; BSR set to: 61
  7351                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7352  01A1D2  8F14               	bsf	20,7,b	;volatile
  7353                           
  7354                           ; BSR set to: 61
  7355                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7356  01A1D4  931A               	bcf	26,1,b	;volatile
  7357                           
  7358                           ; BSR set to: 61
  7359                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7360  01A1D6  0E3F               	movlw	-193
  7361  01A1D8  013B               	movlb	59	; () banked
  7362  01A1DA  17FD               	andwf	253,f,b	;volatile
  7363                           
  7364                           ; BSR set to: 59
  7365                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7366  01A1DC  9BFD               	bcf	253,5,b	;volatile
  7367                           
  7368                           ; BSR set to: 59
  7369                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7370  01A1DE  51FD               	movf	253,w,b	;volatile
  7371  01A1E0  0BF9               	andlw	-7
  7372  01A1E2  0902               	iorlw	2
  7373  01A1E4  6FFD               	movwf	253,b	;volatile
  7374                           
  7375                           ; BSR set to: 59
  7376                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7377  01A1E6  0EE7               	movlw	-25
  7378  01A1E8  17FD               	andwf	253,f,b	;volatile
  7379                           
  7380                           ; BSR set to: 59
  7381                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7382  01A1EA  81FD               	bsf	253,0,b	;volatile
  7383                           
  7384                           ; BSR set to: 59
  7385                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7386  01A1EC  0E83               	movlw	low _ring_buf1
  7387  01A1EE  6FF9               	movwf	249,b	;volatile
  7388  01A1F0  0E03               	movlw	high _ring_buf1
  7389  01A1F2  6FFA               	movwf	250,b	;volatile
  7390  01A1F4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7391  01A1F6  6FFB               	movwf	251,b	;volatile
  7392                           
  7393                           ; BSR set to: 59
  7394                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7395  01A1F8  9BFC               	bcf	252,5,b	;volatile
  7396                           
  7397                           ; BSR set to: 59
  7398                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7399  01A1FA  013D               	movlb	61	; () banked
  7400  01A1FC  831A               	bsf	26,1,b	;volatile
  7401                           
  7402                           ; BSR set to: 61
  7403                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7404  01A1FE  94BE               	bcf	190,2,c	;volatile
  7405                           
  7406                           ; BSR set to: 61
  7407                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7408  01A200  0012               	return		;funcret
  7409  01A202                     __end_of_init_display:
  7410                           	opt callstack 0
  7411                           
  7412 ;; *************** function _send_lcd_data *****************
  7413 ;; Defined at:
  7414 ;;		line 123 in file "eadog.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  data            1  [STACK] const unsigned char 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1  [STACK] void 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7423 ;; Tracked objects:
  7424 ;;		On entry : 3F/0
  7425 ;;		On exit  : 3F/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:   16
  7435 ;; This function calls:
  7436 ;;		_SPI1_Exchange8bit
  7437 ;;		_wdtdelay
  7438 ;; This function is called by:
  7439 ;;		_init_display
  7440 ;; This function uses a reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text12
  7444  01C1C8                     __ptext12:
  7445                           	opt callstack 0
  7446  01C1C8                     _send_lcd_data:
  7447                           	opt callstack 13
  7448                           
  7449                           ; BSR set to: 61
  7450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7451                           ;incstack = 0
  7452                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7453  01C1C8  94BC               	bcf	188,2,c	;volatile
  7454                           
  7455                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7456                           ;stkvar	_data @ sp[(0)+-1]
  7457  01C1CA  0EFF               	movlw	-1
  7458  01C1CC  50E3               	movf	plusw1,w,c
  7459  01C1CE  6EE6               	movwf	postinc1,c
  7460  01C1D0  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7461                           
  7462                           ; BSR set to: 57
  7463                           ;eadog.c: 127:  wdtdelay(8);
  7464  01C1D4  0E08               	movlw	8
  7465  01C1D6  6EE6               	movwf	postinc1,c
  7466  01C1D8  0E00               	movlw	0
  7467  01C1DA  6EE6               	movwf	postinc1,c
  7468  01C1DC  0E00               	movlw	0
  7469  01C1DE  6EE6               	movwf	postinc1,c
  7470  01C1E0  0E00               	movlw	0
  7471  01C1E2  6EE6               	movwf	postinc1,c
  7472  01C1E4  ECDD  F0DA         	call	_wdtdelay	;wreg free
  7473                           
  7474                           ; BSR set to: 0
  7475                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7476  01C1E8  52E5               	movf	postdec1,f,c
  7477  01C1EA  0012               	return		;funcret
  7478  01C1EC                     __end_of_send_lcd_data:
  7479                           	opt callstack 0
  7480                           
  7481 ;; *************** function _send_lcd_cmd_long *****************
  7482 ;; Defined at:
  7483 ;;		line 139 in file "eadog.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  cmd             1  [STACK] const unsigned char 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;		None
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1  [STACK] void 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7492 ;; Tracked objects:
  7493 ;;		On entry : 3F/0
  7494 ;;		On exit  : 3F/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7501 ;;Total ram usage:        0 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:   16
  7504 ;; This function calls:
  7505 ;;		_SPI1_Exchange8bit
  7506 ;;		_wdtdelay
  7507 ;; This function is called by:
  7508 ;;		_init_display
  7509 ;; This function uses a reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text13
  7513  01BA6C                     __ptext13:
  7514                           	opt callstack 0
  7515  01BA6C                     _send_lcd_cmd_long:
  7516                           	opt callstack 13
  7517                           
  7518                           ; BSR set to: 0
  7519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7520                           ;incstack = 0
  7521                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7522  01BA6C  94BC               	bcf	188,2,c	;volatile
  7523                           
  7524                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7525  01BA6E  0EFE               	movlw	254
  7526  01BA70  6EE6               	movwf	postinc1,c
  7527  01BA72  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7528                           
  7529                           ; BSR set to: 57
  7530                           ;eadog.c: 143:  wdtdelay(8);
  7531  01BA76  0E08               	movlw	8
  7532  01BA78  6EE6               	movwf	postinc1,c
  7533  01BA7A  0E00               	movlw	0
  7534  01BA7C  6EE6               	movwf	postinc1,c
  7535  01BA7E  0E00               	movlw	0
  7536  01BA80  6EE6               	movwf	postinc1,c
  7537  01BA82  0E00               	movlw	0
  7538  01BA84  6EE6               	movwf	postinc1,c
  7539  01BA86  ECDD  F0DA         	call	_wdtdelay	;wreg free
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7543                           ;stkvar	_cmd @ sp[(0)+-1]
  7544  01BA8A  0EFF               	movlw	-1
  7545  01BA8C  50E3               	movf	plusw1,w,c
  7546  01BA8E  6EE6               	movwf	postinc1,c
  7547  01BA90  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7548                           
  7549                           ;eadog.c: 145:  wdtdelay(800);
  7550  01BA94  0E20               	movlw	32
  7551  01BA96  6EE6               	movwf	postinc1,c
  7552  01BA98  0E03               	movlw	3
  7553  01BA9A  6EE6               	movwf	postinc1,c
  7554  01BA9C  0E00               	movlw	0
  7555  01BA9E  6EE6               	movwf	postinc1,c
  7556  01BAA0  0E00               	movlw	0
  7557  01BAA2  6EE6               	movwf	postinc1,c
  7558  01BAA4  ECDD  F0DA         	call	_wdtdelay	;wreg free
  7559                           
  7560                           ; BSR set to: 0
  7561                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7562  01BAA8  52E5               	movf	postdec1,f,c
  7563  01BAAA  0012               	return		;funcret
  7564  01BAAC                     __end_of_send_lcd_cmd_long:
  7565                           	opt callstack 0
  7566                           
  7567 ;; *************** function _send_lcd_cmd *****************
  7568 ;; Defined at:
  7569 ;;		line 130 in file "eadog.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  cmd             1  [STACK] const unsigned char 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;		None
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1  [STACK] void 
  7576 ;; Registers used:
  7577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7578 ;; Tracked objects:
  7579 ;;		On entry : 3F/0
  7580 ;;		On exit  : 3F/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7587 ;;Total ram usage:        0 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:   16
  7590 ;; This function calls:
  7591 ;;		_SPI1_Exchange8bit
  7592 ;;		_wdtdelay
  7593 ;; This function is called by:
  7594 ;;		_init_display
  7595 ;; This function uses a reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text14
  7599  01BAAC                     __ptext14:
  7600                           	opt callstack 0
  7601  01BAAC                     _send_lcd_cmd:
  7602                           	opt callstack 13
  7603                           
  7604                           ; BSR set to: 0
  7605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7606                           ;incstack = 0
  7607                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7608  01BAAC  94BC               	bcf	188,2,c	;volatile
  7609                           
  7610                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7611  01BAAE  0EFE               	movlw	254
  7612  01BAB0  6EE6               	movwf	postinc1,c
  7613  01BAB2  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7614                           
  7615                           ; BSR set to: 57
  7616                           ;eadog.c: 134:  wdtdelay(8);
  7617  01BAB6  0E08               	movlw	8
  7618  01BAB8  6EE6               	movwf	postinc1,c
  7619  01BABA  0E00               	movlw	0
  7620  01BABC  6EE6               	movwf	postinc1,c
  7621  01BABE  0E00               	movlw	0
  7622  01BAC0  6EE6               	movwf	postinc1,c
  7623  01BAC2  0E00               	movlw	0
  7624  01BAC4  6EE6               	movwf	postinc1,c
  7625  01BAC6  ECDD  F0DA         	call	_wdtdelay	;wreg free
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7629                           ;stkvar	_cmd @ sp[(0)+-1]
  7630  01BACA  0EFF               	movlw	-1
  7631  01BACC  50E3               	movf	plusw1,w,c
  7632  01BACE  6EE6               	movwf	postinc1,c
  7633  01BAD0  ECA3  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7634                           
  7635                           ;eadog.c: 136:  wdtdelay(8);
  7636  01BAD4  0E08               	movlw	8
  7637  01BAD6  6EE6               	movwf	postinc1,c
  7638  01BAD8  0E00               	movlw	0
  7639  01BADA  6EE6               	movwf	postinc1,c
  7640  01BADC  0E00               	movlw	0
  7641  01BADE  6EE6               	movwf	postinc1,c
  7642  01BAE0  0E00               	movlw	0
  7643  01BAE2  6EE6               	movwf	postinc1,c
  7644  01BAE4  ECDD  F0DA         	call	_wdtdelay	;wreg free
  7645                           
  7646                           ; BSR set to: 0
  7647                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7648  01BAE8  52E5               	movf	postdec1,f,c
  7649  01BAEA  0012               	return		;funcret
  7650  01BAEC                     __end_of_send_lcd_cmd:
  7651                           	opt callstack 0
  7652                           
  7653 ;; *************** function _SPI1_Exchange8bit *****************
  7654 ;; Defined at:
  7655 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;  data            1  [STACK] unsigned char 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1  [STACK] unsigned char 
  7662 ;; Registers used:
  7663 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 3F/39
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7673 ;;Total ram usage:        0 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:   15
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_send_lcd_data
  7680 ;;		_send_lcd_cmd
  7681 ;;		_send_lcd_cmd_long
  7682 ;;		_set_dac
  7683 ;; This function uses a reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text15
  7687  01C346                     __ptext15:
  7688                           	opt callstack 0
  7689  01C346                     _SPI1_Exchange8bit:
  7690                           	opt callstack 14
  7691                           
  7692                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7693                           
  7694                           ; BSR set to: 0
  7695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7696                           ;incstack = 0
  7697  01C346  0E01               	movlw	1
  7698  01C348  013D               	movlb	61	; () banked
  7699  01C34A  6F12               	movwf	18,b	;volatile
  7700                           
  7701                           ; BSR set to: 61
  7702                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7703                           ;stkvar	_data @ sp[(0)+-1]
  7704  01C34C  0EFF               	movlw	-1
  7705  01C34E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7706  01C354                     l807:
  7707                           
  7708                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7709  01C354  0139               	movlb	57	; () banked
  7710  01C356  A9A2               	btfss	162,4,b	;volatile
  7711  01C358  D7FD               	goto	l807
  7712                           
  7713                           ; BSR set to: 57
  7714                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7715  01C35A  006F F440  F001    	movff	15632,btemp	;volatile
  7716                           
  7717                           ; BSR set to: 57
  7718                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7719  01C360  52E5               	movf	postdec1,f,c
  7720  01C362  0012               	return		;funcret
  7721  01C364                     __end_of_SPI1_Exchange8bit:
  7722                           	opt callstack 0
  7723                           
  7724 ;; *************** function _ringBufS_init *****************
  7725 ;; Defined at:
  7726 ;;		line 22 in file "ringbufs.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  _this           2  [STACK] PTR volatile struct ring
  7729 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1  [STACK] void 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/1
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;Total ram usage:        0 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:   16
  7748 ;; This function calls:
  7749 ;;		_memset
  7750 ;; This function is called by:
  7751 ;;		_init_display
  7752 ;; This function uses a reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text16
  7756  01BF6E                     __ptext16:
  7757                           	opt callstack 0
  7758  01BF6E                     _ringBufS_init:
  7759                           	opt callstack 13
  7760                           
  7761                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7762                           
  7763                           ; BSR set to: 57
  7764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7765                           ;incstack = 0
  7766  01BF6E  0E43               	movlw	67
  7767  01BF70  6EE6               	movwf	postinc1,c
  7768  01BF72  0E00               	movlw	0
  7769  01BF74  6EE6               	movwf	postinc1,c
  7770  01BF76  0E00               	movlw	0
  7771  01BF78  6EE6               	movwf	postinc1,c
  7772  01BF7A  0E00               	movlw	0
  7773  01BF7C  6EE6               	movwf	postinc1,c
  7774                           
  7775                           ;stkvar	__this @ sp[(-4)+-2]
  7776  01BF7E  0EFA               	movlw	-6
  7777  01BF80  006F FF8F FFE6     	movff	plusw1,postinc1
  7778  01BF86  006F FF8F FFE6     	movff	plusw1,postinc1
  7779  01BF8C  EC4E  F0B7         	call	_memset	;wreg free
  7780                           
  7781                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7782  01BF90  52E5               	movf	postdec1,f,c
  7783  01BF92  52E5               	movf	postdec1,f,c
  7784  01BF94  0012               	return		;funcret
  7785  01BF96                     __end_of_ringBufS_init:
  7786                           	opt callstack 0
  7787                           
  7788 ;; *************** function _init_bsoc *****************
  7789 ;; Defined at:
  7790 ;;		line 109 in file "bsoc.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;		None
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1  [STACK] void 
  7797 ;; Registers used:
  7798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7808 ;;Total ram usage:        0 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:   18
  7811 ;; This function calls:
  7812 ;;		_TMR3_SetInterruptHandler
  7813 ;;		_Volts_to_SOC
  7814 ;;		___fldiv
  7815 ;;		___flmul
  7816 ;;		___fltol
  7817 ;;		___xxtofl
  7818 ;;		_conv_raw_result
  7819 ;; This function is called by:
  7820 ;;		_main
  7821 ;; This function uses a reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text17
  7825  017C12                     __ptext17:
  7826                           	opt callstack 0
  7827  017C12                     _init_bsoc:
  7828                           	opt callstack 12
  7829                           
  7830                           ;bsoc.c: 114:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7831                           
  7832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7833                           ;incstack = 0
  7834  017C12  0E00               	movlw	0
  7835  017C14  6EE6               	movwf	postinc1,c
  7836  017C16  0E00               	movlw	0
  7837  017C18  6EE6               	movwf	postinc1,c
  7838  017C1A  0E7A               	movlw	122
  7839  017C1C  6EE6               	movwf	postinc1,c
  7840  017C1E  0E44               	movlw	68
  7841  017C20  6EE6               	movwf	postinc1,c
  7842  017C22  0E00               	movlw	0
  7843  017C24  6EE6               	movwf	postinc1,c
  7844  017C26  0E04               	movlw	4
  7845  017C28  6EE6               	movwf	postinc1,c
  7846  017C2A  EC95  F0A9         	call	_conv_raw_result	;wreg free
  7847  017C2E  0060  F007  FFE6   	movff	btemp,postinc1
  7848  017C34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7849  017C3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7850  017C40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7851  017C46  EC51  F0C8         	call	___fltol	;wreg free
  7852  017C4A  0060  F007  FFE6   	movff	btemp,postinc1
  7853  017C50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7854  017C56  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7855  017C5C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7856  017C62  0E00               	movlw	0
  7857  017C64  6EE6               	movwf	postinc1,c
  7858  017C66  EC65  F0C2         	call	___xxtofl	;wreg free
  7859  017C6A  0060  F007  FFE6   	movff	btemp,postinc1
  7860  017C70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7861  017C76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7862  017C7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7863  017C82  ECE5  F09E         	call	___flmul	;wreg free
  7864  017C86  0060  F007  FFE6   	movff	btemp,postinc1
  7865  017C8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7866  017C92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7867  017C98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7868  017C9E  EC51  F0C8         	call	___fltol	;wreg free
  7869  017CA2  0060  F007  FFE6   	movff	btemp,postinc1
  7870  017CA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7871  017CAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7872  017CB4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7873  017CBA  EC7F  F0D3         	call	_Volts_to_SOC	;wreg free
  7874  017CBE  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7875  017CC4  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7876                           
  7877                           ;bsoc.c: 115:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7878  017CCA  EE21  F38B         	lfsr	2,_C+140	;volatile
  7879  017CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  7880  017CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  7881  017CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  7882  017CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  7883  017CE6  0E00               	movlw	0
  7884  017CE8  6EE6               	movwf	postinc1,c
  7885  017CEA  0E00               	movlw	0
  7886  017CEC  6EE6               	movwf	postinc1,c
  7887  017CEE  0EC8               	movlw	200
  7888  017CF0  6EE6               	movwf	postinc1,c
  7889  017CF2  0E42               	movlw	66
  7890  017CF4  6EE6               	movwf	postinc1,c
  7891  017CF6  0E00               	movlw	0
  7892  017CF8  6EE6               	movwf	postinc1,c
  7893  017CFA  0E00               	movlw	0
  7894  017CFC  6EE6               	movwf	postinc1,c
  7895  017CFE  0E7A               	movlw	122
  7896  017D00  6EE6               	movwf	postinc1,c
  7897  017D02  0E44               	movlw	68
  7898  017D04  6EE6               	movwf	postinc1,c
  7899  017D06  0E00               	movlw	0
  7900  017D08  6EE6               	movwf	postinc1,c
  7901  017D0A  0E04               	movlw	4
  7902  017D0C  6EE6               	movwf	postinc1,c
  7903  017D0E  EC95  F0A9         	call	_conv_raw_result	;wreg free
  7904  017D12  0060  F007  FFE6   	movff	btemp,postinc1
  7905  017D18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7906  017D1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7907  017D24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7908  017D2A  EC51  F0C8         	call	___fltol	;wreg free
  7909  017D2E  0060  F007  FFE6   	movff	btemp,postinc1
  7910  017D34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7911  017D3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7912  017D40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7913  017D46  0E00               	movlw	0
  7914  017D48  6EE6               	movwf	postinc1,c
  7915  017D4A  EC65  F0C2         	call	___xxtofl	;wreg free
  7916  017D4E  0060  F007  FFE6   	movff	btemp,postinc1
  7917  017D54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7918  017D5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7919  017D60  0060  F013  FFE6   	movff	btemp+3,postinc1
  7920  017D66  ECE5  F09E         	call	___flmul	;wreg free
  7921  017D6A  0060  F007  FFE6   	movff	btemp,postinc1
  7922  017D70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7923  017D76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7924  017D7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7925  017D82  EC51  F0C8         	call	___fltol	;wreg free
  7926  017D86  0060  F007  FFE6   	movff	btemp,postinc1
  7927  017D8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7928  017D92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7929  017D98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7930  017D9E  EC7F  F0D3         	call	_Volts_to_SOC	;wreg free
  7931  017DA2  0060  F004  F00B   	movff	btemp,btemp+10
  7932  017DA8  0060  F008  F00C   	movff	btemp+1,btemp+11
  7933  017DAE  500B               	movf	(btemp+10)^0,w,c
  7934  017DB0  6E05               	movwf	(btemp+4)^0,c
  7935  017DB2  500C               	movf	(btemp+11)^0,w,c
  7936  017DB4  6E06               	movwf	(btemp+5)^0,c
  7937  017DB6  6A07               	clrf	(btemp+6)^0,c
  7938  017DB8  6A08               	clrf	(btemp+7)^0,c
  7939  017DBA  0060  F017  FFE6   	movff	btemp+4,postinc1
  7940  017DC0  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7941  017DC6  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7942  017DCC  0060  F023  FFE6   	movff	btemp+7,postinc1
  7943  017DD2  0E00               	movlw	0
  7944  017DD4  6EE6               	movwf	postinc1,c
  7945  017DD6  EC65  F0C2         	call	___xxtofl	;wreg free
  7946  017DDA  0060  F007  FFE6   	movff	btemp,postinc1
  7947  017DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7948  017DE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7949  017DEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7950  017DF2  ECD8  F0A6         	call	___fldiv	;wreg free
  7951  017DF6  0060  F007  FFE6   	movff	btemp,postinc1
  7952  017DFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7953  017E02  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7954  017E08  0060  F013  FFE6   	movff	btemp+3,postinc1
  7955  017E0E  ECE5  F09E         	call	___flmul	;wreg free
  7956  017E12  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7957  017E18  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7958  017E1E  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7959  017E24  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7960                           
  7961                           ;bsoc.c: 116:  C.dynamic_ah_adj = C.dynamic_ah;
  7962  017E2A  EE21  F38F         	lfsr	2,_C+144	;volatile
  7963  017E2E  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7964  017E34  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7965  017E3A  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7966  017E40  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7967                           
  7968                           ;bsoc.c: 117:  TMR3_SetInterruptHandler(calc_bsoc);
  7969  017E46  0E94               	movlw	low _calc_bsoc
  7970  017E48  6EE6               	movwf	postinc1,c
  7971  017E4A  0E33               	movlw	high _calc_bsoc
  7972  017E4C  6EE6               	movwf	postinc1,c
  7973  017E4E  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7974  017E50  6EE6               	movwf	postinc1,c
  7975  017E52  EC43  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
  7976                           
  7977                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7978  017E56  0012               	return		;funcret
  7979  017E58                     __end_of_init_bsoc:
  7980                           	opt callstack 0
  7981                           
  7982 ;; *************** function _Volts_to_SOC *****************
  7983 ;; Defined at:
  7984 ;;		line 174 in file "bsoc.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  cvoltage        4  [STACK] const unsigned long 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  soc             2  [STACK] unsigned short 
  7989 ;;  slot            1  [STACK] unsigned char 
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  2  [STACK] unsigned short 
  7992 ;; Registers used:
  7993 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8003 ;;Total ram usage:        0 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:   15
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_init_bsoc
  8010 ;; This function uses a reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text18
  8014  01A6FE                     __ptext18:
  8015                           	opt callstack 0
  8016  01A6FE                     _Volts_to_SOC:
  8017                           	opt callstack 0
  8018                           
  8019                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8020  01A6FE  52E6               	movf	postinc1,f,c
  8021  01A700  52E6               	movf	postinc1,f,c
  8022  01A702  52E6               	movf	postinc1,f,c
  8023                           
  8024                           ;bsoc.c: 174: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 175: {;bsoc.c: 176:
      +                            uint8_t slot;;bsoc.c: 177:  uint16_t soc = 0;
  8025                           ;stkvar	_soc @ sp[(-3)+0]
  8026                           
  8027                           ;incstack = 0
  8028  01A704  0EFD               	movlw	-3
  8029  01A706  6AE3               	clrf	plusw1,c
  8030  01A708  0EFE               	movlw	-2
  8031  01A70A  6AE3               	clrf	plusw1,c
  8032                           
  8033                           ;bsoc.c: 182:  for (slot = 0; slot < 26; slot++) {
  8034                           ;stkvar	_slot @ sp[(-3)+2]
  8035  01A70C  0EFF               	movlw	-1
  8036  01A70E  6AE3               	clrf	plusw1,c
  8037  01A710                     l10868:
  8038                           
  8039                           ;bsoc.c: 183:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8040                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8041                           ;stkvar	_slot @ sp[(-3)+2]
  8042  01A710  0EFF               	movlw	-1
  8043  01A712  50E3               	movf	plusw1,w,c
  8044  01A714  0D08               	mullw	8
  8045  01A716  0EE5               	movlw	low _BVSOC_TABLE
  8046  01A718  24F3               	addwf	243,w,c
  8047  01A71A  6EF6               	movwf	tblptrl,c
  8048  01A71C  0EF9               	movlw	high _BVSOC_TABLE
  8049  01A71E  20F4               	addwfc	244,w,c
  8050  01A720  6EF7               	movwf	tblptrh,c
  8051  01A722                     	if	1	;There are 3 active tblptr bytes
  8052  01A722  6AF8               	clrf	tblptru,c
  8053  01A724  0E00               	movlw	low (__mediumconst shr (0+16))
  8054  01A726  22F8               	addwfc	tblptru,f,c
  8055  01A728                     	endif
  8056  01A728  0EF9               	movlw	-7
  8057  01A72A  50E3               	movf	plusw1,w,c
  8058  01A72C  0009               	tblrd		*+
  8059  01A72E  5CF5               	subwf	tablat,w,c
  8060  01A730  0EFA               	movlw	-6
  8061  01A732  50E3               	movf	plusw1,w,c
  8062  01A734  0009               	tblrd		*+
  8063  01A736  58F5               	subwfb	tablat,w,c
  8064  01A738  0EFB               	movlw	-5
  8065  01A73A  50E3               	movf	plusw1,w,c
  8066  01A73C  0009               	tblrd		*+
  8067  01A73E  58F5               	subwfb	tablat,w,c
  8068  01A740  0EFC               	movlw	-4
  8069  01A742  50E3               	movf	plusw1,w,c
  8070  01A744  0009               	tblrd		*+
  8071  01A746  58F5               	subwfb	tablat,w,c
  8072  01A748  B0D8               	btfsc	status,0,c
  8073  01A74A  D020               	goto	l10872
  8074                           
  8075                           ;bsoc.c: 184:    soc = BVSOC_TABLE[slot][1];
  8076                           ;stkvar	_slot @ sp[(-3)+2]
  8077  01A74C  0EFF               	movlw	-1
  8078  01A74E  50E3               	movf	plusw1,w,c
  8079  01A750  0D08               	mullw	8
  8080  01A752  0E04               	movlw	4
  8081  01A754  26F3               	addwf	243,f,c
  8082  01A756  0E00               	movlw	0
  8083  01A758  22F4               	addwfc	244,f,c
  8084  01A75A  0EE5               	movlw	low _BVSOC_TABLE
  8085  01A75C  24F3               	addwf	243,w,c
  8086  01A75E  6EF6               	movwf	tblptrl,c
  8087  01A760  0EF9               	movlw	high _BVSOC_TABLE
  8088  01A762  20F4               	addwfc	244,w,c
  8089  01A764  6EF7               	movwf	tblptrh,c
  8090  01A766                     	if	1	;There are 3 active tblptr bytes
  8091  01A766  6AF8               	clrf	tblptru,c
  8092  01A768  0E00               	movlw	low (__mediumconst shr (0+16))
  8093  01A76A  22F8               	addwfc	tblptru,f,c
  8094  01A76C                     	endif
  8095  01A76C  0009               	tblrd		*+
  8096  01A76E  006F FFD4  F00B    	movff	tablat,btemp+10
  8097  01A774  0009               	tblrd		*+
  8098  01A776  006F FFD4  F00C    	movff	tablat,btemp+11
  8099                           
  8100                           ;stkvar	_soc @ sp[(-3)+0]
  8101  01A77C  0EFD               	movlw	-3
  8102  01A77E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8103  01A784  0EFE               	movlw	-2
  8104  01A786  0060  F033  FFE3   	movff	btemp+11,plusw1
  8105  01A78C                     l10872:
  8106                           
  8107                           ;bsoc.c: 186:  }
  8108                           ;stkvar	_slot @ sp[(-3)+2]
  8109  01A78C  0EFF               	movlw	-1
  8110  01A78E  2AE3               	incf	plusw1,f,c
  8111                           
  8112                           ;stkvar	_slot @ sp[(-3)+2]
  8113  01A790  0EFF               	movlw	-1
  8114  01A792  006F FF8C  F001    	movff	plusw1,btemp
  8115  01A798  0E19               	movlw	25
  8116  01A79A  6401               	cpfsgt	btemp^0,c
  8117  01A79C  D7B9               	goto	l10868
  8118                           
  8119                           ;bsoc.c: 187:  return soc;
  8120                           ;stkvar	_soc @ sp[(-3)+0]
  8121  01A79E  0EFD               	movlw	-3
  8122  01A7A0  006F FF8C  F001    	movff	plusw1,btemp
  8123  01A7A6  0EFE               	movlw	-2
  8124  01A7A8  006F FF8C  F002    	movff	plusw1,btemp+1
  8125                           
  8126                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8127  01A7AE  0EF9               	movlw	249
  8128  01A7B0  26E1               	addwf	fsr1l,f,c
  8129  01A7B2  0EFF               	movlw	255
  8130  01A7B4  22E2               	addwfc	fsr1h,f,c
  8131  01A7B6  0012               	return		;funcret
  8132  01A7B8                     __end_of_Volts_to_SOC:
  8133                           	opt callstack 0
  8134                           
  8135 ;; *************** function _hid_display *****************
  8136 ;; Defined at:
  8137 ;;		line 17 in file "hid.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;  h               2  [STACK] PTR struct H_data
  8140 ;;		 -> H(7), 
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  2  [STACK] PTR struct H_data
  8145 ;; Registers used:
  8146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8147 ;; Tracked objects:
  8148 ;;		On entry : 3F/39
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8156 ;;Total ram usage:        0 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:   17
  8159 ;; This function calls:
  8160 ;;		_hid_input
  8161 ;; This function is called by:
  8162 ;;		_main
  8163 ;; This function uses a reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text19
  8167  0186CE                     __ptext19:
  8168                           	opt callstack 0
  8169  0186CE                     _hid_display:
  8170                           	opt callstack 13
  8171                           
  8172                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  8173                           ;stkvar	_h @ sp[(0)+-2]
  8174                           
  8175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8176                           ;incstack = 0
  8177  0186CE  0EFE               	movlw	-2
  8178  0186D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8179  0186D6  006F FF8F FFE6     	movff	plusw1,postinc1
  8180  0186DC  EC4D  F0D2         	call	_hid_input	;wreg free
  8181                           
  8182                           ;hid.c: 21:  switch (h->h_state) {
  8183  0186E0  D0C6               	goto	l13254
  8184  0186E2                     l13232:
  8185                           
  8186                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  8187                           ;stkvar	_h @ sp[(0)+-2]
  8188  0186E2  0EFE               	movlw	-2
  8189  0186E4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8190  0186EA  0EFF               	movlw	-1
  8191  0186EC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8192  0186F2  0E01               	movlw	1
  8193  0186F4  240B               	addwf	(btemp+10)^0,w,c
  8194  0186F6  6ED9               	movwf	fsr2l,c
  8195  0186F8  0E00               	movlw	0
  8196  0186FA  200C               	addwfc	(btemp+11)^0,w,c
  8197  0186FC  6EDA               	movwf	fsr2h,c
  8198  0186FE  0E01               	movlw	1
  8199  018700  6EDF               	movwf	indf2,c
  8200                           
  8201                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  8202                           ;stkvar	_h @ sp[(0)+-2]
  8203  018702  0EFE               	movlw	-2
  8204  018704  006F FF8F FFD9     	movff	plusw1,fsr2l
  8205  01870A  0EFF               	movlw	-1
  8206  01870C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8207  018712  0E00               	movlw	0
  8208  018714  6EDF               	movwf	indf2,c
  8209                           
  8210                           ;hid.c: 25:   h->wait_enter = 1;
  8211                           ;stkvar	_h @ sp[(0)+-2]
  8212  018716  0EFE               	movlw	-2
  8213  018718  006F FF8C  F00B    	movff	plusw1,btemp+10
  8214  01871E  0EFF               	movlw	-1
  8215  018720  006F FF8C  F00C    	movff	plusw1,btemp+11
  8216  018726  0E04               	movlw	4
  8217  018728  240B               	addwf	(btemp+10)^0,w,c
  8218  01872A  6ED9               	movwf	fsr2l,c
  8219  01872C  0E00               	movlw	0
  8220  01872E  200C               	addwfc	(btemp+11)^0,w,c
  8221  018730  6EDA               	movwf	fsr2h,c
  8222  018732  0E01               	movlw	1
  8223  018734  6EDF               	movwf	indf2,c
  8224                           
  8225                           ;hid.c: 26:   h->wait_select = 1;
  8226                           ;stkvar	_h @ sp[(0)+-2]
  8227  018736  0EFE               	movlw	-2
  8228  018738  006F FF8C  F00B    	movff	plusw1,btemp+10
  8229  01873E  0EFF               	movlw	-1
  8230  018740  006F FF8C  F00C    	movff	plusw1,btemp+11
  8231  018746  0E02               	movlw	2
  8232  018748  240B               	addwf	(btemp+10)^0,w,c
  8233  01874A  6ED9               	movwf	fsr2l,c
  8234  01874C  0E00               	movlw	0
  8235  01874E  200C               	addwfc	(btemp+11)^0,w,c
  8236  018750  6EDA               	movwf	fsr2h,c
  8237  018752  0E01               	movlw	1
  8238  018754  6EDF               	movwf	indf2,c
  8239                           
  8240                           ;hid.c: 27:   h->select_p = SW_OFF;
  8241                           ;stkvar	_h @ sp[(0)+-2]
  8242  018756  0EFE               	movlw	-2
  8243  018758  006F FF8C  F00B    	movff	plusw1,btemp+10
  8244  01875E  0EFF               	movlw	-1
  8245  018760  006F FF8C  F00C    	movff	plusw1,btemp+11
  8246  018766  0E03               	movlw	3
  8247  018768  240B               	addwf	(btemp+10)^0,w,c
  8248  01876A  6ED9               	movwf	fsr2l,c
  8249  01876C  0E00               	movlw	0
  8250  01876E  200C               	addwfc	(btemp+11)^0,w,c
  8251  018770  6EDA               	movwf	fsr2h,c
  8252  018772  0E00               	movlw	0
  8253  018774  6EDF               	movwf	indf2,c
  8254                           
  8255                           ;hid.c: 28:   h->enter_p = SW_OFF;
  8256                           ;stkvar	_h @ sp[(0)+-2]
  8257  018776  0EFE               	movlw	-2
  8258  018778  006F FF8C  F00B    	movff	plusw1,btemp+10
  8259  01877E  0EFF               	movlw	-1
  8260  018780  006F FF8C  F00C    	movff	plusw1,btemp+11
  8261  018786  0E05               	movlw	5
  8262  018788  240B               	addwf	(btemp+10)^0,w,c
  8263  01878A  6ED9               	movwf	fsr2l,c
  8264  01878C  0E00               	movlw	0
  8265  01878E  200C               	addwfc	(btemp+11)^0,w,c
  8266  018790  6EDA               	movwf	fsr2h,c
  8267  018792  0E00               	movlw	0
  8268  018794  D06A               	goto	L4
  8269  018796                     l13244:
  8270                           
  8271                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8272                           ;stkvar	_h @ sp[(0)+-2]
  8273  018796  0EFE               	movlw	-2
  8274  018798  006F FF8C  F00B    	movff	plusw1,btemp+10
  8275  01879E  0EFF               	movlw	-1
  8276  0187A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8277  0187A6  0E02               	movlw	2
  8278  0187A8  240B               	addwf	(btemp+10)^0,w,c
  8279  0187AA  6ED9               	movwf	fsr2l,c
  8280  0187AC  0E00               	movlw	0
  8281  0187AE  200C               	addwfc	(btemp+11)^0,w,c
  8282  0187B0  6EDA               	movwf	fsr2h,c
  8283  0187B2  50DF               	movf	indf2,w,c
  8284  0187B4  A4D8               	btfss	status,2,c
  8285  0187B6  D076               	goto	l2043
  8286                           
  8287                           ;stkvar	_h @ sp[(0)+-2]
  8288  0187B8  0EFE               	movlw	-2
  8289  0187BA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8290  0187C0  0EFF               	movlw	-1
  8291  0187C2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8292  0187C8  0E03               	movlw	3
  8293  0187CA  240B               	addwf	(btemp+10)^0,w,c
  8294  0187CC  6ED9               	movwf	fsr2l,c
  8295  0187CE  0E00               	movlw	0
  8296  0187D0  200C               	addwfc	(btemp+11)^0,w,c
  8297  0187D2  6EDA               	movwf	fsr2h,c
  8298  0187D4  50DF               	movf	indf2,w,c
  8299  0187D6  A4D8               	btfss	status,2,c
  8300  0187D8  D065               	goto	l2043
  8301                           
  8302                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  8303                           ;stkvar	_h @ sp[(0)+-2]
  8304  0187DA  0EFE               	movlw	-2
  8305  0187DC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8306  0187E2  0EFF               	movlw	-1
  8307  0187E4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8308  0187EA  0E06               	movlw	6
  8309  0187EC  240B               	addwf	(btemp+10)^0,w,c
  8310  0187EE  6ED9               	movwf	fsr2l,c
  8311  0187F0  0E00               	movlw	0
  8312  0187F2  200C               	addwfc	(btemp+11)^0,w,c
  8313  0187F4  6EDA               	movwf	fsr2h,c
  8314                           
  8315                           ;stkvar	_h @ sp[(0)+-2]
  8316  0187F6  0EFE               	movlw	-2
  8317  0187F8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8318  0187FE  0EFF               	movlw	-1
  8319  018800  006F FF8C  F00C    	movff	plusw1,btemp+11
  8320  018806  0E06               	movlw	6
  8321  018808  240B               	addwf	(btemp+10)^0,w,c
  8322  01880A  6EE9               	movwf	fsr0l,c
  8323  01880C  0E00               	movlw	0
  8324  01880E  200C               	addwfc	(btemp+11)^0,w,c
  8325  018810  6EEA               	movwf	fsr0h,c
  8326  018812  2AEF               	incf	indf0,f,c
  8327  018814  50EF               	movf	indf0,w,c
  8328  018816  0B03               	andlw	3
  8329  018818  6EDF               	movwf	indf2,c
  8330                           
  8331                           ;hid.c: 34:    h->hid_display = h->sequence;
  8332                           ;stkvar	_h @ sp[(0)+-2]
  8333  01881A  0EFE               	movlw	-2
  8334  01881C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8335  018822  0EFF               	movlw	-1
  8336  018824  006F FF8C  F00C    	movff	plusw1,btemp+11
  8337  01882A  0E06               	movlw	6
  8338  01882C  240B               	addwf	(btemp+10)^0,w,c
  8339  01882E  6ED9               	movwf	fsr2l,c
  8340  018830  0E00               	movlw	0
  8341  018832  200C               	addwfc	(btemp+11)^0,w,c
  8342  018834  6EDA               	movwf	fsr2h,c
  8343                           
  8344                           ;stkvar	_h @ sp[(0)+-2]
  8345  018836  0EFE               	movlw	-2
  8346  018838  006F FF8F FFE9     	movff	plusw1,fsr0l
  8347  01883E  0EFF               	movlw	-1
  8348  018840  006F FF8F FFEA     	movff	plusw1,fsr0h
  8349  018846  006F FF7F FFEF     	movff	indf2,indf0
  8350                           
  8351                           ;hid.c: 35:    h->wait_select = 1;
  8352                           ;stkvar	_h @ sp[(0)+-2]
  8353  01884C  0EFE               	movlw	-2
  8354  01884E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8355  018854  0EFF               	movlw	-1
  8356  018856  006F FF8C  F00C    	movff	plusw1,btemp+11
  8357  01885C  0E02               	movlw	2
  8358  01885E  240B               	addwf	(btemp+10)^0,w,c
  8359  018860  6ED9               	movwf	fsr2l,c
  8360  018862  0E00               	movlw	0
  8361  018864  200C               	addwfc	(btemp+11)^0,w,c
  8362  018866  6EDA               	movwf	fsr2h,c
  8363  018868  0E01               	movlw	1
  8364  01886A                     L4:
  8365  01886A  6EDF               	movwf	indf2,c
  8366  01886C  D01B               	goto	l2043
  8367  01886E                     l13254:
  8368                           
  8369                           ;stkvar	_h @ sp[(0)+-2]
  8370  01886E  0EFE               	movlw	-2
  8371  018870  006F FF8C  F00B    	movff	plusw1,btemp+10
  8372  018876  0EFF               	movlw	-1
  8373  018878  006F FF8C  F00C    	movff	plusw1,btemp+11
  8374  01887E  0E01               	movlw	1
  8375  018880  240B               	addwf	(btemp+10)^0,w,c
  8376  018882  6ED9               	movwf	fsr2l,c
  8377  018884  0E00               	movlw	0
  8378  018886  200C               	addwfc	(btemp+11)^0,w,c
  8379  018888  6EDA               	movwf	fsr2h,c
  8380  01888A  50DF               	movf	indf2,w,c
  8381  01888C  6E0B               	movwf	(btemp+10)^0,c
  8382  01888E  6A0C               	clrf	(btemp+11)^0,c
  8383                           
  8384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8385                           ; Switch size 1, requested type "simple"
  8386                           ; Number of cases is 1, Range of values is 0 to 0
  8387                           ; switch strategies available:
  8388                           ; Name         Instructions Cycles
  8389                           ; simple_byte            4     3 (average)
  8390                           ;	Chosen strategy is simple_byte
  8391  018890  500C               	movf	(btemp+11)^0,w,c
  8392  018892  0A00               	xorlw	0	; case 0
  8393  018894  A4D8               	btfss	status,2,c
  8394  018896  D77F               	goto	l13244
  8395                           
  8396                           ; Switch size 1, requested type "simple"
  8397                           ; Number of cases is 2, Range of values is 0 to 1
  8398                           ; switch strategies available:
  8399                           ; Name         Instructions Cycles
  8400                           ; simple_byte            7     4 (average)
  8401                           ;	Chosen strategy is simple_byte
  8402  018898  500B               	movf	(btemp+10)^0,w,c
  8403  01889A  0A00               	xorlw	0	; case 0
  8404  01889C  B4D8               	btfsc	status,2,c
  8405  01889E  D721               	goto	l13232
  8406  0188A0  0A01               	xorlw	1	; case 1
  8407  0188A2  D779               	goto	l13244
  8408  0188A4                     l2043:
  8409                           
  8410                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8411  0188A4  52E5               	movf	postdec1,f,c
  8412  0188A6  52E5               	movf	postdec1,f,c
  8413  0188A8  0012               	return		;funcret
  8414  0188AA                     __end_of_hid_display:
  8415                           	opt callstack 0
  8416                           
  8417 ;; *************** function _hid_input *****************
  8418 ;; Defined at:
  8419 ;;		line 3 in file "hid.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;  h               2  [STACK] PTR struct H_data
  8422 ;;		 -> H(7), 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;		None
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  2  [STACK] PTR struct H_data
  8427 ;; Registers used:
  8428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/39
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8438 ;;Total ram usage:        0 bytes
  8439 ;; Hardware stack levels used:    1
  8440 ;; Hardware stack levels required when called:   16
  8441 ;; This function calls:
  8442 ;;		_get_switch
  8443 ;; This function is called by:
  8444 ;;		_hid_display
  8445 ;; This function uses a reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text20
  8449  01A49A                     __ptext20:
  8450                           	opt callstack 0
  8451  01A49A                     _hid_input:
  8452                           	opt callstack 13
  8453                           
  8454                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8455                           
  8456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8457                           ;incstack = 0
  8458  01A49A  0E02               	movlw	2
  8459  01A49C  6EE6               	movwf	postinc1,c
  8460  01A49E  EC5F  F0DF         	call	_get_switch	;wreg free
  8461  01A4A2  5001               	movf	btemp^0,w,c
  8462  01A4A4  B4D8               	btfsc	status,2,c
  8463  01A4A6  D02C               	goto	l13072
  8464                           
  8465                           ;hid.c: 6:   h->wait_select = 0;
  8466                           ;stkvar	_h @ sp[(0)+-2]
  8467  01A4A8  0EFE               	movlw	-2
  8468  01A4AA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8469  01A4B0  0EFF               	movlw	-1
  8470  01A4B2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8471  01A4B8  0E02               	movlw	2
  8472  01A4BA  240B               	addwf	(btemp+10)^0,w,c
  8473  01A4BC  6ED9               	movwf	fsr2l,c
  8474  01A4BE  0E00               	movlw	0
  8475  01A4C0  200C               	addwfc	(btemp+11)^0,w,c
  8476  01A4C2  6EDA               	movwf	fsr2h,c
  8477  01A4C4  0E00               	movlw	0
  8478  01A4C6  6EDF               	movwf	indf2,c
  8479                           
  8480                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8481  01A4C8  0E02               	movlw	2
  8482  01A4CA  6EE6               	movwf	postinc1,c
  8483  01A4CC  EC5F  F0DF         	call	_get_switch	;wreg free
  8484  01A4D0  5001               	movf	btemp^0,w,c
  8485  01A4D2  B4D8               	btfsc	status,2,c
  8486  01A4D4  D003               	goto	u12490
  8487  01A4D6  6A0C               	clrf	(btemp+11)^0,c
  8488  01A4D8  2A0C               	incf	(btemp+11)^0,f,c
  8489  01A4DA  D001               	goto	u12508
  8490  01A4DC                     u12490:
  8491  01A4DC  6A0C               	clrf	(btemp+11)^0,c
  8492  01A4DE                     u12508:
  8493                           
  8494                           ;stkvar	_h @ sp[(0)+-2]
  8495  01A4DE  0EFE               	movlw	-2
  8496  01A4E0  006F FF8C  F009    	movff	plusw1,btemp+8
  8497  01A4E6  0EFF               	movlw	-1
  8498  01A4E8  006F FF8C  F00A    	movff	plusw1,btemp+9
  8499  01A4EE  0E03               	movlw	3
  8500  01A4F0  2409               	addwf	(btemp+8)^0,w,c
  8501  01A4F2  6ED9               	movwf	fsr2l,c
  8502  01A4F4  0E00               	movlw	0
  8503  01A4F6  200A               	addwfc	(btemp+9)^0,w,c
  8504  01A4F8  6EDA               	movwf	fsr2h,c
  8505  01A4FA  0060  F033  FFDF   	movff	btemp+11,indf2
  8506  01A500                     l13072:
  8507                           
  8508                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8509  01A500  0E03               	movlw	3
  8510  01A502  6EE6               	movwf	postinc1,c
  8511  01A504  EC5F  F0DF         	call	_get_switch	;wreg free
  8512  01A508  5001               	movf	btemp^0,w,c
  8513  01A50A  B4D8               	btfsc	status,2,c
  8514  01A50C  D02C               	goto	l2034
  8515                           
  8516                           ;hid.c: 11:   h->wait_enter = 0;
  8517                           ;stkvar	_h @ sp[(0)+-2]
  8518  01A50E  0EFE               	movlw	-2
  8519  01A510  006F FF8C  F00B    	movff	plusw1,btemp+10
  8520  01A516  0EFF               	movlw	-1
  8521  01A518  006F FF8C  F00C    	movff	plusw1,btemp+11
  8522  01A51E  0E04               	movlw	4
  8523  01A520  240B               	addwf	(btemp+10)^0,w,c
  8524  01A522  6ED9               	movwf	fsr2l,c
  8525  01A524  0E00               	movlw	0
  8526  01A526  200C               	addwfc	(btemp+11)^0,w,c
  8527  01A528  6EDA               	movwf	fsr2h,c
  8528  01A52A  0E00               	movlw	0
  8529  01A52C  6EDF               	movwf	indf2,c
  8530                           
  8531                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8532  01A52E  0E03               	movlw	3
  8533  01A530  6EE6               	movwf	postinc1,c
  8534  01A532  EC5F  F0DF         	call	_get_switch	;wreg free
  8535  01A536  5001               	movf	btemp^0,w,c
  8536  01A538  B4D8               	btfsc	status,2,c
  8537  01A53A  D003               	goto	u12520
  8538  01A53C  6A0C               	clrf	(btemp+11)^0,c
  8539  01A53E  2A0C               	incf	(btemp+11)^0,f,c
  8540  01A540  D001               	goto	u12538
  8541  01A542                     u12520:
  8542  01A542  6A0C               	clrf	(btemp+11)^0,c
  8543  01A544                     u12538:
  8544                           
  8545                           ;stkvar	_h @ sp[(0)+-2]
  8546  01A544  0EFE               	movlw	-2
  8547  01A546  006F FF8C  F009    	movff	plusw1,btemp+8
  8548  01A54C  0EFF               	movlw	-1
  8549  01A54E  006F FF8C  F00A    	movff	plusw1,btemp+9
  8550  01A554  0E05               	movlw	5
  8551  01A556  2409               	addwf	(btemp+8)^0,w,c
  8552  01A558  6ED9               	movwf	fsr2l,c
  8553  01A55A  0E00               	movlw	0
  8554  01A55C  200A               	addwfc	(btemp+9)^0,w,c
  8555  01A55E  6EDA               	movwf	fsr2h,c
  8556  01A560  0060  F033  FFDF   	movff	btemp+11,indf2
  8557  01A566                     l2034:
  8558                           
  8559                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8560  01A566  52E5               	movf	postdec1,f,c
  8561  01A568  52E5               	movf	postdec1,f,c
  8562  01A56A  0012               	return		;funcret
  8563  01A56C                     __end_of_hid_input:
  8564                           	opt callstack 0
  8565                           
  8566 ;; *************** function _get_switch *****************
  8567 ;; Defined at:
  8568 ;;		line 18 in file "dio.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  i               1  [STACK] const unsigned char 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1  [STACK] enum E17021
  8575 ;; Registers used:
  8576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/39
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:   15
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_main
  8593 ;;		_hid_input
  8594 ;; This function uses a reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text21
  8598  01BEBE                     __ptext21:
  8599                           	opt callstack 0
  8600  01BEBE                     _get_switch:
  8601                           	opt callstack 13
  8602                           
  8603                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  8604                           ;stkvar	_i @ sp[(0)+-1]
  8605                           
  8606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8607                           ;incstack = 0
  8608  01BEBE  0EFF               	movlw	-1
  8609  01BEC0  006F FF8C  F001    	movff	plusw1,btemp
  8610  01BEC6  0E03               	movlw	3
  8611  01BEC8  6401               	cpfsgt	btemp^0,c
  8612  01BECA  D002               	goto	l10090
  8613                           
  8614                           ;dio.c: 21:   return SW_OFF;
  8615  01BECC  0E00               	movlw	0
  8616  01BECE  D00A               	goto	L5
  8617  01BED0                     l10090:
  8618                           
  8619                           ;dio.c: 23:  return S.button[i].sw;
  8620                           ;stkvar	_i @ sp[(0)+-1]
  8621  01BED0  0EFF               	movlw	-1
  8622  01BED2  50E3               	movf	plusw1,w,c
  8623  01BED4  0D05               	mullw	5
  8624  01BED6  0E54               	movlw	low _S
  8625  01BED8  24F3               	addwf	243,w,c
  8626  01BEDA  6ED9               	movwf	fsr2l,c
  8627  01BEDC  0E02               	movlw	high _S
  8628  01BEDE  20F4               	addwfc	prodh,w,c
  8629  01BEE0  6EDA               	movwf	fsr2h,c
  8630  01BEE2  50DF               	movf	indf2,w,c
  8631  01BEE4                     L5:
  8632  01BEE4  6E01               	movwf	btemp^0,c
  8633                           
  8634                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8635  01BEE6  52E5               	movf	postdec1,f,c
  8636  01BEE8  0012               	return		;funcret
  8637  01BEEA                     __end_of_get_switch:
  8638                           	opt callstack 0
  8639                           
  8640 ;; *************** function _esr_check *****************
  8641 ;; Defined at:
  8642 ;;		line 196 in file "bsoc.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  fsm             1  [STACK] const unsigned char 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;		None
  8647 ;; Return value:  Size  Location     Type
  8648 ;;                  4  [STACK] float 
  8649 ;; Registers used:
  8650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8651 ;; Tracked objects:
  8652 ;;		On entry : 0/0
  8653 ;;		On exit  : 0/0
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8660 ;;Total ram usage:        0 bytes
  8661 ;; Hardware stack levels used:    1
  8662 ;; Hardware stack levels required when called:   18
  8663 ;; This function calls:
  8664 ;;		_StartTimer
  8665 ;;		_TimerDone
  8666 ;;		___fldiv
  8667 ;;		___flsub
  8668 ;;		_conv_raw_result
  8669 ;;		_fabsf
  8670 ;;		_set_load_relay_one
  8671 ;;		_set_load_relay_two
  8672 ;;		_update_adc_result
  8673 ;; This function is called by:
  8674 ;;		_main
  8675 ;; This function uses a reentrant model
  8676 ;;
  8677                           
  8678                           	psect	text22
  8679  017188                     __ptext22:
  8680                           	opt callstack 0
  8681  017188                     _esr_check:
  8682                           	opt callstack 12
  8683                           
  8684                           ;bsoc.c: 196: float esr_check(const uint8_t fsm);bsoc.c: 197: {;bsoc.c: 198:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 200:  if (fsm) {
  8685                           ;stkvar	_fsm @ sp[(0)+-1]
  8686                           
  8687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8688                           ;incstack = 0
  8689  017188  0EFF               	movlw	-1
  8690  01718A  50E3               	movf	plusw1,w,c
  8691  01718C  B4D8               	btfsc	status,2,c
  8692  01718E  D149               	goto	l11192
  8693                           
  8694                           ;bsoc.c: 201:   esr_state = 0;
  8695  017190  0100               	movlb	0	; () banked
  8696  017192  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;bsoc.c: 202:   return -10.0;
  8700  017194  0E00               	movlw	0
  8701  017196  6E01               	movwf	btemp^0,c
  8702  017198  0E00               	movlw	0
  8703  01719A  6E02               	movwf	(btemp+1)^0,c
  8704  01719C  0E20               	movlw	32
  8705  01719E  6E03               	movwf	(btemp+2)^0,c
  8706  0171A0  0EC1               	movlw	193
  8707  0171A2  D15B               	goto	L6
  8708  0171A4                     l11124:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;bsoc.c: 207:   StartTimer(TMR_ESR, 10000);
  8712  0171A4  0E10               	movlw	16
  8713  0171A6  6EE6               	movwf	postinc1,c
  8714  0171A8  0E27               	movlw	39
  8715  0171AA  6EE6               	movwf	postinc1,c
  8716  0171AC  0E0C               	movlw	12
  8717  0171AE  6EE6               	movwf	postinc1,c
  8718  0171B0  EC76  F0DD         	call	_StartTimer	;wreg free
  8719  0171B4                     l11126:
  8720                           
  8721                           ;bsoc.c: 208:   esr_state++;
  8722  0171B4  0100               	movlb	0	; () banked
  8723  0171B6  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8724                           
  8725                           ;bsoc.c: 209:   break;
  8726  0171B8  D149               	goto	l11194
  8727  0171BA                     l11128:
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;bsoc.c: 214:   set_load_relay_one(0);
  8731  0171BA  0E00               	movlw	0
  8732  0171BC  6EE6               	movwf	postinc1,c
  8733  0171BE  EC5D  F0E2         	call	_set_load_relay_one	;wreg free
  8734                           
  8735                           ;bsoc.c: 215:   set_load_relay_two(0);
  8736  0171C2  0E00               	movlw	0
  8737  0171C4  6EE6               	movwf	postinc1,c
  8738  0171C6  EC55  F0E2         	call	_set_load_relay_two	;wreg free
  8739                           
  8740                           ;bsoc.c: 216:   if (TimerDone(TMR_ESR)) {
  8741  0171CA  0E0C               	movlw	12
  8742  0171CC  6EE6               	movwf	postinc1,c
  8743  0171CE  ECCB  F0DF         	call	_TimerDone	;wreg free
  8744  0171D2  5001               	movf	btemp^0,w,c
  8745  0171D4  B4D8               	btfsc	status,2,c
  8746  0171D6  D009               	goto	l11134
  8747                           
  8748                           ;bsoc.c: 217:    StartTimer(TMR_ESR, 10000);
  8749  0171D8  0E10               	movlw	16
  8750  0171DA  6EE6               	movwf	postinc1,c
  8751  0171DC  0E27               	movlw	39
  8752  0171DE  6EE6               	movwf	postinc1,c
  8753  0171E0  0E0C               	movlw	12
  8754  0171E2  6EE6               	movwf	postinc1,c
  8755  0171E4  EC76  F0DD         	call	_StartTimer	;wreg free
  8756                           
  8757                           ;bsoc.c: 218:   } else {
  8758  0171E8  D006               	goto	l11138
  8759  0171EA                     l11134:
  8760                           
  8761                           ;bsoc.c: 219:    return -2.0;
  8762  0171EA  0E00               	movlw	0
  8763  0171EC  6E01               	movwf	btemp^0,c
  8764  0171EE  0E00               	movlw	0
  8765  0171F0  6E02               	movwf	(btemp+1)^0,c
  8766  0171F2  0E00               	movlw	0
  8767  0171F4  D066               	goto	L8
  8768  0171F6                     l11138:
  8769                           
  8770                           ;bsoc.c: 224:   update_adc_result();
  8771  0171F6  ECF5  F0DD         	call	_update_adc_result	;wreg free
  8772                           
  8773                           ;bsoc.c: 225:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8774  0171FA  0E00               	movlw	0
  8775  0171FC  6EE6               	movwf	postinc1,c
  8776  0171FE  0E04               	movlw	4
  8777  017200  6EE6               	movwf	postinc1,c
  8778  017202  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8779  017206  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8780  01720C  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8781  017212  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8782  017218  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8783  01721E  D7CA               	goto	l11126
  8784  017220                     l11144:
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;bsoc.c: 229:   set_load_relay_one(1);
  8788  017220  0E01               	movlw	1
  8789  017222  6EE6               	movwf	postinc1,c
  8790  017224  EC5D  F0E2         	call	_set_load_relay_one	;wreg free
  8791                           
  8792                           ;bsoc.c: 230:   if (TimerDone(TMR_ESR)) {
  8793  017228  0E0C               	movlw	12
  8794  01722A  6EE6               	movwf	postinc1,c
  8795  01722C  ECCB  F0DF         	call	_TimerDone	;wreg free
  8796  017230  5001               	movf	btemp^0,w,c
  8797  017232  B4D8               	btfsc	status,2,c
  8798  017234  D009               	goto	l11150
  8799                           
  8800                           ;bsoc.c: 231:    StartTimer(TMR_ESR, 10000);
  8801  017236  0E10               	movlw	16
  8802  017238  6EE6               	movwf	postinc1,c
  8803  01723A  0E27               	movlw	39
  8804  01723C  6EE6               	movwf	postinc1,c
  8805  01723E  0E0C               	movlw	12
  8806  017240  6EE6               	movwf	postinc1,c
  8807  017242  EC76  F0DD         	call	_StartTimer	;wreg free
  8808                           
  8809                           ;bsoc.c: 232:   } else {
  8810  017246  D006               	goto	l11154
  8811  017248                     l11150:
  8812                           
  8813                           ;bsoc.c: 233:    return -3.0;
  8814  017248  0E00               	movlw	0
  8815  01724A  6E01               	movwf	btemp^0,c
  8816  01724C  0E00               	movlw	0
  8817  01724E  6E02               	movwf	(btemp+1)^0,c
  8818  017250  0E40               	movlw	64
  8819  017252  D037               	goto	L8
  8820  017254                     l11154:
  8821                           
  8822                           ;bsoc.c: 236:   update_adc_result();
  8823  017254  ECF5  F0DD         	call	_update_adc_result	;wreg free
  8824                           
  8825                           ;bsoc.c: 237:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8826  017258  0E00               	movlw	0
  8827  01725A  6EE6               	movwf	postinc1,c
  8828  01725C  0E04               	movlw	4
  8829  01725E  6EE6               	movwf	postinc1,c
  8830  017260  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8831  017264  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8832  01726A  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8833  017270  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8834  017276  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8835                           
  8836                           ;bsoc.c: 238:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8837  01727C  0E00               	movlw	0
  8838  01727E  6EE6               	movwf	postinc1,c
  8839  017280  0E00               	movlw	0
  8840  017282  6EE6               	movwf	postinc1,c
  8841  017284  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8842  017288  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8843  01728E  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8844  017294  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8845  01729A  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8846  0172A0  D789               	goto	l11126
  8847  0172A2                     l11162:
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;bsoc.c: 242:   set_load_relay_two(1);
  8851  0172A2  0E01               	movlw	1
  8852  0172A4  6EE6               	movwf	postinc1,c
  8853  0172A6  EC55  F0E2         	call	_set_load_relay_two	;wreg free
  8854                           
  8855                           ;bsoc.c: 243:   if (!TimerDone(TMR_ESR))
  8856  0172AA  0E0C               	movlw	12
  8857  0172AC  6EE6               	movwf	postinc1,c
  8858  0172AE  ECCB  F0DF         	call	_TimerDone	;wreg free
  8859  0172B2  5001               	movf	btemp^0,w,c
  8860  0172B4  A4D8               	btfss	status,2,c
  8861  0172B6  D008               	goto	l11170
  8862                           
  8863                           ;bsoc.c: 244:    return -4.0;
  8864  0172B8  0E00               	movlw	0
  8865  0172BA  6E01               	movwf	btemp^0,c
  8866  0172BC  0E00               	movlw	0
  8867  0172BE  6E02               	movwf	(btemp+1)^0,c
  8868  0172C0  0E80               	movlw	128
  8869  0172C2                     L8:
  8870  0172C2  6E03               	movwf	(btemp+2)^0,c
  8871  0172C4  0EC0               	movlw	192
  8872  0172C6  D0C9               	goto	L6
  8873  0172C8                     l11170:
  8874                           
  8875                           ;bsoc.c: 246:   update_adc_result();
  8876  0172C8  ECF5  F0DD         	call	_update_adc_result	;wreg free
  8877                           
  8878                           ;bsoc.c: 247:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8879  0172CC  0E00               	movlw	0
  8880  0172CE  6EE6               	movwf	postinc1,c
  8881  0172D0  0E04               	movlw	4
  8882  0172D2  6EE6               	movwf	postinc1,c
  8883  0172D4  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8884  0172D8  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8885  0172DE  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8886  0172E4  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8887  0172EA  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8888                           
  8889                           ;bsoc.c: 248:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8890  0172F0  0E00               	movlw	0
  8891  0172F2  6EE6               	movwf	postinc1,c
  8892  0172F4  0E00               	movlw	0
  8893  0172F6  6EE6               	movwf	postinc1,c
  8894  0172F8  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8895  0172FC  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8896  017302  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8897  017308  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8898  01730E  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8899                           
  8900                           ;bsoc.c: 250:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8901  017314  EE22  F011         	lfsr	2,_C+274	;volatile
  8902  017318  006F FF7B FFE6     	movff	postinc2,postinc1
  8903  01731E  006F FF7B FFE6     	movff	postinc2,postinc1
  8904  017324  006F FF7B FFE6     	movff	postinc2,postinc1
  8905  01732A  006F FF7B FFE6     	movff	postinc2,postinc1
  8906  017330  EE22  F00D         	lfsr	2,_C+270	;volatile
  8907  017334  006F FF7B FFE6     	movff	postinc2,postinc1
  8908  01733A  006F FF7B FFE6     	movff	postinc2,postinc1
  8909  017340  006F FF7B FFE6     	movff	postinc2,postinc1
  8910  017346  006F FF7B FFE6     	movff	postinc2,postinc1
  8911  01734C  ECD0  F0DC         	call	___flsub	;wreg free
  8912  017350  0060  F007  FFE6   	movff	btemp,postinc1
  8913  017356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8914  01735C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8915  017362  0060  F013  FFE6   	movff	btemp+3,postinc1
  8916  017368  EE22  F01D         	lfsr	2,_C+286	;volatile
  8917  01736C  006F FF7B FFE6     	movff	postinc2,postinc1
  8918  017372  006F FF7B FFE6     	movff	postinc2,postinc1
  8919  017378  006F FF7B FFE6     	movff	postinc2,postinc1
  8920  01737E  006F FF7B FFE6     	movff	postinc2,postinc1
  8921  017384  EE22  F019         	lfsr	2,_C+282	;volatile
  8922  017388  006F FF7B FFE6     	movff	postinc2,postinc1
  8923  01738E  006F FF7B FFE6     	movff	postinc2,postinc1
  8924  017394  006F FF7B FFE6     	movff	postinc2,postinc1
  8925  01739A  006F FF7B FFE6     	movff	postinc2,postinc1
  8926  0173A0  ECD0  F0DC         	call	___flsub	;wreg free
  8927  0173A4  0060  F007  FFE6   	movff	btemp,postinc1
  8928  0173AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8929  0173B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8930  0173B6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8931  0173BC  ECD8  F0A6         	call	___fldiv	;wreg free
  8932  0173C0  0060  F007  FFE6   	movff	btemp,postinc1
  8933  0173C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8934  0173CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8935  0173D2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8936  0173D8  EC38  F0D4         	call	_fabsf	;wreg free
  8937  0173DC  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8938  0173E2  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8939  0173E8  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8940  0173EE  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8941                           
  8942                           ;bsoc.c: 251:   set_load_relay_one(0);
  8943  0173F4  0E00               	movlw	0
  8944  0173F6  6EE6               	movwf	postinc1,c
  8945  0173F8  EC5D  F0E2         	call	_set_load_relay_one	;wreg free
  8946                           
  8947                           ;bsoc.c: 252:   set_load_relay_two(0);
  8948  0173FC  0E00               	movlw	0
  8949  0173FE  6EE6               	movwf	postinc1,c
  8950  017400  EC55  F0E2         	call	_set_load_relay_two	;wreg free
  8951                           
  8952                           ;bsoc.c: 253:   esr_state = 0;
  8953  017404  0100               	movlb	0	; () banked
  8954  017406  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;bsoc.c: 254:   return C.esr;
  8958  017408  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8959  01740E  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8960  017414  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8961  01741A  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8962  017420  D01D               	goto	l2155
  8963  017422                     l11192:
  8964  017422  0100               	movlb	0	; () banked
  8965  017424  51A4               	movf	esr_check@esr_state& (0+255),w,b
  8966  017426  6E0B               	movwf	(btemp+10)^0,c
  8967  017428  6A0C               	clrf	(btemp+11)^0,c
  8968                           
  8969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8970                           ; Switch size 1, requested type "simple"
  8971                           ; Number of cases is 1, Range of values is 0 to 0
  8972                           ; switch strategies available:
  8973                           ; Name         Instructions Cycles
  8974                           ; simple_byte            4     3 (average)
  8975                           ;	Chosen strategy is simple_byte
  8976  01742A  500C               	movf	(btemp+11)^0,w,c
  8977  01742C  0A00               	xorlw	0	; case 0
  8978  01742E  A4D8               	btfss	status,2,c
  8979  017430  D00D               	goto	l11194
  8980                           
  8981                           ; BSR set to: 0
  8982                           ; Switch size 1, requested type "simple"
  8983                           ; Number of cases is 4, Range of values is 0 to 3
  8984                           ; switch strategies available:
  8985                           ; Name         Instructions Cycles
  8986                           ; simple_byte           13     7 (average)
  8987                           ;	Chosen strategy is simple_byte
  8988  017432  500B               	movf	(btemp+10)^0,w,c
  8989  017434  0A00               	xorlw	0	; case 0
  8990  017436  B4D8               	btfsc	status,2,c
  8991  017438  D6B5               	goto	l11124
  8992  01743A  0A01               	xorlw	1	; case 1
  8993  01743C  B4D8               	btfsc	status,2,c
  8994  01743E  D6BD               	goto	l11128
  8995  017440  0A03               	xorlw	3	; case 2
  8996  017442  B4D8               	btfsc	status,2,c
  8997  017444  D6ED               	goto	l11144
  8998  017446  0A01               	xorlw	1	; case 3
  8999  017448  B4D8               	btfsc	status,2,c
  9000  01744A  D72B               	goto	l11162
  9001  01744C                     l11194:
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;bsoc.c: 259:  return -1.0;
  9005  01744C  0E00               	movlw	0
  9006  01744E  6E01               	movwf	btemp^0,c
  9007  017450  0E00               	movlw	0
  9008  017452  6E02               	movwf	(btemp+1)^0,c
  9009  017454  0E80               	movlw	128
  9010  017456  6E03               	movwf	(btemp+2)^0,c
  9011  017458  0EBF               	movlw	191
  9012  01745A                     L6:
  9013  01745A  6E04               	movwf	(btemp+3)^0,c
  9014  01745C                     l2155:
  9015                           
  9016                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9017  01745C  52E5               	movf	postdec1,f,c
  9018  01745E  0012               	return		;funcret
  9019  017460                     __end_of_esr_check:
  9020                           	opt callstack 0
  9021                           
  9022 ;; *************** function _update_adc_result *****************
  9023 ;; Defined at:
  9024 ;;		line 96 in file "daq.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;		None
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;		None
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1  [STACK] _Bool 
  9031 ;; Registers used:
  9032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9042 ;;Total ram usage:        0 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; Hardware stack levels required when called:   17
  9045 ;; This function calls:
  9046 ;;		_StartTimer
  9047 ;;		_TimerDone
  9048 ;;		_check_adc_scan
  9049 ;;		_clear_adc_scan
  9050 ;;		_start_adc_scan
  9051 ;; This function is called by:
  9052 ;;		_esr_check
  9053 ;; This function uses a reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text23
  9057  01BBEA                     __ptext23:
  9058                           	opt callstack 0
  9059  01BBEA                     _update_adc_result:
  9060                           	opt callstack 12
  9061                           
  9062                           ;daq.c: 98:  if (R.done) {
  9063                           
  9064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9065                           ;incstack = 0
  9066  01BBEA  0100               	movlb	0	; () banked
  9067  01BBEC  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9068  01BBEE  B4D8               	btfsc	status,2,c
  9069  01BBF0  0012               	return	
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;daq.c: 99:   clear_adc_scan();
  9073  01BBF2  ECC9  F0E2         	call	_clear_adc_scan	;wreg free
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;daq.c: 100:   start_adc_scan();
  9077  01BBF6  ECEC  F0D9         	call	_start_adc_scan	;wreg free
  9078                           
  9079                           ;daq.c: 101:   StartTimer(TMR_ADC, 200);
  9080  01BBFA  0EC8               	movlw	200
  9081  01BBFC  6EE6               	movwf	postinc1,c
  9082  01BBFE  0E00               	movlw	0
  9083  01BC00  6EE6               	movwf	postinc1,c
  9084  01BC02  0E01               	movlw	1
  9085  01BC04  6EE6               	movwf	postinc1,c
  9086  01BC06  EC76  F0DD         	call	_StartTimer	;wreg free
  9087  01BC0A                     l10670:
  9088  01BC0A  0E01               	movlw	1
  9089  01BC0C  6EE6               	movwf	postinc1,c
  9090  01BC0E  ECCB  F0DF         	call	_TimerDone	;wreg free
  9091  01BC12  5001               	movf	btemp^0,w,c
  9092  01BC14  A4D8               	btfss	status,2,c
  9093  01BC16  0012               	return	
  9094  01BC18  ECB9  F0E2         	call	_check_adc_scan	;wreg free
  9095  01BC1C  5001               	movf	btemp^0,w,c
  9096  01BC1E  A4D8               	btfss	status,2,c
  9097  01BC20  0012               	return	
  9098  01BC22  D7F3               	goto	l10670
  9099  01BC24                     __end_of_update_adc_result:
  9100                           	opt callstack 0
  9101                           
  9102 ;; *************** function _start_adc_scan *****************
  9103 ;; Defined at:
  9104 ;;		line 57 in file "daq.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;		None
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1  [STACK] _Bool 
  9111 ;; Registers used:
  9112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 1/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9122 ;;Total ram usage:        0 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:   16
  9125 ;; This function calls:
  9126 ;;		_ADCC_DischargeSampleCapacitor
  9127 ;;		_ADCC_SetADIInterruptHandler
  9128 ;;		_ADCC_SetADTIInterruptHandler
  9129 ;;		_ADCC_StartConversion
  9130 ;; This function is called by:
  9131 ;;		_main
  9132 ;;		_update_adc_result
  9133 ;; This function uses a reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text24
  9137  01B3D8                     __ptext24:
  9138                           	opt callstack 0
  9139  01B3D8                     _start_adc_scan:
  9140                           	opt callstack 14
  9141                           
  9142                           ;daq.c: 59:  if (R.done)
  9143                           
  9144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9145                           ;incstack = 0
  9146  01B3D8  0100               	movlb	0	; () banked
  9147  01B3DA  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9148  01B3DC  A4D8               	btfss	status,2,c
  9149  01B3DE  0012               	return	
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;daq.c: 62:  R.scan_index = 0;
  9153  01B3E0  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;daq.c: 63:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9157  01B3E2  013A               	movlb	58	; () banked
  9158  01B3E4  5140               	movf	64,w,b	;volatile
  9159  01B3E6  006E F940  F001    	movff	14928,btemp	;volatile
  9160  01B3EC  6A02               	clrf	(btemp+1)^0,c
  9161  01B3EE  0060  F004  F002   	movff	btemp,btemp+1
  9162  01B3F4  6A01               	clrf	btemp^0,c
  9163  01B3F6  2601               	addwf	btemp^0,f,c
  9164  01B3F8  0E00               	movlw	0
  9165  01B3FA  2202               	addwfc	(btemp+1)^0,f,c
  9166  01B3FC  0E77               	movlw	119
  9167  01B3FE  1401               	andwf	btemp^0,w,c
  9168  01B400  0100               	movlb	0	; () banked
  9169  01B402  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9170  01B404  0E3C               	movlw	60
  9171  01B406  1402               	andwf	(btemp+1)^0,w,c
  9172  01B408  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;daq.c: 64:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9176  01B40A  0EBA               	movlw	low _adc_int_handler
  9177  01B40C  6EE6               	movwf	postinc1,c
  9178  01B40E  0EC5               	movlw	high _adc_int_handler
  9179  01B410  6EE6               	movwf	postinc1,c
  9180  01B412  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9181  01B414  6EE6               	movwf	postinc1,c
  9182  01B416  EC93  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9183                           
  9184                           ;daq.c: 65:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9185  01B41A  0E56               	movlw	low _adc_int_t_handler
  9186  01B41C  6EE6               	movwf	postinc1,c
  9187  01B41E  0EB0               	movlw	high _adc_int_t_handler
  9188  01B420  6EE6               	movwf	postinc1,c
  9189  01B422  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9190  01B424  6EE6               	movwf	postinc1,c
  9191  01B426  EC7F  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9192                           
  9193                           ;daq.c: 66:  ADCC_DischargeSampleCapacitor();
  9194  01B42A  ECB5  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9195                           
  9196                           ; BSR set to: 62
  9197                           ;daq.c: 67:  ADCC_StartConversion(R.scan_index & 0xf);
  9198  01B42E  0100               	movlb	0	; () banked
  9199  01B430  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9200  01B432  0B0F               	andlw	15
  9201  01B434  6EE6               	movwf	postinc1,c
  9202  01B436  EC4C  F0E2         	call	_ADCC_StartConversion	;wreg free
  9203                           
  9204                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9205  01B43A  0012               	return		;funcret
  9206  01B43C                     __end_of_start_adc_scan:
  9207                           	opt callstack 0
  9208                           
  9209 ;; *************** function _ADCC_StartConversion *****************
  9210 ;; Defined at:
  9211 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  channel         1  [STACK] enum E16136
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1  [STACK] void 
  9218 ;; Registers used:
  9219 ;;		fsr1l, fsr1h
  9220 ;; Tracked objects:
  9221 ;;		On entry : 3F/0
  9222 ;;		On exit  : 3F/3E
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9229 ;;Total ram usage:        0 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:   15
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_start_adc_scan
  9236 ;;		_adc_int_t_handler
  9237 ;; This function uses a reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text25
  9241  01C498                     __ptext25:
  9242                           	opt callstack 0
  9243  01C498                     _ADCC_StartConversion:
  9244                           	opt callstack 0
  9245                           
  9246                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9247                           ;stkvar	_channel @ sp[(0)+-1]
  9248                           
  9249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9250                           ;incstack = 0
  9251 ;; hardware stack exceeded
  9252  01C498  0EFF               	movlw	-1
  9253  01C49A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9254                           
  9255                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9256  01C4A0  013E               	movlb	62	; () banked
  9257  01C4A2  8FF8               	bsf	248,7,b	;volatile
  9258                           
  9259                           ; BSR set to: 62
  9260                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9261  01C4A4  81F8               	bsf	248,0,b	;volatile
  9262                           
  9263                           ; BSR set to: 62
  9264                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9265  01C4A6  52E5               	movf	postdec1,f,c
  9266  01C4A8  0012               	return		;funcret
  9267  01C4AA                     __end_of_ADCC_StartConversion:
  9268                           	opt callstack 0
  9269                           
  9270 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9271 ;; Defined at:
  9272 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;		None
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1  [STACK] void 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 3F/3E
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;Total ram usage:        0 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:   15
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_start_adc_scan
  9297 ;;		_adc_int_t_handler
  9298 ;; This function uses a reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text26
  9302  01C56A                     __ptext26:
  9303                           	opt callstack 0
  9304  01C56A                     _ADCC_DischargeSampleCapacitor:
  9305                           	opt callstack 0
  9306                           
  9307                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9308                           
  9309                           ; BSR set to: 62
  9310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9311                           ;incstack = 0
  9312 ;; hardware stack exceeded
  9313  01C56A  0E3B               	movlw	59
  9314  01C56C  013E               	movlb	62	; () banked
  9315  01C56E  6FF1               	movwf	241,b	;volatile
  9316                           
  9317                           ; BSR set to: 62
  9318                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9319  01C570  0012               	return		;funcret
  9320  01C572                     __end_of_ADCC_DischargeSampleCapacitor:
  9321                           	opt callstack 0
  9322                           
  9323 ;; *************** function _clear_adc_scan *****************
  9324 ;; Defined at:
  9325 ;;		line 88 in file "daq.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;		None
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;		None
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  1  [STACK] void 
  9332 ;; Registers used:
  9333 ;;		None
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 3F/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9343 ;;Total ram usage:        0 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:   15
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_main
  9350 ;;		_update_adc_result
  9351 ;; This function uses a reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text27
  9355  01C592                     __ptext27:
  9356                           	opt callstack 0
  9357  01C592                     _clear_adc_scan:
  9358                           	opt callstack 13
  9359                           
  9360                           ;daq.c: 90:  R.done = 0;
  9361                           
  9362                           ; BSR set to: 62
  9363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9364                           ;incstack = 0
  9365  01C592  0100               	movlb	0	; () banked
  9366  01C594  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9367                           
  9368                           ; BSR set to: 0
  9369                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9370  01C596  0012               	return		;funcret
  9371  01C598                     __end_of_clear_adc_scan:
  9372                           	opt callstack 0
  9373                           
  9374 ;; *************** function _check_adc_scan *****************
  9375 ;; Defined at:
  9376 ;;		line 80 in file "daq.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1  [STACK] _Bool 
  9383 ;; Registers used:
  9384 ;;		btemp
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/1
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:   15
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_main
  9401 ;;		_update_adc_result
  9402 ;; This function uses a reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text28
  9406  01C572                     __ptext28:
  9407                           	opt callstack 0
  9408  01C572                     _check_adc_scan:
  9409                           	opt callstack 13
  9410                           
  9411                           ;daq.c: 82:  return R.done;
  9412                           
  9413                           ; BSR set to: 0
  9414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9415                           ;incstack = 0
  9416  01C572  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9417                           
  9418                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9419  01C578  0012               	return		;funcret
  9420  01C57A                     __end_of_check_adc_scan:
  9421                           	opt callstack 0
  9422                           
  9423 ;; *************** function _set_load_relay_two *****************
  9424 ;; Defined at:
  9425 ;;		line 130 in file "mbmc.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;  mode            1  [STACK] const _Bool 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1  [STACK] void 
  9432 ;; Registers used:
  9433 ;;		wreg, fsr1l, fsr1h
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;Total ram usage:        0 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:   15
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_main
  9450 ;;		_esr_check
  9451 ;; This function uses a reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text29
  9455  01C4AA                     __ptext29:
  9456                           	opt callstack 0
  9457  01C4AA                     _set_load_relay_two:
  9458                           	opt callstack 15
  9459                           
  9460                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9461                           ;stkvar	_mode @ sp[(0)+-1]
  9462                           
  9463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9464                           ;incstack = 0
  9465  01C4AA  0EFF               	movlw	-1
  9466  01C4AC  B0E3               	btfsc	plusw1,0,c
  9467  01C4AE  D002               	bra	u9605
  9468  01C4B0  9ABD               	bcf	189,5,c	;volatile
  9469  01C4B2  D001               	bra	u9606
  9470  01C4B4                     u9605:
  9471  01C4B4  8ABD               	bsf	189,5,c	;volatile
  9472  01C4B6                     u9606:
  9473                           
  9474                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9475  01C4B6  52E5               	movf	postdec1,f,c
  9476  01C4B8  0012               	return		;funcret
  9477  01C4BA                     __end_of_set_load_relay_two:
  9478                           	opt callstack 0
  9479                           
  9480 ;; *************** function _set_load_relay_one *****************
  9481 ;; Defined at:
  9482 ;;		line 125 in file "mbmc.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;  mode            1  [STACK] const _Bool 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;		None
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1  [STACK] void 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr1l, fsr1h
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9500 ;;Total ram usage:        0 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:   15
  9503 ;; This function calls:
  9504 ;;		Nothing
  9505 ;; This function is called by:
  9506 ;;		_main
  9507 ;;		_esr_check
  9508 ;; This function uses a reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text30
  9512  01C4BA                     __ptext30:
  9513                           	opt callstack 0
  9514  01C4BA                     _set_load_relay_one:
  9515                           	opt callstack 15
  9516                           
  9517                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9518                           ;stkvar	_mode @ sp[(0)+-1]
  9519                           
  9520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9521                           ;incstack = 0
  9522  01C4BA  0EFF               	movlw	-1
  9523  01C4BC  B0E3               	btfsc	plusw1,0,c
  9524  01C4BE  D002               	bra	u9595
  9525  01C4C0  98BD               	bcf	189,4,c	;volatile
  9526  01C4C2  D001               	bra	u9596
  9527  01C4C4                     u9595:
  9528  01C4C4  88BD               	bsf	189,4,c	;volatile
  9529  01C4C6                     u9596:
  9530                           
  9531                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9532  01C4C6  52E5               	movf	postdec1,f,c
  9533  01C4C8  0012               	return		;funcret
  9534  01C4CA                     __end_of_set_load_relay_one:
  9535                           	opt callstack 0
  9536                           
  9537 ;; *************** function _eaDogM_WriteCommand *****************
  9538 ;; Defined at:
  9539 ;;		line 385 in file "eadog.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  cmd             1  [STACK] const unsigned char 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;		None
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1  [STACK] void 
  9546 ;; Registers used:
  9547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9548 ;; Tracked objects:
  9549 ;;		On entry : 3F/3D
  9550 ;;		On exit  : 3F/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9557 ;;Total ram usage:        0 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; Hardware stack levels required when called:   26
  9560 ;; This function calls:
  9561 ;;		_send_lcd_cmd_dma
  9562 ;; This function is called by:
  9563 ;;		_main
  9564 ;; This function uses a reentrant model
  9565 ;;
  9566                           
  9567                           	psect	text31
  9568  01C4EA                     __ptext31:
  9569                           	opt callstack 0
  9570  01C4EA                     _eaDogM_WriteCommand:
  9571                           	opt callstack 4
  9572                           
  9573                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9574                           ;stkvar	_cmd @ sp[(0)+-1]
  9575                           
  9576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9577                           ;incstack = 0
  9578  01C4EA  0EFF               	movlw	-1
  9579  01C4EC  50E3               	movf	plusw1,w,c
  9580  01C4EE  6EE6               	movwf	postinc1,c
  9581  01C4F0  ECB2  F0E1         	call	_send_lcd_cmd_dma	;wreg free
  9582                           
  9583                           ; BSR set to: 0
  9584                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9585  01C4F4  52E5               	movf	postdec1,f,c
  9586  01C4F6  0012               	return		;funcret
  9587  01C4F8                     __end_of_eaDogM_WriteCommand:
  9588                           	opt callstack 0
  9589                           
  9590 ;; *************** function _convert_adc_data *****************
  9591 ;; Defined at:
  9592 ;;		line 51 in file "mbmc.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;		None
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;  i               1  [STACK] unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1  [STACK] void 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/1
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9610 ;;Total ram usage:        0 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:   18
  9613 ;; This function calls:
  9614 ;;		_conv_raw_result
  9615 ;;		_lp_filter
  9616 ;; This function is called by:
  9617 ;;		_main
  9618 ;; This function uses a reentrant model
  9619 ;;
  9620                           
  9621                           	psect	text32
  9622  01A7B8                     __ptext32:
  9623                           	opt callstack 0
  9624  01A7B8                     _convert_adc_data:
  9625                           	opt callstack 0
  9626                           
  9627                           ; BSR set to: 0
  9628                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9629  01A7B8  52E6               	movf	postinc1,f,c
  9630                           
  9631                           ;mbmc.c: 53:  uint8_t i = 0;
  9632                           ;stkvar	_i @ sp[(-1)+0]
  9633                           
  9634                           ;incstack = 0
  9635  01A7BA  0EFF               	movlw	-1
  9636  01A7BC  6AE3               	clrf	plusw1,c
  9637  01A7BE                     l11206:
  9638                           
  9639                           ;mbmc.c: 56:   if (V.calib) {
  9640  01A7BE  0101               	movlb	1	; () banked
  9641  01A7C0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9642  01A7C2  B4D8               	btfsc	status,2,c
  9643  01A7C4  D01B               	goto	l11210
  9644                           
  9645                           ; BSR set to: 1
  9646                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9647  01A7C6  0E01               	movlw	1
  9648  01A7C8  6EE6               	movwf	postinc1,c
  9649                           
  9650                           ;stkvar	_i @ sp[(-2)+0]
  9651  01A7CA  0EFE               	movlw	-2
  9652  01A7CC  50E3               	movf	plusw1,w,c
  9653  01A7CE  6EE6               	movwf	postinc1,c
  9654  01A7D0  0E01               	movlw	1
  9655  01A7D2  6EE6               	movwf	postinc1,c
  9656                           
  9657                           ;stkvar	_i @ sp[(-4)+0]
  9658  01A7D4  0EFC               	movlw	-4
  9659  01A7D6  50E3               	movf	plusw1,w,c
  9660  01A7D8  6EE6               	movwf	postinc1,c
  9661  01A7DA  EC95  F0A9         	call	_conv_raw_result	;wreg free
  9662  01A7DE  0060  F007  FFE6   	movff	btemp,postinc1
  9663  01A7E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9664  01A7EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9665  01A7F0  0060  F013  FFE6   	movff	btemp+3,postinc1
  9666  01A7F6  EC55  F0C4         	call	_lp_filter	;wreg free
  9667  01A7FA  D01A               	goto	L9
  9668  01A7FC                     l11210:
  9669                           
  9670                           ; BSR set to: 1
  9671                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  9672  01A7FC  0E00               	movlw	0
  9673  01A7FE  6EE6               	movwf	postinc1,c
  9674                           
  9675                           ;stkvar	_i @ sp[(-2)+0]
  9676  01A800  0EFE               	movlw	-2
  9677  01A802  50E3               	movf	plusw1,w,c
  9678  01A804  6EE6               	movwf	postinc1,c
  9679  01A806  0E00               	movlw	0
  9680  01A808  6EE6               	movwf	postinc1,c
  9681                           
  9682                           ;stkvar	_i @ sp[(-4)+0]
  9683  01A80A  0EFC               	movlw	-4
  9684  01A80C  50E3               	movf	plusw1,w,c
  9685  01A80E  6EE6               	movwf	postinc1,c
  9686  01A810  EC95  F0A9         	call	_conv_raw_result	;wreg free
  9687  01A814  0060  F007  FFE6   	movff	btemp,postinc1
  9688  01A81A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9689  01A820  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9690  01A826  0060  F013  FFE6   	movff	btemp+3,postinc1
  9691  01A82C  EC55  F0C4         	call	_lp_filter	;wreg free
  9692  01A830                     L9:
  9693                           
  9694                           ;stkvar	_i @ sp[(-1)+0]
  9695  01A830  0EFF               	movlw	-1
  9696  01A832  50E3               	movf	plusw1,w,c
  9697  01A834  0D04               	mullw	4
  9698  01A836  0EFF               	movlw	low _C
  9699  01A838  24F3               	addwf	243,w,c
  9700  01A83A  6ED9               	movwf	fsr2l,c
  9701  01A83C  0E06               	movlw	high _C
  9702  01A83E  20F4               	addwfc	prodh,w,c
  9703  01A840  6EDA               	movwf	fsr2h,c
  9704  01A842  0060  F007  FFDE   	movff	btemp,postinc2
  9705  01A848  0060  F00B  FFDE   	movff	btemp+1,postinc2
  9706  01A84E  0060  F00F  FFDE   	movff	btemp+2,postinc2
  9707  01A854  0060  F013  FFDE   	movff	btemp+3,postinc2
  9708                           
  9709                           ;mbmc.c: 61:  } while (++i < 16);
  9710                           ;stkvar	_i @ sp[(-1)+0]
  9711  01A85A  0EFF               	movlw	-1
  9712  01A85C  2AE3               	incf	plusw1,f,c
  9713  01A85E  0EFF               	movlw	-1
  9714  01A860  006F FF8C  F001    	movff	plusw1,btemp
  9715  01A866  0E0F               	movlw	15
  9716  01A868  6401               	cpfsgt	btemp^0,c
  9717  01A86A  D7A9               	goto	l11206
  9718                           
  9719                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9720  01A86C  52E5               	movf	postdec1,f,c
  9721  01A86E  0012               	return		;funcret
  9722  01A870                     __end_of_convert_adc_data:
  9723                           	opt callstack 0
  9724                           
  9725 ;; *************** function _clear_hid_pflags *****************
  9726 ;; Defined at:
  9727 ;;		line 51 in file "hid.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;  h               2  [STACK] PTR struct H_data
  9730 ;;		 -> H(7), 
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;                  1  [STACK] void 
  9735 ;; Registers used:
  9736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  9737 ;; Tracked objects:
  9738 ;;		On entry : 3E/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9746 ;;Total ram usage:        0 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:   15
  9749 ;; This function calls:
  9750 ;;		Nothing
  9751 ;; This function is called by:
  9752 ;;		_main
  9753 ;; This function uses a reentrant model
  9754 ;;
  9755                           
  9756                           	psect	text33
  9757  01B914                     __ptext33:
  9758                           	opt callstack 0
  9759  01B914                     _clear_hid_pflags:
  9760                           	opt callstack 15
  9761                           
  9762                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9763                           ;stkvar	_h @ sp[(0)+-2]
  9764                           
  9765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9766                           ;incstack = 0
  9767  01B914  0EFE               	movlw	-2
  9768  01B916  006F FF8C  F00B    	movff	plusw1,btemp+10
  9769  01B91C  0EFF               	movlw	-1
  9770  01B91E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9771  01B924  0E03               	movlw	3
  9772  01B926  240B               	addwf	(btemp+10)^0,w,c
  9773  01B928  6ED9               	movwf	fsr2l,c
  9774  01B92A  0E00               	movlw	0
  9775  01B92C  200C               	addwfc	(btemp+11)^0,w,c
  9776  01B92E  6EDA               	movwf	fsr2h,c
  9777  01B930  0E00               	movlw	0
  9778  01B932  6EDF               	movwf	indf2,c
  9779                           
  9780                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9781                           ;stkvar	_h @ sp[(0)+-2]
  9782  01B934  0EFE               	movlw	-2
  9783  01B936  006F FF8C  F00B    	movff	plusw1,btemp+10
  9784  01B93C  0EFF               	movlw	-1
  9785  01B93E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9786  01B944  0E05               	movlw	5
  9787  01B946  240B               	addwf	(btemp+10)^0,w,c
  9788  01B948  6ED9               	movwf	fsr2l,c
  9789  01B94A  0E00               	movlw	0
  9790  01B94C  200C               	addwfc	(btemp+11)^0,w,c
  9791  01B94E  6EDA               	movwf	fsr2h,c
  9792  01B950  0E00               	movlw	0
  9793  01B952  6EDF               	movwf	indf2,c
  9794                           
  9795                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  9796  01B954  52E5               	movf	postdec1,f,c
  9797  01B956  52E5               	movf	postdec1,f,c
  9798  01B958  0012               	return		;funcret
  9799  01B95A                     __end_of_clear_hid_pflags:
  9800                           	opt callstack 0
  9801                           
  9802 ;; *************** function _check_help *****************
  9803 ;; Defined at:
  9804 ;;		line 40 in file "mconfig.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;  flipper         1  [STACK] const _Bool 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  estatus         1    0        _Bool 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1  [STACK] _Bool 
  9811 ;; Registers used:
  9812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9813 ;; Tracked objects:
  9814 ;;		On entry : 3F/1
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:   28
  9825 ;; This function calls:
  9826 ;;		_StartTimer
  9827 ;;		_TimerDone
  9828 ;;		_display_help
  9829 ;;		_display_info
  9830 ;;		_get_vterm_ptr
  9831 ;;		_help_button
  9832 ;;		_mode_lamp_bright
  9833 ;;		_mode_lamp_dim
  9834 ;;		_set_display_info
  9835 ;;		_set_temp_display_help
  9836 ;;		_set_vterm
  9837 ;;		_sprintf
  9838 ;;		_update_lcd
  9839 ;;		_vterm_dump
  9840 ;; This function is called by:
  9841 ;;		_main
  9842 ;; This function uses a reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text34
  9846  0182B8                     __ptext34:
  9847                           	opt callstack 0
  9848  0182B8                     _check_help:
  9849                           	opt callstack 2
  9850                           
  9851                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9852                           
  9853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9854                           ;incstack = 0
  9855  0182B8  EC12  F0DE         	call	_help_button	;wreg free
  9856  0182BC  5001               	movf	btemp^0,w,c
  9857  0182BE  B4D8               	btfsc	status,2,c
  9858  0182C0  D0D0               	goto	l13312
  9859  0182C2  ECBD  F0E2         	call	_display_info	;wreg free
  9860  0182C6  0401               	decf	btemp^0,w,c
  9861  0182C8  B4D8               	btfsc	status,2,c
  9862  0182CA  D0CB               	goto	l13312
  9863                           
  9864                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9865  0182CC  0EDC               	movlw	220
  9866  0182CE  6EE6               	movwf	postinc1,c
  9867  0182D0  0E05               	movlw	5
  9868  0182D2  6EE6               	movwf	postinc1,c
  9869  0182D4  0E0B               	movlw	11
  9870  0182D6  6EE6               	movwf	postinc1,c
  9871  0182D8  EC76  F0DD         	call	_StartTimer	;wreg free
  9872                           
  9873                           ;mconfig.c: 48:   if (V.debug)
  9874  0182DC  0101               	movlb	1	; () banked
  9875  0182DE  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9876                           
  9877                           ; BSR set to: 1
  9878                           ;mconfig.c: 49:    vterm_dump();
  9879  0182E0  EC4F  F0CC         	call	_vterm_dump	;wreg free
  9880                           
  9881                           ;mconfig.c: 51:   set_vterm(1);
  9882  0182E4  0E01               	movlw	1
  9883  0182E6  6EE6               	movwf	postinc1,c
  9884  0182E8  ECC1  F0E1         	call	_set_vterm	;wreg free
  9885                           
  9886                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9887  0182EC  ECBD  F0E2         	call	_display_info	;wreg free
  9888  0182F0  5001               	movf	btemp^0,w,c
  9889  0182F2  6EE6               	movwf	postinc1,c
  9890  0182F4  EC65  F0E2         	call	_set_temp_display_help	;wreg free
  9891                           
  9892                           ; BSR set to: 1
  9893                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9894  0182F8  0E01               	movlw	1
  9895  0182FA  6EE6               	movwf	postinc1,c
  9896  0182FC  ECD0  F0E1         	call	_set_display_info	;wreg free
  9897                           
  9898                           ;mconfig.c: 54:   if (flipper) {
  9899                           ;stkvar	_flipper @ sp[(0)+-1]
  9900  018300  0EFF               	movlw	-1
  9901  018302  50E3               	movf	plusw1,w,c
  9902  018304  B4D8               	btfsc	status,2,c
  9903  018306  D019               	goto	l13298
  9904                           
  9905                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9906  018308  0EB3               	movlw	low STR_45
  9907  01830A  6EE6               	movwf	postinc1,c
  9908  01830C  0EFF               	movlw	high STR_45
  9909  01830E  6EE6               	movwf	postinc1,c
  9910  018310  0E5D               	movlw	low STR_47
  9911  018312  6EE6               	movwf	postinc1,c
  9912  018314  0EFF               	movlw	high STR_47
  9913  018316  6EE6               	movwf	postinc1,c
  9914  018318  0E01               	movlw	1
  9915  01831A  6EE6               	movwf	postinc1,c
  9916  01831C  0E00               	movlw	0
  9917  01831E  6EE6               	movwf	postinc1,c
  9918  018320  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  9919  018324  0060  F007  FFE6   	movff	btemp,postinc1
  9920  01832A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9921  018330  0E06               	movlw	6
  9922  018332  6EE6               	movwf	postinc1,c
  9923  018334  EC16  F0CF         	call	_sprintf	;wreg free
  9924                           
  9925                           ;mconfig.c: 56:   } else {
  9926  018338  D018               	goto	l1684
  9927  01833A                     l13298:
  9928                           
  9929                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9930  01833A  0EC9               	movlw	low STR_46
  9931  01833C  6EE6               	movwf	postinc1,c
  9932  01833E  0EFF               	movlw	high STR_46
  9933  018340  6EE6               	movwf	postinc1,c
  9934  018342  0E5D               	movlw	low STR_47
  9935  018344  6EE6               	movwf	postinc1,c
  9936  018346  0EFF               	movlw	high STR_47
  9937  018348  6EE6               	movwf	postinc1,c
  9938  01834A  0E01               	movlw	1
  9939  01834C  6EE6               	movwf	postinc1,c
  9940  01834E  0E00               	movlw	0
  9941  018350  6EE6               	movwf	postinc1,c
  9942  018352  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  9943  018356  0060  F007  FFE6   	movff	btemp,postinc1
  9944  01835C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9945  018362  0E06               	movlw	6
  9946  018364  6EE6               	movwf	postinc1,c
  9947  018366  EC16  F0CF         	call	_sprintf	;wreg free
  9948  01836A                     l1684:
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9952  01836A  0101               	movlb	1	; () banked
  9953  01836C  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9954  01836E  32E8               	rrcf	wreg,f,c
  9955  018370  32E8               	rrcf	wreg,f,c
  9956  018372  0B03               	andlw	3
  9957  018374  0D24               	mullw	36
  9958  018376  0E12               	movlw	18
  9959  018378  26F3               	addwf	243,f,c
  9960  01837A  0E00               	movlw	0
  9961  01837C  22F4               	addwfc	244,f,c
  9962  01837E  0EB5               	movlw	low _T
  9963  018380  6E0B               	movwf	(btemp+10)^0,c
  9964  018382  0EFA               	movlw	high _T
  9965  018384  6E0C               	movwf	(btemp+11)^0,c
  9966  018386  50F3               	movf	243,w,c
  9967  018388  260B               	addwf	(btemp+10)^0,f,c
  9968  01838A  50F4               	movf	244,w,c
  9969  01838C  220C               	addwfc	(btemp+11)^0,f,c
  9970  01838E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9971  018394  0060  F033  FFE6   	movff	btemp+11,postinc1
  9972  01839A  0EBF               	movlw	low STR_49
  9973  01839C  6EE6               	movwf	postinc1,c
  9974  01839E  0EFF               	movlw	high STR_49
  9975  0183A0  6EE6               	movwf	postinc1,c
  9976  0183A2  0E01               	movlw	1
  9977  0183A4  6EE6               	movwf	postinc1,c
  9978  0183A6  0E01               	movlw	1
  9979  0183A8  6EE6               	movwf	postinc1,c
  9980  0183AA  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
  9981  0183AE  0060  F007  FFE6   	movff	btemp,postinc1
  9982  0183B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9983  0183BA  0E06               	movlw	6
  9984  0183BC  6EE6               	movwf	postinc1,c
  9985  0183BE  EC16  F0CF         	call	_sprintf	;wreg free
  9986                           
  9987                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9988  0183C2  0101               	movlb	1	; () banked
  9989  0183C4  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9990  0183C6  32E8               	rrcf	wreg,f,c
  9991  0183C8  32E8               	rrcf	wreg,f,c
  9992  0183CA  0B03               	andlw	3
  9993  0183CC  0D24               	mullw	36
  9994  0183CE  0EB5               	movlw	low _T
  9995  0183D0  6E0B               	movwf	(btemp+10)^0,c
  9996  0183D2  0EFA               	movlw	high _T
  9997  0183D4  6E0C               	movwf	(btemp+11)^0,c
  9998  0183D6  50F3               	movf	243,w,c
  9999  0183D8  260B               	addwf	(btemp+10)^0,f,c
 10000  0183DA  50F4               	movf	244,w,c
 10001  0183DC  220C               	addwfc	(btemp+11)^0,f,c
 10002  0183DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10003  0183E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10004  0183EA  0EBF               	movlw	low STR_49
 10005  0183EC  6EE6               	movwf	postinc1,c
 10006  0183EE  0EFF               	movlw	high STR_49
 10007  0183F0  6EE6               	movwf	postinc1,c
 10008  0183F2  0E01               	movlw	1
 10009  0183F4  6EE6               	movwf	postinc1,c
 10010  0183F6  0E02               	movlw	2
 10011  0183F8  6EE6               	movwf	postinc1,c
 10012  0183FA  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
 10013  0183FE  0060  F007  FFE6   	movff	btemp,postinc1
 10014  018404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10015  01840A  0E06               	movlw	6
 10016  01840C  6EE6               	movwf	postinc1,c
 10017  01840E  EC16  F0CF         	call	_sprintf	;wreg free
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;mconfig.c: 61:   V.help_id++;
 10021  018412  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10022  018416  38DF               	swapf	223,w,c
 10023  018418  6E0C               	movwf	(btemp+11)^0,c
 10024  01841A  320C               	rrcf	(btemp+11)^0,f,c
 10025  01841C  300C               	rrcf	(btemp+11)^0,w,c
 10026  01841E  0B03               	andlw	3
 10027  018420  6E0C               	movwf	(btemp+11)^0,c
 10028  018422  2A0C               	incf	(btemp+11)^0,f,c
 10029  018424  3A0C               	swapf	(btemp+11)^0,f,c
 10030  018426  360C               	rlcf	(btemp+11)^0,f,c
 10031  018428  360C               	rlcf	(btemp+11)^0,f,c
 10032  01842A  50DF               	movf	223,w,c
 10033  01842C  180C               	xorwf	(btemp+11)^0,w,c
 10034  01842E  0B3F               	andlw	-193
 10035  018430  180C               	xorwf	(btemp+11)^0,w,c
 10036  018432  6EDF               	movwf	223,c
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 10040  018434  0EB8               	movlw	184
 10041  018436  6EE6               	movwf	postinc1,c
 10042  018438  0E0B               	movlw	11
 10043  01843A  6EE6               	movwf	postinc1,c
 10044  01843C  0E09               	movlw	9
 10045  01843E  6EE6               	movwf	postinc1,c
 10046  018440  EC76  F0DD         	call	_StartTimer	;wreg free
 10047                           
 10048                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 10049  018444  0EB8               	movlw	184
 10050  018446  6EE6               	movwf	postinc1,c
 10051  018448  0E0B               	movlw	11
 10052  01844A  6EE6               	movwf	postinc1,c
 10053  01844C  0E07               	movlw	7
 10054  01844E  6EE6               	movwf	postinc1,c
 10055  018450  EC76  F0DD         	call	_StartTimer	;wreg free
 10056                           
 10057                           ;mconfig.c: 64:   mode_lamp_bright();
 10058  018454  EC7C  F0E2         	call	_mode_lamp_bright	;wreg free
 10059                           
 10060                           ;mconfig.c: 65:   update_lcd(1);
 10061  018458  0E01               	movlw	1
 10062  01845A  6EE6               	movwf	postinc1,c
 10063  01845C  EC8E  F0CE         	call	_update_lcd	;wreg free
 10064                           
 10065                           ;mconfig.c: 67:  } else {
 10066  018460  D032               	goto	l1685
 10067  018462                     l13312:
 10068                           
 10069                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 10070  018462  0E09               	movlw	9
 10071  018464  6EE6               	movwf	postinc1,c
 10072  018466  ECCB  F0DF         	call	_TimerDone	;wreg free
 10073  01846A  5001               	movf	btemp^0,w,c
 10074  01846C  B4D8               	btfsc	status,2,c
 10075  01846E  D02B               	goto	l1685
 10076                           
 10077                           ;mconfig.c: 69:    set_vterm(0);
 10078  018470  0E00               	movlw	0
 10079  018472  6EE6               	movwf	postinc1,c
 10080  018474  ECC1  F0E1         	call	_set_vterm	;wreg free
 10081                           
 10082                           ;mconfig.c: 70:    V.help = 0;
 10083  018478  0101               	movlb	1	; () banked
 10084  01847A  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 10085                           
 10086                           ; BSR set to: 1
 10087                           ;mconfig.c: 71:    set_display_info(display_help());
 10088  01847C  ECC1  F0E2         	call	_display_help	;wreg free
 10089  018480  5001               	movf	btemp^0,w,c
 10090  018482  6EE6               	movwf	postinc1,c
 10091  018484  ECD0  F0E1         	call	_set_display_info	;wreg free
 10092                           
 10093                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 10094  018488  0060  F673  FFE6   	movff	_V+149,postinc1
 10095  01848E  0060  F677  FFE6   	movff	_V+150,postinc1
 10096  018494  EC09  F0E2         	call	_mode_lamp_dim	;wreg free
 10097                           
 10098                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 10099  018498  0E0B               	movlw	11
 10100  01849A  6EE6               	movwf	postinc1,c
 10101  01849C  ECCB  F0DF         	call	_TimerDone	;wreg free
 10102  0184A0  5001               	movf	btemp^0,w,c
 10103  0184A2  B4D8               	btfsc	status,2,c
 10104  0184A4  D010               	goto	l1685
 10105                           
 10106                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 10107  0184A6  0101               	movlb	1	; () banked
 10108  0184A8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 10109  0184AA  A4D8               	btfss	status,2,c
 10110  0184AC  D002               	goto	u12800
 10111  0184AE  0E01               	movlw	1
 10112  0184B0  D001               	goto	u12810
 10113  0184B2                     u12800:
 10114  0184B2  0E00               	movlw	0
 10115  0184B4                     u12810:
 10116  0184B4  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 10117                           
 10118                           ; BSR set to: 1
 10119                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 10120  0184B6  0EDC               	movlw	220
 10121  0184B8  6EE6               	movwf	postinc1,c
 10122  0184BA  0E05               	movlw	5
 10123  0184BC  6EE6               	movwf	postinc1,c
 10124  0184BE  0E0B               	movlw	11
 10125  0184C0  6EE6               	movwf	postinc1,c
 10126  0184C2  EC76  F0DD         	call	_StartTimer	;wreg free
 10127  0184C6                     l1685:
 10128                           
 10129                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10130  0184C6  52E5               	movf	postdec1,f,c
 10131  0184C8  0012               	return		;funcret
 10132  0184CA                     __end_of_check_help:
 10133                           	opt callstack 0
 10134                           
 10135 ;; *************** function _vterm_dump *****************
 10136 ;; Defined at:
 10137 ;;		line 121 in file "mconfig.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;		None
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;		None
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1  [STACK] void 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10146 ;; Tracked objects:
 10147 ;;		On entry : 3F/1
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10155 ;;Total ram usage:        0 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:   27
 10158 ;; This function calls:
 10159 ;;		_WaitMs
 10160 ;;		_eaDogM_WriteStringAtPos
 10161 ;;		_get_vterm_ptr
 10162 ;;		_sprintf
 10163 ;;		_wait_lcd_done
 10164 ;; This function is called by:
 10165 ;;		_check_help
 10166 ;; This function uses a reentrant model
 10167 ;;
 10168                           
 10169                           	psect	text35
 10170  01989E                     __ptext35:
 10171                           	opt callstack 0
 10172  01989E                     _vterm_dump:
 10173                           	opt callstack 2
 10174                           
 10175                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 10176                           
 10177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10178                           ;incstack = 0
 10179  01989E  0E01               	movlw	1
 10180  0198A0  6EE6               	movwf	postinc1,c
 10181  0198A2  0E00               	movlw	0
 10182  0198A4  6EE6               	movwf	postinc1,c
 10183  0198A6  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
 10184  0198AA  0060  F007  FFE6   	movff	btemp,postinc1
 10185  0198B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10186  0198B6  0E00               	movlw	0
 10187  0198B8  6EE6               	movwf	postinc1,c
 10188  0198BA  0E00               	movlw	0
 10189  0198BC  6EE6               	movwf	postinc1,c
 10190  0198BE  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
 10191  0198C2  0060  F007  FFE6   	movff	btemp,postinc1
 10192  0198C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10193  0198CE  0EA4               	movlw	low STR_51
 10194  0198D0  6EE6               	movwf	postinc1,c
 10195  0198D2  0EFF               	movlw	high STR_51
 10196  0198D4  6EE6               	movwf	postinc1,c
 10197  0198D6  0E08               	movlw	low (_V+1)
 10198  0198D8  6EE6               	movwf	postinc1,c
 10199  0198DA  0E01               	movlw	high (_V+1)
 10200  0198DC  6EE6               	movwf	postinc1,c
 10201  0198DE  0E08               	movlw	8
 10202  0198E0  6EE6               	movwf	postinc1,c
 10203  0198E2  EC16  F0CF         	call	_sprintf	;wreg free
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;mconfig.c: 124:  wait_lcd_done();
 10207  0198E6  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 10211  0198EA  0E08               	movlw	low (_V+1)
 10212  0198EC  6EE6               	movwf	postinc1,c
 10213  0198EE  0E01               	movlw	high (_V+1)
 10214  0198F0  6EE6               	movwf	postinc1,c
 10215  0198F2  0E00               	movlw	0
 10216  0198F4  6EE6               	movwf	postinc1,c
 10217  0198F6  0E00               	movlw	0
 10218  0198F8  6EE6               	movwf	postinc1,c
 10219  0198FA  EC3A  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10220                           
 10221                           ; BSR set to: 59
 10222                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 10223  0198FE  0E01               	movlw	1
 10224  019900  6EE6               	movwf	postinc1,c
 10225  019902  0E01               	movlw	1
 10226  019904  6EE6               	movwf	postinc1,c
 10227  019906  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
 10228  01990A  0060  F007  FFE6   	movff	btemp,postinc1
 10229  019910  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10230  019916  0E00               	movlw	0
 10231  019918  6EE6               	movwf	postinc1,c
 10232  01991A  0E01               	movlw	1
 10233  01991C  6EE6               	movwf	postinc1,c
 10234  01991E  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
 10235  019922  0060  F007  FFE6   	movff	btemp,postinc1
 10236  019928  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10237  01992E  0EA4               	movlw	low STR_51
 10238  019930  6EE6               	movwf	postinc1,c
 10239  019932  0EFF               	movlw	high STR_51
 10240  019934  6EE6               	movwf	postinc1,c
 10241  019936  0E08               	movlw	low (_V+1)
 10242  019938  6EE6               	movwf	postinc1,c
 10243  01993A  0E01               	movlw	high (_V+1)
 10244  01993C  6EE6               	movwf	postinc1,c
 10245  01993E  0E08               	movlw	8
 10246  019940  6EE6               	movwf	postinc1,c
 10247  019942  EC16  F0CF         	call	_sprintf	;wreg free
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;mconfig.c: 127:  wait_lcd_done();
 10251  019946  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 10252                           
 10253                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 10254  01994A  0E08               	movlw	low (_V+1)
 10255  01994C  6EE6               	movwf	postinc1,c
 10256  01994E  0E01               	movlw	high (_V+1)
 10257  019950  6EE6               	movwf	postinc1,c
 10258  019952  0E00               	movlw	0
 10259  019954  6EE6               	movwf	postinc1,c
 10260  019956  0E01               	movlw	1
 10261  019958  6EE6               	movwf	postinc1,c
 10262  01995A  EC3A  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10263                           
 10264                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 10265  01995E  0E01               	movlw	1
 10266  019960  6EE6               	movwf	postinc1,c
 10267  019962  0E02               	movlw	2
 10268  019964  6EE6               	movwf	postinc1,c
 10269  019966  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
 10270  01996A  0060  F007  FFE6   	movff	btemp,postinc1
 10271  019970  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10272  019976  0E00               	movlw	0
 10273  019978  6EE6               	movwf	postinc1,c
 10274  01997A  0E02               	movlw	2
 10275  01997C  6EE6               	movwf	postinc1,c
 10276  01997E  EC48  F0DF         	call	_get_vterm_ptr	;wreg free
 10277  019982  0060  F007  FFE6   	movff	btemp,postinc1
 10278  019988  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10279  01998E  0EA4               	movlw	low STR_51
 10280  019990  6EE6               	movwf	postinc1,c
 10281  019992  0EFF               	movlw	high STR_51
 10282  019994  6EE6               	movwf	postinc1,c
 10283  019996  0E08               	movlw	low (_V+1)
 10284  019998  6EE6               	movwf	postinc1,c
 10285  01999A  0E01               	movlw	high (_V+1)
 10286  01999C  6EE6               	movwf	postinc1,c
 10287  01999E  0E08               	movlw	8
 10288  0199A0  6EE6               	movwf	postinc1,c
 10289  0199A2  EC16  F0CF         	call	_sprintf	;wreg free
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;mconfig.c: 130:  wait_lcd_done();
 10293  0199A6  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 10297  0199AA  0E08               	movlw	low (_V+1)
 10298  0199AC  6EE6               	movwf	postinc1,c
 10299  0199AE  0E01               	movlw	high (_V+1)
 10300  0199B0  6EE6               	movwf	postinc1,c
 10301  0199B2  0E00               	movlw	0
 10302  0199B4  6EE6               	movwf	postinc1,c
 10303  0199B6  0E02               	movlw	2
 10304  0199B8  6EE6               	movwf	postinc1,c
 10305  0199BA  EC3A  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10306                           
 10307                           ; BSR set to: 59
 10308                           ;mconfig.c: 132:  WaitMs(3000);
 10309  0199BE  0EB8               	movlw	184
 10310  0199C0  6EE6               	movwf	postinc1,c
 10311  0199C2  0E0B               	movlw	11
 10312  0199C4  6EE6               	movwf	postinc1,c
 10313  0199C6  EC65  F0DE         	call	_WaitMs	;wreg free
 10314                           
 10315                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10316  0199CA  0012               	return		;funcret
 10317  0199CC                     __end_of_vterm_dump:
 10318                           	opt callstack 0
 10319                           
 10320 ;; *************** function _sprintf *****************
 10321 ;; Defined at:
 10322 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;  s               2  [STACK] PTR unsigned char 
 10325 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
 10326 ;;  fmt             2  [STACK] PTR const unsigned char 
 10327 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 10328 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 10329 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 10330 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 10331 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
 10332 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 10333 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 10334 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 10335 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 10336 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 10337 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 10338 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 10339 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 10340 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 10341 ;;		 -> STR_2(21), STR_1(21), 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  f               6  [STACK] struct _IO_FILE
 10344 ;;  ap              2  [STACK] PTR void [1]
 10345 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10346 ;;  ret             2    0        int 
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  2  [STACK] int 
 10349 ;; Registers used:
 10350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/1
 10353 ;;		On exit  : 3F/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10360 ;;Total ram usage:        0 bytes
 10361 ;; Hardware stack levels used:    1
 10362 ;; Hardware stack levels required when called:   23
 10363 ;; This function calls:
 10364 ;;		_vfprintf
 10365 ;; This function is called by:
 10366 ;;		_main
 10367 ;;		_check_help
 10368 ;;		_vterm_dump
 10369 ;;		_calc_bsoc
 10370 ;; This function uses a reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text36
 10374  019E2C                     __ptext36:
 10375                           	opt callstack 0
 10376  019E2C                     _sprintf:
 10377                           	opt callstack 0
 10378                           
 10379                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10380  019E2C  0E08               	movlw	8
 10381  019E2E  26E1               	addwf	fsr1l,f,c
 10382  019E30  0E00               	movlw	0
 10383  019E32  22E2               	addwfc	fsr1h,f,c
 10384                           
 10385                           ;incstack = 0
 10386 ;; hardware stack exceeded
 10387  019E34  0EFE               	movlw	254
 10388  019E36  6E0B               	movwf	(btemp+10)^0,c
 10389  019E38  0EFF               	movlw	255
 10390  019E3A  6E0C               	movwf	(btemp+11)^0,c
 10391                           
 10392                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10393  019E3C  0EF5               	movlw	245
 10394  019E3E  24E1               	addwf	fsr1l,w,c
 10395  019E40  6E09               	movwf	(btemp+8)^0,c
 10396  019E42  0EFF               	movlw	255
 10397  019E44  20E2               	addwfc	fsr1h,w,c
 10398  019E46  6E0A               	movwf	(btemp+9)^0,c
 10399  019E48  500B               	movf	(btemp+10)^0,w,c
 10400  019E4A  2609               	addwf	(btemp+8)^0,f,c
 10401  019E4C  500C               	movf	(btemp+11)^0,w,c
 10402  019E4E  220A               	addwfc	(btemp+9)^0,f,c
 10403                           
 10404                           ;stkvar	_ap @ sp[(-8)+6]
 10405  019E50  0EFF               	movlw	-1
 10406  019E52  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10407  019E58  0EFE               	movlw	-2
 10408  019E5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 10409                           
 10410                           ;stkvar	_s @ sp[(-8)+-3]
 10411  019E60  0EF5               	movlw	-11
 10412  019E62  006F FF8C  F00B    	movff	plusw1,btemp+10
 10413  019E68  0EF6               	movlw	-10
 10414  019E6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10415                           
 10416                           ;stkvar	_f @ sp[(-8)+0]
 10417  019E70  0EF9               	movlw	-7
 10418  019E72  0060  F033  FFE3   	movff	btemp+11,plusw1
 10419  019E78  0EF8               	movlw	-8
 10420  019E7A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10421                           
 10422                           ;stkvar	_f @ sp[(-8)+0]
 10423  019E80  0EFA               	movlw	250
 10424  019E82  24E1               	addwf	fsr1l,w,c
 10425  019E84  6ED9               	movwf	fsr2l,c
 10426  019E86  0EFF               	movlw	255
 10427  019E88  20E2               	addwfc	fsr1h,w,c
 10428  019E8A  6EDA               	movwf	fsr2h,c
 10429  019E8C  0E00               	movlw	0
 10430  019E8E  6EDE               	movwf	postinc2,c
 10431  019E90  0E00               	movlw	0
 10432  019E92  6EDD               	movwf	postdec2,c
 10433                           
 10434                           ;stkvar	_f @ sp[(-8)+0]
 10435  019E94  0EFC               	movlw	252
 10436  019E96  24E1               	addwf	fsr1l,w,c
 10437  019E98  6ED9               	movwf	fsr2l,c
 10438  019E9A  0EFF               	movlw	255
 10439  019E9C  20E2               	addwfc	fsr1h,w,c
 10440  019E9E  6EDA               	movwf	fsr2h,c
 10441  019EA0  0E00               	movlw	0
 10442  019EA2  6EDE               	movwf	postinc2,c
 10443  019EA4  0E00               	movlw	0
 10444  019EA6  6EDD               	movwf	postdec2,c
 10445                           
 10446                           ;stkvar	_ap @ sp[(-8)+6]
 10447  019EA8  0EFE               	movlw	254
 10448  019EAA  24E1               	addwf	fsr1l,w,c
 10449  019EAC  6E01               	movwf	btemp^0,c
 10450  019EAE  0EFF               	movlw	255
 10451  019EB0  20E2               	addwfc	fsr1h,w,c
 10452  019EB2  6E02               	movwf	(btemp+1)^0,c
 10453  019EB4  0060  F007  FFE6   	movff	btemp,postinc1
 10454  019EBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10455                           
 10456                           ;stkvar	_fmt @ sp[(-10)+-5]
 10457  019EC0  0EF1               	movlw	-15
 10458  019EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 10459  019EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 10460                           
 10461                           ;stkvar	_f @ sp[(-12)+0]
 10462  019ECE  0EF4               	movlw	244
 10463  019ED0  24E1               	addwf	fsr1l,w,c
 10464  019ED2  6E01               	movwf	btemp^0,c
 10465  019ED4  0EFF               	movlw	255
 10466  019ED6  20E2               	addwfc	fsr1h,w,c
 10467  019ED8  6E02               	movwf	(btemp+1)^0,c
 10468  019EDA  0060  F007  FFE6   	movff	btemp,postinc1
 10469  019EE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10470  019EE6  EC8F  F0D4         	call	_vfprintf	;wreg free
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;stkvar	_f @ sp[(-8)+0]
 10474  019EEA  0EFA               	movlw	250
 10475  019EEC  24E1               	addwf	fsr1l,w,c
 10476  019EEE  6ED9               	movwf	fsr2l,c
 10477  019EF0  0EFF               	movlw	255
 10478  019EF2  20E2               	addwfc	fsr1h,w,c
 10479  019EF4  6EDA               	movwf	fsr2h,c
 10480  019EF6  006F FF78  F00B    	movff	postinc2,btemp+10
 10481  019EFC  006F FF74  F00C    	movff	postdec2,btemp+11
 10482                           
 10483                           ;stkvar	_s @ sp[(-8)+-3]
 10484  019F02  0EF5               	movlw	-11
 10485  019F04  006F FF8C  F009    	movff	plusw1,btemp+8
 10486  019F0A  0EF6               	movlw	-10
 10487  019F0C  006F FF8C  F00A    	movff	plusw1,btemp+9
 10488  019F12  500B               	movf	(btemp+10)^0,w,c
 10489  019F14  2409               	addwf	(btemp+8)^0,w,c
 10490  019F16  6ED9               	movwf	fsr2l,c
 10491  019F18  500C               	movf	(btemp+11)^0,w,c
 10492  019F1A  200A               	addwfc	(btemp+9)^0,w,c
 10493  019F1C  6EDA               	movwf	fsr2h,c
 10494  019F1E  0E00               	movlw	0
 10495  019F20  6EDF               	movwf	indf2,c
 10496                           
 10497                           ; BSR set to: 0
 10498                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
 10499  019F22  0EF8               	movlw	248
 10500  019F24  26E1               	addwf	fsr1l,f,c
 10501  019F26  0EFF               	movlw	255
 10502  019F28  22E2               	addwfc	fsr1h,f,c
 10503  019F2A  52E5               	movf	postdec1,f,c
 10504  019F2C  50E7               	movf	indf1,w,c
 10505  019F2E  5EE1               	subwf	fsr1l,f,c
 10506  019F30  0E00               	movlw	0
 10507  019F32  5AE2               	subwfb	fsr1h,f,c
 10508  019F34  0012               	return		;funcret
 10509  019F36                     __end_of_sprintf:
 10510                           	opt callstack 0
 10511                           
 10512 ;; *************** function _get_vterm_ptr *****************
 10513 ;; Defined at:
 10514 ;;		line 116 in file "mconfig.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;  line            1  [STACK] const unsigned char 
 10517 ;;  vterm           1  [STACK] const unsigned char 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;		None
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  2  [STACK] PTR unsigned char 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/1
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10533 ;;Total ram usage:        0 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:   15
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_main
 10540 ;;		_check_help
 10541 ;;		_vterm_dump
 10542 ;; This function uses a reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text37
 10546  01BE90                     __ptext37:
 10547                           	opt callstack 0
 10548  01BE90                     _get_vterm_ptr:
 10549                           	opt callstack 15
 10550                           
 10551                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10552                           ;stkvar	_vterm @ sp[(0)+-2]
 10553                           
 10554                           ; BSR set to: 0
 10555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10556                           ;incstack = 0
 10557  01BE90  0EFE               	movlw	-2
 10558  01BE92  50E3               	movf	plusw1,w,c
 10559  01BE94  0B03               	andlw	3
 10560  01BE96  0D78               	mullw	120
 10561  01BE98  0E2A               	movlw	low _D
 10562  01BE9A  6E01               	movwf	btemp^0,c
 10563  01BE9C  0E08               	movlw	high _D
 10564  01BE9E  6E02               	movwf	(btemp+1)^0,c
 10565  01BEA0  50F3               	movf	243,w,c
 10566  01BEA2  2601               	addwf	btemp^0,f,c
 10567  01BEA4  50F4               	movf	244,w,c
 10568  01BEA6  2202               	addwfc	(btemp+1)^0,f,c
 10569                           
 10570                           ;stkvar	_line @ sp[(0)+-1]
 10571  01BEA8  0EFF               	movlw	-1
 10572  01BEAA  50E3               	movf	plusw1,w,c
 10573  01BEAC  0B03               	andlw	3
 10574  01BEAE  0D28               	mullw	40
 10575  01BEB0  50F3               	movf	243,w,c
 10576  01BEB2  2601               	addwf	btemp^0,f,c
 10577  01BEB4  50F4               	movf	244,w,c
 10578  01BEB6  2202               	addwfc	(btemp+1)^0,f,c
 10579                           
 10580                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10581  01BEB8  52E5               	movf	postdec1,f,c
 10582  01BEBA  52E5               	movf	postdec1,f,c
 10583  01BEBC  0012               	return		;funcret
 10584  01BEBE                     __end_of_get_vterm_ptr:
 10585                           	opt callstack 0
 10586                           
 10587 ;; *************** function _WaitMs *****************
 10588 ;; Defined at:
 10589 ;;		line 32 in file "timers.c"
 10590 ;; Parameters:    Size  Location     Type
 10591 ;;  numMilliseco    2  [STACK] const unsigned short 
 10592 ;; Auto vars:     Size  Location     Type
 10593 ;;		None
 10594 ;; Return value:  Size  Location     Type
 10595 ;;                  1  [STACK] void 
 10596 ;; Registers used:
 10597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10598 ;; Tracked objects:
 10599 ;;		On entry : 0/1
 10600 ;;		On exit  : 0/0
 10601 ;;		Unchanged: 0/0
 10602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10607 ;;Total ram usage:        0 bytes
 10608 ;; Hardware stack levels used:    1
 10609 ;; Hardware stack levels required when called:   16
 10610 ;; This function calls:
 10611 ;;		_StartTimer
 10612 ;;		_TimerDone
 10613 ;; This function is called by:
 10614 ;;		_main
 10615 ;;		_vterm_dump
 10616 ;; This function uses a reentrant model
 10617 ;;
 10618                           
 10619                           	psect	text38
 10620  01BCCA                     __ptext38:
 10621                           	opt callstack 0
 10622  01BCCA                     _WaitMs:
 10623                           	opt callstack 12
 10624                           
 10625                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10626                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10627                           
 10628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10629                           ;incstack = 0
 10630  01BCCA  0EFE               	movlw	-2
 10631  01BCCC  006F FF8F FFE6     	movff	plusw1,postinc1
 10632  01BCD2  006F FF8F FFE6     	movff	plusw1,postinc1
 10633  01BCD8  0E00               	movlw	0
 10634  01BCDA  6EE6               	movwf	postinc1,c
 10635  01BCDC  EC76  F0DD         	call	_StartTimer	;wreg free
 10636                           
 10637                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10638  01BCE0  D005               	goto	l10032
 10639  01BCE2                     l1616:
 10640                           
 10641                           ;timers.c: 36:   __nop();
 10642  01BCE2  F000               	nop	
 10643                           
 10644                           ;timers.c: 37:   __nop();
 10645  01BCE4  F000               	nop	
 10646                           
 10647                           ;timers.c: 38:   __nop();
 10648  01BCE6  F000               	nop	
 10649                           
 10650                           ;timers.c: 39:   __nop();
 10651  01BCE8  F000               	nop	
 10652  01BCEA  0004               	clrwdt		;# 
 10653  01BCEC                     l10032:
 10654                           
 10655                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10656  01BCEC  0E00               	movlw	0
 10657  01BCEE  6EE6               	movwf	postinc1,c
 10658  01BCF0  ECCB  F0DF         	call	_TimerDone	;wreg free
 10659  01BCF4  5001               	movf	btemp^0,w,c
 10660  01BCF6  B4D8               	btfsc	status,2,c
 10661  01BCF8  D7F4               	goto	l1616
 10662                           
 10663                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10664  01BCFA  52E5               	movf	postdec1,f,c
 10665  01BCFC  52E5               	movf	postdec1,f,c
 10666  01BCFE  0012               	return		;funcret
 10667  01BD00                     __end_of_WaitMs:
 10668                           	opt callstack 0
 10669                           
 10670 ;; *************** function _update_lcd *****************
 10671 ;; Defined at:
 10672 ;;		line 85 in file "mconfig.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;  vterm           1  [STACK] unsigned char 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1  [STACK] unsigned char 
 10679 ;; Registers used:
 10680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10690 ;;Total ram usage:        0 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:   27
 10693 ;; This function calls:
 10694 ;;		_eaDogM_WriteStringAtPos
 10695 ;;		_wait_lcd_done
 10696 ;; This function is called by:
 10697 ;;		_main
 10698 ;;		_check_help
 10699 ;; This function uses a reentrant model
 10700 ;;
 10701                           
 10702                           	psect	text39
 10703  019D1C                     __ptext39:
 10704                           	opt callstack 0
 10705  019D1C                     _update_lcd:
 10706                           	opt callstack 3
 10707                           
 10708                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 10709                           ;stkvar	_vterm @ sp[(0)+-1]
 10710                           
 10711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10712                           ;incstack = 0
 10713  019D1C  0EFF               	movlw	-1
 10714  019D1E  006F FF8C  F001    	movff	plusw1,btemp
 10715  019D24  0E03               	movlw	3
 10716  019D26  1601               	andwf	btemp^0,f,c
 10717  019D28  0EFF               	movlw	-1
 10718  019D2A  0060  F007  FFE3   	movff	btemp,plusw1
 10719                           
 10720                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 10721  019D30  EE22  F20A         	lfsr	2,_D+480
 10722  019D34  A0DF               	btfss	indf2,0,c
 10723  019D36  D004               	goto	l13032
 10724                           
 10725                           ;stkvar	_vterm @ sp[(0)+-1]
 10726  019D38  0EFF               	movlw	-1
 10727  019D3A  50E3               	movf	plusw1,w,c
 10728  019D3C  B4D8               	btfsc	status,2,c
 10729  019D3E  D074               	goto	l1692
 10730  019D40                     l13032:
 10731                           
 10732                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 10733                           ;stkvar	_vterm @ sp[(0)+-1]
 10734  019D40  0EFF               	movlw	-1
 10735  019D42  50E3               	movf	plusw1,w,c
 10736  019D44  0D78               	mullw	120
 10737  019D46  0E3E               	movlw	low (_D+20)
 10738  019D48  24F3               	addwf	243,w,c
 10739  019D4A  6ED9               	movwf	fsr2l,c
 10740  019D4C  0E08               	movlw	high (_D+20)
 10741  019D4E  20F4               	addwfc	prodh,w,c
 10742  019D50  6EDA               	movwf	fsr2h,c
 10743  019D52  0E00               	movlw	0
 10744  019D54  6EDF               	movwf	indf2,c
 10745                           
 10746                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10747                           ;stkvar	_vterm @ sp[(0)+-1]
 10748  019D56  0EFF               	movlw	-1
 10749  019D58  50E3               	movf	plusw1,w,c
 10750  019D5A  0D78               	mullw	120
 10751  019D5C  0E66               	movlw	low (_D+60)
 10752  019D5E  24F3               	addwf	243,w,c
 10753  019D60  6ED9               	movwf	fsr2l,c
 10754  019D62  0E08               	movlw	high (_D+60)
 10755  019D64  20F4               	addwfc	prodh,w,c
 10756  019D66  6EDA               	movwf	fsr2h,c
 10757  019D68  0E00               	movlw	0
 10758  019D6A  6EDF               	movwf	indf2,c
 10759                           
 10760                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10761                           ;stkvar	_vterm @ sp[(0)+-1]
 10762  019D6C  0EFF               	movlw	-1
 10763  019D6E  50E3               	movf	plusw1,w,c
 10764  019D70  0D78               	mullw	120
 10765  019D72  0E8E               	movlw	low (_D+100)
 10766  019D74  24F3               	addwf	243,w,c
 10767  019D76  6ED9               	movwf	fsr2l,c
 10768  019D78  0E08               	movlw	high (_D+100)
 10769  019D7A  20F4               	addwfc	prodh,w,c
 10770  019D7C  6EDA               	movwf	fsr2h,c
 10771  019D7E  0E00               	movlw	0
 10772  019D80  6EDF               	movwf	indf2,c
 10773                           
 10774                           ;mconfig.c: 95:  wait_lcd_done();
 10775  019D82  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10779                           ;stkvar	_vterm @ sp[(0)+-1]
 10780  019D86  0EFF               	movlw	-1
 10781  019D88  50E3               	movf	plusw1,w,c
 10782  019D8A  0D78               	mullw	120
 10783  019D8C  0E2A               	movlw	low _D
 10784  019D8E  6E0B               	movwf	(btemp+10)^0,c
 10785  019D90  0E08               	movlw	high _D
 10786  019D92  6E0C               	movwf	(btemp+11)^0,c
 10787  019D94  50F3               	movf	243,w,c
 10788  019D96  260B               	addwf	(btemp+10)^0,f,c
 10789  019D98  50F4               	movf	244,w,c
 10790  019D9A  220C               	addwfc	(btemp+11)^0,f,c
 10791  019D9C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10792  019DA2  0060  F033  FFE6   	movff	btemp+11,postinc1
 10793  019DA8  0E00               	movlw	0
 10794  019DAA  6EE6               	movwf	postinc1,c
 10795  019DAC  0E00               	movlw	0
 10796  019DAE  6EE6               	movwf	postinc1,c
 10797  019DB0  EC3A  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10798                           
 10799                           ; BSR set to: 59
 10800                           ;mconfig.c: 97:  wait_lcd_done();
 10801  019DB4  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 10802                           
 10803                           ; BSR set to: 0
 10804                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10805                           ;stkvar	_vterm @ sp[(0)+-1]
 10806  019DB8  0EFF               	movlw	-1
 10807  019DBA  50E3               	movf	plusw1,w,c
 10808  019DBC  0D78               	mullw	120
 10809  019DBE  0E2A               	movlw	low _D
 10810  019DC0  6E0B               	movwf	(btemp+10)^0,c
 10811  019DC2  0E08               	movlw	high _D
 10812  019DC4  6E0C               	movwf	(btemp+11)^0,c
 10813  019DC6  0E28               	movlw	40
 10814  019DC8  260B               	addwf	(btemp+10)^0,f,c
 10815  019DCA  0E00               	movlw	0
 10816  019DCC  220C               	addwfc	(btemp+11)^0,f,c
 10817  019DCE  50F3               	movf	243,w,c
 10818  019DD0  260B               	addwf	(btemp+10)^0,f,c
 10819  019DD2  50F4               	movf	244,w,c
 10820  019DD4  220C               	addwfc	(btemp+11)^0,f,c
 10821  019DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10822  019DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 10823  019DE2  0E00               	movlw	0
 10824  019DE4  6EE6               	movwf	postinc1,c
 10825  019DE6  0E01               	movlw	1
 10826  019DE8  6EE6               	movwf	postinc1,c
 10827  019DEA  EC3A  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10828                           
 10829                           ; BSR set to: 59
 10830                           ;mconfig.c: 99:  wait_lcd_done();
 10831  019DEE  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10835                           ;stkvar	_vterm @ sp[(0)+-1]
 10836  019DF2  0EFF               	movlw	-1
 10837  019DF4  50E3               	movf	plusw1,w,c
 10838  019DF6  0D78               	mullw	120
 10839  019DF8  0E2A               	movlw	low _D
 10840  019DFA  6E0B               	movwf	(btemp+10)^0,c
 10841  019DFC  0E08               	movlw	high _D
 10842  019DFE  6E0C               	movwf	(btemp+11)^0,c
 10843  019E00  0E50               	movlw	80
 10844  019E02  260B               	addwf	(btemp+10)^0,f,c
 10845  019E04  0E00               	movlw	0
 10846  019E06  220C               	addwfc	(btemp+11)^0,f,c
 10847  019E08  50F3               	movf	243,w,c
 10848  019E0A  260B               	addwf	(btemp+10)^0,f,c
 10849  019E0C  50F4               	movf	244,w,c
 10850  019E0E  220C               	addwfc	(btemp+11)^0,f,c
 10851  019E10  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10852  019E16  0060  F033  FFE6   	movff	btemp+11,postinc1
 10853  019E1C  0E00               	movlw	0
 10854  019E1E  6EE6               	movwf	postinc1,c
 10855  019E20  0E02               	movlw	2
 10856  019E22  6EE6               	movwf	postinc1,c
 10857  019E24  EC3A  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10858  019E28                     l1692:
 10859                           
 10860                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10861  019E28  52E5               	movf	postdec1,f,c
 10862  019E2A  0012               	return		;funcret
 10863  019E2C                     __end_of_update_lcd:
 10864                           	opt callstack 0
 10865                           
 10866 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10867 ;; Defined at:
 10868 ;;		line 195 in file "eadog.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;  r               1  [STACK] const unsigned char 
 10871 ;;  c               1  [STACK] const unsigned char 
 10872 ;;  strPtr          2  [STACK] PTR unsigned char 
 10873 ;;		 -> D.lcd(480), D(482), V(191), 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  row             1  [STACK] unsigned char 
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1  [STACK] void 
 10878 ;; Registers used:
 10879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10880 ;; Tracked objects:
 10881 ;;		On entry : 3F/0
 10882 ;;		On exit  : 3F/3B
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10889 ;;Total ram usage:        0 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:   26
 10892 ;; This function calls:
 10893 ;;		_eaDogM_WriteString
 10894 ;;		_send_lcd_cmd_dma
 10895 ;;		_send_lcd_data_dma
 10896 ;;		_wait_lcd_done
 10897 ;;		_wdtdelay
 10898 ;; This function is called by:
 10899 ;;		_update_lcd
 10900 ;;		_vterm_dump
 10901 ;; This function uses a reentrant model
 10902 ;;
 10903                           
 10904                           	psect	text40
 10905  01AA74                     __ptext40:
 10906                           	opt callstack 0
 10907  01AA74                     _eaDogM_WriteStringAtPos:
 10908                           	opt callstack 0
 10909                           
 10910                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10911  01AA74  52E6               	movf	postinc1,f,c
 10912                           
 10913                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10914                           
 10915                           ;incstack = 0
 10916  01AA76  D014               	goto	l13008
 10917  01AA78                     l12996:
 10918                           
 10919                           ;eadog.c: 201:   row = 0x40;
 10920                           ;stkvar	_row @ sp[(-1)+0]
 10921  01AA78  0EFF               	movlw	-1
 10922  01AA7A  6AE3               	clrf	plusw1,c
 10923  01AA7C  8CE3               	bsf	plusw1,6,c
 10924                           
 10925                           ;eadog.c: 202:   break;
 10926  01AA7E  D026               	goto	l13010
 10927  01AA80                     l12998:
 10928                           
 10929                           ;eadog.c: 204:   row = 0x14;
 10930                           ;stkvar	_row @ sp[(-1)+0]
 10931  01AA80  0EFF               	movlw	-1
 10932  01AA82  6AE3               	clrf	plusw1,c
 10933  01AA84  84E3               	bsf	plusw1,2,c
 10934  01AA86  88E3               	bsf	plusw1,4,c	;indir
 10935                           
 10936                           ;eadog.c: 205:   break;
 10937  01AA88  D021               	goto	l13010
 10938  01AA8A                     l13000:
 10939                           
 10940                           ;eadog.c: 207:   row = 0x54;
 10941  01AA8A  0E54               	movlw	84
 10942  01AA8C  6E0C               	movwf	(btemp+11)^0,c
 10943                           
 10944                           ;stkvar	_row @ sp[(-1)+0]
 10945  01AA8E  0EFF               	movlw	-1
 10946  01AA90  0060  F033  FFE3   	movff	btemp+11,plusw1
 10947                           
 10948                           ;eadog.c: 208:   break;
 10949  01AA96  D01A               	goto	l13010
 10950  01AA98                     l13002:
 10951                           
 10952                           ;eadog.c: 210:   row = 0x1;
 10953                           ;stkvar	_row @ sp[(-1)+0]
 10954  01AA98  0EFF               	movlw	-1
 10955  01AA9A  6AE3               	clrf	plusw1,c
 10956  01AA9C  2AE3               	incf	plusw1,f,c
 10957                           
 10958                           ;eadog.c: 211:   break;
 10959  01AA9E  D016               	goto	l13010
 10960  01AAA0                     l13008:
 10961                           
 10962                           ;stkvar	_r @ sp[(-1)+-1]
 10963  01AAA0  0EFE               	movlw	-2
 10964  01AAA2  50E3               	movf	plusw1,w,c
 10965  01AAA4  6E0B               	movwf	(btemp+10)^0,c
 10966  01AAA6  6A0C               	clrf	(btemp+11)^0,c
 10967                           
 10968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10969                           ; Switch size 1, requested type "simple"
 10970                           ; Number of cases is 1, Range of values is 0 to 0
 10971                           ; switch strategies available:
 10972                           ; Name         Instructions Cycles
 10973                           ; simple_byte            4     3 (average)
 10974                           ;	Chosen strategy is simple_byte
 10975  01AAA8  500C               	movf	(btemp+11)^0,w,c
 10976  01AAAA  0A00               	xorlw	0	; case 0
 10977  01AAAC  A4D8               	btfss	status,2,c
 10978  01AAAE  D7E4               	goto	l12996
 10979                           
 10980                           ; Switch size 1, requested type "simple"
 10981                           ; Number of cases is 4, Range of values is 0 to 3
 10982                           ; switch strategies available:
 10983                           ; Name         Instructions Cycles
 10984                           ; simple_byte           13     7 (average)
 10985                           ;	Chosen strategy is simple_byte
 10986  01AAB0  500B               	movf	(btemp+10)^0,w,c
 10987  01AAB2  0A00               	xorlw	0	; case 0
 10988  01AAB4  B4D8               	btfsc	status,2,c
 10989  01AAB6  D7E0               	goto	l12996
 10990  01AAB8  0A01               	xorlw	1	; case 1
 10991  01AABA  B4D8               	btfsc	status,2,c
 10992  01AABC  D7E1               	goto	l12998
 10993  01AABE  0A03               	xorlw	3	; case 2
 10994  01AAC0  B4D8               	btfsc	status,2,c
 10995  01AAC2  D7E3               	goto	l13000
 10996  01AAC4  0A01               	xorlw	1	; case 3
 10997  01AAC6  B4D8               	btfsc	status,2,c
 10998  01AAC8  D7E7               	goto	l13002
 10999  01AACA  D7D6               	goto	l12996
 11000  01AACC                     l13010:
 11001                           
 11002                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 11003  01AACC  0E45               	movlw	69
 11004  01AACE  6EE6               	movwf	postinc1,c
 11005  01AAD0  ECB2  F0E1         	call	_send_lcd_cmd_dma	;wreg free
 11006                           
 11007                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 11008                           ;stkvar	_c @ sp[(-1)+-2]
 11009  01AAD4  0EFD               	movlw	-3
 11010  01AAD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11011                           
 11012                           ;stkvar	_row @ sp[(-1)+0]
 11013  01AADC  0EFF               	movlw	-1
 11014  01AADE  50E3               	movf	plusw1,w,c
 11015  01AAE0  240C               	addwf	(btemp+11)^0,w,c
 11016  01AAE2  6EE6               	movwf	postinc1,c
 11017  01AAE4  ECB0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11018                           
 11019                           ; BSR set to: 59
 11020                           ;eadog.c: 218:  wait_lcd_done();
 11021  01AAE8  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 11022                           
 11023                           ; BSR set to: 0
 11024                           ;eadog.c: 219:  wdtdelay(8);
 11025  01AAEC  0E08               	movlw	8
 11026  01AAEE  6EE6               	movwf	postinc1,c
 11027  01AAF0  0E00               	movlw	0
 11028  01AAF2  6EE6               	movwf	postinc1,c
 11029  01AAF4  0E00               	movlw	0
 11030  01AAF6  6EE6               	movwf	postinc1,c
 11031  01AAF8  0E00               	movlw	0
 11032  01AAFA  6EE6               	movwf	postinc1,c
 11033  01AAFC  ECDD  F0DA         	call	_wdtdelay	;wreg free
 11034                           
 11035                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 11036                           ;stkvar	_strPtr @ sp[(-1)+-4]
 11037  01AB00  0EFB               	movlw	-5
 11038  01AB02  006F FF8F FFE6     	movff	plusw1,postinc1
 11039  01AB08  006F FF8F FFE6     	movff	plusw1,postinc1
 11040  01AB0E  ECE1  F0D5         	call	_eaDogM_WriteString	;wreg free
 11041                           
 11042                           ; BSR set to: 59
 11043                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 11044  01AB12  0EFB               	movlw	251
 11045  01AB14  26E1               	addwf	fsr1l,f,c
 11046  01AB16  0EFF               	movlw	255
 11047  01AB18  22E2               	addwfc	fsr1h,f,c
 11048  01AB1A  0012               	return		;funcret
 11049  01AB1C                     __end_of_eaDogM_WriteStringAtPos:
 11050                           	opt callstack 0
 11051                           
 11052 ;; *************** function _send_lcd_cmd_dma *****************
 11053 ;; Defined at:
 11054 ;;		line 171 in file "eadog.c"
 11055 ;; Parameters:    Size  Location     Type
 11056 ;;  strPtr          1  [STACK] const unsigned char 
 11057 ;; Auto vars:     Size  Location     Type
 11058 ;;		None
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  1  [STACK] void 
 11061 ;; Registers used:
 11062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11063 ;; Tracked objects:
 11064 ;;		On entry : 0/3D
 11065 ;;		On exit  : 3F/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11072 ;;Total ram usage:        0 bytes
 11073 ;; Hardware stack levels used:    1
 11074 ;; Hardware stack levels required when called:   25
 11075 ;; This function calls:
 11076 ;;		_send_lcd_data_dma
 11077 ;;		_wait_lcd_done
 11078 ;; This function is called by:
 11079 ;;		_eaDogM_WriteStringAtPos
 11080 ;;		_eaDogM_WriteCommand
 11081 ;; This function uses a reentrant model
 11082 ;;
 11083                           
 11084                           	psect	text41
 11085  01C364                     __ptext41:
 11086                           	opt callstack 0
 11087  01C364                     _send_lcd_cmd_dma:
 11088                           	opt callstack 3
 11089                           
 11090                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 11091                           
 11092                           ; BSR set to: 59
 11093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11094                           ;incstack = 0
 11095  01C364  0EFE               	movlw	254
 11096  01C366  6EE6               	movwf	postinc1,c
 11097  01C368  ECB0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11098                           
 11099                           ; BSR set to: 59
 11100                           ;eadog.c: 174:  wait_lcd_done();
 11101  01C36C  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 11105                           ;stkvar	_strPtr @ sp[(0)+-1]
 11106  01C370  0EFF               	movlw	-1
 11107  01C372  50E3               	movf	plusw1,w,c
 11108  01C374  6EE6               	movwf	postinc1,c
 11109  01C376  ECB0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11110                           
 11111                           ;eadog.c: 176:  wait_lcd_done();
 11112  01C37A  EC50  F0E1         	call	_wait_lcd_done	;wreg free
 11113                           
 11114                           ; BSR set to: 0
 11115                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11116  01C37E  52E5               	movf	postdec1,f,c
 11117  01C380  0012               	return		;funcret
 11118  01C382                     __end_of_send_lcd_cmd_dma:
 11119                           	opt callstack 0
 11120                           
 11121 ;; *************** function _wait_lcd_done *****************
 11122 ;; Defined at:
 11123 ;;		line 444 in file "eadog.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;		None
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;		None
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1  [STACK] void 
 11130 ;; Registers used:
 11131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/1
 11134 ;;		On exit  : 3F/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11141 ;;Total ram usage:        0 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:   16
 11144 ;; This function calls:
 11145 ;;		_wdtdelay
 11146 ;; This function is called by:
 11147 ;;		_main
 11148 ;;		_send_lcd_cmd_dma
 11149 ;;		_eaDogM_WriteStringAtPos
 11150 ;;		_update_lcd
 11151 ;;		_vterm_dump
 11152 ;; This function uses a reentrant model
 11153 ;;
 11154                           
 11155                           	psect	text42
 11156  01C2A0                     __ptext42:
 11157                           	opt callstack 0
 11158  01C2A0                     _wait_lcd_done:
 11159                           	opt callstack 14
 11160                           
 11161                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 11162                           
 11163                           ; BSR set to: 0
 11164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11165                           ;incstack = 0
 11166  01C2A0  0101               	movlb	1	; () banked
 11167  01C2A2  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
 11168  01C2A4  D7FD               	goto	_wait_lcd_done
 11169  01C2A6                     u8750:
 11170  01C2A6  013D               	movlb	61	; () banked
 11171  01C2A8  AB17               	btfss	23,5,b	;volatile
 11172  01C2AA  D7FD               	goto	u8750
 11173                           
 11174                           ; BSR set to: 61
 11175                           ;eadog.c: 448:  wdtdelay(50);
 11176  01C2AC  0E32               	movlw	50
 11177  01C2AE  6EE6               	movwf	postinc1,c
 11178  01C2B0  0E00               	movlw	0
 11179  01C2B2  6EE6               	movwf	postinc1,c
 11180  01C2B4  0E00               	movlw	0
 11181  01C2B6  6EE6               	movwf	postinc1,c
 11182  01C2B8  0E00               	movlw	0
 11183  01C2BA  6EE6               	movwf	postinc1,c
 11184  01C2BC  ECDD  F0DA         	call	_wdtdelay	;wreg free
 11185                           
 11186                           ; BSR set to: 0
 11187                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 11188  01C2C0  0012               	return		;funcret
 11189  01C2C2                     __end_of_wait_lcd_done:
 11190                           	opt callstack 0
 11191                           
 11192 ;; *************** function _wdtdelay *****************
 11193 ;; Defined at:
 11194 ;;		line 23 in file "eadog.c"
 11195 ;; Parameters:    Size  Location     Type
 11196 ;;  delay           4  [STACK] const unsigned long 
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;		None
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  1  [STACK] void 
 11201 ;; Registers used:
 11202 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11203 ;; Tracked objects:
 11204 ;;		On entry : 2/3D
 11205 ;;		On exit  : 3F/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11212 ;;Total ram usage:        0 bytes
 11213 ;; Hardware stack levels used:    1
 11214 ;; Hardware stack levels required when called:   15
 11215 ;; This function calls:
 11216 ;;		Nothing
 11217 ;; This function is called by:
 11218 ;;		_init_display
 11219 ;;		_send_lcd_data
 11220 ;;		_send_lcd_cmd
 11221 ;;		_send_lcd_cmd_long
 11222 ;;		_eaDogM_WriteStringAtPos
 11223 ;;		_wait_lcd_done
 11224 ;; This function uses a reentrant model
 11225 ;;
 11226                           
 11227                           	psect	text43
 11228  01B5BA                     __ptext43:
 11229                           	opt callstack 0
 11230  01B5BA                     _wdtdelay:
 11231                           	opt callstack 14
 11232                           
 11233                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 11234                           
 11235                           ; BSR set to: 0
 11236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11237                           ;incstack = 0
 11238  01B5BA  0100               	movlb	0	; () banked
 11239  01B5BC  6B78               	clrf	wdtdelay@dcount& (0+255),b
 11240  01B5BE  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 11241  01B5C0  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 11242  01B5C2  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 11243  01B5C4                     l1469:
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;eadog.c: 28:   __nop();
 11247  01B5C4  F000               	nop	
 11248  01B5C6  0004               	clrwdt		;# 
 11249                           
 11250                           ;eadog.c: 30:  };
 11251  01B5C8  0E01               	movlw	1
 11252  01B5CA  0100               	movlb	0	; () banked
 11253  01B5CC  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 11254  01B5CE  0E00               	movlw	0
 11255  01B5D0  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11256  01B5D2  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11257  01B5D4  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;stkvar	_delay @ sp[(0)+-4]
 11261  01B5D6  0EFC               	movlw	-4
 11262  01B5D8  006F FF8C  F001    	movff	plusw1,btemp
 11263  01B5DE  5178               	movf	wdtdelay@dcount& (0+255),w,b
 11264  01B5E0  5C01               	subwf	btemp^0,w,c
 11265  01B5E2  0EFD               	movlw	-3
 11266  01B5E4  006F FF8C  F001    	movff	plusw1,btemp
 11267  01B5EA  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11268  01B5EC  5801               	subwfb	btemp^0,w,c
 11269  01B5EE  0EFE               	movlw	-2
 11270  01B5F0  006F FF8C  F001    	movff	plusw1,btemp
 11271  01B5F6  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11272  01B5F8  5801               	subwfb	btemp^0,w,c
 11273  01B5FA  0EFF               	movlw	-1
 11274  01B5FC  006F FF8C  F001    	movff	plusw1,btemp
 11275  01B602  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11276  01B604  5801               	subwfb	btemp^0,w,c
 11277  01B606  B0D8               	btfsc	status,0,c
 11278  01B608  D7DD               	goto	l1469
 11279                           
 11280                           ; BSR set to: 0
 11281                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 11282  01B60A  52E5               	movf	postdec1,f,c
 11283  01B60C  52E5               	movf	postdec1,f,c
 11284  01B60E  52E5               	movf	postdec1,f,c
 11285  01B610  52E5               	movf	postdec1,f,c
 11286  01B612  0012               	return		;funcret
 11287  01B614                     __end_of_wdtdelay:
 11288                           	opt callstack 0
 11289                           
 11290 ;; *************** function _send_lcd_data_dma *****************
 11291 ;; Defined at:
 11292 ;;		line 182 in file "eadog.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;  strPtr          1  [STACK] const unsigned char 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1  [STACK] void 
 11299 ;; Registers used:
 11300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 3F/3B
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;Total ram usage:        0 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; Hardware stack levels required when called:   24
 11313 ;; This function calls:
 11314 ;;		_printf
 11315 ;;		_ringBufS_flush
 11316 ;;		_start_lcd
 11317 ;;		_wait_lcd_set
 11318 ;; This function is called by:
 11319 ;;		_send_lcd_cmd_dma
 11320 ;;		_eaDogM_WriteStringAtPos
 11321 ;; This function uses a reentrant model
 11322 ;;
 11323                           
 11324                           	psect	text44
 11325  01B760                     __ptext44:
 11326                           	opt callstack 0
 11327  01B760                     _send_lcd_data_dma:
 11328                           	opt callstack 4
 11329                           
 11330                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11331                           
 11332                           ; BSR set to: 0
 11333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11334                           ;incstack = 0
 11335  01B760  ECCC  F0E2         	call	_wait_lcd_set	;wreg free
 11336                           
 11337                           ; BSR set to: 1
 11338                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11339  01B764  0E00               	movlw	0
 11340  01B766  6EE6               	movwf	postinc1,c
 11341  01B768  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11342  01B76E  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11343  01B774  ECD1  F0D6         	call	_ringBufS_flush	;wreg free
 11344  01B778  94BC               	bcf	188,2,c	;volatile
 11345                           
 11346                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11347  01B77A  013B               	movlb	59	; () banked
 11348  01B77C  9FFC               	bcf	252,7,b	;volatile
 11349                           
 11350                           ; BSR set to: 59
 11351                           ;eadog.c: 189:  DMA1SSZ = 1;
 11352  01B77E  0E00               	movlw	0
 11353  01B780  6FF8               	movwf	248,b	;volatile
 11354  01B782  0E01               	movlw	1
 11355  01B784  6FF7               	movwf	247,b	;volatile
 11356                           
 11357                           ; BSR set to: 59
 11358                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11359  01B786  8FFC               	bsf	252,7,b	;volatile
 11360                           
 11361                           ; BSR set to: 59
 11362                           ;eadog.c: 191:  printf("%c", strPtr);
 11363                           ;stkvar	_strPtr @ sp[(0)+-1]
 11364  01B788  0EFF               	movlw	-1
 11365  01B78A  50E3               	movf	plusw1,w,c
 11366  01B78C  6EE6               	movwf	postinc1,c
 11367  01B78E  0E00               	movlw	0
 11368  01B790  6EE6               	movwf	postinc1,c
 11369  01B792  0EF9               	movlw	low STR_44
 11370  01B794  6EE6               	movwf	postinc1,c
 11371  01B796  0EFF               	movlw	high STR_44
 11372  01B798  6EE6               	movwf	postinc1,c
 11373  01B79A  0E04               	movlw	4
 11374  01B79C  6EE6               	movwf	postinc1,c
 11375  01B79E  EC1E  F0DA         	call	_printf	;wreg free
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;eadog.c: 192:  start_lcd();
 11379  01B7A2  ECCF  F0E2         	call	_start_lcd	;wreg free
 11380                           
 11381                           ; BSR set to: 59
 11382                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11383  01B7A6  52E5               	movf	postdec1,f,c
 11384  01B7A8  0012               	return		;funcret
 11385  01B7AA                     __end_of_send_lcd_data_dma:
 11386                           	opt callstack 0
 11387                           
 11388 ;; *************** function _eaDogM_WriteString *****************
 11389 ;; Defined at:
 11390 ;;		line 151 in file "eadog.c"
 11391 ;; Parameters:    Size  Location     Type
 11392 ;;  strPtr          2  [STACK] PTR unsigned char 
 11393 ;;		 -> D.lcd(480), D(482), V(191), 
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;		None
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1  [STACK] void 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11400 ;; Tracked objects:
 11401 ;;		On entry : 3F/0
 11402 ;;		On exit  : 3F/3B
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11409 ;;Total ram usage:        0 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:   24
 11412 ;; This function calls:
 11413 ;;		_printf
 11414 ;;		_ringBufS_flush
 11415 ;;		_start_lcd
 11416 ;;		_strlen
 11417 ;;		_wait_lcd_set
 11418 ;; This function is called by:
 11419 ;;		_eaDogM_WriteStringAtPos
 11420 ;; This function uses a reentrant model
 11421 ;;
 11422                           
 11423                           	psect	text45
 11424  01ABC2                     __ptext45:
 11425                           	opt callstack 0
 11426  01ABC2                     _eaDogM_WriteString:
 11427                           	opt callstack 4
 11428                           
 11429                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11430                           
 11431                           ; BSR set to: 59
 11432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11433                           ;incstack = 0
 11434  01ABC2  ECCC  F0E2         	call	_wait_lcd_set	;wreg free
 11435                           
 11436                           ; BSR set to: 1
 11437                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11438  01ABC6  0E00               	movlw	0
 11439  01ABC8  6EE6               	movwf	postinc1,c
 11440  01ABCA  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11441  01ABD0  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11442  01ABD6  ECD1  F0D6         	call	_ringBufS_flush	;wreg free
 11443  01ABDA  94BC               	bcf	188,2,c	;volatile
 11444                           
 11445                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11446                           ;stkvar	_strPtr @ sp[(0)+-2]
 11447  01ABDC  0EFE               	movlw	-2
 11448  01ABDE  006F FF8F FFE6     	movff	plusw1,postinc1
 11449  01ABE4  006F FF8F FFE6     	movff	plusw1,postinc1
 11450  01ABEA  EC34  F0D6         	call	_strlen	;wreg free
 11451  01ABEE  5002               	movf	(btemp+1)^0,w,c
 11452  01ABF0  E104               	bnz	u12440
 11453  01ABF2  0E41               	movlw	65
 11454  01ABF4  5C01               	subwf	btemp^0,w,c
 11455  01ABF6  A0D8               	btfss	status,0,c
 11456  01ABF8  D010               	goto	l12952
 11457  01ABFA                     u12440:
 11458                           
 11459                           ;stkvar	_strPtr @ sp[(0)+-2]
 11460  01ABFA  0EFE               	movlw	-2
 11461  01ABFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 11462  01AC02  0EFF               	movlw	-1
 11463  01AC04  006F FF8C  F00C    	movff	plusw1,btemp+11
 11464  01AC0A  0E40               	movlw	64
 11465  01AC0C  240B               	addwf	(btemp+10)^0,w,c
 11466  01AC0E  6ED9               	movwf	fsr2l,c
 11467  01AC10  0E00               	movlw	0
 11468  01AC12  200C               	addwfc	(btemp+11)^0,w,c
 11469  01AC14  6EDA               	movwf	fsr2h,c
 11470  01AC16  0E00               	movlw	0
 11471  01AC18  6EDF               	movwf	indf2,c
 11472  01AC1A                     l12952:
 11473                           
 11474                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11475  01AC1A  013B               	movlb	59	; () banked
 11476  01AC1C  9FFC               	bcf	252,7,b	;volatile
 11477                           
 11478                           ; BSR set to: 59
 11479                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11480                           ;stkvar	_strPtr @ sp[(0)+-2]
 11481  01AC1E  0EFE               	movlw	-2
 11482  01AC20  006F FF8F FFE6     	movff	plusw1,postinc1
 11483  01AC26  006F FF8F FFE6     	movff	plusw1,postinc1
 11484  01AC2C  EC34  F0D6         	call	_strlen	;wreg free
 11485  01AC30  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11486  01AC36  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11487                           
 11488                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11489  01AC3C  013B               	movlb	59	; () banked
 11490  01AC3E  8FFC               	bsf	252,7,b	;volatile
 11491                           
 11492                           ; BSR set to: 59
 11493                           ;eadog.c: 161:  printf("%s", strPtr);
 11494                           ;stkvar	_strPtr @ sp[(0)+-2]
 11495  01AC40  0EFE               	movlw	-2
 11496  01AC42  006F FF8F FFE6     	movff	plusw1,postinc1
 11497  01AC48  006F FF8F FFE6     	movff	plusw1,postinc1
 11498  01AC4E  0EFC               	movlw	low STR_43
 11499  01AC50  6EE6               	movwf	postinc1,c
 11500  01AC52  0EFF               	movlw	high STR_43
 11501  01AC54  6EE6               	movwf	postinc1,c
 11502  01AC56  0E04               	movlw	4
 11503  01AC58  6EE6               	movwf	postinc1,c
 11504  01AC5A  EC1E  F0DA         	call	_printf	;wreg free
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;eadog.c: 162:  start_lcd();
 11508  01AC5E  ECCF  F0E2         	call	_start_lcd	;wreg free
 11509                           
 11510                           ; BSR set to: 59
 11511                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11512  01AC62  52E5               	movf	postdec1,f,c
 11513  01AC64  52E5               	movf	postdec1,f,c
 11514  01AC66  0012               	return		;funcret
 11515  01AC68                     __end_of_eaDogM_WriteString:
 11516                           	opt callstack 0
 11517                           
 11518 ;; *************** function _wait_lcd_set *****************
 11519 ;; Defined at:
 11520 ;;		line 434 in file "eadog.c"
 11521 ;; Parameters:    Size  Location     Type
 11522 ;;		None
 11523 ;; Auto vars:     Size  Location     Type
 11524 ;;		None
 11525 ;; Return value:  Size  Location     Type
 11526 ;;                  1  [STACK] void 
 11527 ;; Registers used:
 11528 ;;		None
 11529 ;; Tracked objects:
 11530 ;;		On entry : 0/0
 11531 ;;		On exit  : 3F/1
 11532 ;;		Unchanged: 0/0
 11533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11538 ;;Total ram usage:        0 bytes
 11539 ;; Hardware stack levels used:    1
 11540 ;; Hardware stack levels required when called:   15
 11541 ;; This function calls:
 11542 ;;		Nothing
 11543 ;; This function is called by:
 11544 ;;		_eaDogM_WriteString
 11545 ;;		_send_lcd_data_dma
 11546 ;; This function uses a reentrant model
 11547 ;;
 11548                           
 11549                           	psect	text46
 11550  01C598                     __ptext46:
 11551                           	opt callstack 0
 11552  01C598                     _wait_lcd_set:
 11553                           	opt callstack 12
 11554                           
 11555                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11556                           
 11557                           ; BSR set to: 59
 11558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11559                           ;incstack = 0
 11560  01C598  0101               	movlb	1	; () banked
 11561  01C59A  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
 11562                           
 11563                           ; BSR set to: 1
 11564                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11565  01C59C  0012               	return		;funcret
 11566  01C59E                     __end_of_wait_lcd_set:
 11567                           	opt callstack 0
 11568                           
 11569 ;; *************** function _start_lcd *****************
 11570 ;; Defined at:
 11571 ;;		line 429 in file "eadog.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;		None
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;		None
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  1  [STACK] void 
 11578 ;; Registers used:
 11579 ;;		None
 11580 ;; Tracked objects:
 11581 ;;		On entry : 3F/0
 11582 ;;		On exit  : 3F/3B
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11589 ;;Total ram usage:        0 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:   15
 11592 ;; This function calls:
 11593 ;;		Nothing
 11594 ;; This function is called by:
 11595 ;;		_eaDogM_WriteString
 11596 ;;		_send_lcd_data_dma
 11597 ;; This function uses a reentrant model
 11598 ;;
 11599                           
 11600                           	psect	text47
 11601  01C59E                     __ptext47:
 11602                           	opt callstack 0
 11603  01C59E                     _start_lcd:
 11604                           	opt callstack 12
 11605                           
 11606                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11607                           
 11608                           ; BSR set to: 1
 11609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11610                           ;incstack = 0
 11611  01C59E  013B               	movlb	59	; () banked
 11612  01C5A0  8DFC               	bsf	252,6,b	;volatile
 11613                           
 11614                           ; BSR set to: 59
 11615                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11616  01C5A2  0012               	return		;funcret
 11617  01C5A4                     __end_of_start_lcd:
 11618                           	opt callstack 0
 11619                           
 11620 ;; *************** function _ringBufS_flush *****************
 11621 ;; Defined at:
 11622 ;;		line 76 in file "ringbufs.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11625 ;;		 -> ring_buf1(67), 
 11626 ;;  clearBuffer     1  [STACK] const char 
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  1  [STACK] void 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11633 ;; Tracked objects:
 11634 ;;		On entry : 3F/1
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11642 ;;Total ram usage:        0 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:   16
 11645 ;; This function calls:
 11646 ;;		_memset
 11647 ;; This function is called by:
 11648 ;;		_eaDogM_WriteString
 11649 ;;		_send_lcd_data_dma
 11650 ;; This function uses a reentrant model
 11651 ;;
 11652                           
 11653                           	psect	text48
 11654  01ADA2                     __ptext48:
 11655                           	opt callstack 0
 11656  01ADA2                     _ringBufS_flush:
 11657                           	opt callstack 11
 11658                           
 11659                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 11660                           ;stkvar	__this @ sp[(0)+-2]
 11661                           
 11662                           ; BSR set to: 59
 11663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11664                           ;incstack = 0
 11665  01ADA2  0EFE               	movlw	-2
 11666  01ADA4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11667  01ADAA  0EFF               	movlw	-1
 11668  01ADAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11669  01ADB2  0E42               	movlw	66
 11670  01ADB4  240B               	addwf	(btemp+10)^0,w,c
 11671  01ADB6  6ED9               	movwf	fsr2l,c
 11672  01ADB8  0E00               	movlw	0
 11673  01ADBA  200C               	addwfc	(btemp+11)^0,w,c
 11674  01ADBC  6EDA               	movwf	fsr2h,c
 11675  01ADBE  0E00               	movlw	0
 11676  01ADC0  6EDF               	movwf	indf2,c
 11677                           
 11678                           ;ringbufs.c: 79:  _this->head = 0;
 11679                           ;stkvar	__this @ sp[(0)+-2]
 11680  01ADC2  0EFE               	movlw	-2
 11681  01ADC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11682  01ADCA  0EFF               	movlw	-1
 11683  01ADCC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11684  01ADD2  0E40               	movlw	64
 11685  01ADD4  240B               	addwf	(btemp+10)^0,w,c
 11686  01ADD6  6ED9               	movwf	fsr2l,c
 11687  01ADD8  0E00               	movlw	0
 11688  01ADDA  200C               	addwfc	(btemp+11)^0,w,c
 11689  01ADDC  6EDA               	movwf	fsr2h,c
 11690  01ADDE  0E00               	movlw	0
 11691  01ADE0  6EDF               	movwf	indf2,c
 11692                           
 11693                           ;ringbufs.c: 80:  _this->tail = 0;
 11694                           ;stkvar	__this @ sp[(0)+-2]
 11695  01ADE2  0EFE               	movlw	-2
 11696  01ADE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11697  01ADEA  0EFF               	movlw	-1
 11698  01ADEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11699  01ADF2  0E41               	movlw	65
 11700  01ADF4  240B               	addwf	(btemp+10)^0,w,c
 11701  01ADF6  6ED9               	movwf	fsr2l,c
 11702  01ADF8  0E00               	movlw	0
 11703  01ADFA  200C               	addwfc	(btemp+11)^0,w,c
 11704  01ADFC  6EDA               	movwf	fsr2h,c
 11705  01ADFE  0E00               	movlw	0
 11706  01AE00  6EDF               	movwf	indf2,c
 11707                           
 11708                           ;ringbufs.c: 81:  if (clearBuffer) {
 11709                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 11710  01AE02  0EFD               	movlw	-3
 11711  01AE04  50E3               	movf	plusw1,w,c
 11712  01AE06  B4D8               	btfsc	status,2,c
 11713  01AE08  D011               	goto	l1601
 11714                           
 11715                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 11716  01AE0A  0E40               	movlw	64
 11717  01AE0C  6EE6               	movwf	postinc1,c
 11718  01AE0E  0E00               	movlw	0
 11719  01AE10  6EE6               	movwf	postinc1,c
 11720  01AE12  0E00               	movlw	0
 11721  01AE14  6EE6               	movwf	postinc1,c
 11722  01AE16  0E00               	movlw	0
 11723  01AE18  6EE6               	movwf	postinc1,c
 11724                           
 11725                           ;stkvar	__this @ sp[(-4)+-2]
 11726  01AE1A  0EFA               	movlw	-6
 11727  01AE1C  006F FF8F FFE6     	movff	plusw1,postinc1
 11728  01AE22  006F FF8F FFE6     	movff	plusw1,postinc1
 11729  01AE28  EC4E  F0B7         	call	_memset	;wreg free
 11730  01AE2C                     l1601:
 11731                           
 11732                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 11733  01AE2C  52E5               	movf	postdec1,f,c
 11734  01AE2E  52E5               	movf	postdec1,f,c
 11735  01AE30  52E5               	movf	postdec1,f,c
 11736  01AE32  0012               	return		;funcret
 11737  01AE34                     __end_of_ringBufS_flush:
 11738                           	opt callstack 0
 11739                           
 11740 ;; *************** function _memset *****************
 11741 ;; Defined at:
 11742 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  dest            2  [STACK] PTR void 
 11745 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11746 ;;  c               2  [STACK] int 
 11747 ;;  n               2  [STACK] unsigned int 
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;  s               2  [STACK] PTR unsigned char 
 11750 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11751 ;;  k               2  [STACK] unsigned int 
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  2  [STACK] PTR void 
 11754 ;; Registers used:
 11755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/1
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11765 ;;Total ram usage:        0 bytes
 11766 ;; Hardware stack levels used:    1
 11767 ;; Hardware stack levels required when called:   15
 11768 ;; This function calls:
 11769 ;;		Nothing
 11770 ;; This function is called by:
 11771 ;;		_ringBufS_init
 11772 ;;		_ringBufS_flush
 11773 ;; This function uses a reentrant model
 11774 ;;
 11775                           
 11776                           	psect	text49
 11777  016E9C                     __ptext49:
 11778                           	opt callstack 0
 11779  016E9C                     _memset:
 11780                           	opt callstack 0
 11781                           
 11782                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11783  016E9C  52E6               	movf	postinc1,f,c
 11784  016E9E  52E6               	movf	postinc1,f,c
 11785  016EA0  52E6               	movf	postinc1,f,c
 11786  016EA2  52E6               	movf	postinc1,f,c
 11787                           
 11788                           ;stkvar	_dest @ sp[(-4)+-2]
 11789                           
 11790                           ;incstack = 0
 11791  016EA4  0EFA               	movlw	-6
 11792  016EA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11793  016EAC  0EFB               	movlw	-5
 11794  016EAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11795                           
 11796                           ;stkvar	_s @ sp[(-4)+0]
 11797  016EB4  0EFD               	movlw	-3
 11798  016EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11799  016EBC  0EFC               	movlw	-4
 11800  016EBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11801                           
 11802                           ;stkvar	_n @ sp[(-4)+-6]
 11803  016EC4  0EF6               	movlw	-10
 11804  016EC6  006F FF8C  F001    	movff	plusw1,btemp
 11805  016ECC  0EF7               	movlw	-9
 11806  016ECE  50E3               	movf	plusw1,w,c
 11807  016ED0  1001               	iorwf	btemp^0,w,c
 11808  016ED2  B4D8               	btfsc	status,2,c
 11809  016ED4  D154               	goto	u10990
 11810                           
 11811                           ;stkvar	_c @ sp[(-4)+-4]
 11812                           ;stkvar	_s @ sp[(-4)+0]
 11813  016ED6  0EFC               	movlw	-4
 11814  016ED8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11815  016EDE  0EFD               	movlw	-3
 11816  016EE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11817  016EE6  0EF8               	movlw	-8
 11818  016EE8  006F FF8F FFDF     	movff	plusw1,indf2
 11819                           
 11820                           ;stkvar	_c @ sp[(-4)+-4]
 11821                           ;stkvar	_n @ sp[(-4)+-6]
 11822                           ;stkvar	_s @ sp[(-4)+0]
 11823  016EEE  0EFC               	movlw	-4
 11824  016EF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11825  016EF6  0EFD               	movlw	-3
 11826  016EF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11827  016EFE  0EF6               	movlw	-10
 11828  016F00  50E3               	movf	plusw1,w,c
 11829  016F02  260B               	addwf	(btemp+10)^0,f,c
 11830  016F04  0EF7               	movlw	-9
 11831  016F06  50E3               	movf	plusw1,w,c
 11832  016F08  220C               	addwfc	(btemp+11)^0,f,c
 11833  016F0A  0EFF               	movlw	255
 11834  016F0C  240B               	addwf	(btemp+10)^0,w,c
 11835  016F0E  6ED9               	movwf	fsr2l,c
 11836  016F10  0EFF               	movlw	255
 11837  016F12  200C               	addwfc	(btemp+11)^0,w,c
 11838  016F14  6EDA               	movwf	fsr2h,c
 11839  016F16  0EF8               	movlw	-8
 11840  016F18  006F FF8F FFDF     	movff	plusw1,indf2
 11841                           
 11842                           ;stkvar	_n @ sp[(-4)+-6]
 11843  016F1E  0EF7               	movlw	-9
 11844  016F20  50E3               	movf	plusw1,w,c
 11845  016F22  E108               	bnz	l12104
 11846  016F24  0EF6               	movlw	-10
 11847  016F26  006F FF8C  F001    	movff	plusw1,btemp
 11848  016F2C  0E03               	movlw	3
 11849  016F2E  5E01               	subwf	btemp^0,f,c
 11850  016F30  A0D8               	btfss	status,0,c
 11851  016F32  D125               	goto	u10990
 11852  016F34                     l12104:
 11853                           
 11854                           ;stkvar	_c @ sp[(-4)+-4]
 11855                           ;stkvar	_s @ sp[(-4)+0]
 11856  016F34  0EFC               	movlw	-4
 11857  016F36  006F FF8C  F00B    	movff	plusw1,btemp+10
 11858  016F3C  0EFD               	movlw	-3
 11859  016F3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11860  016F44  0E01               	movlw	1
 11861  016F46  240B               	addwf	(btemp+10)^0,w,c
 11862  016F48  6ED9               	movwf	fsr2l,c
 11863  016F4A  0E00               	movlw	0
 11864  016F4C  200C               	addwfc	(btemp+11)^0,w,c
 11865  016F4E  6EDA               	movwf	fsr2h,c
 11866  016F50  0EF8               	movlw	-8
 11867  016F52  006F FF8F FFDF     	movff	plusw1,indf2
 11868                           
 11869                           ;stkvar	_c @ sp[(-4)+-4]
 11870                           ;stkvar	_s @ sp[(-4)+0]
 11871  016F58  0EFC               	movlw	-4
 11872  016F5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11873  016F60  0EFD               	movlw	-3
 11874  016F62  006F FF8C  F00C    	movff	plusw1,btemp+11
 11875  016F68  0E02               	movlw	2
 11876  016F6A  240B               	addwf	(btemp+10)^0,w,c
 11877  016F6C  6ED9               	movwf	fsr2l,c
 11878  016F6E  0E00               	movlw	0
 11879  016F70  200C               	addwfc	(btemp+11)^0,w,c
 11880  016F72  6EDA               	movwf	fsr2h,c
 11881  016F74  0EF8               	movlw	-8
 11882  016F76  006F FF8F FFDF     	movff	plusw1,indf2
 11883                           
 11884                           ;stkvar	_c @ sp[(-4)+-4]
 11885                           ;stkvar	_n @ sp[(-4)+-6]
 11886                           ;stkvar	_s @ sp[(-4)+0]
 11887  016F7C  0EFC               	movlw	-4
 11888  016F7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11889  016F84  0EFD               	movlw	-3
 11890  016F86  006F FF8C  F00C    	movff	plusw1,btemp+11
 11891  016F8C  0EF6               	movlw	-10
 11892  016F8E  50E3               	movf	plusw1,w,c
 11893  016F90  260B               	addwf	(btemp+10)^0,f,c
 11894  016F92  0EF7               	movlw	-9
 11895  016F94  50E3               	movf	plusw1,w,c
 11896  016F96  220C               	addwfc	(btemp+11)^0,f,c
 11897  016F98  0EFE               	movlw	254
 11898  016F9A  240B               	addwf	(btemp+10)^0,w,c
 11899  016F9C  6ED9               	movwf	fsr2l,c
 11900  016F9E  0EFF               	movlw	255
 11901  016FA0  200C               	addwfc	(btemp+11)^0,w,c
 11902  016FA2  6EDA               	movwf	fsr2h,c
 11903  016FA4  0EF8               	movlw	-8
 11904  016FA6  006F FF8F FFDF     	movff	plusw1,indf2
 11905                           
 11906                           ;stkvar	_c @ sp[(-4)+-4]
 11907                           ;stkvar	_n @ sp[(-4)+-6]
 11908                           ;stkvar	_s @ sp[(-4)+0]
 11909  016FAC  0EFC               	movlw	-4
 11910  016FAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11911  016FB4  0EFD               	movlw	-3
 11912  016FB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11913  016FBC  0EF6               	movlw	-10
 11914  016FBE  50E3               	movf	plusw1,w,c
 11915  016FC0  260B               	addwf	(btemp+10)^0,f,c
 11916  016FC2  0EF7               	movlw	-9
 11917  016FC4  50E3               	movf	plusw1,w,c
 11918  016FC6  220C               	addwfc	(btemp+11)^0,f,c
 11919  016FC8  0EFD               	movlw	253
 11920  016FCA  240B               	addwf	(btemp+10)^0,w,c
 11921  016FCC  6ED9               	movwf	fsr2l,c
 11922  016FCE  0EFF               	movlw	255
 11923  016FD0  200C               	addwfc	(btemp+11)^0,w,c
 11924  016FD2  6EDA               	movwf	fsr2h,c
 11925  016FD4  0EF8               	movlw	-8
 11926  016FD6  006F FF8F FFDF     	movff	plusw1,indf2
 11927                           
 11928                           ;stkvar	_n @ sp[(-4)+-6]
 11929  016FDC  0EF7               	movlw	-9
 11930  016FDE  50E3               	movf	plusw1,w,c
 11931  016FE0  E108               	bnz	l12110
 11932  016FE2  0EF6               	movlw	-10
 11933  016FE4  006F FF8C  F001    	movff	plusw1,btemp
 11934  016FEA  0E07               	movlw	7
 11935  016FEC  5E01               	subwf	btemp^0,f,c
 11936  016FEE  A0D8               	btfss	status,0,c
 11937  016FF0  D0C6               	goto	u10990
 11938  016FF2                     l12110:
 11939                           
 11940                           ;stkvar	_c @ sp[(-4)+-4]
 11941                           ;stkvar	_s @ sp[(-4)+0]
 11942  016FF2  0EFC               	movlw	-4
 11943  016FF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11944  016FFA  0EFD               	movlw	-3
 11945  016FFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11946  017002  0E03               	movlw	3
 11947  017004  240B               	addwf	(btemp+10)^0,w,c
 11948  017006  6ED9               	movwf	fsr2l,c
 11949  017008  0E00               	movlw	0
 11950  01700A  200C               	addwfc	(btemp+11)^0,w,c
 11951  01700C  6EDA               	movwf	fsr2h,c
 11952  01700E  0EF8               	movlw	-8
 11953  017010  006F FF8F FFDF     	movff	plusw1,indf2
 11954                           
 11955                           ;stkvar	_c @ sp[(-4)+-4]
 11956                           ;stkvar	_n @ sp[(-4)+-6]
 11957                           ;stkvar	_s @ sp[(-4)+0]
 11958  017016  0EFC               	movlw	-4
 11959  017018  006F FF8C  F00B    	movff	plusw1,btemp+10
 11960  01701E  0EFD               	movlw	-3
 11961  017020  006F FF8C  F00C    	movff	plusw1,btemp+11
 11962  017026  0EF6               	movlw	-10
 11963  017028  50E3               	movf	plusw1,w,c
 11964  01702A  260B               	addwf	(btemp+10)^0,f,c
 11965  01702C  0EF7               	movlw	-9
 11966  01702E  50E3               	movf	plusw1,w,c
 11967  017030  220C               	addwfc	(btemp+11)^0,f,c
 11968  017032  0EFC               	movlw	252
 11969  017034  240B               	addwf	(btemp+10)^0,w,c
 11970  017036  6ED9               	movwf	fsr2l,c
 11971  017038  0EFF               	movlw	255
 11972  01703A  200C               	addwfc	(btemp+11)^0,w,c
 11973  01703C  6EDA               	movwf	fsr2h,c
 11974  01703E  0EF8               	movlw	-8
 11975  017040  006F FF8F FFDF     	movff	plusw1,indf2
 11976                           
 11977                           ;stkvar	_n @ sp[(-4)+-6]
 11978  017046  0EF7               	movlw	-9
 11979  017048  50E3               	movf	plusw1,w,c
 11980  01704A  E108               	bnz	l12116
 11981  01704C  0EF6               	movlw	-10
 11982  01704E  006F FF8C  F001    	movff	plusw1,btemp
 11983  017054  0E09               	movlw	9
 11984  017056  5E01               	subwf	btemp^0,f,c
 11985  017058  A0D8               	btfss	status,0,c
 11986  01705A  D091               	goto	u10990
 11987  01705C                     l12116:
 11988                           
 11989                           ;stkvar	_s @ sp[(-4)+0]
 11990  01705C  0EFC               	movlw	-4
 11991  01705E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11992  017064  1E0B               	comf	(btemp+10)^0,f,c
 11993  017066  0EFD               	movlw	-3
 11994  017068  006F FF8C  F00C    	movff	plusw1,btemp+11
 11995  01706E  1E0C               	comf	(btemp+11)^0,f,c
 11996  017070  2A0B               	incf	(btemp+10)^0,f,c
 11997  017072  B4D8               	btfsc	status,2,c
 11998  017074  2A0C               	incf	(btemp+11)^0,f,c
 11999  017076  0E03               	movlw	3
 12000  017078  160B               	andwf	(btemp+10)^0,f,c
 12001  01707A  0E00               	movlw	0
 12002  01707C  160C               	andwf	(btemp+11)^0,f,c
 12003                           
 12004                           ;stkvar	_k @ sp[(-4)+2]
 12005  01707E  0EFE               	movlw	-2
 12006  017080  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12007  017086  0EFF               	movlw	-1
 12008  017088  0060  F033  FFE3   	movff	btemp+11,plusw1
 12009                           
 12010                           ;stkvar	_k @ sp[(-4)+2]
 12011                           ;stkvar	_s @ sp[(-4)+0]
 12012  01708E  0EFC               	movlw	-4
 12013  017090  50E3               	movf	plusw1,w,c
 12014  017092  6E01               	movwf	btemp^0,c
 12015  017094  0EFE               	movlw	-2
 12016  017096  50E3               	movf	plusw1,w,c
 12017  017098  2601               	addwf	btemp^0,f,c
 12018  01709A  0EFC               	movlw	-4
 12019  01709C  0060  F007  FFE3   	movff	btemp,plusw1
 12020  0170A2  0EFD               	movlw	-3
 12021  0170A4  50E3               	movf	plusw1,w,c
 12022  0170A6  6E01               	movwf	btemp^0,c
 12023  0170A8  0EFF               	movlw	-1
 12024  0170AA  50E3               	movf	plusw1,w,c
 12025  0170AC  2201               	addwfc	btemp^0,f,c
 12026  0170AE  0EFD               	movlw	-3
 12027  0170B0  0060  F007  FFE3   	movff	btemp,plusw1
 12028                           
 12029                           ;stkvar	_k @ sp[(-4)+2]
 12030                           ;stkvar	_n @ sp[(-4)+-6]
 12031  0170B6  0EF6               	movlw	-10
 12032  0170B8  50E3               	movf	plusw1,w,c
 12033  0170BA  6E01               	movwf	btemp^0,c
 12034  0170BC  0EFE               	movlw	-2
 12035  0170BE  50E3               	movf	plusw1,w,c
 12036  0170C0  5E01               	subwf	btemp^0,f,c
 12037  0170C2  0EF6               	movlw	-10
 12038  0170C4  0060  F007  FFE3   	movff	btemp,plusw1
 12039  0170CA  0EF7               	movlw	-9
 12040  0170CC  50E3               	movf	plusw1,w,c
 12041  0170CE  6E01               	movwf	btemp^0,c
 12042  0170D0  0EFF               	movlw	-1
 12043  0170D2  50E3               	movf	plusw1,w,c
 12044  0170D4  5A01               	subwfb	btemp^0,f,c
 12045  0170D6  0EF7               	movlw	-9
 12046  0170D8  0060  F007  FFE3   	movff	btemp,plusw1
 12047  0170DE  0EFC               	movlw	252
 12048  0170E0  6E0B               	movwf	(btemp+10)^0,c
 12049  0170E2  0EFF               	movlw	255
 12050  0170E4  6E0C               	movwf	(btemp+11)^0,c
 12051                           
 12052                           ;stkvar	_n @ sp[(-4)+-6]
 12053  0170E6  0EF6               	movlw	-10
 12054  0170E8  006F FF8C  F001    	movff	plusw1,btemp
 12055  0170EE  500B               	movf	(btemp+10)^0,w,c
 12056  0170F0  1601               	andwf	btemp^0,f,c
 12057  0170F2  0EF6               	movlw	-10
 12058  0170F4  0060  F007  FFE3   	movff	btemp,plusw1
 12059  0170FA  0EF7               	movlw	-9
 12060  0170FC  006F FF8C  F001    	movff	plusw1,btemp
 12061  017102  500C               	movf	(btemp+11)^0,w,c
 12062  017104  1601               	andwf	btemp^0,f,c
 12063  017106  0EF7               	movlw	-9
 12064  017108  D02E               	goto	L10
 12065  01710A                     l12124:
 12066                           
 12067                           ;stkvar	_c @ sp[(-4)+-4]
 12068                           ;stkvar	_s @ sp[(-4)+0]
 12069  01710A  0EFC               	movlw	-4
 12070  01710C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12071  017112  0EFD               	movlw	-3
 12072  017114  006F FF8F FFDA     	movff	plusw1,fsr2h
 12073  01711A  0EF8               	movlw	-8
 12074  01711C  006F FF8F FFDF     	movff	plusw1,indf2
 12075                           
 12076                           ;stkvar	_n @ sp[(-4)+-6]
 12077  017122  0EF6               	movlw	-10
 12078  017124  006F FF8C  F001    	movff	plusw1,btemp
 12079  01712A  0E01               	movlw	1
 12080  01712C  5E01               	subwf	btemp^0,f,c
 12081  01712E  0EF6               	movlw	-10
 12082  017130  0060  F007  FFE3   	movff	btemp,plusw1
 12083  017136  0EF7               	movlw	-9
 12084  017138  006F FF8C  F001    	movff	plusw1,btemp
 12085  01713E  0E00               	movlw	0
 12086  017140  5A01               	subwfb	btemp^0,f,c
 12087  017142  0EF7               	movlw	-9
 12088  017144  0060  F007  FFE3   	movff	btemp,plusw1
 12089                           
 12090                           ;stkvar	_s @ sp[(-4)+0]
 12091  01714A  0EFC               	movlw	-4
 12092  01714C  50E3               	movf	plusw1,w,c
 12093  01714E  0F01               	addlw	1
 12094  017150  6E01               	movwf	btemp^0,c
 12095  017152  0EFC               	movlw	-4
 12096  017154  0060  F007  FFE3   	movff	btemp,plusw1
 12097  01715A  6A01               	clrf	btemp^0,c
 12098  01715C  0EFD               	movlw	-3
 12099  01715E  50E3               	movf	plusw1,w,c
 12100  017160  2001               	addwfc	btemp^0,w,c
 12101  017162  6E01               	movwf	btemp^0,c
 12102  017164  0EFD               	movlw	-3
 12103  017166                     L10:
 12104  017166  0060  F007  FFE3   	movff	btemp,plusw1
 12105                           
 12106                           ;stkvar	_n @ sp[(-4)+-6]
 12107  01716C  0EF6               	movlw	-10
 12108  01716E  006F FF8C  F001    	movff	plusw1,btemp
 12109  017174  0EF7               	movlw	-9
 12110  017176  50E3               	movf	plusw1,w,c
 12111  017178  1001               	iorwf	btemp^0,w,c
 12112  01717A  A4D8               	btfss	status,2,c
 12113  01717C  D7C6               	goto	l12124
 12114  01717E                     u10990:
 12115                           
 12116                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12117  01717E  0EF6               	movlw	246
 12118  017180  26E1               	addwf	fsr1l,f,c
 12119  017182  0EFF               	movlw	255
 12120  017184  22E2               	addwfc	fsr1h,f,c
 12121  017186  0012               	return		;funcret
 12122  017188                     __end_of_memset:
 12123                           	opt callstack 0
 12124                           
 12125 ;; *************** function _printf *****************
 12126 ;; Defined at:
 12127 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;  fmt             2  [STACK] PTR const unsigned char 
 12130 ;;		 -> STR_44(3), STR_43(3), 
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;  ap              2  [STACK] PTR void [1]
 12133 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12134 ;;  ret             2    0        int 
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  2  [STACK] int 
 12137 ;; Registers used:
 12138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12139 ;; Tracked objects:
 12140 ;;		On entry : 3F/3B
 12141 ;;		On exit  : 3F/0
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12148 ;;Total ram usage:        0 bytes
 12149 ;; Hardware stack levels used:    1
 12150 ;; Hardware stack levels required when called:   23
 12151 ;; This function calls:
 12152 ;;		_vfprintf
 12153 ;; This function is called by:
 12154 ;;		_eaDogM_WriteString
 12155 ;;		_send_lcd_data_dma
 12156 ;; This function uses a reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text50
 12160  01B43C                     __ptext50:
 12161                           	opt callstack 0
 12162  01B43C                     _printf:
 12163                           	opt callstack 0
 12164                           
 12165                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12166  01B43C  52E6               	movf	postinc1,f,c
 12167  01B43E  52E6               	movf	postinc1,f,c
 12168                           
 12169                           ;stkvar	?_printf @ sp[(-2)+-3]
 12170                           
 12171                           ;incstack = 0
 12172  01B440  0EFB               	movlw	251
 12173  01B442  24E1               	addwf	fsr1l,w,c
 12174  01B444  6E0B               	movwf	(btemp+10)^0,c
 12175  01B446  0EFF               	movlw	255
 12176  01B448  20E2               	addwfc	fsr1h,w,c
 12177  01B44A  6E0C               	movwf	(btemp+11)^0,c
 12178                           
 12179                           ;stkvar	_ap @ sp[(-2)+0]
 12180  01B44C  0EFF               	movlw	-1
 12181  01B44E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12182  01B454  0EFE               	movlw	-2
 12183  01B456  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12184                           
 12185                           ;stkvar	_ap @ sp[(-2)+0]
 12186  01B45C  0EFE               	movlw	254
 12187  01B45E  24E1               	addwf	fsr1l,w,c
 12188  01B460  6E01               	movwf	btemp^0,c
 12189  01B462  0EFF               	movlw	255
 12190  01B464  20E2               	addwfc	fsr1h,w,c
 12191  01B466  6E02               	movwf	(btemp+1)^0,c
 12192  01B468  0060  F007  FFE6   	movff	btemp,postinc1
 12193  01B46E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12194                           
 12195                           ;stkvar	_fmt @ sp[(-4)+-3]
 12196  01B474  0EF9               	movlw	-7
 12197  01B476  006F FF8F FFE6     	movff	plusw1,postinc1
 12198  01B47C  006F FF8F FFE6     	movff	plusw1,postinc1
 12199  01B482  0E00               	movlw	0
 12200  01B484  6EE6               	movwf	postinc1,c
 12201  01B486  0E00               	movlw	0
 12202  01B488  6EE6               	movwf	postinc1,c
 12203  01B48A  EC8F  F0D4         	call	_vfprintf	;wreg free
 12204                           
 12205                           ; BSR set to: 0
 12206                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 12207  01B48E  52E5               	movf	postdec1,f,c
 12208  01B490  52E5               	movf	postdec1,f,c
 12209  01B492  52E5               	movf	postdec1,f,c
 12210  01B494  50E7               	movf	indf1,w,c
 12211  01B496  5EE1               	subwf	fsr1l,f,c
 12212  01B498  0E00               	movlw	0
 12213  01B49A  5AE2               	subwfb	fsr1h,f,c
 12214  01B49C  0012               	return		;funcret
 12215  01B49E                     __end_of_printf:
 12216                           	opt callstack 0
 12217                           
 12218 ;; *************** function _vfprintf *****************
 12219 ;; Defined at:
 12220 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12223 ;;		 -> f(6), NULL(0), 
 12224 ;;  fmt             2  [STACK] PTR const unsigned char 
 12225 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12226 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12227 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12228 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12229 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12230 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12231 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12232 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12233 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12234 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12235 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12236 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12237 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12238 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12239 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12240 ;;  ap              2  [STACK] PTR PTR void 
 12241 ;;		 -> ap(2), ap(2), 
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;  cfmt            2  [STACK] PTR unsigned char 
 12244 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12245 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12246 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12247 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12248 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12249 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12250 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12251 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12252 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12253 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12254 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12255 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12256 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12257 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12258 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  2  [STACK] int 
 12261 ;; Registers used:
 12262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/1
 12265 ;;		On exit  : 3F/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12272 ;;Total ram usage:        0 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:   22
 12275 ;; This function calls:
 12276 ;;		_vfpfcnvrt
 12277 ;; This function is called by:
 12278 ;;		_sprintf
 12279 ;;		_printf
 12280 ;; This function uses a reentrant model
 12281 ;;
 12282                           
 12283                           	psect	text51
 12284  01A91E                     __ptext51:
 12285                           	opt callstack 0
 12286  01A91E                     _vfprintf:
 12287                           	opt callstack 0
 12288                           
 12289                           ; BSR set to: 0
 12290                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12291  01A91E  52E6               	movf	postinc1,f,c
 12292  01A920  52E6               	movf	postinc1,f,c
 12293                           
 12294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12295                           ;stkvar	_fmt @ sp[(-2)+-4]
 12296                           
 12297                           ;incstack = 0
 12298 ;; hardware stack exceeded
 12299  01A922  0EFA               	movlw	-6
 12300  01A924  006F FF8C  F00B    	movff	plusw1,btemp+10
 12301  01A92A  0EFB               	movlw	-5
 12302  01A92C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12303                           
 12304                           ;stkvar	_cfmt @ sp[(-2)+0]
 12305  01A932  0EFF               	movlw	-1
 12306  01A934  0060  F033  FFE3   	movff	btemp+11,plusw1
 12307  01A93A  0EFE               	movlw	-2
 12308  01A93C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12309                           
 12310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12311  01A942  0100               	movlb	0	; () banked
 12312  01A944  6B9A               	clrf	_nout& (0+255),b
 12313  01A946  6B9B               	clrf	(_nout+1)& (0+255),b
 12314                           
 12315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12316  01A948  D021               	goto	l12974
 12317  01A94A                     l12972:
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12321                           ;stkvar	_ap @ sp[(-2)+-6]
 12322  01A94A  0EF8               	movlw	-8
 12323  01A94C  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  01A952  006F FF8F FFE6     	movff	plusw1,postinc1
 12325                           
 12326                           ;stkvar	_cfmt @ sp[(-4)+0]
 12327  01A958  0EFC               	movlw	252
 12328  01A95A  24E1               	addwf	fsr1l,w,c
 12329  01A95C  6E01               	movwf	btemp^0,c
 12330  01A95E  0EFF               	movlw	255
 12331  01A960  20E2               	addwfc	fsr1h,w,c
 12332  01A962  6E02               	movwf	(btemp+1)^0,c
 12333  01A964  0060  F007  FFE6   	movff	btemp,postinc1
 12334  01A96A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12335                           
 12336                           ;stkvar	_fp @ sp[(-6)+-2]
 12337  01A970  0EF8               	movlw	-8
 12338  01A972  006F FF8F FFE6     	movff	plusw1,postinc1
 12339  01A978  006F FF8F FFE6     	movff	plusw1,postinc1
 12340  01A97E  ECF4  F091         	call	_vfpfcnvrt	;wreg free
 12341  01A982  5001               	movf	btemp^0,w,c
 12342  01A984  0100               	movlb	0	; () banked
 12343  01A986  279A               	addwf	_nout& (0+255),f,b
 12344  01A988  5002               	movf	(btemp+1)^0,w,c
 12345  01A98A  239B               	addwfc	(_nout+1)& (0+255),f,b
 12346  01A98C                     l12974:
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12350                           ;stkvar	_cfmt @ sp[(-2)+0]
 12351  01A98C  50E1               	movf	fsr1l,w,c
 12352  01A98E  0FFE               	addlw	-2
 12353  01A990  6ED9               	movwf	fsr2l,c
 12354  01A992  50E2               	movf	fsr1h,w,c
 12355  01A994  6EDA               	movwf	fsr2h,c
 12356  01A996  0EFF               	movlw	255
 12357  01A998  22DA               	addwfc	fsr2h,f,c
 12358  01A99A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12359  01A9A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12360  01A9A6                     	if	0	;tblptru may be non-zero
 12361  01A9A6                     	endif
 12362  01A9A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12363  01A9A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12364  01A9A8  6EF8               	movwf	tblptru,c
 12365  01A9AA                     	endif
 12366  01A9AA  0008               	tblrd		*
 12367  01A9AC  50F5               	movf	tablat,w,c
 12368  01A9AE  0900               	iorlw	0
 12369  01A9B0  A4D8               	btfss	status,2,c
 12370  01A9B2  D7CB               	goto	l12972
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12374  01A9B4  0060  F268  F001   	movff	_nout,btemp
 12375  01A9BA  0060  F26C  F002   	movff	_nout+1,btemp+1
 12376                           
 12377                           ; BSR set to: 0
 12378                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12379  01A9C0  0EF8               	movlw	248
 12380  01A9C2  26E1               	addwf	fsr1l,f,c
 12381  01A9C4  0EFF               	movlw	255
 12382  01A9C6  22E2               	addwfc	fsr1h,f,c
 12383  01A9C8  0012               	return		;funcret
 12384  01A9CA                     __end_of_vfprintf:
 12385                           	opt callstack 0
 12386                           
 12387 ;; *************** function _vfpfcnvrt *****************
 12388 ;; Defined at:
 12389 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12390 ;; Parameters:    Size  Location     Type
 12391 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12392 ;;		 -> f(6), NULL(0), 
 12393 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12394 ;;		 -> cfmt(2), 
 12395 ;;  ap              2  [STACK] PTR PTR void 
 12396 ;;		 -> ap(2), ap(2), 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;  llu             8  [STACK] unsigned long long 
 12399 ;;  ll              8  [STACK] long long 
 12400 ;;  f               4  [STACK] long long 
 12401 ;;  ct              3  [STACK] unsigned char [3]
 12402 ;;  vp              3    0        PTR void 
 12403 ;;  cp              2  [STACK] PTR unsigned char 
 12404 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 12405 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12406 ;;		 -> V(191), 
 12407 ;;  i               2    0        int 
 12408 ;;  done            2    0        int 
 12409 ;;  c               1  [STACK] unsigned char 
 12410 ;; Return value:  Size  Location     Type
 12411 ;;                  2  [STACK] int 
 12412 ;; Registers used:
 12413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12414 ;; Tracked objects:
 12415 ;;		On entry : 0/0
 12416 ;;		On exit  : 0/0
 12417 ;;		Unchanged: 0/0
 12418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12423 ;;Total ram usage:        0 bytes
 12424 ;; Hardware stack levels used:    1
 12425 ;; Hardware stack levels required when called:   21
 12426 ;; This function calls:
 12427 ;;		_atoi
 12428 ;;		_ctoa
 12429 ;;		_dtoa
 12430 ;;		_efgtoa
 12431 ;;		_fputc
 12432 ;;		_isdigit
 12433 ;;		_isupper
 12434 ;;		_stoa
 12435 ;;		_strncmp
 12436 ;;		_tolower
 12437 ;;		_utoa
 12438 ;;		_xtoa
 12439 ;; This function is called by:
 12440 ;;		_vfprintf
 12441 ;; This function uses a reentrant model
 12442 ;;
 12443                           
 12444                           	psect	text52
 12445  0123E8                     __ptext52:
 12446                           	opt callstack 0
 12447  0123E8                     _vfpfcnvrt:
 12448                           	opt callstack 0
 12449                           
 12450                           ; BSR set to: 0
 12451                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12452  0123E8  0E20               	movlw	32
 12453  0123EA  26E1               	addwf	fsr1l,f,c
 12454  0123EC  0E00               	movlw	0
 12455  0123EE  22E2               	addwfc	fsr1h,f,c
 12456                           
 12457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12458                           ;stkvar	_fmt @ sp[(-32)+-4]
 12459                           
 12460                           ;incstack = 0
 12461 ;; hardware stack exceeded
 12462  0123F0  0EDC               	movlw	-36
 12463  0123F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12464  0123F8  0EDD               	movlw	-35
 12465  0123FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12466  012400  006F FF7B FFF6     	movff	postinc2,tblptrl
 12467  012406  006F FF77 FFF7     	movff	postdec2,tblptrh
 12468  01240C                     	if	0	;tblptru may be non-zero
 12469  01240C                     	endif
 12470  01240C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12471  01240C  0E00               	movlw	low (__mediumconst shr (0+16))
 12472  01240E  6EF8               	movwf	tblptru,c
 12473  012410                     	endif
 12474  012410  0008               	tblrd		*
 12475  012412  50F5               	movf	tablat,w,c
 12476  012414  0A25               	xorlw	37
 12477  012416  A4D8               	btfss	status,2,c
 12478  012418  EF9B  F099         	goto	l12934
 12479                           
 12480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12481                           ;stkvar	_fmt @ sp[(-32)+-4]
 12482  01241C  0EDC               	movlw	-36
 12483  01241E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12484  012424  0EDD               	movlw	-35
 12485  012426  006F FF8F FFDA     	movff	plusw1,fsr2h
 12486  01242C  2ADE               	incf	postinc2,f,c
 12487  01242E  0E00               	movlw	0
 12488  012430  22DD               	addwfc	postdec2,f,c
 12489                           
 12490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12491  012432  6A3A               	clrf	_width^0,c
 12492  012434  6A3B               	clrf	(_width+1)^0,c
 12493  012436  6A3E               	clrf	_flags^0,c
 12494  012438  6A3F               	clrf	(_flags+1)^0,c
 12495                           
 12496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12497  01243A  683C               	setf	_prec^0,c
 12498  01243C  683D               	setf	(_prec+1)^0,c
 12499                           
 12500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12501                           ;stkvar	_fmt @ sp[(-32)+-4]
 12502  01243E  0EDC               	movlw	-36
 12503  012440  006F FF8F FFD9     	movff	plusw1,fsr2l
 12504  012446  0EDD               	movlw	-35
 12505  012448  006F FF8F FFDA     	movff	plusw1,fsr2h
 12506  01244E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12507  012454  006F FF77 FFF7     	movff	postdec2,tblptrh
 12508  01245A                     	if	0	;tblptru may be non-zero
 12509  01245A                     	endif
 12510  01245A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12511  01245A  0E00               	movlw	low (__mediumconst shr (0+16))
 12512  01245C  6EF8               	movwf	tblptru,c
 12513  01245E                     	endif
 12514  01245E  0008               	tblrd		*
 12515  012460  50F5               	movf	tablat,w,c
 12516  012462  0A2A               	xorlw	42
 12517  012464  A4D8               	btfss	status,2,c
 12518  012466  D031               	goto	l12752
 12519                           
 12520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12521                           ;stkvar	_fmt @ sp[(-32)+-4]
 12522  012468  0EDC               	movlw	-36
 12523  01246A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12524  012470  0EDD               	movlw	-35
 12525  012472  006F FF8F FFDA     	movff	plusw1,fsr2h
 12526  012478  2ADE               	incf	postinc2,f,c
 12527  01247A  0E00               	movlw	0
 12528  01247C  22DD               	addwfc	postdec2,f,c
 12529                           
 12530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12531                           ;stkvar	_ap @ sp[(-32)+-6]
 12532  01247E  0EDA               	movlw	-38
 12533  012480  006F FF8F FFD9     	movff	plusw1,fsr2l
 12534  012486  0EDB               	movlw	-37
 12535  012488  006F FF8F FFDA     	movff	plusw1,fsr2h
 12536  01248E  0E02               	movlw	2
 12537  012490  5EDE               	subwf	postinc2,f,c
 12538  012492  0E00               	movlw	0
 12539  012494  5ADD               	subwfb	postdec2,f,c
 12540  012496  006F FF78  F00B    	movff	postinc2,btemp+10
 12541  01249C  006F FF74  F00C    	movff	postdec2,btemp+11
 12542  0124A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12543  0124A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12544  0124AE  006F FF78  F03A    	movff	postinc2,_width
 12545  0124B4  006F FF74  F03B    	movff	postdec2,_width+1
 12546                           
 12547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12548  0124BA  AE3B               	btfss	(_width+1)^0,7,c
 12549  0124BC  D066               	goto	u12180
 12550                           
 12551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12552  0124BE  803E               	bsf	_flags^0,0,c
 12553                           
 12554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12555  0124C0  6C3A               	negf	_width^0,c
 12556  0124C2  1E3B               	comf	(_width+1)^0,f,c
 12557  0124C4  B0D8               	btfsc	status,0,c
 12558  0124C6  2A3B               	incf	(_width+1)^0,f,c
 12559  0124C8  D060               	goto	u12180
 12560  0124CA                     l12752:
 12561                           
 12562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12563                           ;stkvar	_fmt @ sp[(-32)+-4]
 12564  0124CA  0EDC               	movlw	-36
 12565  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12566  0124D2  0EDD               	movlw	-35
 12567  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12568  0124DA  006F FF78  F00B    	movff	postinc2,btemp+10
 12569  0124E0  006F FF74  F00C    	movff	postdec2,btemp+11
 12570  0124E6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12571  0124EC  0060  F033  FFE6   	movff	btemp+11,postinc1
 12572  0124F2  ECCF  F0BC         	call	_atoi	;wreg free
 12573  0124F6  0060  F004  F03A   	movff	btemp,_width
 12574  0124FC  0060  F008  F03B   	movff	btemp+1,_width+1
 12575                           
 12576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12577  012502  D00B               	goto	l12756
 12578  012504                     l12754:
 12579                           
 12580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12581                           ;stkvar	_fmt @ sp[(-32)+-4]
 12582  012504  0EDC               	movlw	-36
 12583  012506  006F FF8F FFD9     	movff	plusw1,fsr2l
 12584  01250C  0EDD               	movlw	-35
 12585  01250E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12586  012514  2ADE               	incf	postinc2,f,c
 12587  012516  0E00               	movlw	0
 12588  012518  22DD               	addwfc	postdec2,f,c
 12589  01251A                     l12756:
 12590  01251A  0ED0               	movlw	208
 12591  01251C  6E0B               	movwf	(btemp+10)^0,c
 12592  01251E  0EFF               	movlw	255
 12593  012520  6E0C               	movwf	(btemp+11)^0,c
 12594                           
 12595                           ;stkvar	_fmt @ sp[(-32)+-4]
 12596  012522  0EDC               	movlw	-36
 12597  012524  006F FF8F FFD9     	movff	plusw1,fsr2l
 12598  01252A  0EDD               	movlw	-35
 12599  01252C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12600  012532  006F FF7B FFF6     	movff	postinc2,tblptrl
 12601  012538  006F FF77 FFF7     	movff	postdec2,tblptrh
 12602  01253E                     	if	0	;tblptru may be non-zero
 12603  01253E                     	endif
 12604  01253E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12605  01253E  0E00               	movlw	low (__mediumconst shr (0+16))
 12606  012540  6EF8               	movwf	tblptru,c
 12607  012542                     	endif
 12608  012542  0008               	tblrd		*
 12609  012544  50F5               	movf	tablat,w,c
 12610  012546  6E09               	movwf	(btemp+8)^0,c
 12611  012548  6A0A               	clrf	(btemp+9)^0,c
 12612  01254A  500B               	movf	(btemp+10)^0,w,c
 12613  01254C  2609               	addwf	(btemp+8)^0,f,c
 12614  01254E  500C               	movf	(btemp+11)^0,w,c
 12615  012550  220A               	addwfc	(btemp+9)^0,f,c
 12616  012552  500A               	movf	(btemp+9)^0,w,c
 12617  012554  E106               	bnz	u12160
 12618  012556  0E0A               	movlw	10
 12619  012558  5C09               	subwf	(btemp+8)^0,w,c
 12620  01255A  B0D8               	btfsc	status,0,c
 12621  01255C  D002               	goto	u12160
 12622  01255E  0E01               	movlw	1
 12623  012560  D001               	goto	u12170
 12624  012562                     u12160:
 12625  012562  0E00               	movlw	0
 12626  012564                     u12170:
 12627  012564  6E0B               	movwf	(btemp+10)^0,c
 12628  012566  6A0C               	clrf	(btemp+11)^0,c
 12629                           
 12630                           ;stkvar	_vfpfcnvrt$5737 @ sp[(-32)+4]
 12631  012568  0EE4               	movlw	-28
 12632  01256A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12633  012570  0EE5               	movlw	-27
 12634  012572  0060  F033  FFE3   	movff	btemp+11,plusw1
 12635                           
 12636                           ;stkvar	_vfpfcnvrt$5737 @ sp[(-32)+4]
 12637  012578  0EE4               	movlw	-28
 12638  01257A  006F FF8C  F001    	movff	plusw1,btemp
 12639  012580  0EE5               	movlw	-27
 12640  012582  50E3               	movf	plusw1,w,c
 12641  012584  1001               	iorwf	btemp^0,w,c
 12642  012586  A4D8               	btfss	status,2,c
 12643  012588  D7BD               	goto	l12754
 12644  01258A                     u12180:
 12645                           
 12646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 12647                           ;stkvar	_fmt @ sp[(-32)+-4]
 12648  01258A  0EDC               	movlw	-36
 12649  01258C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12650  012592  0EDD               	movlw	-35
 12651  012594  006F FF8F FFDA     	movff	plusw1,fsr2h
 12652  01259A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12653  0125A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12654  0125A6                     	if	0	;tblptru may be non-zero
 12655  0125A6                     	endif
 12656  0125A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12657  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12658  0125A8  6EF8               	movwf	tblptru,c
 12659  0125AA                     	endif
 12660  0125AA  0008               	tblrd		*
 12661  0125AC  50F5               	movf	tablat,w,c
 12662  0125AE  0A2E               	xorlw	46
 12663  0125B0  A4D8               	btfss	status,2,c
 12664  0125B2  D0AC               	goto	u12230
 12665                           
 12666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 12667  0125B4  6A3C               	clrf	_prec^0,c
 12668  0125B6  6A3D               	clrf	(_prec+1)^0,c
 12669                           
 12670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 12671                           ;stkvar	_fmt @ sp[(-32)+-4]
 12672  0125B8  0EDC               	movlw	-36
 12673  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12674  0125C0  0EDD               	movlw	-35
 12675  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12676  0125C8  2ADE               	incf	postinc2,f,c
 12677  0125CA  0E00               	movlw	0
 12678  0125CC  22DD               	addwfc	postdec2,f,c
 12679                           
 12680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 12681                           ;stkvar	_fmt @ sp[(-32)+-4]
 12682  0125CE  0EDC               	movlw	-36
 12683  0125D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12684  0125D6  0EDD               	movlw	-35
 12685  0125D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12686  0125DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12687  0125E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12688  0125EA                     	if	0	;tblptru may be non-zero
 12689  0125EA                     	endif
 12690  0125EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12691  0125EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12692  0125EC  6EF8               	movwf	tblptru,c
 12693  0125EE                     	endif
 12694  0125EE  0008               	tblrd		*
 12695  0125F0  50F5               	movf	tablat,w,c
 12696  0125F2  0A2A               	xorlw	42
 12697  0125F4  A4D8               	btfss	status,2,c
 12698  0125F6  D02A               	goto	l12774
 12699                           
 12700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 12701                           ;stkvar	_fmt @ sp[(-32)+-4]
 12702  0125F8  0EDC               	movlw	-36
 12703  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12704  012600  0EDD               	movlw	-35
 12705  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 12706  012608  2ADE               	incf	postinc2,f,c
 12707  01260A  0E00               	movlw	0
 12708  01260C  22DD               	addwfc	postdec2,f,c
 12709                           
 12710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 12711                           ;stkvar	_ap @ sp[(-32)+-6]
 12712  01260E  0EDA               	movlw	-38
 12713  012610  006F FF8F FFD9     	movff	plusw1,fsr2l
 12714  012616  0EDB               	movlw	-37
 12715  012618  006F FF8F FFDA     	movff	plusw1,fsr2h
 12716  01261E  0E02               	movlw	2
 12717  012620  5EDE               	subwf	postinc2,f,c
 12718  012622  0E00               	movlw	0
 12719  012624  5ADD               	subwfb	postdec2,f,c
 12720  012626  006F FF78  F00B    	movff	postinc2,btemp+10
 12721  01262C  006F FF74  F00C    	movff	postdec2,btemp+11
 12722  012632  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12723  012638  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12724  01263E  006F FF78  F03C    	movff	postinc2,_prec
 12725  012644  006F FF74  F03D    	movff	postdec2,_prec+1
 12726                           
 12727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 12728  01264A  D060               	goto	u12230
 12729  01264C                     l12774:
 12730                           
 12731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 12732                           ;stkvar	_fmt @ sp[(-32)+-4]
 12733  01264C  0EDC               	movlw	-36
 12734  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12735  012654  0EDD               	movlw	-35
 12736  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 12737  01265C  006F FF78  F00B    	movff	postinc2,btemp+10
 12738  012662  006F FF74  F00C    	movff	postdec2,btemp+11
 12739  012668  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12740  01266E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12741  012674  ECCF  F0BC         	call	_atoi	;wreg free
 12742  012678  0060  F004  F03C   	movff	btemp,_prec
 12743  01267E  0060  F008  F03D   	movff	btemp+1,_prec+1
 12744                           
 12745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12746  012684  D00B               	goto	l12778
 12747  012686                     l12776:
 12748                           
 12749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12750                           ;stkvar	_fmt @ sp[(-32)+-4]
 12751  012686  0EDC               	movlw	-36
 12752  012688  006F FF8F FFD9     	movff	plusw1,fsr2l
 12753  01268E  0EDD               	movlw	-35
 12754  012690  006F FF8F FFDA     	movff	plusw1,fsr2h
 12755  012696  2ADE               	incf	postinc2,f,c
 12756  012698  0E00               	movlw	0
 12757  01269A  22DD               	addwfc	postdec2,f,c
 12758  01269C                     l12778:
 12759  01269C  0ED0               	movlw	208
 12760  01269E  6E0B               	movwf	(btemp+10)^0,c
 12761  0126A0  0EFF               	movlw	255
 12762  0126A2  6E0C               	movwf	(btemp+11)^0,c
 12763                           
 12764                           ;stkvar	_fmt @ sp[(-32)+-4]
 12765  0126A4  0EDC               	movlw	-36
 12766  0126A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12767  0126AC  0EDD               	movlw	-35
 12768  0126AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12769  0126B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12770  0126BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12771  0126C0                     	if	0	;tblptru may be non-zero
 12772  0126C0                     	endif
 12773  0126C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12774  0126C0  0E00               	movlw	low (__mediumconst shr (0+16))
 12775  0126C2  6EF8               	movwf	tblptru,c
 12776  0126C4                     	endif
 12777  0126C4  0008               	tblrd		*
 12778  0126C6  50F5               	movf	tablat,w,c
 12779  0126C8  6E09               	movwf	(btemp+8)^0,c
 12780  0126CA  6A0A               	clrf	(btemp+9)^0,c
 12781  0126CC  500B               	movf	(btemp+10)^0,w,c
 12782  0126CE  2609               	addwf	(btemp+8)^0,f,c
 12783  0126D0  500C               	movf	(btemp+11)^0,w,c
 12784  0126D2  220A               	addwfc	(btemp+9)^0,f,c
 12785  0126D4  500A               	movf	(btemp+9)^0,w,c
 12786  0126D6  E106               	bnz	u12210
 12787  0126D8  0E0A               	movlw	10
 12788  0126DA  5C09               	subwf	(btemp+8)^0,w,c
 12789  0126DC  B0D8               	btfsc	status,0,c
 12790  0126DE  D002               	goto	u12210
 12791  0126E0  0E01               	movlw	1
 12792  0126E2  D001               	goto	u12220
 12793  0126E4                     u12210:
 12794  0126E4  0E00               	movlw	0
 12795  0126E6                     u12220:
 12796  0126E6  6E0B               	movwf	(btemp+10)^0,c
 12797  0126E8  6A0C               	clrf	(btemp+11)^0,c
 12798                           
 12799                           ;stkvar	_vfpfcnvrt$5738 @ sp[(-32)+0]
 12800  0126EA  0EE0               	movlw	-32
 12801  0126EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12802  0126F2  0EE1               	movlw	-31
 12803  0126F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12804                           
 12805                           ;stkvar	_vfpfcnvrt$5738 @ sp[(-32)+0]
 12806  0126FA  0EE0               	movlw	-32
 12807  0126FC  006F FF8C  F001    	movff	plusw1,btemp
 12808  012702  0EE1               	movlw	-31
 12809  012704  50E3               	movf	plusw1,w,c
 12810  012706  1001               	iorwf	btemp^0,w,c
 12811  012708  A4D8               	btfss	status,2,c
 12812  01270A  D7BD               	goto	l12776
 12813  01270C                     u12230:
 12814                           
 12815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12816                           ;stkvar	_fmt @ sp[(-32)+-4]
 12817  01270C  0EDC               	movlw	-36
 12818  01270E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12819  012714  0EDD               	movlw	-35
 12820  012716  006F FF8F FFDA     	movff	plusw1,fsr2h
 12821  01271C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12822  012722  006F FF77 FFF7     	movff	postdec2,tblptrh
 12823  012728                     	if	0	;tblptru may be non-zero
 12824  012728                     	endif
 12825  012728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12826  012728  0E00               	movlw	low (__mediumconst shr (0+16))
 12827  01272A  6EF8               	movwf	tblptru,c
 12828  01272C                     	endif
 12829  01272C  0008               	tblrd		*
 12830  01272E  50F5               	movf	tablat,w,c
 12831  012730  6EE6               	movwf	postinc1,c
 12832  012732  0E00               	movlw	0
 12833  012734  6EE6               	movwf	postinc1,c
 12834  012736  ECE9  F0D7         	call	_tolower	;wreg free
 12835                           
 12836                           ;stkvar	_ct @ sp[(-32)+26]
 12837  01273A  0EFA               	movlw	-6
 12838  01273C  0060  F007  FFE3   	movff	btemp,plusw1
 12839                           
 12840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12841                           ;stkvar	_ct @ sp[(-32)+26]
 12842  012742  0EFA               	movlw	-6
 12843  012744  50E3               	movf	plusw1,w,c
 12844  012746  B4D8               	btfsc	status,2,c
 12845  012748  D05B               	goto	l12794
 12846                           
 12847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12848                           ;stkvar	_ct @ sp[(-32)+26]
 12849  01274A  0EFB               	movlw	251
 12850  01274C  24E1               	addwf	fsr1l,w,c
 12851  01274E  6ED9               	movwf	fsr2l,c
 12852  012750  0EFF               	movlw	255
 12853  012752  20E2               	addwfc	fsr1h,w,c
 12854  012754  6EDA               	movwf	fsr2h,c
 12855                           
 12856                           ;stkvar	_fmt @ sp[(-32)+-4]
 12857  012756  0EDC               	movlw	-36
 12858  012758  006F FF8F FFE9     	movff	plusw1,fsr0l
 12859  01275E  0EDD               	movlw	-35
 12860  012760  006F FF8F FFEA     	movff	plusw1,fsr0h
 12861  012766  006F FFB8  F00B    	movff	postinc0,btemp+10
 12862  01276C  006F FFB4  F00C    	movff	postdec0,btemp+11
 12863  012772  0E01               	movlw	1
 12864  012774  260B               	addwf	(btemp+10)^0,f,c
 12865  012776  0E00               	movlw	0
 12866  012778  220C               	addwfc	(btemp+11)^0,f,c
 12867  01277A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12868  012780  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12869  012786                     	if	0	;tblptru may be non-zero
 12870  012786                     	endif
 12871  012786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12872  012786  0E00               	movlw	low (__mediumconst shr (0+16))
 12873  012788  6EF8               	movwf	tblptru,c
 12874  01278A                     	endif
 12875  01278A  0008               	tblrd		*
 12876  01278C  50F5               	movf	tablat,w,c
 12877  01278E  6EE6               	movwf	postinc1,c
 12878  012790  0E00               	movlw	0
 12879  012792  6EE6               	movwf	postinc1,c
 12880  012794  ECE9  F0D7         	call	_tolower	;wreg free
 12881  012798  5001               	movf	btemp^0,w,c
 12882  01279A  6EDF               	movwf	indf2,c
 12883                           
 12884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12885                           ;stkvar	_ct @ sp[(-32)+26]
 12886  01279C  0EFB               	movlw	251
 12887  01279E  24E1               	addwf	fsr1l,w,c
 12888  0127A0  6ED9               	movwf	fsr2l,c
 12889  0127A2  0EFF               	movlw	255
 12890  0127A4  20E2               	addwfc	fsr1h,w,c
 12891  0127A6  6EDA               	movwf	fsr2h,c
 12892  0127A8  50DF               	movf	indf2,w,c
 12893  0127AA  B4D8               	btfsc	status,2,c
 12894  0127AC  D029               	goto	l12794
 12895                           
 12896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12897                           ;stkvar	_ct @ sp[(-32)+26]
 12898  0127AE  0EFC               	movlw	252
 12899  0127B0  24E1               	addwf	fsr1l,w,c
 12900  0127B2  6ED9               	movwf	fsr2l,c
 12901  0127B4  0EFF               	movlw	255
 12902  0127B6  20E2               	addwfc	fsr1h,w,c
 12903  0127B8  6EDA               	movwf	fsr2h,c
 12904                           
 12905                           ;stkvar	_fmt @ sp[(-32)+-4]
 12906  0127BA  0EDC               	movlw	-36
 12907  0127BC  006F FF8F FFE9     	movff	plusw1,fsr0l
 12908  0127C2  0EDD               	movlw	-35
 12909  0127C4  006F FF8F FFEA     	movff	plusw1,fsr0h
 12910  0127CA  006F FFB8  F00B    	movff	postinc0,btemp+10
 12911  0127D0  006F FFB4  F00C    	movff	postdec0,btemp+11
 12912  0127D6  0E02               	movlw	2
 12913  0127D8  260B               	addwf	(btemp+10)^0,f,c
 12914  0127DA  0E00               	movlw	0
 12915  0127DC  220C               	addwfc	(btemp+11)^0,f,c
 12916  0127DE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12917  0127E4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12918  0127EA                     	if	0	;tblptru may be non-zero
 12919  0127EA                     	endif
 12920  0127EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12921  0127EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12922  0127EC  6EF8               	movwf	tblptru,c
 12923  0127EE                     	endif
 12924  0127EE  0008               	tblrd		*
 12925  0127F0  50F5               	movf	tablat,w,c
 12926  0127F2  6EE6               	movwf	postinc1,c
 12927  0127F4  0E00               	movlw	0
 12928  0127F6  6EE6               	movwf	postinc1,c
 12929  0127F8  ECE9  F0D7         	call	_tolower	;wreg free
 12930  0127FC  5001               	movf	btemp^0,w,c
 12931  0127FE  6EDF               	movwf	indf2,c
 12932  012800                     l12794:
 12933                           
 12934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12935                           ;stkvar	_fmt @ sp[(-32)+-4]
 12936  012800  0EDC               	movlw	-36
 12937  012802  006F FF8F FFD9     	movff	plusw1,fsr2l
 12938  012808  0EDD               	movlw	-35
 12939  01280A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12940  012810  006F FF7B FFF6     	movff	postinc2,tblptrl
 12941  012816  006F FF77 FFF7     	movff	postdec2,tblptrh
 12942  01281C                     	if	0	;tblptru may be non-zero
 12943  01281C                     	endif
 12944  01281C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12945  01281C  0E00               	movlw	low (__mediumconst shr (0+16))
 12946  01281E  6EF8               	movwf	tblptru,c
 12947  012820                     	endif
 12948  012820  0008               	tblrd		*
 12949  012822  50F5               	movf	tablat,w,c
 12950  012824  0A63               	xorlw	99
 12951  012826  A4D8               	btfss	status,2,c
 12952  012828  D037               	goto	l12804
 12953                           
 12954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12955                           ;stkvar	_fmt @ sp[(-32)+-4]
 12956  01282A  0EDC               	movlw	-36
 12957  01282C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12958  012832  0EDD               	movlw	-35
 12959  012834  006F FF8F FFDA     	movff	plusw1,fsr2h
 12960  01283A  2ADE               	incf	postinc2,f,c
 12961  01283C  0E00               	movlw	0
 12962  01283E  22DD               	addwfc	postdec2,f,c
 12963                           
 12964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12965                           ;stkvar	_ap @ sp[(-32)+-6]
 12966  012840  0EDA               	movlw	-38
 12967  012842  006F FF8F FFD9     	movff	plusw1,fsr2l
 12968  012848  0EDB               	movlw	-37
 12969  01284A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12970  012850  0E02               	movlw	2
 12971  012852  5EDE               	subwf	postinc2,f,c
 12972  012854  0E00               	movlw	0
 12973  012856  5ADD               	subwfb	postdec2,f,c
 12974  012858  006F FF78  F00B    	movff	postinc2,btemp+10
 12975  01285E  006F FF74  F00C    	movff	postdec2,btemp+11
 12976  012864  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12977  01286A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12978  012870  50DF               	movf	indf2,w,c
 12979  012872  6E0C               	movwf	(btemp+11)^0,c
 12980                           
 12981                           ;stkvar	_c @ sp[(-32)+31]
 12982  012874  0EFF               	movlw	-1
 12983  012876  0060  F033  FFE3   	movff	btemp+11,plusw1
 12984                           
 12985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 12986                           ;stkvar	_c @ sp[(-32)+31]
 12987  01287C  0EFF               	movlw	-1
 12988  01287E  50E3               	movf	plusw1,w,c
 12989  012880  6EE6               	movwf	postinc1,c
 12990                           
 12991                           ;stkvar	_fp @ sp[(-33)+-2]
 12992  012882  0EDD               	movlw	-35
 12993  012884  006F FF8F FFE6     	movff	plusw1,postinc1
 12994  01288A  006F FF8F FFE6     	movff	plusw1,postinc1
 12995  012890  EC63  F0D7         	call	_ctoa	;wreg free
 12996  012894  EFC5  F099         	goto	l2438
 12997  012898                     l12804:
 12998                           
 12999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13000                           ;stkvar	_fmt @ sp[(-32)+-4]
 13001  012898  0EDC               	movlw	-36
 13002  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13003  0128A0  0EDD               	movlw	-35
 13004  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13005  0128A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13006  0128AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13007  0128B4                     	if	0	;tblptru may be non-zero
 13008  0128B4                     	endif
 13009  0128B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13010  0128B4  0E00               	movlw	low (__mediumconst shr (0+16))
 13011  0128B6  6EF8               	movwf	tblptru,c
 13012  0128B8                     	endif
 13013  0128B8  0008               	tblrd		*
 13014  0128BA  50F5               	movf	tablat,w,c
 13015  0128BC  0A64               	xorlw	100
 13016  0128BE  B4D8               	btfsc	status,2,c
 13017  0128C0  D015               	goto	u12280
 13018                           
 13019                           ;stkvar	_fmt @ sp[(-32)+-4]
 13020  0128C2  0EDC               	movlw	-36
 13021  0128C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13022  0128CA  0EDD               	movlw	-35
 13023  0128CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13024  0128D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13025  0128D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13026  0128DE                     	if	0	;tblptru may be non-zero
 13027  0128DE                     	endif
 13028  0128DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13029  0128DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13030  0128E0  6EF8               	movwf	tblptru,c
 13031  0128E2                     	endif
 13032  0128E2  0008               	tblrd		*
 13033  0128E4  50F5               	movf	tablat,w,c
 13034  0128E6  0A69               	xorlw	105
 13035  0128E8  A4D8               	btfss	status,2,c
 13036  0128EA  D076               	goto	l12816
 13037  0128EC                     u12280:
 13038                           
 13039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13040                           ;stkvar	_fmt @ sp[(-32)+-4]
 13041  0128EC  0EDC               	movlw	-36
 13042  0128EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13043  0128F4  0EDD               	movlw	-35
 13044  0128F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13045  0128FC  2ADE               	incf	postinc2,f,c
 13046  0128FE  0E00               	movlw	0
 13047  012900  22DD               	addwfc	postdec2,f,c
 13048                           
 13049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13050                           ;stkvar	_ap @ sp[(-32)+-6]
 13051  012902  0EDA               	movlw	-38
 13052  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 13053  01290A  0EDB               	movlw	-37
 13054  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13055  012912  0E02               	movlw	2
 13056  012914  5EDE               	subwf	postinc2,f,c
 13057  012916  0E00               	movlw	0
 13058  012918  5ADD               	subwfb	postdec2,f,c
 13059  01291A  006F FF78  F00B    	movff	postinc2,btemp+10
 13060  012920  006F FF74  F00C    	movff	postdec2,btemp+11
 13061  012926  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13062  01292C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13063  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 13064  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 13065                           
 13066                           ;stkvar	_ll @ sp[(-32)+14]
 13067  01293E  0EEE               	movlw	-18
 13068  012940  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13069  012946  0EEF               	movlw	-17
 13070  012948  0060  F033  FFE3   	movff	btemp+11,plusw1
 13071  01294E  6A01               	clrf	btemp^0,c
 13072  012950  BEE3               	btfsc	plusw1,7,c
 13073  012952  6801               	setf	btemp^0,c
 13074  012954  0EF0               	movlw	-16
 13075  012956  0060  F007  FFE3   	movff	btemp,plusw1
 13076  01295C  0EF1               	movlw	-15
 13077  01295E  0060  F007  FFE3   	movff	btemp,plusw1
 13078  012964  0EF2               	movlw	-14
 13079  012966  0060  F007  FFE3   	movff	btemp,plusw1
 13080  01296C  0EF3               	movlw	-13
 13081  01296E  0060  F007  FFE3   	movff	btemp,plusw1
 13082  012974  0EF4               	movlw	-12
 13083  012976  0060  F007  FFE3   	movff	btemp,plusw1
 13084  01297C  0EF5               	movlw	-11
 13085  01297E  0060  F007  FFE3   	movff	btemp,plusw1
 13086  012984                     l12812:
 13087                           
 13088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 13089                           ;stkvar	_ll @ sp[(-32)+14]
 13090  012984  50E1               	movf	fsr1l,w,c
 13091  012986  0FEE               	addlw	-18
 13092  012988  6ED9               	movwf	fsr2l,c
 13093  01298A  50E2               	movf	fsr1h,w,c
 13094  01298C  6EDA               	movwf	fsr2h,c
 13095  01298E  0EFF               	movlw	255
 13096  012990  22DA               	addwfc	fsr2h,f,c
 13097  012992  006F FF7B FFE6     	movff	postinc2,postinc1
 13098  012998  006F FF7B FFE6     	movff	postinc2,postinc1
 13099  01299E  006F FF7B FFE6     	movff	postinc2,postinc1
 13100  0129A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13101  0129AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13102  0129B0  006F FF7B FFE6     	movff	postinc2,postinc1
 13103  0129B6  006F FF7B FFE6     	movff	postinc2,postinc1
 13104  0129BC  006F FF7B FFE6     	movff	postinc2,postinc1
 13105                           
 13106                           ;stkvar	_fp @ sp[(-40)+-2]
 13107  0129C2  0ED6               	movlw	-42
 13108  0129C4  006F FF8F FFE6     	movff	plusw1,postinc1
 13109  0129CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13110  0129D0  EC1F  F0AC         	call	_dtoa	;wreg free
 13111  0129D4  EFC5  F099         	goto	l2438
 13112  0129D8                     l12816:
 13113                           
 13114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 13115  0129D8  0E02               	movlw	2
 13116  0129DA  6EE6               	movwf	postinc1,c
 13117  0129DC  0E00               	movlw	0
 13118  0129DE  6EE6               	movwf	postinc1,c
 13119  0129E0  0EEA               	movlw	low STR_73
 13120  0129E2  6EE6               	movwf	postinc1,c
 13121  0129E4  0EFF               	movlw	high STR_73
 13122  0129E6  6EE6               	movwf	postinc1,c
 13123                           
 13124                           ;stkvar	_fmt @ sp[(-36)+-4]
 13125  0129E8  0ED8               	movlw	-40
 13126  0129EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13127  0129F0  0ED9               	movlw	-39
 13128  0129F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13129  0129F8  006F FF78  F00B    	movff	postinc2,btemp+10
 13130  0129FE  006F FF74  F00C    	movff	postdec2,btemp+11
 13131  012A04  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13132  012A0A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13133  012A10  EC4C  F0C0         	call	_strncmp	;wreg free
 13134  012A14  5001               	movf	btemp^0,w,c
 13135  012A16  1002               	iorwf	(btemp+1)^0,w,c
 13136  012A18  B4D8               	btfsc	status,2,c
 13137  012A1A  D022               	goto	u12300
 13138  012A1C  0E02               	movlw	2
 13139  012A1E  6EE6               	movwf	postinc1,c
 13140  012A20  0E00               	movlw	0
 13141  012A22  6EE6               	movwf	postinc1,c
 13142  012A24  0EF0               	movlw	low STR_77
 13143  012A26  6EE6               	movwf	postinc1,c
 13144  012A28  0EFF               	movlw	high STR_77
 13145  012A2A  6EE6               	movwf	postinc1,c
 13146                           
 13147                           ;stkvar	_fmt @ sp[(-36)+-4]
 13148  012A2C  0ED8               	movlw	-40
 13149  012A2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13150  012A34  0ED9               	movlw	-39
 13151  012A36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13152  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 13153  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 13154  012A48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13155  012A4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13156  012A54  EC4C  F0C0         	call	_strncmp	;wreg free
 13157  012A58  5001               	movf	btemp^0,w,c
 13158  012A5A  1002               	iorwf	(btemp+1)^0,w,c
 13159  012A5C  A4D8               	btfss	status,2,c
 13160  012A5E  D069               	goto	l12828
 13161  012A60                     u12300:
 13162                           
 13163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 13164                           ;stkvar	_fmt @ sp[(-32)+-4]
 13165  012A60  0EDC               	movlw	-36
 13166  012A62  006F FF8F FFD9     	movff	plusw1,fsr2l
 13167  012A68  0EDD               	movlw	-35
 13168  012A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13169  012A70  0E02               	movlw	2
 13170  012A72  26DE               	addwf	postinc2,f,c
 13171  012A74  0E00               	movlw	0
 13172  012A76  22DD               	addwfc	postdec2,f,c
 13173                           
 13174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 13175                           ;stkvar	_ap @ sp[(-32)+-6]
 13176  012A78  0EDA               	movlw	-38
 13177  012A7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13178  012A80  0EDB               	movlw	-37
 13179  012A82  006F FF8F FFDA     	movff	plusw1,fsr2h
 13180  012A88  0E04               	movlw	4
 13181  012A8A  5EDE               	subwf	postinc2,f,c
 13182  012A8C  0E00               	movlw	0
 13183  012A8E  5ADD               	subwfb	postdec2,f,c
 13184  012A90  006F FF78  F00B    	movff	postinc2,btemp+10
 13185  012A96  006F FF74  F00C    	movff	postdec2,btemp+11
 13186  012A9C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13187  012AA2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13188  012AA8  006F FF78  F009    	movff	postinc2,btemp+8
 13189  012AAE  006F FF78  F00A    	movff	postinc2,btemp+9
 13190  012AB4  006F FF78  F00B    	movff	postinc2,btemp+10
 13191  012ABA  006F FF78  F00C    	movff	postinc2,btemp+11
 13192  012AC0  0060  F024  F011   	movff	btemp+8,btemp+16
 13193  012AC6  0060  F028  F012   	movff	btemp+9,btemp+17
 13194  012ACC  0060  F02C  F013   	movff	btemp+10,btemp+18
 13195  012AD2  0060  F030  F014   	movff	btemp+11,btemp+19
 13196  012AD8  6A15               	clrf	(btemp+20)^0,c
 13197  012ADA  BE14               	btfsc	(btemp+19)^0,7,c
 13198  012ADC  6815               	setf	(btemp+20)^0,c
 13199  012ADE  0060  F054  F016   	movff	btemp+20,btemp+21
 13200  012AE4  0060  F054  F017   	movff	btemp+20,btemp+22
 13201  012AEA  0060  F054  F018   	movff	btemp+20,btemp+23
 13202                           
 13203                           ;stkvar	_ll @ sp[(-32)+14]
 13204  012AF0  0EEE               	movlw	-18
 13205  012AF2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13206  012AF8  0EEF               	movlw	-17
 13207  012AFA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13208  012B00  0EF0               	movlw	-16
 13209  012B02  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13210  012B08  0EF1               	movlw	-15
 13211  012B0A  0060  F053  FFE3   	movff	btemp+19,plusw1
 13212  012B10  0EF2               	movlw	-14
 13213  012B12  0060  F057  FFE3   	movff	btemp+20,plusw1
 13214  012B18  0EF3               	movlw	-13
 13215  012B1A  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13216  012B20  0EF4               	movlw	-12
 13217  012B22  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13218  012B28  0EF5               	movlw	-11
 13219  012B2A  0060  F063  FFE3   	movff	btemp+23,plusw1
 13220  012B30  D729               	goto	l12812
 13221  012B32                     l12828:
 13222                           
 13223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 13224                           ;stkvar	_ct @ sp[(-32)+26]
 13225  012B32  0EFA               	movlw	-6
 13226  012B34  006F FF8C  F001    	movff	plusw1,btemp
 13227  012B3A  0E66               	movlw	102
 13228  012B3C  1801               	xorwf	btemp^0,w,c
 13229  012B3E  A4D8               	btfss	status,2,c
 13230  012B40  D06E               	goto	l12840
 13231                           
 13232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 13233                           ;stkvar	_fmt @ sp[(-32)+-4]
 13234  012B42  0EDC               	movlw	-36
 13235  012B44  006F FF8F FFD9     	movff	plusw1,fsr2l
 13236  012B4A  0EDD               	movlw	-35
 13237  012B4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13238  012B52  006F FF7B FFF6     	movff	postinc2,tblptrl
 13239  012B58  006F FF77 FFF7     	movff	postdec2,tblptrh
 13240  012B5E                     	if	0	;tblptru may be non-zero
 13241  012B5E                     	endif
 13242  012B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13243  012B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 13244  012B60  6EF8               	movwf	tblptru,c
 13245  012B62                     	endif
 13246                           
 13247                           ;stkvar	_c @ sp[(-32)+31]
 13248  012B62  0008               	tblrd		*
 13249  012B64  0EFF               	movlw	-1
 13250  012B66  006F FFD7 FFE3     	movff	tablat,plusw1
 13251                           
 13252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 13253                           ;stkvar	_fmt @ sp[(-32)+-4]
 13254  012B6C  0EDC               	movlw	-36
 13255  012B6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13256  012B74  0EDD               	movlw	-35
 13257  012B76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13258  012B7C  2ADE               	incf	postinc2,f,c
 13259  012B7E  0E00               	movlw	0
 13260  012B80  22DD               	addwfc	postdec2,f,c
 13261                           
 13262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 13263                           ;stkvar	_ap @ sp[(-32)+-6]
 13264  012B82  0EDA               	movlw	-38
 13265  012B84  006F FF8F FFD9     	movff	plusw1,fsr2l
 13266  012B8A  0EDB               	movlw	-37
 13267  012B8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13268  012B92  0E04               	movlw	4
 13269  012B94  5EDE               	subwf	postinc2,f,c
 13270  012B96  0E00               	movlw	0
 13271  012B98  5ADD               	subwfb	postdec2,f,c
 13272  012B9A  006F FF78  F00B    	movff	postinc2,btemp+10
 13273  012BA0  006F FF74  F00C    	movff	postdec2,btemp+11
 13274  012BA6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13275  012BAC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13276  012BB2  006F FF78  F009    	movff	postinc2,btemp+8
 13277  012BB8  006F FF78  F00A    	movff	postinc2,btemp+9
 13278  012BBE  006F FF78  F00B    	movff	postinc2,btemp+10
 13279  012BC4  006F FF78  F00C    	movff	postinc2,btemp+11
 13280                           
 13281                           ;stkvar	_f @ sp[(-32)+22]
 13282  012BCA  0EF6               	movlw	-10
 13283  012BCC  0060  F027  FFE3   	movff	btemp+8,plusw1
 13284  012BD2  0EF7               	movlw	-9
 13285  012BD4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13286  012BDA  0EF8               	movlw	-8
 13287  012BDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13288  012BE2  0EF9               	movlw	-7
 13289  012BE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13290  012BEA                     l12836:
 13291                           
 13292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 13293                           ;stkvar	_c @ sp[(-32)+31]
 13294  012BEA  0EFF               	movlw	-1
 13295  012BEC  50E3               	movf	plusw1,w,c
 13296  012BEE  6EE6               	movwf	postinc1,c
 13297                           
 13298                           ;stkvar	_f @ sp[(-33)+22]
 13299  012BF0  0EF5               	movlw	-11
 13300  012BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 13301  012BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 13302  012BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 13303  012C04  006F FF8F FFE6     	movff	plusw1,postinc1
 13304                           
 13305                           ;stkvar	_fp @ sp[(-37)+-2]
 13306  012C0A  0ED9               	movlw	-39
 13307  012C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13308  012C12  006F FF8F FFE6     	movff	plusw1,postinc1
 13309  012C18  EC00  F080         	call	_efgtoa	;wreg free
 13310  012C1C  D3B6               	goto	l2438
 13311  012C1E                     l12840:
 13312                           
 13313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13314  012C1E  0E02               	movlw	2
 13315  012C20  6EE6               	movwf	postinc1,c
 13316  012C22  0E00               	movlw	0
 13317  012C24  6EE6               	movwf	postinc1,c
 13318  012C26  0EED               	movlw	low STR_82
 13319  012C28  6EE6               	movwf	postinc1,c
 13320  012C2A  0EFF               	movlw	high STR_82
 13321  012C2C  6EE6               	movwf	postinc1,c
 13322                           
 13323                           ;stkvar	_ct @ sp[(-36)+26]
 13324  012C2E  0EF6               	movlw	246
 13325  012C30  24E1               	addwf	fsr1l,w,c
 13326  012C32  6E01               	movwf	btemp^0,c
 13327  012C34  0EFF               	movlw	255
 13328  012C36  20E2               	addwfc	fsr1h,w,c
 13329  012C38  6E02               	movwf	(btemp+1)^0,c
 13330  012C3A  0060  F007  FFE6   	movff	btemp,postinc1
 13331  012C40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13332  012C46  EC4C  F0C0         	call	_strncmp	;wreg free
 13333  012C4A  5001               	movf	btemp^0,w,c
 13334  012C4C  1002               	iorwf	(btemp+1)^0,w,c
 13335  012C4E  A4D8               	btfss	status,2,c
 13336  012C50  D096               	goto	l12860
 13337                           
 13338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13339                           ;stkvar	_fmt @ sp[(-32)+-4]
 13340  012C52  0EDC               	movlw	-36
 13341  012C54  006F FF8F FFD9     	movff	plusw1,fsr2l
 13342  012C5A  0EDD               	movlw	-35
 13343  012C5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13344  012C62  006F FF78  F00B    	movff	postinc2,btemp+10
 13345  012C68  006F FF74  F00C    	movff	postdec2,btemp+11
 13346  012C6E  0E01               	movlw	1
 13347  012C70  260B               	addwf	(btemp+10)^0,f,c
 13348  012C72  0E00               	movlw	0
 13349  012C74  220C               	addwfc	(btemp+11)^0,f,c
 13350  012C76  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13351  012C7C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13352  012C82                     	if	0	;tblptru may be non-zero
 13353  012C82                     	endif
 13354  012C82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13355  012C82  0E00               	movlw	low (__mediumconst shr (0+16))
 13356  012C84  6EF8               	movwf	tblptru,c
 13357  012C86                     	endif
 13358                           
 13359                           ;stkvar	_c @ sp[(-32)+31]
 13360  012C86  0008               	tblrd		*
 13361  012C88  0EFF               	movlw	-1
 13362  012C8A  006F FFD7 FFE3     	movff	tablat,plusw1
 13363  012C90  0EBF               	movlw	191
 13364  012C92  6E0B               	movwf	(btemp+10)^0,c
 13365  012C94  0EFF               	movlw	255
 13366  012C96  6E0C               	movwf	(btemp+11)^0,c
 13367                           
 13368                           ;stkvar	_fmt @ sp[(-32)+-4]
 13369  012C98  0EDC               	movlw	-36
 13370  012C9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13371  012CA0  0EDD               	movlw	-35
 13372  012CA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13373  012CA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13374  012CAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13375  012CB4                     	if	0	;tblptru may be non-zero
 13376  012CB4                     	endif
 13377  012CB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13378  012CB4  0E00               	movlw	low (__mediumconst shr (0+16))
 13379  012CB6  6EF8               	movwf	tblptru,c
 13380  012CB8                     	endif
 13381  012CB8  0008               	tblrd		*
 13382  012CBA  50F5               	movf	tablat,w,c
 13383  012CBC  6E09               	movwf	(btemp+8)^0,c
 13384  012CBE  6A0A               	clrf	(btemp+9)^0,c
 13385  012CC0  500B               	movf	(btemp+10)^0,w,c
 13386  012CC2  2609               	addwf	(btemp+8)^0,f,c
 13387  012CC4  500C               	movf	(btemp+11)^0,w,c
 13388  012CC6  220A               	addwfc	(btemp+9)^0,f,c
 13389  012CC8  500A               	movf	(btemp+9)^0,w,c
 13390  012CCA  E106               	bnz	u12330
 13391  012CCC  0E1A               	movlw	26
 13392  012CCE  5C09               	subwf	(btemp+8)^0,w,c
 13393  012CD0  B0D8               	btfsc	status,0,c
 13394  012CD2  D002               	goto	u12330
 13395  012CD4  0E01               	movlw	1
 13396  012CD6  D001               	goto	u12340
 13397  012CD8                     u12330:
 13398  012CD8  0E00               	movlw	0
 13399  012CDA                     u12340:
 13400  012CDA  6E0B               	movwf	(btemp+10)^0,c
 13401  012CDC  6A0C               	clrf	(btemp+11)^0,c
 13402                           
 13403                           ;stkvar	_vfpfcnvrt$5749 @ sp[(-32)+2]
 13404  012CDE  0EE2               	movlw	-30
 13405  012CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13406  012CE6  0EE3               	movlw	-29
 13407  012CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13408                           
 13409                           ;stkvar	_vfpfcnvrt$5749 @ sp[(-32)+2]
 13410  012CEE  0EE2               	movlw	-30
 13411  012CF0  006F FF8C  F001    	movff	plusw1,btemp
 13412  012CF6  0EE3               	movlw	-29
 13413  012CF8  50E3               	movf	plusw1,w,c
 13414  012CFA  1001               	iorwf	btemp^0,w,c
 13415                           
 13416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13417                           ;stkvar	_ap @ sp[(-32)+-6]
 13418                           
 13419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13420                           
 13421                           ;stkvar	_f @ sp[(-32)+22]
 13422                           
 13423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13424                           ;stkvar	_ap @ sp[(-32)+-6]
 13425  012CFC  0EDA               	movlw	-38
 13426  012CFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13427  012D04  0EDB               	movlw	-37
 13428  012D06  006F FF8F FFDA     	movff	plusw1,fsr2h
 13429  012D0C  0E04               	movlw	4
 13430  012D0E  5EDE               	subwf	postinc2,f,c
 13431  012D10  0E00               	movlw	0
 13432  012D12  5ADD               	subwfb	postdec2,f,c
 13433  012D14  006F FF78  F00B    	movff	postinc2,btemp+10
 13434  012D1A  006F FF74  F00C    	movff	postdec2,btemp+11
 13435  012D20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13436  012D26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13437  012D2C  006F FF78  F009    	movff	postinc2,btemp+8
 13438  012D32  006F FF78  F00A    	movff	postinc2,btemp+9
 13439  012D38  006F FF78  F00B    	movff	postinc2,btemp+10
 13440  012D3E  006F FF78  F00C    	movff	postinc2,btemp+11
 13441                           
 13442                           ;stkvar	_f @ sp[(-32)+22]
 13443  012D44  0EF6               	movlw	-10
 13444  012D46  0060  F027  FFE3   	movff	btemp+8,plusw1
 13445  012D4C  0EF7               	movlw	-9
 13446  012D4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13447  012D54  0EF8               	movlw	-8
 13448  012D56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13449  012D5C  0EF9               	movlw	-7
 13450  012D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13451                           
 13452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13453                           ;stkvar	_fmt @ sp[(-32)+-4]
 13454  012D64  0EDC               	movlw	-36
 13455  012D66  006F FF8F FFD9     	movff	plusw1,fsr2l
 13456  012D6C  0EDD               	movlw	-35
 13457  012D6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13458  012D74  0E02               	movlw	2
 13459  012D76  26DE               	addwf	postinc2,f,c
 13460  012D78  0E00               	movlw	0
 13461  012D7A  22DD               	addwfc	postdec2,f,c
 13462  012D7C  D736               	goto	l12836
 13463  012D7E                     l12860:
 13464                           
 13465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13466                           ;stkvar	_fmt @ sp[(-32)+-4]
 13467  012D7E  0EDC               	movlw	-36
 13468  012D80  006F FF8F FFD9     	movff	plusw1,fsr2l
 13469  012D86  0EDD               	movlw	-35
 13470  012D88  006F FF8F FFDA     	movff	plusw1,fsr2h
 13471  012D8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13472  012D94  006F FF77 FFF7     	movff	postdec2,tblptrh
 13473  012D9A                     	if	0	;tblptru may be non-zero
 13474  012D9A                     	endif
 13475  012D9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13476  012D9A  0E00               	movlw	low (__mediumconst shr (0+16))
 13477  012D9C  6EF8               	movwf	tblptru,c
 13478  012D9E                     	endif
 13479  012D9E  0008               	tblrd		*
 13480  012DA0  50F5               	movf	tablat,w,c
 13481  012DA2  0A73               	xorlw	115
 13482  012DA4  A4D8               	btfss	status,2,c
 13483  012DA6  D042               	goto	l12870
 13484                           
 13485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13486                           ;stkvar	_fmt @ sp[(-32)+-4]
 13487  012DA8  0EDC               	movlw	-36
 13488  012DAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13489  012DB0  0EDD               	movlw	-35
 13490  012DB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13491  012DB8  2ADE               	incf	postinc2,f,c
 13492  012DBA  0E00               	movlw	0
 13493  012DBC  22DD               	addwfc	postdec2,f,c
 13494                           
 13495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13496                           ;stkvar	_ap @ sp[(-32)+-6]
 13497  012DBE  0EDA               	movlw	-38
 13498  012DC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13499  012DC6  0EDB               	movlw	-37
 13500  012DC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13501  012DCE  0E02               	movlw	2
 13502  012DD0  5EDE               	subwf	postinc2,f,c
 13503  012DD2  0E00               	movlw	0
 13504  012DD4  5ADD               	subwfb	postdec2,f,c
 13505  012DD6  006F FF78  F00B    	movff	postinc2,btemp+10
 13506  012DDC  006F FF74  F00C    	movff	postdec2,btemp+11
 13507  012DE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13508  012DE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13509  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 13510  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 13511                           
 13512                           ;stkvar	_cp @ sp[(-32)+29]
 13513  012DFA  0EFE               	movlw	-2
 13514  012DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13515  012E02  0EFD               	movlw	-3
 13516  012E04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13517                           
 13518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13519                           ;stkvar	_cp @ sp[(-32)+29]
 13520  012E0A  0EFD               	movlw	-3
 13521  012E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13522  012E12  006F FF8F FFE6     	movff	plusw1,postinc1
 13523                           
 13524                           ;stkvar	_fp @ sp[(-34)+-2]
 13525  012E18  0EDC               	movlw	-36
 13526  012E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 13527  012E20  006F FF8F FFE6     	movff	plusw1,postinc1
 13528  012E26  EC30  F0BA         	call	_stoa	;wreg free
 13529  012E2A  D2AF               	goto	l2438
 13530  012E2C                     l12870:
 13531                           
 13532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13533                           ;stkvar	_fmt @ sp[(-32)+-4]
 13534  012E2C  0EDC               	movlw	-36
 13535  012E2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13536  012E34  0EDD               	movlw	-35
 13537  012E36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13538  012E3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13539  012E42  006F FF77 FFF7     	movff	postdec2,tblptrh
 13540  012E48                     	if	0	;tblptru may be non-zero
 13541  012E48                     	endif
 13542  012E48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13543  012E48  0E00               	movlw	low (__mediumconst shr (0+16))
 13544  012E4A  6EF8               	movwf	tblptru,c
 13545  012E4C                     	endif
 13546  012E4C  0008               	tblrd		*
 13547  012E4E  50F5               	movf	tablat,w,c
 13548  012E50  0A75               	xorlw	117
 13549  012E52  A4D8               	btfss	status,2,c
 13550  012E54  D07C               	goto	l12880
 13551                           
 13552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13553                           ;stkvar	_fmt @ sp[(-32)+-4]
 13554  012E56  0EDC               	movlw	-36
 13555  012E58  006F FF8F FFD9     	movff	plusw1,fsr2l
 13556  012E5E  0EDD               	movlw	-35
 13557  012E60  006F FF8F FFDA     	movff	plusw1,fsr2h
 13558  012E66  2ADE               	incf	postinc2,f,c
 13559  012E68  0E00               	movlw	0
 13560  012E6A  22DD               	addwfc	postdec2,f,c
 13561                           
 13562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13563                           ;stkvar	_ap @ sp[(-32)+-6]
 13564  012E6C  0EDA               	movlw	-38
 13565  012E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13566  012E74  0EDB               	movlw	-37
 13567  012E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13568  012E7C  0E02               	movlw	2
 13569  012E7E  5EDE               	subwf	postinc2,f,c
 13570  012E80  0E00               	movlw	0
 13571  012E82  5ADD               	subwfb	postdec2,f,c
 13572  012E84  006F FF78  F00B    	movff	postinc2,btemp+10
 13573  012E8A  006F FF74  F00C    	movff	postdec2,btemp+11
 13574  012E90  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13575  012E96  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13576  012E9C  006F FF78  F00B    	movff	postinc2,btemp+10
 13577  012EA2  006F FF74  F00C    	movff	postdec2,btemp+11
 13578  012EA8  500B               	movf	(btemp+10)^0,w,c
 13579  012EAA  6E11               	movwf	(btemp+16)^0,c
 13580  012EAC  500C               	movf	(btemp+11)^0,w,c
 13581  012EAE  6E12               	movwf	(btemp+17)^0,c
 13582  012EB0  6A13               	clrf	(btemp+18)^0,c
 13583  012EB2  6A14               	clrf	(btemp+19)^0,c
 13584  012EB4  6A15               	clrf	(btemp+20)^0,c
 13585  012EB6  6A16               	clrf	(btemp+21)^0,c
 13586  012EB8  6A17               	clrf	(btemp+22)^0,c
 13587  012EBA  6A18               	clrf	(btemp+23)^0,c
 13588                           
 13589                           ;stkvar	_llu @ sp[(-32)+6]
 13590  012EBC  0EE6               	movlw	-26
 13591  012EBE  0060  F047  FFE3   	movff	btemp+16,plusw1
 13592  012EC4  0EE7               	movlw	-25
 13593  012EC6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13594  012ECC  0EE8               	movlw	-24
 13595  012ECE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13596  012ED4  0EE9               	movlw	-23
 13597  012ED6  0060  F053  FFE3   	movff	btemp+19,plusw1
 13598  012EDC  0EEA               	movlw	-22
 13599  012EDE  0060  F057  FFE3   	movff	btemp+20,plusw1
 13600  012EE4  0EEB               	movlw	-21
 13601  012EE6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13602  012EEC  0EEC               	movlw	-20
 13603  012EEE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13604  012EF4  0EED               	movlw	-19
 13605  012EF6  0060  F063  FFE3   	movff	btemp+23,plusw1
 13606                           
 13607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13608                           ;stkvar	_llu @ sp[(-32)+6]
 13609  012EFC  50E1               	movf	fsr1l,w,c
 13610  012EFE  0FE6               	addlw	-26
 13611  012F00  6ED9               	movwf	fsr2l,c
 13612  012F02  50E2               	movf	fsr1h,w,c
 13613  012F04  6EDA               	movwf	fsr2h,c
 13614  012F06  0EFF               	movlw	255
 13615  012F08  22DA               	addwfc	fsr2h,f,c
 13616  012F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 13617  012F10  006F FF7B FFE6     	movff	postinc2,postinc1
 13618  012F16  006F FF7B FFE6     	movff	postinc2,postinc1
 13619  012F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 13620  012F22  006F FF7B FFE6     	movff	postinc2,postinc1
 13621  012F28  006F FF7B FFE6     	movff	postinc2,postinc1
 13622  012F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 13623  012F34  006F FF7B FFE6     	movff	postinc2,postinc1
 13624                           
 13625                           ;stkvar	_fp @ sp[(-40)+-2]
 13626  012F3A  0ED6               	movlw	-42
 13627  012F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13628  012F42  006F FF8F FFE6     	movff	plusw1,postinc1
 13629  012F48  EC18  F0B4         	call	_utoa	;wreg free
 13630  012F4C  D21E               	goto	l2438
 13631  012F4E                     l12880:
 13632                           
 13633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13634  012F4E  0E02               	movlw	2
 13635  012F50  6EE6               	movwf	postinc1,c
 13636  012F52  0E00               	movlw	0
 13637  012F54  6EE6               	movwf	postinc1,c
 13638  012F56  0EF3               	movlw	low STR_87
 13639  012F58  6EE6               	movwf	postinc1,c
 13640  012F5A  0EFF               	movlw	high STR_87
 13641  012F5C  6EE6               	movwf	postinc1,c
 13642                           
 13643                           ;stkvar	_fmt @ sp[(-36)+-4]
 13644  012F5E  0ED8               	movlw	-40
 13645  012F60  006F FF8F FFD9     	movff	plusw1,fsr2l
 13646  012F66  0ED9               	movlw	-39
 13647  012F68  006F FF8F FFDA     	movff	plusw1,fsr2h
 13648  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 13649  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 13650  012F7A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13651  012F80  0060  F033  FFE6   	movff	btemp+11,postinc1
 13652  012F86  EC4C  F0C0         	call	_strncmp	;wreg free
 13653  012F8A  5001               	movf	btemp^0,w,c
 13654  012F8C  1002               	iorwf	(btemp+1)^0,w,c
 13655  012F8E  A4D8               	btfss	status,2,c
 13656  012F90  D039               	goto	l12890
 13657                           
 13658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 13659                           ;stkvar	_fmt @ sp[(-32)+-4]
 13660  012F92  0EDC               	movlw	-36
 13661  012F94  006F FF8F FFD9     	movff	plusw1,fsr2l
 13662  012F9A  0EDD               	movlw	-35
 13663  012F9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13664  012FA2  0E02               	movlw	2
 13665  012FA4  26DE               	addwf	postinc2,f,c
 13666  012FA6  0E00               	movlw	0
 13667  012FA8  22DD               	addwfc	postdec2,f,c
 13668                           
 13669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13670                           ;stkvar	_ap @ sp[(-32)+-6]
 13671  012FAA  0EDA               	movlw	-38
 13672  012FAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13673  012FB2  0EDB               	movlw	-37
 13674  012FB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13675  012FBA  0E04               	movlw	4
 13676  012FBC  5EDE               	subwf	postinc2,f,c
 13677  012FBE  0E00               	movlw	0
 13678  012FC0  5ADD               	subwfb	postdec2,f,c
 13679  012FC2  006F FF78  F00B    	movff	postinc2,btemp+10
 13680  012FC8  006F FF74  F00C    	movff	postdec2,btemp+11
 13681  012FCE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13682  012FD4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13683  012FDA  006F FF78  F009    	movff	postinc2,btemp+8
 13684  012FE0  006F FF78  F00A    	movff	postinc2,btemp+9
 13685  012FE6  006F FF78  F00B    	movff	postinc2,btemp+10
 13686  012FEC  006F FF78  F00C    	movff	postinc2,btemp+11
 13687  012FF2  5009               	movf	(btemp+8)^0,w,c
 13688  012FF4  6E11               	movwf	(btemp+16)^0,c
 13689  012FF6  500A               	movf	(btemp+9)^0,w,c
 13690  012FF8  6E12               	movwf	(btemp+17)^0,c
 13691  012FFA  500B               	movf	(btemp+10)^0,w,c
 13692  012FFC  6E13               	movwf	(btemp+18)^0,c
 13693  012FFE  500C               	movf	(btemp+11)^0,w,c
 13694  013000  6E14               	movwf	(btemp+19)^0,c
 13695  013002  D758               	goto	L11
 13696  013004                     l12890:
 13697                           
 13698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 13699                           ;stkvar	_fmt @ sp[(-32)+-4]
 13700  013004  0EDC               	movlw	-36
 13701  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 13702  01300C  0EDD               	movlw	-35
 13703  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13704  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 13705  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13706  013020                     	if	0	;tblptru may be non-zero
 13707  013020                     	endif
 13708  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13709  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 13710  013022  6EF8               	movwf	tblptru,c
 13711  013024                     	endif
 13712  013024  0008               	tblrd		*
 13713  013026  50F5               	movf	tablat,w,c
 13714  013028  0A78               	xorlw	120
 13715  01302A  B4D8               	btfsc	status,2,c
 13716  01302C  D015               	goto	u12400
 13717                           
 13718                           ;stkvar	_fmt @ sp[(-32)+-4]
 13719  01302E  0EDC               	movlw	-36
 13720  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 13721  013036  0EDD               	movlw	-35
 13722  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 13723  01303E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13724  013044  006F FF77 FFF7     	movff	postdec2,tblptrh
 13725  01304A                     	if	0	;tblptru may be non-zero
 13726  01304A                     	endif
 13727  01304A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13728  01304A  0E00               	movlw	low (__mediumconst shr (0+16))
 13729  01304C  6EF8               	movwf	tblptru,c
 13730  01304E                     	endif
 13731  01304E  0008               	tblrd		*
 13732  013050  50F5               	movf	tablat,w,c
 13733  013052  0A58               	xorlw	88
 13734  013054  A4D8               	btfss	status,2,c
 13735  013056  D094               	goto	l12904
 13736  013058                     u12400:
 13737                           
 13738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13739                           ;stkvar	_fmt @ sp[(-32)+-4]
 13740  013058  0EDC               	movlw	-36
 13741  01305A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13742  013060  0EDD               	movlw	-35
 13743  013062  006F FF8F FFDA     	movff	plusw1,fsr2h
 13744  013068  006F FF7B FFF6     	movff	postinc2,tblptrl
 13745  01306E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13746  013074                     	if	0	;tblptru may be non-zero
 13747  013074                     	endif
 13748  013074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13749  013074  0E00               	movlw	low (__mediumconst shr (0+16))
 13750  013076  6EF8               	movwf	tblptru,c
 13751  013078                     	endif
 13752                           
 13753                           ;stkvar	_c @ sp[(-32)+31]
 13754  013078  0008               	tblrd		*
 13755  01307A  0EFF               	movlw	-1
 13756  01307C  006F FFD7 FFE3     	movff	tablat,plusw1
 13757                           
 13758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13759                           ;stkvar	_fmt @ sp[(-32)+-4]
 13760  013082  0EDC               	movlw	-36
 13761  013084  006F FF8F FFD9     	movff	plusw1,fsr2l
 13762  01308A  0EDD               	movlw	-35
 13763  01308C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13764  013092  2ADE               	incf	postinc2,f,c
 13765  013094  0E00               	movlw	0
 13766  013096  22DD               	addwfc	postdec2,f,c
 13767                           
 13768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13769                           ;stkvar	_ap @ sp[(-32)+-6]
 13770  013098  0EDA               	movlw	-38
 13771  01309A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13772  0130A0  0EDB               	movlw	-37
 13773  0130A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13774  0130A8  0E02               	movlw	2
 13775  0130AA  5EDE               	subwf	postinc2,f,c
 13776  0130AC  0E00               	movlw	0
 13777  0130AE  5ADD               	subwfb	postdec2,f,c
 13778  0130B0  006F FF78  F00B    	movff	postinc2,btemp+10
 13779  0130B6  006F FF74  F00C    	movff	postdec2,btemp+11
 13780  0130BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13781  0130C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13782  0130C8  006F FF78  F00B    	movff	postinc2,btemp+10
 13783  0130CE  006F FF74  F00C    	movff	postdec2,btemp+11
 13784  0130D4  500B               	movf	(btemp+10)^0,w,c
 13785  0130D6  6E11               	movwf	(btemp+16)^0,c
 13786  0130D8  500C               	movf	(btemp+11)^0,w,c
 13787  0130DA  6E12               	movwf	(btemp+17)^0,c
 13788  0130DC  6A13               	clrf	(btemp+18)^0,c
 13789  0130DE  6A14               	clrf	(btemp+19)^0,c
 13790  0130E0  6A15               	clrf	(btemp+20)^0,c
 13791  0130E2  6A16               	clrf	(btemp+21)^0,c
 13792  0130E4  6A17               	clrf	(btemp+22)^0,c
 13793  0130E6  6A18               	clrf	(btemp+23)^0,c
 13794                           
 13795                           ;stkvar	_llu @ sp[(-32)+6]
 13796  0130E8  0EE6               	movlw	-26
 13797  0130EA  0060  F047  FFE3   	movff	btemp+16,plusw1
 13798  0130F0  0EE7               	movlw	-25
 13799  0130F2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13800  0130F8  0EE8               	movlw	-24
 13801  0130FA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13802  013100  0EE9               	movlw	-23
 13803  013102  0060  F053  FFE3   	movff	btemp+19,plusw1
 13804  013108  0EEA               	movlw	-22
 13805  01310A  0060  F057  FFE3   	movff	btemp+20,plusw1
 13806  013110  0EEB               	movlw	-21
 13807  013112  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13808  013118  0EEC               	movlw	-20
 13809  01311A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13810  013120  0EED               	movlw	-19
 13811  013122  0060  F063  FFE3   	movff	btemp+23,plusw1
 13812                           
 13813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13814                           ;stkvar	_c @ sp[(-32)+31]
 13815  013128  0EFF               	movlw	-1
 13816  01312A  50E3               	movf	plusw1,w,c
 13817  01312C  6EE6               	movwf	postinc1,c
 13818                           
 13819                           ;stkvar	_llu @ sp[(-33)+6]
 13820  01312E  50E1               	movf	fsr1l,w,c
 13821  013130  0FE5               	addlw	-27
 13822  013132  6ED9               	movwf	fsr2l,c
 13823  013134  50E2               	movf	fsr1h,w,c
 13824  013136  6EDA               	movwf	fsr2h,c
 13825  013138  0EFF               	movlw	255
 13826  01313A  22DA               	addwfc	fsr2h,f,c
 13827  01313C  006F FF7B FFE6     	movff	postinc2,postinc1
 13828  013142  006F FF7B FFE6     	movff	postinc2,postinc1
 13829  013148  006F FF7B FFE6     	movff	postinc2,postinc1
 13830  01314E  006F FF7B FFE6     	movff	postinc2,postinc1
 13831  013154  006F FF7B FFE6     	movff	postinc2,postinc1
 13832  01315A  006F FF7B FFE6     	movff	postinc2,postinc1
 13833  013160  006F FF7B FFE6     	movff	postinc2,postinc1
 13834  013166  006F FF7B FFE6     	movff	postinc2,postinc1
 13835                           
 13836                           ;stkvar	_fp @ sp[(-41)+-2]
 13837  01316C  0ED5               	movlw	-43
 13838  01316E  006F FF8F FFE6     	movff	plusw1,postinc1
 13839  013174  006F FF8F FFE6     	movff	plusw1,postinc1
 13840  01317A  EC85  F0B0         	call	_xtoa	;wreg free
 13841  01317E  D105               	goto	l2438
 13842  013180                     l12904:
 13843                           
 13844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13845  013180  0E02               	movlw	2
 13846  013182  6EE6               	movwf	postinc1,c
 13847  013184  0E00               	movlw	0
 13848  013186  6EE6               	movwf	postinc1,c
 13849  013188  0EF6               	movlw	low STR_92
 13850  01318A  6EE6               	movwf	postinc1,c
 13851  01318C  0EFF               	movlw	high STR_92
 13852  01318E  6EE6               	movwf	postinc1,c
 13853                           
 13854                           ;stkvar	_fmt @ sp[(-36)+-4]
 13855  013190  0ED8               	movlw	-40
 13856  013192  006F FF8F FFD9     	movff	plusw1,fsr2l
 13857  013198  0ED9               	movlw	-39
 13858  01319A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13859  0131A0  006F FF78  F00B    	movff	postinc2,btemp+10
 13860  0131A6  006F FF74  F00C    	movff	postdec2,btemp+11
 13861  0131AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13862  0131B2  0060  F033  FFE6   	movff	btemp+11,postinc1
 13863  0131B8  EC4C  F0C0         	call	_strncmp	;wreg free
 13864  0131BC  5001               	movf	btemp^0,w,c
 13865  0131BE  1002               	iorwf	(btemp+1)^0,w,c
 13866  0131C0  B4D8               	btfsc	status,2,c
 13867  0131C2  D022               	goto	u12420
 13868  0131C4  0E02               	movlw	2
 13869  0131C6  6EE6               	movwf	postinc1,c
 13870  0131C8  0E00               	movlw	0
 13871  0131CA  6EE6               	movwf	postinc1,c
 13872  0131CC  0EE7               	movlw	low STR_96
 13873  0131CE  6EE6               	movwf	postinc1,c
 13874  0131D0  0EFF               	movlw	high STR_96
 13875  0131D2  6EE6               	movwf	postinc1,c
 13876                           
 13877                           ;stkvar	_fmt @ sp[(-36)+-4]
 13878  0131D4  0ED8               	movlw	-40
 13879  0131D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13880  0131DC  0ED9               	movlw	-39
 13881  0131DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13882  0131E4  006F FF78  F00B    	movff	postinc2,btemp+10
 13883  0131EA  006F FF74  F00C    	movff	postdec2,btemp+11
 13884  0131F0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13885  0131F6  0060  F033  FFE6   	movff	btemp+11,postinc1
 13886  0131FC  EC4C  F0C0         	call	_strncmp	;wreg free
 13887  013200  5001               	movf	btemp^0,w,c
 13888  013202  1002               	iorwf	(btemp+1)^0,w,c
 13889  013204  A4D8               	btfss	status,2,c
 13890  013206  D058               	goto	l12918
 13891  013208                     u12420:
 13892                           
 13893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13894                           ;stkvar	_fmt @ sp[(-32)+-4]
 13895  013208  0EDC               	movlw	-36
 13896  01320A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13897  013210  0EDD               	movlw	-35
 13898  013212  006F FF8F FFDA     	movff	plusw1,fsr2h
 13899  013218  006F FF78  F00B    	movff	postinc2,btemp+10
 13900  01321E  006F FF74  F00C    	movff	postdec2,btemp+11
 13901  013224  0E01               	movlw	1
 13902  013226  260B               	addwf	(btemp+10)^0,f,c
 13903  013228  0E00               	movlw	0
 13904  01322A  220C               	addwfc	(btemp+11)^0,f,c
 13905  01322C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13906  013232  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13907  013238                     	if	0	;tblptru may be non-zero
 13908  013238                     	endif
 13909  013238                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13910  013238  0E00               	movlw	low (__mediumconst shr (0+16))
 13911  01323A  6EF8               	movwf	tblptru,c
 13912  01323C                     	endif
 13913                           
 13914                           ;stkvar	_c @ sp[(-32)+31]
 13915  01323C  0008               	tblrd		*
 13916  01323E  0EFF               	movlw	-1
 13917  013240  006F FFD7 FFE3     	movff	tablat,plusw1
 13918                           
 13919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13920                           ;stkvar	_fmt @ sp[(-32)+-4]
 13921  013246  0EDC               	movlw	-36
 13922  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 13923  01324E  0EDD               	movlw	-35
 13924  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 13925  013256  0E02               	movlw	2
 13926  013258  26DE               	addwf	postinc2,f,c
 13927  01325A  0E00               	movlw	0
 13928  01325C  22DD               	addwfc	postdec2,f,c
 13929                           
 13930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13931                           ;stkvar	_ap @ sp[(-32)+-6]
 13932  01325E  0EDA               	movlw	-38
 13933  013260  006F FF8F FFD9     	movff	plusw1,fsr2l
 13934  013266  0EDB               	movlw	-37
 13935  013268  006F FF8F FFDA     	movff	plusw1,fsr2h
 13936  01326E  0E04               	movlw	4
 13937  013270  5EDE               	subwf	postinc2,f,c
 13938  013272  0E00               	movlw	0
 13939  013274  5ADD               	subwfb	postdec2,f,c
 13940  013276  006F FF78  F00B    	movff	postinc2,btemp+10
 13941  01327C  006F FF74  F00C    	movff	postdec2,btemp+11
 13942  013282  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13943  013288  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13944  01328E  006F FF78  F009    	movff	postinc2,btemp+8
 13945  013294  006F FF78  F00A    	movff	postinc2,btemp+9
 13946  01329A  006F FF78  F00B    	movff	postinc2,btemp+10
 13947  0132A0  006F FF78  F00C    	movff	postinc2,btemp+11
 13948  0132A6  5009               	movf	(btemp+8)^0,w,c
 13949  0132A8  6E11               	movwf	(btemp+16)^0,c
 13950  0132AA  500A               	movf	(btemp+9)^0,w,c
 13951  0132AC  6E12               	movwf	(btemp+17)^0,c
 13952  0132AE  500B               	movf	(btemp+10)^0,w,c
 13953  0132B0  6E13               	movwf	(btemp+18)^0,c
 13954  0132B2  500C               	movf	(btemp+11)^0,w,c
 13955  0132B4  6E14               	movwf	(btemp+19)^0,c
 13956  0132B6  D714               	goto	L12
 13957  0132B8                     l12918:
 13958                           
 13959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13960                           ;stkvar	_fmt @ sp[(-32)+-4]
 13961  0132B8  0EDC               	movlw	-36
 13962  0132BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13963  0132C0  0EDD               	movlw	-35
 13964  0132C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13965  0132C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13966  0132CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13967  0132D4                     	if	0	;tblptru may be non-zero
 13968  0132D4                     	endif
 13969  0132D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13970  0132D4  0E00               	movlw	low (__mediumconst shr (0+16))
 13971  0132D6  6EF8               	movwf	tblptru,c
 13972  0132D8                     	endif
 13973  0132D8  0008               	tblrd		*
 13974  0132DA  50F5               	movf	tablat,w,c
 13975  0132DC  0A25               	xorlw	37
 13976  0132DE  A4D8               	btfss	status,2,c
 13977  0132E0  D01A               	goto	l12928
 13978                           
 13979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 13980                           ;stkvar	_fmt @ sp[(-32)+-4]
 13981  0132E2  0EDC               	movlw	-36
 13982  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13983  0132EA  0EDD               	movlw	-35
 13984  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13985  0132F2  2ADE               	incf	postinc2,f,c
 13986  0132F4  0E00               	movlw	0
 13987  0132F6  22DD               	addwfc	postdec2,f,c
 13988                           
 13989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 13990                           ;stkvar	_fp @ sp[(-32)+-2]
 13991  0132F8  0EDE               	movlw	-34
 13992  0132FA  006F FF8F FFE6     	movff	plusw1,postinc1
 13993  013300  006F FF8F FFE6     	movff	plusw1,postinc1
 13994  013306  0E25               	movlw	37
 13995  013308  6EE6               	movwf	postinc1,c
 13996  01330A  0E00               	movlw	0
 13997  01330C  6EE6               	movwf	postinc1,c
 13998  01330E  ECE6  F0CC         	call	_fputc	;wreg free
 13999  013312                     l12924:
 14000                           
 14001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14002  013312  0E01               	movlw	1
 14003  013314  D00C               	goto	L13
 14004  013316                     l12928:
 14005                           
 14006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14007                           ;stkvar	_fmt @ sp[(-32)+-4]
 14008  013316  0EDC               	movlw	-36
 14009  013318  006F FF8F FFD9     	movff	plusw1,fsr2l
 14010  01331E  0EDD               	movlw	-35
 14011  013320  006F FF8F FFDA     	movff	plusw1,fsr2h
 14012  013326  2ADE               	incf	postinc2,f,c
 14013  013328  0E00               	movlw	0
 14014  01332A  22DD               	addwfc	postdec2,f,c
 14015                           
 14016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 14017  01332C  0E00               	movlw	0
 14018  01332E                     L13:
 14019  01332E  6E01               	movwf	btemp^0,c
 14020  013330  0E00               	movlw	0
 14021  013332  6E02               	movwf	(btemp+1)^0,c
 14022  013334  D02A               	goto	l2438
 14023  013336                     l12934:
 14024                           
 14025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14026                           ;stkvar	_fp @ sp[(-32)+-2]
 14027  013336  0EDE               	movlw	-34
 14028  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 14029  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 14030                           
 14031                           ;stkvar	_fmt @ sp[(-34)+-4]
 14032  013344  0EDA               	movlw	-38
 14033  013346  006F FF8F FFD9     	movff	plusw1,fsr2l
 14034  01334C  0EDB               	movlw	-37
 14035  01334E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14036  013354  006F FF7B FFF6     	movff	postinc2,tblptrl
 14037  01335A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14038  013360                     	if	0	;tblptru may be non-zero
 14039  013360                     	endif
 14040  013360                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14041  013360  0E00               	movlw	low (__mediumconst shr (0+16))
 14042  013362  6EF8               	movwf	tblptru,c
 14043  013364                     	endif
 14044  013364  0008               	tblrd		*
 14045  013366  50F5               	movf	tablat,w,c
 14046  013368  6EE6               	movwf	postinc1,c
 14047  01336A  0E00               	movlw	0
 14048  01336C  6EE6               	movwf	postinc1,c
 14049  01336E  ECE6  F0CC         	call	_fputc	;wreg free
 14050                           
 14051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14052                           ;stkvar	_fmt @ sp[(-32)+-4]
 14053  013372  0EDC               	movlw	-36
 14054  013374  006F FF8F FFD9     	movff	plusw1,fsr2l
 14055  01337A  0EDD               	movlw	-35
 14056  01337C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14057  013382  2ADE               	incf	postinc2,f,c
 14058  013384  0E00               	movlw	0
 14059  013386  22DD               	addwfc	postdec2,f,c
 14060  013388  D7C4               	goto	l12924
 14061  01338A                     l2438:
 14062                           
 14063                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 14064  01338A  0EDA               	movlw	218
 14065  01338C  26E1               	addwf	fsr1l,f,c
 14066  01338E  0EFF               	movlw	255
 14067  013390  22E2               	addwfc	fsr1h,f,c
 14068  013392  0012               	return		;funcret
 14069  013394                     __end_of_vfpfcnvrt:
 14070                           	opt callstack 0
 14071                           
 14072 ;; *************** function _xtoa *****************
 14073 ;; Defined at:
 14074 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14075 ;; Parameters:    Size  Location     Type
 14076 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14077 ;;		 -> f(6), NULL(0), 
 14078 ;;  d               8  [STACK] unsigned long long 
 14079 ;;  x               1  [STACK] unsigned char 
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;  n               8  [STACK] unsigned long long 
 14082 ;;  c               2  [STACK] int 
 14083 ;;  i               2  [STACK] int 
 14084 ;;  w               2  [STACK] int 
 14085 ;;  p               2  [STACK] int 
 14086 ;; Return value:  Size  Location     Type
 14087 ;;                  2  [STACK] int 
 14088 ;; Registers used:
 14089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14090 ;; Tracked objects:
 14091 ;;		On entry : 0/0
 14092 ;;		On exit  : 0/0
 14093 ;;		Unchanged: 0/0
 14094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14099 ;;Total ram usage:        0 bytes
 14100 ;; Hardware stack levels used:    1
 14101 ;; Hardware stack levels required when called:   20
 14102 ;; This function calls:
 14103 ;;		_isalpha
 14104 ;;		_isupper
 14105 ;;		_pad
 14106 ;;		_toupper
 14107 ;; This function is called by:
 14108 ;;		_vfpfcnvrt
 14109 ;; This function uses a reentrant model
 14110 ;;
 14111                           
 14112                           	psect	text53
 14113  01610A                     __ptext53:
 14114                           	opt callstack 0
 14115  01610A                     _xtoa:
 14116                           	opt callstack 0
 14117                           
 14118                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14119  01610A  0E14               	movlw	20
 14120  01610C  26E1               	addwf	fsr1l,f,c
 14121  01610E  0E00               	movlw	0
 14122  016110  22E2               	addwfc	fsr1h,f,c
 14123                           
 14124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14125                           
 14126                           ;incstack = 0
 14127 ;; hardware stack exceeded
 14128  016112  AE3D               	btfss	(_prec+1)^0,7,c
 14129                           
 14130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14131  016114  923E               	bcf	_flags^0,1,c
 14132                           
 14133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14134  016116  BE3D               	btfsc	(_prec+1)^0,7,c
 14135  016118  D005               	goto	u11960
 14136  01611A  503D               	movf	(_prec+1)^0,w,c
 14137  01611C  E110               	bnz	l12654
 14138  01611E  043C               	decf	_prec^0,w,c
 14139  016120  B0D8               	btfsc	status,0,c
 14140  016122  D00D               	goto	l12654
 14141  016124                     u11960:
 14142  016124  0E01               	movlw	1
 14143  016126  6E0B               	movwf	(btemp+10)^0,c
 14144  016128  0E00               	movlw	0
 14145  01612A  6E0C               	movwf	(btemp+11)^0,c
 14146                           
 14147                           ;stkvar	_p @ sp[(-20)+18]
 14148  01612C  0EFE               	movlw	-2
 14149  01612E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14150  016134  0EFF               	movlw	-1
 14151  016136  0060  F033  FFE3   	movff	btemp+11,plusw1
 14152  01613C  D008               	goto	l2388
 14153  01613E                     l12654:
 14154                           
 14155                           ;stkvar	_p @ sp[(-20)+18]
 14156  01613E  0EFE               	movlw	-2
 14157  016140  0060  F0F3  FFE3   	movff	_prec,plusw1
 14158  016146  0EFF               	movlw	-1
 14159  016148  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14160  01614E                     l2388:
 14161                           
 14162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14163                           ;stkvar	_w @ sp[(-20)+16]
 14164  01614E  0EFC               	movlw	-4
 14165  016150  0060  F0EB  FFE3   	movff	_width,plusw1
 14166  016156  0EFD               	movlw	-3
 14167  016158  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14168                           
 14169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14170  01615E  A83E               	btfss	_flags^0,4,c
 14171  016160  D00B               	goto	l12660
 14172                           
 14173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14174                           ;stkvar	_w @ sp[(-20)+16]
 14175  016162  50E1               	movf	fsr1l,w,c
 14176  016164  0FFC               	addlw	-4
 14177  016166  6ED9               	movwf	fsr2l,c
 14178  016168  50E2               	movf	fsr1h,w,c
 14179  01616A  6EDA               	movwf	fsr2h,c
 14180  01616C  0EFF               	movlw	255
 14181  01616E  22DA               	addwfc	fsr2h,f,c
 14182  016170  0EFE               	movlw	254
 14183  016172  26DE               	addwf	postinc2,f,c
 14184  016174  0EFF               	movlw	255
 14185  016176  22DD               	addwfc	postdec2,f,c
 14186  016178                     l12660:
 14187                           
 14188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14189                           ;stkvar	_d @ sp[(-20)+-10]
 14190  016178  0EE2               	movlw	226
 14191  01617A  24E1               	addwf	fsr1l,w,c
 14192  01617C  6ED9               	movwf	fsr2l,c
 14193  01617E  0EFF               	movlw	255
 14194  016180  20E2               	addwfc	fsr1h,w,c
 14195  016182  6EDA               	movwf	fsr2h,c
 14196                           
 14197                           ;stkvar	_n @ sp[(-20)+4]
 14198  016184  0E08               	movlw	8
 14199  016186  6E01               	movwf	btemp^0,c
 14200  016188  0EF0               	movlw	-16
 14201  01618A                     us1198999:
 14202  01618A  006F FF7B FFE3     	movff	postinc2,plusw1
 14203  016190  28E8               	incf	wreg,w,c
 14204  016192  2E01               	decfsz	btemp^0,f,c
 14205  016194  D7FA               	bra	us1198999
 14206                           
 14207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14208  016196  0E4F               	movlw	79
 14209  016198  6E0B               	movwf	(btemp+10)^0,c
 14210  01619A  0E00               	movlw	0
 14211  01619C  6E0C               	movwf	(btemp+11)^0,c
 14212                           
 14213                           ;stkvar	_i @ sp[(-20)+14]
 14214  01619E  0EFA               	movlw	-6
 14215  0161A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14216  0161A6  0EFB               	movlw	-5
 14217  0161A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14218                           
 14219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14220  0161AE  0102               	movlb	2	; () banked
 14221  0161B0  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14222                           
 14223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14224  0161B2  D0EE               	goto	l12698
 14225  0161B4                     l12666:
 14226                           
 14227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 14228                           ;stkvar	_i @ sp[(-20)+14]
 14229  0161B4  50E1               	movf	fsr1l,w,c
 14230  0161B6  0FFA               	addlw	-6
 14231  0161B8  6ED9               	movwf	fsr2l,c
 14232  0161BA  50E2               	movf	fsr1h,w,c
 14233  0161BC  6EDA               	movwf	fsr2h,c
 14234  0161BE  0EFF               	movlw	255
 14235  0161C0  22DA               	addwfc	fsr2h,f,c
 14236  0161C2  06DE               	decf	postinc2,f,c
 14237  0161C4  0E00               	movlw	0
 14238  0161C6  5ADD               	subwfb	postdec2,f,c
 14239                           
 14240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14241                           ;stkvar	_n @ sp[(-20)+4]
 14242  0161C8  0EF0               	movlw	-16
 14243  0161CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14244  0161D0  0EF1               	movlw	-15
 14245  0161D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 14246  0161D8  0E0F               	movlw	15
 14247  0161DA  160B               	andwf	(btemp+10)^0,f,c
 14248  0161DC  0E00               	movlw	0
 14249  0161DE  160C               	andwf	(btemp+11)^0,f,c
 14250                           
 14251                           ;stkvar	_c @ sp[(-20)+12]
 14252  0161E0  0EF8               	movlw	-8
 14253  0161E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14254  0161E8  0EF9               	movlw	-7
 14255  0161EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14256                           
 14257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14258                           ;stkvar	_c @ sp[(-20)+12]
 14259  0161F0  0EF9               	movlw	-7
 14260  0161F2  BEE3               	btfsc	plusw1,7,c
 14261  0161F4  D00F               	goto	l12674
 14262  0161F6  0EF9               	movlw	-7
 14263  0161F8  50E3               	movf	plusw1,w,c
 14264  0161FA  E108               	bnz	u11990
 14265  0161FC  0EF8               	movlw	-8
 14266  0161FE  006F FF8C  F001    	movff	plusw1,btemp
 14267  016204  0E0A               	movlw	10
 14268  016206  5E01               	subwf	btemp^0,f,c
 14269  016208  A0D8               	btfss	status,0,c
 14270  01620A  D004               	goto	l12674
 14271  01620C                     u11990:
 14272                           
 14273                           ;stkvar	_c @ sp[(-20)+12]
 14274  01620C  0EF8               	movlw	-8
 14275  01620E  50E3               	movf	plusw1,w,c
 14276  016210  0F57               	addlw	87
 14277  016212  D003               	goto	L14
 14278  016214                     l12674:
 14279                           
 14280                           ;stkvar	_c @ sp[(-20)+12]
 14281  016214  0EF8               	movlw	-8
 14282  016216  50E3               	movf	plusw1,w,c
 14283  016218  0F30               	addlw	48
 14284  01621A                     L14:
 14285  01621A  6E0B               	movwf	(btemp+10)^0,c
 14286  01621C  0EF9               	movlw	-7
 14287  01621E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14288  016224  0E00               	movlw	0
 14289  016226  220C               	addwfc	(btemp+11)^0,f,c
 14290                           
 14291                           ;stkvar	_c @ sp[(-20)+12]
 14292  016228  0EF8               	movlw	-8
 14293  01622A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14294  016230  0EF9               	movlw	-7
 14295  016232  0060  F033  FFE3   	movff	btemp+11,plusw1
 14296  016238  0EBF               	movlw	191
 14297  01623A  6E0B               	movwf	(btemp+10)^0,c
 14298  01623C  0EFF               	movlw	255
 14299  01623E  6E0C               	movwf	(btemp+11)^0,c
 14300                           
 14301                           ;stkvar	_x @ sp[(-20)+-11]
 14302  016240  0EE1               	movlw	-31
 14303  016242  50E3               	movf	plusw1,w,c
 14304  016244  6E09               	movwf	(btemp+8)^0,c
 14305  016246  6A0A               	clrf	(btemp+9)^0,c
 14306  016248  500B               	movf	(btemp+10)^0,w,c
 14307  01624A  2609               	addwf	(btemp+8)^0,f,c
 14308  01624C  500C               	movf	(btemp+11)^0,w,c
 14309  01624E  220A               	addwfc	(btemp+9)^0,f,c
 14310  016250  500A               	movf	(btemp+9)^0,w,c
 14311  016252  E106               	bnz	u12000
 14312  016254  0E1A               	movlw	26
 14313  016256  5C09               	subwf	(btemp+8)^0,w,c
 14314  016258  B0D8               	btfsc	status,0,c
 14315  01625A  D002               	goto	u12000
 14316  01625C  0E01               	movlw	1
 14317  01625E  D001               	goto	u12010
 14318  016260                     u12000:
 14319  016260  0E00               	movlw	0
 14320  016262                     u12010:
 14321  016262  6E0B               	movwf	(btemp+10)^0,c
 14322  016264  6A0C               	clrf	(btemp+11)^0,c
 14323                           
 14324                           ;stkvar	_xtoa$5722 @ sp[(-20)+2]
 14325  016266  0EEE               	movlw	-18
 14326  016268  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14327  01626E  0EEF               	movlw	-17
 14328  016270  0060  F033  FFE3   	movff	btemp+11,plusw1
 14329                           
 14330                           ;stkvar	_xtoa$5722 @ sp[(-20)+2]
 14331  016276  0EEE               	movlw	-18
 14332  016278  006F FF8C  F001    	movff	plusw1,btemp
 14333  01627E  0EEF               	movlw	-17
 14334  016280  50E3               	movf	plusw1,w,c
 14335  016282  1001               	iorwf	btemp^0,w,c
 14336  016284  B4D8               	btfsc	status,2,c
 14337  016286  D041               	goto	l12690
 14338  016288  0E9F               	movlw	159
 14339  01628A  6E0B               	movwf	(btemp+10)^0,c
 14340  01628C  0EFF               	movlw	255
 14341  01628E  6E0C               	movwf	(btemp+11)^0,c
 14342                           
 14343                           ;stkvar	_c @ sp[(-20)+12]
 14344  016290  0EF8               	movlw	-8
 14345  016292  006F FF8C  F009    	movff	plusw1,btemp+8
 14346  016298  0EF9               	movlw	-7
 14347  01629A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14348  0162A0  0E20               	movlw	32
 14349  0162A2  1209               	iorwf	(btemp+8)^0,f,c
 14350  0162A4  0E00               	movlw	0
 14351  0162A6  120A               	iorwf	(btemp+9)^0,f,c
 14352  0162A8  500B               	movf	(btemp+10)^0,w,c
 14353  0162AA  2609               	addwf	(btemp+8)^0,f,c
 14354  0162AC  500C               	movf	(btemp+11)^0,w,c
 14355  0162AE  220A               	addwfc	(btemp+9)^0,f,c
 14356  0162B0  500A               	movf	(btemp+9)^0,w,c
 14357  0162B2  E106               	bnz	u12030
 14358  0162B4  0E1A               	movlw	26
 14359  0162B6  5C09               	subwf	(btemp+8)^0,w,c
 14360  0162B8  B0D8               	btfsc	status,0,c
 14361  0162BA  D002               	goto	u12030
 14362  0162BC  0E01               	movlw	1
 14363  0162BE  D001               	goto	u12040
 14364  0162C0                     u12030:
 14365  0162C0  0E00               	movlw	0
 14366  0162C2                     u12040:
 14367  0162C2  6E0B               	movwf	(btemp+10)^0,c
 14368  0162C4  6A0C               	clrf	(btemp+11)^0,c
 14369                           
 14370                           ;stkvar	_xtoa$5723 @ sp[(-20)+0]
 14371  0162C6  0EEC               	movlw	-20
 14372  0162C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14373  0162CE  0EED               	movlw	-19
 14374  0162D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14375                           
 14376                           ;stkvar	_xtoa$5723 @ sp[(-20)+0]
 14377  0162D6  0EEC               	movlw	-20
 14378  0162D8  006F FF8C  F001    	movff	plusw1,btemp
 14379  0162DE  0EED               	movlw	-19
 14380  0162E0  50E3               	movf	plusw1,w,c
 14381  0162E2  1001               	iorwf	btemp^0,w,c
 14382  0162E4  B4D8               	btfsc	status,2,c
 14383  0162E6  D011               	goto	l12690
 14384                           
 14385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14386                           ;stkvar	_c @ sp[(-20)+12]
 14387  0162E8  0EF8               	movlw	-8
 14388  0162EA  006F FF8F FFE6     	movff	plusw1,postinc1
 14389  0162F0  006F FF8F FFE6     	movff	plusw1,postinc1
 14390  0162F6  ECA7  F0D7         	call	_toupper	;wreg free
 14391                           
 14392                           ;stkvar	_c @ sp[(-20)+12]
 14393  0162FA  0EF8               	movlw	-8
 14394  0162FC  0060  F007  FFE3   	movff	btemp,plusw1
 14395  016302  0EF9               	movlw	-7
 14396  016304  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14397  01630A                     l12690:
 14398                           
 14399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14400                           ;stkvar	_c @ sp[(-20)+12]
 14401                           ;stkvar	_i @ sp[(-20)+14]
 14402  01630A  0EFA               	movlw	-6
 14403  01630C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14404  016312  0EFB               	movlw	-5
 14405  016314  006F FF8C  F00C    	movff	plusw1,btemp+11
 14406  01631A  0E97               	movlw	low _dbuf
 14407  01631C  240B               	addwf	(btemp+10)^0,w,c
 14408  01631E  6ED9               	movwf	fsr2l,c
 14409  016320  0E02               	movlw	high _dbuf
 14410  016322  200C               	addwfc	(btemp+11)^0,w,c
 14411  016324  6EDA               	movwf	fsr2h,c
 14412  016326  0EF8               	movlw	-8
 14413  016328  006F FF8F FFDF     	movff	plusw1,indf2
 14414                           
 14415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14416                           ;stkvar	_p @ sp[(-20)+18]
 14417  01632E  50E1               	movf	fsr1l,w,c
 14418  016330  0FFE               	addlw	-2
 14419  016332  6ED9               	movwf	fsr2l,c
 14420  016334  50E2               	movf	fsr1h,w,c
 14421  016336  6EDA               	movwf	fsr2h,c
 14422  016338  0EFF               	movlw	255
 14423  01633A  22DA               	addwfc	fsr2h,f,c
 14424  01633C  06DE               	decf	postinc2,f,c
 14425  01633E  0E00               	movlw	0
 14426  016340  5ADD               	subwfb	postdec2,f,c
 14427                           
 14428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14429                           ;stkvar	_w @ sp[(-20)+16]
 14430  016342  50E1               	movf	fsr1l,w,c
 14431  016344  0FFC               	addlw	-4
 14432  016346  6ED9               	movwf	fsr2l,c
 14433  016348  50E2               	movf	fsr1h,w,c
 14434  01634A  6EDA               	movwf	fsr2h,c
 14435  01634C  0EFF               	movlw	255
 14436  01634E  22DA               	addwfc	fsr2h,f,c
 14437  016350  06DE               	decf	postinc2,f,c
 14438  016352  0E00               	movlw	0
 14439  016354  5ADD               	subwfb	postdec2,f,c
 14440                           
 14441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14442  016356  0E04               	movlw	4
 14443  016358  6E0C               	movwf	(btemp+11)^0,c
 14444                           
 14445                           ;stkvar	_n @ sp[(-20)+4]
 14446  01635A  50E1               	movf	fsr1l,w,c
 14447  01635C  0FF0               	addlw	-16
 14448  01635E  6ED9               	movwf	fsr2l,c
 14449  016360  50E2               	movf	fsr1h,w,c
 14450  016362  6EDA               	movwf	fsr2h,c
 14451  016364  0EFF               	movlw	255
 14452  016366  22DA               	addwfc	fsr2h,f,c
 14453  016368  280C               	incf	(btemp+11)^0,w,c
 14454  01636A  52DE               	movf	postinc2,f,c
 14455  01636C  D00F               	goto	u12060
 14456  01636E                     u12065:
 14457  01636E  52DE               	movf	postinc2,f,c
 14458  016370  52DE               	movf	postinc2,f,c
 14459  016372  52DE               	movf	postinc2,f,c
 14460  016374  52DE               	movf	postinc2,f,c
 14461  016376  52DE               	movf	postinc2,f,c
 14462  016378  52DE               	movf	postinc2,f,c
 14463  01637A  90D8               	bcf	status,0,c
 14464  01637C  32DD               	rrcf	postdec2,f,c
 14465  01637E  32DD               	rrcf	postdec2,f,c
 14466  016380  32DD               	rrcf	postdec2,f,c
 14467  016382  32DD               	rrcf	postdec2,f,c
 14468  016384  32DD               	rrcf	postdec2,f,c
 14469  016386  32DD               	rrcf	postdec2,f,c
 14470  016388  32DD               	rrcf	postdec2,f,c
 14471  01638A  32DE               	rrcf	postinc2,f,c
 14472  01638C                     u12060:
 14473  01638C  2EE8               	decfsz	wreg,f,c
 14474  01638E  D7EF               	goto	u12065
 14475  016390                     l12698:
 14476                           
 14477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14478                           ;stkvar	_i @ sp[(-20)+14]
 14479  016390  0EFB               	movlw	-5
 14480  016392  BEE3               	btfsc	plusw1,7,c
 14481  016394  D03A               	goto	u12110
 14482  016396  0EFB               	movlw	-5
 14483  016398  50E3               	movf	plusw1,w,c
 14484  01639A  E108               	bnz	u12070
 14485  01639C  0EFA               	movlw	-6
 14486  01639E  006F FF8C  F001    	movff	plusw1,btemp
 14487  0163A4  0E02               	movlw	2
 14488  0163A6  5E01               	subwf	btemp^0,f,c
 14489  0163A8  A0D8               	btfss	status,0,c
 14490  0163AA  D02F               	goto	u12110
 14491  0163AC                     u12070:
 14492                           
 14493                           ;stkvar	_n @ sp[(-20)+4]
 14494  0163AC  0EF0               	movlw	-16
 14495  0163AE  50E3               	movf	plusw1,w,c
 14496  0163B0  E115               	bnz	u12081
 14497  0163B2  0EF1               	movlw	-15
 14498  0163B4  50E3               	movf	plusw1,w,c
 14499  0163B6  E112               	bnz	u12081
 14500  0163B8  0EF2               	movlw	-14
 14501  0163BA  50E3               	movf	plusw1,w,c
 14502  0163BC  E10F               	bnz	u12081
 14503  0163BE  0EF3               	movlw	-13
 14504  0163C0  50E3               	movf	plusw1,w,c
 14505  0163C2  E10C               	bnz	u12081
 14506  0163C4  0EF4               	movlw	-12
 14507  0163C6  50E3               	movf	plusw1,w,c
 14508  0163C8  E109               	bnz	u12081
 14509  0163CA  0EF5               	movlw	-11
 14510  0163CC  50E3               	movf	plusw1,w,c
 14511  0163CE  E106               	bnz	u12081
 14512  0163D0  0EF6               	movlw	-10
 14513  0163D2  50E3               	movf	plusw1,w,c
 14514  0163D4  E103               	bnz	u12081
 14515  0163D6  0EF7               	movlw	-9
 14516  0163D8  50E3               	movf	plusw1,w,c
 14517  0163DA  A4D8               	btfss	status,2,c
 14518  0163DC                     u12081:
 14519  0163DC  D6EB               	goto	l12666
 14520                           
 14521                           ;stkvar	_p @ sp[(-20)+18]
 14522  0163DE  0EFF               	movlw	-1
 14523  0163E0  BEE3               	btfsc	plusw1,7,c
 14524  0163E2  D007               	goto	u12090
 14525  0163E4  0EFF               	movlw	-1
 14526  0163E6  50E3               	movf	plusw1,w,c
 14527  0163E8  E103               	bnz	u12091
 14528  0163EA  0EFE               	movlw	-2
 14529  0163EC  04E3               	decf	plusw1,w,c
 14530  0163EE  B0D8               	btfsc	status,0,c
 14531  0163F0                     u12091:
 14532  0163F0  D6E1               	goto	l12666
 14533  0163F2                     u12090:
 14534                           
 14535                           ;stkvar	_w @ sp[(-20)+16]
 14536  0163F2  0EFD               	movlw	-3
 14537  0163F4  BEE3               	btfsc	plusw1,7,c
 14538  0163F6  D009               	goto	u12110
 14539  0163F8  0EFD               	movlw	-3
 14540  0163FA  50E3               	movf	plusw1,w,c
 14541  0163FC  E104               	bnz	u12100
 14542  0163FE  0EFC               	movlw	-4
 14543  016400  04E3               	decf	plusw1,w,c
 14544  016402  A0D8               	btfss	status,0,c
 14545  016404  D002               	goto	u12110
 14546  016406                     u12100:
 14547  016406  B23E               	btfsc	_flags^0,1,c
 14548  016408  D6D5               	goto	l12666
 14549  01640A                     u12110:
 14550                           
 14551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14552  01640A  A83E               	btfss	_flags^0,4,c
 14553  01640C  D036               	goto	l12714
 14554                           
 14555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14556                           ;stkvar	_i @ sp[(-20)+14]
 14557  01640E  50E1               	movf	fsr1l,w,c
 14558  016410  0FFA               	addlw	-6
 14559  016412  6ED9               	movwf	fsr2l,c
 14560  016414  50E2               	movf	fsr1h,w,c
 14561  016416  6EDA               	movwf	fsr2h,c
 14562  016418  0EFF               	movlw	255
 14563  01641A  22DA               	addwfc	fsr2h,f,c
 14564  01641C  06DE               	decf	postinc2,f,c
 14565  01641E  0E00               	movlw	0
 14566  016420  5ADD               	subwfb	postdec2,f,c
 14567                           
 14568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14569                           ;stkvar	_x @ sp[(-20)+-11]
 14570                           ;stkvar	_i @ sp[(-20)+14]
 14571  016422  0EFA               	movlw	-6
 14572  016424  006F FF8C  F00B    	movff	plusw1,btemp+10
 14573  01642A  0EFB               	movlw	-5
 14574  01642C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14575  016432  0E97               	movlw	low _dbuf
 14576  016434  240B               	addwf	(btemp+10)^0,w,c
 14577  016436  6ED9               	movwf	fsr2l,c
 14578  016438  0E02               	movlw	high _dbuf
 14579  01643A  200C               	addwfc	(btemp+11)^0,w,c
 14580  01643C  6EDA               	movwf	fsr2h,c
 14581  01643E  0EE1               	movlw	-31
 14582  016440  006F FF8F FFDF     	movff	plusw1,indf2
 14583                           
 14584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14585                           ;stkvar	_i @ sp[(-20)+14]
 14586  016446  50E1               	movf	fsr1l,w,c
 14587  016448  0FFA               	addlw	-6
 14588  01644A  6ED9               	movwf	fsr2l,c
 14589  01644C  50E2               	movf	fsr1h,w,c
 14590  01644E  6EDA               	movwf	fsr2h,c
 14591  016450  0EFF               	movlw	255
 14592  016452  22DA               	addwfc	fsr2h,f,c
 14593  016454  06DE               	decf	postinc2,f,c
 14594  016456  0E00               	movlw	0
 14595  016458  5ADD               	subwfb	postdec2,f,c
 14596                           
 14597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14598                           ;stkvar	_i @ sp[(-20)+14]
 14599  01645A  0EFA               	movlw	-6
 14600  01645C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14601  016462  0EFB               	movlw	-5
 14602  016464  006F FF8C  F00C    	movff	plusw1,btemp+11
 14603  01646A  0E97               	movlw	low _dbuf
 14604  01646C  240B               	addwf	(btemp+10)^0,w,c
 14605  01646E  6ED9               	movwf	fsr2l,c
 14606  016470  0E02               	movlw	high _dbuf
 14607  016472  200C               	addwfc	(btemp+11)^0,w,c
 14608  016474  6EDA               	movwf	fsr2h,c
 14609  016476  0E30               	movlw	48
 14610  016478  6EDF               	movwf	indf2,c
 14611  01647A                     l12714:
 14612                           
 14613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14614                           ;stkvar	_w @ sp[(-20)+16]
 14615  01647A  0EFC               	movlw	-4
 14616  01647C  006F FF8F FFE6     	movff	plusw1,postinc1
 14617  016482  006F FF8F FFE6     	movff	plusw1,postinc1
 14618                           
 14619                           ;stkvar	_i @ sp[(-22)+14]
 14620  016488  0E97               	movlw	low _dbuf
 14621  01648A  6E0B               	movwf	(btemp+10)^0,c
 14622  01648C  0E02               	movlw	high _dbuf
 14623  01648E  6E0C               	movwf	(btemp+11)^0,c
 14624  016490  0EF8               	movlw	-8
 14625  016492  50E3               	movf	plusw1,w,c
 14626  016494  260B               	addwf	(btemp+10)^0,f,c
 14627  016496  0EF9               	movlw	-7
 14628  016498  50E3               	movf	plusw1,w,c
 14629  01649A  220C               	addwfc	(btemp+11)^0,f,c
 14630  01649C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14631  0164A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 14632                           
 14633                           ;stkvar	_fp @ sp[(-24)+-2]
 14634  0164A8  0EE6               	movlw	-26
 14635  0164AA  006F FF8F FFE6     	movff	plusw1,postinc1
 14636  0164B0  006F FF8F FFE6     	movff	plusw1,postinc1
 14637  0164B6  EC04  F0CE         	call	_pad	;wreg free
 14638                           
 14639                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 14640  0164BA  0EE1               	movlw	225
 14641  0164BC  26E1               	addwf	fsr1l,f,c
 14642  0164BE  0EFF               	movlw	255
 14643  0164C0  22E2               	addwfc	fsr1h,f,c
 14644  0164C2  0012               	return		;funcret
 14645  0164C4                     __end_of_xtoa:
 14646                           	opt callstack 0
 14647                           
 14648 ;; *************** function _toupper *****************
 14649 ;; Defined at:
 14650 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 14651 ;; Parameters:    Size  Location     Type
 14652 ;;  c               2  [STACK] int 
 14653 ;; Auto vars:     Size  Location     Type
 14654 ;;		None
 14655 ;; Return value:  Size  Location     Type
 14656 ;;                  2  [STACK] int 
 14657 ;; Registers used:
 14658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14659 ;; Tracked objects:
 14660 ;;		On entry : 0/2
 14661 ;;		On exit  : 0/0
 14662 ;;		Unchanged: 0/0
 14663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14668 ;;Total ram usage:        0 bytes
 14669 ;; Hardware stack levels used:    1
 14670 ;; Hardware stack levels required when called:   16
 14671 ;; This function calls:
 14672 ;;		_islower
 14673 ;; This function is called by:
 14674 ;;		_xtoa
 14675 ;; This function uses a reentrant model
 14676 ;;
 14677                           
 14678                           	psect	text54
 14679  01AF4E                     __ptext54:
 14680                           	opt callstack 0
 14681  01AF4E                     _toupper:
 14682                           	opt callstack 0
 14683                           
 14684                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14685  01AF4E  52E6               	movf	postinc1,f,c
 14686  01AF50  52E6               	movf	postinc1,f,c
 14687                           
 14688                           ;stkvar	_c @ sp[(-2)+-2]
 14689                           
 14690                           ;incstack = 0
 14691 ;; hardware stack exceeded
 14692  01AF52  0EFC               	movlw	-4
 14693  01AF54  50E3               	movf	plusw1,w,c
 14694  01AF56  0F9F               	addlw	159
 14695  01AF58  6E0B               	movwf	(btemp+10)^0,c
 14696  01AF5A  0EFD               	movlw	-3
 14697  01AF5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14698  01AF62  0EFF               	movlw	255
 14699  01AF64  220C               	addwfc	(btemp+11)^0,f,c
 14700  01AF66  500C               	movf	(btemp+11)^0,w,c
 14701  01AF68  E106               	bnz	u6330
 14702  01AF6A  0E1A               	movlw	26
 14703  01AF6C  5C0B               	subwf	(btemp+10)^0,w,c
 14704  01AF6E  B0D8               	btfsc	status,0,c
 14705  01AF70  D002               	goto	u6330
 14706  01AF72  0E01               	movlw	1
 14707  01AF74  D001               	goto	u6340
 14708  01AF76                     u6330:
 14709  01AF76  0E00               	movlw	0
 14710  01AF78                     u6340:
 14711  01AF78  6E0B               	movwf	(btemp+10)^0,c
 14712  01AF7A  6A0C               	clrf	(btemp+11)^0,c
 14713                           
 14714                           ;stkvar	_toupper$6529 @ sp[(-2)+0]
 14715  01AF7C  0EFE               	movlw	-2
 14716  01AF7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14717  01AF84  0EFF               	movlw	-1
 14718  01AF86  0060  F033  FFE3   	movff	btemp+11,plusw1
 14719                           
 14720                           ;stkvar	_toupper$6529 @ sp[(-2)+0]
 14721  01AF8C  0EFE               	movlw	-2
 14722  01AF8E  006F FF8C  F001    	movff	plusw1,btemp
 14723  01AF94  0EFF               	movlw	-1
 14724  01AF96  50E3               	movf	plusw1,w,c
 14725  01AF98  1001               	iorwf	btemp^0,w,c
 14726  01AF9A  B4D8               	btfsc	status,2,c
 14727  01AF9C  D00D               	goto	l8266
 14728                           
 14729                           ;stkvar	_c @ sp[(-2)+-2]
 14730  01AF9E  0EFC               	movlw	-4
 14731  01AFA0  006F FF8C  F001    	movff	plusw1,btemp
 14732  01AFA6  0EFD               	movlw	-3
 14733  01AFA8  006F FF8C  F002    	movff	plusw1,btemp+1
 14734  01AFAE  0E5F               	movlw	95
 14735  01AFB0  1601               	andwf	btemp^0,f,c
 14736  01AFB2  0E00               	movlw	0
 14737  01AFB4  1602               	andwf	(btemp+1)^0,f,c
 14738  01AFB6  D008               	goto	l3555
 14739  01AFB8                     l8266:
 14740                           
 14741                           ;stkvar	_c @ sp[(-2)+-2]
 14742  01AFB8  0EFC               	movlw	-4
 14743  01AFBA  006F FF8C  F001    	movff	plusw1,btemp
 14744  01AFC0  0EFD               	movlw	-3
 14745  01AFC2  006F FF8C  F002    	movff	plusw1,btemp+1
 14746  01AFC8                     l3555:
 14747                           
 14748                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14749  01AFC8  52E5               	movf	postdec1,f,c
 14750  01AFCA  52E5               	movf	postdec1,f,c
 14751  01AFCC  52E5               	movf	postdec1,f,c
 14752  01AFCE  52E5               	movf	postdec1,f,c
 14753  01AFD0  0012               	return		;funcret
 14754  01AFD2                     __end_of_toupper:
 14755                           	opt callstack 0
 14756                           
 14757 ;; *************** function _islower *****************
 14758 ;; Defined at:
 14759 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;  c               2  [STACK] int 
 14762 ;; Auto vars:     Size  Location     Type
 14763 ;;		None
 14764 ;; Return value:  Size  Location     Type
 14765 ;;                  2  [STACK] int 
 14766 ;; Registers used:
 14767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14768 ;; Tracked objects:
 14769 ;;		On entry : 0/0
 14770 ;;		On exit  : 0/0
 14771 ;;		Unchanged: 0/0
 14772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14777 ;;Total ram usage:        0 bytes
 14778 ;; Hardware stack levels used:    1
 14779 ;; Hardware stack levels required when called:   15
 14780 ;; This function calls:
 14781 ;;		Nothing
 14782 ;; This function is called by:
 14783 ;;		_toupper
 14784 ;; This function uses a reentrant model
 14785 ;;
 14786                           
 14787                           	psect	text55
 14788  01BE00                     __ptext55:
 14789                           	opt callstack 0
 14790  01BE00                     _islower:
 14791                           	opt callstack 0
 14792                           
 14793                           ;stkvar	_c @ sp[(0)+-2]
 14794                           
 14795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14796                           ;incstack = 0
 14797 ;; hardware stack exceeded
 14798  01BE00  0EFE               	movlw	-2
 14799  01BE02  50E3               	movf	plusw1,w,c
 14800  01BE04  0F9F               	addlw	159
 14801  01BE06  6E0B               	movwf	(btemp+10)^0,c
 14802  01BE08  0EFF               	movlw	-1
 14803  01BE0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14804  01BE10  0EFF               	movlw	255
 14805  01BE12  220C               	addwfc	(btemp+11)^0,f,c
 14806  01BE14  500C               	movf	(btemp+11)^0,w,c
 14807  01BE16  E106               	bnz	u5970
 14808  01BE18  0E1A               	movlw	26
 14809  01BE1A  5C0B               	subwf	(btemp+10)^0,w,c
 14810  01BE1C  B0D8               	btfsc	status,0,c
 14811  01BE1E  D002               	goto	u5970
 14812  01BE20  0E01               	movlw	1
 14813  01BE22  D001               	goto	u5980
 14814  01BE24                     u5970:
 14815  01BE24  0E00               	movlw	0
 14816  01BE26                     u5980:
 14817  01BE26  6E01               	movwf	btemp^0,c
 14818  01BE28  6A02               	clrf	(btemp+1)^0,c
 14819                           
 14820                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14821  01BE2A  52E5               	movf	postdec1,f,c
 14822  01BE2C  52E5               	movf	postdec1,f,c
 14823  01BE2E  0012               	return		;funcret
 14824  01BE30                     __end_of_islower:
 14825                           	opt callstack 0
 14826                           
 14827 ;; *************** function _isalpha *****************
 14828 ;; Defined at:
 14829 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14830 ;; Parameters:    Size  Location     Type
 14831 ;;  c               2  [STACK] int 
 14832 ;; Auto vars:     Size  Location     Type
 14833 ;;		None
 14834 ;; Return value:  Size  Location     Type
 14835 ;;                  2  [STACK] int 
 14836 ;; Registers used:
 14837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14838 ;; Tracked objects:
 14839 ;;		On entry : 0/0
 14840 ;;		On exit  : 0/0
 14841 ;;		Unchanged: 0/0
 14842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14847 ;;Total ram usage:        0 bytes
 14848 ;; Hardware stack levels used:    1
 14849 ;; Hardware stack levels required when called:   15
 14850 ;; This function calls:
 14851 ;;		Nothing
 14852 ;; This function is called by:
 14853 ;;		_xtoa
 14854 ;; This function uses a reentrant model
 14855 ;;
 14856                           
 14857                           	psect	text56
 14858  01B9E6                     __ptext56:
 14859                           	opt callstack 0
 14860  01B9E6                     _isalpha:
 14861                           	opt callstack 0
 14862                           
 14863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14864                           ;incstack = 0
 14865 ;; hardware stack exceeded
 14866  01B9E6  0E9F               	movlw	159
 14867  01B9E8  6E0B               	movwf	(btemp+10)^0,c
 14868  01B9EA  0EFF               	movlw	255
 14869  01B9EC  6E0C               	movwf	(btemp+11)^0,c
 14870                           
 14871                           ;stkvar	_c @ sp[(0)+-2]
 14872  01B9EE  0EFE               	movlw	-2
 14873  01B9F0  006F FF8C  F009    	movff	plusw1,btemp+8
 14874  01B9F6  0EFF               	movlw	-1
 14875  01B9F8  006F FF8C  F00A    	movff	plusw1,btemp+9
 14876  01B9FE  0E20               	movlw	32
 14877  01BA00  1209               	iorwf	(btemp+8)^0,f,c
 14878  01BA02  0E00               	movlw	0
 14879  01BA04  120A               	iorwf	(btemp+9)^0,f,c
 14880  01BA06  500B               	movf	(btemp+10)^0,w,c
 14881  01BA08  2609               	addwf	(btemp+8)^0,f,c
 14882  01BA0A  500C               	movf	(btemp+11)^0,w,c
 14883  01BA0C  220A               	addwfc	(btemp+9)^0,f,c
 14884  01BA0E  500A               	movf	(btemp+9)^0,w,c
 14885  01BA10  E106               	bnz	u6310
 14886  01BA12  0E1A               	movlw	26
 14887  01BA14  5C09               	subwf	(btemp+8)^0,w,c
 14888  01BA16  B0D8               	btfsc	status,0,c
 14889  01BA18  D002               	goto	u6310
 14890  01BA1A  0E01               	movlw	1
 14891  01BA1C  D001               	goto	u6320
 14892  01BA1E                     u6310:
 14893  01BA1E  0E00               	movlw	0
 14894  01BA20                     u6320:
 14895  01BA20  6E01               	movwf	btemp^0,c
 14896  01BA22  6A02               	clrf	(btemp+1)^0,c
 14897                           
 14898                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14899  01BA24  52E5               	movf	postdec1,f,c
 14900  01BA26  52E5               	movf	postdec1,f,c
 14901  01BA28  0012               	return		;funcret
 14902  01BA2A                     __end_of_isalpha:
 14903                           	opt callstack 0
 14904                           
 14905 ;; *************** function _utoa *****************
 14906 ;; Defined at:
 14907 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14910 ;;		 -> f(6), NULL(0), 
 14911 ;;  d               8  [STACK] unsigned long long 
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  n               8  [STACK] unsigned long long 
 14914 ;;  i               2  [STACK] int 
 14915 ;;  w               2  [STACK] int 
 14916 ;;  p               2  [STACK] int 
 14917 ;; Return value:  Size  Location     Type
 14918 ;;                  2  [STACK] int 
 14919 ;; Registers used:
 14920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14930 ;;Total ram usage:        0 bytes
 14931 ;; Hardware stack levels used:    1
 14932 ;; Hardware stack levels required when called:   20
 14933 ;; This function calls:
 14934 ;;		___lodiv
 14935 ;;		___lomod
 14936 ;;		_pad
 14937 ;; This function is called by:
 14938 ;;		_vfpfcnvrt
 14939 ;; This function uses a reentrant model
 14940 ;;
 14941                           
 14942                           	psect	text57
 14943  016830                     __ptext57:
 14944                           	opt callstack 0
 14945  016830                     _utoa:
 14946                           	opt callstack 0
 14947                           
 14948                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14949  016830  0E0E               	movlw	14
 14950  016832  26E1               	addwf	fsr1l,f,c
 14951  016834  0E00               	movlw	0
 14952  016836  22E2               	addwfc	fsr1h,f,c
 14953                           
 14954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14955                           
 14956                           ;incstack = 0
 14957 ;; hardware stack exceeded
 14958  016838  AE3D               	btfss	(_prec+1)^0,7,c
 14959                           
 14960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14961  01683A  923E               	bcf	_flags^0,1,c
 14962                           
 14963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14964  01683C  BE3D               	btfsc	(_prec+1)^0,7,c
 14965  01683E  D005               	goto	u11880
 14966  016840  503D               	movf	(_prec+1)^0,w,c
 14967  016842  E110               	bnz	l12614
 14968  016844  043C               	decf	_prec^0,w,c
 14969  016846  B0D8               	btfsc	status,0,c
 14970  016848  D00D               	goto	l12614
 14971  01684A                     u11880:
 14972  01684A  0E01               	movlw	1
 14973  01684C  6E0B               	movwf	(btemp+10)^0,c
 14974  01684E  0E00               	movlw	0
 14975  016850  6E0C               	movwf	(btemp+11)^0,c
 14976                           
 14977                           ;stkvar	_p @ sp[(-14)+12]
 14978  016852  0EFE               	movlw	-2
 14979  016854  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14980  01685A  0EFF               	movlw	-1
 14981  01685C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14982  016862  D008               	goto	l2373
 14983  016864                     l12614:
 14984                           
 14985                           ;stkvar	_p @ sp[(-14)+12]
 14986  016864  0EFE               	movlw	-2
 14987  016866  0060  F0F3  FFE3   	movff	_prec,plusw1
 14988  01686C  0EFF               	movlw	-1
 14989  01686E  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14990  016874                     l2373:
 14991                           
 14992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 14993                           ;stkvar	_w @ sp[(-14)+10]
 14994  016874  0EFC               	movlw	-4
 14995  016876  0060  F0EB  FFE3   	movff	_width,plusw1
 14996  01687C  0EFD               	movlw	-3
 14997  01687E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14998                           
 14999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15000                           ;stkvar	_d @ sp[(-14)+-10]
 15001  016884  0EE8               	movlw	232
 15002  016886  24E1               	addwf	fsr1l,w,c
 15003  016888  6ED9               	movwf	fsr2l,c
 15004  01688A  0EFF               	movlw	255
 15005  01688C  20E2               	addwfc	fsr1h,w,c
 15006  01688E  6EDA               	movwf	fsr2h,c
 15007                           
 15008                           ;stkvar	_n @ sp[(-14)+0]
 15009  016890  0E08               	movlw	8
 15010  016892  6E01               	movwf	btemp^0,c
 15011  016894  0EF2               	movlw	-14
 15012  016896                     us1189999:
 15013  016896  006F FF7B FFE3     	movff	postinc2,plusw1
 15014  01689C  28E8               	incf	wreg,w,c
 15015  01689E  2E01               	decfsz	btemp^0,f,c
 15016  0168A0  D7FA               	bra	us1189999
 15017                           
 15018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 15019  0168A2  0E4F               	movlw	79
 15020  0168A4  6E0B               	movwf	(btemp+10)^0,c
 15021  0168A6  0E00               	movlw	0
 15022  0168A8  6E0C               	movwf	(btemp+11)^0,c
 15023                           
 15024                           ;stkvar	_i @ sp[(-14)+8]
 15025  0168AA  0EFA               	movlw	-6
 15026  0168AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15027  0168B2  0EFB               	movlw	-5
 15028  0168B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15029                           
 15030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15031  0168BA  0102               	movlb	2	; () banked
 15032  0168BC  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15033                           
 15034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15035  0168BE  D0FB               	goto	l12632
 15036  0168C0                     l12622:
 15037                           
 15038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 15039                           ;stkvar	_i @ sp[(-14)+8]
 15040  0168C0  50E1               	movf	fsr1l,w,c
 15041  0168C2  0FFA               	addlw	-6
 15042  0168C4  6ED9               	movwf	fsr2l,c
 15043  0168C6  50E2               	movf	fsr1h,w,c
 15044  0168C8  6EDA               	movwf	fsr2h,c
 15045  0168CA  0EFF               	movlw	255
 15046  0168CC  22DA               	addwfc	fsr2h,f,c
 15047  0168CE  06DE               	decf	postinc2,f,c
 15048  0168D0  0E00               	movlw	0
 15049  0168D2  5ADD               	subwfb	postdec2,f,c
 15050                           
 15051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15052  0168D4  0E0A               	movlw	10
 15053  0168D6  6EE6               	movwf	postinc1,c
 15054  0168D8  0E00               	movlw	0
 15055  0168DA  6EE6               	movwf	postinc1,c
 15056  0168DC  0E00               	movlw	0
 15057  0168DE  6EE6               	movwf	postinc1,c
 15058  0168E0  0E00               	movlw	0
 15059  0168E2  6EE6               	movwf	postinc1,c
 15060  0168E4  0E00               	movlw	0
 15061  0168E6  6EE6               	movwf	postinc1,c
 15062  0168E8  0E00               	movlw	0
 15063  0168EA  6EE6               	movwf	postinc1,c
 15064  0168EC  0E00               	movlw	0
 15065  0168EE  6EE6               	movwf	postinc1,c
 15066  0168F0  0E00               	movlw	0
 15067  0168F2  6EE6               	movwf	postinc1,c
 15068                           
 15069                           ;stkvar	_n @ sp[(-22)+0]
 15070  0168F4  50E1               	movf	fsr1l,w,c
 15071  0168F6  0FEA               	addlw	-22
 15072  0168F8  6ED9               	movwf	fsr2l,c
 15073  0168FA  50E2               	movf	fsr1h,w,c
 15074  0168FC  6EDA               	movwf	fsr2h,c
 15075  0168FE  0EFF               	movlw	255
 15076  016900  22DA               	addwfc	fsr2h,f,c
 15077  016902  006F FF7B FFE6     	movff	postinc2,postinc1
 15078  016908  006F FF7B FFE6     	movff	postinc2,postinc1
 15079  01690E  006F FF7B FFE6     	movff	postinc2,postinc1
 15080  016914  006F FF7B FFE6     	movff	postinc2,postinc1
 15081  01691A  006F FF7B FFE6     	movff	postinc2,postinc1
 15082  016920  006F FF7B FFE6     	movff	postinc2,postinc1
 15083  016926  006F FF7B FFE6     	movff	postinc2,postinc1
 15084  01692C  006F FF7B FFE6     	movff	postinc2,postinc1
 15085  016932  EC14  F0CB         	call	___lomod	;wreg free
 15086  016936  52E5               	movf	postdec1,f,c
 15087  016938  006F FF9C  F018    	movff	indf1,btemp+23
 15088  01693E  52E5               	movf	postdec1,f,c
 15089  016940  006F FF9C  F017    	movff	indf1,btemp+22
 15090  016946  52E5               	movf	postdec1,f,c
 15091  016948  006F FF9C  F016    	movff	indf1,btemp+21
 15092  01694E  52E5               	movf	postdec1,f,c
 15093  016950  006F FF9C  F015    	movff	indf1,btemp+20
 15094  016956  52E5               	movf	postdec1,f,c
 15095  016958  006F FF9C  F014    	movff	indf1,btemp+19
 15096  01695E  52E5               	movf	postdec1,f,c
 15097  016960  006F FF9C  F013    	movff	indf1,btemp+18
 15098  016966  52E5               	movf	postdec1,f,c
 15099  016968  006F FF9C  F012    	movff	indf1,btemp+17
 15100  01696E  52E5               	movf	postdec1,f,c
 15101  016970  006F FF9C  F011    	movff	indf1,btemp+16
 15102  016976  0EF8               	movlw	248
 15103  016978  26E1               	addwf	fsr1l,f,c
 15104  01697A  0EFF               	movlw	255
 15105  01697C  22E2               	addwfc	fsr1h,f,c
 15106  01697E  0E30               	movlw	48
 15107  016980  2611               	addwf	(btemp+16)^0,f,c
 15108                           
 15109                           ;stkvar	_i @ sp[(-14)+8]
 15110  016982  0EFA               	movlw	-6
 15111  016984  006F FF8C  F00B    	movff	plusw1,btemp+10
 15112  01698A  0EFB               	movlw	-5
 15113  01698C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15114  016992  0E97               	movlw	low _dbuf
 15115  016994  240B               	addwf	(btemp+10)^0,w,c
 15116  016996  6ED9               	movwf	fsr2l,c
 15117  016998  0E02               	movlw	high _dbuf
 15118  01699A  200C               	addwfc	(btemp+11)^0,w,c
 15119  01699C  6EDA               	movwf	fsr2h,c
 15120  01699E  0060  F047  FFDF   	movff	btemp+16,indf2
 15121                           
 15122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 15123                           ;stkvar	_p @ sp[(-14)+12]
 15124  0169A4  50E1               	movf	fsr1l,w,c
 15125  0169A6  0FFE               	addlw	-2
 15126  0169A8  6ED9               	movwf	fsr2l,c
 15127  0169AA  50E2               	movf	fsr1h,w,c
 15128  0169AC  6EDA               	movwf	fsr2h,c
 15129  0169AE  0EFF               	movlw	255
 15130  0169B0  22DA               	addwfc	fsr2h,f,c
 15131  0169B2  06DE               	decf	postinc2,f,c
 15132  0169B4  0E00               	movlw	0
 15133  0169B6  5ADD               	subwfb	postdec2,f,c
 15134                           
 15135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 15136                           ;stkvar	_w @ sp[(-14)+10]
 15137  0169B8  50E1               	movf	fsr1l,w,c
 15138  0169BA  0FFC               	addlw	-4
 15139  0169BC  6ED9               	movwf	fsr2l,c
 15140  0169BE  50E2               	movf	fsr1h,w,c
 15141  0169C0  6EDA               	movwf	fsr2h,c
 15142  0169C2  0EFF               	movlw	255
 15143  0169C4  22DA               	addwfc	fsr2h,f,c
 15144  0169C6  06DE               	decf	postinc2,f,c
 15145  0169C8  0E00               	movlw	0
 15146  0169CA  5ADD               	subwfb	postdec2,f,c
 15147                           
 15148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15149  0169CC  0E0A               	movlw	10
 15150  0169CE  6EE6               	movwf	postinc1,c
 15151  0169D0  0E00               	movlw	0
 15152  0169D2  6EE6               	movwf	postinc1,c
 15153  0169D4  0E00               	movlw	0
 15154  0169D6  6EE6               	movwf	postinc1,c
 15155  0169D8  0E00               	movlw	0
 15156  0169DA  6EE6               	movwf	postinc1,c
 15157  0169DC  0E00               	movlw	0
 15158  0169DE  6EE6               	movwf	postinc1,c
 15159  0169E0  0E00               	movlw	0
 15160  0169E2  6EE6               	movwf	postinc1,c
 15161  0169E4  0E00               	movlw	0
 15162  0169E6  6EE6               	movwf	postinc1,c
 15163  0169E8  0E00               	movlw	0
 15164  0169EA  6EE6               	movwf	postinc1,c
 15165                           
 15166                           ;stkvar	_n @ sp[(-22)+0]
 15167  0169EC  50E1               	movf	fsr1l,w,c
 15168  0169EE  0FEA               	addlw	-22
 15169  0169F0  6ED9               	movwf	fsr2l,c
 15170  0169F2  50E2               	movf	fsr1h,w,c
 15171  0169F4  6EDA               	movwf	fsr2h,c
 15172  0169F6  0EFF               	movlw	255
 15173  0169F8  22DA               	addwfc	fsr2h,f,c
 15174  0169FA  006F FF7B FFE6     	movff	postinc2,postinc1
 15175  016A00  006F FF7B FFE6     	movff	postinc2,postinc1
 15176  016A06  006F FF7B FFE6     	movff	postinc2,postinc1
 15177  016A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 15178  016A12  006F FF7B FFE6     	movff	postinc2,postinc1
 15179  016A18  006F FF7B FFE6     	movff	postinc2,postinc1
 15180  016A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 15181  016A24  006F FF7B FFE6     	movff	postinc2,postinc1
 15182  016A2A  EC91  F0C7         	call	___lodiv	;wreg free
 15183  016A2E  52E5               	movf	postdec1,f,c
 15184  016A30  006F FF9C  F018    	movff	indf1,btemp+23
 15185  016A36  52E5               	movf	postdec1,f,c
 15186  016A38  006F FF9C  F017    	movff	indf1,btemp+22
 15187  016A3E  52E5               	movf	postdec1,f,c
 15188  016A40  006F FF9C  F016    	movff	indf1,btemp+21
 15189  016A46  52E5               	movf	postdec1,f,c
 15190  016A48  006F FF9C  F015    	movff	indf1,btemp+20
 15191  016A4E  52E5               	movf	postdec1,f,c
 15192  016A50  006F FF9C  F014    	movff	indf1,btemp+19
 15193  016A56  52E5               	movf	postdec1,f,c
 15194  016A58  006F FF9C  F013    	movff	indf1,btemp+18
 15195  016A5E  52E5               	movf	postdec1,f,c
 15196  016A60  006F FF9C  F012    	movff	indf1,btemp+17
 15197  016A66  52E5               	movf	postdec1,f,c
 15198  016A68  006F FF9C  F011    	movff	indf1,btemp+16
 15199  016A6E  0EF8               	movlw	248
 15200  016A70  26E1               	addwf	fsr1l,f,c
 15201  016A72  0EFF               	movlw	255
 15202  016A74  22E2               	addwfc	fsr1h,f,c
 15203                           
 15204                           ;stkvar	_n @ sp[(-14)+0]
 15205  016A76  0EF2               	movlw	-14
 15206  016A78  0060  F047  FFE3   	movff	btemp+16,plusw1
 15207  016A7E  0EF3               	movlw	-13
 15208  016A80  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15209  016A86  0EF4               	movlw	-12
 15210  016A88  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15211  016A8E  0EF5               	movlw	-11
 15212  016A90  0060  F053  FFE3   	movff	btemp+19,plusw1
 15213  016A96  0EF6               	movlw	-10
 15214  016A98  0060  F057  FFE3   	movff	btemp+20,plusw1
 15215  016A9E  0EF7               	movlw	-9
 15216  016AA0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15217  016AA6  0EF8               	movlw	-8
 15218  016AA8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15219  016AAE  0EF9               	movlw	-7
 15220  016AB0  0060  F063  FFE3   	movff	btemp+23,plusw1
 15221  016AB6                     l12632:
 15222                           
 15223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15224                           ;stkvar	_i @ sp[(-14)+8]
 15225  016AB6  0EFA               	movlw	-6
 15226  016AB8  006F FF8C  F001    	movff	plusw1,btemp
 15227  016ABE  0EFB               	movlw	-5
 15228  016AC0  50E3               	movf	plusw1,w,c
 15229  016AC2  1001               	iorwf	btemp^0,w,c
 15230  016AC4  B4D8               	btfsc	status,2,c
 15231  016AC6  D02F               	goto	u11940
 15232                           
 15233                           ;stkvar	_n @ sp[(-14)+0]
 15234  016AC8  0EF2               	movlw	-14
 15235  016ACA  50E3               	movf	plusw1,w,c
 15236  016ACC  E115               	bnz	u11911
 15237  016ACE  0EF3               	movlw	-13
 15238  016AD0  50E3               	movf	plusw1,w,c
 15239  016AD2  E112               	bnz	u11911
 15240  016AD4  0EF4               	movlw	-12
 15241  016AD6  50E3               	movf	plusw1,w,c
 15242  016AD8  E10F               	bnz	u11911
 15243  016ADA  0EF5               	movlw	-11
 15244  016ADC  50E3               	movf	plusw1,w,c
 15245  016ADE  E10C               	bnz	u11911
 15246  016AE0  0EF6               	movlw	-10
 15247  016AE2  50E3               	movf	plusw1,w,c
 15248  016AE4  E109               	bnz	u11911
 15249  016AE6  0EF7               	movlw	-9
 15250  016AE8  50E3               	movf	plusw1,w,c
 15251  016AEA  E106               	bnz	u11911
 15252  016AEC  0EF8               	movlw	-8
 15253  016AEE  50E3               	movf	plusw1,w,c
 15254  016AF0  E103               	bnz	u11911
 15255  016AF2  0EF9               	movlw	-7
 15256  016AF4  50E3               	movf	plusw1,w,c
 15257  016AF6  A4D8               	btfss	status,2,c
 15258  016AF8                     u11911:
 15259  016AF8  D6E3               	goto	l12622
 15260                           
 15261                           ;stkvar	_p @ sp[(-14)+12]
 15262  016AFA  0EFF               	movlw	-1
 15263  016AFC  BEE3               	btfsc	plusw1,7,c
 15264  016AFE  D007               	goto	u11920
 15265  016B00  0EFF               	movlw	-1
 15266  016B02  50E3               	movf	plusw1,w,c
 15267  016B04  E103               	bnz	u11921
 15268  016B06  0EFE               	movlw	-2
 15269  016B08  04E3               	decf	plusw1,w,c
 15270  016B0A  B0D8               	btfsc	status,0,c
 15271  016B0C                     u11921:
 15272  016B0C  D6D9               	goto	l12622
 15273  016B0E                     u11920:
 15274                           
 15275                           ;stkvar	_w @ sp[(-14)+10]
 15276  016B0E  0EFD               	movlw	-3
 15277  016B10  BEE3               	btfsc	plusw1,7,c
 15278  016B12  D009               	goto	u11940
 15279  016B14  0EFD               	movlw	-3
 15280  016B16  50E3               	movf	plusw1,w,c
 15281  016B18  E104               	bnz	u11930
 15282  016B1A  0EFC               	movlw	-4
 15283  016B1C  04E3               	decf	plusw1,w,c
 15284  016B1E  A0D8               	btfss	status,0,c
 15285  016B20  D002               	goto	u11940
 15286  016B22                     u11930:
 15287  016B22  B23E               	btfsc	_flags^0,1,c
 15288  016B24  D6CD               	goto	l12622
 15289  016B26                     u11940:
 15290                           
 15291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15292                           ;stkvar	_w @ sp[(-14)+10]
 15293  016B26  0EFC               	movlw	-4
 15294  016B28  006F FF8F FFE6     	movff	plusw1,postinc1
 15295  016B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 15296                           
 15297                           ;stkvar	_i @ sp[(-16)+8]
 15298  016B34  0E97               	movlw	low _dbuf
 15299  016B36  6E0B               	movwf	(btemp+10)^0,c
 15300  016B38  0E02               	movlw	high _dbuf
 15301  016B3A  6E0C               	movwf	(btemp+11)^0,c
 15302  016B3C  0EF8               	movlw	-8
 15303  016B3E  50E3               	movf	plusw1,w,c
 15304  016B40  260B               	addwf	(btemp+10)^0,f,c
 15305  016B42  0EF9               	movlw	-7
 15306  016B44  50E3               	movf	plusw1,w,c
 15307  016B46  220C               	addwfc	(btemp+11)^0,f,c
 15308  016B48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15309  016B4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15310                           
 15311                           ;stkvar	_fp @ sp[(-18)+-2]
 15312  016B54  0EEC               	movlw	-20
 15313  016B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15314  016B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15315  016B62  EC04  F0CE         	call	_pad	;wreg free
 15316                           
 15317                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15318  016B66  0EE8               	movlw	232
 15319  016B68  26E1               	addwf	fsr1l,f,c
 15320  016B6A  0EFF               	movlw	255
 15321  016B6C  22E2               	addwfc	fsr1h,f,c
 15322  016B6E  0012               	return		;funcret
 15323  016B70                     __end_of_utoa:
 15324                           	opt callstack 0
 15325                           
 15326 ;; *************** function ___lomod *****************
 15327 ;; Defined at:
 15328 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;  dividend        8  [STACK] unsigned long long 
 15331 ;;  divisor         8  [STACK] unsigned long long 
 15332 ;; Auto vars:     Size  Location     Type
 15333 ;;  counter         1  [STACK] unsigned char 
 15334 ;; Return value:  Size  Location     Type
 15335 ;;                  8  [STACK] unsigned long long 
 15336 ;; Registers used:
 15337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15338 ;; Tracked objects:
 15339 ;;		On entry : 0/2
 15340 ;;		On exit  : 0/0
 15341 ;;		Unchanged: 0/0
 15342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15347 ;;Total ram usage:        0 bytes
 15348 ;; Hardware stack levels used:    1
 15349 ;; Hardware stack levels required when called:   15
 15350 ;; This function calls:
 15351 ;;		Nothing
 15352 ;; This function is called by:
 15353 ;;		_utoa
 15354 ;; This function uses a reentrant model
 15355 ;;
 15356                           
 15357                           	psect	text58
 15358  019628                     __ptext58:
 15359                           	opt callstack 0
 15360  019628                     ___lomod:
 15361                           	opt callstack 0
 15362                           
 15363                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15364  019628  52E6               	movf	postinc1,f,c
 15365                           
 15366                           ;stkvar	_divisor @ sp[(-1)+-16]
 15367                           
 15368                           ;incstack = 0
 15369 ;; hardware stack exceeded
 15370  01962A  0EEF               	movlw	-17
 15371  01962C  50E3               	movf	plusw1,w,c
 15372  01962E  E116               	bnz	u7460
 15373  019630  0EF0               	movlw	-16
 15374  019632  50E3               	movf	plusw1,w,c
 15375  019634  E113               	bnz	u7460
 15376  019636  0EF1               	movlw	-15
 15377  019638  50E3               	movf	plusw1,w,c
 15378  01963A  E110               	bnz	u7460
 15379  01963C  0EF2               	movlw	-14
 15380  01963E  50E3               	movf	plusw1,w,c
 15381  019640  E10D               	bnz	u7460
 15382  019642  0EF3               	movlw	-13
 15383  019644  50E3               	movf	plusw1,w,c
 15384  019646  E10A               	bnz	u7460
 15385  019648  0EF4               	movlw	-12
 15386  01964A  50E3               	movf	plusw1,w,c
 15387  01964C  E107               	bnz	u7460
 15388  01964E  0EF5               	movlw	-11
 15389  019650  50E3               	movf	plusw1,w,c
 15390  019652  E104               	bnz	u7460
 15391  019654  0EF6               	movlw	-10
 15392  019656  50E3               	movf	plusw1,w,c
 15393  019658  B4D8               	btfsc	status,2,c
 15394  01965A  D075               	goto	u7490
 15395  01965C                     u7460:
 15396                           
 15397                           ;stkvar	_counter @ sp[(-1)+0]
 15398  01965C  0EFF               	movlw	-1
 15399  01965E  6AE3               	clrf	plusw1,c
 15400  019660  D012               	goto	L15
 15401  019662                     l8876:
 15402                           
 15403                           ;stkvar	_divisor @ sp[(-1)+-16]
 15404  019662  90D8               	bcf	status,0,c
 15405  019664  0EEF               	movlw	-17
 15406  019666  36E3               	rlcf	plusw1,f,c
 15407  019668  0EF0               	movlw	-16
 15408  01966A  36E3               	rlcf	plusw1,f,c
 15409  01966C  0EF1               	movlw	-15
 15410  01966E  36E3               	rlcf	plusw1,f,c
 15411  019670  0EF2               	movlw	-14
 15412  019672  36E3               	rlcf	plusw1,f,c
 15413  019674  0EF3               	movlw	-13
 15414  019676  36E3               	rlcf	plusw1,f,c
 15415  019678  0EF4               	movlw	-12
 15416  01967A  36E3               	rlcf	plusw1,f,c
 15417  01967C  0EF5               	movlw	-11
 15418  01967E  36E3               	rlcf	plusw1,f,c
 15419  019680  0EF6               	movlw	-10
 15420  019682  36E3               	rlcf	plusw1,f,c
 15421                           
 15422                           ;stkvar	_counter @ sp[(-1)+0]
 15423  019684  0EFF               	movlw	-1
 15424  019686                     L15:
 15425  019686  2AE3               	incf	plusw1,f,c
 15426                           
 15427                           ;stkvar	_divisor @ sp[(-1)+-16]
 15428  019688  0EF6               	movlw	-10
 15429  01968A  AEE3               	btfss	plusw1,7,c
 15430  01968C  D7EA               	goto	l8876
 15431  01968E                     u7470:
 15432                           
 15433                           ;stkvar	_divisor @ sp[(-1)+-16]
 15434                           ;stkvar	_dividend @ sp[(-1)+-8]
 15435  01968E  50E1               	movf	fsr1l,w,c
 15436  019690  0FF7               	addlw	-9
 15437  019692  6ED9               	movwf	fsr2l,c
 15438  019694  50E2               	movf	fsr1h,w,c
 15439  019696  6EDA               	movwf	fsr2h,c
 15440  019698  0EFF               	movlw	255
 15441  01969A  22DA               	addwfc	fsr2h,f,c
 15442  01969C  0EEF               	movlw	-17
 15443  01969E  50E3               	movf	plusw1,w,c
 15444  0196A0  5CDE               	subwf	postinc2,w,c
 15445  0196A2  0EF0               	movlw	-16
 15446  0196A4  50E3               	movf	plusw1,w,c
 15447  0196A6  58DE               	subwfb	postinc2,w,c
 15448  0196A8  0EF1               	movlw	-15
 15449  0196AA  50E3               	movf	plusw1,w,c
 15450  0196AC  58DE               	subwfb	postinc2,w,c
 15451  0196AE  0EF2               	movlw	-14
 15452  0196B0  50E3               	movf	plusw1,w,c
 15453  0196B2  58DE               	subwfb	postinc2,w,c
 15454  0196B4  0EF3               	movlw	-13
 15455  0196B6  50E3               	movf	plusw1,w,c
 15456  0196B8  58DE               	subwfb	postinc2,w,c
 15457  0196BA  0EF4               	movlw	-12
 15458  0196BC  50E3               	movf	plusw1,w,c
 15459  0196BE  58DE               	subwfb	postinc2,w,c
 15460  0196C0  0EF5               	movlw	-11
 15461  0196C2  50E3               	movf	plusw1,w,c
 15462  0196C4  58DE               	subwfb	postinc2,w,c
 15463  0196C6  0EF6               	movlw	-10
 15464  0196C8  50E3               	movf	plusw1,w,c
 15465  0196CA  58DE               	subwfb	postinc2,w,c
 15466  0196CC  A0D8               	btfss	status,0,c
 15467  0196CE  D01F               	goto	l8884
 15468                           
 15469                           ;stkvar	_divisor @ sp[(-1)+-16]
 15470                           ;stkvar	_dividend @ sp[(-1)+-8]
 15471  0196D0  50E1               	movf	fsr1l,w,c
 15472  0196D2  0FF7               	addlw	-9
 15473  0196D4  6ED9               	movwf	fsr2l,c
 15474  0196D6  50E2               	movf	fsr1h,w,c
 15475  0196D8  6EDA               	movwf	fsr2h,c
 15476  0196DA  0EFF               	movlw	255
 15477  0196DC  22DA               	addwfc	fsr2h,f,c
 15478  0196DE  0EEF               	movlw	-17
 15479  0196E0  50E3               	movf	plusw1,w,c
 15480  0196E2  5EDE               	subwf	postinc2,f,c
 15481  0196E4  0EF0               	movlw	-16
 15482  0196E6  50E3               	movf	plusw1,w,c
 15483  0196E8  5ADE               	subwfb	postinc2,f,c
 15484  0196EA  0EF1               	movlw	-15
 15485  0196EC  50E3               	movf	plusw1,w,c
 15486  0196EE  5ADE               	subwfb	postinc2,f,c
 15487  0196F0  0EF2               	movlw	-14
 15488  0196F2  50E3               	movf	plusw1,w,c
 15489  0196F4  5ADE               	subwfb	postinc2,f,c
 15490  0196F6  0EF3               	movlw	-13
 15491  0196F8  50E3               	movf	plusw1,w,c
 15492  0196FA  5ADE               	subwfb	postinc2,f,c
 15493  0196FC  0EF4               	movlw	-12
 15494  0196FE  50E3               	movf	plusw1,w,c
 15495  019700  5ADE               	subwfb	postinc2,f,c
 15496  019702  0EF5               	movlw	-11
 15497  019704  50E3               	movf	plusw1,w,c
 15498  019706  5ADE               	subwfb	postinc2,f,c
 15499  019708  0EF6               	movlw	-10
 15500  01970A  50E3               	movf	plusw1,w,c
 15501  01970C  5ADE               	subwfb	postinc2,f,c
 15502  01970E                     l8884:
 15503                           
 15504                           ;stkvar	_divisor @ sp[(-1)+-16]
 15505  01970E  90D8               	bcf	status,0,c
 15506  019710  0EF6               	movlw	-10
 15507  019712  32E3               	rrcf	plusw1,f,c
 15508  019714  0EF5               	movlw	-11
 15509  019716  32E3               	rrcf	plusw1,f,c
 15510  019718  0EF4               	movlw	-12
 15511  01971A  32E3               	rrcf	plusw1,f,c
 15512  01971C  0EF3               	movlw	-13
 15513  01971E  32E3               	rrcf	plusw1,f,c
 15514  019720  0EF2               	movlw	-14
 15515  019722  32E3               	rrcf	plusw1,f,c
 15516  019724  0EF1               	movlw	-15
 15517  019726  32E3               	rrcf	plusw1,f,c
 15518  019728  0EF0               	movlw	-16
 15519  01972A  32E3               	rrcf	plusw1,f,c
 15520  01972C  0EEF               	movlw	-17
 15521  01972E  32E3               	rrcf	plusw1,f,c
 15522                           
 15523                           ;stkvar	_counter @ sp[(-1)+0]
 15524  019730  0EFF               	movlw	-1
 15525  019732  50E3               	movf	plusw1,w,c
 15526  019734  6E01               	movwf	btemp^0,c
 15527  019736  0E01               	movlw	1
 15528  019738  5E01               	subwf	btemp^0,f,c
 15529  01973A  0EFF               	movlw	-1
 15530  01973C  0060  F007  FFE3   	movff	btemp,plusw1
 15531  019742  A4D8               	btfss	status,2,c
 15532  019744  D7A4               	goto	u7470
 15533  019746                     u7490:
 15534                           
 15535                           ;stkvar	_dividend @ sp[(-1)+-8]
 15536  019746  0EF7               	movlw	247
 15537  019748  24E1               	addwf	fsr1l,w,c
 15538  01974A  6ED9               	movwf	fsr2l,c
 15539  01974C  0EFF               	movlw	255
 15540  01974E  20E2               	addwfc	fsr1h,w,c
 15541  019750  6EDA               	movwf	fsr2h,c
 15542                           
 15543                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15544  019752  0E08               	movlw	8
 15545  019754  6E01               	movwf	btemp^0,c
 15546  019756  0EF7               	movlw	-9
 15547  019758                     us750999:
 15548  019758  006F FF7B FFE3     	movff	postinc2,plusw1
 15549  01975E  28E8               	incf	wreg,w,c
 15550  019760  2E01               	decfsz	btemp^0,f,c
 15551  019762  D7FA               	bra	us750999
 15552                           
 15553                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15554  019764  52E5               	movf	postdec1,f,c
 15555  019766  0012               	return		;funcret
 15556  019768                     __end_of___lomod:
 15557                           	opt callstack 0
 15558                           
 15559 ;; *************** function ___lodiv *****************
 15560 ;; Defined at:
 15561 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15562 ;; Parameters:    Size  Location     Type
 15563 ;;  dividend        8  [STACK] unsigned long long 
 15564 ;;  divisor         8  [STACK] unsigned long long 
 15565 ;; Auto vars:     Size  Location     Type
 15566 ;;  quotient        8  [STACK] unsigned long long 
 15567 ;;  counter         1  [STACK] unsigned char 
 15568 ;; Return value:  Size  Location     Type
 15569 ;;                  8  [STACK] unsigned long long 
 15570 ;; Registers used:
 15571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15572 ;; Tracked objects:
 15573 ;;		On entry : 0/2
 15574 ;;		On exit  : 0/0
 15575 ;;		Unchanged: 0/0
 15576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15581 ;;Total ram usage:        0 bytes
 15582 ;; Hardware stack levels used:    1
 15583 ;; Hardware stack levels required when called:   15
 15584 ;; This function calls:
 15585 ;;		Nothing
 15586 ;; This function is called by:
 15587 ;;		_utoa
 15588 ;; This function uses a reentrant model
 15589 ;;
 15590                           
 15591                           	psect	text59
 15592  018F22                     __ptext59:
 15593                           	opt callstack 0
 15594  018F22                     ___lodiv:
 15595                           	opt callstack 0
 15596                           
 15597                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15598  018F22  0E09               	movlw	9
 15599  018F24  26E1               	addwf	fsr1l,f,c
 15600  018F26  0E00               	movlw	0
 15601  018F28  22E2               	addwfc	fsr1h,f,c
 15602                           
 15603                           ;stkvar	_quotient @ sp[(-9)+0]
 15604                           
 15605                           ;incstack = 0
 15606 ;; hardware stack exceeded
 15607  018F2A  0E07               	movlw	7
 15608  018F2C  6E01               	movwf	btemp^0,c
 15609  018F2E  0EF7               	movlw	-9
 15610  018F30                     u7401:
 15611  018F30  6AE3               	clrf	plusw1,c
 15612  018F32  2AE8               	incf	wreg,f,c
 15613  018F34  0601               	decf	btemp^0,f,c
 15614  018F36  E2FC               	bc	u7401
 15615                           
 15616                           ;stkvar	_divisor @ sp[(-9)+-16]
 15617  018F38  0EE7               	movlw	-25
 15618  018F3A  50E3               	movf	plusw1,w,c
 15619  018F3C  E116               	bnz	u7410
 15620  018F3E  0EE8               	movlw	-24
 15621  018F40  50E3               	movf	plusw1,w,c
 15622  018F42  E113               	bnz	u7410
 15623  018F44  0EE9               	movlw	-23
 15624  018F46  50E3               	movf	plusw1,w,c
 15625  018F48  E110               	bnz	u7410
 15626  018F4A  0EEA               	movlw	-22
 15627  018F4C  50E3               	movf	plusw1,w,c
 15628  018F4E  E10D               	bnz	u7410
 15629  018F50  0EEB               	movlw	-21
 15630  018F52  50E3               	movf	plusw1,w,c
 15631  018F54  E10A               	bnz	u7410
 15632  018F56  0EEC               	movlw	-20
 15633  018F58  50E3               	movf	plusw1,w,c
 15634  018F5A  E107               	bnz	u7410
 15635  018F5C  0EED               	movlw	-19
 15636  018F5E  50E3               	movf	plusw1,w,c
 15637  018F60  E104               	bnz	u7410
 15638  018F62  0EEE               	movlw	-18
 15639  018F64  50E3               	movf	plusw1,w,c
 15640  018F66  B4D8               	btfsc	status,2,c
 15641  018F68  D088               	goto	u7440
 15642  018F6A                     u7410:
 15643                           
 15644                           ;stkvar	_counter @ sp[(-9)+8]
 15645  018F6A  0EFF               	movlw	-1
 15646  018F6C  6AE3               	clrf	plusw1,c
 15647  018F6E  D012               	goto	L16
 15648  018F70                     l8852:
 15649                           
 15650                           ;stkvar	_divisor @ sp[(-9)+-16]
 15651  018F70  90D8               	bcf	status,0,c
 15652  018F72  0EE7               	movlw	-25
 15653  018F74  36E3               	rlcf	plusw1,f,c
 15654  018F76  0EE8               	movlw	-24
 15655  018F78  36E3               	rlcf	plusw1,f,c
 15656  018F7A  0EE9               	movlw	-23
 15657  018F7C  36E3               	rlcf	plusw1,f,c
 15658  018F7E  0EEA               	movlw	-22
 15659  018F80  36E3               	rlcf	plusw1,f,c
 15660  018F82  0EEB               	movlw	-21
 15661  018F84  36E3               	rlcf	plusw1,f,c
 15662  018F86  0EEC               	movlw	-20
 15663  018F88  36E3               	rlcf	plusw1,f,c
 15664  018F8A  0EED               	movlw	-19
 15665  018F8C  36E3               	rlcf	plusw1,f,c
 15666  018F8E  0EEE               	movlw	-18
 15667  018F90  36E3               	rlcf	plusw1,f,c
 15668                           
 15669                           ;stkvar	_counter @ sp[(-9)+8]
 15670  018F92  0EFF               	movlw	-1
 15671  018F94                     L16:
 15672  018F94  2AE3               	incf	plusw1,f,c
 15673                           
 15674                           ;stkvar	_divisor @ sp[(-9)+-16]
 15675  018F96  0EEE               	movlw	-18
 15676  018F98  AEE3               	btfss	plusw1,7,c
 15677  018F9A  D7EA               	goto	l8852
 15678  018F9C                     u7420:
 15679                           
 15680                           ;stkvar	_quotient @ sp[(-9)+0]
 15681  018F9C  90D8               	bcf	status,0,c
 15682  018F9E  0EF7               	movlw	-9
 15683  018FA0  36E3               	rlcf	plusw1,f,c
 15684  018FA2  0EF8               	movlw	-8
 15685  018FA4  36E3               	rlcf	plusw1,f,c
 15686  018FA6  0EF9               	movlw	-7
 15687  018FA8  36E3               	rlcf	plusw1,f,c
 15688  018FAA  0EFA               	movlw	-6
 15689  018FAC  36E3               	rlcf	plusw1,f,c
 15690  018FAE  0EFB               	movlw	-5
 15691  018FB0  36E3               	rlcf	plusw1,f,c
 15692  018FB2  0EFC               	movlw	-4
 15693  018FB4  36E3               	rlcf	plusw1,f,c
 15694  018FB6  0EFD               	movlw	-3
 15695  018FB8  36E3               	rlcf	plusw1,f,c
 15696  018FBA  0EFE               	movlw	-2
 15697  018FBC  36E3               	rlcf	plusw1,f,c
 15698                           
 15699                           ;stkvar	_divisor @ sp[(-9)+-16]
 15700                           ;stkvar	_dividend @ sp[(-9)+-8]
 15701  018FBE  50E1               	movf	fsr1l,w,c
 15702  018FC0  0FEF               	addlw	-17
 15703  018FC2  6ED9               	movwf	fsr2l,c
 15704  018FC4  50E2               	movf	fsr1h,w,c
 15705  018FC6  6EDA               	movwf	fsr2h,c
 15706  018FC8  0EFF               	movlw	255
 15707  018FCA  22DA               	addwfc	fsr2h,f,c
 15708  018FCC  0EE7               	movlw	-25
 15709  018FCE  50E3               	movf	plusw1,w,c
 15710  018FD0  5CDE               	subwf	postinc2,w,c
 15711  018FD2  0EE8               	movlw	-24
 15712  018FD4  50E3               	movf	plusw1,w,c
 15713  018FD6  58DE               	subwfb	postinc2,w,c
 15714  018FD8  0EE9               	movlw	-23
 15715  018FDA  50E3               	movf	plusw1,w,c
 15716  018FDC  58DE               	subwfb	postinc2,w,c
 15717  018FDE  0EEA               	movlw	-22
 15718  018FE0  50E3               	movf	plusw1,w,c
 15719  018FE2  58DE               	subwfb	postinc2,w,c
 15720  018FE4  0EEB               	movlw	-21
 15721  018FE6  50E3               	movf	plusw1,w,c
 15722  018FE8  58DE               	subwfb	postinc2,w,c
 15723  018FEA  0EEC               	movlw	-20
 15724  018FEC  50E3               	movf	plusw1,w,c
 15725  018FEE  58DE               	subwfb	postinc2,w,c
 15726  018FF0  0EED               	movlw	-19
 15727  018FF2  50E3               	movf	plusw1,w,c
 15728  018FF4  58DE               	subwfb	postinc2,w,c
 15729  018FF6  0EEE               	movlw	-18
 15730  018FF8  50E3               	movf	plusw1,w,c
 15731  018FFA  58DE               	subwfb	postinc2,w,c
 15732  018FFC  A0D8               	btfss	status,0,c
 15733  018FFE  D021               	goto	l8864
 15734                           
 15735                           ;stkvar	_divisor @ sp[(-9)+-16]
 15736                           ;stkvar	_dividend @ sp[(-9)+-8]
 15737  019000  50E1               	movf	fsr1l,w,c
 15738  019002  0FEF               	addlw	-17
 15739  019004  6ED9               	movwf	fsr2l,c
 15740  019006  50E2               	movf	fsr1h,w,c
 15741  019008  6EDA               	movwf	fsr2h,c
 15742  01900A  0EFF               	movlw	255
 15743  01900C  22DA               	addwfc	fsr2h,f,c
 15744  01900E  0EE7               	movlw	-25
 15745  019010  50E3               	movf	plusw1,w,c
 15746  019012  5EDE               	subwf	postinc2,f,c
 15747  019014  0EE8               	movlw	-24
 15748  019016  50E3               	movf	plusw1,w,c
 15749  019018  5ADE               	subwfb	postinc2,f,c
 15750  01901A  0EE9               	movlw	-23
 15751  01901C  50E3               	movf	plusw1,w,c
 15752  01901E  5ADE               	subwfb	postinc2,f,c
 15753  019020  0EEA               	movlw	-22
 15754  019022  50E3               	movf	plusw1,w,c
 15755  019024  5ADE               	subwfb	postinc2,f,c
 15756  019026  0EEB               	movlw	-21
 15757  019028  50E3               	movf	plusw1,w,c
 15758  01902A  5ADE               	subwfb	postinc2,f,c
 15759  01902C  0EEC               	movlw	-20
 15760  01902E  50E3               	movf	plusw1,w,c
 15761  019030  5ADE               	subwfb	postinc2,f,c
 15762  019032  0EED               	movlw	-19
 15763  019034  50E3               	movf	plusw1,w,c
 15764  019036  5ADE               	subwfb	postinc2,f,c
 15765  019038  0EEE               	movlw	-18
 15766  01903A  50E3               	movf	plusw1,w,c
 15767  01903C  5ADE               	subwfb	postinc2,f,c
 15768                           
 15769                           ;stkvar	_quotient @ sp[(-9)+0]
 15770  01903E  0EF7               	movlw	-9
 15771  019040  80E3               	bsf	plusw1,0,c
 15772  019042                     l8864:
 15773                           
 15774                           ;stkvar	_divisor @ sp[(-9)+-16]
 15775  019042  90D8               	bcf	status,0,c
 15776  019044  0EEE               	movlw	-18
 15777  019046  32E3               	rrcf	plusw1,f,c
 15778  019048  0EED               	movlw	-19
 15779  01904A  32E3               	rrcf	plusw1,f,c
 15780  01904C  0EEC               	movlw	-20
 15781  01904E  32E3               	rrcf	plusw1,f,c
 15782  019050  0EEB               	movlw	-21
 15783  019052  32E3               	rrcf	plusw1,f,c
 15784  019054  0EEA               	movlw	-22
 15785  019056  32E3               	rrcf	plusw1,f,c
 15786  019058  0EE9               	movlw	-23
 15787  01905A  32E3               	rrcf	plusw1,f,c
 15788  01905C  0EE8               	movlw	-24
 15789  01905E  32E3               	rrcf	plusw1,f,c
 15790  019060  0EE7               	movlw	-25
 15791  019062  32E3               	rrcf	plusw1,f,c
 15792                           
 15793                           ;stkvar	_counter @ sp[(-9)+8]
 15794  019064  0EFF               	movlw	-1
 15795  019066  50E3               	movf	plusw1,w,c
 15796  019068  6E01               	movwf	btemp^0,c
 15797  01906A  0E01               	movlw	1
 15798  01906C  5E01               	subwf	btemp^0,f,c
 15799  01906E  0EFF               	movlw	-1
 15800  019070  0060  F007  FFE3   	movff	btemp,plusw1
 15801  019076  A4D8               	btfss	status,2,c
 15802  019078  D791               	goto	u7420
 15803  01907A                     u7440:
 15804                           
 15805                           ;stkvar	_quotient @ sp[(-9)+0]
 15806  01907A  0EF7               	movlw	247
 15807  01907C  24E1               	addwf	fsr1l,w,c
 15808  01907E  6ED9               	movwf	fsr2l,c
 15809  019080  0EFF               	movlw	255
 15810  019082  20E2               	addwfc	fsr1h,w,c
 15811  019084  6EDA               	movwf	fsr2h,c
 15812                           
 15813                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15814  019086  0E08               	movlw	8
 15815  019088  6E01               	movwf	btemp^0,c
 15816  01908A  0EEF               	movlw	-17
 15817  01908C                     us745999:
 15818  01908C  006F FF7B FFE3     	movff	postinc2,plusw1
 15819  019092  28E8               	incf	wreg,w,c
 15820  019094  2E01               	decfsz	btemp^0,f,c
 15821  019096  D7FA               	bra	us745999
 15822                           
 15823                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15824  019098  0EF7               	movlw	247
 15825  01909A  26E1               	addwf	fsr1l,f,c
 15826  01909C  0EFF               	movlw	255
 15827  01909E  22E2               	addwfc	fsr1h,f,c
 15828  0190A0  0012               	return		;funcret
 15829  0190A2                     __end_of___lodiv:
 15830                           	opt callstack 0
 15831                           
 15832 ;; *************** function _strncmp *****************
 15833 ;; Defined at:
 15834 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15835 ;; Parameters:    Size  Location     Type
 15836 ;;  _l              2  [STACK] PTR const unsigned char 
 15837 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15838 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15839 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15840 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15841 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15842 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15843 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15844 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15845 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15846 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15847 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15848 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15849 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15850 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15851 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15852 ;;		 -> STR_1(21), 
 15853 ;;  _r              2  [STACK] PTR const unsigned char 
 15854 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15855 ;;		 -> STR_79(3), STR_75(3), 
 15856 ;;  n               2  [STACK] unsigned int 
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;  r               2  [STACK] PTR const unsigned char 
 15859 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15860 ;;		 -> STR_79(3), STR_75(3), 
 15861 ;;  l               2  [STACK] PTR const unsigned char 
 15862 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15863 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15864 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15865 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15866 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15867 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15868 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15869 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15870 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15871 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15872 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15873 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15874 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15875 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15876 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15877 ;;		 -> STR_1(21), 
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  2  [STACK] int 
 15880 ;; Registers used:
 15881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15882 ;; Tracked objects:
 15883 ;;		On entry : 0/0
 15884 ;;		On exit  : 0/0
 15885 ;;		Unchanged: 0/0
 15886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15891 ;;Total ram usage:        0 bytes
 15892 ;; Hardware stack levels used:    1
 15893 ;; Hardware stack levels required when called:   15
 15894 ;; This function calls:
 15895 ;;		Nothing
 15896 ;; This function is called by:
 15897 ;;		_vfpfcnvrt
 15898 ;; This function uses a reentrant model
 15899 ;;
 15900                           
 15901                           	psect	text60
 15902  018098                     __ptext60:
 15903                           	opt callstack 0
 15904  018098                     _strncmp:
 15905                           	opt callstack 0
 15906                           
 15907                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15908  018098  52E6               	movf	postinc1,f,c
 15909  01809A  52E6               	movf	postinc1,f,c
 15910  01809C  52E6               	movf	postinc1,f,c
 15911  01809E  52E6               	movf	postinc1,f,c
 15912                           
 15913                           ;stkvar	__l @ sp[(-4)+-2]
 15914                           
 15915                           ;incstack = 0
 15916 ;; hardware stack exceeded
 15917  0180A0  0EFA               	movlw	-6
 15918  0180A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15919  0180A8  0EFB               	movlw	-5
 15920  0180AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15921                           
 15922                           ;stkvar	_l @ sp[(-4)+2]
 15923  0180B0  0EFF               	movlw	-1
 15924  0180B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15925  0180B8  0EFE               	movlw	-2
 15926  0180BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15927                           
 15928                           ;stkvar	__r @ sp[(-4)+-4]
 15929  0180C0  0EF8               	movlw	-8
 15930  0180C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15931  0180C8  0EF9               	movlw	-7
 15932  0180CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15933                           
 15934                           ;stkvar	_r @ sp[(-4)+0]
 15935  0180D0  0EFD               	movlw	-3
 15936  0180D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15937  0180D8  0EFC               	movlw	-4
 15938  0180DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15939                           
 15940                           ;stkvar	_n @ sp[(-4)+-6]
 15941  0180E0  0EF6               	movlw	-10
 15942  0180E2  006F FF8C  F001    	movff	plusw1,btemp
 15943  0180E8  0E01               	movlw	1
 15944  0180EA  5E01               	subwf	btemp^0,f,c
 15945  0180EC  0EF6               	movlw	-10
 15946  0180EE  0060  F007  FFE3   	movff	btemp,plusw1
 15947  0180F4  0EF7               	movlw	-9
 15948  0180F6  006F FF8C  F001    	movff	plusw1,btemp
 15949  0180FC  0E00               	movlw	0
 15950  0180FE  5A01               	subwfb	btemp^0,f,c
 15951  018100  0EF7               	movlw	-9
 15952  018102  0060  F007  FFE3   	movff	btemp,plusw1
 15953  018108  0EF6               	movlw	-10
 15954  01810A  28E3               	incf	plusw1,w,c
 15955  01810C  E13F               	bnz	l9534
 15956  01810E  0EF7               	movlw	-9
 15957  018110  28E3               	incf	plusw1,w,c
 15958  018112  A4D8               	btfss	status,2,c
 15959  018114  D03B               	goto	l9534
 15960  018116  0E00               	movlw	0
 15961  018118  6E01               	movwf	btemp^0,c
 15962  01811A  0E00               	movlw	0
 15963  01811C  6E02               	movwf	(btemp+1)^0,c
 15964  01811E  D0C7               	goto	l3527
 15965  018120                     l9532:
 15966                           
 15967                           ;stkvar	_l @ sp[(-4)+2]
 15968  018120  0EFE               	movlw	-2
 15969  018122  50E3               	movf	plusw1,w,c
 15970  018124  0F01               	addlw	1
 15971  018126  6E01               	movwf	btemp^0,c
 15972  018128  0EFE               	movlw	-2
 15973  01812A  0060  F007  FFE3   	movff	btemp,plusw1
 15974  018130  6A01               	clrf	btemp^0,c
 15975  018132  0EFF               	movlw	-1
 15976  018134  50E3               	movf	plusw1,w,c
 15977  018136  2001               	addwfc	btemp^0,w,c
 15978  018138  6E01               	movwf	btemp^0,c
 15979  01813A  0EFF               	movlw	-1
 15980  01813C  0060  F007  FFE3   	movff	btemp,plusw1
 15981                           
 15982                           ;stkvar	_r @ sp[(-4)+0]
 15983  018142  0EFC               	movlw	-4
 15984  018144  50E3               	movf	plusw1,w,c
 15985  018146  0F01               	addlw	1
 15986  018148  6E01               	movwf	btemp^0,c
 15987  01814A  0EFC               	movlw	-4
 15988  01814C  0060  F007  FFE3   	movff	btemp,plusw1
 15989  018152  6A01               	clrf	btemp^0,c
 15990  018154  0EFD               	movlw	-3
 15991  018156  50E3               	movf	plusw1,w,c
 15992  018158  2001               	addwfc	btemp^0,w,c
 15993  01815A  6E01               	movwf	btemp^0,c
 15994  01815C  0EFD               	movlw	-3
 15995  01815E  0060  F007  FFE3   	movff	btemp,plusw1
 15996                           
 15997                           ;stkvar	_n @ sp[(-4)+-6]
 15998  018164  0EF6               	movlw	-10
 15999  018166  006F FF8C  F001    	movff	plusw1,btemp
 16000  01816C  0E01               	movlw	1
 16001  01816E  5E01               	subwf	btemp^0,f,c
 16002  018170  0EF6               	movlw	-10
 16003  018172  0060  F007  FFE3   	movff	btemp,plusw1
 16004  018178  0EF7               	movlw	-9
 16005  01817A  006F FF8C  F001    	movff	plusw1,btemp
 16006  018180  0E00               	movlw	0
 16007  018182  5A01               	subwfb	btemp^0,f,c
 16008  018184  0EF7               	movlw	-9
 16009  018186  0060  F007  FFE3   	movff	btemp,plusw1
 16010  01818C                     l9534:
 16011                           
 16012                           ;stkvar	_l @ sp[(-4)+2]
 16013  01818C  0EFE               	movlw	-2
 16014  01818E  006F FF8F FFF6     	movff	plusw1,tblptrl
 16015  018194  0EFF               	movlw	-1
 16016  018196  006F FF8F FFF7     	movff	plusw1,tblptrh
 16017  01819C  0E00               	movlw	low (__mediumconst shr (0+16))
 16018  01819E  6EF8               	movwf	tblptru,c
 16019  0181A0  0E1F               	movlw	(high __ramtop+-1)
 16020  0181A2  64F7               	cpfsgt	tblptrh,c
 16021  0181A4  D003               	bra	u8697
 16022  0181A6  0008               	tblrd		*
 16023  0181A8  50F5               	movf	tablat,w,c
 16024  0181AA  D007               	bra	u8690
 16025  0181AC                     u8697:
 16026  0181AC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16027  0181B2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16028  0181B8  50EF               	movf	indf0,w,c
 16029  0181BA                     u8690:
 16030  0181BA  0900               	iorlw	0
 16031  0181BC  B4D8               	btfsc	status,2,c
 16032  0181BE  D04A               	goto	u8730
 16033                           
 16034                           ;stkvar	_r @ sp[(-4)+0]
 16035  0181C0  50E1               	movf	fsr1l,w,c
 16036  0181C2  0FFC               	addlw	-4
 16037  0181C4  6ED9               	movwf	fsr2l,c
 16038  0181C6  50E2               	movf	fsr1h,w,c
 16039  0181C8  6EDA               	movwf	fsr2h,c
 16040  0181CA  0EFF               	movlw	255
 16041  0181CC  22DA               	addwfc	fsr2h,f,c
 16042  0181CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16043  0181D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16044  0181DA                     	if	0	;tblptru may be non-zero
 16045  0181DA                     	endif
 16046  0181DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16047  0181DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16048  0181DC  6EF8               	movwf	tblptru,c
 16049  0181DE                     	endif
 16050  0181DE  0008               	tblrd		*
 16051  0181E0  50F5               	movf	tablat,w,c
 16052  0181E2  0900               	iorlw	0
 16053  0181E4  B4D8               	btfsc	status,2,c
 16054  0181E6  D036               	goto	u8730
 16055                           
 16056                           ;stkvar	_n @ sp[(-4)+-6]
 16057  0181E8  0EF6               	movlw	-10
 16058  0181EA  006F FF8C  F001    	movff	plusw1,btemp
 16059  0181F0  0EF7               	movlw	-9
 16060  0181F2  50E3               	movf	plusw1,w,c
 16061  0181F4  1001               	iorwf	btemp^0,w,c
 16062  0181F6  B4D8               	btfsc	status,2,c
 16063  0181F8  D02D               	goto	u8730
 16064                           
 16065                           ;stkvar	_r @ sp[(-4)+0]
 16066  0181FA  50E1               	movf	fsr1l,w,c
 16067  0181FC  0FFC               	addlw	-4
 16068  0181FE  6ED9               	movwf	fsr2l,c
 16069  018200  50E2               	movf	fsr1h,w,c
 16070  018202  6EDA               	movwf	fsr2h,c
 16071  018204  0EFF               	movlw	255
 16072  018206  22DA               	addwfc	fsr2h,f,c
 16073  018208  006F FF7B FFF6     	movff	postinc2,tblptrl
 16074  01820E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16075  018214                     	if	0	;tblptru may be non-zero
 16076  018214                     	endif
 16077  018214                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16078  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 16079  018216  6EF8               	movwf	tblptru,c
 16080  018218                     	endif
 16081  018218  0008               	tblrd		*
 16082  01821A  006F FFD4  F00C    	movff	tablat,btemp+11
 16083                           
 16084                           ;stkvar	_l @ sp[(-4)+2]
 16085  018220  0EFE               	movlw	-2
 16086  018222  006F FF8F FFF6     	movff	plusw1,tblptrl
 16087  018228  0EFF               	movlw	-1
 16088  01822A  006F FF8F FFF7     	movff	plusw1,tblptrh
 16089  018230  0E00               	movlw	low (__mediumconst shr (0+16))
 16090  018232  6EF8               	movwf	tblptru,c
 16091  018234  0E1F               	movlw	(high __ramtop+-1)
 16092  018236  64F7               	cpfsgt	tblptrh,c
 16093  018238  D003               	bra	u8737
 16094  01823A  0008               	tblrd		*
 16095  01823C  50F5               	movf	tablat,w,c
 16096  01823E  D007               	bra	u8735
 16097  018240                     u8737:
 16098  018240  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16099  018246  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16100  01824C  50EF               	movf	indf0,w,c
 16101  01824E                     u8735:
 16102  01824E  180C               	xorwf	(btemp+11)^0,w,c
 16103  018250  B4D8               	btfsc	status,2,c
 16104  018252  D766               	goto	l9532
 16105  018254                     u8730:
 16106                           
 16107                           ;stkvar	_l @ sp[(-4)+2]
 16108  018254  0EFE               	movlw	-2
 16109  018256  006F FF8F FFF6     	movff	plusw1,tblptrl
 16110  01825C  0EFF               	movlw	-1
 16111  01825E  006F FF8F FFF7     	movff	plusw1,tblptrh
 16112  018264  0E00               	movlw	low (__mediumconst shr (0+16))
 16113  018266  6EF8               	movwf	tblptru,c
 16114  018268  0E1F               	movlw	(high __ramtop+-1)
 16115  01826A  64F7               	cpfsgt	tblptrh,c
 16116  01826C  D003               	bra	u8747
 16117  01826E  0008               	tblrd		*
 16118  018270  50F5               	movf	tablat,w,c
 16119  018272  D007               	bra	u8740
 16120  018274                     u8747:
 16121  018274  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16122  01827A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16123  018280  50EF               	movf	indf0,w,c
 16124  018282                     u8740:
 16125  018282  6E01               	movwf	btemp^0,c
 16126  018284  6A02               	clrf	(btemp+1)^0,c
 16127                           
 16128                           ;stkvar	_r @ sp[(-4)+0]
 16129  018286  50E1               	movf	fsr1l,w,c
 16130  018288  0FFC               	addlw	-4
 16131  01828A  6ED9               	movwf	fsr2l,c
 16132  01828C  50E2               	movf	fsr1h,w,c
 16133  01828E  6EDA               	movwf	fsr2h,c
 16134  018290  0EFF               	movlw	255
 16135  018292  22DA               	addwfc	fsr2h,f,c
 16136  018294  006F FF7B FFF6     	movff	postinc2,tblptrl
 16137  01829A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16138  0182A0                     	if	0	;tblptru may be non-zero
 16139  0182A0                     	endif
 16140  0182A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16141  0182A0  0E00               	movlw	low (__mediumconst shr (0+16))
 16142  0182A2  6EF8               	movwf	tblptru,c
 16143  0182A4                     	endif
 16144  0182A4  0008               	tblrd		*
 16145  0182A6  50F5               	movf	tablat,w,c
 16146  0182A8  5E01               	subwf	btemp^0,f,c
 16147  0182AA  0E00               	movlw	0
 16148  0182AC  5A02               	subwfb	(btemp+1)^0,f,c
 16149  0182AE                     l3527:
 16150                           
 16151                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16152  0182AE  0EF6               	movlw	246
 16153  0182B0  26E1               	addwf	fsr1l,f,c
 16154  0182B2  0EFF               	movlw	255
 16155  0182B4  22E2               	addwfc	fsr1h,f,c
 16156  0182B6  0012               	return		;funcret
 16157  0182B8                     __end_of_strncmp:
 16158                           	opt callstack 0
 16159                           
 16160 ;; *************** function _stoa *****************
 16161 ;; Defined at:
 16162 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16163 ;; Parameters:    Size  Location     Type
 16164 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16165 ;;		 -> f(6), NULL(0), 
 16166 ;;  s               2  [STACK] PTR unsigned char 
 16167 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 16168 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 16169 ;;		 -> V(191), 
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;  nuls            7  [STACK] unsigned char [7]
 16172 ;;  l               2  [STACK] int 
 16173 ;;  p               2  [STACK] int 
 16174 ;;  cp              2  [STACK] PTR unsigned char 
 16175 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 16176 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 16177 ;;		 -> STR_3(5), V(191), 
 16178 ;;  w               2  [STACK] int 
 16179 ;;  i               2  [STACK] int 
 16180 ;; Return value:  Size  Location     Type
 16181 ;;                  2  [STACK] int 
 16182 ;; Registers used:
 16183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16184 ;; Tracked objects:
 16185 ;;		On entry : 0/0
 16186 ;;		On exit  : 0/0
 16187 ;;		Unchanged: 0/0
 16188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16193 ;;Total ram usage:        0 bytes
 16194 ;; Hardware stack levels used:    1
 16195 ;; Hardware stack levels required when called:   18
 16196 ;; This function calls:
 16197 ;;		_fputc
 16198 ;;		_strlen
 16199 ;; This function is called by:
 16200 ;;		_vfpfcnvrt
 16201 ;; This function uses a reentrant model
 16202 ;;
 16203                           
 16204                           	psect	text61
 16205  017460                     __ptext61:
 16206                           	opt callstack 0
 16207  017460                     _stoa:
 16208                           	opt callstack 0
 16209                           
 16210                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16211  017460  0E11               	movlw	17
 16212  017462  26E1               	addwf	fsr1l,f,c
 16213  017464  0E00               	movlw	0
 16214  017466  22E2               	addwfc	fsr1h,f,c
 16215                           
 16216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16217                           
 16218                           ;incstack = 0
 16219 ;; hardware stack exceeded
 16220  017468  EE20  F100         	lfsr	2,stoa@F1166
 16221                           
 16222                           ;stkvar	_nuls @ sp[(-17)+0]
 16223  01746C  0E07               	movlw	7
 16224  01746E  6E01               	movwf	btemp^0,c
 16225  017470  0EEF               	movlw	-17
 16226  017472                     us1177999:
 16227  017472  006F FF7B FFE3     	movff	postinc2,plusw1
 16228  017478  28E8               	incf	wreg,w,c
 16229  01747A  2E01               	decfsz	btemp^0,f,c
 16230  01747C  D7FA               	bra	us1177999
 16231                           
 16232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16233                           ;stkvar	_s @ sp[(-17)+-4]
 16234  01747E  0EEB               	movlw	-21
 16235  017480  006F FF8C  F00B    	movff	plusw1,btemp+10
 16236  017486  0EEC               	movlw	-20
 16237  017488  006F FF8C  F00C    	movff	plusw1,btemp+11
 16238                           
 16239                           ;stkvar	_cp @ sp[(-17)+11]
 16240  01748E  0EFB               	movlw	-5
 16241  017490  0060  F033  FFE3   	movff	btemp+11,plusw1
 16242  017496  0EFA               	movlw	-6
 16243  017498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16244                           
 16245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16246                           ;stkvar	_cp @ sp[(-17)+11]
 16247  01749E  0EFA               	movlw	-6
 16248  0174A0  006F FF8C  F001    	movff	plusw1,btemp
 16249  0174A6  0EFB               	movlw	-5
 16250  0174A8  50E3               	movf	plusw1,w,c
 16251  0174AA  1001               	iorwf	btemp^0,w,c
 16252  0174AC  A4D8               	btfss	status,2,c
 16253  0174AE  D00E               	goto	l12562
 16254                           
 16255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16256                           ;stkvar	_nuls @ sp[(-17)+0]
 16257  0174B0  0EEF               	movlw	239
 16258  0174B2  24E1               	addwf	fsr1l,w,c
 16259  0174B4  6E0B               	movwf	(btemp+10)^0,c
 16260  0174B6  0EFF               	movlw	255
 16261  0174B8  20E2               	addwfc	fsr1h,w,c
 16262  0174BA  6E0C               	movwf	(btemp+11)^0,c
 16263                           
 16264                           ;stkvar	_cp @ sp[(-17)+11]
 16265  0174BC  0EFB               	movlw	-5
 16266  0174BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16267  0174C4  0EFA               	movlw	-6
 16268  0174C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16269  0174CC                     l12562:
 16270                           
 16271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16272                           ;stkvar	_cp @ sp[(-17)+11]
 16273  0174CC  0EFA               	movlw	-6
 16274  0174CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16275  0174D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16276  0174DA  EC34  F0D6         	call	_strlen	;wreg free
 16277                           
 16278                           ;stkvar	_l @ sp[(-17)+7]
 16279  0174DE  0EF6               	movlw	-10
 16280  0174E0  0060  F007  FFE3   	movff	btemp,plusw1
 16281  0174E6  0EF7               	movlw	-9
 16282  0174E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16283                           
 16284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16285                           ;stkvar	_p @ sp[(-17)+9]
 16286  0174EE  0EF8               	movlw	-8
 16287  0174F0  0060  F0F3  FFE3   	movff	_prec,plusw1
 16288  0174F6  0EF9               	movlw	-7
 16289  0174F8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16290                           
 16291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16292                           ;stkvar	_p @ sp[(-17)+9]
 16293  0174FE  0EF9               	movlw	-7
 16294  017500  BEE3               	btfsc	plusw1,7,c
 16295  017502  D023               	goto	l2352
 16296                           
 16297                           ;stkvar	_l @ sp[(-17)+7]
 16298                           ;stkvar	_p @ sp[(-17)+9]
 16299  017504  50E1               	movf	fsr1l,w,c
 16300  017506  0FF8               	addlw	-8
 16301  017508  6ED9               	movwf	fsr2l,c
 16302  01750A  50E2               	movf	fsr1h,w,c
 16303  01750C  6EDA               	movwf	fsr2h,c
 16304  01750E  0EFF               	movlw	255
 16305  017510  22DA               	addwfc	fsr2h,f,c
 16306  017512  0EF6               	movlw	-10
 16307  017514  50E3               	movf	plusw1,w,c
 16308  017516  5CDE               	subwf	postinc2,w,c
 16309  017518  50DE               	movf	postinc2,w,c
 16310  01751A  0A80               	xorlw	128
 16311  01751C  6E01               	movwf	btemp^0,c
 16312  01751E  0EF7               	movlw	-9
 16313  017520  50E3               	movf	plusw1,w,c
 16314  017522  0A80               	xorlw	128
 16315  017524  5801               	subwfb	btemp^0,w,c
 16316  017526  B0D8               	btfsc	status,0,c
 16317  017528  D010               	goto	l2352
 16318                           
 16319                           ;stkvar	_p @ sp[(-17)+9]
 16320                           ;stkvar	_l @ sp[(-17)+7]
 16321  01752A  0EF8               	movlw	-8
 16322  01752C  006F FF8C  F001    	movff	plusw1,btemp
 16323  017532  0EF6               	movlw	-10
 16324  017534  0060  F007  FFE3   	movff	btemp,plusw1
 16325  01753A  0EF9               	movlw	-7
 16326  01753C  006F FF8C  F001    	movff	plusw1,btemp
 16327  017542  0EF7               	movlw	-9
 16328  017544  0060  F007  FFE3   	movff	btemp,plusw1
 16329  01754A                     l2352:
 16330                           
 16331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16332                           ;stkvar	_l @ sp[(-17)+7]
 16333                           ;stkvar	_p @ sp[(-17)+9]
 16334  01754A  0EF6               	movlw	-10
 16335  01754C  006F FF8C  F001    	movff	plusw1,btemp
 16336  017552  0EF8               	movlw	-8
 16337  017554  0060  F007  FFE3   	movff	btemp,plusw1
 16338  01755A  0EF7               	movlw	-9
 16339  01755C  006F FF8C  F001    	movff	plusw1,btemp
 16340  017562  0EF9               	movlw	-7
 16341  017564  0060  F007  FFE3   	movff	btemp,plusw1
 16342                           
 16343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16344                           ;stkvar	_w @ sp[(-17)+13]
 16345  01756A  0EFC               	movlw	-4
 16346  01756C  0060  F0EB  FFE3   	movff	_width,plusw1
 16347  017572  0EFD               	movlw	-3
 16348  017574  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16349                           
 16350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16351  01757A  A03E               	btfss	_flags^0,0,c
 16352  01757C  D01F               	goto	l12582
 16353  01757E  D031               	goto	u11820
 16354  017580                     l12578:
 16355                           
 16356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16357                           ;stkvar	_fp @ sp[(-17)+-2]
 16358  017580  0EED               	movlw	-19
 16359  017582  006F FF8F FFE6     	movff	plusw1,postinc1
 16360  017588  006F FF8F FFE6     	movff	plusw1,postinc1
 16361  01758E  0E20               	movlw	32
 16362  017590  6EE6               	movwf	postinc1,c
 16363  017592  0E00               	movlw	0
 16364  017594  6EE6               	movwf	postinc1,c
 16365  017596  ECE6  F0CC         	call	_fputc	;wreg free
 16366                           
 16367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16368                           ;stkvar	_l @ sp[(-17)+7]
 16369  01759A  0EF6               	movlw	-10
 16370  01759C  50E3               	movf	plusw1,w,c
 16371  01759E  0F01               	addlw	1
 16372  0175A0  6E01               	movwf	btemp^0,c
 16373  0175A2  0EF6               	movlw	-10
 16374  0175A4  0060  F007  FFE3   	movff	btemp,plusw1
 16375  0175AA  6A01               	clrf	btemp^0,c
 16376  0175AC  0EF7               	movlw	-9
 16377  0175AE  50E3               	movf	plusw1,w,c
 16378  0175B0  2001               	addwfc	btemp^0,w,c
 16379  0175B2  6E01               	movwf	btemp^0,c
 16380  0175B4  0EF7               	movlw	-9
 16381  0175B6  0060  F007  FFE3   	movff	btemp,plusw1
 16382  0175BC                     l12582:
 16383                           
 16384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16385                           ;stkvar	_w @ sp[(-17)+13]
 16386                           ;stkvar	_l @ sp[(-17)+7]
 16387  0175BC  50E1               	movf	fsr1l,w,c
 16388  0175BE  0FF6               	addlw	-10
 16389  0175C0  6ED9               	movwf	fsr2l,c
 16390  0175C2  50E2               	movf	fsr1h,w,c
 16391  0175C4  6EDA               	movwf	fsr2h,c
 16392  0175C6  0EFF               	movlw	255
 16393  0175C8  22DA               	addwfc	fsr2h,f,c
 16394  0175CA  0EFC               	movlw	-4
 16395  0175CC  50E3               	movf	plusw1,w,c
 16396  0175CE  5CDE               	subwf	postinc2,w,c
 16397  0175D0  50DE               	movf	postinc2,w,c
 16398  0175D2  0A80               	xorlw	128
 16399  0175D4  6E01               	movwf	btemp^0,c
 16400  0175D6  0EFD               	movlw	-3
 16401  0175D8  50E3               	movf	plusw1,w,c
 16402  0175DA  0A80               	xorlw	128
 16403  0175DC  5801               	subwfb	btemp^0,w,c
 16404  0175DE  A0D8               	btfss	status,0,c
 16405  0175E0  D7CF               	goto	l12578
 16406  0175E2                     u11820:
 16407                           
 16408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16409                           ;stkvar	_i @ sp[(-17)+15]
 16410  0175E2  0EFE               	movlw	-2
 16411  0175E4  6AE3               	clrf	plusw1,c
 16412  0175E6  0EFF               	movlw	-1
 16413  0175E8  6AE3               	clrf	plusw1,c
 16414                           
 16415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16416  0175EA  D045               	goto	l12592
 16417  0175EC                     l12586:
 16418                           
 16419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16420                           ;stkvar	_fp @ sp[(-17)+-2]
 16421  0175EC  0EED               	movlw	-19
 16422  0175EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16423  0175F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16424                           
 16425                           ;stkvar	_cp @ sp[(-19)+11]
 16426  0175FA  0EF8               	movlw	-8
 16427  0175FC  006F FF8F FFF6     	movff	plusw1,tblptrl
 16428  017602  0EF9               	movlw	-7
 16429  017604  006F FF8F FFF7     	movff	plusw1,tblptrh
 16430  01760A  0E00               	movlw	low (__mediumconst shr (0+16))
 16431  01760C  6EF8               	movwf	tblptru,c
 16432  01760E  0E1F               	movlw	(high __ramtop+-1)
 16433  017610  64F7               	cpfsgt	tblptrh,c
 16434  017612  D003               	bra	u11837
 16435  017614  0008               	tblrd		*
 16436  017616  50F5               	movf	tablat,w,c
 16437  017618  D007               	bra	u11830
 16438  01761A                     u11837:
 16439  01761A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16440  017620  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16441  017626  50EF               	movf	indf0,w,c
 16442  017628                     u11830:
 16443  017628  6EE6               	movwf	postinc1,c
 16444  01762A  0E00               	movlw	0
 16445  01762C  6EE6               	movwf	postinc1,c
 16446  01762E  ECE6  F0CC         	call	_fputc	;wreg free
 16447                           
 16448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16449                           ;stkvar	_cp @ sp[(-17)+11]
 16450  017632  0EFA               	movlw	-6
 16451  017634  50E3               	movf	plusw1,w,c
 16452  017636  0F01               	addlw	1
 16453  017638  6E01               	movwf	btemp^0,c
 16454  01763A  0EFA               	movlw	-6
 16455  01763C  0060  F007  FFE3   	movff	btemp,plusw1
 16456  017642  6A01               	clrf	btemp^0,c
 16457  017644  0EFB               	movlw	-5
 16458  017646  50E3               	movf	plusw1,w,c
 16459  017648  2001               	addwfc	btemp^0,w,c
 16460  01764A  6E01               	movwf	btemp^0,c
 16461  01764C  0EFB               	movlw	-5
 16462  01764E  0060  F007  FFE3   	movff	btemp,plusw1
 16463                           
 16464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16465                           ;stkvar	_i @ sp[(-17)+15]
 16466  017654  0EFE               	movlw	-2
 16467  017656  50E3               	movf	plusw1,w,c
 16468  017658  0F01               	addlw	1
 16469  01765A  6E01               	movwf	btemp^0,c
 16470  01765C  0EFE               	movlw	-2
 16471  01765E  0060  F007  FFE3   	movff	btemp,plusw1
 16472  017664  6A01               	clrf	btemp^0,c
 16473  017666  0EFF               	movlw	-1
 16474  017668  50E3               	movf	plusw1,w,c
 16475  01766A  2001               	addwfc	btemp^0,w,c
 16476  01766C  6E01               	movwf	btemp^0,c
 16477  01766E  0EFF               	movlw	-1
 16478  017670  0060  F007  FFE3   	movff	btemp,plusw1
 16479  017676                     l12592:
 16480                           
 16481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16482                           ;stkvar	_p @ sp[(-17)+9]
 16483                           ;stkvar	_i @ sp[(-17)+15]
 16484  017676  50E1               	movf	fsr1l,w,c
 16485  017678  0FFE               	addlw	-2
 16486  01767A  6ED9               	movwf	fsr2l,c
 16487  01767C  50E2               	movf	fsr1h,w,c
 16488  01767E  6EDA               	movwf	fsr2h,c
 16489  017680  0EFF               	movlw	255
 16490  017682  22DA               	addwfc	fsr2h,f,c
 16491  017684  0EF8               	movlw	-8
 16492  017686  50E3               	movf	plusw1,w,c
 16493  017688  5CDE               	subwf	postinc2,w,c
 16494  01768A  50DE               	movf	postinc2,w,c
 16495  01768C  0A80               	xorlw	128
 16496  01768E  6E01               	movwf	btemp^0,c
 16497  017690  0EF9               	movlw	-7
 16498  017692  50E3               	movf	plusw1,w,c
 16499  017694  0A80               	xorlw	128
 16500  017696  5801               	subwfb	btemp^0,w,c
 16501  017698  A0D8               	btfss	status,0,c
 16502  01769A  D7A8               	goto	l12586
 16503                           
 16504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16505  01769C  B03E               	btfsc	_flags^0,0,c
 16506  01769E  D01F               	goto	l12600
 16507  0176A0  D031               	goto	u11860
 16508  0176A2                     l12596:
 16509                           
 16510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16511                           ;stkvar	_fp @ sp[(-17)+-2]
 16512  0176A2  0EED               	movlw	-19
 16513  0176A4  006F FF8F FFE6     	movff	plusw1,postinc1
 16514  0176AA  006F FF8F FFE6     	movff	plusw1,postinc1
 16515  0176B0  0E20               	movlw	32
 16516  0176B2  6EE6               	movwf	postinc1,c
 16517  0176B4  0E00               	movlw	0
 16518  0176B6  6EE6               	movwf	postinc1,c
 16519  0176B8  ECE6  F0CC         	call	_fputc	;wreg free
 16520                           
 16521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16522                           ;stkvar	_l @ sp[(-17)+7]
 16523  0176BC  0EF6               	movlw	-10
 16524  0176BE  50E3               	movf	plusw1,w,c
 16525  0176C0  0F01               	addlw	1
 16526  0176C2  6E01               	movwf	btemp^0,c
 16527  0176C4  0EF6               	movlw	-10
 16528  0176C6  0060  F007  FFE3   	movff	btemp,plusw1
 16529  0176CC  6A01               	clrf	btemp^0,c
 16530  0176CE  0EF7               	movlw	-9
 16531  0176D0  50E3               	movf	plusw1,w,c
 16532  0176D2  2001               	addwfc	btemp^0,w,c
 16533  0176D4  6E01               	movwf	btemp^0,c
 16534  0176D6  0EF7               	movlw	-9
 16535  0176D8  0060  F007  FFE3   	movff	btemp,plusw1
 16536  0176DE                     l12600:
 16537                           
 16538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16539                           ;stkvar	_w @ sp[(-17)+13]
 16540                           ;stkvar	_l @ sp[(-17)+7]
 16541  0176DE  50E1               	movf	fsr1l,w,c
 16542  0176E0  0FF6               	addlw	-10
 16543  0176E2  6ED9               	movwf	fsr2l,c
 16544  0176E4  50E2               	movf	fsr1h,w,c
 16545  0176E6  6EDA               	movwf	fsr2h,c
 16546  0176E8  0EFF               	movlw	255
 16547  0176EA  22DA               	addwfc	fsr2h,f,c
 16548  0176EC  0EFC               	movlw	-4
 16549  0176EE  50E3               	movf	plusw1,w,c
 16550  0176F0  5CDE               	subwf	postinc2,w,c
 16551  0176F2  50DE               	movf	postinc2,w,c
 16552  0176F4  0A80               	xorlw	128
 16553  0176F6  6E01               	movwf	btemp^0,c
 16554  0176F8  0EFD               	movlw	-3
 16555  0176FA  50E3               	movf	plusw1,w,c
 16556  0176FC  0A80               	xorlw	128
 16557  0176FE  5801               	subwfb	btemp^0,w,c
 16558  017700  A0D8               	btfss	status,0,c
 16559  017702  D7CF               	goto	l12596
 16560  017704                     u11860:
 16561                           
 16562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16563                           ;stkvar	_l @ sp[(-17)+7]
 16564  017704  0EF6               	movlw	-10
 16565  017706  006F FF8C  F001    	movff	plusw1,btemp
 16566  01770C  0EF7               	movlw	-9
 16567  01770E  006F FF8C  F002    	movff	plusw1,btemp+1
 16568                           
 16569                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16570  017714  0EEB               	movlw	235
 16571  017716  26E1               	addwf	fsr1l,f,c
 16572  017718  0EFF               	movlw	255
 16573  01771A  22E2               	addwfc	fsr1h,f,c
 16574  01771C  0012               	return		;funcret
 16575  01771E                     __end_of_stoa:
 16576                           	opt callstack 0
 16577                           
 16578 ;; *************** function _efgtoa *****************
 16579 ;; Defined at:
 16580 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16581 ;; Parameters:    Size  Location     Type
 16582 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16583 ;;		 -> f(6), NULL(0), 
 16584 ;;  f               4  [STACK] PTR struct _IO_FILE
 16585 ;;  c               1  [STACK] unsigned char 
 16586 ;; Auto vars:     Size  Location     Type
 16587 ;;  u               4  [STACK] unsigned char 
 16588 ;;  g               4  [STACK] unsigned char 
 16589 ;;  l               4  [STACK] unsigned char 
 16590 ;;  h               4  [STACK] unsigned char 
 16591 ;;  ou              4  [STACK] unsigned char 
 16592 ;;  n               2  [STACK] int 
 16593 ;;  e               2  [STACK] int 
 16594 ;;  i               2  [STACK] int 
 16595 ;;  w               2  [STACK] int 
 16596 ;;  p               2  [STACK] int 
 16597 ;;  sign            2  [STACK] int 
 16598 ;;  d               2  [STACK] int 
 16599 ;;  ne              2  [STACK] int 
 16600 ;;  m               2  [STACK] int 
 16601 ;;  pp              2  [STACK] int 
 16602 ;;  t               2  [STACK] int 
 16603 ;;  mode            1  [STACK] unsigned char 
 16604 ;;  nmode           1  [STACK] unsigned char 
 16605 ;; Return value:  Size  Location     Type
 16606 ;;                  2  [STACK] int 
 16607 ;; Registers used:
 16608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16609 ;; Tracked objects:
 16610 ;;		On entry : 0/0
 16611 ;;		On exit  : 0/0
 16612 ;;		Unchanged: 0/0
 16613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16618 ;;Total ram usage:        0 bytes
 16619 ;; Hardware stack levels used:    1
 16620 ;; Hardware stack levels required when called:   20
 16621 ;; This function calls:
 16622 ;;		___awdiv
 16623 ;;		___awmod
 16624 ;;		___fladd
 16625 ;;		___fldiv
 16626 ;;		___fleq
 16627 ;;		___flge
 16628 ;;		___flmul
 16629 ;;		___flneg
 16630 ;;		___flsub
 16631 ;;		___fltol
 16632 ;;		___fpclassifyf
 16633 ;;		_floorf
 16634 ;;		_isupper
 16635 ;;		_pad
 16636 ;;		_strcpy
 16637 ;;		_tolower
 16638 ;; This function is called by:
 16639 ;;		_vfpfcnvrt
 16640 ;; This function uses a reentrant model
 16641 ;;
 16642                           
 16643                           	psect	text62
 16644  010000                     __ptext62:
 16645                           	opt callstack 0
 16646  010000                     _efgtoa:
 16647                           	opt callstack 0
 16648                           
 16649                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16650  010000  0E38               	movlw	56
 16651  010002  26E1               	addwf	fsr1l,f,c
 16652  010004  0E00               	movlw	0
 16653  010006  22E2               	addwfc	fsr1h,f,c
 16654                           
 16655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 16656                           ;stkvar	_sign @ sp[(-56)+42]
 16657                           
 16658                           ;incstack = 0
 16659 ;; hardware stack exceeded
 16660  010008  0EF2               	movlw	-14
 16661  01000A  6AE3               	clrf	plusw1,c
 16662  01000C  0EF3               	movlw	-13
 16663  01000E  6AE3               	clrf	plusw1,c
 16664                           
 16665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 16666                           ;stkvar	_f @ sp[(-56)+-6]
 16667  010010  0EC2               	movlw	-62
 16668  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 16669  010018  0EC3               	movlw	-61
 16670  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16671  010020  0EC4               	movlw	-60
 16672  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 16673  010028  0EC5               	movlw	-59
 16674  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16675                           
 16676                           ;stkvar	_g @ sp[(-56)+16]
 16677  010030  0ED8               	movlw	-40
 16678  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 16679  010038  0ED9               	movlw	-39
 16680  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16681  010040  0EDA               	movlw	-38
 16682  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16683  010048  0EDB               	movlw	-37
 16684  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16685                           
 16686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 16687                           ;stkvar	_g @ sp[(-56)+16]
 16688  010050  0EDB               	movlw	-37
 16689  010052  AEE3               	btfss	plusw1,7,c
 16690  010054  D02B               	goto	l12260
 16691                           
 16692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 16693  010056  0E01               	movlw	1
 16694  010058  6E0B               	movwf	(btemp+10)^0,c
 16695  01005A  0E00               	movlw	0
 16696  01005C  6E0C               	movwf	(btemp+11)^0,c
 16697                           
 16698                           ;stkvar	_sign @ sp[(-56)+42]
 16699  01005E  0EF2               	movlw	-14
 16700  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16701  010066  0EF3               	movlw	-13
 16702  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 16703                           
 16704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 16705                           ;stkvar	_g @ sp[(-56)+16]
 16706  01006E  0ED8               	movlw	-40
 16707  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 16708  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 16709  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 16710  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 16711  010088  ECFA  F0DB         	call	___flneg	;wreg free
 16712                           
 16713                           ;stkvar	_g @ sp[(-56)+16]
 16714  01008C  0ED8               	movlw	-40
 16715  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 16716  010094  0ED9               	movlw	-39
 16717  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16718  01009C  0EDA               	movlw	-38
 16719  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16720  0100A4  0EDB               	movlw	-37
 16721  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 16722  0100AC                     l12260:
 16723                           
 16724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 16725                           ;stkvar	_n @ sp[(-56)+32]
 16726  0100AC  0EE8               	movlw	-24
 16727  0100AE  6AE3               	clrf	plusw1,c
 16728  0100B0  0EE9               	movlw	-23
 16729  0100B2  6AE3               	clrf	plusw1,c
 16730                           
 16731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 16732                           ;stkvar	_w @ sp[(-56)+38]
 16733  0100B4  0EEE               	movlw	-18
 16734  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 16735  0100BC  0EEF               	movlw	-17
 16736  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16737                           
 16738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16739                           ;stkvar	_sign @ sp[(-56)+42]
 16740  0100C4  0EF2               	movlw	-14
 16741  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16742  0100CC  0EF3               	movlw	-13
 16743  0100CE  50E3               	movf	plusw1,w,c
 16744  0100D0  1001               	iorwf	btemp^0,w,c
 16745  0100D2  A4D8               	btfss	status,2,c
 16746  0100D4  D002               	goto	u11270
 16747  0100D6  A43E               	btfss	_flags^0,2,c
 16748  0100D8  D036               	goto	l12280
 16749  0100DA                     u11270:
 16750                           
 16751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16752                           ;stkvar	_sign @ sp[(-56)+42]
 16753  0100DA  0EF2               	movlw	-14
 16754  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16755  0100E2  0EF3               	movlw	-13
 16756  0100E4  50E3               	movf	plusw1,w,c
 16757  0100E6  1001               	iorwf	btemp^0,w,c
 16758  0100E8  A4D8               	btfss	status,2,c
 16759  0100EA  D002               	goto	l12272
 16760  0100EC  0E2B               	movlw	43
 16761  0100EE  D001               	goto	L17
 16762  0100F0                     l12272:
 16763  0100F0  0E2D               	movlw	45
 16764  0100F2                     L17:
 16765  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16766  0100F4  0E00               	movlw	0
 16767  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16768                           
 16769                           ;stkvar	_efgtoa$5684 @ sp[(-56)+10]
 16770  0100F8  0ED2               	movlw	-46
 16771  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16772  010100  0ED3               	movlw	-45
 16773  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16774                           
 16775                           ;stkvar	_efgtoa$5684 @ sp[(-56)+10]
 16776  010108  0ED2               	movlw	-46
 16777  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16778                           
 16779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16780                           ;stkvar	_n @ sp[(-56)+32]
 16781  010110  0EE8               	movlw	-24
 16782  010112  50E3               	movf	plusw1,w,c
 16783  010114  0F01               	addlw	1
 16784  010116  6E01               	movwf	btemp^0,c
 16785  010118  0EE8               	movlw	-24
 16786  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16787  010120  6A01               	clrf	btemp^0,c
 16788  010122  0EE9               	movlw	-23
 16789  010124  50E3               	movf	plusw1,w,c
 16790  010126  2001               	addwfc	btemp^0,w,c
 16791  010128  6E01               	movwf	btemp^0,c
 16792  01012A  0EE9               	movlw	-23
 16793  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16794                           
 16795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16796                           ;stkvar	_w @ sp[(-56)+38]
 16797  010132  50E1               	movf	fsr1l,w,c
 16798  010134  0FEE               	addlw	-18
 16799  010136  6ED9               	movwf	fsr2l,c
 16800  010138  50E2               	movf	fsr1h,w,c
 16801  01013A  6EDA               	movwf	fsr2h,c
 16802  01013C  0EFF               	movlw	255
 16803  01013E  22DA               	addwfc	fsr2h,f,c
 16804  010140  06DE               	decf	postinc2,f,c
 16805  010142  0E00               	movlw	0
 16806  010144  5ADD               	subwfb	postdec2,f,c
 16807  010146                     l12280:
 16808                           
 16809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16810                           ;stkvar	_g @ sp[(-56)+16]
 16811  010146  0ED8               	movlw	-40
 16812  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16813  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16814  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16815  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16816  010160  EC03  F0C6         	call	___fpclassifyf	;wreg free
 16817  010164  0401               	decf	btemp^0,w,c
 16818  010166  1002               	iorwf	(btemp+1)^0,w,c
 16819  010168  A4D8               	btfss	status,2,c
 16820  01016A  D076               	goto	l12298
 16821  01016C  0EBF               	movlw	191
 16822  01016E  6E0B               	movwf	(btemp+10)^0,c
 16823  010170  0EFF               	movlw	255
 16824  010172  6E0C               	movwf	(btemp+11)^0,c
 16825                           
 16826                           ;stkvar	_c @ sp[(-56)+-7]
 16827  010174  0EC1               	movlw	-63
 16828  010176  50E3               	movf	plusw1,w,c
 16829  010178  6E09               	movwf	(btemp+8)^0,c
 16830  01017A  6A0A               	clrf	(btemp+9)^0,c
 16831  01017C  500B               	movf	(btemp+10)^0,w,c
 16832  01017E  2609               	addwf	(btemp+8)^0,f,c
 16833  010180  500C               	movf	(btemp+11)^0,w,c
 16834  010182  220A               	addwfc	(btemp+9)^0,f,c
 16835  010184  500A               	movf	(btemp+9)^0,w,c
 16836  010186  E106               	bnz	u11300
 16837  010188  0E1A               	movlw	26
 16838  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16839  01018C  B0D8               	btfsc	status,0,c
 16840  01018E  D002               	goto	u11300
 16841  010190  0E01               	movlw	1
 16842  010192  D001               	goto	u11310
 16843  010194                     u11300:
 16844  010194  0E00               	movlw	0
 16845  010196                     u11310:
 16846  010196  6E0B               	movwf	(btemp+10)^0,c
 16847  010198  6A0C               	clrf	(btemp+11)^0,c
 16848                           
 16849                           ;stkvar	_efgtoa$5685 @ sp[(-56)+8]
 16850  01019A  0ED0               	movlw	-48
 16851  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16852  0101A2  0ED1               	movlw	-47
 16853  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16854                           
 16855                           ;stkvar	_efgtoa$5685 @ sp[(-56)+8]
 16856  0101AA  0ED0               	movlw	-48
 16857  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16858  0101B2  0ED1               	movlw	-47
 16859  0101B4  50E3               	movf	plusw1,w,c
 16860  0101B6  1001               	iorwf	btemp^0,w,c
 16861  0101B8  B4D8               	btfsc	status,2,c
 16862  0101BA  D017               	goto	l12290
 16863                           
 16864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16865  0101BC  0ED7               	movlw	low STR_65
 16866  0101BE  6EE6               	movwf	postinc1,c
 16867  0101C0  0EFF               	movlw	high STR_65
 16868  0101C2  6EE6               	movwf	postinc1,c
 16869                           
 16870                           ;stkvar	_n @ sp[(-58)+32]
 16871  0101C4  0E97               	movlw	low _dbuf
 16872  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16873  0101C8  0E02               	movlw	high _dbuf
 16874  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16875  0101CC  0EE6               	movlw	-26
 16876  0101CE  50E3               	movf	plusw1,w,c
 16877  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16878  0101D2  0EE7               	movlw	-25
 16879  0101D4  50E3               	movf	plusw1,w,c
 16880  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16881  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16882  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16883  0101E4  ECE3  F0D1         	call	_strcpy	;wreg free
 16884                           
 16885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16886  0101E8  D016               	goto	l12292
 16887  0101EA                     l12290:
 16888                           
 16889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16890  0101EA  0EDF               	movlw	low STR_66
 16891  0101EC  6EE6               	movwf	postinc1,c
 16892  0101EE  0EFF               	movlw	high STR_66
 16893  0101F0  6EE6               	movwf	postinc1,c
 16894                           
 16895                           ;stkvar	_n @ sp[(-58)+32]
 16896  0101F2  0E97               	movlw	low _dbuf
 16897  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16898  0101F6  0E02               	movlw	high _dbuf
 16899  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16900  0101FA  0EE6               	movlw	-26
 16901  0101FC  50E3               	movf	plusw1,w,c
 16902  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16903  010200  0EE7               	movlw	-25
 16904  010202  50E3               	movf	plusw1,w,c
 16905  010204  220C               	addwfc	(btemp+11)^0,f,c
 16906  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16907  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16908  010212  ECE3  F0D1         	call	_strcpy	;wreg free
 16909  010216                     l12292:
 16910                           
 16911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16912                           ;stkvar	_w @ sp[(-56)+38]
 16913  010216  50E1               	movf	fsr1l,w,c
 16914  010218  0FEE               	addlw	-18
 16915  01021A  6ED9               	movwf	fsr2l,c
 16916  01021C  50E2               	movf	fsr1h,w,c
 16917  01021E  6EDA               	movwf	fsr2h,c
 16918  010220  0EFF               	movlw	255
 16919  010222  22DA               	addwfc	fsr2h,f,c
 16920  010224  0EFD               	movlw	253
 16921  010226  26DE               	addwf	postinc2,f,c
 16922  010228  0EFF               	movlw	255
 16923  01022A  22DD               	addwfc	postdec2,f,c
 16924  01022C                     l12294:
 16925                           
 16926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16927                           ;stkvar	_w @ sp[(-56)+38]
 16928  01022C  0EEE               	movlw	-18
 16929  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16930  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16931  01023A  0E97               	movlw	low _dbuf
 16932  01023C  6EE6               	movwf	postinc1,c
 16933  01023E  0E02               	movlw	high _dbuf
 16934  010240  6EE6               	movwf	postinc1,c
 16935                           
 16936                           ;stkvar	_fp @ sp[(-60)+-2]
 16937  010242  0EC2               	movlw	-62
 16938  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16939  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16940  010250  EC04  F0CE         	call	_pad	;wreg free
 16941  010254  EF1D  F089         	goto	l2270
 16942  010258                     l12298:
 16943                           
 16944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16945                           ;stkvar	_g @ sp[(-56)+16]
 16946  010258  0ED8               	movlw	-40
 16947  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16948  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16949  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16950  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16951  010272  EC03  F0C6         	call	___fpclassifyf	;wreg free
 16952  010276  5001               	movf	btemp^0,w,c
 16953  010278  1002               	iorwf	(btemp+1)^0,w,c
 16954  01027A  A4D8               	btfss	status,2,c
 16955  01027C  D056               	goto	l12316
 16956  01027E  0EBF               	movlw	191
 16957  010280  6E0B               	movwf	(btemp+10)^0,c
 16958  010282  0EFF               	movlw	255
 16959  010284  6E0C               	movwf	(btemp+11)^0,c
 16960                           
 16961                           ;stkvar	_c @ sp[(-56)+-7]
 16962  010286  0EC1               	movlw	-63
 16963  010288  50E3               	movf	plusw1,w,c
 16964  01028A  6E09               	movwf	(btemp+8)^0,c
 16965  01028C  6A0A               	clrf	(btemp+9)^0,c
 16966  01028E  500B               	movf	(btemp+10)^0,w,c
 16967  010290  2609               	addwf	(btemp+8)^0,f,c
 16968  010292  500C               	movf	(btemp+11)^0,w,c
 16969  010294  220A               	addwfc	(btemp+9)^0,f,c
 16970  010296  500A               	movf	(btemp+9)^0,w,c
 16971  010298  E106               	bnz	u11340
 16972  01029A  0E1A               	movlw	26
 16973  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16974  01029E  B0D8               	btfsc	status,0,c
 16975  0102A0  D002               	goto	u11340
 16976  0102A2  0E01               	movlw	1
 16977  0102A4  D001               	goto	u11350
 16978  0102A6                     u11340:
 16979  0102A6  0E00               	movlw	0
 16980  0102A8                     u11350:
 16981  0102A8  6E0B               	movwf	(btemp+10)^0,c
 16982  0102AA  6A0C               	clrf	(btemp+11)^0,c
 16983                           
 16984                           ;stkvar	_efgtoa$5689 @ sp[(-56)+6]
 16985  0102AC  0ECE               	movlw	-50
 16986  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16987  0102B4  0ECF               	movlw	-49
 16988  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16989                           
 16990                           ;stkvar	_efgtoa$5689 @ sp[(-56)+6]
 16991  0102BC  0ECE               	movlw	-50
 16992  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 16993  0102C4  0ECF               	movlw	-49
 16994  0102C6  50E3               	movf	plusw1,w,c
 16995  0102C8  1001               	iorwf	btemp^0,w,c
 16996  0102CA  B4D8               	btfsc	status,2,c
 16997  0102CC  D017               	goto	l12308
 16998                           
 16999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 17000  0102CE  0EDB               	movlw	low STR_69
 17001  0102D0  6EE6               	movwf	postinc1,c
 17002  0102D2  0EFF               	movlw	high STR_69
 17003  0102D4  6EE6               	movwf	postinc1,c
 17004                           
 17005                           ;stkvar	_n @ sp[(-58)+32]
 17006  0102D6  0E97               	movlw	low _dbuf
 17007  0102D8  6E0B               	movwf	(btemp+10)^0,c
 17008  0102DA  0E02               	movlw	high _dbuf
 17009  0102DC  6E0C               	movwf	(btemp+11)^0,c
 17010  0102DE  0EE6               	movlw	-26
 17011  0102E0  50E3               	movf	plusw1,w,c
 17012  0102E2  260B               	addwf	(btemp+10)^0,f,c
 17013  0102E4  0EE7               	movlw	-25
 17014  0102E6  50E3               	movf	plusw1,w,c
 17015  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 17016  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17017  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17018  0102F6  ECE3  F0D1         	call	_strcpy	;wreg free
 17019                           
 17020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 17021  0102FA  D78D               	goto	l12292
 17022  0102FC                     l12308:
 17023                           
 17024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 17025  0102FC  0EE3               	movlw	low STR_70
 17026  0102FE  6EE6               	movwf	postinc1,c
 17027  010300  0EFF               	movlw	high STR_70
 17028  010302  6EE6               	movwf	postinc1,c
 17029                           
 17030                           ;stkvar	_n @ sp[(-58)+32]
 17031  010304  0E97               	movlw	low _dbuf
 17032  010306  6E0B               	movwf	(btemp+10)^0,c
 17033  010308  0E02               	movlw	high _dbuf
 17034  01030A  6E0C               	movwf	(btemp+11)^0,c
 17035  01030C  0EE6               	movlw	-26
 17036  01030E  50E3               	movf	plusw1,w,c
 17037  010310  260B               	addwf	(btemp+10)^0,f,c
 17038  010312  0EE7               	movlw	-25
 17039  010314  50E3               	movf	plusw1,w,c
 17040  010316  220C               	addwfc	(btemp+11)^0,f,c
 17041  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17042  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17043  010324  ECE3  F0D1         	call	_strcpy	;wreg free
 17044  010328  D776               	goto	l12292
 17045  01032A                     l12316:
 17046                           
 17047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 17048  01032A  0E00               	movlw	0
 17049  01032C  6E09               	movwf	(btemp+8)^0,c
 17050  01032E  0E00               	movlw	0
 17051  010330  6E0A               	movwf	(btemp+9)^0,c
 17052  010332  0E80               	movlw	128
 17053  010334  6E0B               	movwf	(btemp+10)^0,c
 17054  010336  0E3F               	movlw	63
 17055  010338  6E0C               	movwf	(btemp+11)^0,c
 17056                           
 17057                           ;stkvar	_u @ sp[(-56)+12]
 17058  01033A  0ED4               	movlw	-44
 17059  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17060  010342  0ED5               	movlw	-43
 17061  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17062  01034A  0ED6               	movlw	-42
 17063  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17064  010352  0ED7               	movlw	-41
 17065  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 17066                           
 17067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 17068                           ;stkvar	_e @ sp[(-56)+34]
 17069  01035A  0EEA               	movlw	-22
 17070  01035C  6AE3               	clrf	plusw1,c
 17071  01035E  0EEB               	movlw	-21
 17072  010360  6AE3               	clrf	plusw1,c
 17073                           
 17074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 17075  010362  0E00               	movlw	0
 17076  010364  6EE6               	movwf	postinc1,c
 17077  010366  0E00               	movlw	0
 17078  010368  6EE6               	movwf	postinc1,c
 17079  01036A  0E00               	movlw	0
 17080  01036C  6EE6               	movwf	postinc1,c
 17081  01036E  0E00               	movlw	0
 17082  010370  6EE6               	movwf	postinc1,c
 17083                           
 17084                           ;stkvar	_g @ sp[(-60)+16]
 17085  010372  0ED4               	movlw	-44
 17086  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 17087  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 17088  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 17089  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 17090  01038C  EC1D  F0D3         	call	___fleq	;wreg free
 17091  010390  A001               	btfss	btemp& (0+255),0,c
 17092  010392  D039               	goto	l12328
 17093  010394  D0BC               	goto	u11390
 17094  010396                     l12324:
 17095                           
 17096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 17097  010396  0E00               	movlw	0
 17098  010398  6EE6               	movwf	postinc1,c
 17099  01039A  0E00               	movlw	0
 17100  01039C  6EE6               	movwf	postinc1,c
 17101  01039E  0E20               	movlw	32
 17102  0103A0  6EE6               	movwf	postinc1,c
 17103  0103A2  0E41               	movlw	65
 17104  0103A4  6EE6               	movwf	postinc1,c
 17105                           
 17106                           ;stkvar	_u @ sp[(-60)+12]
 17107  0103A6  0ED0               	movlw	-48
 17108  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17109  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17110  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17111  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17112  0103C0  ECE5  F09E         	call	___flmul	;wreg free
 17113                           
 17114                           ;stkvar	_u @ sp[(-56)+12]
 17115  0103C4  0ED4               	movlw	-44
 17116  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 17117  0103CC  0ED5               	movlw	-43
 17118  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17119  0103D4  0ED6               	movlw	-42
 17120  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17121  0103DC  0ED7               	movlw	-41
 17122  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17123                           
 17124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 17125                           ;stkvar	_e @ sp[(-56)+34]
 17126  0103E4  0EEA               	movlw	-22
 17127  0103E6  50E3               	movf	plusw1,w,c
 17128  0103E8  0F01               	addlw	1
 17129  0103EA  6E01               	movwf	btemp^0,c
 17130  0103EC  0EEA               	movlw	-22
 17131  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 17132  0103F4  6A01               	clrf	btemp^0,c
 17133  0103F6  0EEB               	movlw	-21
 17134  0103F8  50E3               	movf	plusw1,w,c
 17135  0103FA  2001               	addwfc	btemp^0,w,c
 17136  0103FC  6E01               	movwf	btemp^0,c
 17137  0103FE  0EEB               	movlw	-21
 17138  010400  0060  F007  FFE3   	movff	btemp,plusw1
 17139  010406                     l12328:
 17140                           
 17141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 17142  010406  0E00               	movlw	0
 17143  010408  6EE6               	movwf	postinc1,c
 17144  01040A  0E00               	movlw	0
 17145  01040C  6EE6               	movwf	postinc1,c
 17146  01040E  0E20               	movlw	32
 17147  010410  6EE6               	movwf	postinc1,c
 17148  010412  0E41               	movlw	65
 17149  010414  6EE6               	movwf	postinc1,c
 17150                           
 17151                           ;stkvar	_u @ sp[(-60)+12]
 17152  010416  0ED0               	movlw	-48
 17153  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 17154  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 17155  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 17156  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 17157  010430  ECE5  F09E         	call	___flmul	;wreg free
 17158  010434  0060  F007  FFE6   	movff	btemp,postinc1
 17159  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17160  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17161  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 17162                           
 17163                           ;stkvar	_g @ sp[(-60)+16]
 17164  01044C  0ED4               	movlw	-44
 17165  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 17166  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 17167  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 17168  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 17169  010466  EC0A  F0C9         	call	___flge	;wreg free
 17170  01046A  A001               	btfss	btemp& (0+255),0,c
 17171  01046C  D032               	goto	l12334
 17172  01046E  D793               	goto	l12324
 17173  010470                     l12330:
 17174                           
 17175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 17176  010470  0E00               	movlw	0
 17177  010472  6EE6               	movwf	postinc1,c
 17178  010474  0E00               	movlw	0
 17179  010476  6EE6               	movwf	postinc1,c
 17180  010478  0E20               	movlw	32
 17181  01047A  6EE6               	movwf	postinc1,c
 17182  01047C  0E41               	movlw	65
 17183  01047E  6EE6               	movwf	postinc1,c
 17184                           
 17185                           ;stkvar	_u @ sp[(-60)+12]
 17186  010480  0ED0               	movlw	-48
 17187  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 17188  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 17189  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 17190  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 17191  01049A  ECD8  F0A6         	call	___fldiv	;wreg free
 17192                           
 17193                           ;stkvar	_u @ sp[(-56)+12]
 17194  01049E  0ED4               	movlw	-44
 17195  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 17196  0104A6  0ED5               	movlw	-43
 17197  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17198  0104AE  0ED6               	movlw	-42
 17199  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17200  0104B6  0ED7               	movlw	-41
 17201  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17202                           
 17203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 17204                           ;stkvar	_e @ sp[(-56)+34]
 17205  0104BE  50E1               	movf	fsr1l,w,c
 17206  0104C0  0FEA               	addlw	-22
 17207  0104C2  6ED9               	movwf	fsr2l,c
 17208  0104C4  50E2               	movf	fsr1h,w,c
 17209  0104C6  6EDA               	movwf	fsr2h,c
 17210  0104C8  0EFF               	movlw	255
 17211  0104CA  22DA               	addwfc	fsr2h,f,c
 17212  0104CC  06DE               	decf	postinc2,f,c
 17213  0104CE  0E00               	movlw	0
 17214  0104D0  5ADD               	subwfb	postdec2,f,c
 17215  0104D2                     l12334:
 17216                           
 17217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 17218                           ;stkvar	_u @ sp[(-56)+12]
 17219  0104D2  0ED4               	movlw	-44
 17220  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17221  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17222  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17223  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17224                           
 17225                           ;stkvar	_g @ sp[(-60)+16]
 17226  0104EC  0ED4               	movlw	-44
 17227  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17228  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17229  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17230  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 17231  010506  EC0A  F0C9         	call	___flge	;wreg free
 17232  01050A  A001               	btfss	btemp& (0+255),0,c
 17233  01050C  D7B1               	goto	l12330
 17234  01050E                     u11390:
 17235                           
 17236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 17237                           ;stkvar	_c @ sp[(-56)+-7]
 17238  01050E  0EC1               	movlw	-63
 17239  010510  50E3               	movf	plusw1,w,c
 17240  010512  6EE6               	movwf	postinc1,c
 17241  010514  0E00               	movlw	0
 17242  010516  6EE6               	movwf	postinc1,c
 17243  010518  ECE9  F0D7         	call	_tolower	;wreg free
 17244                           
 17245                           ;stkvar	_mode @ sp[(-56)+54]
 17246  01051C  0EFE               	movlw	-2
 17247  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 17248                           
 17249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 17250                           ;stkvar	_mode @ sp[(-56)+54]
 17251                           ;stkvar	_nmode @ sp[(-56)+55]
 17252  010524  0EFE               	movlw	-2
 17253  010526  006F FF8C  F001    	movff	plusw1,btemp
 17254  01052C  0EFF               	movlw	-1
 17255  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 17256                           
 17257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 17258                           ;stkvar	_mode @ sp[(-56)+54]
 17259  010534  0EFE               	movlw	-2
 17260  010536  006F FF8C  F001    	movff	plusw1,btemp
 17261  01053C  0E67               	movlw	103
 17262  01053E  1801               	xorwf	btemp^0,w,c
 17263  010540  A4D8               	btfss	status,2,c
 17264  010542  D025               	goto	l12352
 17265                           
 17266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 17267  010544  503C               	movf	_prec^0,w,c
 17268  010546  103D               	iorwf	(_prec+1)^0,w,c
 17269  010548  A4D8               	btfss	status,2,c
 17270  01054A  D004               	goto	l12346
 17271                           
 17272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 17273  01054C  0E00               	movlw	0
 17274  01054E  6E3D               	movwf	(_prec+1)^0,c
 17275  010550  0E01               	movlw	1
 17276  010552  6E3C               	movwf	_prec^0,c
 17277  010554                     l12346:
 17278                           
 17279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 17280  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 17281  010556  D005               	goto	u11420
 17282  010558  503D               	movf	(_prec+1)^0,w,c
 17283  01055A  E110               	bnz	l12350
 17284  01055C  043C               	decf	_prec^0,w,c
 17285  01055E  B0D8               	btfsc	status,0,c
 17286  010560  D00D               	goto	l12350
 17287  010562                     u11420:
 17288  010562  0E06               	movlw	6
 17289  010564  6E0B               	movwf	(btemp+10)^0,c
 17290  010566  0E00               	movlw	0
 17291  010568  6E0C               	movwf	(btemp+11)^0,c
 17292                           
 17293                           ;stkvar	_p @ sp[(-56)+40]
 17294  01056A  0EF0               	movlw	-16
 17295  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17296  010572  0EF1               	movlw	-15
 17297  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 17298  01057A  D00C               	goto	l12358
 17299  01057C                     l12350:
 17300                           
 17301                           ;stkvar	_p @ sp[(-56)+40]
 17302  01057C  0EF0               	movlw	-16
 17303  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17304  010584  0EF1               	movlw	-15
 17305  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17306  01058C  D003               	goto	l12358
 17307  01058E                     l12352:
 17308                           
 17309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 17310  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 17311  010590  D7F5               	goto	l12350
 17312  010592  D7E7               	goto	u11420
 17313  010594                     l12358:
 17314                           
 17315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17316                           ;stkvar	_mode @ sp[(-56)+54]
 17317  010594  0EFE               	movlw	-2
 17318  010596  006F FF8C  F001    	movff	plusw1,btemp
 17319  01059C  0E67               	movlw	103
 17320  01059E  1801               	xorwf	btemp^0,w,c
 17321  0105A0  A4D8               	btfss	status,2,c
 17322  0105A2  D02F               	goto	l12368
 17323                           
 17324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17325                           ;stkvar	_e @ sp[(-56)+34]
 17326  0105A4  0EEB               	movlw	-21
 17327  0105A6  AEE3               	btfss	plusw1,7,c
 17328  0105A8  D00E               	goto	u11450
 17329  0105AA  0EEA               	movlw	-22
 17330  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17331  0105B2  0EFC               	movlw	252
 17332  0105B4  5E01               	subwf	btemp^0,f,c
 17333  0105B6  0EEB               	movlw	-21
 17334  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17335  0105BE  0EFF               	movlw	255
 17336  0105C0  5A01               	subwfb	btemp^0,f,c
 17337  0105C2  A0D8               	btfss	status,0,c
 17338  0105C4  D018               	goto	l12366
 17339  0105C6                     u11450:
 17340                           
 17341                           ;stkvar	_e @ sp[(-56)+34]
 17342                           ;stkvar	_p @ sp[(-56)+40]
 17343  0105C6  0EF0               	movlw	-16
 17344  0105C8  50E3               	movf	plusw1,w,c
 17345  0105CA  0FFF               	addlw	255
 17346  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17347  0105CE  0EF1               	movlw	-15
 17348  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17349  0105D6  0EFF               	movlw	255
 17350  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17351  0105DA  0EEA               	movlw	-22
 17352  0105DC  50E3               	movf	plusw1,w,c
 17353  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17354  0105E0  500C               	movf	(btemp+11)^0,w,c
 17355  0105E2  0A80               	xorlw	128
 17356  0105E4  6E01               	movwf	btemp^0,c
 17357  0105E6  0EEB               	movlw	-21
 17358  0105E8  50E3               	movf	plusw1,w,c
 17359  0105EA  0A80               	xorlw	128
 17360  0105EC  5801               	subwfb	btemp^0,w,c
 17361  0105EE  A0D8               	btfss	status,0,c
 17362  0105F0  D002               	goto	l12366
 17363                           
 17364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17365  0105F2  0E66               	movlw	102
 17366  0105F4  D001               	goto	L18
 17367  0105F6                     l12366:
 17368                           
 17369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17370  0105F6  0E65               	movlw	101
 17371  0105F8                     L18:
 17372  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17373                           
 17374                           ;stkvar	_nmode @ sp[(-56)+55]
 17375  0105FA  0EFF               	movlw	-1
 17376  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17377  010602                     l12368:
 17378                           
 17379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17380                           ;stkvar	_p @ sp[(-56)+40]
 17381                           ;stkvar	_m @ sp[(-56)+48]
 17382  010602  0EF0               	movlw	-16
 17383  010604  006F FF8C  F001    	movff	plusw1,btemp
 17384  01060A  0EF8               	movlw	-8
 17385  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17386  010612  0EF1               	movlw	-15
 17387  010614  006F FF8C  F001    	movff	plusw1,btemp
 17388  01061A  0EF9               	movlw	-7
 17389  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17390                           
 17391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17392                           ;stkvar	_mode @ sp[(-56)+54]
 17393  010622  0EFE               	movlw	-2
 17394  010624  006F FF8C  F001    	movff	plusw1,btemp
 17395  01062A  0E67               	movlw	103
 17396  01062C  1801               	xorwf	btemp^0,w,c
 17397  01062E  A4D8               	btfss	status,2,c
 17398  010630  D00B               	goto	u11490
 17399                           
 17400                           ;stkvar	_nmode @ sp[(-56)+55]
 17401  010632  0EFF               	movlw	-1
 17402  010634  006F FF8C  F001    	movff	plusw1,btemp
 17403  01063A  0E66               	movlw	102
 17404  01063C  1801               	xorwf	btemp^0,w,c
 17405  01063E  A4D8               	btfss	status,2,c
 17406  010640  D014               	goto	l2299
 17407                           
 17408                           ;stkvar	_e @ sp[(-56)+34]
 17409  010642  0EEB               	movlw	-21
 17410  010644  AEE3               	btfss	plusw1,7,c
 17411  010646  D011               	goto	l2299
 17412  010648                     u11490:
 17413                           
 17414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17415                           ;stkvar	_m @ sp[(-56)+48]
 17416  010648  0EF8               	movlw	-8
 17417  01064A  50E3               	movf	plusw1,w,c
 17418  01064C  0F01               	addlw	1
 17419  01064E  6E01               	movwf	btemp^0,c
 17420  010650  0EF8               	movlw	-8
 17421  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17422  010658  6A01               	clrf	btemp^0,c
 17423  01065A  0EF9               	movlw	-7
 17424  01065C  50E3               	movf	plusw1,w,c
 17425  01065E  2001               	addwfc	btemp^0,w,c
 17426  010660  6E01               	movwf	btemp^0,c
 17427  010662  0EF9               	movlw	-7
 17428  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17429  01066A                     l2299:
 17430                           
 17431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17432                           ;stkvar	_nmode @ sp[(-56)+55]
 17433  01066A  0EFF               	movlw	-1
 17434  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17435  010672  0E66               	movlw	102
 17436  010674  1801               	xorwf	btemp^0,w,c
 17437  010676  A4D8               	btfss	status,2,c
 17438  010678  D03B               	goto	l12388
 17439                           
 17440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17441                           ;stkvar	_e @ sp[(-56)+34]
 17442  01067A  0EEB               	movlw	-21
 17443  01067C  AEE3               	btfss	plusw1,7,c
 17444  01067E  D01C               	goto	l12384
 17445                           
 17446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17447  010680  0E00               	movlw	0
 17448  010682  6E09               	movwf	(btemp+8)^0,c
 17449  010684  0E00               	movlw	0
 17450  010686  6E0A               	movwf	(btemp+9)^0,c
 17451  010688  0E80               	movlw	128
 17452  01068A  6E0B               	movwf	(btemp+10)^0,c
 17453  01068C  0E3F               	movlw	63
 17454  01068E  6E0C               	movwf	(btemp+11)^0,c
 17455                           
 17456                           ;stkvar	_u @ sp[(-56)+12]
 17457  010690  0ED4               	movlw	-44
 17458  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17459  010698  0ED5               	movlw	-43
 17460  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17461  0106A0  0ED6               	movlw	-42
 17462  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17463  0106A8  0ED7               	movlw	-41
 17464  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17465                           
 17466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17467                           ;stkvar	_e @ sp[(-56)+34]
 17468  0106B0  0EEA               	movlw	-22
 17469  0106B2  6AE3               	clrf	plusw1,c
 17470  0106B4  0EEB               	movlw	-21
 17471  0106B6  6AE3               	clrf	plusw1,c
 17472  0106B8                     l12384:
 17473                           
 17474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17475                           ;stkvar	_mode @ sp[(-56)+54]
 17476  0106B8  0EFE               	movlw	-2
 17477  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17478  0106C0  0E67               	movlw	103
 17479  0106C2  1801               	xorwf	btemp^0,w,c
 17480  0106C4  B4D8               	btfsc	status,2,c
 17481  0106C6  D014               	goto	l12388
 17482                           
 17483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17484                           ;stkvar	_e @ sp[(-56)+34]
 17485                           ;stkvar	_m @ sp[(-56)+48]
 17486  0106C8  0EF8               	movlw	-8
 17487  0106CA  50E3               	movf	plusw1,w,c
 17488  0106CC  6E01               	movwf	btemp^0,c
 17489  0106CE  0EEA               	movlw	-22
 17490  0106D0  50E3               	movf	plusw1,w,c
 17491  0106D2  2601               	addwf	btemp^0,f,c
 17492  0106D4  0EF8               	movlw	-8
 17493  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17494  0106DC  0EF9               	movlw	-7
 17495  0106DE  50E3               	movf	plusw1,w,c
 17496  0106E0  6E01               	movwf	btemp^0,c
 17497  0106E2  0EEB               	movlw	-21
 17498  0106E4  50E3               	movf	plusw1,w,c
 17499  0106E6  2201               	addwfc	btemp^0,f,c
 17500  0106E8  0EF9               	movlw	-7
 17501  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17502  0106F0                     l12388:
 17503                           
 17504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17505                           ;stkvar	_i @ sp[(-56)+36]
 17506  0106F0  0EEC               	movlw	-20
 17507  0106F2  6AE3               	clrf	plusw1,c
 17508  0106F4  0EED               	movlw	-19
 17509  0106F6  6AE3               	clrf	plusw1,c
 17510                           
 17511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17512                           ;stkvar	_g @ sp[(-56)+16]
 17513  0106F8  0ED8               	movlw	-40
 17514  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17515  010700  0ED9               	movlw	-39
 17516  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17517  010708  0EDA               	movlw	-38
 17518  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17519  010710  0EDB               	movlw	-37
 17520  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17521                           
 17522                           ;stkvar	_h @ sp[(-56)+24]
 17523  010718  0EE0               	movlw	-32
 17524  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17525  010720  0EE1               	movlw	-31
 17526  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17527  010728  0EE2               	movlw	-30
 17528  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17529  010730  0EE3               	movlw	-29
 17530  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17531                           
 17532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17533                           ;stkvar	_u @ sp[(-56)+12]
 17534  010738  0ED4               	movlw	-44
 17535  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17536  010740  0ED5               	movlw	-43
 17537  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17538  010748  0ED6               	movlw	-42
 17539  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17540  010750  0ED7               	movlw	-41
 17541  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17542                           
 17543                           ;stkvar	_ou @ sp[(-56)+28]
 17544  010758  0EE4               	movlw	-28
 17545  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17546  010760  0EE5               	movlw	-27
 17547  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17548  010768  0EE6               	movlw	-26
 17549  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17550  010770  0EE7               	movlw	-25
 17551  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17552                           
 17553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17554  010778  D0D6               	goto	l12404
 17555  01077A                     l12394:
 17556                           
 17557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17558                           ;stkvar	_u @ sp[(-56)+12]
 17559  01077A  0ED4               	movlw	-44
 17560  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17561  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17562  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17563  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17564                           
 17565                           ;stkvar	_h @ sp[(-60)+24]
 17566  010794  0EDC               	movlw	-36
 17567  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17568  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17569  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17570  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17571  0107AE  ECD8  F0A6         	call	___fldiv	;wreg free
 17572  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17573  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17574  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17575  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17576  0107CA  EC62  F0B2         	call	_floorf	;wreg free
 17577                           
 17578                           ;stkvar	_l @ sp[(-56)+20]
 17579  0107CE  0EDC               	movlw	-36
 17580  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17581  0107D6  0EDD               	movlw	-35
 17582  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17583  0107DE  0EDE               	movlw	-34
 17584  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17585  0107E6  0EDF               	movlw	-33
 17586  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17587                           
 17588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17589                           ;stkvar	_l @ sp[(-56)+20]
 17590  0107EE  0EDC               	movlw	-36
 17591  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17592  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17593  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17594  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17595  010808  EC51  F0C8         	call	___fltol	;wreg free
 17596  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17597  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17598                           
 17599                           ;stkvar	_d @ sp[(-56)+44]
 17600  010818  0EF4               	movlw	-12
 17601  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17602  010820  0EF5               	movlw	-11
 17603  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17604                           
 17605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17606                           ;stkvar	_u @ sp[(-56)+12]
 17607  010828  0ED4               	movlw	-44
 17608  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17609  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17610  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17611  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17612                           
 17613                           ;stkvar	_l @ sp[(-60)+20]
 17614  010842  0ED8               	movlw	-40
 17615  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17616  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17617  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17618  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17619  01085C  ECE5  F09E         	call	___flmul	;wreg free
 17620  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17621  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17622  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17623  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17624                           
 17625                           ;stkvar	_h @ sp[(-60)+24]
 17626  010878  0EDC               	movlw	-36
 17627  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17628  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17629  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17630  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17631  010892  ECD0  F0DC         	call	___flsub	;wreg free
 17632                           
 17633                           ;stkvar	_h @ sp[(-56)+24]
 17634  010896  0EE0               	movlw	-32
 17635  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17636  01089E  0EE1               	movlw	-31
 17637  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17638  0108A6  0EE2               	movlw	-30
 17639  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17640  0108AE  0EE3               	movlw	-29
 17641  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 17642                           
 17643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 17644  0108B6  0E00               	movlw	0
 17645  0108B8  6EE6               	movwf	postinc1,c
 17646  0108BA  0E00               	movlw	0
 17647  0108BC  6EE6               	movwf	postinc1,c
 17648  0108BE  0E20               	movlw	32
 17649  0108C0  6EE6               	movwf	postinc1,c
 17650  0108C2  0E41               	movlw	65
 17651  0108C4  6EE6               	movwf	postinc1,c
 17652                           
 17653                           ;stkvar	_u @ sp[(-60)+12]
 17654  0108C6  0ED0               	movlw	-48
 17655  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17656  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17657  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17658  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17659  0108E0  ECD8  F0A6         	call	___fldiv	;wreg free
 17660                           
 17661                           ;stkvar	_u @ sp[(-56)+12]
 17662  0108E4  0ED4               	movlw	-44
 17663  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 17664  0108EC  0ED5               	movlw	-43
 17665  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17666  0108F4  0ED6               	movlw	-42
 17667  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17668  0108FC  0ED7               	movlw	-41
 17669  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17670                           
 17671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 17672                           ;stkvar	_i @ sp[(-56)+36]
 17673  010904  0EEC               	movlw	-20
 17674  010906  50E3               	movf	plusw1,w,c
 17675  010908  0F01               	addlw	1
 17676  01090A  6E01               	movwf	btemp^0,c
 17677  01090C  0EEC               	movlw	-20
 17678  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 17679  010914  6A01               	clrf	btemp^0,c
 17680  010916  0EED               	movlw	-19
 17681  010918  50E3               	movf	plusw1,w,c
 17682  01091A  2001               	addwfc	btemp^0,w,c
 17683  01091C  6E01               	movwf	btemp^0,c
 17684  01091E  0EED               	movlw	-19
 17685  010920  0060  F007  FFE3   	movff	btemp,plusw1
 17686  010926                     l12404:
 17687                           
 17688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17689                           ;stkvar	_m @ sp[(-56)+48]
 17690                           ;stkvar	_i @ sp[(-56)+36]
 17691  010926  50E1               	movf	fsr1l,w,c
 17692  010928  0FEC               	addlw	-20
 17693  01092A  6ED9               	movwf	fsr2l,c
 17694  01092C  50E2               	movf	fsr1h,w,c
 17695  01092E  6EDA               	movwf	fsr2h,c
 17696  010930  0EFF               	movlw	255
 17697  010932  22DA               	addwfc	fsr2h,f,c
 17698  010934  0EF8               	movlw	-8
 17699  010936  50E3               	movf	plusw1,w,c
 17700  010938  5CDE               	subwf	postinc2,w,c
 17701  01093A  50DE               	movf	postinc2,w,c
 17702  01093C  0A80               	xorlw	128
 17703  01093E  6E01               	movwf	btemp^0,c
 17704  010940  0EF9               	movlw	-7
 17705  010942  50E3               	movf	plusw1,w,c
 17706  010944  0A80               	xorlw	128
 17707  010946  5801               	subwfb	btemp^0,w,c
 17708  010948  A0D8               	btfss	status,0,c
 17709  01094A  D717               	goto	l12394
 17710                           
 17711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 17712  01094C  0E00               	movlw	0
 17713  01094E  6EE6               	movwf	postinc1,c
 17714  010950  0E00               	movlw	0
 17715  010952  6EE6               	movwf	postinc1,c
 17716  010954  0EA0               	movlw	160
 17717  010956  6EE6               	movwf	postinc1,c
 17718  010958  0E40               	movlw	64
 17719  01095A  6EE6               	movwf	postinc1,c
 17720                           
 17721                           ;stkvar	_u @ sp[(-60)+12]
 17722  01095C  0ED0               	movlw	-48
 17723  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 17724  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 17725  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 17726  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 17727  010976  ECE5  F09E         	call	___flmul	;wreg free
 17728                           
 17729                           ;stkvar	_l @ sp[(-56)+20]
 17730  01097A  0EDC               	movlw	-36
 17731  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 17732  010982  0EDD               	movlw	-35
 17733  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17734  01098A  0EDE               	movlw	-34
 17735  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17736  010992  0EDF               	movlw	-33
 17737  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 17738                           
 17739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17740                           ;stkvar	_l @ sp[(-56)+20]
 17741  01099A  0EDC               	movlw	-36
 17742  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17743  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17744  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17745  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17746                           
 17747                           ;stkvar	_h @ sp[(-60)+24]
 17748  0109B4  0EDC               	movlw	-36
 17749  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17750  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17751  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17752  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17753  0109CE  EC0A  F0C9         	call	___flge	;wreg free
 17754  0109D2  A001               	btfss	btemp& (0+255),0,c
 17755  0109D4  D021               	goto	u11560
 17756                           
 17757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17758                           ;stkvar	_l @ sp[(-56)+20]
 17759                           
 17760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17761                           
 17762                           ;stkvar	_l @ sp[(-56)+20]
 17763                           
 17764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17765  0109D6  0EDC               	movlw	-36
 17766  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17767  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17768  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17769  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17770                           
 17771                           ;stkvar	_h @ sp[(-60)+24]
 17772  0109F0  0EDC               	movlw	-36
 17773  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17774  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17775  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17776  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17777  010A0A  EC1D  F0D3         	call	___fleq	;wreg free
 17778  010A0E  A001               	btfss	btemp& (0+255),0,c
 17779  010A10  D01B               	goto	l12418
 17780                           
 17781                           ;stkvar	_d @ sp[(-56)+44]
 17782  010A12  0EF4               	movlw	-12
 17783  010A14  B0E3               	btfsc	plusw1,0,c
 17784  010A16  D018               	goto	l12418
 17785  010A18                     u11560:
 17786                           
 17787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17788  010A18  0E00               	movlw	0
 17789  010A1A  6E09               	movwf	(btemp+8)^0,c
 17790  010A1C  0E00               	movlw	0
 17791  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17792  010A20  0E00               	movlw	0
 17793  010A22  6E0B               	movwf	(btemp+10)^0,c
 17794  010A24  0E00               	movlw	0
 17795  010A26  6E0C               	movwf	(btemp+11)^0,c
 17796                           
 17797                           ;stkvar	_l @ sp[(-56)+20]
 17798  010A28  0EDC               	movlw	-36
 17799  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17800  010A30  0EDD               	movlw	-35
 17801  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17802  010A38  0EDE               	movlw	-34
 17803  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17804  010A40  0EDF               	movlw	-33
 17805  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17806  010A48                     l12418:
 17807                           
 17808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17809                           ;stkvar	_l @ sp[(-56)+20]
 17810  010A48  0EDC               	movlw	-36
 17811  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17812  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17813  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17814  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17815                           
 17816                           ;stkvar	_g @ sp[(-60)+16]
 17817  010A62  0ED4               	movlw	-44
 17818  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17819  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17820  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17821  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17822  010A7C  ECFA  F0A2         	call	___fladd	;wreg free
 17823                           
 17824                           ;stkvar	_h @ sp[(-56)+24]
 17825  010A80  0EE0               	movlw	-32
 17826  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17827  010A88  0EE1               	movlw	-31
 17828  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17829  010A90  0EE2               	movlw	-30
 17830  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17831  010A98  0EE3               	movlw	-29
 17832  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17833                           
 17834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17835                           ;stkvar	_ou @ sp[(-56)+28]
 17836  010AA0  0EE4               	movlw	-28
 17837  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17838  010AA8  0EE5               	movlw	-27
 17839  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17840  010AB0  0EE6               	movlw	-26
 17841  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17842  010AB8  0EE7               	movlw	-25
 17843  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17844                           
 17845                           ;stkvar	_u @ sp[(-56)+12]
 17846  010AC0  0ED4               	movlw	-44
 17847  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17848  010AC8  0ED5               	movlw	-43
 17849  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17850  010AD0  0ED6               	movlw	-42
 17851  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17852  010AD8  0ED7               	movlw	-41
 17853  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17854                           
 17855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17856                           ;stkvar	_nmode @ sp[(-56)+55]
 17857  010AE0  0EFF               	movlw	-1
 17858  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17859  010AE8  0E65               	movlw	101
 17860  010AEA  1801               	xorwf	btemp^0,w,c
 17861  010AEC  B4D8               	btfsc	status,2,c
 17862  010AEE  D011               	goto	l12426
 17863                           
 17864                           ;stkvar	_e @ sp[(-56)+34]
 17865                           ;stkvar	_ne @ sp[(-56)+46]
 17866  010AF0  0EEA               	movlw	-22
 17867  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17868  010AF8  0EF6               	movlw	-10
 17869  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17870  010B00  0EEB               	movlw	-21
 17871  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17872  010B08  0EF7               	movlw	-9
 17873  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17874  010B10  D004               	goto	l2314
 17875  010B12                     l12426:
 17876                           
 17877                           ;stkvar	_ne @ sp[(-56)+46]
 17878  010B12  0EF6               	movlw	-10
 17879  010B14  6AE3               	clrf	plusw1,c
 17880  010B16  0EF7               	movlw	-9
 17881  010B18  6AE3               	clrf	plusw1,c
 17882  010B1A                     l2314:
 17883                           
 17884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17885                           ;stkvar	_pp @ sp[(-56)+50]
 17886  010B1A  0EFA               	movlw	-6
 17887  010B1C  6AE3               	clrf	plusw1,c
 17888  010B1E  0EFB               	movlw	-5
 17889  010B20  6AE3               	clrf	plusw1,c
 17890                           
 17891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17892                           ;stkvar	_t @ sp[(-56)+52]
 17893  010B22  0EFC               	movlw	-4
 17894  010B24  6AE3               	clrf	plusw1,c
 17895  010B26  0EFD               	movlw	-3
 17896  010B28  6AE3               	clrf	plusw1,c
 17897                           
 17898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17899                           ;stkvar	_i @ sp[(-56)+36]
 17900  010B2A  0EEC               	movlw	-20
 17901  010B2C  6AE3               	clrf	plusw1,c
 17902  010B2E  0EED               	movlw	-19
 17903  010B30  6AE3               	clrf	plusw1,c
 17904                           
 17905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17906  010B32  D1B7               	goto	l12478
 17907  010B34                     l12428:
 17908                           
 17909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17910                           ;stkvar	_u @ sp[(-56)+12]
 17911  010B34  0ED4               	movlw	-44
 17912  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17913  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17914  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17915  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17916                           
 17917                           ;stkvar	_h @ sp[(-60)+24]
 17918  010B4E  0EDC               	movlw	-36
 17919  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17920  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17921  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17922  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17923  010B68  ECD8  F0A6         	call	___fldiv	;wreg free
 17924  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17925  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17926  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17927  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17928  010B84  EC62  F0B2         	call	_floorf	;wreg free
 17929                           
 17930                           ;stkvar	_l @ sp[(-56)+20]
 17931  010B88  0EDC               	movlw	-36
 17932  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17933  010B90  0EDD               	movlw	-35
 17934  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17935  010B98  0EDE               	movlw	-34
 17936  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17937  010BA0  0EDF               	movlw	-33
 17938  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17939                           
 17940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17941                           ;stkvar	_l @ sp[(-56)+20]
 17942  010BA8  0EDC               	movlw	-36
 17943  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17944  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17945  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17946  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17947  010BC2  EC51  F0C8         	call	___fltol	;wreg free
 17948  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17949  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17950                           
 17951                           ;stkvar	_d @ sp[(-56)+44]
 17952  010BD2  0EF4               	movlw	-12
 17953  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17954  010BDA  0EF5               	movlw	-11
 17955  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17956                           
 17957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17958  010BE2  B83E               	btfsc	_flags^0,4,c
 17959  010BE4  D026               	goto	l12442
 17960                           
 17961                           ;stkvar	_d @ sp[(-56)+44]
 17962  010BE6  0EF4               	movlw	-12
 17963  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17964  010BEE  0EF5               	movlw	-11
 17965  010BF0  50E3               	movf	plusw1,w,c
 17966  010BF2  1001               	iorwf	btemp^0,w,c
 17967  010BF4  A4D8               	btfss	status,2,c
 17968  010BF6  D01D               	goto	l12442
 17969                           
 17970                           ;stkvar	_mode @ sp[(-56)+54]
 17971  010BF8  0EFE               	movlw	-2
 17972  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17973  010C00  0E67               	movlw	103
 17974  010C02  1801               	xorwf	btemp^0,w,c
 17975  010C04  A4D8               	btfss	status,2,c
 17976  010C06  D015               	goto	l12442
 17977                           
 17978                           ;stkvar	_ne @ sp[(-56)+46]
 17979  010C08  0EF7               	movlw	-9
 17980  010C0A  AEE3               	btfss	plusw1,7,c
 17981  010C0C  D012               	goto	l12442
 17982                           
 17983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 17984                           ;stkvar	_t @ sp[(-56)+52]
 17985  010C0E  0EFC               	movlw	-4
 17986  010C10  50E3               	movf	plusw1,w,c
 17987  010C12  0F01               	addlw	1
 17988  010C14  6E01               	movwf	btemp^0,c
 17989  010C16  0EFC               	movlw	-4
 17990  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 17991  010C1E  6A01               	clrf	btemp^0,c
 17992  010C20  0EFD               	movlw	-3
 17993  010C22  50E3               	movf	plusw1,w,c
 17994  010C24  2001               	addwfc	btemp^0,w,c
 17995  010C26  6E01               	movwf	btemp^0,c
 17996  010C28  0EFD               	movlw	-3
 17997  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 17998                           
 17999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 18000  010C30  D0AF               	goto	l12470
 18001  010C32                     l12442:
 18002                           
 18003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 18004                           ;stkvar	_pp @ sp[(-56)+50]
 18005  010C32  0EFA               	movlw	-6
 18006  010C34  006F FF8C  F001    	movff	plusw1,btemp
 18007  010C3A  0EFB               	movlw	-5
 18008  010C3C  50E3               	movf	plusw1,w,c
 18009  010C3E  1001               	iorwf	btemp^0,w,c
 18010  010C40  A4D8               	btfss	status,2,c
 18011  010C42  D070               	goto	l12462
 18012                           
 18013                           ;stkvar	_ne @ sp[(-56)+46]
 18014  010C44  0EF7               	movlw	-9
 18015  010C46  AEE3               	btfss	plusw1,7,c
 18016  010C48  D06D               	goto	l12462
 18017                           
 18018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 18019                           ;stkvar	_n @ sp[(-56)+32]
 18020  010C4A  0EE8               	movlw	-24
 18021  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18022  010C52  0EE9               	movlw	-23
 18023  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18024  010C5A  0E97               	movlw	low _dbuf
 18025  010C5C  240B               	addwf	(btemp+10)^0,w,c
 18026  010C5E  6ED9               	movwf	fsr2l,c
 18027  010C60  0E02               	movlw	high _dbuf
 18028  010C62  200C               	addwfc	(btemp+11)^0,w,c
 18029  010C64  6EDA               	movwf	fsr2h,c
 18030  010C66  0E2E               	movlw	46
 18031  010C68  6EDF               	movwf	indf2,c
 18032                           
 18033                           ;stkvar	_n @ sp[(-56)+32]
 18034  010C6A  0EE8               	movlw	-24
 18035  010C6C  50E3               	movf	plusw1,w,c
 18036  010C6E  0F01               	addlw	1
 18037  010C70  6E01               	movwf	btemp^0,c
 18038  010C72  0EE8               	movlw	-24
 18039  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 18040  010C7A  6A01               	clrf	btemp^0,c
 18041  010C7C  0EE9               	movlw	-23
 18042  010C7E  50E3               	movf	plusw1,w,c
 18043  010C80  2001               	addwfc	btemp^0,w,c
 18044  010C82  6E01               	movwf	btemp^0,c
 18045  010C84  0EE9               	movlw	-23
 18046  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 18047                           
 18048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 18049                           ;stkvar	_w @ sp[(-56)+38]
 18050  010C8C  50E1               	movf	fsr1l,w,c
 18051  010C8E  0FEE               	addlw	-18
 18052  010C90  6ED9               	movwf	fsr2l,c
 18053  010C92  50E2               	movf	fsr1h,w,c
 18054  010C94  6EDA               	movwf	fsr2h,c
 18055  010C96  0EFF               	movlw	255
 18056  010C98  22DA               	addwfc	fsr2h,f,c
 18057  010C9A  06DE               	decf	postinc2,f,c
 18058  010C9C  0E00               	movlw	0
 18059  010C9E  5ADD               	subwfb	postdec2,f,c
 18060                           
 18061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 18062  010CA0  0E01               	movlw	1
 18063  010CA2  6E0B               	movwf	(btemp+10)^0,c
 18064  010CA4  0E00               	movlw	0
 18065  010CA6  6E0C               	movwf	(btemp+11)^0,c
 18066                           
 18067                           ;stkvar	_pp @ sp[(-56)+50]
 18068  010CA8  0EFA               	movlw	-6
 18069  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18070  010CB0  0EFB               	movlw	-5
 18071  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18072  010CB8  D035               	goto	l12462
 18073  010CBA                     l12454:
 18074                           
 18075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 18076                           ;stkvar	_n @ sp[(-56)+32]
 18077  010CBA  0EE8               	movlw	-24
 18078  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18079  010CC2  0EE9               	movlw	-23
 18080  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18081  010CCA  0E97               	movlw	low _dbuf
 18082  010CCC  240B               	addwf	(btemp+10)^0,w,c
 18083  010CCE  6ED9               	movwf	fsr2l,c
 18084  010CD0  0E02               	movlw	high _dbuf
 18085  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 18086  010CD4  6EDA               	movwf	fsr2h,c
 18087  010CD6  0E30               	movlw	48
 18088  010CD8  6EDF               	movwf	indf2,c
 18089                           
 18090                           ;stkvar	_n @ sp[(-56)+32]
 18091  010CDA  0EE8               	movlw	-24
 18092  010CDC  50E3               	movf	plusw1,w,c
 18093  010CDE  0F01               	addlw	1
 18094  010CE0  6E01               	movwf	btemp^0,c
 18095  010CE2  0EE8               	movlw	-24
 18096  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 18097  010CEA  6A01               	clrf	btemp^0,c
 18098  010CEC  0EE9               	movlw	-23
 18099  010CEE  50E3               	movf	plusw1,w,c
 18100  010CF0  2001               	addwfc	btemp^0,w,c
 18101  010CF2  6E01               	movwf	btemp^0,c
 18102  010CF4  0EE9               	movlw	-23
 18103  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 18104                           
 18105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 18106                           ;stkvar	_w @ sp[(-56)+38]
 18107  010CFC  50E1               	movf	fsr1l,w,c
 18108  010CFE  0FEE               	addlw	-18
 18109  010D00  6ED9               	movwf	fsr2l,c
 18110  010D02  50E2               	movf	fsr1h,w,c
 18111  010D04  6EDA               	movwf	fsr2h,c
 18112  010D06  0EFF               	movlw	255
 18113  010D08  22DA               	addwfc	fsr2h,f,c
 18114  010D0A  06DE               	decf	postinc2,f,c
 18115  010D0C  0E00               	movlw	0
 18116  010D0E  5ADD               	subwfb	postdec2,f,c
 18117                           
 18118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 18119                           ;stkvar	_t @ sp[(-56)+52]
 18120  010D10  50E1               	movf	fsr1l,w,c
 18121  010D12  0FFC               	addlw	-4
 18122  010D14  6ED9               	movwf	fsr2l,c
 18123  010D16  50E2               	movf	fsr1h,w,c
 18124  010D18  6EDA               	movwf	fsr2h,c
 18125  010D1A  0EFF               	movlw	255
 18126  010D1C  22DA               	addwfc	fsr2h,f,c
 18127  010D1E  06DE               	decf	postinc2,f,c
 18128  010D20  0E00               	movlw	0
 18129  010D22  5ADD               	subwfb	postdec2,f,c
 18130  010D24                     l12462:
 18131                           
 18132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 18133                           ;stkvar	_t @ sp[(-56)+52]
 18134  010D24  0EFC               	movlw	-4
 18135  010D26  006F FF8C  F001    	movff	plusw1,btemp
 18136  010D2C  0EFD               	movlw	-3
 18137  010D2E  50E3               	movf	plusw1,w,c
 18138  010D30  1001               	iorwf	btemp^0,w,c
 18139  010D32  A4D8               	btfss	status,2,c
 18140  010D34  D7C2               	goto	l12454
 18141                           
 18142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 18143                           ;stkvar	_n @ sp[(-56)+32]
 18144  010D36  0EE8               	movlw	-24
 18145  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18146  010D3E  0EE9               	movlw	-23
 18147  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18148  010D46  0E97               	movlw	low _dbuf
 18149  010D48  240B               	addwf	(btemp+10)^0,w,c
 18150  010D4A  6ED9               	movwf	fsr2l,c
 18151  010D4C  0E02               	movlw	high _dbuf
 18152  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 18153  010D50  6EDA               	movwf	fsr2h,c
 18154                           
 18155                           ;stkvar	_d @ sp[(-56)+44]
 18156  010D52  0EF4               	movlw	-12
 18157  010D54  50E3               	movf	plusw1,w,c
 18158  010D56  0F30               	addlw	48
 18159  010D58  6EDF               	movwf	indf2,c
 18160                           
 18161                           ;stkvar	_n @ sp[(-56)+32]
 18162  010D5A  0EE8               	movlw	-24
 18163  010D5C  50E3               	movf	plusw1,w,c
 18164  010D5E  0F01               	addlw	1
 18165  010D60  6E01               	movwf	btemp^0,c
 18166  010D62  0EE8               	movlw	-24
 18167  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 18168  010D6A  6A01               	clrf	btemp^0,c
 18169  010D6C  0EE9               	movlw	-23
 18170  010D6E  50E3               	movf	plusw1,w,c
 18171  010D70  2001               	addwfc	btemp^0,w,c
 18172  010D72  6E01               	movwf	btemp^0,c
 18173  010D74  0EE9               	movlw	-23
 18174  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 18175                           
 18176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 18177                           ;stkvar	_w @ sp[(-56)+38]
 18178  010D7C  50E1               	movf	fsr1l,w,c
 18179  010D7E  0FEE               	addlw	-18
 18180  010D80  6ED9               	movwf	fsr2l,c
 18181  010D82  50E2               	movf	fsr1h,w,c
 18182  010D84  6EDA               	movwf	fsr2h,c
 18183  010D86  0EFF               	movlw	255
 18184  010D88  22DA               	addwfc	fsr2h,f,c
 18185  010D8A  06DE               	decf	postinc2,f,c
 18186  010D8C  0E00               	movlw	0
 18187  010D8E  5ADD               	subwfb	postdec2,f,c
 18188  010D90                     l12470:
 18189                           
 18190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 18191                           ;stkvar	_u @ sp[(-56)+12]
 18192  010D90  0ED4               	movlw	-44
 18193  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 18194  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 18195  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18196  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18197                           
 18198                           ;stkvar	_l @ sp[(-60)+20]
 18199  010DAA  0ED8               	movlw	-40
 18200  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 18201  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18202  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18203  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 18204  010DC4  ECE5  F09E         	call	___flmul	;wreg free
 18205  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 18206  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18207  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18208  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 18209                           
 18210                           ;stkvar	_h @ sp[(-60)+24]
 18211  010DE0  0EDC               	movlw	-36
 18212  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 18213  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18214  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18215  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18216  010DFA  ECD0  F0DC         	call	___flsub	;wreg free
 18217                           
 18218                           ;stkvar	_h @ sp[(-56)+24]
 18219  010DFE  0EE0               	movlw	-32
 18220  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 18221  010E06  0EE1               	movlw	-31
 18222  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18223  010E0E  0EE2               	movlw	-30
 18224  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18225  010E16  0EE3               	movlw	-29
 18226  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 18227                           
 18228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 18229  010E1E  0E00               	movlw	0
 18230  010E20  6EE6               	movwf	postinc1,c
 18231  010E22  0E00               	movlw	0
 18232  010E24  6EE6               	movwf	postinc1,c
 18233  010E26  0E20               	movlw	32
 18234  010E28  6EE6               	movwf	postinc1,c
 18235  010E2A  0E41               	movlw	65
 18236  010E2C  6EE6               	movwf	postinc1,c
 18237                           
 18238                           ;stkvar	_u @ sp[(-60)+12]
 18239  010E2E  0ED0               	movlw	-48
 18240  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 18241  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 18242  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18243  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18244  010E48  ECD8  F0A6         	call	___fldiv	;wreg free
 18245                           
 18246                           ;stkvar	_u @ sp[(-56)+12]
 18247  010E4C  0ED4               	movlw	-44
 18248  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 18249  010E54  0ED5               	movlw	-43
 18250  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18251  010E5C  0ED6               	movlw	-42
 18252  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18253  010E64  0ED7               	movlw	-41
 18254  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 18255                           
 18256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 18257                           ;stkvar	_ne @ sp[(-56)+46]
 18258  010E6C  50E1               	movf	fsr1l,w,c
 18259  010E6E  0FF6               	addlw	-10
 18260  010E70  6ED9               	movwf	fsr2l,c
 18261  010E72  50E2               	movf	fsr1h,w,c
 18262  010E74  6EDA               	movwf	fsr2h,c
 18263  010E76  0EFF               	movlw	255
 18264  010E78  22DA               	addwfc	fsr2h,f,c
 18265  010E7A  06DE               	decf	postinc2,f,c
 18266  010E7C  0E00               	movlw	0
 18267  010E7E  5ADD               	subwfb	postdec2,f,c
 18268                           
 18269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 18270                           ;stkvar	_i @ sp[(-56)+36]
 18271  010E80  0EEC               	movlw	-20
 18272  010E82  50E3               	movf	plusw1,w,c
 18273  010E84  0F01               	addlw	1
 18274  010E86  6E01               	movwf	btemp^0,c
 18275  010E88  0EEC               	movlw	-20
 18276  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 18277  010E90  6A01               	clrf	btemp^0,c
 18278  010E92  0EED               	movlw	-19
 18279  010E94  50E3               	movf	plusw1,w,c
 18280  010E96  2001               	addwfc	btemp^0,w,c
 18281  010E98  6E01               	movwf	btemp^0,c
 18282  010E9A  0EED               	movlw	-19
 18283  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 18284  010EA2                     l12478:
 18285                           
 18286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18287                           ;stkvar	_m @ sp[(-56)+48]
 18288                           ;stkvar	_i @ sp[(-56)+36]
 18289  010EA2  50E1               	movf	fsr1l,w,c
 18290  010EA4  0FEC               	addlw	-20
 18291  010EA6  6ED9               	movwf	fsr2l,c
 18292  010EA8  50E2               	movf	fsr1h,w,c
 18293  010EAA  6EDA               	movwf	fsr2h,c
 18294  010EAC  0EFF               	movlw	255
 18295  010EAE  22DA               	addwfc	fsr2h,f,c
 18296  010EB0  0EF8               	movlw	-8
 18297  010EB2  50E3               	movf	plusw1,w,c
 18298  010EB4  5CDE               	subwf	postinc2,w,c
 18299  010EB6  50DE               	movf	postinc2,w,c
 18300  010EB8  0A80               	xorlw	128
 18301  010EBA  6E01               	movwf	btemp^0,c
 18302  010EBC  0EF9               	movlw	-7
 18303  010EBE  50E3               	movf	plusw1,w,c
 18304  010EC0  0A80               	xorlw	128
 18305  010EC2  5801               	subwfb	btemp^0,w,c
 18306  010EC4  B0D8               	btfsc	status,0,c
 18307  010EC6  D00E               	goto	u11660
 18308                           
 18309                           ;stkvar	_n @ sp[(-56)+32]
 18310  010EC8  0EE9               	movlw	-23
 18311  010ECA  BEE3               	btfsc	plusw1,7,c
 18312  010ECC  D633               	goto	l12428
 18313  010ECE  0EE9               	movlw	-23
 18314  010ED0  50E3               	movf	plusw1,w,c
 18315  010ED2  E108               	bnz	u11660
 18316  010ED4  0EE8               	movlw	-24
 18317  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18318  010EDC  0E4B               	movlw	75
 18319  010EDE  5E01               	subwf	btemp^0,f,c
 18320  010EE0  A0D8               	btfss	status,0,c
 18321  010EE2  D628               	goto	l12428
 18322  010EE4                     u11660:
 18323                           
 18324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18325                           ;stkvar	_pp @ sp[(-56)+50]
 18326  010EE4  0EFA               	movlw	-6
 18327  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18328  010EEC  0EFB               	movlw	-5
 18329  010EEE  50E3               	movf	plusw1,w,c
 18330  010EF0  1001               	iorwf	btemp^0,w,c
 18331  010EF2  B4D8               	btfsc	status,2,c
 18332  010EF4  A83E               	btfss	_flags^0,4,c
 18333  010EF6  D021               	goto	l12490
 18334                           
 18335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18336                           ;stkvar	_n @ sp[(-56)+32]
 18337  010EF8  0EE8               	movlw	-24
 18338  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18339  010F00  0EE9               	movlw	-23
 18340  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18341  010F08  0E97               	movlw	low _dbuf
 18342  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18343  010F0C  6ED9               	movwf	fsr2l,c
 18344  010F0E  0E02               	movlw	high _dbuf
 18345  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18346  010F12  6EDA               	movwf	fsr2h,c
 18347  010F14  0E2E               	movlw	46
 18348  010F16  6EDF               	movwf	indf2,c
 18349                           
 18350                           ;stkvar	_n @ sp[(-56)+32]
 18351  010F18  0EE8               	movlw	-24
 18352  010F1A  50E3               	movf	plusw1,w,c
 18353  010F1C  0F01               	addlw	1
 18354  010F1E  6E01               	movwf	btemp^0,c
 18355  010F20  0EE8               	movlw	-24
 18356  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18357  010F28  6A01               	clrf	btemp^0,c
 18358  010F2A  0EE9               	movlw	-23
 18359  010F2C  50E3               	movf	plusw1,w,c
 18360  010F2E  2001               	addwfc	btemp^0,w,c
 18361  010F30  6E01               	movwf	btemp^0,c
 18362  010F32  0EE9               	movlw	-23
 18363  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18364  010F3A                     l12490:
 18365                           
 18366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18367                           ;stkvar	_n @ sp[(-56)+32]
 18368  010F3A  0EE8               	movlw	-24
 18369  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18370  010F42  0EE9               	movlw	-23
 18371  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18372  010F4A  0E97               	movlw	low _dbuf
 18373  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18374  010F4E  6ED9               	movwf	fsr2l,c
 18375  010F50  0E02               	movlw	high _dbuf
 18376  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18377  010F54  6EDA               	movwf	fsr2h,c
 18378  010F56  0E00               	movlw	0
 18379  010F58  6EDF               	movwf	indf2,c
 18380                           
 18381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18382                           ;stkvar	_nmode @ sp[(-56)+55]
 18383  010F5A  0EFF               	movlw	-1
 18384  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18385  010F62  0E65               	movlw	101
 18386  010F64  1801               	xorwf	btemp^0,w,c
 18387  010F66  A4D8               	btfss	status,2,c
 18388  010F68  EF16  F081         	goto	l12294
 18389                           
 18390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18391  010F6C  0E4F               	movlw	79
 18392  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18393  010F70  0E00               	movlw	0
 18394  010F72  6E0C               	movwf	(btemp+11)^0,c
 18395                           
 18396                           ;stkvar	_i @ sp[(-56)+36]
 18397  010F74  0EEC               	movlw	-20
 18398  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18399  010F7C  0EED               	movlw	-19
 18400  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18401                           
 18402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18403                           ;stkvar	_i @ sp[(-56)+36]
 18404  010F84  0EEC               	movlw	-20
 18405  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18406  010F8C  0EED               	movlw	-19
 18407  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18408  010F94  0E97               	movlw	low _dbuf
 18409  010F96  240B               	addwf	(btemp+10)^0,w,c
 18410  010F98  6ED9               	movwf	fsr2l,c
 18411  010F9A  0E02               	movlw	high _dbuf
 18412  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18413  010F9E  6EDA               	movwf	fsr2h,c
 18414  010FA0  0E00               	movlw	0
 18415  010FA2  6EDF               	movwf	indf2,c
 18416                           
 18417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18418                           ;stkvar	_sign @ sp[(-56)+42]
 18419  010FA4  0EF2               	movlw	-14
 18420  010FA6  6AE3               	clrf	plusw1,c
 18421  010FA8  0EF3               	movlw	-13
 18422  010FAA  6AE3               	clrf	plusw1,c
 18423                           
 18424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18425                           ;stkvar	_e @ sp[(-56)+34]
 18426  010FAC  0EEB               	movlw	-21
 18427  010FAE  AEE3               	btfss	plusw1,7,c
 18428  010FB0  D012               	goto	l12504
 18429                           
 18430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18431  010FB2  0E01               	movlw	1
 18432  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18433  010FB6  0E00               	movlw	0
 18434  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18435                           
 18436                           ;stkvar	_sign @ sp[(-56)+42]
 18437  010FBA  0EF2               	movlw	-14
 18438  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18439  010FC2  0EF3               	movlw	-13
 18440  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18441                           
 18442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18443                           ;stkvar	_e @ sp[(-56)+34]
 18444                           ;stkvar	_e @ sp[(-56)+34]
 18445  010FCA  0EEA               	movlw	-22
 18446  010FCC  6CE3               	negf	plusw1,c
 18447  010FCE  0EEB               	movlw	-21
 18448  010FD0  1EE3               	comf	plusw1,f,c
 18449  010FD2  B0D8               	btfsc	status,0,c
 18450  010FD4  2AE3               	incf	plusw1,f,c
 18451  010FD6                     l12504:
 18452                           
 18453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18454  010FD6  0E02               	movlw	2
 18455  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18456  010FDA  0E00               	movlw	0
 18457  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18458                           
 18459                           ;stkvar	_p @ sp[(-56)+40]
 18460  010FDE  0EF0               	movlw	-16
 18461  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18462  010FE6  0EF1               	movlw	-15
 18463  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18464                           
 18465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18466  010FEE  D051               	goto	l12516
 18467  010FF0                     l12506:
 18468                           
 18469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18470                           ;stkvar	_i @ sp[(-56)+36]
 18471  010FF0  50E1               	movf	fsr1l,w,c
 18472  010FF2  0FEC               	addlw	-20
 18473  010FF4  6ED9               	movwf	fsr2l,c
 18474  010FF6  50E2               	movf	fsr1h,w,c
 18475  010FF8  6EDA               	movwf	fsr2h,c
 18476  010FFA  0EFF               	movlw	255
 18477  010FFC  22DA               	addwfc	fsr2h,f,c
 18478  010FFE  06DE               	decf	postinc2,f,c
 18479  011000  0E00               	movlw	0
 18480  011002  5ADD               	subwfb	postdec2,f,c
 18481                           
 18482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18483                           ;stkvar	_i @ sp[(-56)+36]
 18484  011004  0EEC               	movlw	-20
 18485  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18486  01100C  0EED               	movlw	-19
 18487  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18488  011014  0E97               	movlw	low _dbuf
 18489  011016  240B               	addwf	(btemp+10)^0,w,c
 18490  011018  6ED9               	movwf	fsr2l,c
 18491  01101A  0E02               	movlw	high _dbuf
 18492  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18493  01101E  6EDA               	movwf	fsr2h,c
 18494  011020  0E0A               	movlw	10
 18495  011022  6EE6               	movwf	postinc1,c
 18496  011024  0E00               	movlw	0
 18497  011026  6EE6               	movwf	postinc1,c
 18498                           
 18499                           ;stkvar	_e @ sp[(-58)+34]
 18500  011028  0EE8               	movlw	-24
 18501  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18502  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18503  011036  EC78  F0CD         	call	___awmod	;wreg free
 18504  01103A  5001               	movf	btemp^0,w,c
 18505  01103C  0F30               	addlw	48
 18506  01103E  6EDF               	movwf	indf2,c
 18507                           
 18508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18509  011040  0E0A               	movlw	10
 18510  011042  6EE6               	movwf	postinc1,c
 18511  011044  0E00               	movlw	0
 18512  011046  6EE6               	movwf	postinc1,c
 18513                           
 18514                           ;stkvar	_e @ sp[(-58)+34]
 18515  011048  0EE8               	movlw	-24
 18516  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18517  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18518  011056  EC6D  F0CA         	call	___awdiv	;wreg free
 18519                           
 18520                           ;stkvar	_e @ sp[(-56)+34]
 18521  01105A  0EEA               	movlw	-22
 18522  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18523  011062  0EEB               	movlw	-21
 18524  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18525                           
 18526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18527                           ;stkvar	_p @ sp[(-56)+40]
 18528  01106A  50E1               	movf	fsr1l,w,c
 18529  01106C  0FF0               	addlw	-16
 18530  01106E  6ED9               	movwf	fsr2l,c
 18531  011070  50E2               	movf	fsr1h,w,c
 18532  011072  6EDA               	movwf	fsr2h,c
 18533  011074  0EFF               	movlw	255
 18534  011076  22DA               	addwfc	fsr2h,f,c
 18535  011078  06DE               	decf	postinc2,f,c
 18536  01107A  0E00               	movlw	0
 18537  01107C  5ADD               	subwfb	postdec2,f,c
 18538                           
 18539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18540                           ;stkvar	_w @ sp[(-56)+38]
 18541  01107E  50E1               	movf	fsr1l,w,c
 18542  011080  0FEE               	addlw	-18
 18543  011082  6ED9               	movwf	fsr2l,c
 18544  011084  50E2               	movf	fsr1h,w,c
 18545  011086  6EDA               	movwf	fsr2h,c
 18546  011088  0EFF               	movlw	255
 18547  01108A  22DA               	addwfc	fsr2h,f,c
 18548  01108C  06DE               	decf	postinc2,f,c
 18549  01108E  0E00               	movlw	0
 18550  011090  5ADD               	subwfb	postdec2,f,c
 18551  011092                     l12516:
 18552                           
 18553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18554                           ;stkvar	_e @ sp[(-56)+34]
 18555  011092  0EEA               	movlw	-22
 18556  011094  006F FF8C  F001    	movff	plusw1,btemp
 18557  01109A  0EEB               	movlw	-21
 18558  01109C  50E3               	movf	plusw1,w,c
 18559  01109E  1001               	iorwf	btemp^0,w,c
 18560  0110A0  A4D8               	btfss	status,2,c
 18561  0110A2  D7A6               	goto	l12506
 18562                           
 18563                           ;stkvar	_p @ sp[(-56)+40]
 18564  0110A4  0EF1               	movlw	-15
 18565  0110A6  BEE3               	btfsc	plusw1,7,c
 18566  0110A8  D007               	goto	u11720
 18567  0110AA  0EF1               	movlw	-15
 18568  0110AC  50E3               	movf	plusw1,w,c
 18569  0110AE  E1A0               	bnz	l12506
 18570  0110B0  0EF0               	movlw	-16
 18571  0110B2  04E3               	decf	plusw1,w,c
 18572  0110B4  B0D8               	btfsc	status,0,c
 18573  0110B6  D79C               	goto	l12506
 18574  0110B8                     u11720:
 18575                           
 18576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18577                           ;stkvar	_i @ sp[(-56)+36]
 18578  0110B8  50E1               	movf	fsr1l,w,c
 18579  0110BA  0FEC               	addlw	-20
 18580  0110BC  6ED9               	movwf	fsr2l,c
 18581  0110BE  50E2               	movf	fsr1h,w,c
 18582  0110C0  6EDA               	movwf	fsr2h,c
 18583  0110C2  0EFF               	movlw	255
 18584  0110C4  22DA               	addwfc	fsr2h,f,c
 18585  0110C6  06DE               	decf	postinc2,f,c
 18586  0110C8  0E00               	movlw	0
 18587  0110CA  5ADD               	subwfb	postdec2,f,c
 18588                           
 18589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18590                           ;stkvar	_sign @ sp[(-56)+42]
 18591  0110CC  0EF2               	movlw	-14
 18592  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18593  0110D4  0EF3               	movlw	-13
 18594  0110D6  50E3               	movf	plusw1,w,c
 18595  0110D8  1001               	iorwf	btemp^0,w,c
 18596  0110DA  A4D8               	btfss	status,2,c
 18597  0110DC  D002               	goto	l12526
 18598  0110DE  0E2B               	movlw	43
 18599  0110E0  D001               	goto	L19
 18600  0110E2                     l12526:
 18601  0110E2  0E2D               	movlw	45
 18602  0110E4                     L19:
 18603  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18604  0110E6  0E00               	movlw	0
 18605  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18606                           
 18607                           ;stkvar	_efgtoa$5693 @ sp[(-56)+4]
 18608  0110EA  0ECC               	movlw	-52
 18609  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18610  0110F2  0ECD               	movlw	-51
 18611  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18612                           
 18613                           ;stkvar	_efgtoa$5693 @ sp[(-56)+4]
 18614                           ;stkvar	_i @ sp[(-56)+36]
 18615  0110FA  0EEC               	movlw	-20
 18616  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18617  011102  0EED               	movlw	-19
 18618  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18619  01110A  0E97               	movlw	low _dbuf
 18620  01110C  240B               	addwf	(btemp+10)^0,w,c
 18621  01110E  6ED9               	movwf	fsr2l,c
 18622  011110  0E02               	movlw	high _dbuf
 18623  011112  200C               	addwfc	(btemp+11)^0,w,c
 18624  011114  6EDA               	movwf	fsr2h,c
 18625  011116  0ECC               	movlw	-52
 18626  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18627                           
 18628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18629                           ;stkvar	_w @ sp[(-56)+38]
 18630  01111E  50E1               	movf	fsr1l,w,c
 18631  011120  0FEE               	addlw	-18
 18632  011122  6ED9               	movwf	fsr2l,c
 18633  011124  50E2               	movf	fsr1h,w,c
 18634  011126  6EDA               	movwf	fsr2h,c
 18635  011128  0EFF               	movlw	255
 18636  01112A  22DA               	addwfc	fsr2h,f,c
 18637  01112C  06DE               	decf	postinc2,f,c
 18638  01112E  0E00               	movlw	0
 18639  011130  5ADD               	subwfb	postdec2,f,c
 18640                           
 18641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 18642                           ;stkvar	_i @ sp[(-56)+36]
 18643  011132  50E1               	movf	fsr1l,w,c
 18644  011134  0FEC               	addlw	-20
 18645  011136  6ED9               	movwf	fsr2l,c
 18646  011138  50E2               	movf	fsr1h,w,c
 18647  01113A  6EDA               	movwf	fsr2h,c
 18648  01113C  0EFF               	movlw	255
 18649  01113E  22DA               	addwfc	fsr2h,f,c
 18650  011140  06DE               	decf	postinc2,f,c
 18651  011142  0E00               	movlw	0
 18652  011144  5ADD               	subwfb	postdec2,f,c
 18653  011146  0EBF               	movlw	191
 18654  011148  6E0B               	movwf	(btemp+10)^0,c
 18655  01114A  0EFF               	movlw	255
 18656  01114C  6E0C               	movwf	(btemp+11)^0,c
 18657                           
 18658                           ;stkvar	_c @ sp[(-56)+-7]
 18659  01114E  0EC1               	movlw	-63
 18660  011150  50E3               	movf	plusw1,w,c
 18661  011152  6E09               	movwf	(btemp+8)^0,c
 18662  011154  6A0A               	clrf	(btemp+9)^0,c
 18663  011156  500B               	movf	(btemp+10)^0,w,c
 18664  011158  2609               	addwf	(btemp+8)^0,f,c
 18665  01115A  500C               	movf	(btemp+11)^0,w,c
 18666  01115C  220A               	addwfc	(btemp+9)^0,f,c
 18667  01115E  500A               	movf	(btemp+9)^0,w,c
 18668  011160  E106               	bnz	u11740
 18669  011162  0E1A               	movlw	26
 18670  011164  5C09               	subwf	(btemp+8)^0,w,c
 18671  011166  B0D8               	btfsc	status,0,c
 18672  011168  D002               	goto	u11740
 18673  01116A  0E01               	movlw	1
 18674  01116C  D001               	goto	u11750
 18675  01116E                     u11740:
 18676  01116E  0E00               	movlw	0
 18677  011170                     u11750:
 18678  011170  6E0B               	movwf	(btemp+10)^0,c
 18679  011172  6A0C               	clrf	(btemp+11)^0,c
 18680                           
 18681                           ;stkvar	_efgtoa$5695 @ sp[(-56)+0]
 18682  011174  0EC8               	movlw	-56
 18683  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18684  01117C  0EC9               	movlw	-55
 18685  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18686                           
 18687                           ;stkvar	_efgtoa$5695 @ sp[(-56)+0]
 18688  011184  0EC8               	movlw	-56
 18689  011186  006F FF8C  F001    	movff	plusw1,btemp
 18690  01118C  0EC9               	movlw	-55
 18691  01118E  50E3               	movf	plusw1,w,c
 18692  011190  1001               	iorwf	btemp^0,w,c
 18693  011192  A4D8               	btfss	status,2,c
 18694  011194  D002               	goto	l12542
 18695  011196  0E65               	movlw	101
 18696  011198  D001               	goto	L20
 18697  01119A                     l12542:
 18698  01119A  0E45               	movlw	69
 18699  01119C                     L20:
 18700  01119C  6E0B               	movwf	(btemp+10)^0,c
 18701  01119E  0E00               	movlw	0
 18702  0111A0  6E0C               	movwf	(btemp+11)^0,c
 18703                           
 18704                           ;stkvar	_efgtoa$5694 @ sp[(-56)+2]
 18705  0111A2  0ECA               	movlw	-54
 18706  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18707  0111AA  0ECB               	movlw	-53
 18708  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18709                           
 18710                           ;stkvar	_efgtoa$5694 @ sp[(-56)+2]
 18711                           ;stkvar	_i @ sp[(-56)+36]
 18712  0111B2  0EEC               	movlw	-20
 18713  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18714  0111BA  0EED               	movlw	-19
 18715  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18716  0111C2  0E97               	movlw	low _dbuf
 18717  0111C4  240B               	addwf	(btemp+10)^0,w,c
 18718  0111C6  6ED9               	movwf	fsr2l,c
 18719  0111C8  0E02               	movlw	high _dbuf
 18720  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 18721  0111CC  6EDA               	movwf	fsr2h,c
 18722  0111CE  0ECA               	movlw	-54
 18723  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 18724                           
 18725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 18726                           ;stkvar	_w @ sp[(-56)+38]
 18727  0111D6  50E1               	movf	fsr1l,w,c
 18728  0111D8  0FEE               	addlw	-18
 18729  0111DA  6ED9               	movwf	fsr2l,c
 18730  0111DC  50E2               	movf	fsr1h,w,c
 18731  0111DE  6EDA               	movwf	fsr2h,c
 18732  0111E0  0EFF               	movlw	255
 18733  0111E2  22DA               	addwfc	fsr2h,f,c
 18734  0111E4  06DE               	decf	postinc2,f,c
 18735  0111E6  0E00               	movlw	0
 18736  0111E8  5ADD               	subwfb	postdec2,f,c
 18737                           
 18738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18739                           ;stkvar	_i @ sp[(-56)+36]
 18740  0111EA  0EEC               	movlw	-20
 18741  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18742  0111F2  0EED               	movlw	-19
 18743  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18744  0111FA  0E97               	movlw	low _dbuf
 18745  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18746  0111FE  6E09               	movwf	(btemp+8)^0,c
 18747  011200  0E02               	movlw	high _dbuf
 18748  011202  200C               	addwfc	(btemp+11)^0,w,c
 18749  011204  6E0A               	movwf	(btemp+9)^0,c
 18750  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18751  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18752                           
 18753                           ;stkvar	_n @ sp[(-58)+32]
 18754  011212  0E97               	movlw	low _dbuf
 18755  011214  6E0B               	movwf	(btemp+10)^0,c
 18756  011216  0E02               	movlw	high _dbuf
 18757  011218  6E0C               	movwf	(btemp+11)^0,c
 18758  01121A  0EE6               	movlw	-26
 18759  01121C  50E3               	movf	plusw1,w,c
 18760  01121E  260B               	addwf	(btemp+10)^0,f,c
 18761  011220  0EE7               	movlw	-25
 18762  011222  50E3               	movf	plusw1,w,c
 18763  011224  220C               	addwfc	(btemp+11)^0,f,c
 18764  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18765  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18766  011232  ECE3  F0D1         	call	_strcpy	;wreg free
 18767  011236  EF16  F081         	goto	l12294
 18768  01123A                     l2270:
 18769                           
 18770                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18771  01123A  0EC1               	movlw	193
 18772  01123C  26E1               	addwf	fsr1l,f,c
 18773  01123E  0EFF               	movlw	255
 18774  011240  22E2               	addwfc	fsr1h,f,c
 18775  011242  0012               	return		;funcret
 18776  011244                     __end_of_efgtoa:
 18777                           	opt callstack 0
 18778                           
 18779 ;; *************** function _tolower *****************
 18780 ;; Defined at:
 18781 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18782 ;; Parameters:    Size  Location     Type
 18783 ;;  c               2  [STACK] int 
 18784 ;; Auto vars:     Size  Location     Type
 18785 ;;		None
 18786 ;; Return value:  Size  Location     Type
 18787 ;;                  2  [STACK] int 
 18788 ;; Registers used:
 18789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18790 ;; Tracked objects:
 18791 ;;		On entry : 0/0
 18792 ;;		On exit  : 0/0
 18793 ;;		Unchanged: 0/0
 18794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18799 ;;Total ram usage:        0 bytes
 18800 ;; Hardware stack levels used:    1
 18801 ;; Hardware stack levels required when called:   16
 18802 ;; This function calls:
 18803 ;;		_isupper
 18804 ;; This function is called by:
 18805 ;;		_efgtoa
 18806 ;;		_vfpfcnvrt
 18807 ;; This function uses a reentrant model
 18808 ;;
 18809                           
 18810                           	psect	text63
 18811  01AFD2                     __ptext63:
 18812                           	opt callstack 0
 18813  01AFD2                     _tolower:
 18814                           	opt callstack 0
 18815                           
 18816                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18817  01AFD2  52E6               	movf	postinc1,f,c
 18818  01AFD4  52E6               	movf	postinc1,f,c
 18819                           
 18820                           ;stkvar	_c @ sp[(-2)+-2]
 18821                           
 18822                           ;incstack = 0
 18823 ;; hardware stack exceeded
 18824  01AFD6  0EFC               	movlw	-4
 18825  01AFD8  50E3               	movf	plusw1,w,c
 18826  01AFDA  0FBF               	addlw	191
 18827  01AFDC  6E0B               	movwf	(btemp+10)^0,c
 18828  01AFDE  0EFD               	movlw	-3
 18829  01AFE0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18830  01AFE6  0EFF               	movlw	255
 18831  01AFE8  220C               	addwfc	(btemp+11)^0,f,c
 18832  01AFEA  500C               	movf	(btemp+11)^0,w,c
 18833  01AFEC  E106               	bnz	u6180
 18834  01AFEE  0E1A               	movlw	26
 18835  01AFF0  5C0B               	subwf	(btemp+10)^0,w,c
 18836  01AFF2  B0D8               	btfsc	status,0,c
 18837  01AFF4  D002               	goto	u6180
 18838  01AFF6  0E01               	movlw	1
 18839  01AFF8  D001               	goto	u6190
 18840  01AFFA                     u6180:
 18841  01AFFA  0E00               	movlw	0
 18842  01AFFC                     u6190:
 18843  01AFFC  6E0B               	movwf	(btemp+10)^0,c
 18844  01AFFE  6A0C               	clrf	(btemp+11)^0,c
 18845                           
 18846                           ;stkvar	_tolower$6514 @ sp[(-2)+0]
 18847  01B000  0EFE               	movlw	-2
 18848  01B002  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18849  01B008  0EFF               	movlw	-1
 18850  01B00A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18851                           
 18852                           ;stkvar	_tolower$6514 @ sp[(-2)+0]
 18853  01B010  0EFE               	movlw	-2
 18854  01B012  006F FF8C  F001    	movff	plusw1,btemp
 18855  01B018  0EFF               	movlw	-1
 18856  01B01A  50E3               	movf	plusw1,w,c
 18857  01B01C  1001               	iorwf	btemp^0,w,c
 18858  01B01E  B4D8               	btfsc	status,2,c
 18859  01B020  D00D               	goto	l8210
 18860                           
 18861                           ;stkvar	_c @ sp[(-2)+-2]
 18862  01B022  0EFC               	movlw	-4
 18863  01B024  006F FF8C  F001    	movff	plusw1,btemp
 18864  01B02A  0EFD               	movlw	-3
 18865  01B02C  006F FF8C  F002    	movff	plusw1,btemp+1
 18866  01B032  0E20               	movlw	32
 18867  01B034  1201               	iorwf	btemp^0,f,c
 18868  01B036  0E00               	movlw	0
 18869  01B038  1202               	iorwf	(btemp+1)^0,f,c
 18870  01B03A  D008               	goto	l3542
 18871  01B03C                     l8210:
 18872                           
 18873                           ;stkvar	_c @ sp[(-2)+-2]
 18874  01B03C  0EFC               	movlw	-4
 18875  01B03E  006F FF8C  F001    	movff	plusw1,btemp
 18876  01B044  0EFD               	movlw	-3
 18877  01B046  006F FF8C  F002    	movff	plusw1,btemp+1
 18878  01B04C                     l3542:
 18879                           
 18880                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18881  01B04C  52E5               	movf	postdec1,f,c
 18882  01B04E  52E5               	movf	postdec1,f,c
 18883  01B050  52E5               	movf	postdec1,f,c
 18884  01B052  52E5               	movf	postdec1,f,c
 18885  01B054  0012               	return		;funcret
 18886  01B056                     __end_of_tolower:
 18887                           	opt callstack 0
 18888                           
 18889 ;; *************** function _isupper *****************
 18890 ;; Defined at:
 18891 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18892 ;; Parameters:    Size  Location     Type
 18893 ;;  c               2  [STACK] int 
 18894 ;; Auto vars:     Size  Location     Type
 18895 ;;		None
 18896 ;; Return value:  Size  Location     Type
 18897 ;;                  2  [STACK] int 
 18898 ;; Registers used:
 18899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18900 ;; Tracked objects:
 18901 ;;		On entry : 0/0
 18902 ;;		On exit  : 0/0
 18903 ;;		Unchanged: 0/0
 18904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18909 ;;Total ram usage:        0 bytes
 18910 ;; Hardware stack levels used:    1
 18911 ;; Hardware stack levels required when called:   15
 18912 ;; This function calls:
 18913 ;;		Nothing
 18914 ;; This function is called by:
 18915 ;;		_efgtoa
 18916 ;;		_xtoa
 18917 ;;		_vfpfcnvrt
 18918 ;;		_tolower
 18919 ;; This function uses a reentrant model
 18920 ;;
 18921                           
 18922                           	psect	text64
 18923  01BE30                     __ptext64:
 18924                           	opt callstack 0
 18925  01BE30                     _isupper:
 18926                           	opt callstack 0
 18927                           
 18928                           ;stkvar	_c @ sp[(0)+-2]
 18929                           
 18930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18931                           ;incstack = 0
 18932 ;; hardware stack exceeded
 18933  01BE30  0EFE               	movlw	-2
 18934  01BE32  50E3               	movf	plusw1,w,c
 18935  01BE34  0FBF               	addlw	191
 18936  01BE36  6E0B               	movwf	(btemp+10)^0,c
 18937  01BE38  0EFF               	movlw	-1
 18938  01BE3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18939  01BE40  0EFF               	movlw	255
 18940  01BE42  220C               	addwfc	(btemp+11)^0,f,c
 18941  01BE44  500C               	movf	(btemp+11)^0,w,c
 18942  01BE46  E106               	bnz	u5530
 18943  01BE48  0E1A               	movlw	26
 18944  01BE4A  5C0B               	subwf	(btemp+10)^0,w,c
 18945  01BE4C  B0D8               	btfsc	status,0,c
 18946  01BE4E  D002               	goto	u5530
 18947  01BE50  0E01               	movlw	1
 18948  01BE52  D001               	goto	u5540
 18949  01BE54                     u5530:
 18950  01BE54  0E00               	movlw	0
 18951  01BE56                     u5540:
 18952  01BE56  6E01               	movwf	btemp^0,c
 18953  01BE58  6A02               	clrf	(btemp+1)^0,c
 18954                           
 18955                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18956  01BE5A  52E5               	movf	postdec1,f,c
 18957  01BE5C  52E5               	movf	postdec1,f,c
 18958  01BE5E  0012               	return		;funcret
 18959  01BE60                     __end_of_isupper:
 18960                           	opt callstack 0
 18961                           
 18962 ;; *************** function _strcpy *****************
 18963 ;; Defined at:
 18964 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18965 ;; Parameters:    Size  Location     Type
 18966 ;;  dest            2  [STACK] PTR unsigned char 
 18967 ;;		 -> dbuf(80), 
 18968 ;;  src             2  [STACK] PTR const unsigned char 
 18969 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18970 ;;		 -> dbuf(80), 
 18971 ;; Auto vars:     Size  Location     Type
 18972 ;;  d               2  [STACK] PTR unsigned char 
 18973 ;;		 -> dbuf(80), 
 18974 ;;  s               2  [STACK] PTR const unsigned char 
 18975 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18976 ;;		 -> dbuf(80), 
 18977 ;; Return value:  Size  Location     Type
 18978 ;;                  2  [STACK] PTR unsigned char 
 18979 ;; Registers used:
 18980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 18981 ;; Tracked objects:
 18982 ;;		On entry : 0/0
 18983 ;;		On exit  : 0/0
 18984 ;;		Unchanged: 0/0
 18985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18990 ;;Total ram usage:        0 bytes
 18991 ;; Hardware stack levels used:    1
 18992 ;; Hardware stack levels required when called:   15
 18993 ;; This function calls:
 18994 ;;		Nothing
 18995 ;; This function is called by:
 18996 ;;		_efgtoa
 18997 ;; This function uses a reentrant model
 18998 ;;
 18999                           
 19000                           	psect	text65
 19001  01A3C6                     __ptext65:
 19002                           	opt callstack 0
 19003  01A3C6                     _strcpy:
 19004                           	opt callstack 0
 19005                           
 19006                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19007  01A3C6  52E6               	movf	postinc1,f,c
 19008  01A3C8  52E6               	movf	postinc1,f,c
 19009  01A3CA  52E6               	movf	postinc1,f,c
 19010  01A3CC  52E6               	movf	postinc1,f,c
 19011                           
 19012                           ;stkvar	_src @ sp[(-4)+-4]
 19013                           
 19014                           ;incstack = 0
 19015 ;; hardware stack exceeded
 19016  01A3CE  0EF8               	movlw	-8
 19017  01A3D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19018  01A3D6  0EF9               	movlw	-7
 19019  01A3D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19020                           
 19021                           ;stkvar	_s @ sp[(-4)+2]
 19022  01A3DE  0EFF               	movlw	-1
 19023  01A3E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 19024  01A3E6  0EFE               	movlw	-2
 19025  01A3E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19026                           
 19027                           ;stkvar	_dest @ sp[(-4)+-2]
 19028  01A3EE  0EFA               	movlw	-6
 19029  01A3F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19030  01A3F6  0EFB               	movlw	-5
 19031  01A3F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19032                           
 19033                           ;stkvar	_d @ sp[(-4)+0]
 19034  01A3FE  0EFD               	movlw	-3
 19035  01A400  0060  F033  FFE3   	movff	btemp+11,plusw1
 19036  01A406  0EFC               	movlw	-4
 19037  01A408  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19038  01A40E                     l12156:
 19039                           
 19040                           ;stkvar	_s @ sp[(-4)+2]
 19041  01A40E  50E1               	movf	fsr1l,w,c
 19042  01A410  0FFE               	addlw	-2
 19043  01A412  6ED9               	movwf	fsr2l,c
 19044  01A414  50E2               	movf	fsr1h,w,c
 19045  01A416  6EDA               	movwf	fsr2h,c
 19046  01A418  0EFF               	movlw	255
 19047  01A41A  22DA               	addwfc	fsr2h,f,c
 19048  01A41C  006F FF7C  F00B    	movff	indf2,btemp+10
 19049  01A422  0E01               	movlw	1
 19050  01A424  26DE               	addwf	postinc2,f,c
 19051  01A426  006F FF7C  F00C    	movff	indf2,btemp+11
 19052  01A42C  0E00               	movlw	0
 19053  01A42E  22DD               	addwfc	postdec2,f,c
 19054  01A430  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 19055  01A436  0060  F033  FFF7   	movff	btemp+11,tblptrh
 19056  01A43C  0E00               	movlw	low (__mediumconst shr (0+16))
 19057  01A43E  6EF8               	movwf	tblptru,c
 19058                           
 19059                           ;stkvar	_d @ sp[(-4)+0]
 19060  01A440  50E1               	movf	fsr1l,w,c
 19061  01A442  0FFC               	addlw	-4
 19062  01A444  6ED9               	movwf	fsr2l,c
 19063  01A446  50E2               	movf	fsr1h,w,c
 19064  01A448  6EDA               	movwf	fsr2h,c
 19065  01A44A  0EFF               	movlw	255
 19066  01A44C  22DA               	addwfc	fsr2h,f,c
 19067  01A44E  006F FF7C  F00B    	movff	indf2,btemp+10
 19068  01A454  0E01               	movlw	1
 19069  01A456  26DE               	addwf	postinc2,f,c
 19070  01A458  006F FF7C  F00C    	movff	indf2,btemp+11
 19071  01A45E  0E00               	movlw	0
 19072  01A460  22DD               	addwfc	postdec2,f,c
 19073  01A462  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 19074  01A468  0060  F033  FFDA   	movff	btemp+11,fsr2h
 19075  01A46E  0E1F               	movlw	(high __ramtop+-1)
 19076  01A470  64F7               	cpfsgt	tblptrh,c
 19077  01A472  D003               	bra	u11047
 19078  01A474  0008               	tblrd		*
 19079  01A476  50F5               	movf	tablat,w,c
 19080  01A478  D007               	bra	u11040
 19081  01A47A                     u11047:
 19082  01A47A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19083  01A480  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19084  01A486  50EF               	movf	indf0,w,c
 19085  01A488                     u11040:
 19086  01A488  6EDF               	movwf	indf2,c
 19087  01A48A  50DF               	movf	indf2,w,c
 19088  01A48C  A4D8               	btfss	status,2,c
 19089  01A48E  D7BF               	goto	l12156
 19090                           
 19091                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 19092  01A490  0EF8               	movlw	248
 19093  01A492  26E1               	addwf	fsr1l,f,c
 19094  01A494  0EFF               	movlw	255
 19095  01A496  22E2               	addwfc	fsr1h,f,c
 19096  01A498  0012               	return		;funcret
 19097  01A49A                     __end_of_strcpy:
 19098                           	opt callstack 0
 19099                           
 19100 ;; *************** function _floorf *****************
 19101 ;; Defined at:
 19102 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 19103 ;; Parameters:    Size  Location     Type
 19104 ;;  x               4  [STACK] float 
 19105 ;; Auto vars:     Size  Location     Type
 19106 ;;  u               4  [STACK] struct .
 19107 ;;  m               4  [STACK] unsigned long 
 19108 ;;  e               2  [STACK] int 
 19109 ;; Return value:  Size  Location     Type
 19110 ;;                  4  [STACK] float 
 19111 ;; Registers used:
 19112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19113 ;; Tracked objects:
 19114 ;;		On entry : 0/0
 19115 ;;		On exit  : 0/0
 19116 ;;		Unchanged: 0/0
 19117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19122 ;;Total ram usage:        0 bytes
 19123 ;; Hardware stack levels used:    1
 19124 ;; Hardware stack levels required when called:   15
 19125 ;; This function calls:
 19126 ;;		Nothing
 19127 ;; This function is called by:
 19128 ;;		_efgtoa
 19129 ;; This function uses a reentrant model
 19130 ;;
 19131                           
 19132                           	psect	text66
 19133  0164C4                     __ptext66:
 19134                           	opt callstack 0
 19135  0164C4                     _floorf:
 19136                           	opt callstack 0
 19137                           
 19138                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19139  0164C4  0E0A               	movlw	10
 19140  0164C6  26E1               	addwf	fsr1l,f,c
 19141  0164C8  0E00               	movlw	0
 19142  0164CA  22E2               	addwfc	fsr1h,f,c
 19143                           
 19144                           ;incstack = 0
 19145 ;; hardware stack exceeded
 19146  0164CC  0060  F79C  F009   	movff	floorf@F524,btemp+8
 19147  0164D2  0060  F7A0  F00A   	movff	floorf@F524+1,btemp+9
 19148  0164D8  0060  F7A4  F00B   	movff	floorf@F524+2,btemp+10
 19149  0164DE  0060  F7A8  F00C   	movff	floorf@F524+3,btemp+11
 19150                           
 19151                           ;stkvar	_u @ sp[(-10)+0]
 19152  0164E4  0EF6               	movlw	-10
 19153  0164E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 19154  0164EC  0EF7               	movlw	-9
 19155  0164EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19156  0164F4  0EF8               	movlw	-8
 19157  0164F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19158  0164FC  0EF9               	movlw	-7
 19159  0164FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19160                           
 19161                           ;stkvar	_x @ sp[(-10)+-4]
 19162  016504  0EF2               	movlw	-14
 19163  016506  006F FF8C  F009    	movff	plusw1,btemp+8
 19164  01650C  0EF3               	movlw	-13
 19165  01650E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19166  016514  0EF4               	movlw	-12
 19167  016516  006F FF8C  F00B    	movff	plusw1,btemp+10
 19168  01651C  0EF5               	movlw	-11
 19169  01651E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19170                           
 19171                           ;stkvar	_u @ sp[(-10)+0]
 19172  016524  0EF6               	movlw	-10
 19173  016526  0060  F027  FFE3   	movff	btemp+8,plusw1
 19174  01652C  0EF7               	movlw	-9
 19175  01652E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19176  016534  0EF8               	movlw	-8
 19177  016536  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19178  01653C  0EF9               	movlw	-7
 19179  01653E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19180  016544  0E81               	movlw	129
 19181  016546  6E0B               	movwf	(btemp+10)^0,c
 19182  016548  0EFF               	movlw	255
 19183  01654A  6E0C               	movwf	(btemp+11)^0,c
 19184                           
 19185                           ;stkvar	_u @ sp[(-10)+0]
 19186  01654C  0EF6               	movlw	-10
 19187  01654E  006F FF8C  F005    	movff	plusw1,btemp+4
 19188  016554  0EF7               	movlw	-9
 19189  016556  006F FF8C  F006    	movff	plusw1,btemp+5
 19190  01655C  0EF8               	movlw	-8
 19191  01655E  006F FF8C  F007    	movff	plusw1,btemp+6
 19192  016564  0EF9               	movlw	-7
 19193  016566  006F FF8C  F008    	movff	plusw1,btemp+7
 19194  01656C  0E18               	movlw	24
 19195  01656E  D005               	goto	u6210
 19196  016570                     u6215:
 19197  016570  90D8               	bcf	status,0,c
 19198  016572  3208               	rrcf	(btemp+7)^0,f,c
 19199  016574  3207               	rrcf	(btemp+6)^0,f,c
 19200  016576  3206               	rrcf	(btemp+5)^0,f,c
 19201  016578  3205               	rrcf	(btemp+4)^0,f,c
 19202  01657A                     u6210:
 19203  01657A  2EE8               	decfsz	wreg,f,c
 19204  01657C  D7F9               	goto	u6215
 19205  01657E  0060  F014  F009   	movff	btemp+4,btemp+8
 19206  016584  0060  F018  F00A   	movff	btemp+5,btemp+9
 19207  01658A  0EFF               	movlw	255
 19208  01658C  1609               	andwf	(btemp+8)^0,f,c
 19209  01658E  0E00               	movlw	0
 19210  016590  160A               	andwf	(btemp+9)^0,f,c
 19211  016592  500B               	movf	(btemp+10)^0,w,c
 19212  016594  2609               	addwf	(btemp+8)^0,f,c
 19213  016596  500C               	movf	(btemp+11)^0,w,c
 19214  016598  220A               	addwfc	(btemp+9)^0,f,c
 19215                           
 19216                           ;stkvar	_e @ sp[(-10)+8]
 19217  01659A  0EFE               	movlw	-2
 19218  01659C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19219  0165A2  0EFF               	movlw	-1
 19220  0165A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19221                           
 19222                           ;stkvar	_e @ sp[(-10)+8]
 19223  0165AA  0EFF               	movlw	-1
 19224  0165AC  BEE3               	btfsc	plusw1,7,c
 19225  0165AE  D019               	goto	l8224
 19226  0165B0  0EFF               	movlw	-1
 19227  0165B2  50E3               	movf	plusw1,w,c
 19228  0165B4  E108               	bnz	u6220
 19229  0165B6  0EFE               	movlw	-2
 19230  0165B8  006F FF8C  F001    	movff	plusw1,btemp
 19231  0165BE  0E17               	movlw	23
 19232  0165C0  5E01               	subwf	btemp^0,f,c
 19233  0165C2  A0D8               	btfss	status,0,c
 19234  0165C4  D00E               	goto	l8224
 19235  0165C6                     u6220:
 19236                           
 19237                           ;stkvar	_x @ sp[(-10)+-4]
 19238  0165C6  0EF2               	movlw	-14
 19239  0165C8  006F FF8C  F001    	movff	plusw1,btemp
 19240  0165CE  0EF3               	movlw	-13
 19241  0165D0  006F FF8C  F002    	movff	plusw1,btemp+1
 19242  0165D6  0EF4               	movlw	-12
 19243  0165D8  006F FF8C  F003    	movff	plusw1,btemp+2
 19244  0165DE  0EF5               	movlw	-11
 19245  0165E0  D11F               	goto	L21
 19246  0165E2                     l8224:
 19247                           
 19248                           ;stkvar	_e @ sp[(-10)+8]
 19249  0165E2  0EFF               	movlw	-1
 19250  0165E4  BEE3               	btfsc	plusw1,7,c
 19251  0165E6  D0B4               	goto	l8240
 19252                           
 19253                           ;stkvar	_e @ sp[(-10)+8]
 19254  0165E8  0EFE               	movlw	-2
 19255  0165EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19256  0165F0  0EFF               	movlw	255
 19257  0165F2  6E05               	movwf	(btemp+4)^0,c
 19258  0165F4  0EFF               	movlw	255
 19259  0165F6  6E06               	movwf	(btemp+5)^0,c
 19260  0165F8  0E7F               	movlw	127
 19261  0165FA  6E07               	movwf	(btemp+6)^0,c
 19262  0165FC  0E00               	movlw	0
 19263  0165FE  6E08               	movwf	(btemp+7)^0,c
 19264  016600                     u6245:
 19265  016600  660C               	tstfsz	(btemp+11)^0,c
 19266  016602  D001               	goto	u6246
 19267  016604  D007               	goto	u6247
 19268  016606                     u6246:
 19269  016606  3408               	rlcf	(btemp+7)^0,w,c
 19270  016608  3208               	rrcf	(btemp+7)^0,f,c
 19271  01660A  3207               	rrcf	(btemp+6)^0,f,c
 19272  01660C  3206               	rrcf	(btemp+5)^0,f,c
 19273  01660E  3205               	rrcf	(btemp+4)^0,f,c
 19274  016610  2E0C               	decfsz	(btemp+11)^0,f,c
 19275  016612  D7F6               	goto	u6245
 19276  016614                     u6247:
 19277                           
 19278                           ;stkvar	_m @ sp[(-10)+4]
 19279  016614  0EFA               	movlw	-6
 19280  016616  0060  F017  FFE3   	movff	btemp+4,plusw1
 19281  01661C  0EFB               	movlw	-5
 19282  01661E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 19283  016624  0EFC               	movlw	-4
 19284  016626  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19285  01662C  0EFD               	movlw	-3
 19286  01662E  0060  F023  FFE3   	movff	btemp+7,plusw1
 19287                           
 19288                           ;stkvar	_m @ sp[(-10)+4]
 19289                           ;stkvar	_u @ sp[(-10)+0]
 19290  016634  0EF6               	movlw	-10
 19291  016636  006F FF8C  F009    	movff	plusw1,btemp+8
 19292  01663C  0EF7               	movlw	-9
 19293  01663E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19294  016644  0EF8               	movlw	-8
 19295  016646  006F FF8C  F00B    	movff	plusw1,btemp+10
 19296  01664C  0EF9               	movlw	-7
 19297  01664E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19298  016654  0EFA               	movlw	-6
 19299  016656  50E3               	movf	plusw1,w,c
 19300  016658  1609               	andwf	(btemp+8)^0,f,c
 19301  01665A  0EFB               	movlw	-5
 19302  01665C  50E3               	movf	plusw1,w,c
 19303  01665E  160A               	andwf	(btemp+9)^0,f,c
 19304  016660  0EFC               	movlw	-4
 19305  016662  50E3               	movf	plusw1,w,c
 19306  016664  160B               	andwf	(btemp+10)^0,f,c
 19307  016666  0EFD               	movlw	-3
 19308  016668  50E3               	movf	plusw1,w,c
 19309  01666A  160C               	andwf	(btemp+11)^0,f,c
 19310  01666C  5009               	movf	(btemp+8)^0,w,c
 19311  01666E  100A               	iorwf	(btemp+9)^0,w,c
 19312  016670  100B               	iorwf	(btemp+10)^0,w,c
 19313  016672  100C               	iorwf	(btemp+11)^0,w,c
 19314  016674  B4D8               	btfsc	status,2,c
 19315  016676  D7A7               	goto	u6220
 19316                           
 19317                           ;stkvar	_u @ sp[(-10)+0]
 19318  016678  0EF6               	movlw	-10
 19319  01667A  006F FF8C  F009    	movff	plusw1,btemp+8
 19320  016680  0EF7               	movlw	-9
 19321  016682  006F FF8C  F00A    	movff	plusw1,btemp+9
 19322  016688  0EF8               	movlw	-8
 19323  01668A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19324  016690  0EF9               	movlw	-7
 19325  016692  006F FF8C  F00C    	movff	plusw1,btemp+11
 19326  016698  0E20               	movlw	32
 19327  01669A  D005               	goto	u6260
 19328  01669C                     u6265:
 19329  01669C  90D8               	bcf	status,0,c
 19330  01669E  320C               	rrcf	(btemp+11)^0,f,c
 19331  0166A0  320B               	rrcf	(btemp+10)^0,f,c
 19332  0166A2  320A               	rrcf	(btemp+9)^0,f,c
 19333  0166A4  3209               	rrcf	(btemp+8)^0,f,c
 19334  0166A6                     u6260:
 19335  0166A6  2EE8               	decfsz	wreg,f,c
 19336  0166A8  D7F9               	goto	u6265
 19337  0166AA  5009               	movf	(btemp+8)^0,w,c
 19338  0166AC  B4D8               	btfsc	status,2,c
 19339  0166AE  D028               	goto	l8238
 19340                           
 19341                           ;stkvar	_m @ sp[(-10)+4]
 19342                           ;stkvar	_u @ sp[(-10)+0]
 19343  0166B0  0EF6               	movlw	-10
 19344  0166B2  50E3               	movf	plusw1,w,c
 19345  0166B4  6E01               	movwf	btemp^0,c
 19346  0166B6  0EFA               	movlw	-6
 19347  0166B8  50E3               	movf	plusw1,w,c
 19348  0166BA  2601               	addwf	btemp^0,f,c
 19349  0166BC  0EF6               	movlw	-10
 19350  0166BE  0060  F007  FFE3   	movff	btemp,plusw1
 19351  0166C4  0EF7               	movlw	-9
 19352  0166C6  50E3               	movf	plusw1,w,c
 19353  0166C8  6E01               	movwf	btemp^0,c
 19354  0166CA  0EFB               	movlw	-5
 19355  0166CC  50E3               	movf	plusw1,w,c
 19356  0166CE  2201               	addwfc	btemp^0,f,c
 19357  0166D0  0EF7               	movlw	-9
 19358  0166D2  0060  F007  FFE3   	movff	btemp,plusw1
 19359  0166D8  0EF8               	movlw	-8
 19360  0166DA  50E3               	movf	plusw1,w,c
 19361  0166DC  6E01               	movwf	btemp^0,c
 19362  0166DE  0EFC               	movlw	-4
 19363  0166E0  50E3               	movf	plusw1,w,c
 19364  0166E2  2201               	addwfc	btemp^0,f,c
 19365  0166E4  0EF8               	movlw	-8
 19366  0166E6  0060  F007  FFE3   	movff	btemp,plusw1
 19367  0166EC  0EF9               	movlw	-7
 19368  0166EE  50E3               	movf	plusw1,w,c
 19369  0166F0  6E01               	movwf	btemp^0,c
 19370  0166F2  0EFD               	movlw	-3
 19371  0166F4  50E3               	movf	plusw1,w,c
 19372  0166F6  2201               	addwfc	btemp^0,f,c
 19373  0166F8  0EF9               	movlw	-7
 19374  0166FA  0060  F007  FFE3   	movff	btemp,plusw1
 19375  016700                     l8238:
 19376                           
 19377                           ;stkvar	_m @ sp[(-10)+4]
 19378  016700  0EFA               	movlw	-6
 19379  016702  006F FF8C  F009    	movff	plusw1,btemp+8
 19380  016708  0EFB               	movlw	-5
 19381  01670A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19382  016710  0EFC               	movlw	-4
 19383  016712  006F FF8C  F00B    	movff	plusw1,btemp+10
 19384  016718  0EFD               	movlw	-3
 19385  01671A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19386  016720  1C09               	comf	(btemp+8)^0,w,c
 19387  016722  6E05               	movwf	(btemp+4)^0,c
 19388  016724  1C0A               	comf	(btemp+9)^0,w,c
 19389  016726  6E06               	movwf	(btemp+5)^0,c
 19390  016728  1C0B               	comf	(btemp+10)^0,w,c
 19391  01672A  6E07               	movwf	(btemp+6)^0,c
 19392  01672C  1C0C               	comf	(btemp+11)^0,w,c
 19393  01672E  6E08               	movwf	(btemp+7)^0,c
 19394                           
 19395                           ;stkvar	_u @ sp[(-10)+0]
 19396  016730  50E1               	movf	fsr1l,w,c
 19397  016732  0FF6               	addlw	-10
 19398  016734  6ED9               	movwf	fsr2l,c
 19399  016736  50E2               	movf	fsr1h,w,c
 19400  016738  6EDA               	movwf	fsr2h,c
 19401  01673A  0EFF               	movlw	255
 19402  01673C  22DA               	addwfc	fsr2h,f,c
 19403  01673E  5005               	movf	(btemp+4)^0,w,c
 19404  016740  16DE               	andwf	postinc2,f,c
 19405  016742  5006               	movf	(btemp+5)^0,w,c
 19406  016744  16DE               	andwf	postinc2,f,c
 19407  016746  5007               	movf	(btemp+6)^0,w,c
 19408  016748  16DE               	andwf	postinc2,f,c
 19409  01674A  5008               	movf	(btemp+7)^0,w,c
 19410  01674C  16DE               	andwf	postinc2,f,c
 19411  01674E  D05B               	goto	l8248
 19412  016750                     l8240:
 19413                           
 19414                           ;stkvar	_u @ sp[(-10)+0]
 19415  016750  0EF6               	movlw	-10
 19416  016752  006F FF8C  F009    	movff	plusw1,btemp+8
 19417  016758  0EF7               	movlw	-9
 19418  01675A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19419  016760  0EF8               	movlw	-8
 19420  016762  006F FF8C  F00B    	movff	plusw1,btemp+10
 19421  016768  0EF9               	movlw	-7
 19422  01676A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19423  016770  0E20               	movlw	32
 19424  016772  D005               	goto	u6280
 19425  016774                     u6285:
 19426  016774  90D8               	bcf	status,0,c
 19427  016776  320C               	rrcf	(btemp+11)^0,f,c
 19428  016778  320B               	rrcf	(btemp+10)^0,f,c
 19429  01677A  320A               	rrcf	(btemp+9)^0,f,c
 19430  01677C  3209               	rrcf	(btemp+8)^0,f,c
 19431  01677E                     u6280:
 19432  01677E  2EE8               	decfsz	wreg,f,c
 19433  016780  D7F9               	goto	u6285
 19434  016782  6609               	tstfsz	(btemp+8)^0,c
 19435  016784  D009               	goto	l8244
 19436                           
 19437                           ;stkvar	_u @ sp[(-10)+0]
 19438  016786  0EF6               	movlw	-10
 19439  016788  6AE3               	clrf	plusw1,c
 19440  01678A  0EF7               	movlw	-9
 19441  01678C  6AE3               	clrf	plusw1,c
 19442  01678E  0EF8               	movlw	-8
 19443  016790  6AE3               	clrf	plusw1,c
 19444  016792  0EF9               	movlw	-7
 19445  016794  6AE3               	clrf	plusw1,c
 19446  016796  D037               	goto	l8248
 19447  016798                     l8244:
 19448                           
 19449                           ;stkvar	_u @ sp[(-10)+0]
 19450  016798  0EF6               	movlw	-10
 19451  01679A  006F FF8C  F009    	movff	plusw1,btemp+8
 19452  0167A0  0EF7               	movlw	-9
 19453  0167A2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19454  0167A8  0EF8               	movlw	-8
 19455  0167AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19456  0167B0  0EF9               	movlw	-7
 19457  0167B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19458  0167B8  90D8               	bcf	status,0,c
 19459  0167BA  3409               	rlcf	(btemp+8)^0,w,c
 19460  0167BC  6E05               	movwf	(btemp+4)^0,c
 19461  0167BE  340A               	rlcf	(btemp+9)^0,w,c
 19462  0167C0  6E06               	movwf	(btemp+5)^0,c
 19463  0167C2  340B               	rlcf	(btemp+10)^0,w,c
 19464  0167C4  6E07               	movwf	(btemp+6)^0,c
 19465  0167C6  340C               	rlcf	(btemp+11)^0,w,c
 19466  0167C8  6E08               	movwf	(btemp+7)^0,c
 19467  0167CA  5005               	movf	(btemp+4)^0,w,c
 19468  0167CC  1006               	iorwf	(btemp+5)^0,w,c
 19469  0167CE  1007               	iorwf	(btemp+6)^0,w,c
 19470  0167D0  1008               	iorwf	(btemp+7)^0,w,c
 19471  0167D2  B4D8               	btfsc	status,2,c
 19472  0167D4  D018               	goto	l8248
 19473  0167D6  0E00               	movlw	0
 19474  0167D8  6E09               	movwf	(btemp+8)^0,c
 19475  0167DA  0E00               	movlw	0
 19476  0167DC  6E0A               	movwf	(btemp+9)^0,c
 19477  0167DE  0E80               	movlw	128
 19478  0167E0  6E0B               	movwf	(btemp+10)^0,c
 19479  0167E2  0EBF               	movlw	191
 19480  0167E4  6E0C               	movwf	(btemp+11)^0,c
 19481                           
 19482                           ;stkvar	_u @ sp[(-10)+0]
 19483  0167E6  0EF6               	movlw	-10
 19484  0167E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 19485  0167EE  0EF7               	movlw	-9
 19486  0167F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19487  0167F6  0EF8               	movlw	-8
 19488  0167F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19489  0167FE  0EF9               	movlw	-7
 19490  016800  0060  F033  FFE3   	movff	btemp+11,plusw1
 19491  016806                     l8248:
 19492                           
 19493                           ;stkvar	_u @ sp[(-10)+0]
 19494  016806  0EF6               	movlw	-10
 19495  016808  006F FF8C  F001    	movff	plusw1,btemp
 19496  01680E  0EF7               	movlw	-9
 19497  016810  006F FF8C  F002    	movff	plusw1,btemp+1
 19498  016816  0EF8               	movlw	-8
 19499  016818  006F FF8C  F003    	movff	plusw1,btemp+2
 19500  01681E  0EF9               	movlw	-7
 19501  016820                     L21:
 19502  016820  006F FF8C  F004    	movff	plusw1,btemp+3
 19503                           
 19504                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19505  016826  0EF2               	movlw	242
 19506  016828  26E1               	addwf	fsr1l,f,c
 19507  01682A  0EFF               	movlw	255
 19508  01682C  22E2               	addwfc	fsr1h,f,c
 19509  01682E  0012               	return		;funcret
 19510  016830                     __end_of_floorf:
 19511                           	opt callstack 0
 19512                           
 19513 ;; *************** function ___fpclassifyf *****************
 19514 ;; Defined at:
 19515 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19516 ;; Parameters:    Size  Location     Type
 19517 ;;  x               4  [STACK] float 
 19518 ;; Auto vars:     Size  Location     Type
 19519 ;;  u               4  [STACK] struct .
 19520 ;;  e               2  [STACK] int 
 19521 ;; Return value:  Size  Location     Type
 19522 ;;                  2  [STACK] int 
 19523 ;; Registers used:
 19524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19525 ;; Tracked objects:
 19526 ;;		On entry : 0/0
 19527 ;;		On exit  : 0/0
 19528 ;;		Unchanged: 0/0
 19529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19534 ;;Total ram usage:        0 bytes
 19535 ;; Hardware stack levels used:    1
 19536 ;; Hardware stack levels required when called:   15
 19537 ;; This function calls:
 19538 ;;		Nothing
 19539 ;; This function is called by:
 19540 ;;		_efgtoa
 19541 ;; This function uses a reentrant model
 19542 ;;
 19543                           
 19544                           	psect	text67
 19545  018C06                     __ptext67:
 19546                           	opt callstack 0
 19547  018C06                     ___fpclassifyf:
 19548                           	opt callstack 0
 19549                           
 19550                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19551  018C06  0E06               	movlw	6
 19552  018C08  26E1               	addwf	fsr1l,f,c
 19553  018C0A  0E00               	movlw	0
 19554  018C0C  22E2               	addwfc	fsr1h,f,c
 19555                           
 19556                           ;incstack = 0
 19557 ;; hardware stack exceeded
 19558  018C0E  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19559  018C14  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19560  018C1A  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19561  018C20  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19562                           
 19563                           ;stkvar	_u @ sp[(-6)+0]
 19564  018C26  0EFA               	movlw	-6
 19565  018C28  0060  F027  FFE3   	movff	btemp+8,plusw1
 19566  018C2E  0EFB               	movlw	-5
 19567  018C30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19568  018C36  0EFC               	movlw	-4
 19569  018C38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19570  018C3E  0EFD               	movlw	-3
 19571  018C40  0060  F033  FFE3   	movff	btemp+11,plusw1
 19572                           
 19573                           ;stkvar	_x @ sp[(-6)+-4]
 19574  018C46  0EF6               	movlw	-10
 19575  018C48  006F FF8C  F009    	movff	plusw1,btemp+8
 19576  018C4E  0EF7               	movlw	-9
 19577  018C50  006F FF8C  F00A    	movff	plusw1,btemp+9
 19578  018C56  0EF8               	movlw	-8
 19579  018C58  006F FF8C  F00B    	movff	plusw1,btemp+10
 19580  018C5E  0EF9               	movlw	-7
 19581  018C60  006F FF8C  F00C    	movff	plusw1,btemp+11
 19582                           
 19583                           ;stkvar	_u @ sp[(-6)+0]
 19584  018C66  0EFA               	movlw	-6
 19585  018C68  0060  F027  FFE3   	movff	btemp+8,plusw1
 19586  018C6E  0EFB               	movlw	-5
 19587  018C70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19588  018C76  0EFC               	movlw	-4
 19589  018C78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19590  018C7E  0EFD               	movlw	-3
 19591  018C80  0060  F033  FFE3   	movff	btemp+11,plusw1
 19592                           
 19593                           ;stkvar	_u @ sp[(-6)+0]
 19594  018C86  0EFA               	movlw	-6
 19595  018C88  006F FF8C  F009    	movff	plusw1,btemp+8
 19596  018C8E  0EFB               	movlw	-5
 19597  018C90  006F FF8C  F00A    	movff	plusw1,btemp+9
 19598  018C96  0EFC               	movlw	-4
 19599  018C98  006F FF8C  F00B    	movff	plusw1,btemp+10
 19600  018C9E  0EFD               	movlw	-3
 19601  018CA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19602  018CA6  0E18               	movlw	24
 19603  018CA8  D005               	goto	u6090
 19604  018CAA                     u6095:
 19605  018CAA  90D8               	bcf	status,0,c
 19606  018CAC  320C               	rrcf	(btemp+11)^0,f,c
 19607  018CAE  320B               	rrcf	(btemp+10)^0,f,c
 19608  018CB0  320A               	rrcf	(btemp+9)^0,f,c
 19609  018CB2  3209               	rrcf	(btemp+8)^0,f,c
 19610  018CB4                     u6090:
 19611  018CB4  2EE8               	decfsz	wreg,f,c
 19612  018CB6  D7F9               	goto	u6095
 19613  018CB8  0060  F024  F007   	movff	btemp+8,btemp+6
 19614  018CBE  0060  F028  F008   	movff	btemp+9,btemp+7
 19615  018CC4  0EFF               	movlw	255
 19616  018CC6  1607               	andwf	(btemp+6)^0,f,c
 19617  018CC8  0E00               	movlw	0
 19618  018CCA  1608               	andwf	(btemp+7)^0,f,c
 19619                           
 19620                           ;stkvar	_e @ sp[(-6)+4]
 19621  018CCC  0EFE               	movlw	-2
 19622  018CCE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19623  018CD4  0EFF               	movlw	-1
 19624  018CD6  0060  F023  FFE3   	movff	btemp+7,plusw1
 19625                           
 19626                           ;stkvar	_e @ sp[(-6)+4]
 19627  018CDC  0EFE               	movlw	-2
 19628  018CDE  006F FF8C  F001    	movff	plusw1,btemp
 19629  018CE4  0EFF               	movlw	-1
 19630  018CE6  50E3               	movf	plusw1,w,c
 19631  018CE8  1001               	iorwf	btemp^0,w,c
 19632  018CEA  A4D8               	btfss	status,2,c
 19633  018CEC  D023               	goto	l8186
 19634                           
 19635                           ;stkvar	_u @ sp[(-6)+0]
 19636  018CEE  0EFA               	movlw	-6
 19637  018CF0  006F FF8C  F009    	movff	plusw1,btemp+8
 19638  018CF6  0EFB               	movlw	-5
 19639  018CF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 19640  018CFE  0EFC               	movlw	-4
 19641  018D00  006F FF8C  F00B    	movff	plusw1,btemp+10
 19642  018D06  0EFD               	movlw	-3
 19643  018D08  006F FF8C  F00C    	movff	plusw1,btemp+11
 19644  018D0E  90D8               	bcf	status,0,c
 19645  018D10  3409               	rlcf	(btemp+8)^0,w,c
 19646  018D12  6E05               	movwf	(btemp+4)^0,c
 19647  018D14  340A               	rlcf	(btemp+9)^0,w,c
 19648  018D16  6E06               	movwf	(btemp+5)^0,c
 19649  018D18  340B               	rlcf	(btemp+10)^0,w,c
 19650  018D1A  6E07               	movwf	(btemp+6)^0,c
 19651  018D1C  340C               	rlcf	(btemp+11)^0,w,c
 19652  018D1E  6E08               	movwf	(btemp+7)^0,c
 19653  018D20  5005               	movf	(btemp+4)^0,w,c
 19654  018D22  1006               	iorwf	(btemp+5)^0,w,c
 19655  018D24  1007               	iorwf	(btemp+6)^0,w,c
 19656  018D26  1008               	iorwf	(btemp+7)^0,w,c
 19657  018D28  A4D8               	btfss	status,2,c
 19658  018D2A  D002               	goto	l8182
 19659  018D2C  0E02               	movlw	2
 19660  018D2E  D02E               	goto	L22
 19661  018D30                     l8182:
 19662  018D30  0E03               	movlw	3
 19663  018D32  D02C               	goto	L22
 19664  018D34                     l8186:
 19665                           
 19666                           ;stkvar	_e @ sp[(-6)+4]
 19667  018D34  0EFE               	movlw	-2
 19668  018D36  28E3               	incf	plusw1,w,c
 19669  018D38  E128               	bnz	l8192
 19670  018D3A  0EFF               	movlw	-1
 19671  018D3C  50E3               	movf	plusw1,w,c
 19672  018D3E  A4D8               	btfss	status,2,c
 19673  018D40  D024               	goto	l8192
 19674                           
 19675                           ;stkvar	_u @ sp[(-6)+0]
 19676  018D42  0EFA               	movlw	-6
 19677  018D44  006F FF8C  F009    	movff	plusw1,btemp+8
 19678  018D4A  0EFB               	movlw	-5
 19679  018D4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19680  018D52  0EFC               	movlw	-4
 19681  018D54  006F FF8C  F00B    	movff	plusw1,btemp+10
 19682  018D5A  0EFD               	movlw	-3
 19683  018D5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19684  018D62  0E09               	movlw	9
 19685  018D64                     u6135:
 19686  018D64  90D8               	bcf	status,0,c
 19687  018D66  3609               	rlcf	(btemp+8)^0,f,c
 19688  018D68  360A               	rlcf	(btemp+9)^0,f,c
 19689  018D6A  360B               	rlcf	(btemp+10)^0,f,c
 19690  018D6C  360C               	rlcf	(btemp+11)^0,f,c
 19691  018D6E  2EE8               	decfsz	wreg,f,c
 19692  018D70  D7F9               	goto	u6135
 19693  018D72  5009               	movf	(btemp+8)^0,w,c
 19694  018D74  100A               	iorwf	(btemp+9)^0,w,c
 19695  018D76  100B               	iorwf	(btemp+10)^0,w,c
 19696  018D78  100C               	iorwf	(btemp+11)^0,w,c
 19697  018D7A  A4D8               	btfss	status,2,c
 19698  018D7C  D002               	goto	u6140
 19699  018D7E  0E01               	movlw	1
 19700  018D80  D001               	goto	u6150
 19701  018D82                     u6140:
 19702  018D82  0E00               	movlw	0
 19703  018D84                     u6150:
 19704  018D84  6E01               	movwf	btemp^0,c
 19705  018D86  6A02               	clrf	(btemp+1)^0,c
 19706  018D88  D004               	goto	l3152
 19707  018D8A                     l8192:
 19708  018D8A  0E04               	movlw	4
 19709  018D8C                     L22:
 19710  018D8C  6E01               	movwf	btemp^0,c
 19711  018D8E  0E00               	movlw	0
 19712  018D90  6E02               	movwf	(btemp+1)^0,c
 19713  018D92                     l3152:
 19714                           
 19715                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 19716  018D92  0EF6               	movlw	246
 19717  018D94  26E1               	addwf	fsr1l,f,c
 19718  018D96  0EFF               	movlw	255
 19719  018D98  22E2               	addwfc	fsr1h,f,c
 19720  018D9A  0012               	return		;funcret
 19721  018D9C                     __end_of___fpclassifyf:
 19722                           	opt callstack 0
 19723                           
 19724 ;; *************** function ___fltol *****************
 19725 ;; Defined at:
 19726 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 19727 ;; Parameters:    Size  Location     Type
 19728 ;;  f1              4  [STACK] int 
 19729 ;; Auto vars:     Size  Location     Type
 19730 ;;  exp1            1  [STACK] unsigned char 
 19731 ;;  sign1           1  [STACK] unsigned char 
 19732 ;; Return value:  Size  Location     Type
 19733 ;;                  4  [STACK] long 
 19734 ;; Registers used:
 19735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 19736 ;; Tracked objects:
 19737 ;;		On entry : 0/0
 19738 ;;		On exit  : 0/0
 19739 ;;		Unchanged: 0/0
 19740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19745 ;;Total ram usage:        0 bytes
 19746 ;; Hardware stack levels used:    1
 19747 ;; Hardware stack levels required when called:   15
 19748 ;; This function calls:
 19749 ;;		Nothing
 19750 ;; This function is called by:
 19751 ;;		_main
 19752 ;;		_convert_dac_raw
 19753 ;;		_calc_bsoc
 19754 ;;		_init_bsoc
 19755 ;;		_efgtoa
 19756 ;; This function uses a reentrant model
 19757 ;;
 19758                           
 19759                           	psect	text68
 19760  0190A2                     __ptext68:
 19761                           	opt callstack 0
 19762  0190A2                     ___fltol:
 19763                           	opt callstack 0
 19764                           
 19765                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19766  0190A2  52E6               	movf	postinc1,f,c
 19767  0190A4  52E6               	movf	postinc1,f,c
 19768                           
 19769                           ;stkvar	_f1 @ sp[(-2)+-4]
 19770                           
 19771                           ;incstack = 0
 19772 ;; hardware stack exceeded
 19773  0190A6  0EFA               	movlw	-6
 19774  0190A8  006F FF8C  F009    	movff	plusw1,btemp+8
 19775  0190AE  0EFB               	movlw	-5
 19776  0190B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 19777  0190B6  0EFC               	movlw	-4
 19778  0190B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19779  0190BE  0EFD               	movlw	-3
 19780  0190C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19781  0190C6  0E18               	movlw	24
 19782  0190C8  D005               	goto	u7300
 19783  0190CA                     u7305:
 19784  0190CA  90D8               	bcf	status,0,c
 19785  0190CC  320C               	rrcf	(btemp+11)^0,f,c
 19786  0190CE  320B               	rrcf	(btemp+10)^0,f,c
 19787  0190D0  320A               	rrcf	(btemp+9)^0,f,c
 19788  0190D2  3209               	rrcf	(btemp+8)^0,f,c
 19789  0190D4                     u7300:
 19790  0190D4  2EE8               	decfsz	wreg,f,c
 19791  0190D6  D7F9               	goto	u7305
 19792                           
 19793                           ;stkvar	_exp1 @ sp[(-2)+0]
 19794  0190D8  0EFE               	movlw	-2
 19795  0190DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19796  0190E0  0EFE               	movlw	-2
 19797  0190E2  50E3               	movf	plusw1,w,c
 19798  0190E4  A4D8               	btfss	status,2,c
 19799  0190E6  D006               	goto	l8812
 19800  0190E8                     u7310:
 19801  0190E8  0E00               	movlw	0
 19802  0190EA  6E01               	movwf	btemp^0,c
 19803  0190EC  6A02               	clrf	(btemp+1)^0,c
 19804  0190EE  6A03               	clrf	(btemp+2)^0,c
 19805  0190F0  6A04               	clrf	(btemp+3)^0,c
 19806  0190F2  D08B               	goto	l2768
 19807  0190F4                     l8812:
 19808                           
 19809                           ;stkvar	_f1 @ sp[(-2)+-4]
 19810  0190F4  0EFA               	movlw	-6
 19811  0190F6  006F FF8C  F009    	movff	plusw1,btemp+8
 19812  0190FC  0EFB               	movlw	-5
 19813  0190FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19814  019104  0EFC               	movlw	-4
 19815  019106  006F FF8C  F00B    	movff	plusw1,btemp+10
 19816  01910C  0EFD               	movlw	-3
 19817  01910E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19818  019114  0E20               	movlw	32
 19819  019116  D005               	goto	u7320
 19820  019118                     u7325:
 19821  019118  90D8               	bcf	status,0,c
 19822  01911A  320C               	rrcf	(btemp+11)^0,f,c
 19823  01911C  320B               	rrcf	(btemp+10)^0,f,c
 19824  01911E  320A               	rrcf	(btemp+9)^0,f,c
 19825  019120  3209               	rrcf	(btemp+8)^0,f,c
 19826  019122                     u7320:
 19827  019122  2EE8               	decfsz	wreg,f,c
 19828  019124  D7F9               	goto	u7325
 19829                           
 19830                           ;stkvar	_sign1 @ sp[(-2)+1]
 19831  019126  0EFF               	movlw	-1
 19832  019128  0060  F027  FFE3   	movff	btemp+8,plusw1
 19833                           
 19834                           ;stkvar	_f1 @ sp[(-2)+-4]
 19835  01912E  0EFC               	movlw	-4
 19836  019130  8EE3               	bsf	plusw1,7,c
 19837                           
 19838                           ;stkvar	_f1 @ sp[(-2)+-4]
 19839  019132  50E1               	movf	fsr1l,w,c
 19840  019134  0FFA               	addlw	-6
 19841  019136  6ED9               	movwf	fsr2l,c
 19842  019138  50E2               	movf	fsr1h,w,c
 19843  01913A  6EDA               	movwf	fsr2h,c
 19844  01913C  0EFF               	movlw	255
 19845  01913E  22DA               	addwfc	fsr2h,f,c
 19846  019140  0EFF               	movlw	255
 19847  019142  16DE               	andwf	postinc2,f,c
 19848  019144  0EFF               	movlw	255
 19849  019146  16DE               	andwf	postinc2,f,c
 19850  019148  0EFF               	movlw	255
 19851  01914A  16DE               	andwf	postinc2,f,c
 19852  01914C  0E00               	movlw	0
 19853  01914E  16DE               	andwf	postinc2,f,c
 19854                           
 19855                           ;stkvar	_exp1 @ sp[(-2)+0]
 19856  019150  0EFE               	movlw	-2
 19857  019152  006F FF8C  F001    	movff	plusw1,btemp
 19858  019158  0E96               	movlw	150
 19859  01915A  5E01               	subwf	btemp^0,f,c
 19860  01915C  0EFE               	movlw	-2
 19861  01915E  0060  F007  FFE3   	movff	btemp,plusw1
 19862                           
 19863                           ;stkvar	_exp1 @ sp[(-2)+0]
 19864  019164  0EFE               	movlw	-2
 19865  019166  AEE3               	btfss	plusw1,7,c
 19866  019168  D014               	goto	l8830
 19867                           
 19868                           ;stkvar	_exp1 @ sp[(-2)+0]
 19869  01916A  0EFE               	movlw	-2
 19870  01916C  50E3               	movf	plusw1,w,c
 19871  01916E  0A80               	xorlw	128
 19872  019170  0F97               	addlw	151
 19873  019172  A0D8               	btfss	status,0,c
 19874  019174  D7B9               	goto	u7310
 19875  019176                     l8828:
 19876                           
 19877                           ;stkvar	_f1 @ sp[(-2)+-4]
 19878  019176  90D8               	bcf	status,0,c
 19879  019178  0EFD               	movlw	-3
 19880  01917A  32E3               	rrcf	plusw1,f,c
 19881  01917C  0EFC               	movlw	-4
 19882  01917E  32E3               	rrcf	plusw1,f,c
 19883  019180  0EFB               	movlw	-5
 19884  019182  32E3               	rrcf	plusw1,f,c
 19885  019184  0EFA               	movlw	-6
 19886  019186  32E3               	rrcf	plusw1,f,c
 19887                           
 19888                           ;stkvar	_exp1 @ sp[(-2)+0]
 19889  019188  0EFE               	movlw	-2
 19890  01918A  2AE3               	incf	plusw1,f,c
 19891  01918C  B4D8               	btfsc	status,2,c
 19892  01918E  D018               	goto	u7370
 19893  019190  D7F2               	goto	l8828
 19894  019192                     l8830:
 19895                           
 19896                           ;stkvar	_exp1 @ sp[(-2)+0]
 19897  019192  0EFE               	movlw	-2
 19898  019194  006F FF8C  F001    	movff	plusw1,btemp
 19899  01919A  0E1F               	movlw	31
 19900  01919C  6401               	cpfsgt	btemp^0,c
 19901  01919E  D00C               	goto	l8838
 19902  0191A0  D7A3               	goto	u7310
 19903  0191A2                     l8836:
 19904                           
 19905                           ;stkvar	_f1 @ sp[(-2)+-4]
 19906  0191A2  90D8               	bcf	status,0,c
 19907  0191A4  0EFA               	movlw	-6
 19908  0191A6  36E3               	rlcf	plusw1,f,c
 19909  0191A8  0EFB               	movlw	-5
 19910  0191AA  36E3               	rlcf	plusw1,f,c
 19911  0191AC  0EFC               	movlw	-4
 19912  0191AE  36E3               	rlcf	plusw1,f,c
 19913  0191B0  0EFD               	movlw	-3
 19914  0191B2  36E3               	rlcf	plusw1,f,c
 19915                           
 19916                           ;stkvar	_exp1 @ sp[(-2)+0]
 19917  0191B4  0EFE               	movlw	-2
 19918  0191B6  06E3               	decf	plusw1,f,c
 19919  0191B8                     l8838:
 19920                           
 19921                           ;stkvar	_exp1 @ sp[(-2)+0]
 19922  0191B8  0EFE               	movlw	-2
 19923  0191BA  50E3               	movf	plusw1,w,c
 19924  0191BC  A4D8               	btfss	status,2,c
 19925  0191BE  D7F1               	goto	l8836
 19926  0191C0                     u7370:
 19927                           
 19928                           ;stkvar	_sign1 @ sp[(-2)+1]
 19929  0191C0  0EFF               	movlw	-1
 19930  0191C2  50E3               	movf	plusw1,w,c
 19931  0191C4  B4D8               	btfsc	status,2,c
 19932  0191C6  D011               	goto	u7390
 19933                           
 19934                           ;stkvar	_f1 @ sp[(-2)+-4]
 19935                           ;stkvar	_f1 @ sp[(-2)+-4]
 19936  0191C8  0EFA               	movlw	-6
 19937  0191CA  6CE3               	negf	plusw1,c
 19938  0191CC  0EFB               	movlw	-5
 19939  0191CE  1EE3               	comf	plusw1,f,c
 19940  0191D0  0EFC               	movlw	-4
 19941  0191D2  1EE3               	comf	plusw1,f,c
 19942  0191D4  0EFD               	movlw	-3
 19943  0191D6  1EE3               	comf	plusw1,f,c
 19944  0191D8  E308               	bnc	u7390
 19945  0191DA  0EFB               	movlw	-5
 19946  0191DC  2AE3               	incf	plusw1,f,c
 19947  0191DE  E305               	bnc	u7390
 19948  0191E0  0EFC               	movlw	-4
 19949  0191E2  2AE3               	incf	plusw1,f,c
 19950  0191E4  E302               	bnc	u7390
 19951  0191E6  0EFD               	movlw	-3
 19952  0191E8  2AE3               	incf	plusw1,f,c
 19953  0191EA                     u7390:
 19954                           
 19955                           ;stkvar	_f1 @ sp[(-2)+-4]
 19956  0191EA  0EFA               	movlw	-6
 19957  0191EC  006F FF8C  F001    	movff	plusw1,btemp
 19958  0191F2  0EFB               	movlw	-5
 19959  0191F4  006F FF8C  F002    	movff	plusw1,btemp+1
 19960  0191FA  0EFC               	movlw	-4
 19961  0191FC  006F FF8C  F003    	movff	plusw1,btemp+2
 19962  019202  0EFD               	movlw	-3
 19963  019204  006F FF8C  F004    	movff	plusw1,btemp+3
 19964  01920A                     l2768:
 19965                           
 19966                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19967  01920A  0EFA               	movlw	250
 19968  01920C  26E1               	addwf	fsr1l,f,c
 19969  01920E  0EFF               	movlw	255
 19970  019210  22E2               	addwfc	fsr1h,f,c
 19971  019212  0012               	return		;funcret
 19972  019214                     __end_of___fltol:
 19973                           	opt callstack 0
 19974                           
 19975 ;; *************** function ___flneg *****************
 19976 ;; Defined at:
 19977 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19978 ;; Parameters:    Size  Location     Type
 19979 ;;  f1              4  [STACK] long 
 19980 ;; Auto vars:     Size  Location     Type
 19981 ;;		None
 19982 ;; Return value:  Size  Location     Type
 19983 ;;                  4  [STACK] long 
 19984 ;; Registers used:
 19985 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19986 ;; Tracked objects:
 19987 ;;		On entry : 0/0
 19988 ;;		On exit  : 0/0
 19989 ;;		Unchanged: 0/0
 19990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19995 ;;Total ram usage:        0 bytes
 19996 ;; Hardware stack levels used:    1
 19997 ;; Hardware stack levels required when called:   15
 19998 ;; This function calls:
 19999 ;;		Nothing
 20000 ;; This function is called by:
 20001 ;;		_calc_bsoc
 20002 ;;		_efgtoa
 20003 ;; This function uses a reentrant model
 20004 ;;
 20005                           
 20006                           	psect	text69
 20007  01B7F4                     __ptext69:
 20008                           	opt callstack 0
 20009  01B7F4                     ___flneg:
 20010                           	opt callstack 0
 20011                           
 20012                           ;stkvar	_f1 @ sp[(0)+-4]
 20013                           
 20014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20015                           ;incstack = 0
 20016 ;; hardware stack exceeded
 20017  01B7F4  0EFC               	movlw	-4
 20018  01B7F6  50E3               	movf	plusw1,w,c
 20019  01B7F8  E10A               	bnz	u7290
 20020  01B7FA  0EFD               	movlw	-3
 20021  01B7FC  50E3               	movf	plusw1,w,c
 20022  01B7FE  E107               	bnz	u7290
 20023  01B800  0EFE               	movlw	-2
 20024  01B802  50E3               	movf	plusw1,w,c
 20025  01B804  E104               	bnz	u7290
 20026  01B806  0EFF               	movlw	-1
 20027  01B808  50E3               	movf	plusw1,w,c
 20028  01B80A  B4D8               	btfsc	status,2,c
 20029  01B80C  D002               	goto	l8802
 20030  01B80E                     u7290:
 20031                           
 20032                           ;stkvar	_f1 @ sp[(0)+-4]
 20033  01B80E  0EFF               	movlw	-1
 20034  01B810  7EE3               	btg	plusw1,7,c
 20035  01B812                     l8802:
 20036                           
 20037                           ;stkvar	_f1 @ sp[(0)+-4]
 20038  01B812  0EFC               	movlw	-4
 20039  01B814  006F FF8C  F001    	movff	plusw1,btemp
 20040  01B81A  0EFD               	movlw	-3
 20041  01B81C  006F FF8C  F002    	movff	plusw1,btemp+1
 20042  01B822  0EFE               	movlw	-2
 20043  01B824  006F FF8C  F003    	movff	plusw1,btemp+2
 20044  01B82A  0EFF               	movlw	-1
 20045  01B82C  006F FF8C  F004    	movff	plusw1,btemp+3
 20046                           
 20047                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20048  01B832  52E5               	movf	postdec1,f,c
 20049  01B834  52E5               	movf	postdec1,f,c
 20050  01B836  52E5               	movf	postdec1,f,c
 20051  01B838  52E5               	movf	postdec1,f,c
 20052  01B83A  0012               	return		;funcret
 20053  01B83C                     __end_of___flneg:
 20054                           	opt callstack 0
 20055                           
 20056 ;; *************** function ___fleq *****************
 20057 ;; Defined at:
 20058 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 20059 ;; Parameters:    Size  Location     Type
 20060 ;;  ff1             4  [STACK] long 
 20061 ;;  ff2             4  [STACK] long 
 20062 ;; Auto vars:     Size  Location     Type
 20063 ;;		None
 20064 ;; Return value:  Size  Location     Type
 20065 ;;		None               void
 20066 ;; Registers used:
 20067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20068 ;; Tracked objects:
 20069 ;;		On entry : 0/0
 20070 ;;		On exit  : 0/0
 20071 ;;		Unchanged: 0/0
 20072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20077 ;;Total ram usage:        0 bytes
 20078 ;; Hardware stack levels used:    1
 20079 ;; Hardware stack levels required when called:   15
 20080 ;; This function calls:
 20081 ;;		Nothing
 20082 ;; This function is called by:
 20083 ;;		_efgtoa
 20084 ;; This function uses a reentrant model
 20085 ;;
 20086                           
 20087                           	psect	text70
 20088  01A63A                     __ptext70:
 20089                           	opt callstack 0
 20090  01A63A                     ___fleq:
 20091                           	opt callstack 0
 20092                           
 20093                           ;stkvar	_ff1 @ sp[(0)+-4]
 20094                           
 20095                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20096                           ;incstack = 0
 20097 ;; hardware stack exceeded
 20098  01A63A  50E1               	movf	fsr1l,w,c
 20099  01A63C  0FFC               	addlw	-4
 20100  01A63E  6ED9               	movwf	fsr2l,c
 20101  01A640  50E2               	movf	fsr1h,w,c
 20102  01A642  6EDA               	movwf	fsr2h,c
 20103  01A644  0EFF               	movlw	255
 20104  01A646  22DA               	addwfc	fsr2h,f,c
 20105  01A648  0E00               	movlw	0
 20106  01A64A  14DE               	andwf	postinc2,w,c
 20107  01A64C  6E09               	movwf	(btemp+8)^0,c
 20108  01A64E  0E00               	movlw	0
 20109  01A650  14DE               	andwf	postinc2,w,c
 20110  01A652  6E0A               	movwf	(btemp+9)^0,c
 20111  01A654  0E80               	movlw	128
 20112  01A656  14DE               	andwf	postinc2,w,c
 20113  01A658  6E0B               	movwf	(btemp+10)^0,c
 20114  01A65A  0E7F               	movlw	127
 20115  01A65C  14DE               	andwf	postinc2,w,c
 20116  01A65E  6E0C               	movwf	(btemp+11)^0,c
 20117  01A660  5009               	movf	(btemp+8)^0,w,c
 20118  01A662  100A               	iorwf	(btemp+9)^0,w,c
 20119  01A664  100B               	iorwf	(btemp+10)^0,w,c
 20120  01A666  100C               	iorwf	(btemp+11)^0,w,c
 20121  01A668  A4D8               	btfss	status,2,c
 20122  01A66A  D008               	goto	l8760
 20123                           
 20124                           ;stkvar	_ff1 @ sp[(0)+-4]
 20125  01A66C  0EFC               	movlw	-4
 20126  01A66E  6AE3               	clrf	plusw1,c
 20127  01A670  0EFD               	movlw	-3
 20128  01A672  6AE3               	clrf	plusw1,c
 20129  01A674  0EFE               	movlw	-2
 20130  01A676  6AE3               	clrf	plusw1,c
 20131  01A678  0EFF               	movlw	-1
 20132  01A67A  6AE3               	clrf	plusw1,c
 20133  01A67C                     l8760:
 20134                           
 20135                           ;stkvar	_ff2 @ sp[(0)+-8]
 20136  01A67C  50E1               	movf	fsr1l,w,c
 20137  01A67E  0FF8               	addlw	-8
 20138  01A680  6ED9               	movwf	fsr2l,c
 20139  01A682  50E2               	movf	fsr1h,w,c
 20140  01A684  6EDA               	movwf	fsr2h,c
 20141  01A686  0EFF               	movlw	255
 20142  01A688  22DA               	addwfc	fsr2h,f,c
 20143  01A68A  0E00               	movlw	0
 20144  01A68C  14DE               	andwf	postinc2,w,c
 20145  01A68E  6E09               	movwf	(btemp+8)^0,c
 20146  01A690  0E00               	movlw	0
 20147  01A692  14DE               	andwf	postinc2,w,c
 20148  01A694  6E0A               	movwf	(btemp+9)^0,c
 20149  01A696  0E80               	movlw	128
 20150  01A698  14DE               	andwf	postinc2,w,c
 20151  01A69A  6E0B               	movwf	(btemp+10)^0,c
 20152  01A69C  0E7F               	movlw	127
 20153  01A69E  14DE               	andwf	postinc2,w,c
 20154  01A6A0  6E0C               	movwf	(btemp+11)^0,c
 20155  01A6A2  5009               	movf	(btemp+8)^0,w,c
 20156  01A6A4  100A               	iorwf	(btemp+9)^0,w,c
 20157  01A6A6  100B               	iorwf	(btemp+10)^0,w,c
 20158  01A6A8  100C               	iorwf	(btemp+11)^0,w,c
 20159  01A6AA  A4D8               	btfss	status,2,c
 20160  01A6AC  D008               	goto	l8764
 20161                           
 20162                           ;stkvar	_ff2 @ sp[(0)+-8]
 20163  01A6AE  0EF8               	movlw	-8
 20164  01A6B0  6AE3               	clrf	plusw1,c
 20165  01A6B2  0EF9               	movlw	-7
 20166  01A6B4  6AE3               	clrf	plusw1,c
 20167  01A6B6  0EFA               	movlw	-6
 20168  01A6B8  6AE3               	clrf	plusw1,c
 20169  01A6BA  0EFB               	movlw	-5
 20170  01A6BC  6AE3               	clrf	plusw1,c
 20171  01A6BE                     l8764:
 20172                           
 20173                           ;stkvar	_ff2 @ sp[(0)+-8]
 20174                           ;stkvar	_ff1 @ sp[(0)+-4]
 20175  01A6BE  50E1               	movf	fsr1l,w,c
 20176  01A6C0  0FFC               	addlw	-4
 20177  01A6C2  6ED9               	movwf	fsr2l,c
 20178  01A6C4  50E2               	movf	fsr1h,w,c
 20179  01A6C6  6EDA               	movwf	fsr2h,c
 20180  01A6C8  0EFF               	movlw	255
 20181  01A6CA  22DA               	addwfc	fsr2h,f,c
 20182  01A6CC  0EF8               	movlw	-8
 20183  01A6CE  50E3               	movf	plusw1,w,c
 20184  01A6D0  18DE               	xorwf	postinc2,w,c
 20185  01A6D2  E10D               	bnz	u7230
 20186  01A6D4  0EF9               	movlw	-7
 20187  01A6D6  50E3               	movf	plusw1,w,c
 20188  01A6D8  18DE               	xorwf	postinc2,w,c
 20189  01A6DA  E109               	bnz	u7230
 20190  01A6DC  0EFA               	movlw	-6
 20191  01A6DE  50E3               	movf	plusw1,w,c
 20192  01A6E0  18DE               	xorwf	postinc2,w,c
 20193  01A6E2  E105               	bnz	u7230
 20194  01A6E4  0EFB               	movlw	-5
 20195  01A6E6  50E3               	movf	plusw1,w,c
 20196  01A6E8  18DE               	xorwf	postinc2,w,c
 20197  01A6EA  B4D8               	btfsc	status,2,c
 20198  01A6EC  D002               	goto	l8768
 20199  01A6EE                     u7230:
 20200  01A6EE  9001               	bcf	btemp& (0+255),0,c
 20201  01A6F0  D001               	goto	l2730
 20202  01A6F2                     l8768:
 20203  01A6F2  8001               	bsf	btemp& (0+255),0,c
 20204  01A6F4                     l2730:
 20205                           
 20206                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 20207  01A6F4  0EF8               	movlw	248
 20208  01A6F6  26E1               	addwf	fsr1l,f,c
 20209  01A6F8  0EFF               	movlw	255
 20210  01A6FA  22E2               	addwfc	fsr1h,f,c
 20211  01A6FC  0012               	return		;funcret
 20212  01A6FE                     __end_of___fleq:
 20213                           	opt callstack 0
 20214                           
 20215 ;; *************** function ___awmod *****************
 20216 ;; Defined at:
 20217 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20218 ;; Parameters:    Size  Location     Type
 20219 ;;  dividend        2  [STACK] int 
 20220 ;;  divisor         2  [STACK] int 
 20221 ;; Auto vars:     Size  Location     Type
 20222 ;;  sign            1  [STACK] unsigned char 
 20223 ;;  counter         1  [STACK] unsigned char 
 20224 ;; Return value:  Size  Location     Type
 20225 ;;                  2  [STACK] int 
 20226 ;; Registers used:
 20227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20228 ;; Tracked objects:
 20229 ;;		On entry : 0/0
 20230 ;;		On exit  : 0/0
 20231 ;;		Unchanged: 0/0
 20232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20237 ;;Total ram usage:        0 bytes
 20238 ;; Hardware stack levels used:    1
 20239 ;; Hardware stack levels required when called:   15
 20240 ;; This function calls:
 20241 ;;		Nothing
 20242 ;; This function is called by:
 20243 ;;		_efgtoa
 20244 ;; This function uses a reentrant model
 20245 ;;
 20246                           
 20247                           	psect	text71
 20248  019AF0                     __ptext71:
 20249                           	opt callstack 0
 20250  019AF0                     ___awmod:
 20251                           	opt callstack 0
 20252                           
 20253                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20254  019AF0  52E6               	movf	postinc1,f,c
 20255  019AF2  52E6               	movf	postinc1,f,c
 20256                           
 20257                           ;stkvar	_sign @ sp[(-2)+0]
 20258                           
 20259                           ;incstack = 0
 20260 ;; hardware stack exceeded
 20261  019AF4  0EFE               	movlw	-2
 20262  019AF6  6AE3               	clrf	plusw1,c
 20263                           
 20264                           ;stkvar	_dividend @ sp[(-2)+-2]
 20265  019AF8  0EFD               	movlw	-3
 20266  019AFA  AEE3               	btfss	plusw1,7,c
 20267  019AFC  D009               	goto	l8726
 20268                           
 20269                           ;stkvar	_dividend @ sp[(-2)+-2]
 20270                           ;stkvar	_dividend @ sp[(-2)+-2]
 20271  019AFE  0EFC               	movlw	-4
 20272  019B00  6CE3               	negf	plusw1,c
 20273  019B02  0EFD               	movlw	-3
 20274  019B04  1EE3               	comf	plusw1,f,c
 20275  019B06  B0D8               	btfsc	status,0,c
 20276  019B08  2AE3               	incf	plusw1,f,c
 20277                           
 20278                           ;stkvar	_sign @ sp[(-2)+0]
 20279  019B0A  0EFE               	movlw	-2
 20280  019B0C  6AE3               	clrf	plusw1,c
 20281  019B0E  2AE3               	incf	plusw1,f,c
 20282  019B10                     l8726:
 20283                           
 20284                           ;stkvar	_divisor @ sp[(-2)+-4]
 20285  019B10  0EFB               	movlw	-5
 20286  019B12  AEE3               	btfss	plusw1,7,c
 20287  019B14  D006               	goto	l8730
 20288                           
 20289                           ;stkvar	_divisor @ sp[(-2)+-4]
 20290                           ;stkvar	_divisor @ sp[(-2)+-4]
 20291  019B16  0EFA               	movlw	-6
 20292  019B18  6CE3               	negf	plusw1,c
 20293  019B1A  0EFB               	movlw	-5
 20294  019B1C  1EE3               	comf	plusw1,f,c
 20295  019B1E  B0D8               	btfsc	status,0,c
 20296  019B20  2AE3               	incf	plusw1,f,c
 20297  019B22                     l8730:
 20298                           
 20299                           ;stkvar	_divisor @ sp[(-2)+-4]
 20300  019B22  0EFA               	movlw	-6
 20301  019B24  006F FF8C  F001    	movff	plusw1,btemp
 20302  019B2A  0EFB               	movlw	-5
 20303  019B2C  50E3               	movf	plusw1,w,c
 20304  019B2E  1001               	iorwf	btemp^0,w,c
 20305  019B30  B4D8               	btfsc	status,2,c
 20306  019B32  D053               	goto	u7190
 20307                           
 20308                           ;stkvar	_counter @ sp[(-2)+1]
 20309  019B34  0EFF               	movlw	-1
 20310  019B36  6AE3               	clrf	plusw1,c
 20311  019B38  D012               	goto	L23
 20312  019B3A                     l8734:
 20313                           
 20314                           ;stkvar	_divisor @ sp[(-2)+-4]
 20315  019B3A  0EFA               	movlw	-6
 20316  019B3C  50E3               	movf	plusw1,w,c
 20317  019B3E  90D8               	bcf	status,0,c
 20318  019B40  34E8               	rlcf	wreg,w,c
 20319  019B42  6E01               	movwf	btemp^0,c
 20320  019B44  0EFA               	movlw	-6
 20321  019B46  0060  F007  FFE3   	movff	btemp,plusw1
 20322  019B4C  0EFB               	movlw	-5
 20323  019B4E  50E3               	movf	plusw1,w,c
 20324  019B50  34E8               	rlcf	wreg,w,c
 20325  019B52  6E01               	movwf	btemp^0,c
 20326  019B54  0EFB               	movlw	-5
 20327  019B56  0060  F007  FFE3   	movff	btemp,plusw1
 20328                           
 20329                           ;stkvar	_counter @ sp[(-2)+1]
 20330  019B5C  0EFF               	movlw	-1
 20331  019B5E                     L23:
 20332  019B5E  2AE3               	incf	plusw1,f,c
 20333                           
 20334                           ;stkvar	_divisor @ sp[(-2)+-4]
 20335  019B60  0EFB               	movlw	-5
 20336  019B62  AEE3               	btfss	plusw1,7,c
 20337  019B64  D7EA               	goto	l8734
 20338  019B66                     u7170:
 20339                           
 20340                           ;stkvar	_divisor @ sp[(-2)+-4]
 20341  019B66  0EFA               	movlw	-6
 20342  019B68  006F FF8C  F00B    	movff	plusw1,btemp+10
 20343  019B6E  0EFB               	movlw	-5
 20344  019B70  006F FF8C  F00C    	movff	plusw1,btemp+11
 20345                           
 20346                           ;stkvar	_dividend @ sp[(-2)+-2]
 20347  019B76  0EFC               	movlw	-4
 20348  019B78  006F FF8C  F009    	movff	plusw1,btemp+8
 20349  019B7E  0EFD               	movlw	-3
 20350  019B80  006F FF8C  F00A    	movff	plusw1,btemp+9
 20351  019B86  500B               	movf	(btemp+10)^0,w,c
 20352  019B88  5C09               	subwf	(btemp+8)^0,w,c
 20353  019B8A  500C               	movf	(btemp+11)^0,w,c
 20354  019B8C  580A               	subwfb	(btemp+9)^0,w,c
 20355  019B8E  A0D8               	btfss	status,0,c
 20356  019B90  D014               	goto	l8744
 20357                           
 20358                           ;stkvar	_divisor @ sp[(-2)+-4]
 20359                           ;stkvar	_dividend @ sp[(-2)+-2]
 20360  019B92  0EFC               	movlw	-4
 20361  019B94  50E3               	movf	plusw1,w,c
 20362  019B96  6E01               	movwf	btemp^0,c
 20363  019B98  0EFA               	movlw	-6
 20364  019B9A  50E3               	movf	plusw1,w,c
 20365  019B9C  5E01               	subwf	btemp^0,f,c
 20366  019B9E  0EFC               	movlw	-4
 20367  019BA0  0060  F007  FFE3   	movff	btemp,plusw1
 20368  019BA6  0EFD               	movlw	-3
 20369  019BA8  50E3               	movf	plusw1,w,c
 20370  019BAA  6E01               	movwf	btemp^0,c
 20371  019BAC  0EFB               	movlw	-5
 20372  019BAE  50E3               	movf	plusw1,w,c
 20373  019BB0  5A01               	subwfb	btemp^0,f,c
 20374  019BB2  0EFD               	movlw	-3
 20375  019BB4  0060  F007  FFE3   	movff	btemp,plusw1
 20376  019BBA                     l8744:
 20377                           
 20378                           ;stkvar	_divisor @ sp[(-2)+-4]
 20379  019BBA  90D8               	bcf	status,0,c
 20380  019BBC  0EFB               	movlw	-5
 20381  019BBE  32E3               	rrcf	plusw1,f,c
 20382  019BC0  0EFA               	movlw	-6
 20383  019BC2  32E3               	rrcf	plusw1,f,c
 20384                           
 20385                           ;stkvar	_counter @ sp[(-2)+1]
 20386  019BC4  0EFF               	movlw	-1
 20387  019BC6  50E3               	movf	plusw1,w,c
 20388  019BC8  6E01               	movwf	btemp^0,c
 20389  019BCA  0E01               	movlw	1
 20390  019BCC  5E01               	subwf	btemp^0,f,c
 20391  019BCE  0EFF               	movlw	-1
 20392  019BD0  0060  F007  FFE3   	movff	btemp,plusw1
 20393  019BD6  A4D8               	btfss	status,2,c
 20394  019BD8  D7C6               	goto	u7170
 20395  019BDA                     u7190:
 20396                           
 20397                           ;stkvar	_sign @ sp[(-2)+0]
 20398  019BDA  0EFE               	movlw	-2
 20399  019BDC  50E3               	movf	plusw1,w,c
 20400  019BDE  B4D8               	btfsc	status,2,c
 20401  019BE0  D006               	goto	l8752
 20402                           
 20403                           ;stkvar	_dividend @ sp[(-2)+-2]
 20404                           ;stkvar	_dividend @ sp[(-2)+-2]
 20405  019BE2  0EFC               	movlw	-4
 20406  019BE4  6CE3               	negf	plusw1,c
 20407  019BE6  0EFD               	movlw	-3
 20408  019BE8  1EE3               	comf	plusw1,f,c
 20409  019BEA  B0D8               	btfsc	status,0,c
 20410  019BEC  2AE3               	incf	plusw1,f,c
 20411  019BEE                     l8752:
 20412                           
 20413                           ;stkvar	_dividend @ sp[(-2)+-2]
 20414  019BEE  0EFC               	movlw	-4
 20415  019BF0  006F FF8C  F001    	movff	plusw1,btemp
 20416  019BF6  0EFD               	movlw	-3
 20417  019BF8  006F FF8C  F002    	movff	plusw1,btemp+1
 20418                           
 20419                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20420  019BFE  0EFA               	movlw	250
 20421  019C00  26E1               	addwf	fsr1l,f,c
 20422  019C02  0EFF               	movlw	255
 20423  019C04  22E2               	addwfc	fsr1h,f,c
 20424  019C06  0012               	return		;funcret
 20425  019C08                     __end_of___awmod:
 20426                           	opt callstack 0
 20427                           
 20428 ;; *************** function ___awdiv *****************
 20429 ;; Defined at:
 20430 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20431 ;; Parameters:    Size  Location     Type
 20432 ;;  dividend        2  [STACK] int 
 20433 ;;  divisor         2  [STACK] int 
 20434 ;; Auto vars:     Size  Location     Type
 20435 ;;  quotient        2  [STACK] int 
 20436 ;;  sign            1  [STACK] unsigned char 
 20437 ;;  counter         1  [STACK] unsigned char 
 20438 ;; Return value:  Size  Location     Type
 20439 ;;                  2  [STACK] int 
 20440 ;; Registers used:
 20441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20442 ;; Tracked objects:
 20443 ;;		On entry : 0/0
 20444 ;;		On exit  : 0/0
 20445 ;;		Unchanged: 0/0
 20446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20451 ;;Total ram usage:        0 bytes
 20452 ;; Hardware stack levels used:    1
 20453 ;; Hardware stack levels required when called:   15
 20454 ;; This function calls:
 20455 ;;		Nothing
 20456 ;; This function is called by:
 20457 ;;		_efgtoa
 20458 ;; This function uses a reentrant model
 20459 ;;
 20460                           
 20461                           	psect	text72
 20462  0194DA                     __ptext72:
 20463                           	opt callstack 0
 20464  0194DA                     ___awdiv:
 20465                           	opt callstack 0
 20466                           
 20467                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20468  0194DA  52E6               	movf	postinc1,f,c
 20469  0194DC  52E6               	movf	postinc1,f,c
 20470  0194DE  52E6               	movf	postinc1,f,c
 20471  0194E0  52E6               	movf	postinc1,f,c
 20472                           
 20473                           ;stkvar	_sign @ sp[(-4)+2]
 20474                           
 20475                           ;incstack = 0
 20476 ;; hardware stack exceeded
 20477  0194E2  0EFE               	movlw	-2
 20478  0194E4  6AE3               	clrf	plusw1,c
 20479                           
 20480                           ;stkvar	_divisor @ sp[(-4)+-4]
 20481  0194E6  0EF9               	movlw	-7
 20482  0194E8  AEE3               	btfss	plusw1,7,c
 20483  0194EA  D009               	goto	l8680
 20484                           
 20485                           ;stkvar	_divisor @ sp[(-4)+-4]
 20486                           ;stkvar	_divisor @ sp[(-4)+-4]
 20487  0194EC  0EF8               	movlw	-8
 20488  0194EE  6CE3               	negf	plusw1,c
 20489  0194F0  0EF9               	movlw	-7
 20490  0194F2  1EE3               	comf	plusw1,f,c
 20491  0194F4  B0D8               	btfsc	status,0,c
 20492  0194F6  2AE3               	incf	plusw1,f,c
 20493                           
 20494                           ;stkvar	_sign @ sp[(-4)+2]
 20495  0194F8  0EFE               	movlw	-2
 20496  0194FA  6AE3               	clrf	plusw1,c
 20497  0194FC  2AE3               	incf	plusw1,f,c
 20498  0194FE                     l8680:
 20499                           
 20500                           ;stkvar	_dividend @ sp[(-4)+-2]
 20501  0194FE  0EFB               	movlw	-5
 20502  019500  AEE3               	btfss	plusw1,7,c
 20503  019502  D008               	goto	l8686
 20504                           
 20505                           ;stkvar	_dividend @ sp[(-4)+-2]
 20506                           ;stkvar	_dividend @ sp[(-4)+-2]
 20507  019504  0EFA               	movlw	-6
 20508  019506  6CE3               	negf	plusw1,c
 20509  019508  0EFB               	movlw	-5
 20510  01950A  1EE3               	comf	plusw1,f,c
 20511  01950C  B0D8               	btfsc	status,0,c
 20512  01950E  2AE3               	incf	plusw1,f,c
 20513                           
 20514                           ;stkvar	_sign @ sp[(-4)+2]
 20515  019510  0EFE               	movlw	-2
 20516  019512  70E3               	btg	plusw1,0,c
 20517  019514                     l8686:
 20518                           
 20519                           ;stkvar	_quotient @ sp[(-4)+0]
 20520  019514  0EFC               	movlw	-4
 20521  019516  6AE3               	clrf	plusw1,c
 20522  019518  0EFD               	movlw	-3
 20523  01951A  6AE3               	clrf	plusw1,c
 20524                           
 20525                           ;stkvar	_divisor @ sp[(-4)+-4]
 20526  01951C  0EF8               	movlw	-8
 20527  01951E  006F FF8C  F001    	movff	plusw1,btemp
 20528  019524  0EF9               	movlw	-7
 20529  019526  50E3               	movf	plusw1,w,c
 20530  019528  1001               	iorwf	btemp^0,w,c
 20531  01952A  B4D8               	btfsc	status,2,c
 20532  01952C  D066               	goto	u7120
 20533                           
 20534                           ;stkvar	_counter @ sp[(-4)+3]
 20535  01952E  0EFF               	movlw	-1
 20536  019530  6AE3               	clrf	plusw1,c
 20537  019532  D012               	goto	L24
 20538  019534                     l8692:
 20539                           
 20540                           ;stkvar	_divisor @ sp[(-4)+-4]
 20541  019534  0EF8               	movlw	-8
 20542  019536  50E3               	movf	plusw1,w,c
 20543  019538  90D8               	bcf	status,0,c
 20544  01953A  34E8               	rlcf	wreg,w,c
 20545  01953C  6E01               	movwf	btemp^0,c
 20546  01953E  0EF8               	movlw	-8
 20547  019540  0060  F007  FFE3   	movff	btemp,plusw1
 20548  019546  0EF9               	movlw	-7
 20549  019548  50E3               	movf	plusw1,w,c
 20550  01954A  34E8               	rlcf	wreg,w,c
 20551  01954C  6E01               	movwf	btemp^0,c
 20552  01954E  0EF9               	movlw	-7
 20553  019550  0060  F007  FFE3   	movff	btemp,plusw1
 20554                           
 20555                           ;stkvar	_counter @ sp[(-4)+3]
 20556  019556  0EFF               	movlw	-1
 20557  019558                     L24:
 20558  019558  2AE3               	incf	plusw1,f,c
 20559                           
 20560                           ;stkvar	_divisor @ sp[(-4)+-4]
 20561  01955A  0EF9               	movlw	-7
 20562  01955C  AEE3               	btfss	plusw1,7,c
 20563  01955E  D7EA               	goto	l8692
 20564  019560                     u7100:
 20565                           
 20566                           ;stkvar	_quotient @ sp[(-4)+0]
 20567  019560  0EFC               	movlw	-4
 20568  019562  50E3               	movf	plusw1,w,c
 20569  019564  90D8               	bcf	status,0,c
 20570  019566  34E8               	rlcf	wreg,w,c
 20571  019568  6E01               	movwf	btemp^0,c
 20572  01956A  0EFC               	movlw	-4
 20573  01956C  0060  F007  FFE3   	movff	btemp,plusw1
 20574  019572  0EFD               	movlw	-3
 20575  019574  50E3               	movf	plusw1,w,c
 20576  019576  34E8               	rlcf	wreg,w,c
 20577  019578  6E01               	movwf	btemp^0,c
 20578  01957A  0EFD               	movlw	-3
 20579  01957C  0060  F007  FFE3   	movff	btemp,plusw1
 20580                           
 20581                           ;stkvar	_divisor @ sp[(-4)+-4]
 20582  019582  0EF8               	movlw	-8
 20583  019584  006F FF8C  F00B    	movff	plusw1,btemp+10
 20584  01958A  0EF9               	movlw	-7
 20585  01958C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20586                           
 20587                           ;stkvar	_dividend @ sp[(-4)+-2]
 20588  019592  0EFA               	movlw	-6
 20589  019594  006F FF8C  F009    	movff	plusw1,btemp+8
 20590  01959A  0EFB               	movlw	-5
 20591  01959C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20592  0195A2  500B               	movf	(btemp+10)^0,w,c
 20593  0195A4  5C09               	subwf	(btemp+8)^0,w,c
 20594  0195A6  500C               	movf	(btemp+11)^0,w,c
 20595  0195A8  580A               	subwfb	(btemp+9)^0,w,c
 20596  0195AA  A0D8               	btfss	status,0,c
 20597  0195AC  D016               	goto	l8706
 20598                           
 20599                           ;stkvar	_divisor @ sp[(-4)+-4]
 20600                           ;stkvar	_dividend @ sp[(-4)+-2]
 20601  0195AE  0EFA               	movlw	-6
 20602  0195B0  50E3               	movf	plusw1,w,c
 20603  0195B2  6E01               	movwf	btemp^0,c
 20604  0195B4  0EF8               	movlw	-8
 20605  0195B6  50E3               	movf	plusw1,w,c
 20606  0195B8  5E01               	subwf	btemp^0,f,c
 20607  0195BA  0EFA               	movlw	-6
 20608  0195BC  0060  F007  FFE3   	movff	btemp,plusw1
 20609  0195C2  0EFB               	movlw	-5
 20610  0195C4  50E3               	movf	plusw1,w,c
 20611  0195C6  6E01               	movwf	btemp^0,c
 20612  0195C8  0EF9               	movlw	-7
 20613  0195CA  50E3               	movf	plusw1,w,c
 20614  0195CC  5A01               	subwfb	btemp^0,f,c
 20615  0195CE  0EFB               	movlw	-5
 20616  0195D0  0060  F007  FFE3   	movff	btemp,plusw1
 20617                           
 20618                           ;stkvar	_quotient @ sp[(-4)+0]
 20619  0195D6  0EFC               	movlw	-4
 20620  0195D8  80E3               	bsf	plusw1,0,c
 20621  0195DA                     l8706:
 20622                           
 20623                           ;stkvar	_divisor @ sp[(-4)+-4]
 20624  0195DA  90D8               	bcf	status,0,c
 20625  0195DC  0EF9               	movlw	-7
 20626  0195DE  32E3               	rrcf	plusw1,f,c
 20627  0195E0  0EF8               	movlw	-8
 20628  0195E2  32E3               	rrcf	plusw1,f,c
 20629                           
 20630                           ;stkvar	_counter @ sp[(-4)+3]
 20631  0195E4  0EFF               	movlw	-1
 20632  0195E6  50E3               	movf	plusw1,w,c
 20633  0195E8  6E01               	movwf	btemp^0,c
 20634  0195EA  0E01               	movlw	1
 20635  0195EC  5E01               	subwf	btemp^0,f,c
 20636  0195EE  0EFF               	movlw	-1
 20637  0195F0  0060  F007  FFE3   	movff	btemp,plusw1
 20638  0195F6  A4D8               	btfss	status,2,c
 20639  0195F8  D7B3               	goto	u7100
 20640  0195FA                     u7120:
 20641                           
 20642                           ;stkvar	_sign @ sp[(-4)+2]
 20643  0195FA  0EFE               	movlw	-2
 20644  0195FC  50E3               	movf	plusw1,w,c
 20645  0195FE  B4D8               	btfsc	status,2,c
 20646  019600  D006               	goto	l8714
 20647                           
 20648                           ;stkvar	_quotient @ sp[(-4)+0]
 20649                           ;stkvar	_quotient @ sp[(-4)+0]
 20650  019602  0EFC               	movlw	-4
 20651  019604  6CE3               	negf	plusw1,c
 20652  019606  0EFD               	movlw	-3
 20653  019608  1EE3               	comf	plusw1,f,c
 20654  01960A  B0D8               	btfsc	status,0,c
 20655  01960C  2AE3               	incf	plusw1,f,c
 20656  01960E                     l8714:
 20657                           
 20658                           ;stkvar	_quotient @ sp[(-4)+0]
 20659  01960E  0EFC               	movlw	-4
 20660  019610  006F FF8C  F001    	movff	plusw1,btemp
 20661  019616  0EFD               	movlw	-3
 20662  019618  006F FF8C  F002    	movff	plusw1,btemp+1
 20663                           
 20664                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20665  01961E  0EF8               	movlw	248
 20666  019620  26E1               	addwf	fsr1l,f,c
 20667  019622  0EFF               	movlw	255
 20668  019624  22E2               	addwfc	fsr1h,f,c
 20669  019626  0012               	return		;funcret
 20670  019628                     __end_of___awdiv:
 20671                           	opt callstack 0
 20672                           
 20673 ;; *************** function _dtoa *****************
 20674 ;; Defined at:
 20675 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20676 ;; Parameters:    Size  Location     Type
 20677 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20678 ;;		 -> f(6), NULL(0), 
 20679 ;;  d               8  [STACK] long long 
 20680 ;; Auto vars:     Size  Location     Type
 20681 ;;  n               8  [STACK] long long 
 20682 ;;  i               2  [STACK] int 
 20683 ;;  s               2  [STACK] int 
 20684 ;;  w               2  [STACK] int 
 20685 ;;  p               2  [STACK] int 
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  2  [STACK] int 
 20688 ;; Registers used:
 20689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 20690 ;; Tracked objects:
 20691 ;;		On entry : 0/0
 20692 ;;		On exit  : 0/0
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;Total ram usage:        0 bytes
 20700 ;; Hardware stack levels used:    1
 20701 ;; Hardware stack levels required when called:   20
 20702 ;; This function calls:
 20703 ;;		___aodiv
 20704 ;;		___aomod
 20705 ;;		_abs
 20706 ;;		_pad
 20707 ;; This function is called by:
 20708 ;;		_vfpfcnvrt
 20709 ;; This function uses a reentrant model
 20710 ;;
 20711                           
 20712                           	psect	text73
 20713  01583E                     __ptext73:
 20714                           	opt callstack 0
 20715  01583E                     _dtoa:
 20716                           	opt callstack 0
 20717                           
 20718                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20719  01583E  0E12               	movlw	18
 20720  015840  26E1               	addwf	fsr1l,f,c
 20721  015842  0E00               	movlw	0
 20722  015844  22E2               	addwfc	fsr1h,f,c
 20723                           
 20724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 20725                           ;stkvar	_d @ sp[(-18)+-10]
 20726                           
 20727                           ;incstack = 0
 20728 ;; hardware stack exceeded
 20729  015846  0EE4               	movlw	228
 20730  015848  24E1               	addwf	fsr1l,w,c
 20731  01584A  6ED9               	movwf	fsr2l,c
 20732  01584C  0EFF               	movlw	255
 20733  01584E  20E2               	addwfc	fsr1h,w,c
 20734  015850  6EDA               	movwf	fsr2h,c
 20735                           
 20736                           ;stkvar	_n @ sp[(-18)+2]
 20737  015852  0E08               	movlw	8
 20738  015854  6E01               	movwf	btemp^0,c
 20739  015856  0EF0               	movlw	-16
 20740  015858                     us1108999:
 20741  015858  006F FF7B FFE3     	movff	postinc2,plusw1
 20742  01585E  28E8               	incf	wreg,w,c
 20743  015860  2E01               	decfsz	btemp^0,f,c
 20744  015862  D7FA               	bra	us1108999
 20745                           
 20746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20747                           ;stkvar	_n @ sp[(-18)+2]
 20748  015864  0EF7               	movlw	-9
 20749  015866  AEE3               	btfss	plusw1,7,c
 20750  015868  D002               	goto	u11090
 20751  01586A  0E01               	movlw	1
 20752  01586C  D001               	goto	u11100
 20753  01586E                     u11090:
 20754  01586E  0E00               	movlw	0
 20755  015870                     u11100:
 20756  015870  6E0B               	movwf	(btemp+10)^0,c
 20757  015872  6A0C               	clrf	(btemp+11)^0,c
 20758                           
 20759                           ;stkvar	_s @ sp[(-18)+12]
 20760  015874  0EFA               	movlw	-6
 20761  015876  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20762  01587C  0EFB               	movlw	-5
 20763  01587E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20764                           
 20765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20766                           ;stkvar	_s @ sp[(-18)+12]
 20767  015884  0EFA               	movlw	-6
 20768  015886  006F FF8C  F001    	movff	plusw1,btemp
 20769  01588C  0EFB               	movlw	-5
 20770  01588E  50E3               	movf	plusw1,w,c
 20771  015890  1001               	iorwf	btemp^0,w,c
 20772  015892  B4D8               	btfsc	status,2,c
 20773  015894  D025               	goto	u11120
 20774                           
 20775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20776                           ;stkvar	_n @ sp[(-18)+2]
 20777                           ;stkvar	_n @ sp[(-18)+2]
 20778  015896  0EF0               	movlw	-16
 20779  015898  6CE3               	negf	plusw1,c
 20780  01589A  0EF1               	movlw	-15
 20781  01589C  1EE3               	comf	plusw1,f,c
 20782  01589E  0EF2               	movlw	-14
 20783  0158A0  1EE3               	comf	plusw1,f,c
 20784  0158A2  0EF3               	movlw	-13
 20785  0158A4  1EE3               	comf	plusw1,f,c
 20786  0158A6  0EF4               	movlw	-12
 20787  0158A8  1EE3               	comf	plusw1,f,c
 20788  0158AA  0EF5               	movlw	-11
 20789  0158AC  1EE3               	comf	plusw1,f,c
 20790  0158AE  0EF6               	movlw	-10
 20791  0158B0  1EE3               	comf	plusw1,f,c
 20792  0158B2  0EF7               	movlw	-9
 20793  0158B4  1EE3               	comf	plusw1,f,c
 20794  0158B6  E314               	bnc	u11120
 20795  0158B8  0EF1               	movlw	-15
 20796  0158BA  2AE3               	incf	plusw1,f,c
 20797  0158BC  E311               	bnc	u11120
 20798  0158BE  0EF2               	movlw	-14
 20799  0158C0  2AE3               	incf	plusw1,f,c
 20800  0158C2  E30E               	bnc	u11120
 20801  0158C4  0EF3               	movlw	-13
 20802  0158C6  2AE3               	incf	plusw1,f,c
 20803  0158C8  E30B               	bnc	u11120
 20804  0158CA  0EF4               	movlw	-12
 20805  0158CC  2AE3               	incf	plusw1,f,c
 20806  0158CE  E308               	bnc	u11120
 20807  0158D0  0EF5               	movlw	-11
 20808  0158D2  2AE3               	incf	plusw1,f,c
 20809  0158D4  E305               	bnc	u11120
 20810  0158D6  0EF6               	movlw	-10
 20811  0158D8  2AE3               	incf	plusw1,f,c
 20812  0158DA  E302               	bnc	u11120
 20813  0158DC  0EF7               	movlw	-9
 20814  0158DE  2AE3               	incf	plusw1,f,c
 20815  0158E0                     u11120:
 20816                           
 20817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20818  0158E0  AE3D               	btfss	(_prec+1)^0,7,c
 20819                           
 20820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20821  0158E2  923E               	bcf	_flags^0,1,c
 20822                           
 20823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20824  0158E4  BE3D               	btfsc	(_prec+1)^0,7,c
 20825  0158E6  D005               	goto	u11140
 20826  0158E8  503D               	movf	(_prec+1)^0,w,c
 20827  0158EA  E110               	bnz	l12200
 20828  0158EC  043C               	decf	_prec^0,w,c
 20829  0158EE  B0D8               	btfsc	status,0,c
 20830  0158F0  D00D               	goto	l12200
 20831  0158F2                     u11140:
 20832  0158F2  0E01               	movlw	1
 20833  0158F4  6E0B               	movwf	(btemp+10)^0,c
 20834  0158F6  0E00               	movlw	0
 20835  0158F8  6E0C               	movwf	(btemp+11)^0,c
 20836                           
 20837                           ;stkvar	_p @ sp[(-18)+16]
 20838  0158FA  0EFE               	movlw	-2
 20839  0158FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20840  015902  0EFF               	movlw	-1
 20841  015904  0060  F033  FFE3   	movff	btemp+11,plusw1
 20842  01590A  D008               	goto	l2234
 20843  01590C                     l12200:
 20844                           
 20845                           ;stkvar	_p @ sp[(-18)+16]
 20846  01590C  0EFE               	movlw	-2
 20847  01590E  0060  F0F3  FFE3   	movff	_prec,plusw1
 20848  015914  0EFF               	movlw	-1
 20849  015916  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20850  01591C                     l2234:
 20851                           
 20852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20853                           ;stkvar	_w @ sp[(-18)+14]
 20854  01591C  0EFC               	movlw	-4
 20855  01591E  0060  F0EB  FFE3   	movff	_width,plusw1
 20856  015924  0EFD               	movlw	-3
 20857  015926  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20858                           
 20859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20860                           ;stkvar	_s @ sp[(-18)+12]
 20861  01592C  0EFA               	movlw	-6
 20862  01592E  006F FF8C  F001    	movff	plusw1,btemp
 20863  015934  0EFB               	movlw	-5
 20864  015936  50E3               	movf	plusw1,w,c
 20865  015938  1001               	iorwf	btemp^0,w,c
 20866  01593A  A4D8               	btfss	status,2,c
 20867  01593C  D002               	goto	u11160
 20868  01593E  A43E               	btfss	_flags^0,2,c
 20869  015940  D00A               	goto	l12208
 20870  015942                     u11160:
 20871                           
 20872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20873                           ;stkvar	_w @ sp[(-18)+14]
 20874  015942  50E1               	movf	fsr1l,w,c
 20875  015944  0FFC               	addlw	-4
 20876  015946  6ED9               	movwf	fsr2l,c
 20877  015948  50E2               	movf	fsr1h,w,c
 20878  01594A  6EDA               	movwf	fsr2h,c
 20879  01594C  0EFF               	movlw	255
 20880  01594E  22DA               	addwfc	fsr2h,f,c
 20881  015950  06DE               	decf	postinc2,f,c
 20882  015952  0E00               	movlw	0
 20883  015954  5ADD               	subwfb	postdec2,f,c
 20884  015956                     l12208:
 20885                           
 20886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20887  015956  0E4F               	movlw	79
 20888  015958  6E0B               	movwf	(btemp+10)^0,c
 20889  01595A  0E00               	movlw	0
 20890  01595C  6E0C               	movwf	(btemp+11)^0,c
 20891                           
 20892                           ;stkvar	_i @ sp[(-18)+10]
 20893  01595E  0EF8               	movlw	-8
 20894  015960  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20895  015966  0EF9               	movlw	-7
 20896  015968  0060  F033  FFE3   	movff	btemp+11,plusw1
 20897                           
 20898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20899  01596E  0102               	movlb	2	; () banked
 20900  015970  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20901                           
 20902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20903  015972  D109               	goto	l12222
 20904  015974                     l12212:
 20905                           
 20906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20907                           ;stkvar	_i @ sp[(-18)+10]
 20908  015974  50E1               	movf	fsr1l,w,c
 20909  015976  0FF8               	addlw	-8
 20910  015978  6ED9               	movwf	fsr2l,c
 20911  01597A  50E2               	movf	fsr1h,w,c
 20912  01597C  6EDA               	movwf	fsr2h,c
 20913  01597E  0EFF               	movlw	255
 20914  015980  22DA               	addwfc	fsr2h,f,c
 20915  015982  06DE               	decf	postinc2,f,c
 20916  015984  0E00               	movlw	0
 20917  015986  5ADD               	subwfb	postdec2,f,c
 20918                           
 20919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20920  015988  0E0A               	movlw	10
 20921  01598A  6EE6               	movwf	postinc1,c
 20922  01598C  0E00               	movlw	0
 20923  01598E  6EE6               	movwf	postinc1,c
 20924  015990  0E00               	movlw	0
 20925  015992  6EE6               	movwf	postinc1,c
 20926  015994  0E00               	movlw	0
 20927  015996  6EE6               	movwf	postinc1,c
 20928  015998  0E00               	movlw	0
 20929  01599A  6EE6               	movwf	postinc1,c
 20930  01599C  0E00               	movlw	0
 20931  01599E  6EE6               	movwf	postinc1,c
 20932  0159A0  0E00               	movlw	0
 20933  0159A2  6EE6               	movwf	postinc1,c
 20934  0159A4  0E00               	movlw	0
 20935  0159A6  6EE6               	movwf	postinc1,c
 20936                           
 20937                           ;stkvar	_n @ sp[(-26)+2]
 20938  0159A8  50E1               	movf	fsr1l,w,c
 20939  0159AA  0FE8               	addlw	-24
 20940  0159AC  6ED9               	movwf	fsr2l,c
 20941  0159AE  50E2               	movf	fsr1h,w,c
 20942  0159B0  6EDA               	movwf	fsr2h,c
 20943  0159B2  0EFF               	movlw	255
 20944  0159B4  22DA               	addwfc	fsr2h,f,c
 20945  0159B6  006F FF7B FFE6     	movff	postinc2,postinc1
 20946  0159BC  006F FF7B FFE6     	movff	postinc2,postinc1
 20947  0159C2  006F FF7B FFE6     	movff	postinc2,postinc1
 20948  0159C8  006F FF7B FFE6     	movff	postinc2,postinc1
 20949  0159CE  006F FF7B FFE6     	movff	postinc2,postinc1
 20950  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 20951  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 20952  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 20953  0159E6  EC2C  F0BF         	call	___aomod	;wreg free
 20954  0159EA  52E5               	movf	postdec1,f,c
 20955  0159EC  006F FF9C  F018    	movff	indf1,btemp+23
 20956  0159F2  52E5               	movf	postdec1,f,c
 20957  0159F4  006F FF9C  F017    	movff	indf1,btemp+22
 20958  0159FA  52E5               	movf	postdec1,f,c
 20959  0159FC  006F FF9C  F016    	movff	indf1,btemp+21
 20960  015A02  52E5               	movf	postdec1,f,c
 20961  015A04  006F FF9C  F015    	movff	indf1,btemp+20
 20962  015A0A  52E5               	movf	postdec1,f,c
 20963  015A0C  006F FF9C  F014    	movff	indf1,btemp+19
 20964  015A12  52E5               	movf	postdec1,f,c
 20965  015A14  006F FF9C  F013    	movff	indf1,btemp+18
 20966  015A1A  52E5               	movf	postdec1,f,c
 20967  015A1C  006F FF9C  F012    	movff	indf1,btemp+17
 20968  015A22  52E5               	movf	postdec1,f,c
 20969  015A24  006F FF9C  F011    	movff	indf1,btemp+16
 20970  015A2A  0EF8               	movlw	248
 20971  015A2C  26E1               	addwf	fsr1l,f,c
 20972  015A2E  0EFF               	movlw	255
 20973  015A30  22E2               	addwfc	fsr1h,f,c
 20974  015A32  0060  F044  F00B   	movff	btemp+16,btemp+10
 20975  015A38  0060  F048  F00C   	movff	btemp+17,btemp+11
 20976  015A3E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20977  015A44  0060  F033  FFE6   	movff	btemp+11,postinc1
 20978  015A4A  ECAD  F0DC         	call	_abs	;wreg free
 20979  015A4E  0E30               	movlw	48
 20980  015A50  2601               	addwf	btemp^0,f,c
 20981                           
 20982                           ;stkvar	_i @ sp[(-18)+10]
 20983  015A52  0EF8               	movlw	-8
 20984  015A54  006F FF8C  F00B    	movff	plusw1,btemp+10
 20985  015A5A  0EF9               	movlw	-7
 20986  015A5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20987  015A62  0E97               	movlw	low _dbuf
 20988  015A64  240B               	addwf	(btemp+10)^0,w,c
 20989  015A66  6ED9               	movwf	fsr2l,c
 20990  015A68  0E02               	movlw	high _dbuf
 20991  015A6A  200C               	addwfc	(btemp+11)^0,w,c
 20992  015A6C  6EDA               	movwf	fsr2h,c
 20993  015A6E  0060  F007  FFDF   	movff	btemp,indf2
 20994                           
 20995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 20996                           ;stkvar	_p @ sp[(-18)+16]
 20997  015A74  50E1               	movf	fsr1l,w,c
 20998  015A76  0FFE               	addlw	-2
 20999  015A78  6ED9               	movwf	fsr2l,c
 21000  015A7A  50E2               	movf	fsr1h,w,c
 21001  015A7C  6EDA               	movwf	fsr2h,c
 21002  015A7E  0EFF               	movlw	255
 21003  015A80  22DA               	addwfc	fsr2h,f,c
 21004  015A82  06DE               	decf	postinc2,f,c
 21005  015A84  0E00               	movlw	0
 21006  015A86  5ADD               	subwfb	postdec2,f,c
 21007                           
 21008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 21009                           ;stkvar	_w @ sp[(-18)+14]
 21010  015A88  50E1               	movf	fsr1l,w,c
 21011  015A8A  0FFC               	addlw	-4
 21012  015A8C  6ED9               	movwf	fsr2l,c
 21013  015A8E  50E2               	movf	fsr1h,w,c
 21014  015A90  6EDA               	movwf	fsr2h,c
 21015  015A92  0EFF               	movlw	255
 21016  015A94  22DA               	addwfc	fsr2h,f,c
 21017  015A96  06DE               	decf	postinc2,f,c
 21018  015A98  0E00               	movlw	0
 21019  015A9A  5ADD               	subwfb	postdec2,f,c
 21020                           
 21021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 21022  015A9C  0E0A               	movlw	10
 21023  015A9E  6EE6               	movwf	postinc1,c
 21024  015AA0  0E00               	movlw	0
 21025  015AA2  6EE6               	movwf	postinc1,c
 21026  015AA4  0E00               	movlw	0
 21027  015AA6  6EE6               	movwf	postinc1,c
 21028  015AA8  0E00               	movlw	0
 21029  015AAA  6EE6               	movwf	postinc1,c
 21030  015AAC  0E00               	movlw	0
 21031  015AAE  6EE6               	movwf	postinc1,c
 21032  015AB0  0E00               	movlw	0
 21033  015AB2  6EE6               	movwf	postinc1,c
 21034  015AB4  0E00               	movlw	0
 21035  015AB6  6EE6               	movwf	postinc1,c
 21036  015AB8  0E00               	movlw	0
 21037  015ABA  6EE6               	movwf	postinc1,c
 21038                           
 21039                           ;stkvar	_n @ sp[(-26)+2]
 21040  015ABC  50E1               	movf	fsr1l,w,c
 21041  015ABE  0FE8               	addlw	-24
 21042  015AC0  6ED9               	movwf	fsr2l,c
 21043  015AC2  50E2               	movf	fsr1h,w,c
 21044  015AC4  6EDA               	movwf	fsr2h,c
 21045  015AC6  0EFF               	movlw	255
 21046  015AC8  22DA               	addwfc	fsr2h,f,c
 21047  015ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 21048  015AD0  006F FF7B FFE6     	movff	postinc2,postinc1
 21049  015AD6  006F FF7B FFE6     	movff	postinc2,postinc1
 21050  015ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 21051  015AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 21052  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 21053  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 21054  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 21055  015AFA  EC8F  F0BB         	call	___aodiv	;wreg free
 21056  015AFE  52E5               	movf	postdec1,f,c
 21057  015B00  006F FF9C  F018    	movff	indf1,btemp+23
 21058  015B06  52E5               	movf	postdec1,f,c
 21059  015B08  006F FF9C  F017    	movff	indf1,btemp+22
 21060  015B0E  52E5               	movf	postdec1,f,c
 21061  015B10  006F FF9C  F016    	movff	indf1,btemp+21
 21062  015B16  52E5               	movf	postdec1,f,c
 21063  015B18  006F FF9C  F015    	movff	indf1,btemp+20
 21064  015B1E  52E5               	movf	postdec1,f,c
 21065  015B20  006F FF9C  F014    	movff	indf1,btemp+19
 21066  015B26  52E5               	movf	postdec1,f,c
 21067  015B28  006F FF9C  F013    	movff	indf1,btemp+18
 21068  015B2E  52E5               	movf	postdec1,f,c
 21069  015B30  006F FF9C  F012    	movff	indf1,btemp+17
 21070  015B36  52E5               	movf	postdec1,f,c
 21071  015B38  006F FF9C  F011    	movff	indf1,btemp+16
 21072  015B3E  0EF8               	movlw	248
 21073  015B40  26E1               	addwf	fsr1l,f,c
 21074  015B42  0EFF               	movlw	255
 21075  015B44  22E2               	addwfc	fsr1h,f,c
 21076                           
 21077                           ;stkvar	_n @ sp[(-18)+2]
 21078  015B46  0EF0               	movlw	-16
 21079  015B48  0060  F047  FFE3   	movff	btemp+16,plusw1
 21080  015B4E  0EF1               	movlw	-15
 21081  015B50  0060  F04B  FFE3   	movff	btemp+17,plusw1
 21082  015B56  0EF2               	movlw	-14
 21083  015B58  0060  F04F  FFE3   	movff	btemp+18,plusw1
 21084  015B5E  0EF3               	movlw	-13
 21085  015B60  0060  F053  FFE3   	movff	btemp+19,plusw1
 21086  015B66  0EF4               	movlw	-12
 21087  015B68  0060  F057  FFE3   	movff	btemp+20,plusw1
 21088  015B6E  0EF5               	movlw	-11
 21089  015B70  0060  F05B  FFE3   	movff	btemp+21,plusw1
 21090  015B76  0EF6               	movlw	-10
 21091  015B78  0060  F05F  FFE3   	movff	btemp+22,plusw1
 21092  015B7E  0EF7               	movlw	-9
 21093  015B80  0060  F063  FFE3   	movff	btemp+23,plusw1
 21094  015B86                     l12222:
 21095                           
 21096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21097                           ;stkvar	_i @ sp[(-18)+10]
 21098  015B86  0EF9               	movlw	-7
 21099  015B88  BEE3               	btfsc	plusw1,7,c
 21100  015B8A  D036               	goto	u11210
 21101  015B8C  0EF9               	movlw	-7
 21102  015B8E  50E3               	movf	plusw1,w,c
 21103  015B90  E104               	bnz	u11170
 21104  015B92  0EF8               	movlw	-8
 21105  015B94  04E3               	decf	plusw1,w,c
 21106  015B96  A0D8               	btfss	status,0,c
 21107  015B98  D02F               	goto	u11210
 21108  015B9A                     u11170:
 21109                           
 21110                           ;stkvar	_n @ sp[(-18)+2]
 21111  015B9A  0EF0               	movlw	-16
 21112  015B9C  50E3               	movf	plusw1,w,c
 21113  015B9E  E115               	bnz	u11181
 21114  015BA0  0EF1               	movlw	-15
 21115  015BA2  50E3               	movf	plusw1,w,c
 21116  015BA4  E112               	bnz	u11181
 21117  015BA6  0EF2               	movlw	-14
 21118  015BA8  50E3               	movf	plusw1,w,c
 21119  015BAA  E10F               	bnz	u11181
 21120  015BAC  0EF3               	movlw	-13
 21121  015BAE  50E3               	movf	plusw1,w,c
 21122  015BB0  E10C               	bnz	u11181
 21123  015BB2  0EF4               	movlw	-12
 21124  015BB4  50E3               	movf	plusw1,w,c
 21125  015BB6  E109               	bnz	u11181
 21126  015BB8  0EF5               	movlw	-11
 21127  015BBA  50E3               	movf	plusw1,w,c
 21128  015BBC  E106               	bnz	u11181
 21129  015BBE  0EF6               	movlw	-10
 21130  015BC0  50E3               	movf	plusw1,w,c
 21131  015BC2  E103               	bnz	u11181
 21132  015BC4  0EF7               	movlw	-9
 21133  015BC6  50E3               	movf	plusw1,w,c
 21134  015BC8  A4D8               	btfss	status,2,c
 21135  015BCA                     u11181:
 21136  015BCA  D6D4               	goto	l12212
 21137                           
 21138                           ;stkvar	_p @ sp[(-18)+16]
 21139  015BCC  0EFF               	movlw	-1
 21140  015BCE  BEE3               	btfsc	plusw1,7,c
 21141  015BD0  D007               	goto	u11190
 21142  015BD2  0EFF               	movlw	-1
 21143  015BD4  50E3               	movf	plusw1,w,c
 21144  015BD6  E103               	bnz	u11191
 21145  015BD8  0EFE               	movlw	-2
 21146  015BDA  04E3               	decf	plusw1,w,c
 21147  015BDC  B0D8               	btfsc	status,0,c
 21148  015BDE                     u11191:
 21149  015BDE  D6CA               	goto	l12212
 21150  015BE0                     u11190:
 21151                           
 21152                           ;stkvar	_w @ sp[(-18)+14]
 21153  015BE0  0EFD               	movlw	-3
 21154  015BE2  BEE3               	btfsc	plusw1,7,c
 21155  015BE4  D009               	goto	u11210
 21156  015BE6  0EFD               	movlw	-3
 21157  015BE8  50E3               	movf	plusw1,w,c
 21158  015BEA  E104               	bnz	u11200
 21159  015BEC  0EFC               	movlw	-4
 21160  015BEE  04E3               	decf	plusw1,w,c
 21161  015BF0  A0D8               	btfss	status,0,c
 21162  015BF2  D002               	goto	u11210
 21163  015BF4                     u11200:
 21164  015BF4  B23E               	btfsc	_flags^0,1,c
 21165  015BF6  D6BE               	goto	l12212
 21166  015BF8                     u11210:
 21167                           
 21168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 21169                           ;stkvar	_s @ sp[(-18)+12]
 21170  015BF8  0EFA               	movlw	-6
 21171  015BFA  006F FF8C  F001    	movff	plusw1,btemp
 21172  015C00  0EFB               	movlw	-5
 21173  015C02  50E3               	movf	plusw1,w,c
 21174  015C04  1001               	iorwf	btemp^0,w,c
 21175  015C06  A4D8               	btfss	status,2,c
 21176  015C08  D002               	goto	u11230
 21177  015C0A  A43E               	btfss	_flags^0,2,c
 21178  015C0C  D033               	goto	l12246
 21179  015C0E                     u11230:
 21180                           
 21181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 21182                           ;stkvar	_i @ sp[(-18)+10]
 21183  015C0E  50E1               	movf	fsr1l,w,c
 21184  015C10  0FF8               	addlw	-8
 21185  015C12  6ED9               	movwf	fsr2l,c
 21186  015C14  50E2               	movf	fsr1h,w,c
 21187  015C16  6EDA               	movwf	fsr2h,c
 21188  015C18  0EFF               	movlw	255
 21189  015C1A  22DA               	addwfc	fsr2h,f,c
 21190  015C1C  06DE               	decf	postinc2,f,c
 21191  015C1E  0E00               	movlw	0
 21192  015C20  5ADD               	subwfb	postdec2,f,c
 21193                           
 21194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 21195                           ;stkvar	_s @ sp[(-18)+12]
 21196  015C22  0EFA               	movlw	-6
 21197  015C24  006F FF8C  F001    	movff	plusw1,btemp
 21198  015C2A  0EFB               	movlw	-5
 21199  015C2C  50E3               	movf	plusw1,w,c
 21200  015C2E  1001               	iorwf	btemp^0,w,c
 21201  015C30  A4D8               	btfss	status,2,c
 21202  015C32  D002               	goto	l12242
 21203  015C34  0E2B               	movlw	43
 21204  015C36  D001               	goto	L25
 21205  015C38                     l12242:
 21206  015C38  0E2D               	movlw	45
 21207  015C3A                     L25:
 21208  015C3A  6E0B               	movwf	(btemp+10)^0,c
 21209  015C3C  0E00               	movlw	0
 21210  015C3E  6E0C               	movwf	(btemp+11)^0,c
 21211                           
 21212                           ;stkvar	_dtoa$5661 @ sp[(-18)+0]
 21213  015C40  0EEE               	movlw	-18
 21214  015C42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21215  015C48  0EEF               	movlw	-17
 21216  015C4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21217                           
 21218                           ;stkvar	_dtoa$5661 @ sp[(-18)+0]
 21219                           ;stkvar	_i @ sp[(-18)+10]
 21220  015C50  0EF8               	movlw	-8
 21221  015C52  006F FF8C  F00B    	movff	plusw1,btemp+10
 21222  015C58  0EF9               	movlw	-7
 21223  015C5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21224  015C60  0E97               	movlw	low _dbuf
 21225  015C62  240B               	addwf	(btemp+10)^0,w,c
 21226  015C64  6ED9               	movwf	fsr2l,c
 21227  015C66  0E02               	movlw	high _dbuf
 21228  015C68  200C               	addwfc	(btemp+11)^0,w,c
 21229  015C6A  6EDA               	movwf	fsr2h,c
 21230  015C6C  0EEE               	movlw	-18
 21231  015C6E  006F FF8F FFDF     	movff	plusw1,indf2
 21232  015C74                     l12246:
 21233                           
 21234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 21235                           ;stkvar	_w @ sp[(-18)+14]
 21236  015C74  0EFC               	movlw	-4
 21237  015C76  006F FF8F FFE6     	movff	plusw1,postinc1
 21238  015C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21239                           
 21240                           ;stkvar	_i @ sp[(-20)+10]
 21241  015C82  0E97               	movlw	low _dbuf
 21242  015C84  6E0B               	movwf	(btemp+10)^0,c
 21243  015C86  0E02               	movlw	high _dbuf
 21244  015C88  6E0C               	movwf	(btemp+11)^0,c
 21245  015C8A  0EF6               	movlw	-10
 21246  015C8C  50E3               	movf	plusw1,w,c
 21247  015C8E  260B               	addwf	(btemp+10)^0,f,c
 21248  015C90  0EF7               	movlw	-9
 21249  015C92  50E3               	movf	plusw1,w,c
 21250  015C94  220C               	addwfc	(btemp+11)^0,f,c
 21251  015C96  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21252  015C9C  0060  F033  FFE6   	movff	btemp+11,postinc1
 21253                           
 21254                           ;stkvar	_fp @ sp[(-22)+-2]
 21255  015CA2  0EE8               	movlw	-24
 21256  015CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 21257  015CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 21258  015CB0  EC04  F0CE         	call	_pad	;wreg free
 21259                           
 21260                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 21261  015CB4  0EE4               	movlw	228
 21262  015CB6  26E1               	addwf	fsr1l,f,c
 21263  015CB8  0EFF               	movlw	255
 21264  015CBA  22E2               	addwfc	fsr1h,f,c
 21265  015CBC  0012               	return		;funcret
 21266  015CBE                     __end_of_dtoa:
 21267                           	opt callstack 0
 21268                           
 21269 ;; *************** function _abs *****************
 21270 ;; Defined at:
 21271 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 21272 ;; Parameters:    Size  Location     Type
 21273 ;;  a               2  [STACK] int 
 21274 ;; Auto vars:     Size  Location     Type
 21275 ;;		None
 21276 ;; Return value:  Size  Location     Type
 21277 ;;                  2  [STACK] int 
 21278 ;; Registers used:
 21279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 21280 ;; Tracked objects:
 21281 ;;		On entry : 0/2
 21282 ;;		On exit  : 0/0
 21283 ;;		Unchanged: 0/0
 21284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21289 ;;Total ram usage:        0 bytes
 21290 ;; Hardware stack levels used:    1
 21291 ;; Hardware stack levels required when called:   15
 21292 ;; This function calls:
 21293 ;;		Nothing
 21294 ;; This function is called by:
 21295 ;;		_dtoa
 21296 ;; This function uses a reentrant model
 21297 ;;
 21298                           
 21299                           	psect	text74
 21300  01B95A                     __ptext74:
 21301                           	opt callstack 0
 21302  01B95A                     _abs:
 21303                           	opt callstack 0
 21304                           
 21305                           ;stkvar	_a @ sp[(0)+-2]
 21306                           
 21307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21308                           ;incstack = 0
 21309 ;; hardware stack exceeded
 21310  01B95A  0EFF               	movlw	-1
 21311  01B95C  BEE3               	btfsc	plusw1,7,c
 21312  01B95E  D007               	goto	u6080
 21313  01B960  0EFF               	movlw	-1
 21314  01B962  50E3               	movf	plusw1,w,c
 21315  01B964  E112               	bnz	l8168
 21316  01B966  0EFE               	movlw	-2
 21317  01B968  04E3               	decf	plusw1,w,c
 21318  01B96A  B0D8               	btfsc	status,0,c
 21319  01B96C  D00E               	goto	l8168
 21320  01B96E                     u6080:
 21321                           
 21322                           ;stkvar	_a @ sp[(0)+-2]
 21323  01B96E  0EFE               	movlw	-2
 21324  01B970  006F FF8C  F001    	movff	plusw1,btemp
 21325  01B976  1E01               	comf	btemp^0,f,c
 21326  01B978  0EFF               	movlw	-1
 21327  01B97A  006F FF8C  F002    	movff	plusw1,btemp+1
 21328  01B980  1E02               	comf	(btemp+1)^0,f,c
 21329  01B982  2A01               	incf	btemp^0,f,c
 21330  01B984  B4D8               	btfsc	status,2,c
 21331  01B986  2A02               	incf	(btemp+1)^0,f,c
 21332  01B988  D008               	goto	l3160
 21333  01B98A                     l8168:
 21334                           
 21335                           ;stkvar	_a @ sp[(0)+-2]
 21336  01B98A  0EFE               	movlw	-2
 21337  01B98C  006F FF8C  F001    	movff	plusw1,btemp
 21338  01B992  0EFF               	movlw	-1
 21339  01B994  006F FF8C  F002    	movff	plusw1,btemp+1
 21340  01B99A                     l3160:
 21341                           
 21342                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21343  01B99A  52E5               	movf	postdec1,f,c
 21344  01B99C  52E5               	movf	postdec1,f,c
 21345  01B99E  0012               	return		;funcret
 21346  01B9A0                     __end_of_abs:
 21347                           	opt callstack 0
 21348                           
 21349 ;; *************** function ___aomod *****************
 21350 ;; Defined at:
 21351 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21352 ;; Parameters:    Size  Location     Type
 21353 ;;  dividend        8  [STACK] long long 
 21354 ;;  divisor         8  [STACK] long long 
 21355 ;; Auto vars:     Size  Location     Type
 21356 ;;  sign            1  [STACK] unsigned char 
 21357 ;;  counter         1  [STACK] unsigned char 
 21358 ;; Return value:  Size  Location     Type
 21359 ;;                  8  [STACK] long long 
 21360 ;; Registers used:
 21361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21362 ;; Tracked objects:
 21363 ;;		On entry : 0/2
 21364 ;;		On exit  : 0/0
 21365 ;;		Unchanged: 0/0
 21366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21371 ;;Total ram usage:        0 bytes
 21372 ;; Hardware stack levels used:    1
 21373 ;; Hardware stack levels required when called:   15
 21374 ;; This function calls:
 21375 ;;		Nothing
 21376 ;; This function is called by:
 21377 ;;		_dtoa
 21378 ;; This function uses a reentrant model
 21379 ;;
 21380                           
 21381                           	psect	text75
 21382  017E58                     __ptext75:
 21383                           	opt callstack 0
 21384  017E58                     ___aomod:
 21385                           	opt callstack 0
 21386                           
 21387                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21388  017E58  52E6               	movf	postinc1,f,c
 21389  017E5A  52E6               	movf	postinc1,f,c
 21390                           
 21391                           ;stkvar	_sign @ sp[(-2)+0]
 21392                           
 21393                           ;incstack = 0
 21394 ;; hardware stack exceeded
 21395  017E5C  0EFE               	movlw	-2
 21396  017E5E  6AE3               	clrf	plusw1,c
 21397                           
 21398                           ;stkvar	_dividend @ sp[(-2)+-8]
 21399  017E60  0EFD               	movlw	-3
 21400  017E62  AEE3               	btfss	plusw1,7,c
 21401  017E64  D028               	goto	l8326
 21402                           
 21403                           ;stkvar	_dividend @ sp[(-2)+-8]
 21404                           ;stkvar	_dividend @ sp[(-2)+-8]
 21405  017E66  0EF6               	movlw	-10
 21406  017E68  6CE3               	negf	plusw1,c
 21407  017E6A  0EF7               	movlw	-9
 21408  017E6C  1EE3               	comf	plusw1,f,c
 21409  017E6E  0EF8               	movlw	-8
 21410  017E70  1EE3               	comf	plusw1,f,c
 21411  017E72  0EF9               	movlw	-7
 21412  017E74  1EE3               	comf	plusw1,f,c
 21413  017E76  0EFA               	movlw	-6
 21414  017E78  1EE3               	comf	plusw1,f,c
 21415  017E7A  0EFB               	movlw	-5
 21416  017E7C  1EE3               	comf	plusw1,f,c
 21417  017E7E  0EFC               	movlw	-4
 21418  017E80  1EE3               	comf	plusw1,f,c
 21419  017E82  0EFD               	movlw	-3
 21420  017E84  1EE3               	comf	plusw1,f,c
 21421  017E86  E314               	bnc	u6510
 21422  017E88  0EF7               	movlw	-9
 21423  017E8A  2AE3               	incf	plusw1,f,c
 21424  017E8C  E311               	bnc	u6510
 21425  017E8E  0EF8               	movlw	-8
 21426  017E90  2AE3               	incf	plusw1,f,c
 21427  017E92  E30E               	bnc	u6510
 21428  017E94  0EF9               	movlw	-7
 21429  017E96  2AE3               	incf	plusw1,f,c
 21430  017E98  E30B               	bnc	u6510
 21431  017E9A  0EFA               	movlw	-6
 21432  017E9C  2AE3               	incf	plusw1,f,c
 21433  017E9E  E308               	bnc	u6510
 21434  017EA0  0EFB               	movlw	-5
 21435  017EA2  2AE3               	incf	plusw1,f,c
 21436  017EA4  E305               	bnc	u6510
 21437  017EA6  0EFC               	movlw	-4
 21438  017EA8  2AE3               	incf	plusw1,f,c
 21439  017EAA  E302               	bnc	u6510
 21440  017EAC  0EFD               	movlw	-3
 21441  017EAE  2AE3               	incf	plusw1,f,c
 21442  017EB0                     u6510:
 21443                           
 21444                           ;stkvar	_sign @ sp[(-2)+0]
 21445  017EB0  0EFE               	movlw	-2
 21446  017EB2  6AE3               	clrf	plusw1,c
 21447  017EB4  2AE3               	incf	plusw1,f,c
 21448  017EB6                     l8326:
 21449                           
 21450                           ;stkvar	_divisor @ sp[(-2)+-16]
 21451  017EB6  0EF5               	movlw	-11
 21452  017EB8  AEE3               	btfss	plusw1,7,c
 21453  017EBA  D025               	goto	u6530
 21454                           
 21455                           ;stkvar	_divisor @ sp[(-2)+-16]
 21456                           ;stkvar	_divisor @ sp[(-2)+-16]
 21457  017EBC  0EEE               	movlw	-18
 21458  017EBE  6CE3               	negf	plusw1,c
 21459  017EC0  0EEF               	movlw	-17
 21460  017EC2  1EE3               	comf	plusw1,f,c
 21461  017EC4  0EF0               	movlw	-16
 21462  017EC6  1EE3               	comf	plusw1,f,c
 21463  017EC8  0EF1               	movlw	-15
 21464  017ECA  1EE3               	comf	plusw1,f,c
 21465  017ECC  0EF2               	movlw	-14
 21466  017ECE  1EE3               	comf	plusw1,f,c
 21467  017ED0  0EF3               	movlw	-13
 21468  017ED2  1EE3               	comf	plusw1,f,c
 21469  017ED4  0EF4               	movlw	-12
 21470  017ED6  1EE3               	comf	plusw1,f,c
 21471  017ED8  0EF5               	movlw	-11
 21472  017EDA  1EE3               	comf	plusw1,f,c
 21473  017EDC  E314               	bnc	u6530
 21474  017EDE  0EEF               	movlw	-17
 21475  017EE0  2AE3               	incf	plusw1,f,c
 21476  017EE2  E311               	bnc	u6530
 21477  017EE4  0EF0               	movlw	-16
 21478  017EE6  2AE3               	incf	plusw1,f,c
 21479  017EE8  E30E               	bnc	u6530
 21480  017EEA  0EF1               	movlw	-15
 21481  017EEC  2AE3               	incf	plusw1,f,c
 21482  017EEE  E30B               	bnc	u6530
 21483  017EF0  0EF2               	movlw	-14
 21484  017EF2  2AE3               	incf	plusw1,f,c
 21485  017EF4  E308               	bnc	u6530
 21486  017EF6  0EF3               	movlw	-13
 21487  017EF8  2AE3               	incf	plusw1,f,c
 21488  017EFA  E305               	bnc	u6530
 21489  017EFC  0EF4               	movlw	-12
 21490  017EFE  2AE3               	incf	plusw1,f,c
 21491  017F00  E302               	bnc	u6530
 21492  017F02  0EF5               	movlw	-11
 21493  017F04  2AE3               	incf	plusw1,f,c
 21494  017F06                     u6530:
 21495                           
 21496                           ;stkvar	_divisor @ sp[(-2)+-16]
 21497  017F06  0EEE               	movlw	-18
 21498  017F08  50E3               	movf	plusw1,w,c
 21499  017F0A  E116               	bnz	u6540
 21500  017F0C  0EEF               	movlw	-17
 21501  017F0E  50E3               	movf	plusw1,w,c
 21502  017F10  E113               	bnz	u6540
 21503  017F12  0EF0               	movlw	-16
 21504  017F14  50E3               	movf	plusw1,w,c
 21505  017F16  E110               	bnz	u6540
 21506  017F18  0EF1               	movlw	-15
 21507  017F1A  50E3               	movf	plusw1,w,c
 21508  017F1C  E10D               	bnz	u6540
 21509  017F1E  0EF2               	movlw	-14
 21510  017F20  50E3               	movf	plusw1,w,c
 21511  017F22  E10A               	bnz	u6540
 21512  017F24  0EF3               	movlw	-13
 21513  017F26  50E3               	movf	plusw1,w,c
 21514  017F28  E107               	bnz	u6540
 21515  017F2A  0EF4               	movlw	-12
 21516  017F2C  50E3               	movf	plusw1,w,c
 21517  017F2E  E104               	bnz	u6540
 21518  017F30  0EF5               	movlw	-11
 21519  017F32  50E3               	movf	plusw1,w,c
 21520  017F34  B4D8               	btfsc	status,2,c
 21521  017F36  D075               	goto	u6570
 21522  017F38                     u6540:
 21523                           
 21524                           ;stkvar	_counter @ sp[(-2)+1]
 21525  017F38  0EFF               	movlw	-1
 21526  017F3A  6AE3               	clrf	plusw1,c
 21527  017F3C  D012               	goto	L26
 21528  017F3E                     l8334:
 21529                           
 21530                           ;stkvar	_divisor @ sp[(-2)+-16]
 21531  017F3E  90D8               	bcf	status,0,c
 21532  017F40  0EEE               	movlw	-18
 21533  017F42  36E3               	rlcf	plusw1,f,c
 21534  017F44  0EEF               	movlw	-17
 21535  017F46  36E3               	rlcf	plusw1,f,c
 21536  017F48  0EF0               	movlw	-16
 21537  017F4A  36E3               	rlcf	plusw1,f,c
 21538  017F4C  0EF1               	movlw	-15
 21539  017F4E  36E3               	rlcf	plusw1,f,c
 21540  017F50  0EF2               	movlw	-14
 21541  017F52  36E3               	rlcf	plusw1,f,c
 21542  017F54  0EF3               	movlw	-13
 21543  017F56  36E3               	rlcf	plusw1,f,c
 21544  017F58  0EF4               	movlw	-12
 21545  017F5A  36E3               	rlcf	plusw1,f,c
 21546  017F5C  0EF5               	movlw	-11
 21547  017F5E  36E3               	rlcf	plusw1,f,c
 21548                           
 21549                           ;stkvar	_counter @ sp[(-2)+1]
 21550  017F60  0EFF               	movlw	-1
 21551  017F62                     L26:
 21552  017F62  2AE3               	incf	plusw1,f,c
 21553                           
 21554                           ;stkvar	_divisor @ sp[(-2)+-16]
 21555  017F64  0EF5               	movlw	-11
 21556  017F66  AEE3               	btfss	plusw1,7,c
 21557  017F68  D7EA               	goto	l8334
 21558  017F6A                     u6550:
 21559                           
 21560                           ;stkvar	_divisor @ sp[(-2)+-16]
 21561                           ;stkvar	_dividend @ sp[(-2)+-8]
 21562  017F6A  50E1               	movf	fsr1l,w,c
 21563  017F6C  0FF6               	addlw	-10
 21564  017F6E  6ED9               	movwf	fsr2l,c
 21565  017F70  50E2               	movf	fsr1h,w,c
 21566  017F72  6EDA               	movwf	fsr2h,c
 21567  017F74  0EFF               	movlw	255
 21568  017F76  22DA               	addwfc	fsr2h,f,c
 21569  017F78  0EEE               	movlw	-18
 21570  017F7A  50E3               	movf	plusw1,w,c
 21571  017F7C  5CDE               	subwf	postinc2,w,c
 21572  017F7E  0EEF               	movlw	-17
 21573  017F80  50E3               	movf	plusw1,w,c
 21574  017F82  58DE               	subwfb	postinc2,w,c
 21575  017F84  0EF0               	movlw	-16
 21576  017F86  50E3               	movf	plusw1,w,c
 21577  017F88  58DE               	subwfb	postinc2,w,c
 21578  017F8A  0EF1               	movlw	-15
 21579  017F8C  50E3               	movf	plusw1,w,c
 21580  017F8E  58DE               	subwfb	postinc2,w,c
 21581  017F90  0EF2               	movlw	-14
 21582  017F92  50E3               	movf	plusw1,w,c
 21583  017F94  58DE               	subwfb	postinc2,w,c
 21584  017F96  0EF3               	movlw	-13
 21585  017F98  50E3               	movf	plusw1,w,c
 21586  017F9A  58DE               	subwfb	postinc2,w,c
 21587  017F9C  0EF4               	movlw	-12
 21588  017F9E  50E3               	movf	plusw1,w,c
 21589  017FA0  58DE               	subwfb	postinc2,w,c
 21590  017FA2  0EF5               	movlw	-11
 21591  017FA4  50E3               	movf	plusw1,w,c
 21592  017FA6  58DE               	subwfb	postinc2,w,c
 21593  017FA8  A0D8               	btfss	status,0,c
 21594  017FAA  D01F               	goto	l8342
 21595                           
 21596                           ;stkvar	_divisor @ sp[(-2)+-16]
 21597                           ;stkvar	_dividend @ sp[(-2)+-8]
 21598  017FAC  50E1               	movf	fsr1l,w,c
 21599  017FAE  0FF6               	addlw	-10
 21600  017FB0  6ED9               	movwf	fsr2l,c
 21601  017FB2  50E2               	movf	fsr1h,w,c
 21602  017FB4  6EDA               	movwf	fsr2h,c
 21603  017FB6  0EFF               	movlw	255
 21604  017FB8  22DA               	addwfc	fsr2h,f,c
 21605  017FBA  0EEE               	movlw	-18
 21606  017FBC  50E3               	movf	plusw1,w,c
 21607  017FBE  5EDE               	subwf	postinc2,f,c
 21608  017FC0  0EEF               	movlw	-17
 21609  017FC2  50E3               	movf	plusw1,w,c
 21610  017FC4  5ADE               	subwfb	postinc2,f,c
 21611  017FC6  0EF0               	movlw	-16
 21612  017FC8  50E3               	movf	plusw1,w,c
 21613  017FCA  5ADE               	subwfb	postinc2,f,c
 21614  017FCC  0EF1               	movlw	-15
 21615  017FCE  50E3               	movf	plusw1,w,c
 21616  017FD0  5ADE               	subwfb	postinc2,f,c
 21617  017FD2  0EF2               	movlw	-14
 21618  017FD4  50E3               	movf	plusw1,w,c
 21619  017FD6  5ADE               	subwfb	postinc2,f,c
 21620  017FD8  0EF3               	movlw	-13
 21621  017FDA  50E3               	movf	plusw1,w,c
 21622  017FDC  5ADE               	subwfb	postinc2,f,c
 21623  017FDE  0EF4               	movlw	-12
 21624  017FE0  50E3               	movf	plusw1,w,c
 21625  017FE2  5ADE               	subwfb	postinc2,f,c
 21626  017FE4  0EF5               	movlw	-11
 21627  017FE6  50E3               	movf	plusw1,w,c
 21628  017FE8  5ADE               	subwfb	postinc2,f,c
 21629  017FEA                     l8342:
 21630                           
 21631                           ;stkvar	_divisor @ sp[(-2)+-16]
 21632  017FEA  90D8               	bcf	status,0,c
 21633  017FEC  0EF5               	movlw	-11
 21634  017FEE  32E3               	rrcf	plusw1,f,c
 21635  017FF0  0EF4               	movlw	-12
 21636  017FF2  32E3               	rrcf	plusw1,f,c
 21637  017FF4  0EF3               	movlw	-13
 21638  017FF6  32E3               	rrcf	plusw1,f,c
 21639  017FF8  0EF2               	movlw	-14
 21640  017FFA  32E3               	rrcf	plusw1,f,c
 21641  017FFC  0EF1               	movlw	-15
 21642  017FFE  32E3               	rrcf	plusw1,f,c
 21643  018000  0EF0               	movlw	-16
 21644  018002  32E3               	rrcf	plusw1,f,c
 21645  018004  0EEF               	movlw	-17
 21646  018006  32E3               	rrcf	plusw1,f,c
 21647  018008  0EEE               	movlw	-18
 21648  01800A  32E3               	rrcf	plusw1,f,c
 21649                           
 21650                           ;stkvar	_counter @ sp[(-2)+1]
 21651  01800C  0EFF               	movlw	-1
 21652  01800E  50E3               	movf	plusw1,w,c
 21653  018010  6E01               	movwf	btemp^0,c
 21654  018012  0E01               	movlw	1
 21655  018014  5E01               	subwf	btemp^0,f,c
 21656  018016  0EFF               	movlw	-1
 21657  018018  0060  F007  FFE3   	movff	btemp,plusw1
 21658  01801E  A4D8               	btfss	status,2,c
 21659  018020  D7A4               	goto	u6550
 21660  018022                     u6570:
 21661                           
 21662                           ;stkvar	_sign @ sp[(-2)+0]
 21663  018022  0EFE               	movlw	-2
 21664  018024  50E3               	movf	plusw1,w,c
 21665  018026  B4D8               	btfsc	status,2,c
 21666  018028  D025               	goto	u6590
 21667                           
 21668                           ;stkvar	_dividend @ sp[(-2)+-8]
 21669                           ;stkvar	_dividend @ sp[(-2)+-8]
 21670  01802A  0EF6               	movlw	-10
 21671  01802C  6CE3               	negf	plusw1,c
 21672  01802E  0EF7               	movlw	-9
 21673  018030  1EE3               	comf	plusw1,f,c
 21674  018032  0EF8               	movlw	-8
 21675  018034  1EE3               	comf	plusw1,f,c
 21676  018036  0EF9               	movlw	-7
 21677  018038  1EE3               	comf	plusw1,f,c
 21678  01803A  0EFA               	movlw	-6
 21679  01803C  1EE3               	comf	plusw1,f,c
 21680  01803E  0EFB               	movlw	-5
 21681  018040  1EE3               	comf	plusw1,f,c
 21682  018042  0EFC               	movlw	-4
 21683  018044  1EE3               	comf	plusw1,f,c
 21684  018046  0EFD               	movlw	-3
 21685  018048  1EE3               	comf	plusw1,f,c
 21686  01804A  E314               	bnc	u6590
 21687  01804C  0EF7               	movlw	-9
 21688  01804E  2AE3               	incf	plusw1,f,c
 21689  018050  E311               	bnc	u6590
 21690  018052  0EF8               	movlw	-8
 21691  018054  2AE3               	incf	plusw1,f,c
 21692  018056  E30E               	bnc	u6590
 21693  018058  0EF9               	movlw	-7
 21694  01805A  2AE3               	incf	plusw1,f,c
 21695  01805C  E30B               	bnc	u6590
 21696  01805E  0EFA               	movlw	-6
 21697  018060  2AE3               	incf	plusw1,f,c
 21698  018062  E308               	bnc	u6590
 21699  018064  0EFB               	movlw	-5
 21700  018066  2AE3               	incf	plusw1,f,c
 21701  018068  E305               	bnc	u6590
 21702  01806A  0EFC               	movlw	-4
 21703  01806C  2AE3               	incf	plusw1,f,c
 21704  01806E  E302               	bnc	u6590
 21705  018070  0EFD               	movlw	-3
 21706  018072  2AE3               	incf	plusw1,f,c
 21707  018074                     u6590:
 21708                           
 21709                           ;stkvar	_dividend @ sp[(-2)+-8]
 21710  018074  0EF6               	movlw	246
 21711  018076  24E1               	addwf	fsr1l,w,c
 21712  018078  6ED9               	movwf	fsr2l,c
 21713  01807A  0EFF               	movlw	255
 21714  01807C  20E2               	addwfc	fsr1h,w,c
 21715  01807E  6EDA               	movwf	fsr2h,c
 21716                           
 21717                           ;stkvar	?___aomod @ sp[(-2)+-8]
 21718  018080  0E08               	movlw	8
 21719  018082  6E01               	movwf	btemp^0,c
 21720  018084  0EF6               	movlw	-10
 21721  018086                     us660999:
 21722  018086  006F FF7B FFE3     	movff	postinc2,plusw1
 21723  01808C  28E8               	incf	wreg,w,c
 21724  01808E  2E01               	decfsz	btemp^0,f,c
 21725  018090  D7FA               	bra	us660999
 21726                           
 21727                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 21728  018092  52E5               	movf	postdec1,f,c
 21729  018094  52E5               	movf	postdec1,f,c
 21730  018096  0012               	return		;funcret
 21731  018098                     __end_of___aomod:
 21732                           	opt callstack 0
 21733                           
 21734 ;; *************** function ___aodiv *****************
 21735 ;; Defined at:
 21736 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 21737 ;; Parameters:    Size  Location     Type
 21738 ;;  dividend        8  [STACK] long long 
 21739 ;;  divisor         8  [STACK] long long 
 21740 ;; Auto vars:     Size  Location     Type
 21741 ;;  quotient        8  [STACK] long long 
 21742 ;;  sign            1  [STACK] unsigned char 
 21743 ;;  counter         1  [STACK] unsigned char 
 21744 ;; Return value:  Size  Location     Type
 21745 ;;                  8  [STACK] long long 
 21746 ;; Registers used:
 21747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21748 ;; Tracked objects:
 21749 ;;		On entry : 0/2
 21750 ;;		On exit  : 0/0
 21751 ;;		Unchanged: 0/0
 21752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21757 ;;Total ram usage:        0 bytes
 21758 ;; Hardware stack levels used:    1
 21759 ;; Hardware stack levels required when called:   15
 21760 ;; This function calls:
 21761 ;;		Nothing
 21762 ;; This function is called by:
 21763 ;;		_dtoa
 21764 ;; This function uses a reentrant model
 21765 ;;
 21766                           
 21767                           	psect	text76
 21768  01771E                     __ptext76:
 21769                           	opt callstack 0
 21770  01771E                     ___aodiv:
 21771                           	opt callstack 0
 21772                           
 21773                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21774  01771E  0E0A               	movlw	10
 21775  017720  26E1               	addwf	fsr1l,f,c
 21776  017722  0E00               	movlw	0
 21777  017724  22E2               	addwfc	fsr1h,f,c
 21778                           
 21779                           ;stkvar	_sign @ sp[(-10)+8]
 21780                           
 21781                           ;incstack = 0
 21782 ;; hardware stack exceeded
 21783  017726  0EFE               	movlw	-2
 21784  017728  6AE3               	clrf	plusw1,c
 21785                           
 21786                           ;stkvar	_divisor @ sp[(-10)+-16]
 21787  01772A  0EED               	movlw	-19
 21788  01772C  AEE3               	btfss	plusw1,7,c
 21789  01772E  D028               	goto	l8282
 21790                           
 21791                           ;stkvar	_divisor @ sp[(-10)+-16]
 21792                           ;stkvar	_divisor @ sp[(-10)+-16]
 21793  017730  0EE6               	movlw	-26
 21794  017732  6CE3               	negf	plusw1,c
 21795  017734  0EE7               	movlw	-25
 21796  017736  1EE3               	comf	plusw1,f,c
 21797  017738  0EE8               	movlw	-24
 21798  01773A  1EE3               	comf	plusw1,f,c
 21799  01773C  0EE9               	movlw	-23
 21800  01773E  1EE3               	comf	plusw1,f,c
 21801  017740  0EEA               	movlw	-22
 21802  017742  1EE3               	comf	plusw1,f,c
 21803  017744  0EEB               	movlw	-21
 21804  017746  1EE3               	comf	plusw1,f,c
 21805  017748  0EEC               	movlw	-20
 21806  01774A  1EE3               	comf	plusw1,f,c
 21807  01774C  0EED               	movlw	-19
 21808  01774E  1EE3               	comf	plusw1,f,c
 21809  017750  E314               	bnc	u6390
 21810  017752  0EE7               	movlw	-25
 21811  017754  2AE3               	incf	plusw1,f,c
 21812  017756  E311               	bnc	u6390
 21813  017758  0EE8               	movlw	-24
 21814  01775A  2AE3               	incf	plusw1,f,c
 21815  01775C  E30E               	bnc	u6390
 21816  01775E  0EE9               	movlw	-23
 21817  017760  2AE3               	incf	plusw1,f,c
 21818  017762  E30B               	bnc	u6390
 21819  017764  0EEA               	movlw	-22
 21820  017766  2AE3               	incf	plusw1,f,c
 21821  017768  E308               	bnc	u6390
 21822  01776A  0EEB               	movlw	-21
 21823  01776C  2AE3               	incf	plusw1,f,c
 21824  01776E  E305               	bnc	u6390
 21825  017770  0EEC               	movlw	-20
 21826  017772  2AE3               	incf	plusw1,f,c
 21827  017774  E302               	bnc	u6390
 21828  017776  0EED               	movlw	-19
 21829  017778  2AE3               	incf	plusw1,f,c
 21830  01777A                     u6390:
 21831                           
 21832                           ;stkvar	_sign @ sp[(-10)+8]
 21833  01777A  0EFE               	movlw	-2
 21834  01777C  6AE3               	clrf	plusw1,c
 21835  01777E  2AE3               	incf	plusw1,f,c
 21836  017780                     l8282:
 21837                           
 21838                           ;stkvar	_dividend @ sp[(-10)+-8]
 21839  017780  0EF5               	movlw	-11
 21840  017782  AEE3               	btfss	plusw1,7,c
 21841  017784  D027               	goto	l8288
 21842                           
 21843                           ;stkvar	_dividend @ sp[(-10)+-8]
 21844                           ;stkvar	_dividend @ sp[(-10)+-8]
 21845  017786  0EEE               	movlw	-18
 21846  017788  6CE3               	negf	plusw1,c
 21847  01778A  0EEF               	movlw	-17
 21848  01778C  1EE3               	comf	plusw1,f,c
 21849  01778E  0EF0               	movlw	-16
 21850  017790  1EE3               	comf	plusw1,f,c
 21851  017792  0EF1               	movlw	-15
 21852  017794  1EE3               	comf	plusw1,f,c
 21853  017796  0EF2               	movlw	-14
 21854  017798  1EE3               	comf	plusw1,f,c
 21855  01779A  0EF3               	movlw	-13
 21856  01779C  1EE3               	comf	plusw1,f,c
 21857  01779E  0EF4               	movlw	-12
 21858  0177A0  1EE3               	comf	plusw1,f,c
 21859  0177A2  0EF5               	movlw	-11
 21860  0177A4  1EE3               	comf	plusw1,f,c
 21861  0177A6  E314               	bnc	u6410
 21862  0177A8  0EEF               	movlw	-17
 21863  0177AA  2AE3               	incf	plusw1,f,c
 21864  0177AC  E311               	bnc	u6410
 21865  0177AE  0EF0               	movlw	-16
 21866  0177B0  2AE3               	incf	plusw1,f,c
 21867  0177B2  E30E               	bnc	u6410
 21868  0177B4  0EF1               	movlw	-15
 21869  0177B6  2AE3               	incf	plusw1,f,c
 21870  0177B8  E30B               	bnc	u6410
 21871  0177BA  0EF2               	movlw	-14
 21872  0177BC  2AE3               	incf	plusw1,f,c
 21873  0177BE  E308               	bnc	u6410
 21874  0177C0  0EF3               	movlw	-13
 21875  0177C2  2AE3               	incf	plusw1,f,c
 21876  0177C4  E305               	bnc	u6410
 21877  0177C6  0EF4               	movlw	-12
 21878  0177C8  2AE3               	incf	plusw1,f,c
 21879  0177CA  E302               	bnc	u6410
 21880  0177CC  0EF5               	movlw	-11
 21881  0177CE  2AE3               	incf	plusw1,f,c
 21882  0177D0                     u6410:
 21883                           
 21884                           ;stkvar	_sign @ sp[(-10)+8]
 21885  0177D0  0EFE               	movlw	-2
 21886  0177D2  70E3               	btg	plusw1,0,c
 21887  0177D4                     l8288:
 21888                           
 21889                           ;stkvar	_quotient @ sp[(-10)+0]
 21890  0177D4  0E07               	movlw	7
 21891  0177D6  6E01               	movwf	btemp^0,c
 21892  0177D8  0EF6               	movlw	-10
 21893  0177DA                     u6421:
 21894  0177DA  6AE3               	clrf	plusw1,c
 21895  0177DC  2AE8               	incf	wreg,f,c
 21896  0177DE  0601               	decf	btemp^0,f,c
 21897  0177E0  E2FC               	bc	u6421
 21898                           
 21899                           ;stkvar	_divisor @ sp[(-10)+-16]
 21900  0177E2  0EE6               	movlw	-26
 21901  0177E4  50E3               	movf	plusw1,w,c
 21902  0177E6  E116               	bnz	u6430
 21903  0177E8  0EE7               	movlw	-25
 21904  0177EA  50E3               	movf	plusw1,w,c
 21905  0177EC  E113               	bnz	u6430
 21906  0177EE  0EE8               	movlw	-24
 21907  0177F0  50E3               	movf	plusw1,w,c
 21908  0177F2  E110               	bnz	u6430
 21909  0177F4  0EE9               	movlw	-23
 21910  0177F6  50E3               	movf	plusw1,w,c
 21911  0177F8  E10D               	bnz	u6430
 21912  0177FA  0EEA               	movlw	-22
 21913  0177FC  50E3               	movf	plusw1,w,c
 21914  0177FE  E10A               	bnz	u6430
 21915  017800  0EEB               	movlw	-21
 21916  017802  50E3               	movf	plusw1,w,c
 21917  017804  E107               	bnz	u6430
 21918  017806  0EEC               	movlw	-20
 21919  017808  50E3               	movf	plusw1,w,c
 21920  01780A  E104               	bnz	u6430
 21921  01780C  0EED               	movlw	-19
 21922  01780E  50E3               	movf	plusw1,w,c
 21923  017810  B4D8               	btfsc	status,2,c
 21924  017812  D088               	goto	u6460
 21925  017814                     u6430:
 21926                           
 21927                           ;stkvar	_counter @ sp[(-10)+9]
 21928  017814  0EFF               	movlw	-1
 21929  017816  6AE3               	clrf	plusw1,c
 21930  017818  D012               	goto	L27
 21931  01781A                     l8294:
 21932                           
 21933                           ;stkvar	_divisor @ sp[(-10)+-16]
 21934  01781A  90D8               	bcf	status,0,c
 21935  01781C  0EE6               	movlw	-26
 21936  01781E  36E3               	rlcf	plusw1,f,c
 21937  017820  0EE7               	movlw	-25
 21938  017822  36E3               	rlcf	plusw1,f,c
 21939  017824  0EE8               	movlw	-24
 21940  017826  36E3               	rlcf	plusw1,f,c
 21941  017828  0EE9               	movlw	-23
 21942  01782A  36E3               	rlcf	plusw1,f,c
 21943  01782C  0EEA               	movlw	-22
 21944  01782E  36E3               	rlcf	plusw1,f,c
 21945  017830  0EEB               	movlw	-21
 21946  017832  36E3               	rlcf	plusw1,f,c
 21947  017834  0EEC               	movlw	-20
 21948  017836  36E3               	rlcf	plusw1,f,c
 21949  017838  0EED               	movlw	-19
 21950  01783A  36E3               	rlcf	plusw1,f,c
 21951                           
 21952                           ;stkvar	_counter @ sp[(-10)+9]
 21953  01783C  0EFF               	movlw	-1
 21954  01783E                     L27:
 21955  01783E  2AE3               	incf	plusw1,f,c
 21956                           
 21957                           ;stkvar	_divisor @ sp[(-10)+-16]
 21958  017840  0EED               	movlw	-19
 21959  017842  AEE3               	btfss	plusw1,7,c
 21960  017844  D7EA               	goto	l8294
 21961  017846                     u6440:
 21962                           
 21963                           ;stkvar	_quotient @ sp[(-10)+0]
 21964  017846  90D8               	bcf	status,0,c
 21965  017848  0EF6               	movlw	-10
 21966  01784A  36E3               	rlcf	plusw1,f,c
 21967  01784C  0EF7               	movlw	-9
 21968  01784E  36E3               	rlcf	plusw1,f,c
 21969  017850  0EF8               	movlw	-8
 21970  017852  36E3               	rlcf	plusw1,f,c
 21971  017854  0EF9               	movlw	-7
 21972  017856  36E3               	rlcf	plusw1,f,c
 21973  017858  0EFA               	movlw	-6
 21974  01785A  36E3               	rlcf	plusw1,f,c
 21975  01785C  0EFB               	movlw	-5
 21976  01785E  36E3               	rlcf	plusw1,f,c
 21977  017860  0EFC               	movlw	-4
 21978  017862  36E3               	rlcf	plusw1,f,c
 21979  017864  0EFD               	movlw	-3
 21980  017866  36E3               	rlcf	plusw1,f,c
 21981                           
 21982                           ;stkvar	_divisor @ sp[(-10)+-16]
 21983                           ;stkvar	_dividend @ sp[(-10)+-8]
 21984  017868  50E1               	movf	fsr1l,w,c
 21985  01786A  0FEE               	addlw	-18
 21986  01786C  6ED9               	movwf	fsr2l,c
 21987  01786E  50E2               	movf	fsr1h,w,c
 21988  017870  6EDA               	movwf	fsr2h,c
 21989  017872  0EFF               	movlw	255
 21990  017874  22DA               	addwfc	fsr2h,f,c
 21991  017876  0EE6               	movlw	-26
 21992  017878  50E3               	movf	plusw1,w,c
 21993  01787A  5CDE               	subwf	postinc2,w,c
 21994  01787C  0EE7               	movlw	-25
 21995  01787E  50E3               	movf	plusw1,w,c
 21996  017880  58DE               	subwfb	postinc2,w,c
 21997  017882  0EE8               	movlw	-24
 21998  017884  50E3               	movf	plusw1,w,c
 21999  017886  58DE               	subwfb	postinc2,w,c
 22000  017888  0EE9               	movlw	-23
 22001  01788A  50E3               	movf	plusw1,w,c
 22002  01788C  58DE               	subwfb	postinc2,w,c
 22003  01788E  0EEA               	movlw	-22
 22004  017890  50E3               	movf	plusw1,w,c
 22005  017892  58DE               	subwfb	postinc2,w,c
 22006  017894  0EEB               	movlw	-21
 22007  017896  50E3               	movf	plusw1,w,c
 22008  017898  58DE               	subwfb	postinc2,w,c
 22009  01789A  0EEC               	movlw	-20
 22010  01789C  50E3               	movf	plusw1,w,c
 22011  01789E  58DE               	subwfb	postinc2,w,c
 22012  0178A0  0EED               	movlw	-19
 22013  0178A2  50E3               	movf	plusw1,w,c
 22014  0178A4  58DE               	subwfb	postinc2,w,c
 22015  0178A6  A0D8               	btfss	status,0,c
 22016  0178A8  D021               	goto	l8306
 22017                           
 22018                           ;stkvar	_divisor @ sp[(-10)+-16]
 22019                           ;stkvar	_dividend @ sp[(-10)+-8]
 22020  0178AA  50E1               	movf	fsr1l,w,c
 22021  0178AC  0FEE               	addlw	-18
 22022  0178AE  6ED9               	movwf	fsr2l,c
 22023  0178B0  50E2               	movf	fsr1h,w,c
 22024  0178B2  6EDA               	movwf	fsr2h,c
 22025  0178B4  0EFF               	movlw	255
 22026  0178B6  22DA               	addwfc	fsr2h,f,c
 22027  0178B8  0EE6               	movlw	-26
 22028  0178BA  50E3               	movf	plusw1,w,c
 22029  0178BC  5EDE               	subwf	postinc2,f,c
 22030  0178BE  0EE7               	movlw	-25
 22031  0178C0  50E3               	movf	plusw1,w,c
 22032  0178C2  5ADE               	subwfb	postinc2,f,c
 22033  0178C4  0EE8               	movlw	-24
 22034  0178C6  50E3               	movf	plusw1,w,c
 22035  0178C8  5ADE               	subwfb	postinc2,f,c
 22036  0178CA  0EE9               	movlw	-23
 22037  0178CC  50E3               	movf	plusw1,w,c
 22038  0178CE  5ADE               	subwfb	postinc2,f,c
 22039  0178D0  0EEA               	movlw	-22
 22040  0178D2  50E3               	movf	plusw1,w,c
 22041  0178D4  5ADE               	subwfb	postinc2,f,c
 22042  0178D6  0EEB               	movlw	-21
 22043  0178D8  50E3               	movf	plusw1,w,c
 22044  0178DA  5ADE               	subwfb	postinc2,f,c
 22045  0178DC  0EEC               	movlw	-20
 22046  0178DE  50E3               	movf	plusw1,w,c
 22047  0178E0  5ADE               	subwfb	postinc2,f,c
 22048  0178E2  0EED               	movlw	-19
 22049  0178E4  50E3               	movf	plusw1,w,c
 22050  0178E6  5ADE               	subwfb	postinc2,f,c
 22051                           
 22052                           ;stkvar	_quotient @ sp[(-10)+0]
 22053  0178E8  0EF6               	movlw	-10
 22054  0178EA  80E3               	bsf	plusw1,0,c
 22055  0178EC                     l8306:
 22056                           
 22057                           ;stkvar	_divisor @ sp[(-10)+-16]
 22058  0178EC  90D8               	bcf	status,0,c
 22059  0178EE  0EED               	movlw	-19
 22060  0178F0  32E3               	rrcf	plusw1,f,c
 22061  0178F2  0EEC               	movlw	-20
 22062  0178F4  32E3               	rrcf	plusw1,f,c
 22063  0178F6  0EEB               	movlw	-21
 22064  0178F8  32E3               	rrcf	plusw1,f,c
 22065  0178FA  0EEA               	movlw	-22
 22066  0178FC  32E3               	rrcf	plusw1,f,c
 22067  0178FE  0EE9               	movlw	-23
 22068  017900  32E3               	rrcf	plusw1,f,c
 22069  017902  0EE8               	movlw	-24
 22070  017904  32E3               	rrcf	plusw1,f,c
 22071  017906  0EE7               	movlw	-25
 22072  017908  32E3               	rrcf	plusw1,f,c
 22073  01790A  0EE6               	movlw	-26
 22074  01790C  32E3               	rrcf	plusw1,f,c
 22075                           
 22076                           ;stkvar	_counter @ sp[(-10)+9]
 22077  01790E  0EFF               	movlw	-1
 22078  017910  50E3               	movf	plusw1,w,c
 22079  017912  6E01               	movwf	btemp^0,c
 22080  017914  0E01               	movlw	1
 22081  017916  5E01               	subwf	btemp^0,f,c
 22082  017918  0EFF               	movlw	-1
 22083  01791A  0060  F007  FFE3   	movff	btemp,plusw1
 22084  017920  A4D8               	btfss	status,2,c
 22085  017922  D791               	goto	u6440
 22086  017924                     u6460:
 22087                           
 22088                           ;stkvar	_sign @ sp[(-10)+8]
 22089  017924  0EFE               	movlw	-2
 22090  017926  50E3               	movf	plusw1,w,c
 22091  017928  B4D8               	btfsc	status,2,c
 22092  01792A  D025               	goto	u6480
 22093                           
 22094                           ;stkvar	_quotient @ sp[(-10)+0]
 22095                           ;stkvar	_quotient @ sp[(-10)+0]
 22096  01792C  0EF6               	movlw	-10
 22097  01792E  6CE3               	negf	plusw1,c
 22098  017930  0EF7               	movlw	-9
 22099  017932  1EE3               	comf	plusw1,f,c
 22100  017934  0EF8               	movlw	-8
 22101  017936  1EE3               	comf	plusw1,f,c
 22102  017938  0EF9               	movlw	-7
 22103  01793A  1EE3               	comf	plusw1,f,c
 22104  01793C  0EFA               	movlw	-6
 22105  01793E  1EE3               	comf	plusw1,f,c
 22106  017940  0EFB               	movlw	-5
 22107  017942  1EE3               	comf	plusw1,f,c
 22108  017944  0EFC               	movlw	-4
 22109  017946  1EE3               	comf	plusw1,f,c
 22110  017948  0EFD               	movlw	-3
 22111  01794A  1EE3               	comf	plusw1,f,c
 22112  01794C  E314               	bnc	u6480
 22113  01794E  0EF7               	movlw	-9
 22114  017950  2AE3               	incf	plusw1,f,c
 22115  017952  E311               	bnc	u6480
 22116  017954  0EF8               	movlw	-8
 22117  017956  2AE3               	incf	plusw1,f,c
 22118  017958  E30E               	bnc	u6480
 22119  01795A  0EF9               	movlw	-7
 22120  01795C  2AE3               	incf	plusw1,f,c
 22121  01795E  E30B               	bnc	u6480
 22122  017960  0EFA               	movlw	-6
 22123  017962  2AE3               	incf	plusw1,f,c
 22124  017964  E308               	bnc	u6480
 22125  017966  0EFB               	movlw	-5
 22126  017968  2AE3               	incf	plusw1,f,c
 22127  01796A  E305               	bnc	u6480
 22128  01796C  0EFC               	movlw	-4
 22129  01796E  2AE3               	incf	plusw1,f,c
 22130  017970  E302               	bnc	u6480
 22131  017972  0EFD               	movlw	-3
 22132  017974  2AE3               	incf	plusw1,f,c
 22133  017976                     u6480:
 22134                           
 22135                           ;stkvar	_quotient @ sp[(-10)+0]
 22136  017976  0EF6               	movlw	246
 22137  017978  24E1               	addwf	fsr1l,w,c
 22138  01797A  6ED9               	movwf	fsr2l,c
 22139  01797C  0EFF               	movlw	255
 22140  01797E  20E2               	addwfc	fsr1h,w,c
 22141  017980  6EDA               	movwf	fsr2h,c
 22142                           
 22143                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 22144  017982  0E08               	movlw	8
 22145  017984  6E01               	movwf	btemp^0,c
 22146  017986  0EEE               	movlw	-18
 22147  017988                     us649999:
 22148  017988  006F FF7B FFE3     	movff	postinc2,plusw1
 22149  01798E  28E8               	incf	wreg,w,c
 22150  017990  2E01               	decfsz	btemp^0,f,c
 22151  017992  D7FA               	bra	us649999
 22152                           
 22153                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 22154  017994  0EF6               	movlw	246
 22155  017996  26E1               	addwf	fsr1l,f,c
 22156  017998  0EFF               	movlw	255
 22157  01799A  22E2               	addwfc	fsr1h,f,c
 22158  01799C  0012               	return		;funcret
 22159  01799E                     __end_of___aodiv:
 22160                           	opt callstack 0
 22161                           
 22162 ;; *************** function _ctoa *****************
 22163 ;; Defined at:
 22164 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22165 ;; Parameters:    Size  Location     Type
 22166 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22167 ;;		 -> f(6), NULL(0), 
 22168 ;;  c               1  [STACK] unsigned char 
 22169 ;; Auto vars:     Size  Location     Type
 22170 ;;  w               2  [STACK] int 
 22171 ;;  l               2    0        int 
 22172 ;; Return value:  Size  Location     Type
 22173 ;;                  2  [STACK] int 
 22174 ;; Registers used:
 22175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22176 ;; Tracked objects:
 22177 ;;		On entry : 0/0
 22178 ;;		On exit  : 0/0
 22179 ;;		Unchanged: 0/0
 22180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22185 ;;Total ram usage:        0 bytes
 22186 ;; Hardware stack levels used:    1
 22187 ;; Hardware stack levels required when called:   20
 22188 ;; This function calls:
 22189 ;;		_pad
 22190 ;; This function is called by:
 22191 ;;		_vfpfcnvrt
 22192 ;; This function uses a reentrant model
 22193 ;;
 22194                           
 22195                           	psect	text77
 22196  01AEC6                     __ptext77:
 22197                           	opt callstack 0
 22198  01AEC6                     _ctoa:
 22199                           	opt callstack 0
 22200                           
 22201                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22202  01AEC6  52E6               	movf	postinc1,f,c
 22203  01AEC8  52E6               	movf	postinc1,f,c
 22204                           
 22205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 22206                           
 22207                           ;incstack = 0
 22208 ;; hardware stack exceeded
 22209  01AECA  503A               	movf	_width^0,w,c
 22210  01AECC  103B               	iorwf	(_width+1)^0,w,c
 22211  01AECE  A4D8               	btfss	status,2,c
 22212  01AED0  D009               	goto	l12174
 22213                           
 22214                           ;stkvar	_w @ sp[(-2)+0]
 22215  01AED2  0EFE               	movlw	-2
 22216  01AED4  0060  F0EB  FFE3   	movff	_width,plusw1
 22217  01AEDA  0EFF               	movlw	-1
 22218  01AEDC  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22219  01AEE2  D016               	goto	l12176
 22220  01AEE4                     l12174:
 22221  01AEE4  0EFF               	movlw	255
 22222  01AEE6  6E0B               	movwf	(btemp+10)^0,c
 22223  01AEE8  0EFF               	movlw	255
 22224  01AEEA  6E0C               	movwf	(btemp+11)^0,c
 22225  01AEEC  0060  F0E8  F009   	movff	_width,btemp+8
 22226  01AEF2  0060  F0EC  F00A   	movff	_width+1,btemp+9
 22227  01AEF8  500B               	movf	(btemp+10)^0,w,c
 22228  01AEFA  2609               	addwf	(btemp+8)^0,f,c
 22229  01AEFC  500C               	movf	(btemp+11)^0,w,c
 22230  01AEFE  220A               	addwfc	(btemp+9)^0,f,c
 22231                           
 22232                           ;stkvar	_w @ sp[(-2)+0]
 22233  01AF00  0EFE               	movlw	-2
 22234  01AF02  0060  F027  FFE3   	movff	btemp+8,plusw1
 22235  01AF08  0EFF               	movlw	-1
 22236  01AF0A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22237  01AF10                     l12176:
 22238                           
 22239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 22240                           ;stkvar	_c @ sp[(-2)+-3]
 22241  01AF10  0EFB               	movlw	-5
 22242  01AF12  006F FF8C  F297    	movff	plusw1,_dbuf
 22243                           
 22244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 22245  01AF18  0102               	movlb	2	; () banked
 22246  01AF1A  6B98               	clrf	(_dbuf+1)& (0+255),b
 22247                           
 22248                           ; BSR set to: 2
 22249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 22250                           ;stkvar	_w @ sp[(-2)+0]
 22251  01AF1C  0EFE               	movlw	-2
 22252  01AF1E  006F FF8F FFE6     	movff	plusw1,postinc1
 22253  01AF24  006F FF8F FFE6     	movff	plusw1,postinc1
 22254  01AF2A  0E97               	movlw	low _dbuf
 22255  01AF2C  6EE6               	movwf	postinc1,c
 22256  01AF2E  0E02               	movlw	high _dbuf
 22257  01AF30  6EE6               	movwf	postinc1,c
 22258                           
 22259                           ;stkvar	_fp @ sp[(-6)+-2]
 22260  01AF32  0EF8               	movlw	-8
 22261  01AF34  006F FF8F FFE6     	movff	plusw1,postinc1
 22262  01AF3A  006F FF8F FFE6     	movff	plusw1,postinc1
 22263  01AF40  EC04  F0CE         	call	_pad	;wreg free
 22264                           
 22265                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 22266  01AF44  0EFB               	movlw	251
 22267  01AF46  26E1               	addwf	fsr1l,f,c
 22268  01AF48  0EFF               	movlw	255
 22269  01AF4A  22E2               	addwfc	fsr1h,f,c
 22270  01AF4C  0012               	return		;funcret
 22271  01AF4E                     __end_of_ctoa:
 22272                           	opt callstack 0
 22273                           
 22274 ;; *************** function _pad *****************
 22275 ;; Defined at:
 22276 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22277 ;; Parameters:    Size  Location     Type
 22278 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22279 ;;		 -> f(6), NULL(0), 
 22280 ;;  buf             2  [STACK] PTR unsigned char 
 22281 ;;		 -> dbuf(80), 
 22282 ;;  p               2  [STACK] int 
 22283 ;; Auto vars:     Size  Location     Type
 22284 ;;  w               2  [STACK] int 
 22285 ;;  i               2  [STACK] int 
 22286 ;; Return value:  Size  Location     Type
 22287 ;;                  2  [STACK] int 
 22288 ;; Registers used:
 22289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22290 ;; Tracked objects:
 22291 ;;		On entry : 0/2
 22292 ;;		On exit  : 0/0
 22293 ;;		Unchanged: 0/0
 22294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22299 ;;Total ram usage:        0 bytes
 22300 ;; Hardware stack levels used:    1
 22301 ;; Hardware stack levels required when called:   19
 22302 ;; This function calls:
 22303 ;;		_fputc
 22304 ;;		_fputs
 22305 ;;		_strlen
 22306 ;; This function is called by:
 22307 ;;		_ctoa
 22308 ;;		_dtoa
 22309 ;;		_efgtoa
 22310 ;;		_utoa
 22311 ;;		_xtoa
 22312 ;; This function uses a reentrant model
 22313 ;;
 22314                           
 22315                           	psect	text78
 22316  019C08                     __ptext78:
 22317                           	opt callstack 0
 22318  019C08                     _pad:
 22319                           	opt callstack 0
 22320                           
 22321                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22322  019C08  52E6               	movf	postinc1,f,c
 22323  019C0A  52E6               	movf	postinc1,f,c
 22324  019C0C  52E6               	movf	postinc1,f,c
 22325  019C0E  52E6               	movf	postinc1,f,c
 22326                           
 22327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22328                           
 22329                           ;incstack = 0
 22330 ;; hardware stack exceeded
 22331  019C10  A03E               	btfss	_flags^0,0,c
 22332  019C12  D010               	goto	l12136
 22333                           
 22334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22335                           ;stkvar	_fp @ sp[(-4)+-2]
 22336  019C14  0EFA               	movlw	-6
 22337  019C16  006F FF8F FFE6     	movff	plusw1,postinc1
 22338  019C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 22339                           
 22340                           ;stkvar	_buf @ sp[(-6)+-4]
 22341  019C22  0EF6               	movlw	-10
 22342  019C24  006F FF8F FFE6     	movff	plusw1,postinc1
 22343  019C2A  006F FF8F FFE6     	movff	plusw1,postinc1
 22344  019C30  EC85  F0D6         	call	_fputs	;wreg free
 22345  019C34                     l12136:
 22346                           
 22347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22348                           ;stkvar	_p @ sp[(-4)+-6]
 22349  019C34  0EF7               	movlw	-9
 22350  019C36  BEE3               	btfsc	plusw1,7,c
 22351  019C38  D011               	goto	l12140
 22352                           
 22353                           ;stkvar	_p @ sp[(-4)+-6]
 22354                           ;stkvar	_w @ sp[(-4)+0]
 22355  019C3A  0EF6               	movlw	-10
 22356  019C3C  006F FF8C  F001    	movff	plusw1,btemp
 22357  019C42  0EFC               	movlw	-4
 22358  019C44  0060  F007  FFE3   	movff	btemp,plusw1
 22359  019C4A  0EF7               	movlw	-9
 22360  019C4C  006F FF8C  F001    	movff	plusw1,btemp
 22361  019C52  0EFD               	movlw	-3
 22362  019C54  0060  F007  FFE3   	movff	btemp,plusw1
 22363  019C5A  D004               	goto	l2214
 22364  019C5C                     l12140:
 22365                           
 22366                           ;stkvar	_w @ sp[(-4)+0]
 22367  019C5C  0EFC               	movlw	-4
 22368  019C5E  6AE3               	clrf	plusw1,c
 22369  019C60  0EFD               	movlw	-3
 22370  019C62  6AE3               	clrf	plusw1,c
 22371  019C64                     l2214:
 22372                           
 22373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22374                           ;stkvar	_i @ sp[(-4)+2]
 22375  019C64  0EFE               	movlw	-2
 22376  019C66  6AE3               	clrf	plusw1,c
 22377  019C68  0EFF               	movlw	-1
 22378  019C6A  6AE3               	clrf	plusw1,c
 22379                           
 22380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22381  019C6C  D01E               	goto	l12146
 22382  019C6E                     l12142:
 22383                           
 22384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22385                           ;stkvar	_fp @ sp[(-4)+-2]
 22386  019C6E  0EFA               	movlw	-6
 22387  019C70  006F FF8F FFE6     	movff	plusw1,postinc1
 22388  019C76  006F FF8F FFE6     	movff	plusw1,postinc1
 22389  019C7C  0E20               	movlw	32
 22390  019C7E  6EE6               	movwf	postinc1,c
 22391  019C80  0E00               	movlw	0
 22392  019C82  6EE6               	movwf	postinc1,c
 22393  019C84  ECE6  F0CC         	call	_fputc	;wreg free
 22394                           
 22395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22396                           ;stkvar	_i @ sp[(-4)+2]
 22397  019C88  0EFE               	movlw	-2
 22398  019C8A  50E3               	movf	plusw1,w,c
 22399  019C8C  0F01               	addlw	1
 22400  019C8E  6E01               	movwf	btemp^0,c
 22401  019C90  0EFE               	movlw	-2
 22402  019C92  0060  F007  FFE3   	movff	btemp,plusw1
 22403  019C98  6A01               	clrf	btemp^0,c
 22404  019C9A  0EFF               	movlw	-1
 22405  019C9C  50E3               	movf	plusw1,w,c
 22406  019C9E  2001               	addwfc	btemp^0,w,c
 22407  019CA0  6E01               	movwf	btemp^0,c
 22408  019CA2  0EFF               	movlw	-1
 22409  019CA4  0060  F007  FFE3   	movff	btemp,plusw1
 22410  019CAA                     l12146:
 22411                           
 22412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22413                           ;stkvar	_w @ sp[(-4)+0]
 22414                           ;stkvar	_i @ sp[(-4)+2]
 22415  019CAA  50E1               	movf	fsr1l,w,c
 22416  019CAC  0FFE               	addlw	-2
 22417  019CAE  6ED9               	movwf	fsr2l,c
 22418  019CB0  50E2               	movf	fsr1h,w,c
 22419  019CB2  6EDA               	movwf	fsr2h,c
 22420  019CB4  0EFF               	movlw	255
 22421  019CB6  22DA               	addwfc	fsr2h,f,c
 22422  019CB8  0EFC               	movlw	-4
 22423  019CBA  50E3               	movf	plusw1,w,c
 22424  019CBC  5CDE               	subwf	postinc2,w,c
 22425  019CBE  50DE               	movf	postinc2,w,c
 22426  019CC0  0A80               	xorlw	128
 22427  019CC2  6E01               	movwf	btemp^0,c
 22428  019CC4  0EFD               	movlw	-3
 22429  019CC6  50E3               	movf	plusw1,w,c
 22430  019CC8  0A80               	xorlw	128
 22431  019CCA  5801               	subwfb	btemp^0,w,c
 22432  019CCC  A0D8               	btfss	status,0,c
 22433  019CCE  D7CF               	goto	l12142
 22434                           
 22435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22436  019CD0  B03E               	btfsc	_flags^0,0,c
 22437  019CD2  D010               	goto	l12150
 22438                           
 22439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22440                           ;stkvar	_fp @ sp[(-4)+-2]
 22441  019CD4  0EFA               	movlw	-6
 22442  019CD6  006F FF8F FFE6     	movff	plusw1,postinc1
 22443  019CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 22444                           
 22445                           ;stkvar	_buf @ sp[(-6)+-4]
 22446  019CE2  0EF6               	movlw	-10
 22447  019CE4  006F FF8F FFE6     	movff	plusw1,postinc1
 22448  019CEA  006F FF8F FFE6     	movff	plusw1,postinc1
 22449  019CF0  EC85  F0D6         	call	_fputs	;wreg free
 22450  019CF4                     l12150:
 22451                           
 22452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22453                           ;stkvar	_w @ sp[(-4)+0]
 22454                           ;stkvar	_buf @ sp[(-4)+-4]
 22455  019CF4  0EF8               	movlw	-8
 22456  019CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 22457  019CFC  006F FF8F FFE6     	movff	plusw1,postinc1
 22458  019D02  EC34  F0D6         	call	_strlen	;wreg free
 22459  019D06  0EFC               	movlw	-4
 22460  019D08  50E3               	movf	plusw1,w,c
 22461  019D0A  2601               	addwf	btemp^0,f,c
 22462  019D0C  0EFD               	movlw	-3
 22463  019D0E  50E3               	movf	plusw1,w,c
 22464  019D10  2202               	addwfc	(btemp+1)^0,f,c
 22465                           
 22466                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22467  019D12  0EF6               	movlw	246
 22468  019D14  26E1               	addwf	fsr1l,f,c
 22469  019D16  0EFF               	movlw	255
 22470  019D18  22E2               	addwfc	fsr1h,f,c
 22471  019D1A  0012               	return		;funcret
 22472  019D1C                     __end_of_pad:
 22473                           	opt callstack 0
 22474                           
 22475 ;; *************** function _strlen *****************
 22476 ;; Defined at:
 22477 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22478 ;; Parameters:    Size  Location     Type
 22479 ;;  s               2  [STACK] PTR const unsigned char 
 22480 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22481 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22482 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22483 ;;		 -> V(191), 
 22484 ;; Auto vars:     Size  Location     Type
 22485 ;;  a               2  [STACK] PTR const unsigned char 
 22486 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22487 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22488 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22489 ;;		 -> V(191), 
 22490 ;; Return value:  Size  Location     Type
 22491 ;;                  2  [STACK] unsigned int 
 22492 ;; Registers used:
 22493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22494 ;; Tracked objects:
 22495 ;;		On entry : 0/0
 22496 ;;		On exit  : 0/0
 22497 ;;		Unchanged: 0/0
 22498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22503 ;;Total ram usage:        0 bytes
 22504 ;; Hardware stack levels used:    1
 22505 ;; Hardware stack levels required when called:   15
 22506 ;; This function calls:
 22507 ;;		Nothing
 22508 ;; This function is called by:
 22509 ;;		_eaDogM_WriteString
 22510 ;;		_spinners
 22511 ;;		_calc_bsoc
 22512 ;;		_pad
 22513 ;;		_stoa
 22514 ;; This function uses a reentrant model
 22515 ;;
 22516                           
 22517                           	psect	text79
 22518  01AC68                     __ptext79:
 22519                           	opt callstack 0
 22520  01AC68                     _strlen:
 22521                           	opt callstack 0
 22522                           
 22523                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22524  01AC68  52E6               	movf	postinc1,f,c
 22525  01AC6A  52E6               	movf	postinc1,f,c
 22526                           
 22527                           ;stkvar	_s @ sp[(-2)+-2]
 22528                           
 22529                           ;incstack = 0
 22530 ;; hardware stack exceeded
 22531  01AC6C  0EFC               	movlw	-4
 22532  01AC6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22533  01AC74  0EFD               	movlw	-3
 22534  01AC76  006F FF8C  F00C    	movff	plusw1,btemp+11
 22535                           
 22536                           ;stkvar	_a @ sp[(-2)+0]
 22537  01AC7C  0EFF               	movlw	-1
 22538  01AC7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22539  01AC84  0EFE               	movlw	-2
 22540  01AC86  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22541  01AC8C  D011               	goto	l7858
 22542  01AC8E                     l7856:
 22543                           
 22544                           ;stkvar	_s @ sp[(-2)+-2]
 22545  01AC8E  0EFC               	movlw	-4
 22546  01AC90  50E3               	movf	plusw1,w,c
 22547  01AC92  0F01               	addlw	1
 22548  01AC94  6E01               	movwf	btemp^0,c
 22549  01AC96  0EFC               	movlw	-4
 22550  01AC98  0060  F007  FFE3   	movff	btemp,plusw1
 22551  01AC9E  6A01               	clrf	btemp^0,c
 22552  01ACA0  0EFD               	movlw	-3
 22553  01ACA2  50E3               	movf	plusw1,w,c
 22554  01ACA4  2001               	addwfc	btemp^0,w,c
 22555  01ACA6  6E01               	movwf	btemp^0,c
 22556  01ACA8  0EFD               	movlw	-3
 22557  01ACAA  0060  F007  FFE3   	movff	btemp,plusw1
 22558  01ACB0                     l7858:
 22559                           
 22560                           ;stkvar	_s @ sp[(-2)+-2]
 22561  01ACB0  0EFC               	movlw	-4
 22562  01ACB2  006F FF8F FFF6     	movff	plusw1,tblptrl
 22563  01ACB8  0EFD               	movlw	-3
 22564  01ACBA  006F FF8F FFF7     	movff	plusw1,tblptrh
 22565  01ACC0  0E00               	movlw	low (__mediumconst shr (0+16))
 22566  01ACC2  6EF8               	movwf	tblptru,c
 22567  01ACC4  0E1F               	movlw	(high __ramtop+-1)
 22568  01ACC6  64F7               	cpfsgt	tblptrh,c
 22569  01ACC8  D003               	bra	u5507
 22570  01ACCA  0008               	tblrd		*
 22571  01ACCC  50F5               	movf	tablat,w,c
 22572  01ACCE  D007               	bra	u5500
 22573  01ACD0                     u5507:
 22574  01ACD0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22575  01ACD6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22576  01ACDC  50EF               	movf	indf0,w,c
 22577  01ACDE                     u5500:
 22578  01ACDE  0900               	iorlw	0
 22579  01ACE0  A4D8               	btfss	status,2,c
 22580  01ACE2  D7D5               	goto	l7856
 22581                           
 22582                           ;stkvar	_a @ sp[(-2)+0]
 22583                           ;stkvar	_s @ sp[(-2)+-2]
 22584  01ACE4  0EFC               	movlw	-4
 22585  01ACE6  006F FF8C  F001    	movff	plusw1,btemp
 22586  01ACEC  0EFD               	movlw	-3
 22587  01ACEE  006F FF8C  F002    	movff	plusw1,btemp+1
 22588  01ACF4  0EFE               	movlw	-2
 22589  01ACF6  50E3               	movf	plusw1,w,c
 22590  01ACF8  5E01               	subwf	btemp^0,f,c
 22591  01ACFA  0EFF               	movlw	-1
 22592  01ACFC  50E3               	movf	plusw1,w,c
 22593  01ACFE  5A02               	subwfb	(btemp+1)^0,f,c
 22594                           
 22595                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22596  01AD00  52E5               	movf	postdec1,f,c
 22597  01AD02  52E5               	movf	postdec1,f,c
 22598  01AD04  52E5               	movf	postdec1,f,c
 22599  01AD06  52E5               	movf	postdec1,f,c
 22600  01AD08  0012               	return		;funcret
 22601  01AD0A                     __end_of_strlen:
 22602                           	opt callstack 0
 22603                           
 22604 ;; *************** function _fputs *****************
 22605 ;; Defined at:
 22606 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22607 ;; Parameters:    Size  Location     Type
 22608 ;;  s               2  [STACK] PTR const unsigned char 
 22609 ;;		 -> dbuf(80), 
 22610 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22611 ;;		 -> f(6), NULL(0), 
 22612 ;; Auto vars:     Size  Location     Type
 22613 ;;  i               2  [STACK] int 
 22614 ;;  c               1  [STACK] unsigned char 
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  2  [STACK] int 
 22617 ;; Registers used:
 22618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22619 ;; Tracked objects:
 22620 ;;		On entry : 0/2
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22628 ;;Total ram usage:        0 bytes
 22629 ;; Hardware stack levels used:    1
 22630 ;; Hardware stack levels required when called:   18
 22631 ;; This function calls:
 22632 ;;		_fputc
 22633 ;; This function is called by:
 22634 ;;		_pad
 22635 ;; This function uses a reentrant model
 22636 ;;
 22637                           
 22638                           	psect	text80
 22639  01AD0A                     __ptext80:
 22640                           	opt callstack 0
 22641  01AD0A                     _fputs:
 22642                           	opt callstack 0
 22643                           
 22644                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22645  01AD0A  52E6               	movf	postinc1,f,c
 22646  01AD0C  52E6               	movf	postinc1,f,c
 22647  01AD0E  52E6               	movf	postinc1,f,c
 22648                           
 22649                           ;stkvar	_i @ sp[(-3)+0]
 22650                           
 22651                           ;incstack = 0
 22652 ;; hardware stack exceeded
 22653  01AD10  0EFD               	movlw	-3
 22654  01AD12  6AE3               	clrf	plusw1,c
 22655  01AD14  0EFE               	movlw	-2
 22656  01AD16  6AE3               	clrf	plusw1,c
 22657  01AD18  D01F               	goto	l12088
 22658  01AD1A                     l12084:
 22659                           
 22660                           ;stkvar	_fp @ sp[(-3)+-4]
 22661  01AD1A  0EF9               	movlw	-7
 22662  01AD1C  006F FF8F FFE6     	movff	plusw1,postinc1
 22663  01AD22  006F FF8F FFE6     	movff	plusw1,postinc1
 22664                           
 22665                           ;stkvar	_c @ sp[(-5)+2]
 22666  01AD28  0EFD               	movlw	-3
 22667  01AD2A  50E3               	movf	plusw1,w,c
 22668  01AD2C  6EE6               	movwf	postinc1,c
 22669  01AD2E  0E00               	movlw	0
 22670  01AD30  6EE6               	movwf	postinc1,c
 22671  01AD32  ECE6  F0CC         	call	_fputc	;wreg free
 22672                           
 22673                           ;stkvar	_i @ sp[(-3)+0]
 22674  01AD36  0EFD               	movlw	-3
 22675  01AD38  50E3               	movf	plusw1,w,c
 22676  01AD3A  0F01               	addlw	1
 22677  01AD3C  6E01               	movwf	btemp^0,c
 22678  01AD3E  0EFD               	movlw	-3
 22679  01AD40  0060  F007  FFE3   	movff	btemp,plusw1
 22680  01AD46  6A01               	clrf	btemp^0,c
 22681  01AD48  0EFE               	movlw	-2
 22682  01AD4A  50E3               	movf	plusw1,w,c
 22683  01AD4C  2001               	addwfc	btemp^0,w,c
 22684  01AD4E  6E01               	movwf	btemp^0,c
 22685  01AD50  0EFE               	movlw	-2
 22686  01AD52  0060  F007  FFE3   	movff	btemp,plusw1
 22687  01AD58                     l12088:
 22688                           
 22689                           ;stkvar	_i @ sp[(-3)+0]
 22690  01AD58  0EFD               	movlw	-3
 22691  01AD5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22692  01AD60  0EFE               	movlw	-2
 22693  01AD62  006F FF8C  F00C    	movff	plusw1,btemp+11
 22694                           
 22695                           ;stkvar	_s @ sp[(-3)+-2]
 22696  01AD68  0EFB               	movlw	-5
 22697  01AD6A  006F FF8C  F009    	movff	plusw1,btemp+8
 22698  01AD70  0EFC               	movlw	-4
 22699  01AD72  006F FF8C  F00A    	movff	plusw1,btemp+9
 22700  01AD78  500B               	movf	(btemp+10)^0,w,c
 22701  01AD7A  2409               	addwf	(btemp+8)^0,w,c
 22702  01AD7C  6ED9               	movwf	fsr2l,c
 22703  01AD7E  500C               	movf	(btemp+11)^0,w,c
 22704  01AD80  200A               	addwfc	(btemp+9)^0,w,c
 22705  01AD82  6EDA               	movwf	fsr2h,c
 22706  01AD84  50DF               	movf	indf2,w,c
 22707  01AD86  6E0C               	movwf	(btemp+11)^0,c
 22708                           
 22709                           ;stkvar	_c @ sp[(-3)+2]
 22710  01AD88  0EFF               	movlw	-1
 22711  01AD8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22712  01AD90  0EFF               	movlw	-1
 22713  01AD92  50E3               	movf	plusw1,w,c
 22714  01AD94  A4D8               	btfss	status,2,c
 22715  01AD96  D7C1               	goto	l12084
 22716                           
 22717                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22718  01AD98  0EF9               	movlw	249
 22719  01AD9A  26E1               	addwf	fsr1l,f,c
 22720  01AD9C  0EFF               	movlw	255
 22721  01AD9E  22E2               	addwfc	fsr1h,f,c
 22722  01ADA0  0012               	return		;funcret
 22723  01ADA2                     __end_of_fputs:
 22724                           	opt callstack 0
 22725                           
 22726 ;; *************** function _fputc *****************
 22727 ;; Defined at:
 22728 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 22729 ;; Parameters:    Size  Location     Type
 22730 ;;  c               2  [STACK] int 
 22731 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22732 ;;		 -> f(6), NULL(0), 
 22733 ;; Auto vars:     Size  Location     Type
 22734 ;;		None
 22735 ;; Return value:  Size  Location     Type
 22736 ;;                  2  [STACK] int 
 22737 ;; Registers used:
 22738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22739 ;; Tracked objects:
 22740 ;;		On entry : 0/0
 22741 ;;		On exit  : 0/0
 22742 ;;		Unchanged: 0/0
 22743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22748 ;;Total ram usage:        0 bytes
 22749 ;; Hardware stack levels used:    1
 22750 ;; Hardware stack levels required when called:   17
 22751 ;; This function calls:
 22752 ;;		_putch
 22753 ;; This function is called by:
 22754 ;;		_pad
 22755 ;;		_stoa
 22756 ;;		_vfpfcnvrt
 22757 ;;		_fputs
 22758 ;; This function uses a reentrant model
 22759 ;;
 22760                           
 22761                           	psect	text81
 22762  0199CC                     __ptext81:
 22763                           	opt callstack 0
 22764  0199CC                     _fputc:
 22765                           	opt callstack 0
 22766                           
 22767                           ;stkvar	_fp @ sp[(0)+-4]
 22768                           
 22769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22770                           ;incstack = 0
 22771 ;; hardware stack exceeded
 22772  0199CC  0EFC               	movlw	-4
 22773  0199CE  006F FF8C  F001    	movff	plusw1,btemp
 22774  0199D4  0EFD               	movlw	-3
 22775  0199D6  50E3               	movf	plusw1,w,c
 22776  0199D8  1001               	iorwf	btemp^0,w,c
 22777  0199DA  B4D8               	btfsc	status,2,c
 22778  0199DC  D009               	goto	u10910
 22779                           
 22780                           ;stkvar	_fp @ sp[(0)+-4]
 22781  0199DE  0EFC               	movlw	-4
 22782  0199E0  006F FF8C  F001    	movff	plusw1,btemp
 22783  0199E6  0EFD               	movlw	-3
 22784  0199E8  50E3               	movf	plusw1,w,c
 22785  0199EA  1001               	iorwf	btemp^0,w,c
 22786  0199EC  A4D8               	btfss	status,2,c
 22787  0199EE  D006               	goto	l12072
 22788  0199F0                     u10910:
 22789                           
 22790                           ;stkvar	_c @ sp[(0)+-2]
 22791  0199F0  0EFE               	movlw	-2
 22792  0199F2  50E3               	movf	plusw1,w,c
 22793  0199F4  6EE6               	movwf	postinc1,c
 22794  0199F6  ECEE  F0E1         	call	_putch	;wreg free
 22795  0199FA  D075               	goto	l3260
 22796  0199FC                     l12072:
 22797                           
 22798                           ;stkvar	_fp @ sp[(0)+-4]
 22799  0199FC  0EFC               	movlw	-4
 22800  0199FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22801  019A04  0EFD               	movlw	-3
 22802  019A06  006F FF8C  F00C    	movff	plusw1,btemp+11
 22803  019A0C  0E04               	movlw	4
 22804  019A0E  240B               	addwf	(btemp+10)^0,w,c
 22805  019A10  6ED9               	movwf	fsr2l,c
 22806  019A12  0E00               	movlw	0
 22807  019A14  200C               	addwfc	(btemp+11)^0,w,c
 22808  019A16  6EDA               	movwf	fsr2h,c
 22809  019A18  50DE               	movf	postinc2,w,c
 22810  019A1A  10DE               	iorwf	postinc2,w,c
 22811  019A1C  B4D8               	btfsc	status,2,c
 22812  019A1E  D026               	goto	u10930
 22813                           
 22814                           ;stkvar	_fp @ sp[(0)+-4]
 22815  019A20  0EFC               	movlw	-4
 22816  019A22  006F FF8C  F00B    	movff	plusw1,btemp+10
 22817  019A28  0EFD               	movlw	-3
 22818  019A2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22819  019A30  0E04               	movlw	4
 22820  019A32  240B               	addwf	(btemp+10)^0,w,c
 22821  019A34  6ED9               	movwf	fsr2l,c
 22822  019A36  0E00               	movlw	0
 22823  019A38  200C               	addwfc	(btemp+11)^0,w,c
 22824  019A3A  6EDA               	movwf	fsr2h,c
 22825                           
 22826                           ;stkvar	_fp @ sp[(0)+-4]
 22827  019A3C  0EFC               	movlw	-4
 22828  019A3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22829  019A44  0EFD               	movlw	-3
 22830  019A46  006F FF8C  F00C    	movff	plusw1,btemp+11
 22831  019A4C  0E02               	movlw	2
 22832  019A4E  240B               	addwf	(btemp+10)^0,w,c
 22833  019A50  6EE9               	movwf	fsr0l,c
 22834  019A52  0E00               	movlw	0
 22835  019A54  200C               	addwfc	(btemp+11)^0,w,c
 22836  019A56  6EEA               	movwf	fsr0h,c
 22837  019A58  50DE               	movf	postinc2,w,c
 22838  019A5A  5CEE               	subwf	postinc0,w,c
 22839  019A5C  50EE               	movf	postinc0,w,c
 22840  019A5E  0A80               	xorlw	128
 22841  019A60  6E01               	movwf	btemp^0,c
 22842  019A62  50DE               	movf	postinc2,w,c
 22843  019A64  0A80               	xorlw	128
 22844  019A66  5801               	subwfb	btemp^0,w,c
 22845  019A68  B0D8               	btfsc	status,0,c
 22846  019A6A  D03D               	goto	l3260
 22847  019A6C                     u10930:
 22848                           
 22849                           ;stkvar	_c @ sp[(0)+-2]
 22850                           ;stkvar	_fp @ sp[(0)+-4]
 22851  019A6C  0EFC               	movlw	-4
 22852  019A6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22853  019A74  0EFD               	movlw	-3
 22854  019A76  006F FF8C  F00C    	movff	plusw1,btemp+11
 22855  019A7C  0E02               	movlw	2
 22856  019A7E  240B               	addwf	(btemp+10)^0,w,c
 22857  019A80  6ED9               	movwf	fsr2l,c
 22858  019A82  0E00               	movlw	0
 22859  019A84  200C               	addwfc	(btemp+11)^0,w,c
 22860  019A86  6EDA               	movwf	fsr2h,c
 22861  019A88  006F FF78  F00B    	movff	postinc2,btemp+10
 22862  019A8E  006F FF74  F00C    	movff	postdec2,btemp+11
 22863                           
 22864                           ;stkvar	_fp @ sp[(0)+-4]
 22865  019A94  0EFC               	movlw	-4
 22866  019A96  006F FF8F FFD9     	movff	plusw1,fsr2l
 22867  019A9C  0EFD               	movlw	-3
 22868  019A9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 22869  019AA4  006F FF78  F009    	movff	postinc2,btemp+8
 22870  019AAA  006F FF74  F00A    	movff	postdec2,btemp+9
 22871  019AB0  500B               	movf	(btemp+10)^0,w,c
 22872  019AB2  2409               	addwf	(btemp+8)^0,w,c
 22873  019AB4  6ED9               	movwf	fsr2l,c
 22874  019AB6  500C               	movf	(btemp+11)^0,w,c
 22875  019AB8  200A               	addwfc	(btemp+9)^0,w,c
 22876  019ABA  6EDA               	movwf	fsr2h,c
 22877  019ABC  0EFE               	movlw	-2
 22878  019ABE  006F FF8F FFDF     	movff	plusw1,indf2
 22879                           
 22880                           ;stkvar	_fp @ sp[(0)+-4]
 22881  019AC4  0EFC               	movlw	-4
 22882  019AC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22883  019ACC  0EFD               	movlw	-3
 22884  019ACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22885  019AD4  0E02               	movlw	2
 22886  019AD6  240B               	addwf	(btemp+10)^0,w,c
 22887  019AD8  6ED9               	movwf	fsr2l,c
 22888  019ADA  0E00               	movlw	0
 22889  019ADC  200C               	addwfc	(btemp+11)^0,w,c
 22890  019ADE  6EDA               	movwf	fsr2h,c
 22891  019AE0  2ADE               	incf	postinc2,f,c
 22892  019AE2  0E00               	movlw	0
 22893  019AE4  22DD               	addwfc	postdec2,f,c
 22894  019AE6                     l3260:
 22895                           
 22896                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22897  019AE6  52E5               	movf	postdec1,f,c
 22898  019AE8  52E5               	movf	postdec1,f,c
 22899  019AEA  52E5               	movf	postdec1,f,c
 22900  019AEC  52E5               	movf	postdec1,f,c
 22901  019AEE  0012               	return		;funcret
 22902  019AF0                     __end_of_fputc:
 22903                           	opt callstack 0
 22904                           
 22905 ;; *************** function _putch *****************
 22906 ;; Defined at:
 22907 ;;		line 421 in file "eadog.c"
 22908 ;; Parameters:    Size  Location     Type
 22909 ;;  c               1  [STACK] unsigned char 
 22910 ;; Auto vars:     Size  Location     Type
 22911 ;;		None
 22912 ;; Return value:  Size  Location     Type
 22913 ;;                  1  [STACK] void 
 22914 ;; Registers used:
 22915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22916 ;; Tracked objects:
 22917 ;;		On entry : 0/0
 22918 ;;		On exit  : 0/0
 22919 ;;		Unchanged: 0/0
 22920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22925 ;;Total ram usage:        0 bytes
 22926 ;; Hardware stack levels used:    1
 22927 ;; Hardware stack levels required when called:   16
 22928 ;; This function calls:
 22929 ;;		_ringBufS_put_dma
 22930 ;; This function is called by:
 22931 ;;		_fputc
 22932 ;; This function uses a reentrant model
 22933 ;;
 22934                           
 22935                           	psect	text82
 22936  01C3DC                     __ptext82:
 22937                           	opt callstack 0
 22938  01C3DC                     _putch:
 22939                           	opt callstack 0
 22940                           
 22941                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22942                           ;stkvar	_c @ sp[(0)+-1]
 22943                           
 22944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22945                           ;incstack = 0
 22946 ;; hardware stack exceeded
 22947  01C3DC  0EFF               	movlw	-1
 22948  01C3DE  50E3               	movf	plusw1,w,c
 22949  01C3E0  6EE6               	movwf	postinc1,c
 22950  01C3E2  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 22951  01C3E8  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 22952  01C3EE  ECE5  F0D4         	call	_ringBufS_put_dma	;wreg free
 22953                           
 22954                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22955  01C3F2  52E5               	movf	postdec1,f,c
 22956  01C3F4  0012               	return		;funcret
 22957  01C3F6                     __end_of_putch:
 22958                           	opt callstack 0
 22959                           
 22960 ;; *************** function _ringBufS_put_dma *****************
 22961 ;; Defined at:
 22962 ;;		line 67 in file "ringbufs.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22965 ;;		 -> ring_buf1(67), 
 22966 ;;  c               1  [STACK] const unsigned char 
 22967 ;; Auto vars:     Size  Location     Type
 22968 ;;		None
 22969 ;; Return value:  Size  Location     Type
 22970 ;;                  1  [STACK] void 
 22971 ;; Registers used:
 22972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22973 ;; Tracked objects:
 22974 ;;		On entry : 0/0
 22975 ;;		On exit  : 0/0
 22976 ;;		Unchanged: 0/0
 22977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22982 ;;Total ram usage:        0 bytes
 22983 ;; Hardware stack levels used:    1
 22984 ;; Hardware stack levels required when called:   15
 22985 ;; This function calls:
 22986 ;;		Nothing
 22987 ;; This function is called by:
 22988 ;;		_putch
 22989 ;; This function uses a reentrant model
 22990 ;;
 22991                           
 22992                           	psect	text83
 22993  01A9CA                     __ptext83:
 22994                           	opt callstack 0
 22995  01A9CA                     _ringBufS_put_dma:
 22996                           	opt callstack 0
 22997                           
 22998                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 22999                           ;stkvar	__this @ sp[(0)+-2]
 23000                           
 23001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23002                           ;incstack = 0
 23003 ;; hardware stack exceeded
 23004  01A9CA  0EFE               	movlw	-2
 23005  01A9CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23006  01A9D2  0EFF               	movlw	-1
 23007  01A9D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23008  01A9DA  0E42               	movlw	66
 23009  01A9DC  240B               	addwf	(btemp+10)^0,w,c
 23010  01A9DE  6ED9               	movwf	fsr2l,c
 23011  01A9E0  0E00               	movlw	0
 23012  01A9E2  200C               	addwfc	(btemp+11)^0,w,c
 23013  01A9E4  6EDA               	movwf	fsr2h,c
 23014  01A9E6  0E40               	movlw	64
 23015  01A9E8  60DF               	cpfslt	indf2,c
 23016  01A9EA  D040               	goto	l1597
 23017                           
 23018                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 23019                           ;stkvar	_c @ sp[(0)+-3]
 23020                           ;stkvar	__this @ sp[(0)+-2]
 23021  01A9EC  0EFE               	movlw	-2
 23022  01A9EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 23023  01A9F4  0EFF               	movlw	-1
 23024  01A9F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23025  01A9FC  0E40               	movlw	64
 23026  01A9FE  240B               	addwf	(btemp+10)^0,w,c
 23027  01AA00  6ED9               	movwf	fsr2l,c
 23028  01AA02  0E00               	movlw	0
 23029  01AA04  200C               	addwfc	(btemp+11)^0,w,c
 23030  01AA06  6EDA               	movwf	fsr2h,c
 23031  01AA08  50DF               	movf	indf2,w,c
 23032  01AA0A  6E0C               	movwf	(btemp+11)^0,c
 23033                           
 23034                           ;stkvar	__this @ sp[(0)+-2]
 23035  01AA0C  0EFE               	movlw	-2
 23036  01AA0E  006F FF8C  F009    	movff	plusw1,btemp+8
 23037  01AA14  0EFF               	movlw	-1
 23038  01AA16  006F FF8C  F00A    	movff	plusw1,btemp+9
 23039  01AA1C  500C               	movf	(btemp+11)^0,w,c
 23040  01AA1E  2409               	addwf	(btemp+8)^0,w,c
 23041  01AA20  6ED9               	movwf	fsr2l,c
 23042  01AA22  0E00               	movlw	0
 23043  01AA24  200A               	addwfc	(btemp+9)^0,w,c
 23044  01AA26  6EDA               	movwf	fsr2h,c
 23045  01AA28  0EFD               	movlw	-3
 23046  01AA2A  006F FF8F FFDF     	movff	plusw1,indf2
 23047                           
 23048                           ;ringbufs.c: 71:   ++_this->head;
 23049                           ;stkvar	__this @ sp[(0)+-2]
 23050  01AA30  0EFE               	movlw	-2
 23051  01AA32  006F FF8C  F00B    	movff	plusw1,btemp+10
 23052  01AA38  0EFF               	movlw	-1
 23053  01AA3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23054  01AA40  0E40               	movlw	64
 23055  01AA42  240B               	addwf	(btemp+10)^0,w,c
 23056  01AA44  6ED9               	movwf	fsr2l,c
 23057  01AA46  0E00               	movlw	0
 23058  01AA48  200C               	addwfc	(btemp+11)^0,w,c
 23059  01AA4A  6EDA               	movwf	fsr2h,c
 23060  01AA4C  2ADF               	incf	indf2,f,c
 23061                           
 23062                           ;ringbufs.c: 72:   ++_this->count;
 23063                           ;stkvar	__this @ sp[(0)+-2]
 23064  01AA4E  0EFE               	movlw	-2
 23065  01AA50  006F FF8C  F00B    	movff	plusw1,btemp+10
 23066  01AA56  0EFF               	movlw	-1
 23067  01AA58  006F FF8C  F00C    	movff	plusw1,btemp+11
 23068  01AA5E  0E42               	movlw	66
 23069  01AA60  240B               	addwf	(btemp+10)^0,w,c
 23070  01AA62  6ED9               	movwf	fsr2l,c
 23071  01AA64  0E00               	movlw	0
 23072  01AA66  200C               	addwfc	(btemp+11)^0,w,c
 23073  01AA68  6EDA               	movwf	fsr2h,c
 23074  01AA6A  2ADF               	incf	indf2,f,c
 23075  01AA6C                     l1597:
 23076                           
 23077                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 23078  01AA6C  52E5               	movf	postdec1,f,c
 23079  01AA6E  52E5               	movf	postdec1,f,c
 23080  01AA70  52E5               	movf	postdec1,f,c
 23081  01AA72  0012               	return		;funcret
 23082  01AA74                     __end_of_ringBufS_put_dma:
 23083                           	opt callstack 0
 23084                           
 23085 ;; *************** function _atoi *****************
 23086 ;; Defined at:
 23087 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 23088 ;; Parameters:    Size  Location     Type
 23089 ;;  s               2  [STACK] PTR const unsigned char 
 23090 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 23091 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 23092 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 23093 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 23094 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 23095 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 23096 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 23097 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 23098 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 23099 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 23100 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 23101 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 23102 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 23103 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 23104 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 23105 ;; Auto vars:     Size  Location     Type
 23106 ;;  n               2  [STACK] int 
 23107 ;;  neg             2  [STACK] int 
 23108 ;; Return value:  Size  Location     Type
 23109 ;;                  2  [STACK] int 
 23110 ;; Registers used:
 23111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 23112 ;; Tracked objects:
 23113 ;;		On entry : 0/0
 23114 ;;		On exit  : 0/0
 23115 ;;		Unchanged: 0/0
 23116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23121 ;;Total ram usage:        0 bytes
 23122 ;; Hardware stack levels used:    1
 23123 ;; Hardware stack levels required when called:   16
 23124 ;; This function calls:
 23125 ;;		_isdigit
 23126 ;;		_isspace
 23127 ;; This function is called by:
 23128 ;;		_vfpfcnvrt
 23129 ;; This function uses a reentrant model
 23130 ;;
 23131                           
 23132                           	psect	text84
 23133  01799E                     __ptext84:
 23134                           	opt callstack 0
 23135  01799E                     _atoi:
 23136                           	opt callstack 0
 23137                           
 23138                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23139  01799E  0E09               	movlw	9
 23140  0179A0  26E1               	addwf	fsr1l,f,c
 23141  0179A2  0E00               	movlw	0
 23142  0179A4  22E2               	addwfc	fsr1h,f,c
 23143                           
 23144                           ;stkvar	_n @ sp[(-9)+5]
 23145                           
 23146                           ;incstack = 0
 23147 ;; hardware stack exceeded
 23148  0179A6  0EFC               	movlw	-4
 23149  0179A8  6AE3               	clrf	plusw1,c
 23150  0179AA  0EFD               	movlw	-3
 23151  0179AC  6AE3               	clrf	plusw1,c
 23152                           
 23153                           ;stkvar	_neg @ sp[(-9)+7]
 23154  0179AE  0EFE               	movlw	-2
 23155  0179B0  6AE3               	clrf	plusw1,c
 23156  0179B2  0EFF               	movlw	-1
 23157  0179B4  6AE3               	clrf	plusw1,c
 23158  0179B6  D011               	goto	l9482
 23159  0179B8                     l9480:
 23160                           
 23161                           ;stkvar	_s @ sp[(-9)+-2]
 23162  0179B8  0EF5               	movlw	-11
 23163  0179BA  50E3               	movf	plusw1,w,c
 23164  0179BC  0F01               	addlw	1
 23165  0179BE  6E01               	movwf	btemp^0,c
 23166  0179C0  0EF5               	movlw	-11
 23167  0179C2  0060  F007  FFE3   	movff	btemp,plusw1
 23168  0179C8  6A01               	clrf	btemp^0,c
 23169  0179CA  0EF6               	movlw	-10
 23170  0179CC  50E3               	movf	plusw1,w,c
 23171  0179CE  2001               	addwfc	btemp^0,w,c
 23172  0179D0  6E01               	movwf	btemp^0,c
 23173  0179D2  0EF6               	movlw	-10
 23174  0179D4  0060  F007  FFE3   	movff	btemp,plusw1
 23175  0179DA                     l9482:
 23176                           
 23177                           ;stkvar	_atoi$6244 @ sp[(-9)+4]
 23178  0179DA  0EFB               	movlw	-5
 23179  0179DC  6AE3               	clrf	plusw1,c
 23180  0179DE  2AE3               	incf	plusw1,f,c
 23181                           
 23182                           ;stkvar	_s @ sp[(-9)+-2]
 23183  0179E0  50E1               	movf	fsr1l,w,c
 23184  0179E2  0FF5               	addlw	-11
 23185  0179E4  6ED9               	movwf	fsr2l,c
 23186  0179E6  50E2               	movf	fsr1h,w,c
 23187  0179E8  6EDA               	movwf	fsr2h,c
 23188  0179EA  0EFF               	movlw	255
 23189  0179EC  22DA               	addwfc	fsr2h,f,c
 23190  0179EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 23191  0179F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 23192  0179FA                     	if	0	;tblptru may be non-zero
 23193  0179FA                     	endif
 23194  0179FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23195  0179FA  0E00               	movlw	low (__mediumconst shr (0+16))
 23196  0179FC  6EF8               	movwf	tblptru,c
 23197  0179FE                     	endif
 23198  0179FE  0008               	tblrd		*
 23199  017A00  50F5               	movf	tablat,w,c
 23200  017A02  0A20               	xorlw	32
 23201  017A04  B4D8               	btfsc	status,2,c
 23202  017A06  D023               	goto	l9490
 23203  017A08  0EF7               	movlw	247
 23204  017A0A  6E0B               	movwf	(btemp+10)^0,c
 23205  017A0C  0EFF               	movlw	255
 23206  017A0E  6E0C               	movwf	(btemp+11)^0,c
 23207                           
 23208                           ;stkvar	_s @ sp[(-9)+-2]
 23209  017A10  50E1               	movf	fsr1l,w,c
 23210  017A12  0FF5               	addlw	-11
 23211  017A14  6ED9               	movwf	fsr2l,c
 23212  017A16  50E2               	movf	fsr1h,w,c
 23213  017A18  6EDA               	movwf	fsr2h,c
 23214  017A1A  0EFF               	movlw	255
 23215  017A1C  22DA               	addwfc	fsr2h,f,c
 23216  017A1E  006F FF7B FFF6     	movff	postinc2,tblptrl
 23217  017A24  006F FF77 FFF7     	movff	postdec2,tblptrh
 23218  017A2A                     	if	0	;tblptru may be non-zero
 23219  017A2A                     	endif
 23220  017A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23221  017A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 23222  017A2C  6EF8               	movwf	tblptru,c
 23223  017A2E                     	endif
 23224  017A2E  0008               	tblrd		*
 23225  017A30  50F5               	movf	tablat,w,c
 23226  017A32  6E09               	movwf	(btemp+8)^0,c
 23227  017A34  6A0A               	clrf	(btemp+9)^0,c
 23228  017A36  500B               	movf	(btemp+10)^0,w,c
 23229  017A38  2609               	addwf	(btemp+8)^0,f,c
 23230  017A3A  500C               	movf	(btemp+11)^0,w,c
 23231  017A3C  220A               	addwfc	(btemp+9)^0,f,c
 23232  017A3E  500A               	movf	(btemp+9)^0,w,c
 23233  017A40  E104               	bnz	u8620
 23234  017A42  0E05               	movlw	5
 23235  017A44  5C09               	subwf	(btemp+8)^0,w,c
 23236  017A46  A0D8               	btfss	status,0,c
 23237  017A48  D002               	goto	l9490
 23238  017A4A                     u8620:
 23239                           
 23240                           ;stkvar	_atoi$6244 @ sp[(-9)+4]
 23241  017A4A  0EFB               	movlw	-5
 23242  017A4C  6AE3               	clrf	plusw1,c
 23243  017A4E                     l9490:
 23244                           
 23245                           ;stkvar	_atoi$6244 @ sp[(-9)+4]
 23246  017A4E  0EFB               	movlw	-5
 23247  017A50  50E3               	movf	plusw1,w,c
 23248  017A52  6E0B               	movwf	(btemp+10)^0,c
 23249  017A54  6A0C               	clrf	(btemp+11)^0,c
 23250                           
 23251                           ;stkvar	_atoi$6243 @ sp[(-9)+2]
 23252  017A56  0EF9               	movlw	-7
 23253  017A58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23254  017A5E  0EFA               	movlw	-6
 23255  017A60  0060  F033  FFE3   	movff	btemp+11,plusw1
 23256                           
 23257                           ;stkvar	_atoi$6243 @ sp[(-9)+2]
 23258  017A66  0EF9               	movlw	-7
 23259  017A68  006F FF8C  F001    	movff	plusw1,btemp
 23260  017A6E  0EFA               	movlw	-6
 23261  017A70  50E3               	movf	plusw1,w,c
 23262  017A72  1001               	iorwf	btemp^0,w,c
 23263  017A74  B4D8               	btfsc	status,2,c
 23264  017A76  D01F               	goto	l9500
 23265  017A78  D79F               	goto	l9480
 23266  017A7A                     l9496:
 23267  017A7A  0E01               	movlw	1
 23268  017A7C  6E0B               	movwf	(btemp+10)^0,c
 23269  017A7E  0E00               	movlw	0
 23270  017A80  6E0C               	movwf	(btemp+11)^0,c
 23271                           
 23272                           ;stkvar	_neg @ sp[(-9)+7]
 23273  017A82  0EFE               	movlw	-2
 23274  017A84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23275  017A8A  0EFF               	movlw	-1
 23276  017A8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23277  017A92                     l9498:
 23278                           
 23279                           ;stkvar	_s @ sp[(-9)+-2]
 23280  017A92  0EF5               	movlw	-11
 23281  017A94  50E3               	movf	plusw1,w,c
 23282  017A96  0F01               	addlw	1
 23283  017A98  6E01               	movwf	btemp^0,c
 23284  017A9A  0EF5               	movlw	-11
 23285  017A9C  0060  F007  FFE3   	movff	btemp,plusw1
 23286  017AA2  6A01               	clrf	btemp^0,c
 23287  017AA4  0EF6               	movlw	-10
 23288  017AA6  50E3               	movf	plusw1,w,c
 23289  017AA8  2001               	addwfc	btemp^0,w,c
 23290  017AAA  6E01               	movwf	btemp^0,c
 23291  017AAC  0EF6               	movlw	-10
 23292  017AAE  0060  F007  FFE3   	movff	btemp,plusw1
 23293  017AB4  D053               	goto	l9506
 23294  017AB6                     l9500:
 23295                           
 23296                           ;stkvar	_s @ sp[(-9)+-2]
 23297  017AB6  50E1               	movf	fsr1l,w,c
 23298  017AB8  0FF5               	addlw	-11
 23299  017ABA  6ED9               	movwf	fsr2l,c
 23300  017ABC  50E2               	movf	fsr1h,w,c
 23301  017ABE  6EDA               	movwf	fsr2h,c
 23302  017AC0  0EFF               	movlw	255
 23303  017AC2  22DA               	addwfc	fsr2h,f,c
 23304  017AC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 23305  017ACA  006F FF77 FFF7     	movff	postdec2,tblptrh
 23306  017AD0                     	if	0	;tblptru may be non-zero
 23307  017AD0                     	endif
 23308  017AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23309  017AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 23310  017AD2  6EF8               	movwf	tblptru,c
 23311  017AD4                     	endif
 23312  017AD4  0008               	tblrd		*
 23313  017AD6  50F5               	movf	tablat,w,c
 23314  017AD8  6E0B               	movwf	(btemp+10)^0,c
 23315  017ADA  6A0C               	clrf	(btemp+11)^0,c
 23316                           
 23317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23318                           ; Switch size 1, requested type "simple"
 23319                           ; Number of cases is 1, Range of values is 0 to 0
 23320                           ; switch strategies available:
 23321                           ; Name         Instructions Cycles
 23322                           ; simple_byte            4     3 (average)
 23323                           ;	Chosen strategy is simple_byte
 23324  017ADC  500C               	movf	(btemp+11)^0,w,c
 23325  017ADE  0A00               	xorlw	0	; case 0
 23326  017AE0  A4D8               	btfss	status,2,c
 23327  017AE2  D03C               	goto	l9506
 23328                           
 23329                           ; Switch size 1, requested type "simple"
 23330                           ; Number of cases is 2, Range of values is 43 to 45
 23331                           ; switch strategies available:
 23332                           ; Name         Instructions Cycles
 23333                           ; simple_byte            7     4 (average)
 23334                           ;	Chosen strategy is simple_byte
 23335  017AE4  500B               	movf	(btemp+10)^0,w,c
 23336  017AE6  0A2B               	xorlw	43	; case 43
 23337  017AE8  B4D8               	btfsc	status,2,c
 23338  017AEA  D7D3               	goto	l9498
 23339  017AEC  0A06               	xorlw	6	; case 45
 23340  017AEE  B4D8               	btfsc	status,2,c
 23341  017AF0  D7C4               	goto	l9496
 23342  017AF2  D034               	goto	l9506
 23343  017AF4                     l9502:
 23344                           
 23345                           ;stkvar	_n @ sp[(-9)+5]
 23346  017AF4  0EFC               	movlw	-4
 23347  017AF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23348  017AFC  0EFD               	movlw	-3
 23349  017AFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23350  017B04  0E0A               	movlw	10
 23351  017B06  020B               	mulwf	(btemp+10)^0,c
 23352  017B08  006F FFCC  F009    	movff	prodl,btemp+8
 23353  017B0E  006F FFD0  F00A    	movff	prodh,btemp+9
 23354  017B14  020C               	mulwf	(btemp+11)^0,c
 23355  017B16  50F3               	movf	prodl,w,c
 23356  017B18  260A               	addwf	(btemp+9)^0,f,c
 23357                           
 23358                           ;stkvar	_s @ sp[(-9)+-2]
 23359  017B1A  50E1               	movf	fsr1l,w,c
 23360  017B1C  0FF5               	addlw	-11
 23361  017B1E  6ED9               	movwf	fsr2l,c
 23362  017B20  50E2               	movf	fsr1h,w,c
 23363  017B22  6EDA               	movwf	fsr2h,c
 23364  017B24  0EFF               	movlw	255
 23365  017B26  22DA               	addwfc	fsr2h,f,c
 23366  017B28  006F FF7B FFF6     	movff	postinc2,tblptrl
 23367  017B2E  006F FF77 FFF7     	movff	postdec2,tblptrh
 23368  017B34                     	if	0	;tblptru may be non-zero
 23369  017B34                     	endif
 23370  017B34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23371  017B34  0E00               	movlw	low (__mediumconst shr (0+16))
 23372  017B36  6EF8               	movwf	tblptru,c
 23373  017B38                     	endif
 23374  017B38  0008               	tblrd		*
 23375  017B3A  50F5               	movf	tablat,w,c
 23376  017B3C  5E09               	subwf	(btemp+8)^0,f,c
 23377  017B3E  0E00               	movlw	0
 23378  017B40  5A0A               	subwfb	(btemp+9)^0,f,c
 23379  017B42  0E30               	movlw	48
 23380  017B44  2609               	addwf	(btemp+8)^0,f,c
 23381  017B46  0E00               	movlw	0
 23382  017B48  220A               	addwfc	(btemp+9)^0,f,c
 23383                           
 23384                           ;stkvar	_n @ sp[(-9)+5]
 23385  017B4A  0EFC               	movlw	-4
 23386  017B4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23387  017B52  0EFD               	movlw	-3
 23388  017B54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23389  017B5A  D79B               	goto	l9498
 23390  017B5C                     l9506:
 23391  017B5C  0ED0               	movlw	208
 23392  017B5E  6E0B               	movwf	(btemp+10)^0,c
 23393  017B60  0EFF               	movlw	255
 23394  017B62  6E0C               	movwf	(btemp+11)^0,c
 23395                           
 23396                           ;stkvar	_s @ sp[(-9)+-2]
 23397  017B64  50E1               	movf	fsr1l,w,c
 23398  017B66  0FF5               	addlw	-11
 23399  017B68  6ED9               	movwf	fsr2l,c
 23400  017B6A  50E2               	movf	fsr1h,w,c
 23401  017B6C  6EDA               	movwf	fsr2h,c
 23402  017B6E  0EFF               	movlw	255
 23403  017B70  22DA               	addwfc	fsr2h,f,c
 23404  017B72  006F FF7B FFF6     	movff	postinc2,tblptrl
 23405  017B78  006F FF77 FFF7     	movff	postdec2,tblptrh
 23406  017B7E                     	if	0	;tblptru may be non-zero
 23407  017B7E                     	endif
 23408  017B7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23409  017B7E  0E00               	movlw	low (__mediumconst shr (0+16))
 23410  017B80  6EF8               	movwf	tblptru,c
 23411  017B82                     	endif
 23412  017B82  0008               	tblrd		*
 23413  017B84  50F5               	movf	tablat,w,c
 23414  017B86  6E09               	movwf	(btemp+8)^0,c
 23415  017B88  6A0A               	clrf	(btemp+9)^0,c
 23416  017B8A  500B               	movf	(btemp+10)^0,w,c
 23417  017B8C  2609               	addwf	(btemp+8)^0,f,c
 23418  017B8E  500C               	movf	(btemp+11)^0,w,c
 23419  017B90  220A               	addwfc	(btemp+9)^0,f,c
 23420  017B92  500A               	movf	(btemp+9)^0,w,c
 23421  017B94  E106               	bnz	u8640
 23422  017B96  0E0A               	movlw	10
 23423  017B98  5C09               	subwf	(btemp+8)^0,w,c
 23424  017B9A  B0D8               	btfsc	status,0,c
 23425  017B9C  D002               	goto	u8640
 23426  017B9E  0E01               	movlw	1
 23427  017BA0  D001               	goto	u8650
 23428  017BA2                     u8640:
 23429  017BA2  0E00               	movlw	0
 23430  017BA4                     u8650:
 23431  017BA4  6E0B               	movwf	(btemp+10)^0,c
 23432  017BA6  6A0C               	clrf	(btemp+11)^0,c
 23433                           
 23434                           ;stkvar	_atoi$6245 @ sp[(-9)+0]
 23435  017BA8  0EF7               	movlw	-9
 23436  017BAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23437  017BB0  0EF8               	movlw	-8
 23438  017BB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23439                           
 23440                           ;stkvar	_atoi$6245 @ sp[(-9)+0]
 23441  017BB8  0EF7               	movlw	-9
 23442  017BBA  006F FF8C  F001    	movff	plusw1,btemp
 23443  017BC0  0EF8               	movlw	-8
 23444  017BC2  50E3               	movf	plusw1,w,c
 23445  017BC4  1001               	iorwf	btemp^0,w,c
 23446  017BC6  A4D8               	btfss	status,2,c
 23447  017BC8  D795               	goto	l9502
 23448                           
 23449                           ;stkvar	_neg @ sp[(-9)+7]
 23450  017BCA  0EFE               	movlw	-2
 23451  017BCC  006F FF8C  F001    	movff	plusw1,btemp
 23452  017BD2  0EFF               	movlw	-1
 23453  017BD4  50E3               	movf	plusw1,w,c
 23454  017BD6  1001               	iorwf	btemp^0,w,c
 23455  017BD8  A4D8               	btfss	status,2,c
 23456  017BDA  D00E               	goto	l9516
 23457                           
 23458                           ;stkvar	_n @ sp[(-9)+5]
 23459  017BDC  0EFC               	movlw	-4
 23460  017BDE  006F FF8C  F001    	movff	plusw1,btemp
 23461  017BE4  1E01               	comf	btemp^0,f,c
 23462  017BE6  0EFD               	movlw	-3
 23463  017BE8  006F FF8C  F002    	movff	plusw1,btemp+1
 23464  017BEE  1E02               	comf	(btemp+1)^0,f,c
 23465  017BF0  2A01               	incf	btemp^0,f,c
 23466  017BF2  B4D8               	btfsc	status,2,c
 23467  017BF4  2A02               	incf	(btemp+1)^0,f,c
 23468  017BF6  D008               	goto	l3191
 23469  017BF8                     l9516:
 23470                           
 23471                           ;stkvar	_n @ sp[(-9)+5]
 23472  017BF8  0EFC               	movlw	-4
 23473  017BFA  006F FF8C  F001    	movff	plusw1,btemp
 23474  017C00  0EFD               	movlw	-3
 23475  017C02  006F FF8C  F002    	movff	plusw1,btemp+1
 23476  017C08                     l3191:
 23477                           
 23478                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23479  017C08  0EF5               	movlw	245
 23480  017C0A  26E1               	addwf	fsr1l,f,c
 23481  017C0C  0EFF               	movlw	255
 23482  017C0E  22E2               	addwfc	fsr1h,f,c
 23483  017C10  0012               	return		;funcret
 23484  017C12                     __end_of_atoi:
 23485                           	opt callstack 0
 23486                           
 23487 ;; *************** function _isspace *****************
 23488 ;; Defined at:
 23489 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23490 ;; Parameters:    Size  Location     Type
 23491 ;;  c               2  [STACK] int 
 23492 ;; Auto vars:     Size  Location     Type
 23493 ;;		None
 23494 ;; Return value:  Size  Location     Type
 23495 ;;                  2  [STACK] int 
 23496 ;; Registers used:
 23497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23498 ;; Tracked objects:
 23499 ;;		On entry : 0/0
 23500 ;;		On exit  : 0/0
 23501 ;;		Unchanged: 0/0
 23502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23507 ;;Total ram usage:        0 bytes
 23508 ;; Hardware stack levels used:    1
 23509 ;; Hardware stack levels required when called:   15
 23510 ;; This function calls:
 23511 ;;		Nothing
 23512 ;; This function is called by:
 23513 ;;		_atoi
 23514 ;; This function uses a reentrant model
 23515 ;;
 23516                           
 23517                           	psect	text85
 23518  01B66E                     __ptext85:
 23519                           	opt callstack 0
 23520  01B66E                     _isspace:
 23521                           	opt callstack 0
 23522                           
 23523                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23524  01B66E  52E6               	movf	postinc1,f,c
 23525                           
 23526                           ;stkvar	_isspace$6294 @ sp[(-1)+0]
 23527                           
 23528                           ;incstack = 0
 23529 ;; hardware stack exceeded
 23530  01B670  0EFF               	movlw	-1
 23531  01B672  6AE3               	clrf	plusw1,c
 23532  01B674  2AE3               	incf	plusw1,f,c
 23533                           
 23534                           ;stkvar	_c @ sp[(-1)+-2]
 23535  01B676  0EFD               	movlw	-3
 23536  01B678  006F FF8C  F001    	movff	plusw1,btemp
 23537  01B67E  0E20               	movlw	32
 23538  01B680  1801               	xorwf	btemp^0,w,c
 23539  01B682  E104               	bnz	u7510
 23540  01B684  0EFE               	movlw	-2
 23541  01B686  50E3               	movf	plusw1,w,c
 23542  01B688  B4D8               	btfsc	status,2,c
 23543  01B68A  D012               	goto	l8900
 23544  01B68C                     u7510:
 23545                           
 23546                           ;stkvar	_c @ sp[(-1)+-2]
 23547  01B68C  0EFD               	movlw	-3
 23548  01B68E  50E3               	movf	plusw1,w,c
 23549  01B690  0FF7               	addlw	247
 23550  01B692  6E0B               	movwf	(btemp+10)^0,c
 23551  01B694  0EFE               	movlw	-2
 23552  01B696  006F FF8C  F00C    	movff	plusw1,btemp+11
 23553  01B69C  0EFF               	movlw	255
 23554  01B69E  220C               	addwfc	(btemp+11)^0,f,c
 23555  01B6A0  500C               	movf	(btemp+11)^0,w,c
 23556  01B6A2  E104               	bnz	u7520
 23557  01B6A4  0E05               	movlw	5
 23558  01B6A6  5C0B               	subwf	(btemp+10)^0,w,c
 23559  01B6A8  A0D8               	btfss	status,0,c
 23560  01B6AA  D002               	goto	l8900
 23561  01B6AC                     u7520:
 23562                           
 23563                           ;stkvar	_isspace$6294 @ sp[(-1)+0]
 23564  01B6AC  0EFF               	movlw	-1
 23565  01B6AE  6AE3               	clrf	plusw1,c
 23566  01B6B0                     l8900:
 23567                           
 23568                           ;stkvar	_isspace$6294 @ sp[(-1)+0]
 23569  01B6B0  0EFF               	movlw	-1
 23570  01B6B2  50E3               	movf	plusw1,w,c
 23571  01B6B4  6E01               	movwf	btemp^0,c
 23572  01B6B6  6A02               	clrf	(btemp+1)^0,c
 23573                           
 23574                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23575  01B6B8  52E5               	movf	postdec1,f,c
 23576  01B6BA  52E5               	movf	postdec1,f,c
 23577  01B6BC  52E5               	movf	postdec1,f,c
 23578  01B6BE  0012               	return		;funcret
 23579  01B6C0                     __end_of_isspace:
 23580                           	opt callstack 0
 23581                           
 23582 ;; *************** function _isdigit *****************
 23583 ;; Defined at:
 23584 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23585 ;; Parameters:    Size  Location     Type
 23586 ;;  c               2  [STACK] int 
 23587 ;; Auto vars:     Size  Location     Type
 23588 ;;		None
 23589 ;; Return value:  Size  Location     Type
 23590 ;;                  2  [STACK] int 
 23591 ;; Registers used:
 23592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23593 ;; Tracked objects:
 23594 ;;		On entry : 0/0
 23595 ;;		On exit  : 0/0
 23596 ;;		Unchanged: 0/0
 23597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23602 ;;Total ram usage:        0 bytes
 23603 ;; Hardware stack levels used:    1
 23604 ;; Hardware stack levels required when called:   15
 23605 ;; This function calls:
 23606 ;;		Nothing
 23607 ;; This function is called by:
 23608 ;;		_vfpfcnvrt
 23609 ;;		_atoi
 23610 ;; This function uses a reentrant model
 23611 ;;
 23612                           
 23613                           	psect	text86
 23614  01BE60                     __ptext86:
 23615                           	opt callstack 0
 23616  01BE60                     _isdigit:
 23617                           	opt callstack 0
 23618                           
 23619                           ;stkvar	_c @ sp[(0)+-2]
 23620                           
 23621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23622                           ;incstack = 0
 23623 ;; hardware stack exceeded
 23624  01BE60  0EFE               	movlw	-2
 23625  01BE62  50E3               	movf	plusw1,w,c
 23626  01BE64  0FD0               	addlw	208
 23627  01BE66  6E0B               	movwf	(btemp+10)^0,c
 23628  01BE68  0EFF               	movlw	-1
 23629  01BE6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23630  01BE70  0EFF               	movlw	255
 23631  01BE72  220C               	addwfc	(btemp+11)^0,f,c
 23632  01BE74  500C               	movf	(btemp+11)^0,w,c
 23633  01BE76  E106               	bnz	u6360
 23634  01BE78  0E0A               	movlw	10
 23635  01BE7A  5C0B               	subwf	(btemp+10)^0,w,c
 23636  01BE7C  B0D8               	btfsc	status,0,c
 23637  01BE7E  D002               	goto	u6360
 23638  01BE80  0E01               	movlw	1
 23639  01BE82  D001               	goto	u6370
 23640  01BE84                     u6360:
 23641  01BE84  0E00               	movlw	0
 23642  01BE86                     u6370:
 23643  01BE86  6E01               	movwf	btemp^0,c
 23644  01BE88  6A02               	clrf	(btemp+1)^0,c
 23645                           
 23646                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23647  01BE8A  52E5               	movf	postdec1,f,c
 23648  01BE8C  52E5               	movf	postdec1,f,c
 23649  01BE8E  0012               	return		;funcret
 23650  01BE90                     __end_of_isdigit:
 23651                           	opt callstack 0
 23652                           
 23653 ;; *************** function _set_vterm *****************
 23654 ;; Defined at:
 23655 ;;		line 107 in file "mconfig.c"
 23656 ;; Parameters:    Size  Location     Type
 23657 ;;  vterm           1  [STACK] const unsigned char 
 23658 ;; Auto vars:     Size  Location     Type
 23659 ;;		None
 23660 ;; Return value:  Size  Location     Type
 23661 ;;                  1  [STACK] unsigned char 
 23662 ;; Registers used:
 23663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 23664 ;; Tracked objects:
 23665 ;;		On entry : 0/1
 23666 ;;		On exit  : 0/0
 23667 ;;		Unchanged: 0/0
 23668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23673 ;;Total ram usage:        0 bytes
 23674 ;; Hardware stack levels used:    1
 23675 ;; Hardware stack levels required when called:   15
 23676 ;; This function calls:
 23677 ;;		Nothing
 23678 ;; This function is called by:
 23679 ;;		_main
 23680 ;;		_check_help
 23681 ;; This function uses a reentrant model
 23682 ;;
 23683                           
 23684                           	psect	text87
 23685  01C382                     __ptext87:
 23686                           	opt callstack 0
 23687  01C382                     _set_vterm:
 23688                           	opt callstack 15
 23689                           
 23690                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 23691                           ;stkvar	_vterm @ sp[(0)+-1]
 23692                           
 23693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23694                           ;incstack = 0
 23695  01C382  0EFF               	movlw	-1
 23696  01C384  006F FF8C  F00C    	movff	plusw1,btemp+11
 23697  01C38A  0E03               	movlw	3
 23698  01C38C  160C               	andwf	(btemp+11)^0,f,c
 23699  01C38E  EE22  F20A         	lfsr	2,_D+480
 23700  01C392  50DF               	movf	223,w,c
 23701  01C394  180C               	xorwf	(btemp+11)^0,w,c
 23702  01C396  0BFE               	andlw	-2
 23703  01C398  180C               	xorwf	(btemp+11)^0,w,c
 23704  01C39A  6EDF               	movwf	223,c
 23705                           
 23706                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23707  01C39C  52E5               	movf	postdec1,f,c
 23708  01C39E  0012               	return		;funcret
 23709  01C3A0                     __end_of_set_vterm:
 23710                           	opt callstack 0
 23711                           
 23712 ;; *************** function _set_temp_display_help *****************
 23713 ;; Defined at:
 23714 ;;		line 211 in file "mconfig.c"
 23715 ;; Parameters:    Size  Location     Type
 23716 ;;  new_response    1  [STACK] const enum E16509
 23717 ;; Auto vars:     Size  Location     Type
 23718 ;;		None
 23719 ;; Return value:  Size  Location     Type
 23720 ;;                  1  [STACK] enum E16509
 23721 ;; Registers used:
 23722 ;;		wreg, fsr1l, fsr1h
 23723 ;; Tracked objects:
 23724 ;;		On entry : 0/1
 23725 ;;		On exit  : 3F/1
 23726 ;;		Unchanged: 0/0
 23727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23732 ;;Total ram usage:        0 bytes
 23733 ;; Hardware stack levels used:    1
 23734 ;; Hardware stack levels required when called:   15
 23735 ;; This function calls:
 23736 ;;		Nothing
 23737 ;; This function is called by:
 23738 ;;		_check_help
 23739 ;; This function uses a reentrant model
 23740 ;;
 23741                           
 23742                           	psect	text88
 23743  01C4CA                     __ptext88:
 23744                           	opt callstack 0
 23745  01C4CA                     _set_temp_display_help:
 23746                           	opt callstack 14
 23747                           
 23748                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23749                           
 23750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23751                           ;incstack = 0
 23752  01C4CA  0101               	movlb	1	; () banked
 23753  01C4CC  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 23754                           
 23755                           ; BSR set to: 1
 23756                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23757                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23758  01C4CE  0EFF               	movlw	-1
 23759  01C4D0  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 23760                           
 23761                           ; BSR set to: 1
 23762                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23763  01C4D6  52E5               	movf	postdec1,f,c
 23764  01C4D8  0012               	return		;funcret
 23765  01C4DA                     __end_of_set_temp_display_help:
 23766                           	opt callstack 0
 23767                           
 23768 ;; *************** function _set_display_info *****************
 23769 ;; Defined at:
 23770 ;;		line 200 in file "mconfig.c"
 23771 ;; Parameters:    Size  Location     Type
 23772 ;;  new_response    1  [STACK] const enum E16509
 23773 ;; Auto vars:     Size  Location     Type
 23774 ;;		None
 23775 ;; Return value:  Size  Location     Type
 23776 ;;                  1  [STACK] enum E16994
 23777 ;; Registers used:
 23778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23779 ;; Tracked objects:
 23780 ;;		On entry : 0/1
 23781 ;;		On exit  : 0/0
 23782 ;;		Unchanged: 0/0
 23783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23788 ;;Total ram usage:        0 bytes
 23789 ;; Hardware stack levels used:    1
 23790 ;; Hardware stack levels required when called:   16
 23791 ;; This function calls:
 23792 ;;		_TimerDone
 23793 ;; This function is called by:
 23794 ;;		_main
 23795 ;;		_check_help
 23796 ;; This function uses a reentrant model
 23797 ;;
 23798                           
 23799                           	psect	text89
 23800  01C3A0                     __ptext89:
 23801                           	opt callstack 0
 23802  01C3A0                     _set_display_info:
 23803                           	opt callstack 14
 23804                           
 23805                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23806                           
 23807                           ; BSR set to: 1
 23808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23809                           ;incstack = 0
 23810  01C3A0  0E07               	movlw	7
 23811  01C3A2  6EE6               	movwf	postinc1,c
 23812  01C3A4  ECCB  F0DF         	call	_TimerDone	;wreg free
 23813  01C3A8  5001               	movf	btemp^0,w,c
 23814  01C3AA  B4D8               	btfsc	status,2,c
 23815  01C3AC  D006               	goto	l1732
 23816                           
 23817                           ;mconfig.c: 205:   old_info = V.response.info;
 23818  01C3AE  0101               	movlb	1	; () banked
 23819  01C3B0  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 23820                           
 23821                           ; BSR set to: 1
 23822                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23823                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23824  01C3B2  0EFF               	movlw	-1
 23825  01C3B4  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 23826  01C3BA                     l1732:
 23827                           
 23828                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23829  01C3BA  52E5               	movf	postdec1,f,c
 23830  01C3BC  0012               	return		;funcret
 23831  01C3BE                     __end_of_set_display_info:
 23832                           	opt callstack 0
 23833                           
 23834 ;; *************** function _mode_lamp_dim *****************
 23835 ;; Defined at:
 23836 ;;		line 13 in file "mconfig.c"
 23837 ;; Parameters:    Size  Location     Type
 23838 ;;  level           2  [STACK] const unsigned short 
 23839 ;; Auto vars:     Size  Location     Type
 23840 ;;		None
 23841 ;; Return value:  Size  Location     Type
 23842 ;;                  1  [STACK] void 
 23843 ;; Registers used:
 23844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23845 ;; Tracked objects:
 23846 ;;		On entry : 0/1
 23847 ;;		On exit  : 0/0
 23848 ;;		Unchanged: 0/0
 23849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23854 ;;Total ram usage:        0 bytes
 23855 ;; Hardware stack levels used:    1
 23856 ;; Hardware stack levels required when called:   16
 23857 ;; This function calls:
 23858 ;;		_PWM8_LoadDutyValue
 23859 ;; This function is called by:
 23860 ;;		_main
 23861 ;;		_check_help
 23862 ;; This function uses a reentrant model
 23863 ;;
 23864                           
 23865                           	psect	text90
 23866  01C412                     __ptext90:
 23867                           	opt callstack 0
 23868  01C412                     _mode_lamp_dim:
 23869                           	opt callstack 14
 23870                           
 23871                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23872                           ;stkvar	_level @ sp[(0)+-2]
 23873                           
 23874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23875                           ;incstack = 0
 23876  01C412  0EFE               	movlw	-2
 23877  01C414  006F FF8F FFE6     	movff	plusw1,postinc1
 23878  01C41A  006F FF8F FFE6     	movff	plusw1,postinc1
 23879  01C420  EC15  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23880                           
 23881                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23882  01C424  52E5               	movf	postdec1,f,c
 23883  01C426  52E5               	movf	postdec1,f,c
 23884  01C428  0012               	return		;funcret
 23885  01C42A                     __end_of_mode_lamp_dim:
 23886                           	opt callstack 0
 23887                           
 23888 ;; *************** function _mode_lamp_bright *****************
 23889 ;; Defined at:
 23890 ;;		line 18 in file "mconfig.c"
 23891 ;; Parameters:    Size  Location     Type
 23892 ;;		None
 23893 ;; Auto vars:     Size  Location     Type
 23894 ;;		None
 23895 ;; Return value:  Size  Location     Type
 23896 ;;                  1  [STACK] void 
 23897 ;; Registers used:
 23898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23899 ;; Tracked objects:
 23900 ;;		On entry : 0/0
 23901 ;;		On exit  : 0/0
 23902 ;;		Unchanged: 0/0
 23903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23908 ;;Total ram usage:        0 bytes
 23909 ;; Hardware stack levels used:    1
 23910 ;; Hardware stack levels required when called:   16
 23911 ;; This function calls:
 23912 ;;		_PWM8_LoadDutyValue
 23913 ;; This function is called by:
 23914 ;;		_check_help
 23915 ;; This function uses a reentrant model
 23916 ;;
 23917                           
 23918                           	psect	text91
 23919  01C4F8                     __ptext91:
 23920                           	opt callstack 0
 23921  01C4F8                     _mode_lamp_bright:
 23922                           	opt callstack 13
 23923                           
 23924                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23925                           
 23926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23927                           ;incstack = 0
 23928  01C4F8  0E2C               	movlw	44
 23929  01C4FA  6EE6               	movwf	postinc1,c
 23930  01C4FC  0E01               	movlw	1
 23931  01C4FE  6EE6               	movwf	postinc1,c
 23932  01C500  EC15  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23933                           
 23934                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23935  01C504  0012               	return		;funcret
 23936  01C506                     __end_of_mode_lamp_bright:
 23937                           	opt callstack 0
 23938                           
 23939 ;; *************** function _PWM8_LoadDutyValue *****************
 23940 ;; Defined at:
 23941 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23942 ;; Parameters:    Size  Location     Type
 23943 ;;  dutyValue       2  [STACK] unsigned short 
 23944 ;; Auto vars:     Size  Location     Type
 23945 ;;		None
 23946 ;; Return value:  Size  Location     Type
 23947 ;;                  1  [STACK] void 
 23948 ;; Registers used:
 23949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23950 ;; Tracked objects:
 23951 ;;		On entry : 0/1
 23952 ;;		On exit  : 0/0
 23953 ;;		Unchanged: 0/0
 23954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23959 ;;Total ram usage:        0 bytes
 23960 ;; Hardware stack levels used:    1
 23961 ;; Hardware stack levels required when called:   15
 23962 ;; This function calls:
 23963 ;;		Nothing
 23964 ;; This function is called by:
 23965 ;;		_mode_lamp_dim
 23966 ;;		_mode_lamp_bright
 23967 ;; This function uses a reentrant model
 23968 ;;
 23969                           
 23970                           	psect	text92
 23971  01BA2A                     __ptext92:
 23972                           	opt callstack 0
 23973  01BA2A                     _PWM8_LoadDutyValue:
 23974                           	opt callstack 14
 23975                           
 23976                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23977                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23978                           
 23979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23980                           ;incstack = 0
 23981  01BA2A  0EFE               	movlw	-2
 23982  01BA2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23983  01BA32  0EFF               	movlw	-1
 23984  01BA34  006F FF8C  F00C    	movff	plusw1,btemp+11
 23985  01BA3A  90D8               	bcf	status,0,c
 23986  01BA3C  320C               	rrcf	(btemp+11)^0,f,c
 23987  01BA3E  320B               	rrcf	(btemp+10)^0,f,c
 23988  01BA40  90D8               	bcf	status,0,c
 23989  01BA42  320C               	rrcf	(btemp+11)^0,f,c
 23990  01BA44  320B               	rrcf	(btemp+10)^0,f,c
 23991  01BA46  500B               	movf	(btemp+10)^0,w,c
 23992  01BA48  6E61               	movwf	97,c	;volatile
 23993                           
 23994                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 23995                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23996  01BA4A  0EFE               	movlw	-2
 23997  01BA4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23998  01BA52  0E03               	movlw	3
 23999  01BA54  160C               	andwf	(btemp+11)^0,f,c
 24000  01BA56  0E06               	movlw	6
 24001  01BA58  6E01               	movwf	btemp^0,c
 24002  01BA5A                     u9465:
 24003  01BA5A  90D8               	bcf	status,0,c
 24004  01BA5C  360C               	rlcf	(btemp+11)^0,f,c
 24005  01BA5E  2E01               	decfsz	btemp^0,f,c
 24006  01BA60  D7FC               	goto	u9465
 24007  01BA62  500C               	movf	(btemp+11)^0,w,c
 24008  01BA64  6E60               	movwf	96,c	;volatile
 24009                           
 24010                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24011  01BA66  52E5               	movf	postdec1,f,c
 24012  01BA68  52E5               	movf	postdec1,f,c
 24013  01BA6A  0012               	return		;funcret
 24014  01BA6C                     __end_of_PWM8_LoadDutyValue:
 24015                           	opt callstack 0
 24016                           
 24017 ;; *************** function _help_button *****************
 24018 ;; Defined at:
 24019 ;;		line 26 in file "mconfig.c"
 24020 ;; Parameters:    Size  Location     Type
 24021 ;;		None
 24022 ;; Auto vars:     Size  Location     Type
 24023 ;;		None
 24024 ;; Return value:  Size  Location     Type
 24025 ;;                  1  [STACK] _Bool 
 24026 ;; Registers used:
 24027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24028 ;; Tracked objects:
 24029 ;;		On entry : 0/1
 24030 ;;		On exit  : 0/0
 24031 ;;		Unchanged: 0/0
 24032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24037 ;;Total ram usage:        0 bytes
 24038 ;; Hardware stack levels used:    1
 24039 ;; Hardware stack levels required when called:   16
 24040 ;; This function calls:
 24041 ;;		_StartTimer
 24042 ;;		_TimerDone
 24043 ;; This function is called by:
 24044 ;;		_check_help
 24045 ;; This function uses a reentrant model
 24046 ;;
 24047                           
 24048                           	psect	text93
 24049  01BC24                     __ptext93:
 24050                           	opt callstack 0
 24051  01BC24                     _help_button:
 24052                           	opt callstack 13
 24053                           
 24054                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 24055                           
 24056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24057                           ;incstack = 0
 24058  01BC24  B0CB               	btfsc	203,0,c	;volatile
 24059  01BC26  D00C               	goto	l1675
 24060                           
 24061                           ;mconfig.c: 29:   V.help = 1;
 24062  01BC28  0101               	movlb	1	; () banked
 24063  01BC2A  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 24064                           
 24065                           ; BSR set to: 1
 24066                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 24067  01BC2C  0E08               	movlw	8
 24068  01BC2E  6EE6               	movwf	postinc1,c
 24069  01BC30  ECCB  F0DF         	call	_TimerDone	;wreg free
 24070  01BC34  5001               	movf	btemp^0,w,c
 24071  01BC36  B4D8               	btfsc	status,2,c
 24072  01BC38  D003               	goto	l1675
 24073                           
 24074                           ;mconfig.c: 31:    return 1;
 24075  01BC3A  0E01               	movlw	1
 24076  01BC3C  6E01               	movwf	btemp^0,c
 24077  01BC3E  0012               	return	
 24078  01BC40                     l1675:
 24079                           
 24080                           ;mconfig.c: 34:  if (!V.help)
 24081  01BC40  0101               	movlb	1	; () banked
 24082  01BC42  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 24083  01BC44  D008               	goto	l10628
 24084                           
 24085                           ; BSR set to: 1
 24086                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 24087  01BC46  0E2C               	movlw	44
 24088  01BC48  6EE6               	movwf	postinc1,c
 24089  01BC4A  0E01               	movlw	1
 24090  01BC4C  6EE6               	movwf	postinc1,c
 24091  01BC4E  0E08               	movlw	8
 24092  01BC50  6EE6               	movwf	postinc1,c
 24093  01BC52  EC76  F0DD         	call	_StartTimer	;wreg free
 24094  01BC56                     l10628:
 24095                           
 24096                           ;mconfig.c: 37:  return 0;
 24097  01BC56  0E00               	movlw	0
 24098  01BC58  6E01               	movwf	btemp^0,c
 24099                           
 24100                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 24101  01BC5A  0012               	return		;funcret
 24102  01BC5C                     __end_of_help_button:
 24103                           	opt callstack 0
 24104                           
 24105 ;; *************** function _TimerDone *****************
 24106 ;; Defined at:
 24107 ;;		line 20 in file "timers.c"
 24108 ;; Parameters:    Size  Location     Type
 24109 ;;  timer           1  [STACK] const unsigned char 
 24110 ;; Auto vars:     Size  Location     Type
 24111 ;;		None
 24112 ;; Return value:  Size  Location     Type
 24113 ;;                  1  [STACK] _Bool 
 24114 ;; Registers used:
 24115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24116 ;; Tracked objects:
 24117 ;;		On entry : 0/1
 24118 ;;		On exit  : 0/0
 24119 ;;		Unchanged: 0/0
 24120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24125 ;;Total ram usage:        0 bytes
 24126 ;; Hardware stack levels used:    1
 24127 ;; Hardware stack levels required when called:   15
 24128 ;; This function calls:
 24129 ;;		Nothing
 24130 ;; This function is called by:
 24131 ;;		_main
 24132 ;;		_WaitMs
 24133 ;;		_help_button
 24134 ;;		_check_help
 24135 ;;		_set_display_info
 24136 ;;		_update_adc_result
 24137 ;;		_esr_check
 24138 ;; This function uses a reentrant model
 24139 ;;
 24140                           
 24141                           	psect	text94
 24142  01BF96                     __ptext94:
 24143                           	opt callstack 0
 24144  01BF96                     _TimerDone:
 24145                           	opt callstack 14
 24146                           
 24147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24148                           ;incstack = 0
 24149  01BF96  0004               	clrwdt		;# 
 24150                           
 24151                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24152                           ;stkvar	_timer @ sp[(0)+-1]
 24153  01BF98  0EFF               	movlw	-1
 24154  01BF9A  50E3               	movf	plusw1,w,c
 24155  01BF9C  0D02               	mullw	2
 24156  01BF9E  0E7D               	movlw	low _tickCount
 24157  01BFA0  24F3               	addwf	243,w,c
 24158  01BFA2  6ED9               	movwf	fsr2l,c
 24159  01BFA4  0E02               	movlw	high _tickCount
 24160  01BFA6  20F4               	addwfc	prodh,w,c
 24161  01BFA8  6EDA               	movwf	fsr2h,c
 24162  01BFAA  50DE               	movf	postinc2,w,c
 24163  01BFAC  10DE               	iorwf	postinc2,w,c
 24164  01BFAE  A4D8               	btfss	status,2,c
 24165  01BFB0  D002               	goto	l9914
 24166                           
 24167                           ;timers.c: 24:   return 1;
 24168  01BFB2  0E01               	movlw	1
 24169  01BFB4  D001               	goto	L28
 24170  01BFB6                     l9914:
 24171                           
 24172                           ;timers.c: 26:  return 0;
 24173  01BFB6  0E00               	movlw	0
 24174  01BFB8                     L28:
 24175  01BFB8  6E01               	movwf	btemp^0,c
 24176                           
 24177                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24178  01BFBA  52E5               	movf	postdec1,f,c
 24179  01BFBC  0012               	return		;funcret
 24180  01BFBE                     __end_of_TimerDone:
 24181                           	opt callstack 0
 24182                           
 24183 ;; *************** function _StartTimer *****************
 24184 ;; Defined at:
 24185 ;;		line 12 in file "timers.c"
 24186 ;; Parameters:    Size  Location     Type
 24187 ;;  timer           1  [STACK] const unsigned char 
 24188 ;;  count           2  [STACK] const unsigned short 
 24189 ;; Auto vars:     Size  Location     Type
 24190 ;;		None
 24191 ;; Return value:  Size  Location     Type
 24192 ;;                  1  [STACK] void 
 24193 ;; Registers used:
 24194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24195 ;; Tracked objects:
 24196 ;;		On entry : 0/0
 24197 ;;		On exit  : 0/0
 24198 ;;		Unchanged: 0/0
 24199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24204 ;;Total ram usage:        0 bytes
 24205 ;; Hardware stack levels used:    1
 24206 ;; Hardware stack levels required when called:   15
 24207 ;; This function calls:
 24208 ;;		Nothing
 24209 ;; This function is called by:
 24210 ;;		_main
 24211 ;;		_WaitMs
 24212 ;;		_help_button
 24213 ;;		_check_help
 24214 ;;		_update_adc_result
 24215 ;;		_calc_bsoc
 24216 ;;		_esr_check
 24217 ;; This function uses a reentrant model
 24218 ;;
 24219                           
 24220                           	psect	text95
 24221  01BAEC                     __ptext95:
 24222                           	opt callstack 0
 24223  01BAEC                     _StartTimer:
 24224                           	opt callstack 0
 24225                           
 24226                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 24227                           ;stkvar	_count @ sp[(0)+-3]
 24228                           
 24229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24230                           ;incstack = 0
 24231 ;; hardware stack exceeded
 24232  01BAEC  0EFD               	movlw	-3
 24233  01BAEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24234  01BAF4  0EFE               	movlw	-2
 24235  01BAF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24236  01BAFC  90D8               	bcf	status,0,c
 24237  01BAFE  340B               	rlcf	(btemp+10)^0,w,c
 24238  01BB00  6E09               	movwf	(btemp+8)^0,c
 24239  01BB02  340C               	rlcf	(btemp+11)^0,w,c
 24240  01BB04  6E0A               	movwf	(btemp+9)^0,c
 24241                           
 24242                           ;stkvar	_timer @ sp[(0)+-1]
 24243  01BB06  0EFF               	movlw	-1
 24244  01BB08  50E3               	movf	plusw1,w,c
 24245  01BB0A  0D02               	mullw	2
 24246  01BB0C  0E7D               	movlw	low _tickCount
 24247  01BB0E  24F3               	addwf	243,w,c
 24248  01BB10  6ED9               	movwf	fsr2l,c
 24249  01BB12  0E02               	movlw	high _tickCount
 24250  01BB14  20F4               	addwfc	prodh,w,c
 24251  01BB16  6EDA               	movwf	fsr2h,c
 24252  01BB18  0060  F027  FFDE   	movff	btemp+8,postinc2
 24253  01BB1E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 24254                           
 24255                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 24256  01BB24  52E5               	movf	postdec1,f,c
 24257  01BB26  52E5               	movf	postdec1,f,c
 24258  01BB28  52E5               	movf	postdec1,f,c
 24259  01BB2A  0012               	return		;funcret
 24260  01BB2C                     __end_of_StartTimer:
 24261                           	opt callstack 0
 24262                           
 24263 ;; *************** function _display_info *****************
 24264 ;; Defined at:
 24265 ;;		line 190 in file "mconfig.c"
 24266 ;; Parameters:    Size  Location     Type
 24267 ;;		None
 24268 ;; Auto vars:     Size  Location     Type
 24269 ;;		None
 24270 ;; Return value:  Size  Location     Type
 24271 ;;                  1  [STACK] enum E16509
 24272 ;; Registers used:
 24273 ;;		btemp
 24274 ;; Tracked objects:
 24275 ;;		On entry : 0/1
 24276 ;;		On exit  : 0/0
 24277 ;;		Unchanged: 0/0
 24278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24283 ;;Total ram usage:        0 bytes
 24284 ;; Hardware stack levels used:    1
 24285 ;; Hardware stack levels required when called:   15
 24286 ;; This function calls:
 24287 ;;		Nothing
 24288 ;; This function is called by:
 24289 ;;		_check_help
 24290 ;; This function uses a reentrant model
 24291 ;;
 24292                           
 24293                           	psect	text96
 24294  01C57A                     __ptext96:
 24295                           	opt callstack 0
 24296  01C57A                     _display_info:
 24297                           	opt callstack 14
 24298                           
 24299                           ;mconfig.c: 192:  return V.response.info;
 24300                           
 24301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24302                           ;incstack = 0
 24303  01C57A  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 24304                           
 24305                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24306  01C580  0012               	return		;funcret
 24307  01C582                     __end_of_display_info:
 24308                           	opt callstack 0
 24309                           
 24310 ;; *************** function _display_help *****************
 24311 ;; Defined at:
 24312 ;;		line 195 in file "mconfig.c"
 24313 ;; Parameters:    Size  Location     Type
 24314 ;;		None
 24315 ;; Auto vars:     Size  Location     Type
 24316 ;;		None
 24317 ;; Return value:  Size  Location     Type
 24318 ;;                  1  [STACK] enum E16509
 24319 ;; Registers used:
 24320 ;;		btemp
 24321 ;; Tracked objects:
 24322 ;;		On entry : 3F/1
 24323 ;;		On exit  : 0/0
 24324 ;;		Unchanged: 0/0
 24325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24330 ;;Total ram usage:        0 bytes
 24331 ;; Hardware stack levels used:    1
 24332 ;; Hardware stack levels required when called:   15
 24333 ;; This function calls:
 24334 ;;		Nothing
 24335 ;; This function is called by:
 24336 ;;		_check_help
 24337 ;; This function uses a reentrant model
 24338 ;;
 24339                           
 24340                           	psect	text97
 24341  01C582                     __ptext97:
 24342                           	opt callstack 0
 24343  01C582                     _display_help:
 24344                           	opt callstack 14
 24345                           
 24346                           ;mconfig.c: 197:  return V.response.help_temp;
 24347                           
 24348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24349                           ;incstack = 0
 24350  01C582  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24351                           
 24352                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24353  01C588  0012               	return		;funcret
 24354  01C58A                     __end_of_display_help:
 24355                           	opt callstack 0
 24356                           
 24357 ;; *************** function _check_enter_button *****************
 24358 ;; Defined at:
 24359 ;;		line 42 in file "hid.c"
 24360 ;; Parameters:    Size  Location     Type
 24361 ;;  h               2  [STACK] PTR struct H_data
 24362 ;;		 -> H(7), 
 24363 ;; Auto vars:     Size  Location     Type
 24364 ;;		None
 24365 ;; Return value:  Size  Location     Type
 24366 ;;                  1  [STACK] _Bool 
 24367 ;; Registers used:
 24368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24369 ;; Tracked objects:
 24370 ;;		On entry : 0/0
 24371 ;;		On exit  : 0/0
 24372 ;;		Unchanged: 0/0
 24373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24378 ;;Total ram usage:        0 bytes
 24379 ;; Hardware stack levels used:    1
 24380 ;; Hardware stack levels required when called:   15
 24381 ;; This function calls:
 24382 ;;		Nothing
 24383 ;; This function is called by:
 24384 ;;		_main
 24385 ;; This function uses a reentrant model
 24386 ;;
 24387                           
 24388                           	psect	text98
 24389  01B1C0                     __ptext98:
 24390                           	opt callstack 0
 24391  01B1C0                     _check_enter_button:
 24392                           	opt callstack 15
 24393                           
 24394                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24395                           ;stkvar	_h @ sp[(0)+-2]
 24396                           
 24397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24398                           ;incstack = 0
 24399  01B1C0  0EFE               	movlw	-2
 24400  01B1C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24401  01B1C8  0EFF               	movlw	-1
 24402  01B1CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24403  01B1D0  0E04               	movlw	4
 24404  01B1D2  240B               	addwf	(btemp+10)^0,w,c
 24405  01B1D4  6ED9               	movwf	fsr2l,c
 24406  01B1D6  0E00               	movlw	0
 24407  01B1D8  200C               	addwfc	(btemp+11)^0,w,c
 24408  01B1DA  6EDA               	movwf	fsr2h,c
 24409  01B1DC  50DF               	movf	indf2,w,c
 24410  01B1DE  A4D8               	btfss	status,2,c
 24411  01B1E0  D023               	goto	l13272
 24412                           
 24413                           ;stkvar	_h @ sp[(0)+-2]
 24414  01B1E2  0EFE               	movlw	-2
 24415  01B1E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24416  01B1EA  0EFF               	movlw	-1
 24417  01B1EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24418  01B1F2  0E05               	movlw	5
 24419  01B1F4  240B               	addwf	(btemp+10)^0,w,c
 24420  01B1F6  6ED9               	movwf	fsr2l,c
 24421  01B1F8  0E00               	movlw	0
 24422  01B1FA  200C               	addwfc	(btemp+11)^0,w,c
 24423  01B1FC  6EDA               	movwf	fsr2h,c
 24424  01B1FE  50DF               	movf	indf2,w,c
 24425  01B200  A4D8               	btfss	status,2,c
 24426  01B202  D012               	goto	l13272
 24427                           
 24428                           ;hid.c: 45:   h->wait_enter = 1;
 24429                           ;stkvar	_h @ sp[(0)+-2]
 24430  01B204  0EFE               	movlw	-2
 24431  01B206  006F FF8C  F00B    	movff	plusw1,btemp+10
 24432  01B20C  0EFF               	movlw	-1
 24433  01B20E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24434  01B214  0E04               	movlw	4
 24435  01B216  240B               	addwf	(btemp+10)^0,w,c
 24436  01B218  6ED9               	movwf	fsr2l,c
 24437  01B21A  0E00               	movlw	0
 24438  01B21C  200C               	addwfc	(btemp+11)^0,w,c
 24439  01B21E  6EDA               	movwf	fsr2h,c
 24440  01B220  0E01               	movlw	1
 24441  01B222  6EDF               	movwf	indf2,c
 24442                           
 24443                           ;hid.c: 46:   return 1;
 24444  01B224  0E01               	movlw	1
 24445  01B226  D001               	goto	L29
 24446  01B228                     l13272:
 24447                           
 24448                           ;hid.c: 48:  return 0;
 24449  01B228  0E00               	movlw	0
 24450  01B22A                     L29:
 24451  01B22A  6E01               	movwf	btemp^0,c
 24452                           
 24453                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24454  01B22C  52E5               	movf	postdec1,f,c
 24455  01B22E  52E5               	movf	postdec1,f,c
 24456  01B230  0012               	return		;funcret
 24457  01B232                     __end_of_check_enter_button:
 24458                           	opt callstack 0
 24459                           
 24460 ;; *************** function _calc_ror_data *****************
 24461 ;; Defined at:
 24462 ;;		line 102 in file "mbmc.c"
 24463 ;; Parameters:    Size  Location     Type
 24464 ;;		None
 24465 ;; Auto vars:     Size  Location     Type
 24466 ;;		None
 24467 ;; Return value:  Size  Location     Type
 24468 ;;                  1  [STACK] void 
 24469 ;; Registers used:
 24470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24471 ;; Tracked objects:
 24472 ;;		On entry : 0/39
 24473 ;;		On exit  : 0/0
 24474 ;;		Unchanged: 0/0
 24475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24480 ;;Total ram usage:        0 bytes
 24481 ;; Hardware stack levels used:    1
 24482 ;; Hardware stack levels required when called:   18
 24483 ;; This function calls:
 24484 ;;		___flge
 24485 ;;		___flsub
 24486 ;;		_conv_raw_result
 24487 ;;		_fabsf
 24488 ;; This function is called by:
 24489 ;;		_main
 24490 ;; This function uses a reentrant model
 24491 ;;
 24492                           
 24493                           	psect	text99
 24494  018D9C                     __ptext99:
 24495                           	opt callstack 0
 24496  018D9C                     _calc_ror_data:
 24497                           	opt callstack 12
 24498                           
 24499                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24500                           
 24501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24502                           ;incstack = 0
 24503  018D9C  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24504  018DA2  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24505  018DA8  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24506  018DAE  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24507  018DB4  0E00               	movlw	0
 24508  018DB6  6EE6               	movwf	postinc1,c
 24509  018DB8  0E00               	movlw	0
 24510  018DBA  6EE6               	movwf	postinc1,c
 24511  018DBC  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24512  018DC0  0060  F007  FFE6   	movff	btemp,postinc1
 24513  018DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24514  018DCC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24515  018DD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24516  018DD8  ECD0  F0DC         	call	___flsub	;wreg free
 24517  018DDC  0060  F007  FFE6   	movff	btemp,postinc1
 24518  018DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24519  018DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24520  018DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24521  018DF4  EC38  F0D4         	call	_fabsf	;wreg free
 24522  018DF8  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24523  018DFE  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24524  018E04  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24525  018E0A  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24526                           
 24527                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24528  018E10  0E00               	movlw	0
 24529  018E12  6EE6               	movwf	postinc1,c
 24530  018E14  0E00               	movlw	0
 24531  018E16  6EE6               	movwf	postinc1,c
 24532  018E18  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24533  018E1C  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24534  018E22  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24535  018E28  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24536  018E2E  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24537                           
 24538                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24539  018E34  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24540  018E3A  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24541  018E40  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24542  018E46  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24543  018E4C  0E00               	movlw	0
 24544  018E4E  6EE6               	movwf	postinc1,c
 24545  018E50  0E04               	movlw	4
 24546  018E52  6EE6               	movwf	postinc1,c
 24547  018E54  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24548  018E58  0060  F007  FFE6   	movff	btemp,postinc1
 24549  018E5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24550  018E64  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24551  018E6A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24552  018E70  ECD0  F0DC         	call	___flsub	;wreg free
 24553  018E74  0060  F007  FFE6   	movff	btemp,postinc1
 24554  018E7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24555  018E80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24556  018E86  0060  F013  FFE6   	movff	btemp+3,postinc1
 24557  018E8C  EC38  F0D4         	call	_fabsf	;wreg free
 24558  018E90  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24559  018E96  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24560  018E9C  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24561  018EA2  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24562                           
 24563                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24564  018EA8  0EE7               	movlw	231
 24565  018EAA  6EE6               	movwf	postinc1,c
 24566  018EAC  0E1D               	movlw	29
 24567  018EAE  6EE6               	movwf	postinc1,c
 24568  018EB0  0EA7               	movlw	167
 24569  018EB2  6EE6               	movwf	postinc1,c
 24570  018EB4  0E3B               	movlw	59
 24571  018EB6  6EE6               	movwf	postinc1,c
 24572  018EB8  EE21  F36B         	lfsr	2,_C+108	;volatile
 24573  018EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 24574  018EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 24575  018EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 24576  018ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 24577  018ED4  EC0A  F0C9         	call	___flge	;wreg free
 24578  018ED8  B001               	btfsc	btemp& (0+255),0,c
 24579  018EDA  D010               	goto	l11088
 24580                           
 24581                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24582  018EDC  0EB0               	movlw	176
 24583  018EDE  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24584  018EE4  0E03               	movlw	3
 24585  018EE6  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24586  018EEC  0E67               	movlw	103
 24587  018EEE  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24588  018EF4  0E3C               	movlw	60
 24589  018EF6  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24590  018EFC                     l11088:
 24591                           
 24592                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24593  018EFC  0E00               	movlw	0
 24594  018EFE  6EE6               	movwf	postinc1,c
 24595  018F00  0E04               	movlw	4
 24596  018F02  6EE6               	movwf	postinc1,c
 24597  018F04  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24598  018F08  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24599  018F0E  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24600  018F14  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24601  018F1A  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24602                           
 24603                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24604  018F20  0012               	return		;funcret
 24605  018F22                     __end_of_calc_ror_data:
 24606                           	opt callstack 0
 24607                           
 24608 ;; *************** function _fabsf *****************
 24609 ;; Defined at:
 24610 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24611 ;; Parameters:    Size  Location     Type
 24612 ;;  x               4  [STACK] float 
 24613 ;; Auto vars:     Size  Location     Type
 24614 ;;  u               4  [STACK] struct .
 24615 ;; Return value:  Size  Location     Type
 24616 ;;                  4  [STACK] float 
 24617 ;; Registers used:
 24618 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24619 ;; Tracked objects:
 24620 ;;		On entry : 0/0
 24621 ;;		On exit  : 0/0
 24622 ;;		Unchanged: 0/0
 24623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24628 ;;Total ram usage:        0 bytes
 24629 ;; Hardware stack levels used:    1
 24630 ;; Hardware stack levels required when called:   15
 24631 ;; This function calls:
 24632 ;;		Nothing
 24633 ;; This function is called by:
 24634 ;;		_main
 24635 ;;		_calc_ror_data
 24636 ;;		_calc_bsoc
 24637 ;;		_esr_check
 24638 ;; This function uses a reentrant model
 24639 ;;
 24640                           
 24641                           	psect	text100
 24642  01A870                     __ptext100:
 24643                           	opt callstack 0
 24644  01A870                     _fabsf:
 24645                           	opt callstack 0
 24646                           
 24647                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24648  01A870  52E6               	movf	postinc1,f,c
 24649  01A872  52E6               	movf	postinc1,f,c
 24650  01A874  52E6               	movf	postinc1,f,c
 24651  01A876  52E6               	movf	postinc1,f,c
 24652                           
 24653                           ;incstack = 0
 24654 ;; hardware stack exceeded
 24655  01A878  0060  F180  F009   	movff	fabsf@F463,btemp+8
 24656  01A87E  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 24657  01A884  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 24658  01A88A  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 24659                           
 24660                           ;stkvar	_u @ sp[(-4)+0]
 24661  01A890  0EFC               	movlw	-4
 24662  01A892  0060  F027  FFE3   	movff	btemp+8,plusw1
 24663  01A898  0EFD               	movlw	-3
 24664  01A89A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24665  01A8A0  0EFE               	movlw	-2
 24666  01A8A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24667  01A8A8  0EFF               	movlw	-1
 24668  01A8AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24669                           
 24670                           ;stkvar	_x @ sp[(-4)+-4]
 24671  01A8B0  0EF8               	movlw	-8
 24672  01A8B2  006F FF8C  F009    	movff	plusw1,btemp+8
 24673  01A8B8  0EF9               	movlw	-7
 24674  01A8BA  006F FF8C  F00A    	movff	plusw1,btemp+9
 24675  01A8C0  0EFA               	movlw	-6
 24676  01A8C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24677  01A8C8  0EFB               	movlw	-5
 24678  01A8CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24679                           
 24680                           ;stkvar	_u @ sp[(-4)+0]
 24681  01A8D0  0EFC               	movlw	-4
 24682  01A8D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 24683  01A8D8  0EFD               	movlw	-3
 24684  01A8DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24685  01A8E0  0EFE               	movlw	-2
 24686  01A8E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24687  01A8E8  0EFF               	movlw	-1
 24688  01A8EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24689                           
 24690                           ;stkvar	_u @ sp[(-4)+0]
 24691  01A8F0  0EFF               	movlw	-1
 24692  01A8F2  9EE3               	bcf	plusw1,7,c
 24693                           
 24694                           ;stkvar	_u @ sp[(-4)+0]
 24695  01A8F4  0EFC               	movlw	-4
 24696  01A8F6  006F FF8C  F001    	movff	plusw1,btemp
 24697  01A8FC  0EFD               	movlw	-3
 24698  01A8FE  006F FF8C  F002    	movff	plusw1,btemp+1
 24699  01A904  0EFE               	movlw	-2
 24700  01A906  006F FF8C  F003    	movff	plusw1,btemp+2
 24701  01A90C  0EFF               	movlw	-1
 24702  01A90E  006F FF8C  F004    	movff	plusw1,btemp+3
 24703                           
 24704                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24705  01A914  0EF8               	movlw	248
 24706  01A916  26E1               	addwf	fsr1l,f,c
 24707  01A918  0EFF               	movlw	255
 24708  01A91A  22E2               	addwfc	fsr1h,f,c
 24709  01A91C  0012               	return		;funcret
 24710  01A91E                     __end_of_fabsf:
 24711                           	opt callstack 0
 24712                           
 24713 ;; *************** function _conv_raw_result *****************
 24714 ;; Defined at:
 24715 ;;		line 120 in file "daq.c"
 24716 ;; Parameters:    Size  Location     Type
 24717 ;;  chan            1  [STACK] const enum E16590
 24718 ;;  to_what         1  [STACK] const enum E16652
 24719 ;; Auto vars:     Size  Location     Type
 24720 ;;		None
 24721 ;; Return value:  Size  Location     Type
 24722 ;;                  4  [STACK] float 
 24723 ;; Registers used:
 24724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24725 ;; Tracked objects:
 24726 ;;		On entry : 0/39
 24727 ;;		On exit  : 0/0
 24728 ;;		Unchanged: 0/0
 24729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24734 ;;Total ram usage:        0 bytes
 24735 ;; Hardware stack levels used:    1
 24736 ;; Hardware stack levels required when called:   17
 24737 ;; This function calls:
 24738 ;;		___fladd
 24739 ;;		___fldiv
 24740 ;;		___flmul
 24741 ;;		___flsub
 24742 ;;		___xxtofl
 24743 ;;		_get_raw_result
 24744 ;;		_nanf
 24745 ;; This function is called by:
 24746 ;;		_main
 24747 ;;		_convert_adc_data
 24748 ;;		_calc_ror_data
 24749 ;;		_check_day_time
 24750 ;;		_init_bsoc
 24751 ;;		_esr_check
 24752 ;; This function uses a reentrant model
 24753 ;;
 24754                           
 24755                           	psect	text101
 24756  01532A                     __ptext101:
 24757                           	opt callstack 0
 24758  01532A                     _conv_raw_result:
 24759                           	opt callstack 0
 24760                           
 24761                           ;daq.c: 120: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 121: {;daq.c: 123:  switch (to_what) {
 24762                           
 24763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24764                           ;incstack = 0
 24765 ;; hardware stack exceeded
 24766  01532A  D276               	goto	l9896
 24767  01532C                     l9842:
 24768                           
 24769                           ;daq.c: 125:   if (!(0b0011110001110111 >> chan & 0x1))
 24770                           ;stkvar	_chan @ sp[(0)+-1]
 24771  01532C  0EFF               	movlw	-1
 24772  01532E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24773  015334  0E77               	movlw	119
 24774  015336  6E09               	movwf	(btemp+8)^0,c
 24775  015338  0E3C               	movlw	60
 24776  01533A  6E0A               	movwf	(btemp+9)^0,c
 24777  01533C  2A0C               	incf	(btemp+11)^0,f,c
 24778  01533E  D003               	goto	u9184
 24779  015340                     u9185:
 24780  015340  340A               	rlcf	(btemp+9)^0,w,c
 24781  015342  320A               	rrcf	(btemp+9)^0,f,c
 24782  015344  3209               	rrcf	(btemp+8)^0,f,c
 24783  015346                     u9184:
 24784  015346  2E0C               	decfsz	(btemp+11)^0,f,c
 24785  015348  D7FB               	goto	u9185
 24786  01534A  B009               	btfsc	(btemp+8)^0,0,c
 24787  01534C  D007               	goto	l9848
 24788                           
 24789                           ;daq.c: 126:    return nanf("");
 24790  01534E  0E49               	movlw	low (STR_64+120)
 24791  015350  6EE6               	movwf	postinc1,c
 24792  015352  0EFC               	movlw	high (STR_64+120)
 24793  015354  6EE6               	movwf	postinc1,c
 24794  015356  EC4F  F0DA         	call	_nanf	;wreg free
 24795  01535A  D26E               	goto	l1812
 24796  01535C                     l9848:
 24797                           
 24798                           ;daq.c: 128:   if (0b0000000000000011 >> chan & 0x1) {
 24799                           ;stkvar	_chan @ sp[(0)+-1]
 24800  01535C  0EFF               	movlw	-1
 24801  01535E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24802  015364  0E03               	movlw	3
 24803  015366  6E09               	movwf	(btemp+8)^0,c
 24804  015368  0E00               	movlw	0
 24805  01536A  6E0A               	movwf	(btemp+9)^0,c
 24806  01536C  2A0C               	incf	(btemp+11)^0,f,c
 24807  01536E  D003               	goto	u9204
 24808  015370                     u9205:
 24809  015370  340A               	rlcf	(btemp+9)^0,w,c
 24810  015372  320A               	rrcf	(btemp+9)^0,f,c
 24811  015374  3209               	rrcf	(btemp+8)^0,f,c
 24812  015376                     u9204:
 24813  015376  2E0C               	decfsz	(btemp+11)^0,f,c
 24814  015378  D7FB               	goto	u9205
 24815  01537A  A009               	btfss	(btemp+8)^0,0,c
 24816  01537C  D11F               	goto	l9862
 24817                           
 24818                           ;daq.c: 129:    if (0b0000000000000001 >> chan & 0x1) {
 24819                           ;stkvar	_chan @ sp[(0)+-1]
 24820  01537E  0EFF               	movlw	-1
 24821  015380  006F FF8C  F00C    	movff	plusw1,btemp+11
 24822  015386  0E01               	movlw	1
 24823  015388  6E09               	movwf	(btemp+8)^0,c
 24824  01538A  0E00               	movlw	0
 24825  01538C  6E0A               	movwf	(btemp+9)^0,c
 24826  01538E  2A0C               	incf	(btemp+11)^0,f,c
 24827  015390  D003               	goto	u9224
 24828  015392                     u9225:
 24829  015392  340A               	rlcf	(btemp+9)^0,w,c
 24830  015394  320A               	rrcf	(btemp+9)^0,f,c
 24831  015396  3209               	rrcf	(btemp+8)^0,f,c
 24832  015398                     u9224:
 24833  015398  2E0C               	decfsz	(btemp+11)^0,f,c
 24834  01539A  D7FB               	goto	u9225
 24835  01539C  A009               	btfss	(btemp+8)^0,0,c
 24836  01539E  D087               	goto	l9858
 24837                           
 24838                           ;daq.c: 130:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24839  0153A0  0060  F367  FFE6   	movff	_R+42,postinc1
 24840  0153A6  0060  F36B  FFE6   	movff	_R+43,postinc1
 24841  0153AC  0060  F36F  FFE6   	movff	_R+44,postinc1
 24842  0153B2  0060  F373  FFE6   	movff	_R+45,postinc1
 24843  0153B8  0E7B               	movlw	123
 24844  0153BA  6EE6               	movwf	postinc1,c
 24845  0153BC  0E14               	movlw	20
 24846  0153BE  6EE6               	movwf	postinc1,c
 24847  0153C0  0EAE               	movlw	174
 24848  0153C2  6EE6               	movwf	postinc1,c
 24849  0153C4  0E3D               	movlw	61
 24850  0153C6  6EE6               	movwf	postinc1,c
 24851  0153C8  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 24852  0153CE  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 24853  0153D4  0E00               	movlw	0
 24854  0153D6  BE0A               	btfsc	(btemp+9)^0,7,c
 24855  0153D8  0EFF               	movlw	255
 24856  0153DA  6E0B               	movwf	(btemp+10)^0,c
 24857  0153DC  6E0C               	movwf	(btemp+11)^0,c
 24858  0153DE  0060  F027  FFE6   	movff	btemp+8,postinc1
 24859  0153E4  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24860  0153EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24861  0153F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 24862  0153F6  0E01               	movlw	1
 24863  0153F8  6EE6               	movwf	postinc1,c
 24864  0153FA  EC65  F0C2         	call	___xxtofl	;wreg free
 24865  0153FE  0060  F007  FFE6   	movff	btemp,postinc1
 24866  015404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24867  01540A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24868  015410  0060  F013  FFE6   	movff	btemp+3,postinc1
 24869                           
 24870                           ;stkvar	_chan @ sp[(-12)+-1]
 24871  015416  0EF3               	movlw	-13
 24872  015418  50E3               	movf	plusw1,w,c
 24873  01541A  6EE6               	movwf	postinc1,c
 24874  01541C  ECDF  F0E1         	call	_get_raw_result	;wreg free
 24875  015420  0060  F004  F00B   	movff	btemp,btemp+10
 24876  015426  0060  F008  F00C   	movff	btemp+1,btemp+11
 24877  01542C  500B               	movf	(btemp+10)^0,w,c
 24878  01542E  6E05               	movwf	(btemp+4)^0,c
 24879  015430  500C               	movf	(btemp+11)^0,w,c
 24880  015432  6E06               	movwf	(btemp+5)^0,c
 24881  015434  6A07               	clrf	(btemp+6)^0,c
 24882  015436  6A08               	clrf	(btemp+7)^0,c
 24883  015438  0060  F017  FFE6   	movff	btemp+4,postinc1
 24884  01543E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24885  015444  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24886  01544A  0060  F023  FFE6   	movff	btemp+7,postinc1
 24887  015450  0E00               	movlw	0
 24888  015452  6EE6               	movwf	postinc1,c
 24889  015454  EC65  F0C2         	call	___xxtofl	;wreg free
 24890  015458  0060  F007  FFE6   	movff	btemp,postinc1
 24891  01545E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24892  015464  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24893  01546A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24894  015470  ECD0  F0DC         	call	___flsub	;wreg free
 24895  015474  0060  F007  FFE6   	movff	btemp,postinc1
 24896  01547A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24897  015480  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24898  015486  0060  F013  FFE6   	movff	btemp+3,postinc1
 24899  01548C  ECE5  F09E         	call	___flmul	;wreg free
 24900  015490  0060  F007  FFE6   	movff	btemp,postinc1
 24901  015496  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24902  01549C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24903  0154A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24904  0154A8  ECFA  F0A2         	call	___fladd	;wreg free
 24905  0154AC  D1C5               	goto	l1812
 24906  0154AE                     l9858:
 24907                           
 24908                           ;daq.c: 132:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24909  0154AE  0060  F377  FFE6   	movff	_R+46,postinc1
 24910  0154B4  0060  F37B  FFE6   	movff	_R+47,postinc1
 24911  0154BA  0060  F37F  FFE6   	movff	_R+48,postinc1
 24912  0154C0  0060  F383  FFE6   	movff	_R+49,postinc1
 24913  0154C6  0E29               	movlw	41
 24914  0154C8  6EE6               	movwf	postinc1,c
 24915  0154CA  0E5C               	movlw	92
 24916  0154CC  6EE6               	movwf	postinc1,c
 24917  0154CE  0E0F               	movlw	15
 24918  0154D0  6EE6               	movwf	postinc1,c
 24919  0154D2  0E3D               	movlw	61
 24920  0154D4  6EE6               	movwf	postinc1,c
 24921  0154D6  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 24922  0154DC  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 24923  0154E2  0E00               	movlw	0
 24924  0154E4  BE0A               	btfsc	(btemp+9)^0,7,c
 24925  0154E6  0EFF               	movlw	255
 24926  0154E8  6E0B               	movwf	(btemp+10)^0,c
 24927  0154EA  6E0C               	movwf	(btemp+11)^0,c
 24928  0154EC  0060  F027  FFE6   	movff	btemp+8,postinc1
 24929  0154F2  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24930  0154F8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24931  0154FE  0060  F033  FFE6   	movff	btemp+11,postinc1
 24932  015504  0E01               	movlw	1
 24933  015506  6EE6               	movwf	postinc1,c
 24934  015508  EC65  F0C2         	call	___xxtofl	;wreg free
 24935  01550C  0060  F007  FFE6   	movff	btemp,postinc1
 24936  015512  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24937  015518  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24938  01551E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24939                           
 24940                           ;stkvar	_chan @ sp[(-12)+-1]
 24941  015524  0EF3               	movlw	-13
 24942  015526  50E3               	movf	plusw1,w,c
 24943  015528  6EE6               	movwf	postinc1,c
 24944  01552A  ECDF  F0E1         	call	_get_raw_result	;wreg free
 24945  01552E  0060  F004  F00B   	movff	btemp,btemp+10
 24946  015534  0060  F008  F00C   	movff	btemp+1,btemp+11
 24947  01553A  500B               	movf	(btemp+10)^0,w,c
 24948  01553C  6E05               	movwf	(btemp+4)^0,c
 24949  01553E  500C               	movf	(btemp+11)^0,w,c
 24950  015540  6E06               	movwf	(btemp+5)^0,c
 24951  015542  6A07               	clrf	(btemp+6)^0,c
 24952  015544  6A08               	clrf	(btemp+7)^0,c
 24953  015546  0060  F017  FFE6   	movff	btemp+4,postinc1
 24954  01554C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24955  015552  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24956  015558  0060  F023  FFE6   	movff	btemp+7,postinc1
 24957  01555E  0E00               	movlw	0
 24958  015560  6EE6               	movwf	postinc1,c
 24959  015562  EC65  F0C2         	call	___xxtofl	;wreg free
 24960  015566  0060  F007  FFE6   	movff	btemp,postinc1
 24961  01556C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24962  015572  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24963  015578  0060  F013  FFE6   	movff	btemp+3,postinc1
 24964  01557E  ECD0  F0DC         	call	___flsub	;wreg free
 24965  015582  0060  F007  FFE6   	movff	btemp,postinc1
 24966  015588  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24967  01558E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24968  015594  0060  F013  FFE6   	movff	btemp+3,postinc1
 24969  01559A  ECE5  F09E         	call	___flmul	;wreg free
 24970  01559E  0060  F007  FFE6   	movff	btemp,postinc1
 24971  0155A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24972  0155AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24973  0155B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24974  0155B6  ECFA  F0A2         	call	___fladd	;wreg free
 24975  0155BA  D13E               	goto	l1812
 24976  0155BC                     l9862:
 24977                           
 24978                           ;daq.c: 135:    if (0b0000100000000000 >> chan & 0x1) {
 24979                           ;stkvar	_chan @ sp[(0)+-1]
 24980  0155BC  0EFF               	movlw	-1
 24981  0155BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24982  0155C4  0E00               	movlw	0
 24983  0155C6  6E09               	movwf	(btemp+8)^0,c
 24984  0155C8  0E08               	movlw	8
 24985  0155CA  6E0A               	movwf	(btemp+9)^0,c
 24986  0155CC  2A0C               	incf	(btemp+11)^0,f,c
 24987  0155CE  D003               	goto	u9244
 24988  0155D0                     u9245:
 24989  0155D0  340A               	rlcf	(btemp+9)^0,w,c
 24990  0155D2  320A               	rrcf	(btemp+9)^0,f,c
 24991  0155D4  3209               	rrcf	(btemp+8)^0,f,c
 24992  0155D6                     u9244:
 24993  0155D6  2E0C               	decfsz	(btemp+11)^0,f,c
 24994  0155D8  D7FB               	goto	u9245
 24995  0155DA  A009               	btfss	(btemp+8)^0,0,c
 24996  0155DC  D008               	goto	l9870
 24997                           
 24998                           ;daq.c: 136:     return 25.0;
 24999  0155DE  0E00               	movlw	0
 25000  0155E0  6E01               	movwf	btemp^0,c
 25001  0155E2  0E00               	movlw	0
 25002  0155E4  6E02               	movwf	(btemp+1)^0,c
 25003  0155E6  0EC8               	movlw	200
 25004  0155E8  6E03               	movwf	(btemp+2)^0,c
 25005  0155EA  0E41               	movlw	65
 25006  0155EC  D113               	goto	L30
 25007  0155EE                     l9870:
 25008                           
 25009                           ;daq.c: 138:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25010  0155EE  0E00               	movlw	0
 25011  0155F0  6EE6               	movwf	postinc1,c
 25012  0155F2  0E00               	movlw	0
 25013  0155F4  6EE6               	movwf	postinc1,c
 25014  0155F6  0E7A               	movlw	122
 25015  0155F8  6EE6               	movwf	postinc1,c
 25016  0155FA  0E44               	movlw	68
 25017  0155FC  6EE6               	movwf	postinc1,c
 25018  0155FE  0E61               	movlw	97
 25019  015600  6EE6               	movwf	postinc1,c
 25020  015602  0E03               	movlw	3
 25021  015604  6EE6               	movwf	postinc1,c
 25022  015606  0E84               	movlw	132
 25023  015608  6EE6               	movwf	postinc1,c
 25024  01560A  0E40               	movlw	64
 25025  01560C  6EE6               	movwf	postinc1,c
 25026                           
 25027                           ;stkvar	_chan @ sp[(-8)+-1]
 25028  01560E  0EF7               	movlw	-9
 25029  015610  50E3               	movf	plusw1,w,c
 25030  015612  6EE6               	movwf	postinc1,c
 25031  015614  ECDF  F0E1         	call	_get_raw_result	;wreg free
 25032  015618  0060  F004  F00B   	movff	btemp,btemp+10
 25033  01561E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25034  015624  500B               	movf	(btemp+10)^0,w,c
 25035  015626  6E05               	movwf	(btemp+4)^0,c
 25036  015628  500C               	movf	(btemp+11)^0,w,c
 25037  01562A  6E06               	movwf	(btemp+5)^0,c
 25038  01562C  6A07               	clrf	(btemp+6)^0,c
 25039  01562E  6A08               	clrf	(btemp+7)^0,c
 25040  015630  0060  F017  FFE6   	movff	btemp+4,postinc1
 25041  015636  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25042  01563C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25043  015642  0060  F023  FFE6   	movff	btemp+7,postinc1
 25044  015648  0E00               	movlw	0
 25045  01564A  6EE6               	movwf	postinc1,c
 25046  01564C  EC65  F0C2         	call	___xxtofl	;wreg free
 25047  015650  0060  F007  FFE6   	movff	btemp,postinc1
 25048  015656  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25049  01565C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25050  015662  0060  F013  FFE6   	movff	btemp+3,postinc1
 25051  015668  ECE5  F09E         	call	___flmul	;wreg free
 25052  01566C  0060  F007  FFE6   	movff	btemp,postinc1
 25053  015672  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25054  015678  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25055  01567E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25056  015684  ECD8  F0A6         	call	___fldiv	;wreg free
 25057  015688  D0D7               	goto	l1812
 25058  01568A                     l9874:
 25059                           
 25060                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 25061                           ;stkvar	_chan @ sp[(0)+-1]
 25062  01568A  0EFF               	movlw	-1
 25063  01568C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25064  015692  0E03               	movlw	3
 25065  015694  6E09               	movwf	(btemp+8)^0,c
 25066  015696  0E00               	movlw	0
 25067  015698  6E0A               	movwf	(btemp+9)^0,c
 25068  01569A  2A0C               	incf	(btemp+11)^0,f,c
 25069  01569C  D003               	goto	u9264
 25070  01569E                     u9265:
 25071  01569E  340A               	rlcf	(btemp+9)^0,w,c
 25072  0156A0  320A               	rrcf	(btemp+9)^0,f,c
 25073  0156A2  3209               	rrcf	(btemp+8)^0,f,c
 25074  0156A4                     u9264:
 25075  0156A4  2E0C               	decfsz	(btemp+11)^0,f,c
 25076  0156A6  D7FB               	goto	u9265
 25077  0156A8  B009               	btfsc	(btemp+8)^0,0,c
 25078  0156AA  D011               	goto	u9290
 25079                           
 25080                           ;stkvar	_chan @ sp[(0)+-1]
 25081  0156AC  0EFF               	movlw	-1
 25082  0156AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25083  0156B4  0E00               	movlw	0
 25084  0156B6  6E09               	movwf	(btemp+8)^0,c
 25085  0156B8  0E08               	movlw	8
 25086  0156BA  6E0A               	movwf	(btemp+9)^0,c
 25087  0156BC  2A0C               	incf	(btemp+11)^0,f,c
 25088  0156BE  D003               	goto	u9284
 25089  0156C0                     u9285:
 25090  0156C0  340A               	rlcf	(btemp+9)^0,w,c
 25091  0156C2  320A               	rrcf	(btemp+9)^0,f,c
 25092  0156C4  3209               	rrcf	(btemp+8)^0,f,c
 25093  0156C6                     u9284:
 25094  0156C6  2E0C               	decfsz	(btemp+11)^0,f,c
 25095  0156C8  D7FB               	goto	u9285
 25096  0156CA  A009               	btfss	(btemp+8)^0,0,c
 25097  0156CC  D04E               	goto	l9882
 25098  0156CE                     u9290:
 25099                           
 25100                           ;daq.c: 144:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 25101  0156CE  0E00               	movlw	0
 25102  0156D0  6EE6               	movwf	postinc1,c
 25103  0156D2  0E00               	movlw	0
 25104  0156D4  6EE6               	movwf	postinc1,c
 25105  0156D6  0E7A               	movlw	122
 25106  0156D8  6EE6               	movwf	postinc1,c
 25107  0156DA  0E44               	movlw	68
 25108  0156DC  6EE6               	movwf	postinc1,c
 25109  0156DE  0E00               	movlw	0
 25110  0156E0  6EE6               	movwf	postinc1,c
 25111  0156E2  0E00               	movlw	0
 25112  0156E4  6EE6               	movwf	postinc1,c
 25113  0156E6  0E20               	movlw	32
 25114  0156E8  6EE6               	movwf	postinc1,c
 25115  0156EA  0E3F               	movlw	63
 25116  0156EC  6EE6               	movwf	postinc1,c
 25117                           
 25118                           ;stkvar	_chan @ sp[(-8)+-1]
 25119  0156EE  0EF7               	movlw	-9
 25120  0156F0  50E3               	movf	plusw1,w,c
 25121  0156F2  6EE6               	movwf	postinc1,c
 25122  0156F4  ECDF  F0E1         	call	_get_raw_result	;wreg free
 25123  0156F8  0060  F004  F00B   	movff	btemp,btemp+10
 25124  0156FE  0060  F008  F00C   	movff	btemp+1,btemp+11
 25125  015704  500B               	movf	(btemp+10)^0,w,c
 25126  015706  6E05               	movwf	(btemp+4)^0,c
 25127  015708  500C               	movf	(btemp+11)^0,w,c
 25128  01570A  6E06               	movwf	(btemp+5)^0,c
 25129  01570C  6A07               	clrf	(btemp+6)^0,c
 25130  01570E  6A08               	clrf	(btemp+7)^0,c
 25131  015710  0060  F017  FFE6   	movff	btemp+4,postinc1
 25132  015716  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25133  01571C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25134  015722  0060  F023  FFE6   	movff	btemp+7,postinc1
 25135  015728  0E00               	movlw	0
 25136  01572A  6EE6               	movwf	postinc1,c
 25137  01572C  EC65  F0C2         	call	___xxtofl	;wreg free
 25138  015730  0060  F007  FFE6   	movff	btemp,postinc1
 25139  015736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25140  01573C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25141  015742  0060  F013  FFE6   	movff	btemp+3,postinc1
 25142  015748  ECE5  F09E         	call	___flmul	;wreg free
 25143  01574C  0060  F007  FFE6   	movff	btemp,postinc1
 25144  015752  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25145  015758  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25146  01575E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25147  015764  ECD8  F0A6         	call	___fldiv	;wreg free
 25148  015768  D067               	goto	l1812
 25149  01576A                     l9882:
 25150                           
 25151                           ;daq.c: 146:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25152  01576A  0E00               	movlw	0
 25153  01576C  6EE6               	movwf	postinc1,c
 25154  01576E  0E00               	movlw	0
 25155  015770  6EE6               	movwf	postinc1,c
 25156  015772  0E7A               	movlw	122
 25157  015774  6EE6               	movwf	postinc1,c
 25158  015776  0E44               	movlw	68
 25159  015778  6EE6               	movwf	postinc1,c
 25160  01577A  0E61               	movlw	97
 25161  01577C  6EE6               	movwf	postinc1,c
 25162  01577E  0E03               	movlw	3
 25163  015780  6EE6               	movwf	postinc1,c
 25164  015782  0E84               	movlw	132
 25165  015784  6EE6               	movwf	postinc1,c
 25166  015786  0E40               	movlw	64
 25167  015788  6EE6               	movwf	postinc1,c
 25168                           
 25169                           ;stkvar	_chan @ sp[(-8)+-1]
 25170  01578A  0EF7               	movlw	-9
 25171  01578C  50E3               	movf	plusw1,w,c
 25172  01578E  6EE6               	movwf	postinc1,c
 25173  015790  ECDF  F0E1         	call	_get_raw_result	;wreg free
 25174  015794  0060  F004  F00B   	movff	btemp,btemp+10
 25175  01579A  0060  F008  F00C   	movff	btemp+1,btemp+11
 25176  0157A0  500B               	movf	(btemp+10)^0,w,c
 25177  0157A2  6E05               	movwf	(btemp+4)^0,c
 25178  0157A4  500C               	movf	(btemp+11)^0,w,c
 25179  0157A6  6E06               	movwf	(btemp+5)^0,c
 25180  0157A8  6A07               	clrf	(btemp+6)^0,c
 25181  0157AA  6A08               	clrf	(btemp+7)^0,c
 25182  0157AC  0060  F017  FFE6   	movff	btemp+4,postinc1
 25183  0157B2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25184  0157B8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25185  0157BE  0060  F023  FFE6   	movff	btemp+7,postinc1
 25186  0157C4  0E00               	movlw	0
 25187  0157C6  6EE6               	movwf	postinc1,c
 25188  0157C8  EC65  F0C2         	call	___xxtofl	;wreg free
 25189  0157CC  0060  F007  FFE6   	movff	btemp,postinc1
 25190  0157D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25191  0157D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25192  0157DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25193  0157E4  ECE5  F09E         	call	___flmul	;wreg free
 25194  0157E8  0060  F007  FFE6   	movff	btemp,postinc1
 25195  0157EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25196  0157F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25197  0157FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 25198  015800  ECD8  F0A6         	call	___fldiv	;wreg free
 25199  015804  D019               	goto	l1812
 25200  015806                     l9888:
 25201                           
 25202                           ;daq.c: 149:   return 0.0;
 25203  015806  0E00               	movlw	0
 25204  015808  6E01               	movwf	btemp^0,c
 25205  01580A  0E00               	movlw	0
 25206  01580C  6E02               	movwf	(btemp+1)^0,c
 25207  01580E  0E00               	movlw	0
 25208  015810  6E03               	movwf	(btemp+2)^0,c
 25209  015812  0E00               	movlw	0
 25210  015814                     L30:
 25211  015814  6E04               	movwf	(btemp+3)^0,c
 25212  015816  D010               	goto	l1812
 25213  015818                     l9896:
 25214                           
 25215                           ;stkvar	_to_what @ sp[(0)+-2]
 25216  015818  0EFE               	movlw	-2
 25217  01581A  50E3               	movf	plusw1,w,c
 25218  01581C  6E0B               	movwf	(btemp+10)^0,c
 25219  01581E  6A0C               	clrf	(btemp+11)^0,c
 25220                           
 25221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25222                           ; Switch size 1, requested type "simple"
 25223                           ; Number of cases is 1, Range of values is 0 to 0
 25224                           ; switch strategies available:
 25225                           ; Name         Instructions Cycles
 25226                           ; simple_byte            4     3 (average)
 25227                           ;	Chosen strategy is simple_byte
 25228  015820  500C               	movf	(btemp+11)^0,w,c
 25229  015822  0A00               	xorlw	0	; case 0
 25230  015824  A4D8               	btfss	status,2,c
 25231  015826  D7EF               	goto	l9888
 25232                           
 25233                           ; Switch size 1, requested type "simple"
 25234                           ; Number of cases is 2, Range of values is 0 to 1
 25235                           ; switch strategies available:
 25236                           ; Name         Instructions Cycles
 25237                           ; simple_byte            7     4 (average)
 25238                           ;	Chosen strategy is simple_byte
 25239  015828  500B               	movf	(btemp+10)^0,w,c
 25240  01582A  0A00               	xorlw	0	; case 0
 25241  01582C  B4D8               	btfsc	status,2,c
 25242  01582E  D57E               	goto	l9842
 25243  015830  0A01               	xorlw	1	; case 1
 25244  015832  B4D8               	btfsc	status,2,c
 25245  015834  D72A               	goto	l9874
 25246  015836  D7E7               	goto	l9888
 25247  015838                     l1812:
 25248                           
 25249                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25250  015838  52E5               	movf	postdec1,f,c
 25251  01583A  52E5               	movf	postdec1,f,c
 25252  01583C  0012               	return		;funcret
 25253  01583E                     __end_of_conv_raw_result:
 25254                           	opt callstack 0
 25255                           
 25256 ;; *************** function _nanf *****************
 25257 ;; Defined at:
 25258 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 25259 ;; Parameters:    Size  Location     Type
 25260 ;;  s               2  [STACK] PTR const unsigned char 
 25261 ;;		 -> STR_101(1), STR_63(1), 
 25262 ;; Auto vars:     Size  Location     Type
 25263 ;;  u               4  [STACK] struct .
 25264 ;; Return value:  Size  Location     Type
 25265 ;;                  4  [STACK] float 
 25266 ;; Registers used:
 25267 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25268 ;; Tracked objects:
 25269 ;;		On entry : 0/39
 25270 ;;		On exit  : 0/0
 25271 ;;		Unchanged: 0/0
 25272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25277 ;;Total ram usage:        0 bytes
 25278 ;; Hardware stack levels used:    1
 25279 ;; Hardware stack levels required when called:   15
 25280 ;; This function calls:
 25281 ;;		Nothing
 25282 ;; This function is called by:
 25283 ;;		_conv_raw_result
 25284 ;; This function uses a reentrant model
 25285 ;;
 25286                           
 25287                           	psect	text102
 25288  01B49E                     __ptext102:
 25289                           	opt callstack 0
 25290  01B49E                     _nanf:
 25291                           	opt callstack 0
 25292                           
 25293                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25294  01B49E  52E6               	movf	postinc1,f,c
 25295  01B4A0  52E6               	movf	postinc1,f,c
 25296  01B4A2  52E6               	movf	postinc1,f,c
 25297  01B4A4  52E6               	movf	postinc1,f,c
 25298                           
 25299                           ;incstack = 0
 25300 ;; hardware stack exceeded
 25301  01B4A6  0EFF               	movlw	255
 25302  01B4A8  6E09               	movwf	(btemp+8)^0,c
 25303  01B4AA  0EFF               	movlw	255
 25304  01B4AC  6E0A               	movwf	(btemp+9)^0,c
 25305  01B4AE  0EFF               	movlw	255
 25306  01B4B0  6E0B               	movwf	(btemp+10)^0,c
 25307  01B4B2  0E7F               	movlw	127
 25308  01B4B4  6E0C               	movwf	(btemp+11)^0,c
 25309                           
 25310                           ;stkvar	_u @ sp[(-4)+0]
 25311  01B4B6  0EFC               	movlw	-4
 25312  01B4B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25313  01B4BE  0EFD               	movlw	-3
 25314  01B4C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25315  01B4C6  0EFE               	movlw	-2
 25316  01B4C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25317  01B4CE  0EFF               	movlw	-1
 25318  01B4D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25319                           
 25320                           ;stkvar	_u @ sp[(-4)+0]
 25321  01B4D6  0EFC               	movlw	-4
 25322  01B4D8  006F FF8C  F001    	movff	plusw1,btemp
 25323  01B4DE  0EFD               	movlw	-3
 25324  01B4E0  006F FF8C  F002    	movff	plusw1,btemp+1
 25325  01B4E6  0EFE               	movlw	-2
 25326  01B4E8  006F FF8C  F003    	movff	plusw1,btemp+2
 25327  01B4EE  0EFF               	movlw	-1
 25328  01B4F0  006F FF8C  F004    	movff	plusw1,btemp+3
 25329                           
 25330                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25331  01B4F6  0EFA               	movlw	250
 25332  01B4F8  26E1               	addwf	fsr1l,f,c
 25333  01B4FA  0EFF               	movlw	255
 25334  01B4FC  22E2               	addwfc	fsr1h,f,c
 25335  01B4FE  0012               	return		;funcret
 25336  01B500                     __end_of_nanf:
 25337                           	opt callstack 0
 25338                           
 25339 ;; *************** function _get_raw_result *****************
 25340 ;; Defined at:
 25341 ;;		line 112 in file "daq.c"
 25342 ;; Parameters:    Size  Location     Type
 25343 ;;  index           1  [STACK] const enum E16590
 25344 ;; Auto vars:     Size  Location     Type
 25345 ;;		None
 25346 ;; Return value:  Size  Location     Type
 25347 ;;                  2  [STACK] unsigned short 
 25348 ;; Registers used:
 25349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25350 ;; Tracked objects:
 25351 ;;		On entry : 0/1
 25352 ;;		On exit  : 0/0
 25353 ;;		Unchanged: 0/0
 25354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;Total ram usage:        0 bytes
 25360 ;; Hardware stack levels used:    1
 25361 ;; Hardware stack levels required when called:   15
 25362 ;; This function calls:
 25363 ;;		Nothing
 25364 ;; This function is called by:
 25365 ;;		_main
 25366 ;;		_conv_raw_result
 25367 ;; This function uses a reentrant model
 25368 ;;
 25369                           
 25370                           	psect	text103
 25371  01C3BE                     __ptext103:
 25372                           	opt callstack 0
 25373  01C3BE                     _get_raw_result:
 25374                           	opt callstack 0
 25375                           
 25376                           ;daq.c: 112: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 113: {;daq.c
      +                          : 114:  return R.raw_adc[index];
 25377                           ;stkvar	_index @ sp[(0)+-1]
 25378                           
 25379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25380                           ;incstack = 0
 25381 ;; hardware stack exceeded
 25382  01C3BE  0EFF               	movlw	-1
 25383  01C3C0  50E3               	movf	plusw1,w,c
 25384  01C3C2  0D02               	mullw	2
 25385  01C3C4  50F3               	movf	243,w,c
 25386  01C3C6  0FAF               	addlw	low _R
 25387  01C3C8  6ED9               	movwf	fsr2l,c
 25388  01C3CA  6ADA               	clrf	fsr2h,c
 25389  01C3CC  006F FF78  F001    	movff	postinc2,btemp
 25390  01C3D2  006F FF74  F002    	movff	postdec2,btemp+1
 25391                           
 25392                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25393  01C3D8  52E5               	movf	postdec1,f,c
 25394  01C3DA  0012               	return		;funcret
 25395  01C3DC                     __end_of_get_raw_result:
 25396                           	opt callstack 0
 25397                           
 25398 ;; *************** function ___xxtofl *****************
 25399 ;; Defined at:
 25400 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25401 ;; Parameters:    Size  Location     Type
 25402 ;;  sign            1  [STACK] unsigned char 
 25403 ;;  val             4  [STACK] long 
 25404 ;; Auto vars:     Size  Location     Type
 25405 ;;  arg             4  [STACK] unsigned long 
 25406 ;;  exp             1  [STACK] unsigned char 
 25407 ;; Return value:  Size  Location     Type
 25408 ;;                  4  [STACK] unsigned char 
 25409 ;; Registers used:
 25410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25411 ;; Tracked objects:
 25412 ;;		On entry : 0/0
 25413 ;;		On exit  : 0/0
 25414 ;;		Unchanged: 0/0
 25415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25420 ;;Total ram usage:        0 bytes
 25421 ;; Hardware stack levels used:    1
 25422 ;; Hardware stack levels required when called:   15
 25423 ;; This function calls:
 25424 ;;		Nothing
 25425 ;; This function is called by:
 25426 ;;		_conv_raw_result
 25427 ;;		_init_bsoc
 25428 ;; This function uses a reentrant model
 25429 ;;
 25430                           
 25431                           	psect	text104
 25432  0184CA                     __ptext104:
 25433                           	opt callstack 0
 25434  0184CA                     ___xxtofl:
 25435                           	opt callstack 0
 25436                           
 25437                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25438  0184CA  0E05               	movlw	5
 25439  0184CC  26E1               	addwf	fsr1l,f,c
 25440  0184CE  0E00               	movlw	0
 25441  0184D0  22E2               	addwfc	fsr1h,f,c
 25442                           
 25443                           ;stkvar	_sign @ sp[(-5)+-1]
 25444                           
 25445                           ;incstack = 0
 25446 ;; hardware stack exceeded
 25447  0184D2  0EFA               	movlw	-6
 25448  0184D4  50E3               	movf	plusw1,w,c
 25449  0184D6  B4D8               	btfsc	status,2,c
 25450  0184D8  D01D               	goto	l9790
 25451                           
 25452                           ;stkvar	_val @ sp[(-5)+-5]
 25453  0184DA  0EF9               	movlw	-7
 25454  0184DC  AEE3               	btfss	plusw1,7,c
 25455  0184DE  D01A               	goto	l9790
 25456                           
 25457                           ;stkvar	_val @ sp[(-5)+-5]
 25458  0184E0  0EF6               	movlw	-10
 25459  0184E2  006F FF8C  F009    	movff	plusw1,btemp+8
 25460  0184E8  0EF7               	movlw	-9
 25461  0184EA  006F FF8C  F00A    	movff	plusw1,btemp+9
 25462  0184F0  0EF8               	movlw	-8
 25463  0184F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25464  0184F8  0EF9               	movlw	-7
 25465  0184FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25466  018500  1E09               	comf	(btemp+8)^0,f,c
 25467  018502  1E0A               	comf	(btemp+9)^0,f,c
 25468  018504  1E0B               	comf	(btemp+10)^0,f,c
 25469  018506  1E0C               	comf	(btemp+11)^0,f,c
 25470  018508  2A09               	incf	(btemp+8)^0,f,c
 25471  01850A  0E00               	movlw	0
 25472  01850C  220A               	addwfc	(btemp+9)^0,f,c
 25473  01850E  220B               	addwfc	(btemp+10)^0,f,c
 25474  018510  220C               	addwfc	(btemp+11)^0,f,c
 25475  018512  D010               	goto	L31
 25476  018514                     l9790:
 25477                           
 25478                           ;stkvar	_val @ sp[(-5)+-5]
 25479  018514  0EF6               	movlw	-10
 25480  018516  006F FF8C  F009    	movff	plusw1,btemp+8
 25481  01851C  0EF7               	movlw	-9
 25482  01851E  006F FF8C  F00A    	movff	plusw1,btemp+9
 25483  018524  0EF8               	movlw	-8
 25484  018526  006F FF8C  F00B    	movff	plusw1,btemp+10
 25485  01852C  0EF9               	movlw	-7
 25486  01852E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25487  018534                     L31:
 25488                           
 25489                           ;stkvar	_arg @ sp[(-5)+0]
 25490  018534  0EFB               	movlw	-5
 25491  018536  0060  F027  FFE3   	movff	btemp+8,plusw1
 25492  01853C  0EFC               	movlw	-4
 25493  01853E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25494  018544  0EFD               	movlw	-3
 25495  018546  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25496  01854C  0EFE               	movlw	-2
 25497  01854E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25498                           
 25499                           ;stkvar	_val @ sp[(-5)+-5]
 25500  018554  0EF6               	movlw	-10
 25501  018556  50E3               	movf	plusw1,w,c
 25502  018558  E113               	bnz	l9798
 25503  01855A  0EF7               	movlw	-9
 25504  01855C  50E3               	movf	plusw1,w,c
 25505  01855E  E110               	bnz	l9798
 25506  018560  0EF8               	movlw	-8
 25507  018562  50E3               	movf	plusw1,w,c
 25508  018564  E10D               	bnz	l9798
 25509  018566  0EF9               	movlw	-7
 25510  018568  50E3               	movf	plusw1,w,c
 25511  01856A  A4D8               	btfss	status,2,c
 25512  01856C  D009               	goto	l9798
 25513  01856E  0E00               	movlw	0
 25514  018570  6E01               	movwf	btemp^0,c
 25515  018572  0E00               	movlw	0
 25516  018574  6E02               	movwf	(btemp+1)^0,c
 25517  018576  0E00               	movlw	0
 25518  018578  6E03               	movwf	(btemp+2)^0,c
 25519  01857A  0E00               	movlw	0
 25520  01857C  6E04               	movwf	(btemp+3)^0,c
 25521  01857E  D0A2               	goto	l3129
 25522  018580                     l9798:
 25523  018580  0E96               	movlw	150
 25524  018582  6E0C               	movwf	(btemp+11)^0,c
 25525                           
 25526                           ;stkvar	_exp @ sp[(-5)+4]
 25527  018584  0EFF               	movlw	-1
 25528  018586  0060  F033  FFE3   	movff	btemp+11,plusw1
 25529  01858C  D00B               	goto	l9802
 25530  01858E                     l9800:
 25531                           
 25532                           ;stkvar	_exp @ sp[(-5)+4]
 25533  01858E  0EFF               	movlw	-1
 25534  018590  2AE3               	incf	plusw1,f,c
 25535                           
 25536                           ;stkvar	_arg @ sp[(-5)+0]
 25537  018592  90D8               	bcf	status,0,c
 25538  018594  0EFE               	movlw	-2
 25539  018596  32E3               	rrcf	plusw1,f,c
 25540  018598  0EFD               	movlw	-3
 25541  01859A  32E3               	rrcf	plusw1,f,c
 25542  01859C  0EFC               	movlw	-4
 25543  01859E  32E3               	rrcf	plusw1,f,c
 25544  0185A0  0EFB               	movlw	-5
 25545  0185A2  32E3               	rrcf	plusw1,f,c
 25546  0185A4                     l9802:
 25547                           
 25548                           ;stkvar	_arg @ sp[(-5)+0]
 25549  0185A4  50E1               	movf	fsr1l,w,c
 25550  0185A6  0FFB               	addlw	-5
 25551  0185A8  6ED9               	movwf	fsr2l,c
 25552  0185AA  50E2               	movf	fsr1h,w,c
 25553  0185AC  6EDA               	movwf	fsr2h,c
 25554  0185AE  0EFF               	movlw	255
 25555  0185B0  22DA               	addwfc	fsr2h,f,c
 25556  0185B2  52DE               	movf	postinc2,f,c
 25557  0185B4  52DE               	movf	postinc2,f,c
 25558  0185B6  52DE               	movf	postinc2,f,c
 25559  0185B8  0EFE               	movlw	254
 25560  0185BA  14DD               	andwf	postdec2,w,c
 25561  0185BC  B4D8               	btfsc	status,2,c
 25562  0185BE  D018               	goto	l9810
 25563  0185C0  D7E6               	goto	l9800
 25564  0185C2                     l9804:
 25565                           
 25566                           ;stkvar	_exp @ sp[(-5)+4]
 25567  0185C2  0EFF               	movlw	-1
 25568  0185C4  2AE3               	incf	plusw1,f,c
 25569                           
 25570                           ;stkvar	_arg @ sp[(-5)+0]
 25571  0185C6  50E1               	movf	fsr1l,w,c
 25572  0185C8  0FFB               	addlw	-5
 25573  0185CA  6ED9               	movwf	fsr2l,c
 25574  0185CC  50E2               	movf	fsr1h,w,c
 25575  0185CE  6EDA               	movwf	fsr2h,c
 25576  0185D0  0EFF               	movlw	255
 25577  0185D2  22DA               	addwfc	fsr2h,f,c
 25578  0185D4  2ADE               	incf	postinc2,f,c
 25579  0185D6  0E00               	movlw	0
 25580  0185D8  22DE               	addwfc	postinc2,f,c
 25581  0185DA  22DE               	addwfc	postinc2,f,c
 25582  0185DC  22DE               	addwfc	postinc2,f,c
 25583                           
 25584                           ;stkvar	_arg @ sp[(-5)+0]
 25585  0185DE  90D8               	bcf	status,0,c
 25586  0185E0  0EFE               	movlw	-2
 25587  0185E2  32E3               	rrcf	plusw1,f,c
 25588  0185E4  0EFD               	movlw	-3
 25589  0185E6  32E3               	rrcf	plusw1,f,c
 25590  0185E8  0EFC               	movlw	-4
 25591  0185EA  32E3               	rrcf	plusw1,f,c
 25592  0185EC  0EFB               	movlw	-5
 25593  0185EE  32E3               	rrcf	plusw1,f,c
 25594  0185F0                     l9810:
 25595                           
 25596                           ;stkvar	_arg @ sp[(-5)+0]
 25597  0185F0  50E1               	movf	fsr1l,w,c
 25598  0185F2  0FFB               	addlw	-5
 25599  0185F4  6ED9               	movwf	fsr2l,c
 25600  0185F6  50E2               	movf	fsr1h,w,c
 25601  0185F8  6EDA               	movwf	fsr2h,c
 25602  0185FA  0EFF               	movlw	255
 25603  0185FC  22DA               	addwfc	fsr2h,f,c
 25604  0185FE  52DE               	movf	postinc2,f,c
 25605  018600  52DE               	movf	postinc2,f,c
 25606  018602  52DE               	movf	postinc2,f,c
 25607  018604  0EFF               	movlw	255
 25608  018606  14DD               	andwf	postdec2,w,c
 25609  018608  B4D8               	btfsc	status,2,c
 25610  01860A  D00C               	goto	l9814
 25611  01860C  D7DA               	goto	l9804
 25612  01860E                     l9812:
 25613                           
 25614                           ;stkvar	_exp @ sp[(-5)+4]
 25615  01860E  0EFF               	movlw	-1
 25616  018610  06E3               	decf	plusw1,f,c
 25617                           
 25618                           ;stkvar	_arg @ sp[(-5)+0]
 25619  018612  90D8               	bcf	status,0,c
 25620  018614  0EFB               	movlw	-5
 25621  018616  36E3               	rlcf	plusw1,f,c
 25622  018618  0EFC               	movlw	-4
 25623  01861A  36E3               	rlcf	plusw1,f,c
 25624  01861C  0EFD               	movlw	-3
 25625  01861E  36E3               	rlcf	plusw1,f,c
 25626  018620  0EFE               	movlw	-2
 25627  018622  36E3               	rlcf	plusw1,f,c
 25628  018624                     l9814:
 25629                           
 25630                           ;stkvar	_arg @ sp[(-5)+0]
 25631  018624  0EFD               	movlw	-3
 25632  018626  BEE3               	btfsc	plusw1,7,c
 25633  018628  D007               	goto	u9140
 25634                           
 25635                           ;stkvar	_exp @ sp[(-5)+4]
 25636  01862A  0EFF               	movlw	-1
 25637  01862C  006F FF8C  F001    	movff	plusw1,btemp
 25638  018632  0E02               	movlw	2
 25639  018634  6001               	cpfslt	btemp^0,c
 25640  018636  D7EB               	goto	l9812
 25641  018638                     u9140:
 25642                           
 25643                           ;stkvar	_exp @ sp[(-5)+4]
 25644  018638  0EFF               	movlw	-1
 25645  01863A  B0E3               	btfsc	plusw1,0,c
 25646  01863C  D002               	goto	l9822
 25647                           
 25648                           ;stkvar	_arg @ sp[(-5)+0]
 25649  01863E  0EFD               	movlw	-3
 25650  018640  9EE3               	bcf	plusw1,7,c
 25651  018642                     l9822:
 25652                           
 25653                           ;stkvar	_exp @ sp[(-5)+4]
 25654  018642  50E1               	movf	fsr1l,w,c
 25655  018644  0FFF               	addlw	-1
 25656  018646  6ED9               	movwf	fsr2l,c
 25657  018648  50E2               	movf	fsr1h,w,c
 25658  01864A  6EDA               	movwf	fsr2h,c
 25659  01864C  0EFF               	movlw	255
 25660  01864E  22DA               	addwfc	fsr2h,f,c
 25661  018650  90D8               	bcf	status,0,c
 25662  018652  32DF               	rrcf	indf2,f,c
 25663                           
 25664                           ;stkvar	_exp @ sp[(-5)+4]
 25665  018654  0EFF               	movlw	-1
 25666  018656  006F FF8C  F00C    	movff	plusw1,btemp+11
 25667  01865C  0060  F030  F005   	movff	btemp+11,btemp+4
 25668  018662  6A06               	clrf	(btemp+5)^0,c
 25669  018664  6A07               	clrf	(btemp+6)^0,c
 25670  018666  6A08               	clrf	(btemp+7)^0,c
 25671  018668  0060  F014  F008   	movff	btemp+4,btemp+7
 25672  01866E  6A07               	clrf	(btemp+6)^0,c
 25673  018670  6A06               	clrf	(btemp+5)^0,c
 25674  018672  6A05               	clrf	(btemp+4)^0,c
 25675                           
 25676                           ;stkvar	_arg @ sp[(-5)+0]
 25677  018674  50E1               	movf	fsr1l,w,c
 25678  018676  0FFB               	addlw	-5
 25679  018678  6ED9               	movwf	fsr2l,c
 25680  01867A  50E2               	movf	fsr1h,w,c
 25681  01867C  6EDA               	movwf	fsr2h,c
 25682  01867E  0EFF               	movlw	255
 25683  018680  22DA               	addwfc	fsr2h,f,c
 25684  018682  5005               	movf	(btemp+4)^0,w,c
 25685  018684  12DE               	iorwf	postinc2,f,c
 25686  018686  5006               	movf	(btemp+5)^0,w,c
 25687  018688  12DE               	iorwf	postinc2,f,c
 25688  01868A  5007               	movf	(btemp+6)^0,w,c
 25689  01868C  12DE               	iorwf	postinc2,f,c
 25690  01868E  5008               	movf	(btemp+7)^0,w,c
 25691  018690  12DE               	iorwf	postinc2,f,c
 25692                           
 25693                           ;stkvar	_sign @ sp[(-5)+-1]
 25694  018692  0EFA               	movlw	-6
 25695  018694  50E3               	movf	plusw1,w,c
 25696  018696  B4D8               	btfsc	status,2,c
 25697  018698  D005               	goto	l9832
 25698                           
 25699                           ;stkvar	_val @ sp[(-5)+-5]
 25700  01869A  0EF9               	movlw	-7
 25701  01869C  AEE3               	btfss	plusw1,7,c
 25702  01869E  D002               	goto	l9832
 25703                           
 25704                           ;stkvar	_arg @ sp[(-5)+0]
 25705  0186A0  0EFE               	movlw	-2
 25706  0186A2  8EE3               	bsf	plusw1,7,c
 25707  0186A4                     l9832:
 25708                           
 25709                           ;stkvar	_arg @ sp[(-5)+0]
 25710  0186A4  0EFB               	movlw	-5
 25711  0186A6  006F FF8C  F001    	movff	plusw1,btemp
 25712  0186AC  0EFC               	movlw	-4
 25713  0186AE  006F FF8C  F002    	movff	plusw1,btemp+1
 25714  0186B4  0EFD               	movlw	-3
 25715  0186B6  006F FF8C  F003    	movff	plusw1,btemp+2
 25716  0186BC  0EFE               	movlw	-2
 25717  0186BE  006F FF8C  F004    	movff	plusw1,btemp+3
 25718  0186C4                     l3129:
 25719                           
 25720                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 25721  0186C4  0EF6               	movlw	246
 25722  0186C6  26E1               	addwf	fsr1l,f,c
 25723  0186C8  0EFF               	movlw	255
 25724  0186CA  22E2               	addwfc	fsr1h,f,c
 25725  0186CC  0012               	return		;funcret
 25726  0186CE                     __end_of___xxtofl:
 25727                           	opt callstack 0
 25728                           
 25729 ;; *************** function ___fldiv *****************
 25730 ;; Defined at:
 25731 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 25732 ;; Parameters:    Size  Location     Type
 25733 ;;  b               4  [STACK] unsigned char 
 25734 ;;  a               4  [STACK] unsigned char 
 25735 ;; Auto vars:     Size  Location     Type
 25736 ;;  grs             4  [STACK] unsigned long 
 25737 ;;  rem             4  [STACK] unsigned long 
 25738 ;;  new_exp         2  [STACK] short 
 25739 ;;  aexp            1  [STACK] unsigned char 
 25740 ;;  bexp            1  [STACK] unsigned char 
 25741 ;;  sign            1  [STACK] unsigned char 
 25742 ;; Return value:  Size  Location     Type
 25743 ;;                  4  [STACK] unsigned char 
 25744 ;; Registers used:
 25745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 25746 ;; Tracked objects:
 25747 ;;		On entry : 0/0
 25748 ;;		On exit  : 0/0
 25749 ;;		Unchanged: 0/0
 25750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25755 ;;Total ram usage:        0 bytes
 25756 ;; Hardware stack levels used:    1
 25757 ;; Hardware stack levels required when called:   15
 25758 ;; This function calls:
 25759 ;;		Nothing
 25760 ;; This function is called by:
 25761 ;;		_conv_raw_result
 25762 ;;		_convert_dac_raw
 25763 ;;		_calc_bsoc
 25764 ;;		_init_bsoc
 25765 ;;		_esr_check
 25766 ;;		_efgtoa
 25767 ;; This function uses a reentrant model
 25768 ;;
 25769                           
 25770                           	psect	text105
 25771  014DB0                     __ptext105:
 25772                           	opt callstack 0
 25773  014DB0                     ___fldiv:
 25774                           	opt callstack 0
 25775                           
 25776                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25777  014DB0  0E0D               	movlw	13
 25778  014DB2  26E1               	addwf	fsr1l,f,c
 25779  014DB4  0E00               	movlw	0
 25780  014DB6  22E2               	addwfc	fsr1h,f,c
 25781                           
 25782                           ;stkvar	_b @ sp[(-13)+-4]
 25783                           
 25784                           ;incstack = 0
 25785 ;; hardware stack exceeded
 25786  014DB8  0EF2               	movlw	242
 25787  014DBA  24E1               	addwf	fsr1l,w,c
 25788  014DBC  6ED9               	movwf	fsr2l,c
 25789  014DBE  0EFF               	movlw	255
 25790  014DC0  20E2               	addwfc	fsr1h,w,c
 25791  014DC2  6EDA               	movwf	fsr2h,c
 25792  014DC4  50DF               	movf	indf2,w,c
 25793  014DC6  6E0C               	movwf	(btemp+11)^0,c
 25794  014DC8  0E80               	movlw	128
 25795  014DCA  160C               	andwf	(btemp+11)^0,f,c
 25796                           
 25797                           ;stkvar	_sign @ sp[(-13)+12]
 25798  014DCC  0EFF               	movlw	-1
 25799  014DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25800                           
 25801                           ;stkvar	_b @ sp[(-13)+-4]
 25802  014DD4  0EF2               	movlw	242
 25803  014DD6  24E1               	addwf	fsr1l,w,c
 25804  014DD8  6ED9               	movwf	fsr2l,c
 25805  014DDA  0EFF               	movlw	255
 25806  014DDC  20E2               	addwfc	fsr1h,w,c
 25807  014DDE  6EDA               	movwf	fsr2h,c
 25808  014DE0  50DF               	movf	indf2,w,c
 25809  014DE2  6E0C               	movwf	(btemp+11)^0,c
 25810  014DE4  90D8               	bcf	status,0,c
 25811  014DE6  340C               	rlcf	(btemp+11)^0,w,c
 25812  014DE8  6E0B               	movwf	(btemp+10)^0,c
 25813                           
 25814                           ;stkvar	_bexp @ sp[(-13)+11]
 25815  014DEA  0EFE               	movlw	-2
 25816  014DEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25817                           
 25818                           ;stkvar	_b @ sp[(-13)+-4]
 25819  014DF2  0EF1               	movlw	241
 25820  014DF4  24E1               	addwf	fsr1l,w,c
 25821  014DF6  6ED9               	movwf	fsr2l,c
 25822  014DF8  0EFF               	movlw	255
 25823  014DFA  20E2               	addwfc	fsr1h,w,c
 25824  014DFC  6EDA               	movwf	fsr2h,c
 25825  014DFE  AEDF               	btfss	indf2,7,c
 25826  014E00  D002               	goto	l8362
 25827                           
 25828                           ;stkvar	_bexp @ sp[(-13)+11]
 25829  014E02  0EFE               	movlw	-2
 25830  014E04  80E3               	bsf	plusw1,0,c
 25831  014E06                     l8362:
 25832                           
 25833                           ;stkvar	_bexp @ sp[(-13)+11]
 25834  014E06  0EFE               	movlw	-2
 25835  014E08  50E3               	movf	plusw1,w,c
 25836  014E0A  B4D8               	btfsc	status,2,c
 25837  014E0C  D027               	goto	l8372
 25838                           
 25839                           ;stkvar	_bexp @ sp[(-13)+11]
 25840  014E0E  0EFE               	movlw	-2
 25841  014E10  28E3               	incf	plusw1,w,c
 25842  014E12  A4D8               	btfss	status,2,c
 25843  014E14  D018               	goto	l8368
 25844  014E16  0E00               	movlw	0
 25845  014E18  6E09               	movwf	(btemp+8)^0,c
 25846  014E1A  0E00               	movlw	0
 25847  014E1C  6E0A               	movwf	(btemp+9)^0,c
 25848  014E1E  0E00               	movlw	0
 25849  014E20  6E0B               	movwf	(btemp+10)^0,c
 25850  014E22  0E00               	movlw	0
 25851  014E24  6E0C               	movwf	(btemp+11)^0,c
 25852                           
 25853                           ;stkvar	_b @ sp[(-13)+-4]
 25854  014E26  0EEF               	movlw	-17
 25855  014E28  0060  F027  FFE3   	movff	btemp+8,plusw1
 25856  014E2E  0EF0               	movlw	-16
 25857  014E30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25858  014E36  0EF1               	movlw	-15
 25859  014E38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25860  014E3E  0EF2               	movlw	-14
 25861  014E40  0060  F033  FFE3   	movff	btemp+11,plusw1
 25862  014E46                     l8368:
 25863                           
 25864                           ;stkvar	_b @ sp[(-13)+-4]
 25865  014E46  0EF1               	movlw	-15
 25866  014E48  8EE3               	bsf	plusw1,7,c
 25867                           
 25868                           ;stkvar	_b @ sp[(-13)+-4]
 25869  014E4A  0EF2               	movlw	242
 25870  014E4C  24E1               	addwf	fsr1l,w,c
 25871  014E4E  6ED9               	movwf	fsr2l,c
 25872  014E50  0EFF               	movlw	255
 25873  014E52  20E2               	addwfc	fsr1h,w,c
 25874  014E54  6EDA               	movwf	fsr2h,c
 25875  014E56  0E00               	movlw	0
 25876  014E58  6EDF               	movwf	indf2,c
 25877  014E5A  D018               	goto	l8374
 25878  014E5C                     l8372:
 25879  014E5C  0E00               	movlw	0
 25880  014E5E  6E09               	movwf	(btemp+8)^0,c
 25881  014E60  0E00               	movlw	0
 25882  014E62  6E0A               	movwf	(btemp+9)^0,c
 25883  014E64  0E00               	movlw	0
 25884  014E66  6E0B               	movwf	(btemp+10)^0,c
 25885  014E68  0E00               	movlw	0
 25886  014E6A  6E0C               	movwf	(btemp+11)^0,c
 25887                           
 25888                           ;stkvar	_b @ sp[(-13)+-4]
 25889  014E6C  0EEF               	movlw	-17
 25890  014E6E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25891  014E74  0EF0               	movlw	-16
 25892  014E76  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25893  014E7C  0EF1               	movlw	-15
 25894  014E7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25895  014E84  0EF2               	movlw	-14
 25896  014E86  0060  F033  FFE3   	movff	btemp+11,plusw1
 25897  014E8C                     l8374:
 25898                           
 25899                           ;stkvar	_a @ sp[(-13)+-8]
 25900  014E8C  0EEE               	movlw	238
 25901  014E8E  24E1               	addwf	fsr1l,w,c
 25902  014E90  6ED9               	movwf	fsr2l,c
 25903  014E92  0EFF               	movlw	255
 25904  014E94  20E2               	addwfc	fsr1h,w,c
 25905  014E96  6EDA               	movwf	fsr2h,c
 25906  014E98  50DF               	movf	indf2,w,c
 25907  014E9A  6E0C               	movwf	(btemp+11)^0,c
 25908  014E9C  0E80               	movlw	128
 25909  014E9E  160C               	andwf	(btemp+11)^0,f,c
 25910                           
 25911                           ;stkvar	_sign @ sp[(-13)+12]
 25912  014EA0  50E1               	movf	fsr1l,w,c
 25913  014EA2  0FFF               	addlw	-1
 25914  014EA4  6ED9               	movwf	fsr2l,c
 25915  014EA6  50E2               	movf	fsr1h,w,c
 25916  014EA8  6EDA               	movwf	fsr2h,c
 25917  014EAA  0EFF               	movlw	255
 25918  014EAC  22DA               	addwfc	fsr2h,f,c
 25919  014EAE  500C               	movf	(btemp+11)^0,w,c
 25920  014EB0  1ADF               	xorwf	indf2,f,c
 25921                           
 25922                           ;stkvar	_a @ sp[(-13)+-8]
 25923  014EB2  0EEE               	movlw	238
 25924  014EB4  24E1               	addwf	fsr1l,w,c
 25925  014EB6  6ED9               	movwf	fsr2l,c
 25926  014EB8  0EFF               	movlw	255
 25927  014EBA  20E2               	addwfc	fsr1h,w,c
 25928  014EBC  6EDA               	movwf	fsr2h,c
 25929  014EBE  50DF               	movf	indf2,w,c
 25930  014EC0  6E0C               	movwf	(btemp+11)^0,c
 25931  014EC2  90D8               	bcf	status,0,c
 25932  014EC4  340C               	rlcf	(btemp+11)^0,w,c
 25933  014EC6  6E0B               	movwf	(btemp+10)^0,c
 25934                           
 25935                           ;stkvar	_aexp @ sp[(-13)+10]
 25936  014EC8  0EFD               	movlw	-3
 25937  014ECA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25938                           
 25939                           ;stkvar	_a @ sp[(-13)+-8]
 25940  014ED0  0EED               	movlw	237
 25941  014ED2  24E1               	addwf	fsr1l,w,c
 25942  014ED4  6ED9               	movwf	fsr2l,c
 25943  014ED6  0EFF               	movlw	255
 25944  014ED8  20E2               	addwfc	fsr1h,w,c
 25945  014EDA  6EDA               	movwf	fsr2h,c
 25946  014EDC  AEDF               	btfss	indf2,7,c
 25947  014EDE  D002               	goto	l8382
 25948                           
 25949                           ;stkvar	_aexp @ sp[(-13)+10]
 25950  014EE0  0EFD               	movlw	-3
 25951  014EE2  80E3               	bsf	plusw1,0,c
 25952  014EE4                     l8382:
 25953                           
 25954                           ;stkvar	_aexp @ sp[(-13)+10]
 25955  014EE4  0EFD               	movlw	-3
 25956  014EE6  50E3               	movf	plusw1,w,c
 25957  014EE8  B4D8               	btfsc	status,2,c
 25958  014EEA  D027               	goto	l8392
 25959                           
 25960                           ;stkvar	_aexp @ sp[(-13)+10]
 25961  014EEC  0EFD               	movlw	-3
 25962  014EEE  28E3               	incf	plusw1,w,c
 25963  014EF0  A4D8               	btfss	status,2,c
 25964  014EF2  D018               	goto	l8388
 25965  014EF4  0E00               	movlw	0
 25966  014EF6  6E09               	movwf	(btemp+8)^0,c
 25967  014EF8  0E00               	movlw	0
 25968  014EFA  6E0A               	movwf	(btemp+9)^0,c
 25969  014EFC  0E00               	movlw	0
 25970  014EFE  6E0B               	movwf	(btemp+10)^0,c
 25971  014F00  0E00               	movlw	0
 25972  014F02  6E0C               	movwf	(btemp+11)^0,c
 25973                           
 25974                           ;stkvar	_a @ sp[(-13)+-8]
 25975  014F04  0EEB               	movlw	-21
 25976  014F06  0060  F027  FFE3   	movff	btemp+8,plusw1
 25977  014F0C  0EEC               	movlw	-20
 25978  014F0E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25979  014F14  0EED               	movlw	-19
 25980  014F16  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25981  014F1C  0EEE               	movlw	-18
 25982  014F1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25983  014F24                     l8388:
 25984                           
 25985                           ;stkvar	_a @ sp[(-13)+-8]
 25986  014F24  0EED               	movlw	-19
 25987  014F26  8EE3               	bsf	plusw1,7,c
 25988                           
 25989                           ;stkvar	_a @ sp[(-13)+-8]
 25990  014F28  0EEE               	movlw	238
 25991  014F2A  24E1               	addwf	fsr1l,w,c
 25992  014F2C  6ED9               	movwf	fsr2l,c
 25993  014F2E  0EFF               	movlw	255
 25994  014F30  20E2               	addwfc	fsr1h,w,c
 25995  014F32  6EDA               	movwf	fsr2h,c
 25996  014F34  0E00               	movlw	0
 25997  014F36  6EDF               	movwf	indf2,c
 25998  014F38  D018               	goto	l8394
 25999  014F3A                     l8392:
 26000  014F3A  0E00               	movlw	0
 26001  014F3C  6E09               	movwf	(btemp+8)^0,c
 26002  014F3E  0E00               	movlw	0
 26003  014F40  6E0A               	movwf	(btemp+9)^0,c
 26004  014F42  0E00               	movlw	0
 26005  014F44  6E0B               	movwf	(btemp+10)^0,c
 26006  014F46  0E00               	movlw	0
 26007  014F48  6E0C               	movwf	(btemp+11)^0,c
 26008                           
 26009                           ;stkvar	_a @ sp[(-13)+-8]
 26010  014F4A  0EEB               	movlw	-21
 26011  014F4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26012  014F52  0EEC               	movlw	-20
 26013  014F54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26014  014F5A  0EED               	movlw	-19
 26015  014F5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26016  014F62  0EEE               	movlw	-18
 26017  014F64  0060  F033  FFE3   	movff	btemp+11,plusw1
 26018  014F6A                     l8394:
 26019                           
 26020                           ;stkvar	_a @ sp[(-13)+-8]
 26021  014F6A  0EEB               	movlw	-21
 26022  014F6C  50E3               	movf	plusw1,w,c
 26023  014F6E  E139               	bnz	l8406
 26024  014F70  0EEC               	movlw	-20
 26025  014F72  50E3               	movf	plusw1,w,c
 26026  014F74  E136               	bnz	l8406
 26027  014F76  0EED               	movlw	-19
 26028  014F78  50E3               	movf	plusw1,w,c
 26029  014F7A  E133               	bnz	l8406
 26030  014F7C  0EEE               	movlw	-18
 26031  014F7E  50E3               	movf	plusw1,w,c
 26032  014F80  A4D8               	btfss	status,2,c
 26033  014F82  D02F               	goto	l8406
 26034                           
 26035                           ;stkvar	_b @ sp[(-13)+-4]
 26036  014F84  0EEF               	movlw	-17
 26037  014F86  6AE3               	clrf	plusw1,c
 26038  014F88  0EF0               	movlw	-16
 26039  014F8A  6AE3               	clrf	plusw1,c
 26040  014F8C  0EF1               	movlw	-15
 26041  014F8E  6AE3               	clrf	plusw1,c
 26042  014F90  0EF2               	movlw	-14
 26043  014F92  6AE3               	clrf	plusw1,c
 26044                           
 26045                           ;stkvar	_b @ sp[(-13)+-4]
 26046  014F94  0EF1               	movlw	241
 26047  014F96  24E1               	addwf	fsr1l,w,c
 26048  014F98  6ED9               	movwf	fsr2l,c
 26049  014F9A  0EFF               	movlw	255
 26050  014F9C  20E2               	addwfc	fsr1h,w,c
 26051  014F9E  6EDA               	movwf	fsr2h,c
 26052  014FA0  0E80               	movlw	128
 26053  014FA2  12DE               	iorwf	postinc2,f,c
 26054  014FA4  0E7F               	movlw	127
 26055  014FA6  12DD               	iorwf	postdec2,f,c
 26056  014FA8                     l8400:
 26057                           
 26058                           ;stkvar	_sign @ sp[(-13)+12]
 26059  014FA8  0EFF               	movlw	-1
 26060  014FAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26061                           
 26062                           ;stkvar	_b @ sp[(-13)+-4]
 26063  014FB0  0EF2               	movlw	242
 26064  014FB2  24E1               	addwf	fsr1l,w,c
 26065  014FB4  6ED9               	movwf	fsr2l,c
 26066  014FB6  0EFF               	movlw	255
 26067  014FB8  20E2               	addwfc	fsr1h,w,c
 26068  014FBA  6EDA               	movwf	fsr2h,c
 26069  014FBC  500C               	movf	(btemp+11)^0,w,c
 26070  014FBE  12DF               	iorwf	indf2,f,c
 26071                           
 26072                           ;stkvar	_b @ sp[(-13)+-4]
 26073  014FC0  0EEF               	movlw	-17
 26074  014FC2  006F FF8C  F001    	movff	plusw1,btemp
 26075  014FC8  0EF0               	movlw	-16
 26076  014FCA  006F FF8C  F002    	movff	plusw1,btemp+1
 26077  014FD0  0EF1               	movlw	-15
 26078  014FD2  006F FF8C  F003    	movff	plusw1,btemp+2
 26079  014FD8  0EF2               	movlw	-14
 26080  014FDA  006F FF8C  F004    	movff	plusw1,btemp+3
 26081  014FE0  D19F               	goto	l3053
 26082  014FE2                     l8406:
 26083                           
 26084                           ;stkvar	_bexp @ sp[(-13)+11]
 26085  014FE2  0EFE               	movlw	-2
 26086  014FE4  50E3               	movf	plusw1,w,c
 26087  014FE6  A4D8               	btfss	status,2,c
 26088  014FE8  D009               	goto	l8414
 26089  014FEA  0E00               	movlw	0
 26090  014FEC  6E01               	movwf	btemp^0,c
 26091  014FEE  0E00               	movlw	0
 26092  014FF0  6E02               	movwf	(btemp+1)^0,c
 26093  014FF2  0E00               	movlw	0
 26094  014FF4  6E03               	movwf	(btemp+2)^0,c
 26095  014FF6  0E00               	movlw	0
 26096  014FF8  6E04               	movwf	(btemp+3)^0,c
 26097  014FFA  D192               	goto	l3053
 26098  014FFC                     l8414:
 26099                           
 26100                           ;stkvar	_bexp @ sp[(-13)+11]
 26101  014FFC  0EFE               	movlw	-2
 26102  014FFE  50E3               	movf	plusw1,w,c
 26103  015000  6E0B               	movwf	(btemp+10)^0,c
 26104  015002  6A0C               	clrf	(btemp+11)^0,c
 26105                           
 26106                           ;stkvar	_aexp @ sp[(-13)+10]
 26107  015004  0EFD               	movlw	-3
 26108  015006  50E3               	movf	plusw1,w,c
 26109  015008  5E0B               	subwf	(btemp+10)^0,f,c
 26110  01500A  0E00               	movlw	0
 26111  01500C  5A0C               	subwfb	(btemp+11)^0,f,c
 26112  01500E  0E7F               	movlw	127
 26113  015010  260B               	addwf	(btemp+10)^0,f,c
 26114  015012  0E00               	movlw	0
 26115  015014  220C               	addwfc	(btemp+11)^0,f,c
 26116                           
 26117                           ;stkvar	_new_exp @ sp[(-13)+8]
 26118  015016  0EFB               	movlw	-5
 26119  015018  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26120  01501E  0EFC               	movlw	-4
 26121  015020  0060  F033  FFE3   	movff	btemp+11,plusw1
 26122                           
 26123                           ;stkvar	_b @ sp[(-13)+-4]
 26124  015026  0EEF               	movlw	-17
 26125  015028  006F FF8C  F009    	movff	plusw1,btemp+8
 26126  01502E  0EF0               	movlw	-16
 26127  015030  006F FF8C  F00A    	movff	plusw1,btemp+9
 26128  015036  0EF1               	movlw	-15
 26129  015038  006F FF8C  F00B    	movff	plusw1,btemp+10
 26130  01503E  0EF2               	movlw	-14
 26131  015040  006F FF8C  F00C    	movff	plusw1,btemp+11
 26132                           
 26133                           ;stkvar	_rem @ sp[(-13)+4]
 26134  015046  0EF7               	movlw	-9
 26135  015048  0060  F027  FFE3   	movff	btemp+8,plusw1
 26136  01504E  0EF8               	movlw	-8
 26137  015050  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26138  015056  0EF9               	movlw	-7
 26139  015058  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26140  01505E  0EFA               	movlw	-6
 26141  015060  0060  F033  FFE3   	movff	btemp+11,plusw1
 26142                           
 26143                           ;stkvar	_b @ sp[(-13)+-4]
 26144  015066  0EEF               	movlw	-17
 26145  015068  6AE3               	clrf	plusw1,c
 26146  01506A  0EF0               	movlw	-16
 26147  01506C  6AE3               	clrf	plusw1,c
 26148  01506E  0EF1               	movlw	-15
 26149  015070  6AE3               	clrf	plusw1,c
 26150  015072  0EF2               	movlw	-14
 26151  015074  6AE3               	clrf	plusw1,c
 26152                           
 26153                           ;stkvar	_grs @ sp[(-13)+0]
 26154  015076  0EF3               	movlw	-13
 26155  015078  6AE3               	clrf	plusw1,c
 26156  01507A  0EF4               	movlw	-12
 26157  01507C  6AE3               	clrf	plusw1,c
 26158  01507E  0EF5               	movlw	-11
 26159  015080  6AE3               	clrf	plusw1,c
 26160  015082  0EF6               	movlw	-10
 26161  015084  6AE3               	clrf	plusw1,c
 26162                           
 26163                           ;stkvar	_aexp @ sp[(-13)+10]
 26164  015086  0EFD               	movlw	-3
 26165  015088  6AE3               	clrf	plusw1,c
 26166  01508A  D050               	goto	l8442
 26167  01508C                     l8424:
 26168                           
 26169                           ;stkvar	_aexp @ sp[(-13)+10]
 26170  01508C  0EFD               	movlw	-3
 26171  01508E  50E3               	movf	plusw1,w,c
 26172  015090  B4D8               	btfsc	status,2,c
 26173  015092  D020               	goto	l8434
 26174                           
 26175                           ;stkvar	_rem @ sp[(-13)+4]
 26176  015094  90D8               	bcf	status,0,c
 26177  015096  0EF7               	movlw	-9
 26178  015098  36E3               	rlcf	plusw1,f,c
 26179  01509A  0EF8               	movlw	-8
 26180  01509C  36E3               	rlcf	plusw1,f,c
 26181  01509E  0EF9               	movlw	-7
 26182  0150A0  36E3               	rlcf	plusw1,f,c
 26183  0150A2  0EFA               	movlw	-6
 26184  0150A4  36E3               	rlcf	plusw1,f,c
 26185                           
 26186                           ;stkvar	_b @ sp[(-13)+-4]
 26187  0150A6  90D8               	bcf	status,0,c
 26188  0150A8  0EEF               	movlw	-17
 26189  0150AA  36E3               	rlcf	plusw1,f,c
 26190  0150AC  0EF0               	movlw	-16
 26191  0150AE  36E3               	rlcf	plusw1,f,c
 26192  0150B0  0EF1               	movlw	-15
 26193  0150B2  36E3               	rlcf	plusw1,f,c
 26194  0150B4  0EF2               	movlw	-14
 26195  0150B6  36E3               	rlcf	plusw1,f,c
 26196                           
 26197                           ;stkvar	_grs @ sp[(-13)+0]
 26198  0150B8  0EF6               	movlw	-10
 26199  0150BA  AEE3               	btfss	plusw1,7,c
 26200  0150BC  D002               	goto	l8432
 26201                           
 26202                           ;stkvar	_b @ sp[(-13)+-4]
 26203  0150BE  0EEF               	movlw	-17
 26204  0150C0  80E3               	bsf	plusw1,0,c
 26205  0150C2                     l8432:
 26206                           
 26207                           ;stkvar	_grs @ sp[(-13)+0]
 26208  0150C2  90D8               	bcf	status,0,c
 26209  0150C4  0EF3               	movlw	-13
 26210  0150C6  36E3               	rlcf	plusw1,f,c
 26211  0150C8  0EF4               	movlw	-12
 26212  0150CA  36E3               	rlcf	plusw1,f,c
 26213  0150CC  0EF5               	movlw	-11
 26214  0150CE  36E3               	rlcf	plusw1,f,c
 26215  0150D0  0EF6               	movlw	-10
 26216  0150D2  36E3               	rlcf	plusw1,f,c
 26217  0150D4                     l8434:
 26218                           
 26219                           ;stkvar	_a @ sp[(-13)+-8]
 26220                           ;stkvar	_rem @ sp[(-13)+4]
 26221  0150D4  50E1               	movf	fsr1l,w,c
 26222  0150D6  0FF7               	addlw	-9
 26223  0150D8  6ED9               	movwf	fsr2l,c
 26224  0150DA  50E2               	movf	fsr1h,w,c
 26225  0150DC  6EDA               	movwf	fsr2h,c
 26226  0150DE  0EFF               	movlw	255
 26227  0150E0  22DA               	addwfc	fsr2h,f,c
 26228  0150E2  0EEB               	movlw	-21
 26229  0150E4  50E3               	movf	plusw1,w,c
 26230  0150E6  5CDE               	subwf	postinc2,w,c
 26231  0150E8  0EEC               	movlw	-20
 26232  0150EA  50E3               	movf	plusw1,w,c
 26233  0150EC  58DE               	subwfb	postinc2,w,c
 26234  0150EE  0EED               	movlw	-19
 26235  0150F0  50E3               	movf	plusw1,w,c
 26236  0150F2  58DE               	subwfb	postinc2,w,c
 26237  0150F4  0EEE               	movlw	-18
 26238  0150F6  50E3               	movf	plusw1,w,c
 26239  0150F8  58DE               	subwfb	postinc2,w,c
 26240  0150FA  A0D8               	btfss	status,0,c
 26241  0150FC  D015               	goto	l8440
 26242                           
 26243                           ;stkvar	_grs @ sp[(-13)+0]
 26244  0150FE  0EF6               	movlw	-10
 26245  015100  8CE3               	bsf	plusw1,6,c
 26246                           
 26247                           ;stkvar	_a @ sp[(-13)+-8]
 26248                           ;stkvar	_rem @ sp[(-13)+4]
 26249  015102  50E1               	movf	fsr1l,w,c
 26250  015104  0FF7               	addlw	-9
 26251  015106  6ED9               	movwf	fsr2l,c
 26252  015108  50E2               	movf	fsr1h,w,c
 26253  01510A  6EDA               	movwf	fsr2h,c
 26254  01510C  0EFF               	movlw	255
 26255  01510E  22DA               	addwfc	fsr2h,f,c
 26256  015110  0EEB               	movlw	-21
 26257  015112  50E3               	movf	plusw1,w,c
 26258  015114  5EDE               	subwf	postinc2,f,c
 26259  015116  0EEC               	movlw	-20
 26260  015118  50E3               	movf	plusw1,w,c
 26261  01511A  5ADE               	subwfb	postinc2,f,c
 26262  01511C  0EED               	movlw	-19
 26263  01511E  50E3               	movf	plusw1,w,c
 26264  015120  5ADE               	subwfb	postinc2,f,c
 26265  015122  0EEE               	movlw	-18
 26266  015124  50E3               	movf	plusw1,w,c
 26267  015126  5ADE               	subwfb	postinc2,f,c
 26268  015128                     l8440:
 26269                           
 26270                           ;stkvar	_aexp @ sp[(-13)+10]
 26271  015128  0EFD               	movlw	-3
 26272  01512A  2AE3               	incf	plusw1,f,c
 26273  01512C                     l8442:
 26274                           
 26275                           ;stkvar	_aexp @ sp[(-13)+10]
 26276  01512C  0EFD               	movlw	-3
 26277  01512E  006F FF8C  F001    	movff	plusw1,btemp
 26278  015134  0E19               	movlw	25
 26279  015136  6401               	cpfsgt	btemp^0,c
 26280  015138  D7A9               	goto	l8424
 26281                           
 26282                           ;stkvar	_rem @ sp[(-13)+4]
 26283  01513A  0EF7               	movlw	-9
 26284  01513C  50E3               	movf	plusw1,w,c
 26285  01513E  E10A               	bnz	u6730
 26286  015140  0EF8               	movlw	-8
 26287  015142  50E3               	movf	plusw1,w,c
 26288  015144  E107               	bnz	u6730
 26289  015146  0EF9               	movlw	-7
 26290  015148  50E3               	movf	plusw1,w,c
 26291  01514A  E104               	bnz	u6730
 26292  01514C  0EFA               	movlw	-6
 26293  01514E  50E3               	movf	plusw1,w,c
 26294  015150  B4D8               	btfsc	status,2,c
 26295  015152  D024               	goto	l8458
 26296  015154                     u6730:
 26297                           
 26298                           ;stkvar	_grs @ sp[(-13)+0]
 26299  015154  0EF3               	movlw	-13
 26300  015156  80E3               	bsf	plusw1,0,c
 26301  015158  D021               	goto	l8458
 26302  01515A                     l8448:
 26303                           
 26304                           ;stkvar	_b @ sp[(-13)+-4]
 26305  01515A  90D8               	bcf	status,0,c
 26306  01515C  0EEF               	movlw	-17
 26307  01515E  36E3               	rlcf	plusw1,f,c
 26308  015160  0EF0               	movlw	-16
 26309  015162  36E3               	rlcf	plusw1,f,c
 26310  015164  0EF1               	movlw	-15
 26311  015166  36E3               	rlcf	plusw1,f,c
 26312  015168  0EF2               	movlw	-14
 26313  01516A  36E3               	rlcf	plusw1,f,c
 26314                           
 26315                           ;stkvar	_grs @ sp[(-13)+0]
 26316  01516C  0EF6               	movlw	-10
 26317  01516E  AEE3               	btfss	plusw1,7,c
 26318  015170  D002               	goto	l8454
 26319                           
 26320                           ;stkvar	_b @ sp[(-13)+-4]
 26321  015172  0EEF               	movlw	-17
 26322  015174  80E3               	bsf	plusw1,0,c
 26323  015176                     l8454:
 26324                           
 26325                           ;stkvar	_grs @ sp[(-13)+0]
 26326  015176  90D8               	bcf	status,0,c
 26327  015178  0EF3               	movlw	-13
 26328  01517A  36E3               	rlcf	plusw1,f,c
 26329  01517C  0EF4               	movlw	-12
 26330  01517E  36E3               	rlcf	plusw1,f,c
 26331  015180  0EF5               	movlw	-11
 26332  015182  36E3               	rlcf	plusw1,f,c
 26333  015184  0EF6               	movlw	-10
 26334  015186  36E3               	rlcf	plusw1,f,c
 26335                           
 26336                           ;stkvar	_new_exp @ sp[(-13)+8]
 26337  015188  50E1               	movf	fsr1l,w,c
 26338  01518A  0FFB               	addlw	-5
 26339  01518C  6ED9               	movwf	fsr2l,c
 26340  01518E  50E2               	movf	fsr1h,w,c
 26341  015190  6EDA               	movwf	fsr2h,c
 26342  015192  0EFF               	movlw	255
 26343  015194  22DA               	addwfc	fsr2h,f,c
 26344  015196  06DE               	decf	postinc2,f,c
 26345  015198  0E00               	movlw	0
 26346  01519A  5ADD               	subwfb	postdec2,f,c
 26347  01519C                     l8458:
 26348                           
 26349                           ;stkvar	_b @ sp[(-13)+-4]
 26350  01519C  0EF1               	movlw	-15
 26351  01519E  AEE3               	btfss	plusw1,7,c
 26352  0151A0  D7DC               	goto	l8448
 26353                           
 26354                           ;stkvar	_aexp @ sp[(-13)+10]
 26355  0151A2  0EFD               	movlw	-3
 26356  0151A4  6AE3               	clrf	plusw1,c
 26357                           
 26358                           ;stkvar	_grs @ sp[(-13)+0]
 26359  0151A6  0EF6               	movlw	-10
 26360  0151A8  AEE3               	btfss	plusw1,7,c
 26361  0151AA  D020               	goto	l8472
 26362                           
 26363                           ;stkvar	_grs @ sp[(-13)+0]
 26364  0151AC  50E1               	movf	fsr1l,w,c
 26365  0151AE  0FF3               	addlw	-13
 26366  0151B0  6ED9               	movwf	fsr2l,c
 26367  0151B2  50E2               	movf	fsr1h,w,c
 26368  0151B4  6EDA               	movwf	fsr2h,c
 26369  0151B6  0EFF               	movlw	255
 26370  0151B8  22DA               	addwfc	fsr2h,f,c
 26371  0151BA  0EFF               	movlw	255
 26372  0151BC  14DE               	andwf	postinc2,w,c
 26373  0151BE  6E09               	movwf	(btemp+8)^0,c
 26374  0151C0  0EFF               	movlw	255
 26375  0151C2  14DE               	andwf	postinc2,w,c
 26376  0151C4  6E0A               	movwf	(btemp+9)^0,c
 26377  0151C6  0EFF               	movlw	255
 26378  0151C8  14DE               	andwf	postinc2,w,c
 26379  0151CA  6E0B               	movwf	(btemp+10)^0,c
 26380  0151CC  0E7F               	movlw	127
 26381  0151CE  14DE               	andwf	postinc2,w,c
 26382  0151D0  6E0C               	movwf	(btemp+11)^0,c
 26383  0151D2  5009               	movf	(btemp+8)^0,w,c
 26384  0151D4  100A               	iorwf	(btemp+9)^0,w,c
 26385  0151D6  100B               	iorwf	(btemp+10)^0,w,c
 26386  0151D8  100C               	iorwf	(btemp+11)^0,w,c
 26387  0151DA  B4D8               	btfsc	status,2,c
 26388  0151DC  D004               	goto	l8468
 26389  0151DE                     u6770:
 26390                           
 26391                           ;stkvar	_aexp @ sp[(-13)+10]
 26392  0151DE  0EFD               	movlw	-3
 26393  0151E0  6AE3               	clrf	plusw1,c
 26394  0151E2  2AE3               	incf	plusw1,f,c
 26395  0151E4  D003               	goto	l8472
 26396  0151E6                     l8468:
 26397                           
 26398                           ;stkvar	_b @ sp[(-13)+-4]
 26399  0151E6  0EEF               	movlw	-17
 26400  0151E8  B0E3               	btfsc	plusw1,0,c
 26401  0151EA  D7F9               	goto	u6770
 26402  0151EC                     l8472:
 26403                           
 26404                           ;stkvar	_aexp @ sp[(-13)+10]
 26405  0151EC  0EFD               	movlw	-3
 26406  0151EE  50E3               	movf	plusw1,w,c
 26407  0151F0  B4D8               	btfsc	status,2,c
 26408  0151F2  D036               	goto	l8482
 26409                           
 26410                           ;stkvar	_b @ sp[(-13)+-4]
 26411  0151F4  50E1               	movf	fsr1l,w,c
 26412  0151F6  0FEF               	addlw	-17
 26413  0151F8  6ED9               	movwf	fsr2l,c
 26414  0151FA  50E2               	movf	fsr1h,w,c
 26415  0151FC  6EDA               	movwf	fsr2h,c
 26416  0151FE  0EFF               	movlw	255
 26417  015200  22DA               	addwfc	fsr2h,f,c
 26418  015202  2ADE               	incf	postinc2,f,c
 26419  015204  0E00               	movlw	0
 26420  015206  22DE               	addwfc	postinc2,f,c
 26421  015208  22DE               	addwfc	postinc2,f,c
 26422  01520A  22DE               	addwfc	postinc2,f,c
 26423                           
 26424                           ;stkvar	_b @ sp[(-13)+-4]
 26425  01520C  0EF2               	movlw	-14
 26426  01520E  A0E3               	btfss	plusw1,0,c
 26427  015210  D027               	goto	l8482
 26428  015212  0E01               	movlw	1
 26429  015214  6E0C               	movwf	(btemp+11)^0,c
 26430                           
 26431                           ;stkvar	_b @ sp[(-13)+-4]
 26432  015216  50E1               	movf	fsr1l,w,c
 26433  015218  0FEF               	addlw	-17
 26434  01521A  6ED9               	movwf	fsr2l,c
 26435  01521C  50E2               	movf	fsr1h,w,c
 26436  01521E  6EDA               	movwf	fsr2h,c
 26437  015220  0EFF               	movlw	255
 26438  015222  22DA               	addwfc	fsr2h,f,c
 26439  015224  280C               	incf	(btemp+11)^0,w,c
 26440  015226  52DE               	movf	postinc2,f,c
 26441  015228  D008               	goto	u6810
 26442  01522A                     u6815:
 26443  01522A  52DE               	movf	postinc2,f,c
 26444  01522C  90D8               	bcf	status,0,c
 26445  01522E  BEDC               	btfsc	preinc2,7,c
 26446  015230  80D8               	bsf	status,0,c
 26447  015232  32DD               	rrcf	postdec2,f,c
 26448  015234  32DD               	rrcf	postdec2,f,c
 26449  015236  32DD               	rrcf	postdec2,f,c
 26450  015238  32DE               	rrcf	postinc2,f,c
 26451  01523A                     u6810:
 26452  01523A  2EE8               	decfsz	wreg,f,c
 26453  01523C  D7F6               	goto	u6815
 26454                           
 26455                           ;stkvar	_new_exp @ sp[(-13)+8]
 26456  01523E  0EFB               	movlw	-5
 26457  015240  50E3               	movf	plusw1,w,c
 26458  015242  0F01               	addlw	1
 26459  015244  6E01               	movwf	btemp^0,c
 26460  015246  0EFB               	movlw	-5
 26461  015248  0060  F007  FFE3   	movff	btemp,plusw1
 26462  01524E  6A01               	clrf	btemp^0,c
 26463  015250  0EFC               	movlw	-4
 26464  015252  50E3               	movf	plusw1,w,c
 26465  015254  2001               	addwfc	btemp^0,w,c
 26466  015256  6E01               	movwf	btemp^0,c
 26467  015258  0EFC               	movlw	-4
 26468  01525A  0060  F007  FFE3   	movff	btemp,plusw1
 26469  015260                     l8482:
 26470                           
 26471                           ;stkvar	_new_exp @ sp[(-13)+8]
 26472  015260  0EFC               	movlw	-4
 26473  015262  BEE3               	btfsc	plusw1,7,c
 26474  015264  D01B               	goto	l8488
 26475  015266  0EFC               	movlw	-4
 26476  015268  50E3               	movf	plusw1,w,c
 26477  01526A  E104               	bnz	u6820
 26478  01526C  0EFB               	movlw	-5
 26479  01526E  28E3               	incf	plusw1,w,c
 26480  015270  A0D8               	btfss	status,0,c
 26481  015272  D014               	goto	l8488
 26482  015274                     u6820:
 26483  015274  0EFF               	movlw	255
 26484  015276  6E0B               	movwf	(btemp+10)^0,c
 26485  015278  0E00               	movlw	0
 26486  01527A  6E0C               	movwf	(btemp+11)^0,c
 26487                           
 26488                           ;stkvar	_new_exp @ sp[(-13)+8]
 26489  01527C  0EFB               	movlw	-5
 26490  01527E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26491  015284  0EFC               	movlw	-4
 26492  015286  0060  F033  FFE3   	movff	btemp+11,plusw1
 26493                           
 26494                           ;stkvar	_b @ sp[(-13)+-4]
 26495  01528C  0EEF               	movlw	-17
 26496  01528E  6AE3               	clrf	plusw1,c
 26497  015290  0EF0               	movlw	-16
 26498  015292  6AE3               	clrf	plusw1,c
 26499  015294  0EF1               	movlw	-15
 26500  015296  6AE3               	clrf	plusw1,c
 26501  015298  0EF2               	movlw	-14
 26502  01529A  6AE3               	clrf	plusw1,c
 26503  01529C                     l8488:
 26504                           
 26505                           ;stkvar	_new_exp @ sp[(-13)+8]
 26506  01529C  0EFC               	movlw	-4
 26507  01529E  BEE3               	btfsc	plusw1,7,c
 26508  0152A0  D007               	goto	u6830
 26509  0152A2  0EFC               	movlw	-4
 26510  0152A4  50E3               	movf	plusw1,w,c
 26511  0152A6  E112               	bnz	l8494
 26512  0152A8  0EFB               	movlw	-5
 26513  0152AA  04E3               	decf	plusw1,w,c
 26514  0152AC  B0D8               	btfsc	status,0,c
 26515  0152AE  D00E               	goto	l8494
 26516  0152B0                     u6830:
 26517                           
 26518                           ;stkvar	_new_exp @ sp[(-13)+8]
 26519  0152B0  0EFB               	movlw	-5
 26520  0152B2  6AE3               	clrf	plusw1,c
 26521  0152B4  0EFC               	movlw	-4
 26522  0152B6  6AE3               	clrf	plusw1,c
 26523                           
 26524                           ;stkvar	_b @ sp[(-13)+-4]
 26525  0152B8  0EEF               	movlw	-17
 26526  0152BA  6AE3               	clrf	plusw1,c
 26527  0152BC  0EF0               	movlw	-16
 26528  0152BE  6AE3               	clrf	plusw1,c
 26529  0152C0  0EF1               	movlw	-15
 26530  0152C2  6AE3               	clrf	plusw1,c
 26531  0152C4  0EF2               	movlw	-14
 26532  0152C6  6AE3               	clrf	plusw1,c
 26533                           
 26534                           ;stkvar	_sign @ sp[(-13)+12]
 26535  0152C8  0EFF               	movlw	-1
 26536  0152CA  6AE3               	clrf	plusw1,c
 26537  0152CC                     l8494:
 26538                           
 26539                           ;stkvar	_new_exp @ sp[(-13)+8]
 26540                           ;stkvar	_bexp @ sp[(-13)+11]
 26541  0152CC  0EFB               	movlw	-5
 26542  0152CE  006F FF8C  F001    	movff	plusw1,btemp
 26543  0152D4  0EFE               	movlw	-2
 26544  0152D6  0060  F007  FFE3   	movff	btemp,plusw1
 26545                           
 26546                           ;stkvar	_bexp @ sp[(-13)+11]
 26547  0152DC  0EFE               	movlw	-2
 26548  0152DE  A0E3               	btfss	plusw1,0,c
 26549  0152E0  D009               	goto	l8500
 26550                           
 26551                           ;stkvar	_b @ sp[(-13)+-4]
 26552  0152E2  0EF1               	movlw	241
 26553  0152E4  24E1               	addwf	fsr1l,w,c
 26554  0152E6  6ED9               	movwf	fsr2l,c
 26555  0152E8  0EFF               	movlw	255
 26556  0152EA  20E2               	addwfc	fsr1h,w,c
 26557  0152EC  6EDA               	movwf	fsr2h,c
 26558  0152EE  0E00               	movlw	0
 26559  0152F0  8EDB               	bsf	plusw2,7,c
 26560  0152F2  D008               	goto	l8502
 26561  0152F4                     l8500:
 26562                           
 26563                           ;stkvar	_b @ sp[(-13)+-4]
 26564  0152F4  0EF1               	movlw	241
 26565  0152F6  24E1               	addwf	fsr1l,w,c
 26566  0152F8  6ED9               	movwf	fsr2l,c
 26567  0152FA  0EFF               	movlw	255
 26568  0152FC  20E2               	addwfc	fsr1h,w,c
 26569  0152FE  6EDA               	movwf	fsr2h,c
 26570  015300  0E7F               	movlw	127
 26571  015302  16DF               	andwf	indf2,f,c
 26572  015304                     l8502:
 26573                           
 26574                           ;stkvar	_b @ sp[(-13)+-4]
 26575  015304  0EF2               	movlw	242
 26576  015306  24E1               	addwf	fsr1l,w,c
 26577  015308  6ED9               	movwf	fsr2l,c
 26578  01530A  0EFF               	movlw	255
 26579  01530C  20E2               	addwfc	fsr1h,w,c
 26580  01530E  6EDA               	movwf	fsr2h,c
 26581                           
 26582                           ;stkvar	_bexp @ sp[(-13)+11]
 26583  015310  0EFE               	movlw	-2
 26584  015312  006F FF8C  F00C    	movff	plusw1,btemp+11
 26585  015318  90D8               	bcf	status,0,c
 26586  01531A  300C               	rrcf	(btemp+11)^0,w,c
 26587  01531C  6EDF               	movwf	indf2,c
 26588  01531E  D644               	goto	l8400
 26589  015320                     l3053:
 26590                           
 26591                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26592  015320  0EEB               	movlw	235
 26593  015322  26E1               	addwf	fsr1l,f,c
 26594  015324  0EFF               	movlw	255
 26595  015326  22E2               	addwfc	fsr1h,f,c
 26596  015328  0012               	return		;funcret
 26597  01532A                     __end_of___fldiv:
 26598                           	opt callstack 0
 26599                           
 26600 ;; *************** function ___flge *****************
 26601 ;; Defined at:
 26602 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26603 ;; Parameters:    Size  Location     Type
 26604 ;;  ff1             4  [STACK] unsigned char 
 26605 ;;  ff2             4  [STACK] unsigned char 
 26606 ;; Auto vars:     Size  Location     Type
 26607 ;;		None
 26608 ;; Return value:  Size  Location     Type
 26609 ;;		None               void
 26610 ;; Registers used:
 26611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26612 ;; Tracked objects:
 26613 ;;		On entry : 0/0
 26614 ;;		On exit  : 0/0
 26615 ;;		Unchanged: 0/0
 26616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26621 ;;Total ram usage:        0 bytes
 26622 ;; Hardware stack levels used:    1
 26623 ;; Hardware stack levels required when called:   15
 26624 ;; This function calls:
 26625 ;;		Nothing
 26626 ;; This function is called by:
 26627 ;;		_main
 26628 ;;		_convert_dac_raw
 26629 ;;		_calc_ror_data
 26630 ;;		_check_day_time
 26631 ;;		_calc_bsoc
 26632 ;;		_efgtoa
 26633 ;; This function uses a reentrant model
 26634 ;;
 26635                           
 26636                           	psect	text106
 26637  019214                     __ptext106:
 26638                           	opt callstack 0
 26639  019214                     ___flge:
 26640                           	opt callstack 0
 26641                           
 26642                           ;stkvar	_ff1 @ sp[(0)+-4]
 26643                           
 26644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26645                           ;incstack = 0
 26646 ;; hardware stack exceeded
 26647  019214  50E1               	movf	fsr1l,w,c
 26648  019216  0FFC               	addlw	-4
 26649  019218  6ED9               	movwf	fsr2l,c
 26650  01921A  50E2               	movf	fsr1h,w,c
 26651  01921C  6EDA               	movwf	fsr2h,c
 26652  01921E  0EFF               	movlw	255
 26653  019220  22DA               	addwfc	fsr2h,f,c
 26654  019222  0E00               	movlw	0
 26655  019224  14DE               	andwf	postinc2,w,c
 26656  019226  6E09               	movwf	(btemp+8)^0,c
 26657  019228  0E00               	movlw	0
 26658  01922A  14DE               	andwf	postinc2,w,c
 26659  01922C  6E0A               	movwf	(btemp+9)^0,c
 26660  01922E  0E80               	movlw	128
 26661  019230  14DE               	andwf	postinc2,w,c
 26662  019232  6E0B               	movwf	(btemp+10)^0,c
 26663  019234  0E7F               	movlw	127
 26664  019236  14DE               	andwf	postinc2,w,c
 26665  019238  6E0C               	movwf	(btemp+11)^0,c
 26666  01923A  5009               	movf	(btemp+8)^0,w,c
 26667  01923C  100A               	iorwf	(btemp+9)^0,w,c
 26668  01923E  100B               	iorwf	(btemp+10)^0,w,c
 26669  019240  100C               	iorwf	(btemp+11)^0,w,c
 26670  019242  A4D8               	btfss	status,2,c
 26671  019244  D008               	goto	l8776
 26672                           
 26673                           ;stkvar	_ff1 @ sp[(0)+-4]
 26674  019246  0EFC               	movlw	-4
 26675  019248  6AE3               	clrf	plusw1,c
 26676  01924A  0EFD               	movlw	-3
 26677  01924C  6AE3               	clrf	plusw1,c
 26678  01924E  0EFE               	movlw	-2
 26679  019250  6AE3               	clrf	plusw1,c
 26680  019252  0EFF               	movlw	-1
 26681  019254  6AE3               	clrf	plusw1,c
 26682  019256                     l8776:
 26683                           
 26684                           ;stkvar	_ff2 @ sp[(0)+-8]
 26685  019256  50E1               	movf	fsr1l,w,c
 26686  019258  0FF8               	addlw	-8
 26687  01925A  6ED9               	movwf	fsr2l,c
 26688  01925C  50E2               	movf	fsr1h,w,c
 26689  01925E  6EDA               	movwf	fsr2h,c
 26690  019260  0EFF               	movlw	255
 26691  019262  22DA               	addwfc	fsr2h,f,c
 26692  019264  0E00               	movlw	0
 26693  019266  14DE               	andwf	postinc2,w,c
 26694  019268  6E09               	movwf	(btemp+8)^0,c
 26695  01926A  0E00               	movlw	0
 26696  01926C  14DE               	andwf	postinc2,w,c
 26697  01926E  6E0A               	movwf	(btemp+9)^0,c
 26698  019270  0E80               	movlw	128
 26699  019272  14DE               	andwf	postinc2,w,c
 26700  019274  6E0B               	movwf	(btemp+10)^0,c
 26701  019276  0E7F               	movlw	127
 26702  019278  14DE               	andwf	postinc2,w,c
 26703  01927A  6E0C               	movwf	(btemp+11)^0,c
 26704  01927C  5009               	movf	(btemp+8)^0,w,c
 26705  01927E  100A               	iorwf	(btemp+9)^0,w,c
 26706  019280  100B               	iorwf	(btemp+10)^0,w,c
 26707  019282  100C               	iorwf	(btemp+11)^0,w,c
 26708  019284  A4D8               	btfss	status,2,c
 26709  019286  D008               	goto	l2734
 26710                           
 26711                           ;stkvar	_ff2 @ sp[(0)+-8]
 26712  019288  0EF8               	movlw	-8
 26713  01928A  6AE3               	clrf	plusw1,c
 26714  01928C  0EF9               	movlw	-7
 26715  01928E  6AE3               	clrf	plusw1,c
 26716  019290  0EFA               	movlw	-6
 26717  019292  6AE3               	clrf	plusw1,c
 26718  019294  0EFB               	movlw	-5
 26719  019296  6AE3               	clrf	plusw1,c
 26720  019298                     l2734:
 26721                           
 26722                           ;stkvar	_ff1 @ sp[(0)+-4]
 26723  019298  0EFF               	movlw	-1
 26724  01929A  AEE3               	btfss	plusw1,7,c
 26725  01929C  D024               	goto	l8782
 26726                           
 26727                           ;stkvar	_ff1 @ sp[(0)+-4]
 26728  01929E  0E00               	movlw	0
 26729  0192A0  6E09               	movwf	(btemp+8)^0,c
 26730  0192A2  0E00               	movlw	0
 26731  0192A4  6E0A               	movwf	(btemp+9)^0,c
 26732  0192A6  0E00               	movlw	0
 26733  0192A8  6E0B               	movwf	(btemp+10)^0,c
 26734  0192AA  0E80               	movlw	128
 26735  0192AC  6E0C               	movwf	(btemp+11)^0,c
 26736  0192AE  0EFC               	movlw	-4
 26737  0192B0  50E3               	movf	plusw1,w,c
 26738  0192B2  5E09               	subwf	(btemp+8)^0,f,c
 26739  0192B4  0EFD               	movlw	-3
 26740  0192B6  50E3               	movf	plusw1,w,c
 26741  0192B8  5A0A               	subwfb	(btemp+9)^0,f,c
 26742  0192BA  0EFE               	movlw	-2
 26743  0192BC  50E3               	movf	plusw1,w,c
 26744  0192BE  5A0B               	subwfb	(btemp+10)^0,f,c
 26745  0192C0  0EFF               	movlw	-1
 26746  0192C2  50E3               	movf	plusw1,w,c
 26747  0192C4  5A0C               	subwfb	(btemp+11)^0,f,c
 26748                           
 26749                           ;stkvar	_ff1 @ sp[(0)+-4]
 26750  0192C6  0EFC               	movlw	-4
 26751  0192C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 26752  0192CE  0EFD               	movlw	-3
 26753  0192D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26754  0192D6  0EFE               	movlw	-2
 26755  0192D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26756  0192DE  0EFF               	movlw	-1
 26757  0192E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26758  0192E6                     l8782:
 26759                           
 26760                           ;stkvar	_ff2 @ sp[(0)+-8]
 26761  0192E6  0EFB               	movlw	-5
 26762  0192E8  AEE3               	btfss	plusw1,7,c
 26763  0192EA  D024               	goto	l8786
 26764                           
 26765                           ;stkvar	_ff2 @ sp[(0)+-8]
 26766  0192EC  0E00               	movlw	0
 26767  0192EE  6E09               	movwf	(btemp+8)^0,c
 26768  0192F0  0E00               	movlw	0
 26769  0192F2  6E0A               	movwf	(btemp+9)^0,c
 26770  0192F4  0E00               	movlw	0
 26771  0192F6  6E0B               	movwf	(btemp+10)^0,c
 26772  0192F8  0E80               	movlw	128
 26773  0192FA  6E0C               	movwf	(btemp+11)^0,c
 26774  0192FC  0EF8               	movlw	-8
 26775  0192FE  50E3               	movf	plusw1,w,c
 26776  019300  5E09               	subwf	(btemp+8)^0,f,c
 26777  019302  0EF9               	movlw	-7
 26778  019304  50E3               	movf	plusw1,w,c
 26779  019306  5A0A               	subwfb	(btemp+9)^0,f,c
 26780  019308  0EFA               	movlw	-6
 26781  01930A  50E3               	movf	plusw1,w,c
 26782  01930C  5A0B               	subwfb	(btemp+10)^0,f,c
 26783  01930E  0EFB               	movlw	-5
 26784  019310  50E3               	movf	plusw1,w,c
 26785  019312  5A0C               	subwfb	(btemp+11)^0,f,c
 26786                           
 26787                           ;stkvar	_ff2 @ sp[(0)+-8]
 26788  019314  0EF8               	movlw	-8
 26789  019316  0060  F027  FFE3   	movff	btemp+8,plusw1
 26790  01931C  0EF9               	movlw	-7
 26791  01931E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26792  019324  0EFA               	movlw	-6
 26793  019326  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26794  01932C  0EFB               	movlw	-5
 26795  01932E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26796  019334                     l8786:
 26797                           
 26798                           ;stkvar	_ff1 @ sp[(0)+-4]
 26799  019334  0EFF               	movlw	-1
 26800  019336  7EE3               	btg	plusw1,7,c
 26801                           
 26802                           ;stkvar	_ff2 @ sp[(0)+-8]
 26803  019338  0EFB               	movlw	-5
 26804  01933A  7EE3               	btg	plusw1,7,c
 26805                           
 26806                           ;stkvar	_ff2 @ sp[(0)+-8]
 26807                           ;stkvar	_ff1 @ sp[(0)+-4]
 26808  01933C  50E1               	movf	fsr1l,w,c
 26809  01933E  0FFC               	addlw	-4
 26810  019340  6ED9               	movwf	fsr2l,c
 26811  019342  50E2               	movf	fsr1h,w,c
 26812  019344  6EDA               	movwf	fsr2h,c
 26813  019346  0EFF               	movlw	255
 26814  019348  22DA               	addwfc	fsr2h,f,c
 26815  01934A  0EF8               	movlw	-8
 26816  01934C  50E3               	movf	plusw1,w,c
 26817  01934E  5CDE               	subwf	postinc2,w,c
 26818  019350  0EF9               	movlw	-7
 26819  019352  50E3               	movf	plusw1,w,c
 26820  019354  58DE               	subwfb	postinc2,w,c
 26821  019356  0EFA               	movlw	-6
 26822  019358  50E3               	movf	plusw1,w,c
 26823  01935A  58DE               	subwfb	postinc2,w,c
 26824  01935C  0EFB               	movlw	-5
 26825  01935E  50E3               	movf	plusw1,w,c
 26826  019360  58DE               	subwfb	postinc2,w,c
 26827  019362  B0D8               	btfsc	status,0,c
 26828  019364  D002               	goto	l8794
 26829  019366  9001               	bcf	btemp& (0+255),0,c
 26830  019368  D001               	goto	l2741
 26831  01936A                     l8794:
 26832  01936A  8001               	bsf	btemp& (0+255),0,c
 26833  01936C                     l2741:
 26834                           
 26835                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26836  01936C  0EF8               	movlw	248
 26837  01936E  26E1               	addwf	fsr1l,f,c
 26838  019370  0EFF               	movlw	255
 26839  019372  22E2               	addwfc	fsr1h,f,c
 26840  019374  0012               	return		;funcret
 26841  019376                     __end_of___flge:
 26842                           	opt callstack 0
 26843                           
 26844 ;; *************** function _calc_model_data *****************
 26845 ;; Defined at:
 26846 ;;		line 67 in file "mbmc.c"
 26847 ;; Parameters:    Size  Location     Type
 26848 ;;		None
 26849 ;; Auto vars:     Size  Location     Type
 26850 ;;		None
 26851 ;; Return value:  Size  Location     Type
 26852 ;;                  1  [STACK] void 
 26853 ;; Registers used:
 26854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26855 ;; Tracked objects:
 26856 ;;		On entry : 0/1
 26857 ;;		On exit  : 3F/39
 26858 ;;		Unchanged: 0/0
 26859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26864 ;;Total ram usage:        0 bytes
 26865 ;; Hardware stack levels used:    1
 26866 ;; Hardware stack levels required when called:   18
 26867 ;; This function calls:
 26868 ;;		___fladd
 26869 ;;		___flmul
 26870 ;;		___flsub
 26871 ;;		_lp_filter
 26872 ;;		_start_bsoc
 26873 ;;		_stop_bsoc
 26874 ;; This function is called by:
 26875 ;;		_main
 26876 ;; This function uses a reentrant model
 26877 ;;
 26878                           
 26879                           	psect	text107
 26880  015CBE                     __ptext107:
 26881                           	opt callstack 0
 26882  015CBE                     _calc_model_data:
 26883                           	opt callstack 12
 26884                           
 26885                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26886                           
 26887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26888                           ;incstack = 0
 26889  015CBE  ECD2  F0E2         	call	_stop_bsoc	;wreg free
 26890                           
 26891                           ; BSR set to: 57
 26892                           ;mbmc.c: 72:  if (!V.calib) {
 26893  015CC2  0101               	movlb	1	; () banked
 26894  015CC4  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 26895  015CC6  A4D8               	btfss	status,2,c
 26896  015CC8  D219               	goto	l11254
 26897                           
 26898                           ; BSR set to: 1
 26899                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26900  015CCA  EE21  F2FF         	lfsr	2,_C
 26901  015CCE  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26902  015CD4  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26903  015CDA  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26904  015CE0  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26905                           
 26906                           ; BSR set to: 1
 26907                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26908  015CE6  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 26909  015CEC  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26910  015CF2  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26911  015CF8  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26912  015CFE  EE21  F343         	lfsr	2,_C+68	;volatile
 26913  015D02  006F FF7B FFE6     	movff	postinc2,postinc1
 26914  015D08  006F FF7B FFE6     	movff	postinc2,postinc1
 26915  015D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 26916  015D14  006F FF7B FFE6     	movff	postinc2,postinc1
 26917  015D1A  ECD0  F0DC         	call	___flsub	;wreg free
 26918  015D1E  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26919  015D24  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26920  015D2A  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26921  015D30  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26922                           
 26923                           ;mbmc.c: 75:   bcror = C.c_bat;
 26924  015D36  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 26925  015D3A  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26926  015D3E  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26927  015D42  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26928                           
 26929                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26930  015D46  EE21  F303         	lfsr	2,_C+4	;volatile
 26931  015D4A  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26932  015D50  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26933  015D56  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26934  015D5C  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26935                           
 26936                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26937  015D62  EE21  F30F         	lfsr	2,_C+16	;volatile
 26938  015D66  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26939  015D6C  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26940  015D72  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26941  015D78  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26942                           
 26943                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26944  015D7E  EE21  F333         	lfsr	2,_C+52	;volatile
 26945  015D82  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26946  015D88  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26947  015D8E  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26948  015D94  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26949                           
 26950                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26951  015D9A  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 26952  015DA0  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26953  015DA6  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26954  015DAC  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26955  015DB2  EE21  F353         	lfsr	2,_C+84	;volatile
 26956  015DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 26957  015DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 26958  015DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 26959  015DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 26960  015DCE  ECD0  F0DC         	call	___flsub	;wreg free
 26961  015DD2  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26962  015DD8  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26963  015DDE  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26964  015DE4  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26965                           
 26966                           ;mbmc.c: 80:   bvror = C.v_bat;
 26967  015DEA  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 26968  015DEE  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26969  015DF2  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26970  015DF6  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26971                           
 26972                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26973  015DFA  EE21  F313         	lfsr	2,_C+20	;volatile
 26974  015DFE  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26975  015E04  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26976  015E0A  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26977  015E10  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26978                           
 26979                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 26980  015E16  EE21  F307         	lfsr	2,_C+8	;volatile
 26981  015E1A  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 26982  015E20  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 26983  015E26  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 26984  015E2C  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 26985                           
 26986                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 26987  015E32  EE21  F32F         	lfsr	2,_C+48	;volatile
 26988  015E36  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 26989  015E3C  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 26990  015E42  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 26991  015E48  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 26992                           
 26993                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 26994  015E4E  0E01               	movlw	1
 26995  015E50  6EE6               	movwf	postinc1,c
 26996  015E52  0E10               	movlw	16
 26997  015E54  6EE6               	movwf	postinc1,c
 26998  015E56  EE21  F2FF         	lfsr	2,_C
 26999  015E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 27000  015E60  006F FF7B FFE6     	movff	postinc2,postinc1
 27001  015E66  006F FF7B FFE6     	movff	postinc2,postinc1
 27002  015E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27003  015E72  EE21  F303         	lfsr	2,_C+4	;volatile
 27004  015E76  006F FF7B FFE6     	movff	postinc2,postinc1
 27005  015E7C  006F FF7B FFE6     	movff	postinc2,postinc1
 27006  015E82  006F FF7B FFE6     	movff	postinc2,postinc1
 27007  015E88  006F FF7B FFE6     	movff	postinc2,postinc1
 27008  015E8E  ECD0  F0DC         	call	___flsub	;wreg free
 27009  015E92  0060  F007  FFE6   	movff	btemp,postinc1
 27010  015E98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27011  015E9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27012  015EA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27013  015EAA  EC55  F0C4         	call	_lp_filter	;wreg free
 27014  015EAE  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 27015  015EB4  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 27016  015EBA  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 27017  015EC0  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 27018                           
 27019                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 27020  015EC6  0E01               	movlw	1
 27021  015EC8  6EE6               	movwf	postinc1,c
 27022  015ECA  0E11               	movlw	17
 27023  015ECC  6EE6               	movwf	postinc1,c
 27024  015ECE  EE21  F353         	lfsr	2,_C+84	;volatile
 27025  015ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 27026  015ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 27027  015EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27028  015EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27029  015EEA  EE21  F33F         	lfsr	2,_C+64	;volatile
 27030  015EEE  006F FF7B FFE6     	movff	postinc2,postinc1
 27031  015EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 27032  015EFA  006F FF7B FFE6     	movff	postinc2,postinc1
 27033  015F00  006F FF7B FFE6     	movff	postinc2,postinc1
 27034  015F06  ECE5  F09E         	call	___flmul	;wreg free
 27035  015F0A  0060  F007  FFE6   	movff	btemp,postinc1
 27036  015F10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27037  015F16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27038  015F1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27039  015F22  EC55  F0C4         	call	_lp_filter	;wreg free
 27040  015F26  0060  F004  F773   	movff	btemp,_C+116	;volatile
 27041  015F2C  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 27042  015F32  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 27043  015F38  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 27044                           
 27045                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 27046  015F3E  0E01               	movlw	1
 27047  015F40  6EE6               	movwf	postinc1,c
 27048  015F42  0E12               	movlw	18
 27049  015F44  6EE6               	movwf	postinc1,c
 27050  015F46  EE21  F34F         	lfsr	2,_C+80	;volatile
 27051  015F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 27052  015F50  006F FF7B FFE6     	movff	postinc2,postinc1
 27053  015F56  006F FF7B FFE6     	movff	postinc2,postinc1
 27054  015F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 27055  015F62  EE21  F347         	lfsr	2,_C+72	;volatile
 27056  015F66  006F FF7B FFE6     	movff	postinc2,postinc1
 27057  015F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27058  015F72  006F FF7B FFE6     	movff	postinc2,postinc1
 27059  015F78  006F FF7B FFE6     	movff	postinc2,postinc1
 27060  015F7E  ECE5  F09E         	call	___flmul	;wreg free
 27061  015F82  0060  F007  FFE6   	movff	btemp,postinc1
 27062  015F88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27063  015F8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27064  015F94  0060  F013  FFE6   	movff	btemp+3,postinc1
 27065  015F9A  EC55  F0C4         	call	_lp_filter	;wreg free
 27066  015F9E  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 27067  015FA4  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 27068  015FAA  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 27069  015FB0  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 27070                           
 27071                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 27072  015FB6  0E01               	movlw	1
 27073  015FB8  6EE6               	movwf	postinc1,c
 27074  015FBA  0E13               	movlw	19
 27075  015FBC  6EE6               	movwf	postinc1,c
 27076  015FBE  0E00               	movlw	0
 27077  015FC0  6EE6               	movwf	postinc1,c
 27078  015FC2  0E00               	movlw	0
 27079  015FC4  6EE6               	movwf	postinc1,c
 27080  015FC6  0E60               	movlw	96
 27081  015FC8  6EE6               	movwf	postinc1,c
 27082  015FCA  0EC1               	movlw	193
 27083  015FCC  6EE6               	movwf	postinc1,c
 27084  015FCE  EE21  F363         	lfsr	2,_C+100	;volatile
 27085  015FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 27086  015FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 27087  015FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27088  015FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27089  015FEA  EE21  F33F         	lfsr	2,_C+64	;volatile
 27090  015FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 27091  015FF4  006F FF7B FFE6     	movff	postinc2,postinc1
 27092  015FFA  006F FF7B FFE6     	movff	postinc2,postinc1
 27093  016000  006F FF7B FFE6     	movff	postinc2,postinc1
 27094  016006  ECE5  F09E         	call	___flmul	;wreg free
 27095  01600A  0060  F007  FFE6   	movff	btemp,postinc1
 27096  016010  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27097  016016  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27098  01601C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27099  016022  ECFA  F0A2         	call	___fladd	;wreg free
 27100  016026  0060  F007  FFE6   	movff	btemp,postinc1
 27101  01602C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27102  016032  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27103  016038  0060  F013  FFE6   	movff	btemp+3,postinc1
 27104  01603E  EC55  F0C4         	call	_lp_filter	;wreg free
 27105  016042  0060  F004  F777   	movff	btemp,_C+120	;volatile
 27106  016048  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 27107  01604E  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 27108  016054  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 27109                           
 27110                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 27111  01605A  0E01               	movlw	1
 27112  01605C  6EE6               	movwf	postinc1,c
 27113  01605E  0E14               	movlw	20
 27114  016060  6EE6               	movwf	postinc1,c
 27115  016062  EE21  F353         	lfsr	2,_C+84	;volatile
 27116  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 27117  01606C  006F FF7B FFE6     	movff	postinc2,postinc1
 27118  016072  006F FF7B FFE6     	movff	postinc2,postinc1
 27119  016078  006F FF7B FFE6     	movff	postinc2,postinc1
 27120  01607E  EE21  F343         	lfsr	2,_C+68	;volatile
 27121  016082  006F FF7B FFE6     	movff	postinc2,postinc1
 27122  016088  006F FF7B FFE6     	movff	postinc2,postinc1
 27123  01608E  006F FF7B FFE6     	movff	postinc2,postinc1
 27124  016094  006F FF7B FFE6     	movff	postinc2,postinc1
 27125  01609A  ECE5  F09E         	call	___flmul	;wreg free
 27126  01609E  0060  F007  FFE6   	movff	btemp,postinc1
 27127  0160A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27128  0160AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27129  0160B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27130  0160B6  EC55  F0C4         	call	_lp_filter	;wreg free
 27131  0160BA  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 27132  0160C0  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 27133  0160C6  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 27134  0160CC  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 27135                           
 27136                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 27137  0160D2  EE21  F377         	lfsr	2,_C+120	;volatile
 27138  0160D6  0E03               	movlw	3
 27139  0160D8  AEDB               	btfss	plusw2,7,c
 27140  0160DA  D010               	goto	l11254
 27141                           
 27142                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 27143  0160DC  0E17               	movlw	23
 27144  0160DE  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 27145  0160E4  0EB7               	movlw	183
 27146  0160E6  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 27147  0160EC  0ED1               	movlw	209
 27148  0160EE  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 27149  0160F4  0E38               	movlw	56
 27150  0160F6  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 27151  0160FC                     l11254:
 27152                           
 27153                           ;mbmc.c: 95:  start_bsoc();
 27154  0160FC  EC61  F0E1         	call	_start_bsoc	;wreg free
 27155                           
 27156                           ; BSR set to: 57
 27157                           ;mbmc.c: 96:  C.update = 1;
 27158  016100  0E01               	movlw	1
 27159  016102  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 27160                           
 27161                           ; BSR set to: 57
 27162                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27163  016108  0012               	return		;funcret
 27164  01610A                     __end_of_calc_model_data:
 27165                           	opt callstack 0
 27166                           
 27167 ;; *************** function _stop_bsoc *****************
 27168 ;; Defined at:
 27169 ;;		line 129 in file "bsoc.c"
 27170 ;; Parameters:    Size  Location     Type
 27171 ;;		None
 27172 ;; Auto vars:     Size  Location     Type
 27173 ;;		None
 27174 ;; Return value:  Size  Location     Type
 27175 ;;                  1  [STACK] void 
 27176 ;; Registers used:
 27177 ;;		None
 27178 ;; Tracked objects:
 27179 ;;		On entry : 0/1
 27180 ;;		On exit  : 3F/39
 27181 ;;		Unchanged: 0/0
 27182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27187 ;;Total ram usage:        0 bytes
 27188 ;; Hardware stack levels used:    1
 27189 ;; Hardware stack levels required when called:   15
 27190 ;; This function calls:
 27191 ;;		Nothing
 27192 ;; This function is called by:
 27193 ;;		_calc_model_data
 27194 ;; This function uses a reentrant model
 27195 ;;
 27196                           
 27197                           	psect	text108
 27198  01C5A4                     __ptext108:
 27199                           	opt callstack 0
 27200  01C5A4                     _stop_bsoc:
 27201                           	opt callstack 14
 27202                           
 27203                           ;bsoc.c: 132:  PIE6bits.TMR3IE = 0;
 27204                           
 27205                           ; BSR set to: 57
 27206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27207                           ;incstack = 0
 27208  01C5A4  0139               	movlb	57	; () banked
 27209  01C5A6  9D96               	bcf	150,6,b	;volatile
 27210                           
 27211                           ; BSR set to: 57
 27212                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27213  01C5A8  0012               	return		;funcret
 27214  01C5AA                     __end_of_stop_bsoc:
 27215                           	opt callstack 0
 27216                           
 27217 ;; *************** function _start_bsoc *****************
 27218 ;; Defined at:
 27219 ;;		line 120 in file "bsoc.c"
 27220 ;; Parameters:    Size  Location     Type
 27221 ;;		None
 27222 ;; Auto vars:     Size  Location     Type
 27223 ;;		None
 27224 ;; Return value:  Size  Location     Type
 27225 ;;                  1  [STACK] void 
 27226 ;; Registers used:
 27227 ;;		wreg, status,2, status,0, btemp+11
 27228 ;; Tracked objects:
 27229 ;;		On entry : 0/1
 27230 ;;		On exit  : 3F/39
 27231 ;;		Unchanged: 0/0
 27232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27237 ;;Total ram usage:        0 bytes
 27238 ;; Hardware stack levels used:    1
 27239 ;; Hardware stack levels required when called:   15
 27240 ;; This function calls:
 27241 ;;		Nothing
 27242 ;; This function is called by:
 27243 ;;		_calc_model_data
 27244 ;; This function uses a reentrant model
 27245 ;;
 27246                           
 27247                           	psect	text109
 27248  01C2C2                     __ptext109:
 27249                           	opt callstack 0
 27250  01C2C2                     _start_bsoc:
 27251                           	opt callstack 14
 27252                           
 27253                           ;bsoc.c: 123:  PIE6bits.TMR3IE = 1;
 27254                           
 27255                           ; BSR set to: 57
 27256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27257                           ;incstack = 0
 27258  01C2C2  0139               	movlb	57	; () banked
 27259  01C2C4  8D96               	bsf	150,6,b	;volatile
 27260                           
 27261                           ; BSR set to: 57
 27262  01C2C6  A4BE               	btfss	190,2,c	;volatile
 27263  01C2C8  D002               	goto	u9780
 27264  01C2CA  0E01               	movlw	1
 27265  01C2CC  D001               	goto	u9786
 27266  01C2CE                     u9780:
 27267  01C2CE  0E00               	movlw	0
 27268  01C2D0                     u9786:
 27269  01C2D0  0AFF               	xorlw	255
 27270  01C2D2  6E0C               	movwf	(btemp+11)^0,c
 27271  01C2D4  460C               	rlncf	(btemp+11)^0,f,c
 27272  01C2D6  460C               	rlncf	(btemp+11)^0,f,c
 27273  01C2D8  50BE               	movf	190,w,c	;volatile
 27274  01C2DA  180C               	xorwf	(btemp+11)^0,w,c
 27275  01C2DC  0BFB               	andlw	-5
 27276  01C2DE  180C               	xorwf	(btemp+11)^0,w,c
 27277  01C2E0  6EBE               	movwf	190,c	;volatile
 27278                           
 27279                           ; BSR set to: 57
 27280                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 27281  01C2E2  0012               	return		;funcret
 27282  01C2E4                     __end_of_start_bsoc:
 27283                           	opt callstack 0
 27284                           
 27285 ;; *************** function _lp_filter *****************
 27286 ;; Defined at:
 27287 ;;		line 29 in file "mbmc.c"
 27288 ;; Parameters:    Size  Location     Type
 27289 ;;  new             4  [STACK] const float 
 27290 ;;  bn              1  [STACK] const unsigned char 
 27291 ;;  slow            1  [STACK] const char 
 27292 ;; Auto vars:     Size  Location     Type
 27293 ;;  lp_speed        4  [STACK] float 
 27294 ;; Return value:  Size  Location     Type
 27295 ;;                  4  [STACK] float 
 27296 ;; Registers used:
 27297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27298 ;; Tracked objects:
 27299 ;;		On entry : 0/1
 27300 ;;		On exit  : 0/0
 27301 ;;		Unchanged: 0/0
 27302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27307 ;;Total ram usage:        0 bytes
 27308 ;; Hardware stack levels used:    1
 27309 ;; Hardware stack levels required when called:   17
 27310 ;; This function calls:
 27311 ;;		___fladd
 27312 ;;		___flmul
 27313 ;;		___flsub
 27314 ;; This function is called by:
 27315 ;;		_main
 27316 ;;		_convert_adc_data
 27317 ;;		_calc_model_data
 27318 ;; This function uses a reentrant model
 27319 ;;
 27320                           
 27321                           	psect	text110
 27322  0188AA                     __ptext110:
 27323                           	opt callstack 0
 27324  0188AA                     _lp_filter:
 27325                           	opt callstack 0
 27326                           
 27327                           ; BSR set to: 57
 27328                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27329  0188AA  52E6               	movf	postinc1,f,c
 27330  0188AC  52E6               	movf	postinc1,f,c
 27331  0188AE  52E6               	movf	postinc1,f,c
 27332  0188B0  52E6               	movf	postinc1,f,c
 27333                           
 27334                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27335                           ;stkvar	_bn @ sp[(-4)+-5]
 27336                           
 27337                           ;incstack = 0
 27338  0188B2  0EF7               	movlw	-9
 27339  0188B4  006F FF8C  F001    	movff	plusw1,btemp
 27340  0188BA  0E14               	movlw	20
 27341  0188BC  6401               	cpfsgt	btemp^0,c
 27342  0188BE  D011               	goto	l10578
 27343  0188C0                     u9640:
 27344                           
 27345                           ;mbmc.c: 35:   return new;
 27346                           ;stkvar	_new @ sp[(-4)+-4]
 27347  0188C0  0EF8               	movlw	-8
 27348  0188C2  006F FF8C  F001    	movff	plusw1,btemp
 27349  0188C8  0EF9               	movlw	-7
 27350  0188CA  006F FF8C  F002    	movff	plusw1,btemp+1
 27351  0188D0  0EFA               	movlw	-6
 27352  0188D2  006F FF8C  F003    	movff	plusw1,btemp+2
 27353  0188D8  0EFB               	movlw	-5
 27354  0188DA  006F FF8C  F004    	movff	plusw1,btemp+3
 27355  0188E0  D0BD               	goto	l1908
 27356  0188E2                     l10578:
 27357                           
 27358                           ;mbmc.c: 37:  if (slow == (-1)) {
 27359                           ;stkvar	_slow @ sp[(-4)+-6]
 27360  0188E2  0EF6               	movlw	-10
 27361  0188E4  28E3               	incf	plusw1,w,c
 27362  0188E6  A4D8               	btfss	status,2,c
 27363  0188E8  D012               	goto	l10586
 27364                           
 27365                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27366                           ;stkvar	_bn @ sp[(-4)+-5]
 27367  0188EA  0EF7               	movlw	-9
 27368  0188EC  50E3               	movf	plusw1,w,c
 27369  0188EE  0D04               	mullw	4
 27370  0188F0  0E00               	movlw	low lp_filter@smooth
 27371  0188F2  24F3               	addwf	243,w,c
 27372  0188F4  6ED9               	movwf	fsr2l,c
 27373  0188F6  0E02               	movlw	high lp_filter@smooth
 27374  0188F8  20F4               	addwfc	prodh,w,c
 27375  0188FA  6EDA               	movwf	fsr2h,c
 27376  0188FC  0E00               	movlw	0
 27377  0188FE  6EDE               	movwf	postinc2,c
 27378  018900  0E00               	movlw	0
 27379  018902  6EDE               	movwf	postinc2,c
 27380  018904  0E00               	movlw	0
 27381  018906  6EDE               	movwf	postinc2,c
 27382  018908  0E00               	movlw	0
 27383  01890A  6EDD               	movwf	postdec2,c
 27384  01890C  D7D9               	goto	u9640
 27385  01890E                     l10586:
 27386                           
 27387                           ;mbmc.c: 42:  if (slow) {
 27388                           ;stkvar	_slow @ sp[(-4)+-6]
 27389  01890E  0EF6               	movlw	-10
 27390  018910  50E3               	movf	plusw1,w,c
 27391  018912  B4D8               	btfsc	status,2,c
 27392  018914  D006               	goto	l10590
 27393                           
 27394                           ;mbmc.c: 43:   lp_speed = 0.033;
 27395  018916  0E02               	movlw	2
 27396  018918  6E09               	movwf	(btemp+8)^0,c
 27397  01891A  0E2B               	movlw	43
 27398  01891C  6E0A               	movwf	(btemp+9)^0,c
 27399  01891E  0E07               	movlw	7
 27400  018920  D005               	goto	L32
 27401  018922                     l10590:
 27402                           
 27403                           ;mbmc.c: 45:   lp_speed = 0.066;
 27404  018922  0E02               	movlw	2
 27405  018924  6E09               	movwf	(btemp+8)^0,c
 27406  018926  0E2B               	movlw	43
 27407  018928  6E0A               	movwf	(btemp+9)^0,c
 27408  01892A  0E87               	movlw	135
 27409  01892C                     L32:
 27410  01892C  6E0B               	movwf	(btemp+10)^0,c
 27411  01892E  0E3D               	movlw	61
 27412  018930  6E0C               	movwf	(btemp+11)^0,c
 27413                           
 27414                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27415  018932  0EFC               	movlw	-4
 27416  018934  0060  F027  FFE3   	movff	btemp+8,plusw1
 27417  01893A  0EFD               	movlw	-3
 27418  01893C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27419  018942  0EFE               	movlw	-2
 27420  018944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27421  01894A  0EFF               	movlw	-1
 27422  01894C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27423                           
 27424                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27425                           ;stkvar	_bn @ sp[(-4)+-5]
 27426  018952  0EF7               	movlw	-9
 27427  018954  50E3               	movf	plusw1,w,c
 27428  018956  0D04               	mullw	4
 27429  018958  0E00               	movlw	low lp_filter@smooth
 27430  01895A  24F3               	addwf	243,w,c
 27431  01895C  6ED9               	movwf	fsr2l,c
 27432  01895E  0E02               	movlw	high lp_filter@smooth
 27433  018960  20F4               	addwfc	prodh,w,c
 27434  018962  6EDA               	movwf	fsr2h,c
 27435  018964  006F FF7B FFE6     	movff	postinc2,postinc1
 27436  01896A  006F FF7B FFE6     	movff	postinc2,postinc1
 27437  018970  006F FF7B FFE6     	movff	postinc2,postinc1
 27438  018976  006F FF7B FFE6     	movff	postinc2,postinc1
 27439                           
 27440                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27441  01897C  0EF8               	movlw	-8
 27442  01897E  006F FF8F FFE6     	movff	plusw1,postinc1
 27443  018984  006F FF8F FFE6     	movff	plusw1,postinc1
 27444  01898A  006F FF8F FFE6     	movff	plusw1,postinc1
 27445  018990  006F FF8F FFE6     	movff	plusw1,postinc1
 27446                           
 27447                           ;stkvar	_bn @ sp[(-12)+-5]
 27448  018996  0EEF               	movlw	-17
 27449  018998  50E3               	movf	plusw1,w,c
 27450  01899A  0D04               	mullw	4
 27451  01899C  0E00               	movlw	low lp_filter@smooth
 27452  01899E  24F3               	addwf	243,w,c
 27453  0189A0  6ED9               	movwf	fsr2l,c
 27454  0189A2  0E02               	movlw	high lp_filter@smooth
 27455  0189A4  20F4               	addwfc	prodh,w,c
 27456  0189A6  6EDA               	movwf	fsr2h,c
 27457  0189A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27458  0189AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27459  0189B4  006F FF7B FFE6     	movff	postinc2,postinc1
 27460  0189BA  006F FF7B FFE6     	movff	postinc2,postinc1
 27461                           
 27462                           ;stkvar	_new @ sp[(-16)+-4]
 27463  0189C0  0EEC               	movlw	-20
 27464  0189C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27465  0189C8  006F FF8F FFE6     	movff	plusw1,postinc1
 27466  0189CE  006F FF8F FFE6     	movff	plusw1,postinc1
 27467  0189D4  006F FF8F FFE6     	movff	plusw1,postinc1
 27468  0189DA  ECD0  F0DC         	call	___flsub	;wreg free
 27469  0189DE  0060  F007  FFE6   	movff	btemp,postinc1
 27470  0189E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27471  0189EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27472  0189F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27473  0189F6  ECE5  F09E         	call	___flmul	;wreg free
 27474  0189FA  0060  F007  FFE6   	movff	btemp,postinc1
 27475  018A00  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27476  018A06  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27477  018A0C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27478  018A12  ECFA  F0A2         	call	___fladd	;wreg free
 27479                           
 27480                           ;stkvar	_bn @ sp[(-4)+-5]
 27481  018A16  0EF7               	movlw	-9
 27482  018A18  50E3               	movf	plusw1,w,c
 27483  018A1A  0D04               	mullw	4
 27484  018A1C  0E00               	movlw	low lp_filter@smooth
 27485  018A1E  24F3               	addwf	243,w,c
 27486  018A20  6ED9               	movwf	fsr2l,c
 27487  018A22  0E02               	movlw	high lp_filter@smooth
 27488  018A24  20F4               	addwfc	prodh,w,c
 27489  018A26  6EDA               	movwf	fsr2h,c
 27490  018A28  0060  F007  FFDE   	movff	btemp,postinc2
 27491  018A2E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27492  018A34  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27493  018A3A  0060  F013  FFDD   	movff	btemp+3,postdec2
 27494  018A40  52DD               	movf	postdec2,f,c
 27495  018A42  52DD               	movf	postdec2,f,c
 27496  018A44  006F FF78  F001    	movff	postinc2,btemp
 27497  018A4A  006F FF78  F002    	movff	postinc2,btemp+1
 27498  018A50  006F FF78  F003    	movff	postinc2,btemp+2
 27499  018A56  006F FF78  F004    	movff	postinc2,btemp+3
 27500  018A5C                     l1908:
 27501                           
 27502                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27503  018A5C  0EF6               	movlw	246
 27504  018A5E  26E1               	addwf	fsr1l,f,c
 27505  018A60  0EFF               	movlw	255
 27506  018A62  22E2               	addwfc	fsr1h,f,c
 27507  018A64  0012               	return		;funcret
 27508  018A66                     __end_of_lp_filter:
 27509                           	opt callstack 0
 27510                           
 27511 ;; *************** function ___flsub *****************
 27512 ;; Defined at:
 27513 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27514 ;; Parameters:    Size  Location     Type
 27515 ;;  b               4  [STACK] float 
 27516 ;;  a               4  [STACK] float 
 27517 ;; Auto vars:     Size  Location     Type
 27518 ;;		None
 27519 ;; Return value:  Size  Location     Type
 27520 ;;                  4  [STACK] float 
 27521 ;; Registers used:
 27522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27523 ;; Tracked objects:
 27524 ;;		On entry : 0/0
 27525 ;;		On exit  : 0/0
 27526 ;;		Unchanged: 0/0
 27527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27532 ;;Total ram usage:        0 bytes
 27533 ;; Hardware stack levels used:    1
 27534 ;; Hardware stack levels required when called:   16
 27535 ;; This function calls:
 27536 ;;		___fladd
 27537 ;; This function is called by:
 27538 ;;		_conv_raw_result
 27539 ;;		_lp_filter
 27540 ;;		_calc_model_data
 27541 ;;		_calc_ror_data
 27542 ;;		_esr_check
 27543 ;;		_efgtoa
 27544 ;; This function uses a reentrant model
 27545 ;;
 27546                           
 27547                           	psect	text111
 27548  01B9A0                     __ptext111:
 27549                           	opt callstack 0
 27550  01B9A0                     ___flsub:
 27551                           	opt callstack 0
 27552                           
 27553                           ;stkvar	_a @ sp[(0)+-8]
 27554                           
 27555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27556                           ;incstack = 0
 27557 ;; hardware stack exceeded
 27558  01B9A0  0EFB               	movlw	-5
 27559  01B9A2  7EE3               	btg	plusw1,7,c
 27560                           
 27561                           ;stkvar	_a @ sp[(0)+-8]
 27562  01B9A4  0EF8               	movlw	-8
 27563  01B9A6  006F FF8F FFE6     	movff	plusw1,postinc1
 27564  01B9AC  006F FF8F FFE6     	movff	plusw1,postinc1
 27565  01B9B2  006F FF8F FFE6     	movff	plusw1,postinc1
 27566  01B9B8  006F FF8F FFE6     	movff	plusw1,postinc1
 27567                           
 27568                           ;stkvar	_b @ sp[(-4)+-4]
 27569  01B9BE  0EF8               	movlw	-8
 27570  01B9C0  006F FF8F FFE6     	movff	plusw1,postinc1
 27571  01B9C6  006F FF8F FFE6     	movff	plusw1,postinc1
 27572  01B9CC  006F FF8F FFE6     	movff	plusw1,postinc1
 27573  01B9D2  006F FF8F FFE6     	movff	plusw1,postinc1
 27574  01B9D8  ECFA  F0A2         	call	___fladd	;wreg free
 27575                           
 27576                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27577  01B9DC  0EF8               	movlw	248
 27578  01B9DE  26E1               	addwf	fsr1l,f,c
 27579  01B9E0  0EFF               	movlw	255
 27580  01B9E2  22E2               	addwfc	fsr1h,f,c
 27581  01B9E4  0012               	return		;funcret
 27582  01B9E6                     __end_of___flsub:
 27583                           	opt callstack 0
 27584                           
 27585 ;; *************** function ___fladd *****************
 27586 ;; Defined at:
 27587 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27588 ;; Parameters:    Size  Location     Type
 27589 ;;  b               4  [STACK] float 
 27590 ;;  a               4  [STACK] float 
 27591 ;; Auto vars:     Size  Location     Type
 27592 ;;  grs             1  [STACK] unsigned char 
 27593 ;;  bexp            1  [STACK] unsigned char 
 27594 ;;  aexp            1  [STACK] unsigned char 
 27595 ;;  signs           1  [STACK] unsigned char 
 27596 ;; Return value:  Size  Location     Type
 27597 ;;                  4  [STACK] unsigned char 
 27598 ;; Registers used:
 27599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27600 ;; Tracked objects:
 27601 ;;		On entry : 0/0
 27602 ;;		On exit  : 0/0
 27603 ;;		Unchanged: 0/0
 27604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27609 ;;Total ram usage:        0 bytes
 27610 ;; Hardware stack levels used:    1
 27611 ;; Hardware stack levels required when called:   15
 27612 ;; This function calls:
 27613 ;;		Nothing
 27614 ;; This function is called by:
 27615 ;;		_main
 27616 ;;		_conv_raw_result
 27617 ;;		_lp_filter
 27618 ;;		_calc_model_data
 27619 ;;		_efgtoa
 27620 ;;		___asfladd
 27621 ;;		___flsub
 27622 ;; This function uses a reentrant model
 27623 ;;
 27624                           
 27625                           	psect	text112
 27626  0145F4                     __ptext112:
 27627                           	opt callstack 0
 27628  0145F4                     ___fladd:
 27629                           	opt callstack 0
 27630                           
 27631                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27632  0145F4  52E6               	movf	postinc1,f,c
 27633  0145F6  52E6               	movf	postinc1,f,c
 27634  0145F8  52E6               	movf	postinc1,f,c
 27635  0145FA  52E6               	movf	postinc1,f,c
 27636                           
 27637                           ;stkvar	_b @ sp[(-4)+-4]
 27638                           
 27639                           ;incstack = 0
 27640 ;; hardware stack exceeded
 27641  0145FC  0EFB               	movlw	251
 27642  0145FE  24E1               	addwf	fsr1l,w,c
 27643  014600  6ED9               	movwf	fsr2l,c
 27644  014602  0EFF               	movlw	255
 27645  014604  20E2               	addwfc	fsr1h,w,c
 27646  014606  6EDA               	movwf	fsr2h,c
 27647  014608  50DF               	movf	indf2,w,c
 27648  01460A  6E0C               	movwf	(btemp+11)^0,c
 27649  01460C  0E80               	movlw	128
 27650  01460E  160C               	andwf	(btemp+11)^0,f,c
 27651                           
 27652                           ;stkvar	_signs @ sp[(-4)+3]
 27653  014610  0EFF               	movlw	-1
 27654  014612  0060  F033  FFE3   	movff	btemp+11,plusw1
 27655                           
 27656                           ;stkvar	_b @ sp[(-4)+-4]
 27657  014618  0EFB               	movlw	251
 27658  01461A  24E1               	addwf	fsr1l,w,c
 27659  01461C  6ED9               	movwf	fsr2l,c
 27660  01461E  0EFF               	movlw	255
 27661  014620  20E2               	addwfc	fsr1h,w,c
 27662  014622  6EDA               	movwf	fsr2h,c
 27663  014624  50DF               	movf	indf2,w,c
 27664  014626  6E0C               	movwf	(btemp+11)^0,c
 27665  014628  90D8               	bcf	status,0,c
 27666  01462A  340C               	rlcf	(btemp+11)^0,w,c
 27667  01462C  6E0B               	movwf	(btemp+10)^0,c
 27668                           
 27669                           ;stkvar	_bexp @ sp[(-4)+1]
 27670  01462E  0EFD               	movlw	-3
 27671  014630  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27672                           
 27673                           ;stkvar	_b @ sp[(-4)+-4]
 27674  014636  0EFA               	movlw	250
 27675  014638  24E1               	addwf	fsr1l,w,c
 27676  01463A  6ED9               	movwf	fsr2l,c
 27677  01463C  0EFF               	movlw	255
 27678  01463E  20E2               	addwfc	fsr1h,w,c
 27679  014640  6EDA               	movwf	fsr2h,c
 27680  014642  AEDF               	btfss	indf2,7,c
 27681  014644  D002               	goto	l7884
 27682                           
 27683                           ;stkvar	_bexp @ sp[(-4)+1]
 27684  014646  0EFD               	movlw	-3
 27685  014648  80E3               	bsf	plusw1,0,c
 27686  01464A                     l7884:
 27687                           
 27688                           ;stkvar	_bexp @ sp[(-4)+1]
 27689  01464A  0EFD               	movlw	-3
 27690  01464C  50E3               	movf	plusw1,w,c
 27691  01464E  B4D8               	btfsc	status,2,c
 27692  014650  D027               	goto	l7894
 27693                           
 27694                           ;stkvar	_bexp @ sp[(-4)+1]
 27695  014652  0EFD               	movlw	-3
 27696  014654  28E3               	incf	plusw1,w,c
 27697  014656  A4D8               	btfss	status,2,c
 27698  014658  D018               	goto	l7890
 27699  01465A  0E00               	movlw	0
 27700  01465C  6E09               	movwf	(btemp+8)^0,c
 27701  01465E  0E00               	movlw	0
 27702  014660  6E0A               	movwf	(btemp+9)^0,c
 27703  014662  0E00               	movlw	0
 27704  014664  6E0B               	movwf	(btemp+10)^0,c
 27705  014666  0E00               	movlw	0
 27706  014668  6E0C               	movwf	(btemp+11)^0,c
 27707                           
 27708                           ;stkvar	_b @ sp[(-4)+-4]
 27709  01466A  0EF8               	movlw	-8
 27710  01466C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27711  014672  0EF9               	movlw	-7
 27712  014674  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27713  01467A  0EFA               	movlw	-6
 27714  01467C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27715  014682  0EFB               	movlw	-5
 27716  014684  0060  F033  FFE3   	movff	btemp+11,plusw1
 27717  01468A                     l7890:
 27718                           
 27719                           ;stkvar	_b @ sp[(-4)+-4]
 27720  01468A  0EFA               	movlw	-6
 27721  01468C  8EE3               	bsf	plusw1,7,c
 27722                           
 27723                           ;stkvar	_b @ sp[(-4)+-4]
 27724  01468E  0EFB               	movlw	251
 27725  014690  24E1               	addwf	fsr1l,w,c
 27726  014692  6ED9               	movwf	fsr2l,c
 27727  014694  0EFF               	movlw	255
 27728  014696  20E2               	addwfc	fsr1h,w,c
 27729  014698  6EDA               	movwf	fsr2h,c
 27730  01469A  0E00               	movlw	0
 27731  01469C  6EDF               	movwf	indf2,c
 27732  01469E  D018               	goto	l7896
 27733  0146A0                     l7894:
 27734  0146A0  0E00               	movlw	0
 27735  0146A2  6E09               	movwf	(btemp+8)^0,c
 27736  0146A4  0E00               	movlw	0
 27737  0146A6  6E0A               	movwf	(btemp+9)^0,c
 27738  0146A8  0E00               	movlw	0
 27739  0146AA  6E0B               	movwf	(btemp+10)^0,c
 27740  0146AC  0E00               	movlw	0
 27741  0146AE  6E0C               	movwf	(btemp+11)^0,c
 27742                           
 27743                           ;stkvar	_b @ sp[(-4)+-4]
 27744  0146B0  0EF8               	movlw	-8
 27745  0146B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27746  0146B8  0EF9               	movlw	-7
 27747  0146BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27748  0146C0  0EFA               	movlw	-6
 27749  0146C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27750  0146C8  0EFB               	movlw	-5
 27751  0146CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27752  0146D0                     l7896:
 27753                           
 27754                           ;stkvar	_a @ sp[(-4)+-8]
 27755  0146D0  0EF7               	movlw	247
 27756  0146D2  24E1               	addwf	fsr1l,w,c
 27757  0146D4  6ED9               	movwf	fsr2l,c
 27758  0146D6  0EFF               	movlw	255
 27759  0146D8  20E2               	addwfc	fsr1h,w,c
 27760  0146DA  6EDA               	movwf	fsr2h,c
 27761  0146DC  50DF               	movf	indf2,w,c
 27762  0146DE  6E0C               	movwf	(btemp+11)^0,c
 27763  0146E0  0E80               	movlw	128
 27764  0146E2  160C               	andwf	(btemp+11)^0,f,c
 27765                           
 27766                           ;stkvar	_aexp @ sp[(-4)+2]
 27767  0146E4  0EFE               	movlw	-2
 27768  0146E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27769                           
 27770                           ;stkvar	_signs @ sp[(-4)+3]
 27771                           ;stkvar	_aexp @ sp[(-4)+2]
 27772  0146EC  50E1               	movf	fsr1l,w,c
 27773  0146EE  0FFE               	addlw	-2
 27774  0146F0  6ED9               	movwf	fsr2l,c
 27775  0146F2  50E2               	movf	fsr1h,w,c
 27776  0146F4  6EDA               	movwf	fsr2h,c
 27777  0146F6  0EFF               	movlw	255
 27778  0146F8  22DA               	addwfc	fsr2h,f,c
 27779  0146FA  0EFF               	movlw	-1
 27780  0146FC  50E3               	movf	plusw1,w,c
 27781  0146FE  18DE               	xorwf	postinc2,w,c
 27782  014700  B4D8               	btfsc	status,2,c
 27783  014702  D002               	goto	l7902
 27784                           
 27785                           ;stkvar	_signs @ sp[(-4)+3]
 27786  014704  0EFF               	movlw	-1
 27787  014706  8CE3               	bsf	plusw1,6,c
 27788  014708                     l7902:
 27789                           
 27790                           ;stkvar	_a @ sp[(-4)+-8]
 27791  014708  0EF7               	movlw	247
 27792  01470A  24E1               	addwf	fsr1l,w,c
 27793  01470C  6ED9               	movwf	fsr2l,c
 27794  01470E  0EFF               	movlw	255
 27795  014710  20E2               	addwfc	fsr1h,w,c
 27796  014712  6EDA               	movwf	fsr2h,c
 27797  014714  50DF               	movf	indf2,w,c
 27798  014716  6E0C               	movwf	(btemp+11)^0,c
 27799  014718  90D8               	bcf	status,0,c
 27800  01471A  340C               	rlcf	(btemp+11)^0,w,c
 27801  01471C  6E0B               	movwf	(btemp+10)^0,c
 27802                           
 27803                           ;stkvar	_aexp @ sp[(-4)+2]
 27804  01471E  0EFE               	movlw	-2
 27805  014720  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27806                           
 27807                           ;stkvar	_a @ sp[(-4)+-8]
 27808  014726  0EF6               	movlw	246
 27809  014728  24E1               	addwf	fsr1l,w,c
 27810  01472A  6ED9               	movwf	fsr2l,c
 27811  01472C  0EFF               	movlw	255
 27812  01472E  20E2               	addwfc	fsr1h,w,c
 27813  014730  6EDA               	movwf	fsr2h,c
 27814  014732  AEDF               	btfss	indf2,7,c
 27815  014734  D002               	goto	l7908
 27816                           
 27817                           ;stkvar	_aexp @ sp[(-4)+2]
 27818  014736  0EFE               	movlw	-2
 27819  014738  80E3               	bsf	plusw1,0,c
 27820  01473A                     l7908:
 27821                           
 27822                           ;stkvar	_aexp @ sp[(-4)+2]
 27823  01473A  0EFE               	movlw	-2
 27824  01473C  50E3               	movf	plusw1,w,c
 27825  01473E  B4D8               	btfsc	status,2,c
 27826  014740  D027               	goto	l7918
 27827                           
 27828                           ;stkvar	_aexp @ sp[(-4)+2]
 27829  014742  0EFE               	movlw	-2
 27830  014744  28E3               	incf	plusw1,w,c
 27831  014746  A4D8               	btfss	status,2,c
 27832  014748  D018               	goto	l7914
 27833  01474A  0E00               	movlw	0
 27834  01474C  6E09               	movwf	(btemp+8)^0,c
 27835  01474E  0E00               	movlw	0
 27836  014750  6E0A               	movwf	(btemp+9)^0,c
 27837  014752  0E00               	movlw	0
 27838  014754  6E0B               	movwf	(btemp+10)^0,c
 27839  014756  0E00               	movlw	0
 27840  014758  6E0C               	movwf	(btemp+11)^0,c
 27841                           
 27842                           ;stkvar	_a @ sp[(-4)+-8]
 27843  01475A  0EF4               	movlw	-12
 27844  01475C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27845  014762  0EF5               	movlw	-11
 27846  014764  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27847  01476A  0EF6               	movlw	-10
 27848  01476C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27849  014772  0EF7               	movlw	-9
 27850  014774  0060  F033  FFE3   	movff	btemp+11,plusw1
 27851  01477A                     l7914:
 27852                           
 27853                           ;stkvar	_a @ sp[(-4)+-8]
 27854  01477A  0EF6               	movlw	-10
 27855  01477C  8EE3               	bsf	plusw1,7,c
 27856                           
 27857                           ;stkvar	_a @ sp[(-4)+-8]
 27858  01477E  0EF7               	movlw	247
 27859  014780  24E1               	addwf	fsr1l,w,c
 27860  014782  6ED9               	movwf	fsr2l,c
 27861  014784  0EFF               	movlw	255
 27862  014786  20E2               	addwfc	fsr1h,w,c
 27863  014788  6EDA               	movwf	fsr2h,c
 27864  01478A  0E00               	movlw	0
 27865  01478C  6EDF               	movwf	indf2,c
 27866  01478E  D018               	goto	l7920
 27867  014790                     l7918:
 27868  014790  0E00               	movlw	0
 27869  014792  6E09               	movwf	(btemp+8)^0,c
 27870  014794  0E00               	movlw	0
 27871  014796  6E0A               	movwf	(btemp+9)^0,c
 27872  014798  0E00               	movlw	0
 27873  01479A  6E0B               	movwf	(btemp+10)^0,c
 27874  01479C  0E00               	movlw	0
 27875  01479E  6E0C               	movwf	(btemp+11)^0,c
 27876                           
 27877                           ;stkvar	_a @ sp[(-4)+-8]
 27878  0147A0  0EF4               	movlw	-12
 27879  0147A2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27880  0147A8  0EF5               	movlw	-11
 27881  0147AA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27882  0147B0  0EF6               	movlw	-10
 27883  0147B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27884  0147B8  0EF7               	movlw	-9
 27885  0147BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27886  0147C0                     l7920:
 27887                           
 27888                           ;stkvar	_bexp @ sp[(-4)+1]
 27889                           ;stkvar	_aexp @ sp[(-4)+2]
 27890  0147C0  50E1               	movf	fsr1l,w,c
 27891  0147C2  0FFE               	addlw	-2
 27892  0147C4  6ED9               	movwf	fsr2l,c
 27893  0147C6  50E2               	movf	fsr1h,w,c
 27894  0147C8  6EDA               	movwf	fsr2h,c
 27895  0147CA  0EFF               	movlw	255
 27896  0147CC  22DA               	addwfc	fsr2h,f,c
 27897  0147CE  0EFD               	movlw	-3
 27898  0147D0  50E3               	movf	plusw1,w,c
 27899  0147D2  5CDE               	subwf	postinc2,w,c
 27900  0147D4  B0D8               	btfsc	status,0,c
 27901  0147D6  D0A4               	goto	l7956
 27902                           
 27903                           ;stkvar	_signs @ sp[(-4)+3]
 27904  0147D8  0EFF               	movlw	-1
 27905  0147DA  ACE3               	btfss	plusw1,6,c
 27906  0147DC  D002               	goto	l7926
 27907                           
 27908                           ;stkvar	_signs @ sp[(-4)+3]
 27909  0147DE  0EFF               	movlw	-1
 27910  0147E0  7EE3               	btg	plusw1,7,c
 27911  0147E2                     l7926:
 27912                           
 27913                           ;stkvar	_bexp @ sp[(-4)+1]
 27914                           ;stkvar	_grs @ sp[(-4)+0]
 27915  0147E2  0EFD               	movlw	-3
 27916  0147E4  006F FF8C  F001    	movff	plusw1,btemp
 27917  0147EA  0EFC               	movlw	-4
 27918  0147EC  0060  F007  FFE3   	movff	btemp,plusw1
 27919                           
 27920                           ;stkvar	_aexp @ sp[(-4)+2]
 27921                           ;stkvar	_bexp @ sp[(-4)+1]
 27922  0147F2  0EFE               	movlw	-2
 27923  0147F4  006F FF8C  F001    	movff	plusw1,btemp
 27924  0147FA  0EFD               	movlw	-3
 27925  0147FC  0060  F007  FFE3   	movff	btemp,plusw1
 27926                           
 27927                           ;stkvar	_grs @ sp[(-4)+0]
 27928                           ;stkvar	_aexp @ sp[(-4)+2]
 27929  014802  0EFC               	movlw	-4
 27930  014804  006F FF8C  F001    	movff	plusw1,btemp
 27931  01480A  0EFE               	movlw	-2
 27932  01480C  0060  F007  FFE3   	movff	btemp,plusw1
 27933                           
 27934                           ;stkvar	_b @ sp[(-4)+-4]
 27935                           ;stkvar	_grs @ sp[(-4)+0]
 27936  014812  0EF8               	movlw	-8
 27937  014814  006F FF8C  F001    	movff	plusw1,btemp
 27938  01481A  0EFC               	movlw	-4
 27939  01481C  0060  F007  FFE3   	movff	btemp,plusw1
 27940                           
 27941                           ;stkvar	_a @ sp[(-4)+-8]
 27942                           ;stkvar	_b @ sp[(-4)+-4]
 27943  014822  0EF4               	movlw	-12
 27944  014824  006F FF8C  F001    	movff	plusw1,btemp
 27945  01482A  0EF8               	movlw	-8
 27946  01482C  0060  F007  FFE3   	movff	btemp,plusw1
 27947                           
 27948                           ;stkvar	_grs @ sp[(-4)+0]
 27949                           ;stkvar	_a @ sp[(-4)+-8]
 27950  014832  0EFC               	movlw	-4
 27951  014834  006F FF8C  F001    	movff	plusw1,btemp
 27952  01483A  0EF4               	movlw	-12
 27953  01483C  0060  F007  FFE3   	movff	btemp,plusw1
 27954                           
 27955                           ;stkvar	_b @ sp[(-4)+-4]
 27956  014842  0EF9               	movlw	249
 27957  014844  24E1               	addwf	fsr1l,w,c
 27958  014846  6ED9               	movwf	fsr2l,c
 27959  014848  0EFF               	movlw	255
 27960  01484A  20E2               	addwfc	fsr1h,w,c
 27961  01484C  6EDA               	movwf	fsr2h,c
 27962  01484E  50DF               	movf	indf2,w,c
 27963  014850  6E0C               	movwf	(btemp+11)^0,c
 27964                           
 27965                           ;stkvar	_grs @ sp[(-4)+0]
 27966  014852  0EFC               	movlw	-4
 27967  014854  0060  F033  FFE3   	movff	btemp+11,plusw1
 27968                           
 27969                           ;stkvar	_a @ sp[(-4)+-8]
 27970  01485A  0EF5               	movlw	245
 27971  01485C  24E1               	addwf	fsr1l,w,c
 27972  01485E  6ED9               	movwf	fsr2l,c
 27973  014860  0EFF               	movlw	255
 27974  014862  20E2               	addwfc	fsr1h,w,c
 27975  014864  6EDA               	movwf	fsr2h,c
 27976                           
 27977                           ;stkvar	_b @ sp[(-4)+-4]
 27978  014866  0EF9               	movlw	249
 27979  014868  24E1               	addwf	fsr1l,w,c
 27980  01486A  6EE9               	movwf	fsr0l,c
 27981  01486C  0EFF               	movlw	255
 27982  01486E  20E2               	addwfc	fsr1h,w,c
 27983  014870  6EEA               	movwf	fsr0h,c
 27984  014872  006F FF7F FFEF     	movff	indf2,indf0
 27985                           
 27986                           ;stkvar	_grs @ sp[(-4)+0]
 27987                           ;stkvar	_a @ sp[(-4)+-8]
 27988  014878  0EF5               	movlw	245
 27989  01487A  24E1               	addwf	fsr1l,w,c
 27990  01487C  6ED9               	movwf	fsr2l,c
 27991  01487E  0EFF               	movlw	255
 27992  014880  20E2               	addwfc	fsr1h,w,c
 27993  014882  6EDA               	movwf	fsr2h,c
 27994  014884  0EFC               	movlw	-4
 27995  014886  006F FF8F FFDF     	movff	plusw1,indf2
 27996                           
 27997                           ;stkvar	_b @ sp[(-4)+-4]
 27998  01488C  0EFA               	movlw	250
 27999  01488E  24E1               	addwf	fsr1l,w,c
 28000  014890  6ED9               	movwf	fsr2l,c
 28001  014892  0EFF               	movlw	255
 28002  014894  20E2               	addwfc	fsr1h,w,c
 28003  014896  6EDA               	movwf	fsr2h,c
 28004  014898  50DF               	movf	indf2,w,c
 28005  01489A  6E0C               	movwf	(btemp+11)^0,c
 28006                           
 28007                           ;stkvar	_grs @ sp[(-4)+0]
 28008  01489C  0EFC               	movlw	-4
 28009  01489E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28010                           
 28011                           ;stkvar	_a @ sp[(-4)+-8]
 28012  0148A4  0EF6               	movlw	246
 28013  0148A6  24E1               	addwf	fsr1l,w,c
 28014  0148A8  6ED9               	movwf	fsr2l,c
 28015  0148AA  0EFF               	movlw	255
 28016  0148AC  20E2               	addwfc	fsr1h,w,c
 28017  0148AE  6EDA               	movwf	fsr2h,c
 28018                           
 28019                           ;stkvar	_b @ sp[(-4)+-4]
 28020  0148B0  0EFA               	movlw	250
 28021  0148B2  24E1               	addwf	fsr1l,w,c
 28022  0148B4  6EE9               	movwf	fsr0l,c
 28023  0148B6  0EFF               	movlw	255
 28024  0148B8  20E2               	addwfc	fsr1h,w,c
 28025  0148BA  6EEA               	movwf	fsr0h,c
 28026  0148BC  006F FF7F FFEF     	movff	indf2,indf0
 28027                           
 28028                           ;stkvar	_grs @ sp[(-4)+0]
 28029                           ;stkvar	_a @ sp[(-4)+-8]
 28030  0148C2  0EF6               	movlw	246
 28031  0148C4  24E1               	addwf	fsr1l,w,c
 28032  0148C6  6ED9               	movwf	fsr2l,c
 28033  0148C8  0EFF               	movlw	255
 28034  0148CA  20E2               	addwfc	fsr1h,w,c
 28035  0148CC  6EDA               	movwf	fsr2h,c
 28036  0148CE  0EFC               	movlw	-4
 28037  0148D0  006F FF8F FFDF     	movff	plusw1,indf2
 28038                           
 28039                           ;stkvar	_b @ sp[(-4)+-4]
 28040  0148D6  0EFB               	movlw	251
 28041  0148D8  24E1               	addwf	fsr1l,w,c
 28042  0148DA  6ED9               	movwf	fsr2l,c
 28043  0148DC  0EFF               	movlw	255
 28044  0148DE  20E2               	addwfc	fsr1h,w,c
 28045  0148E0  6EDA               	movwf	fsr2h,c
 28046  0148E2  50DF               	movf	indf2,w,c
 28047  0148E4  6E0C               	movwf	(btemp+11)^0,c
 28048                           
 28049                           ;stkvar	_grs @ sp[(-4)+0]
 28050  0148E6  0EFC               	movlw	-4
 28051  0148E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28052                           
 28053                           ;stkvar	_a @ sp[(-4)+-8]
 28054  0148EE  0EF7               	movlw	247
 28055  0148F0  24E1               	addwf	fsr1l,w,c
 28056  0148F2  6ED9               	movwf	fsr2l,c
 28057  0148F4  0EFF               	movlw	255
 28058  0148F6  20E2               	addwfc	fsr1h,w,c
 28059  0148F8  6EDA               	movwf	fsr2h,c
 28060                           
 28061                           ;stkvar	_b @ sp[(-4)+-4]
 28062  0148FA  0EFB               	movlw	251
 28063  0148FC  24E1               	addwf	fsr1l,w,c
 28064  0148FE  6EE9               	movwf	fsr0l,c
 28065  014900  0EFF               	movlw	255
 28066  014902  20E2               	addwfc	fsr1h,w,c
 28067  014904  6EEA               	movwf	fsr0h,c
 28068  014906  006F FF7F FFEF     	movff	indf2,indf0
 28069                           
 28070                           ;stkvar	_grs @ sp[(-4)+0]
 28071                           ;stkvar	_a @ sp[(-4)+-8]
 28072  01490C  0EF7               	movlw	247
 28073  01490E  24E1               	addwf	fsr1l,w,c
 28074  014910  6ED9               	movwf	fsr2l,c
 28075  014912  0EFF               	movlw	255
 28076  014914  20E2               	addwfc	fsr1h,w,c
 28077  014916  6EDA               	movwf	fsr2h,c
 28078  014918  0EFC               	movlw	-4
 28079  01491A  006F FF8F FFDF     	movff	plusw1,indf2
 28080  014920                     l7956:
 28081                           
 28082                           ;stkvar	_grs @ sp[(-4)+0]
 28083  014920  0EFC               	movlw	-4
 28084  014922  6AE3               	clrf	plusw1,c
 28085                           
 28086                           ;stkvar	_aexp @ sp[(-4)+2]
 28087  014924  0EFE               	movlw	-2
 28088  014926  50E3               	movf	plusw1,w,c
 28089  014928  6E0B               	movwf	(btemp+10)^0,c
 28090  01492A  6A0C               	clrf	(btemp+11)^0,c
 28091                           
 28092                           ;stkvar	_bexp @ sp[(-4)+1]
 28093  01492C  0EFD               	movlw	-3
 28094  01492E  50E3               	movf	plusw1,w,c
 28095  014930  5E0B               	subwf	(btemp+10)^0,f,c
 28096  014932  0E00               	movlw	0
 28097  014934  5A0C               	subwfb	(btemp+11)^0,f,c
 28098  014936  BE0C               	btfsc	(btemp+11)^0,7,c
 28099  014938  D062               	goto	l7980
 28100  01493A  500C               	movf	(btemp+11)^0,w,c
 28101  01493C  E104               	bnz	u5640
 28102  01493E  0E1A               	movlw	26
 28103  014940  5C0B               	subwf	(btemp+10)^0,w,c
 28104  014942  A0D8               	btfss	status,0,c
 28105  014944  D05C               	goto	l7980
 28106  014946                     u5640:
 28107                           
 28108                           ;stkvar	_b @ sp[(-4)+-4]
 28109  014946  0EF8               	movlw	-8
 28110  014948  50E3               	movf	plusw1,w,c
 28111  01494A  E10A               	bnz	u5651
 28112  01494C  0EF9               	movlw	-7
 28113  01494E  50E3               	movf	plusw1,w,c
 28114  014950  E107               	bnz	u5651
 28115  014952  0EFA               	movlw	-6
 28116  014954  50E3               	movf	plusw1,w,c
 28117  014956  E104               	bnz	u5651
 28118  014958  0EFB               	movlw	-5
 28119  01495A  50E3               	movf	plusw1,w,c
 28120  01495C  B4D8               	btfsc	status,2,c
 28121  01495E  D003               	goto	u5650
 28122  014960                     u5651:
 28123  014960  6A0C               	clrf	(btemp+11)^0,c
 28124  014962  2A0C               	incf	(btemp+11)^0,f,c
 28125  014964  D001               	goto	u5668
 28126  014966                     u5650:
 28127  014966  6A0C               	clrf	(btemp+11)^0,c
 28128  014968                     u5668:
 28129                           
 28130                           ;stkvar	_grs @ sp[(-4)+0]
 28131  014968  0EFC               	movlw	-4
 28132  01496A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28133                           
 28134                           ;stkvar	_b @ sp[(-4)+-4]
 28135  014970  0EF8               	movlw	-8
 28136  014972  6AE3               	clrf	plusw1,c
 28137  014974  0EF9               	movlw	-7
 28138  014976  6AE3               	clrf	plusw1,c
 28139  014978  0EFA               	movlw	-6
 28140  01497A  6AE3               	clrf	plusw1,c
 28141  01497C  0EFB               	movlw	-5
 28142  01497E  6AE3               	clrf	plusw1,c
 28143                           
 28144                           ;stkvar	_aexp @ sp[(-4)+2]
 28145                           ;stkvar	_bexp @ sp[(-4)+1]
 28146  014980  0EFE               	movlw	-2
 28147  014982  006F FF8C  F001    	movff	plusw1,btemp
 28148  014988  0EFD               	movlw	-3
 28149  01498A  0060  F007  FFE3   	movff	btemp,plusw1
 28150  014990  D042               	goto	u5700
 28151  014992                     l7966:
 28152                           
 28153                           ;stkvar	_grs @ sp[(-4)+0]
 28154  014992  0EFC               	movlw	-4
 28155  014994  A0E3               	btfss	plusw1,0,c
 28156  014996  D00D               	goto	l7970
 28157                           
 28158                           ;stkvar	_grs @ sp[(-4)+0]
 28159  014998  0EFC               	movlw	-4
 28160  01499A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28161  0149A0  90D8               	bcf	status,0,c
 28162  0149A2  320C               	rrcf	(btemp+11)^0,f,c
 28163  0149A4  0E01               	movlw	1
 28164  0149A6  120C               	iorwf	(btemp+11)^0,f,c
 28165                           
 28166                           ;stkvar	_grs @ sp[(-4)+0]
 28167  0149A8  0EFC               	movlw	-4
 28168  0149AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28169  0149B0  D009               	goto	l7972
 28170  0149B2                     l7970:
 28171                           
 28172                           ;stkvar	_grs @ sp[(-4)+0]
 28173  0149B2  50E1               	movf	fsr1l,w,c
 28174  0149B4  0FFC               	addlw	-4
 28175  0149B6  6ED9               	movwf	fsr2l,c
 28176  0149B8  50E2               	movf	fsr1h,w,c
 28177  0149BA  6EDA               	movwf	fsr2h,c
 28178  0149BC  0EFF               	movlw	255
 28179  0149BE  22DA               	addwfc	fsr2h,f,c
 28180  0149C0  90D8               	bcf	status,0,c
 28181  0149C2  32DF               	rrcf	indf2,f,c
 28182  0149C4                     l7972:
 28183                           
 28184                           ;stkvar	_b @ sp[(-4)+-4]
 28185  0149C4  0EF8               	movlw	-8
 28186  0149C6  A0E3               	btfss	plusw1,0,c
 28187  0149C8  D002               	goto	l7976
 28188                           
 28189                           ;stkvar	_grs @ sp[(-4)+0]
 28190  0149CA  0EFC               	movlw	-4
 28191  0149CC  8EE3               	bsf	plusw1,7,c
 28192  0149CE                     l7976:
 28193  0149CE  0E01               	movlw	1
 28194  0149D0  6E0C               	movwf	(btemp+11)^0,c
 28195                           
 28196                           ;stkvar	_b @ sp[(-4)+-4]
 28197  0149D2  50E1               	movf	fsr1l,w,c
 28198  0149D4  0FF8               	addlw	-8
 28199  0149D6  6ED9               	movwf	fsr2l,c
 28200  0149D8  50E2               	movf	fsr1h,w,c
 28201  0149DA  6EDA               	movwf	fsr2h,c
 28202  0149DC  0EFF               	movlw	255
 28203  0149DE  22DA               	addwfc	fsr2h,f,c
 28204  0149E0  280C               	incf	(btemp+11)^0,w,c
 28205  0149E2  52DE               	movf	postinc2,f,c
 28206  0149E4  D008               	goto	u5690
 28207  0149E6                     u5695:
 28208  0149E6  52DE               	movf	postinc2,f,c
 28209  0149E8  90D8               	bcf	status,0,c
 28210  0149EA  BEDC               	btfsc	preinc2,7,c
 28211  0149EC  80D8               	bsf	status,0,c
 28212  0149EE  32DD               	rrcf	postdec2,f,c
 28213  0149F0  32DD               	rrcf	postdec2,f,c
 28214  0149F2  32DD               	rrcf	postdec2,f,c
 28215  0149F4  32DE               	rrcf	postinc2,f,c
 28216  0149F6                     u5690:
 28217  0149F6  2EE8               	decfsz	wreg,f,c
 28218  0149F8  D7F6               	goto	u5695
 28219                           
 28220                           ;stkvar	_bexp @ sp[(-4)+1]
 28221  0149FA  0EFD               	movlw	-3
 28222  0149FC  2AE3               	incf	plusw1,f,c
 28223  0149FE                     l7980:
 28224                           
 28225                           ;stkvar	_aexp @ sp[(-4)+2]
 28226                           ;stkvar	_bexp @ sp[(-4)+1]
 28227  0149FE  50E1               	movf	fsr1l,w,c
 28228  014A00  0FFD               	addlw	-3
 28229  014A02  6ED9               	movwf	fsr2l,c
 28230  014A04  50E2               	movf	fsr1h,w,c
 28231  014A06  6EDA               	movwf	fsr2h,c
 28232  014A08  0EFF               	movlw	255
 28233  014A0A  22DA               	addwfc	fsr2h,f,c
 28234  014A0C  0EFE               	movlw	-2
 28235  014A0E  50E3               	movf	plusw1,w,c
 28236  014A10  5CDE               	subwf	postinc2,w,c
 28237  014A12  A0D8               	btfss	status,0,c
 28238  014A14  D7BE               	goto	l7966
 28239  014A16                     u5700:
 28240                           
 28241                           ;stkvar	_signs @ sp[(-4)+3]
 28242  014A16  0EFF               	movlw	-1
 28243  014A18  BCE3               	btfsc	plusw1,6,c
 28244  014A1A  D066               	goto	l8008
 28245                           
 28246                           ;stkvar	_bexp @ sp[(-4)+1]
 28247  014A1C  0EFD               	movlw	-3
 28248  014A1E  50E3               	movf	plusw1,w,c
 28249  014A20  B4D8               	btfsc	status,2,c
 28250  014A22  D0F2               	goto	u5800
 28251                           
 28252                           ;stkvar	_a @ sp[(-4)+-8]
 28253                           ;stkvar	_b @ sp[(-4)+-4]
 28254  014A24  0EF8               	movlw	-8
 28255  014A26  50E3               	movf	plusw1,w,c
 28256  014A28  6E01               	movwf	btemp^0,c
 28257  014A2A  0EF4               	movlw	-12
 28258  014A2C  50E3               	movf	plusw1,w,c
 28259  014A2E  2601               	addwf	btemp^0,f,c
 28260  014A30  0EF8               	movlw	-8
 28261  014A32  0060  F007  FFE3   	movff	btemp,plusw1
 28262  014A38  0EF9               	movlw	-7
 28263  014A3A  50E3               	movf	plusw1,w,c
 28264  014A3C  6E01               	movwf	btemp^0,c
 28265  014A3E  0EF5               	movlw	-11
 28266  014A40  50E3               	movf	plusw1,w,c
 28267  014A42  2201               	addwfc	btemp^0,f,c
 28268  014A44  0EF9               	movlw	-7
 28269  014A46  0060  F007  FFE3   	movff	btemp,plusw1
 28270  014A4C  0EFA               	movlw	-6
 28271  014A4E  50E3               	movf	plusw1,w,c
 28272  014A50  6E01               	movwf	btemp^0,c
 28273  014A52  0EF6               	movlw	-10
 28274  014A54  50E3               	movf	plusw1,w,c
 28275  014A56  2201               	addwfc	btemp^0,f,c
 28276  014A58  0EFA               	movlw	-6
 28277  014A5A  0060  F007  FFE3   	movff	btemp,plusw1
 28278  014A60  0EFB               	movlw	-5
 28279  014A62  50E3               	movf	plusw1,w,c
 28280  014A64  6E01               	movwf	btemp^0,c
 28281  014A66  0EF7               	movlw	-9
 28282  014A68  50E3               	movf	plusw1,w,c
 28283  014A6A  2201               	addwfc	btemp^0,f,c
 28284  014A6C  0EFB               	movlw	-5
 28285  014A6E  0060  F007  FFE3   	movff	btemp,plusw1
 28286                           
 28287                           ;stkvar	_b @ sp[(-4)+-4]
 28288  014A74  0EFB               	movlw	-5
 28289  014A76  A0E3               	btfss	plusw1,0,c
 28290  014A78  D101               	goto	u5840
 28291                           
 28292                           ;stkvar	_grs @ sp[(-4)+0]
 28293  014A7A  0EFC               	movlw	-4
 28294  014A7C  A0E3               	btfss	plusw1,0,c
 28295  014A7E  D00D               	goto	l7998
 28296                           
 28297                           ;stkvar	_grs @ sp[(-4)+0]
 28298  014A80  0EFC               	movlw	-4
 28299  014A82  006F FF8C  F00C    	movff	plusw1,btemp+11
 28300  014A88  90D8               	bcf	status,0,c
 28301  014A8A  320C               	rrcf	(btemp+11)^0,f,c
 28302  014A8C  0E01               	movlw	1
 28303  014A8E  120C               	iorwf	(btemp+11)^0,f,c
 28304                           
 28305                           ;stkvar	_grs @ sp[(-4)+0]
 28306  014A90  0EFC               	movlw	-4
 28307  014A92  0060  F033  FFE3   	movff	btemp+11,plusw1
 28308  014A98  D009               	goto	l8000
 28309  014A9A                     l7998:
 28310                           
 28311                           ;stkvar	_grs @ sp[(-4)+0]
 28312  014A9A  50E1               	movf	fsr1l,w,c
 28313  014A9C  0FFC               	addlw	-4
 28314  014A9E  6ED9               	movwf	fsr2l,c
 28315  014AA0  50E2               	movf	fsr1h,w,c
 28316  014AA2  6EDA               	movwf	fsr2h,c
 28317  014AA4  0EFF               	movlw	255
 28318  014AA6  22DA               	addwfc	fsr2h,f,c
 28319  014AA8  90D8               	bcf	status,0,c
 28320  014AAA  32DF               	rrcf	indf2,f,c
 28321  014AAC                     l8000:
 28322                           
 28323                           ;stkvar	_b @ sp[(-4)+-4]
 28324  014AAC  0EF8               	movlw	-8
 28325  014AAE  A0E3               	btfss	plusw1,0,c
 28326  014AB0  D002               	goto	l8004
 28327                           
 28328                           ;stkvar	_grs @ sp[(-4)+0]
 28329  014AB2  0EFC               	movlw	-4
 28330  014AB4  8EE3               	bsf	plusw1,7,c
 28331  014AB6                     l8004:
 28332  014AB6  0E01               	movlw	1
 28333  014AB8  6E0C               	movwf	(btemp+11)^0,c
 28334                           
 28335                           ;stkvar	_b @ sp[(-4)+-4]
 28336  014ABA  50E1               	movf	fsr1l,w,c
 28337  014ABC  0FF8               	addlw	-8
 28338  014ABE  6ED9               	movwf	fsr2l,c
 28339  014AC0  50E2               	movf	fsr1h,w,c
 28340  014AC2  6EDA               	movwf	fsr2h,c
 28341  014AC4  0EFF               	movlw	255
 28342  014AC6  22DA               	addwfc	fsr2h,f,c
 28343  014AC8  280C               	incf	(btemp+11)^0,w,c
 28344  014ACA  52DE               	movf	postinc2,f,c
 28345  014ACC  D008               	goto	u5760
 28346  014ACE                     u5765:
 28347  014ACE  52DE               	movf	postinc2,f,c
 28348  014AD0  90D8               	bcf	status,0,c
 28349  014AD2  BEDC               	btfsc	preinc2,7,c
 28350  014AD4  80D8               	bsf	status,0,c
 28351  014AD6  32DD               	rrcf	postdec2,f,c
 28352  014AD8  32DD               	rrcf	postdec2,f,c
 28353  014ADA  32DD               	rrcf	postdec2,f,c
 28354  014ADC  32DE               	rrcf	postinc2,f,c
 28355  014ADE                     u5760:
 28356  014ADE  2EE8               	decfsz	wreg,f,c
 28357  014AE0  D7F6               	goto	u5765
 28358                           
 28359                           ;stkvar	_bexp @ sp[(-4)+1]
 28360  014AE2  0EFD               	movlw	-3
 28361  014AE4  2AE3               	incf	plusw1,f,c
 28362  014AE6  D0CA               	goto	u5840
 28363  014AE8                     l8008:
 28364                           
 28365                           ;stkvar	_a @ sp[(-4)+-8]
 28366                           ;stkvar	_b @ sp[(-4)+-4]
 28367  014AE8  50E1               	movf	fsr1l,w,c
 28368  014AEA  0FF8               	addlw	-8
 28369  014AEC  6ED9               	movwf	fsr2l,c
 28370  014AEE  50E2               	movf	fsr1h,w,c
 28371  014AF0  6EDA               	movwf	fsr2h,c
 28372  014AF2  0EFF               	movlw	255
 28373  014AF4  22DA               	addwfc	fsr2h,f,c
 28374  014AF6  0EF4               	movlw	-12
 28375  014AF8  50E3               	movf	plusw1,w,c
 28376  014AFA  5CDE               	subwf	postinc2,w,c
 28377  014AFC  0EF5               	movlw	-11
 28378  014AFE  50E3               	movf	plusw1,w,c
 28379  014B00  58DE               	subwfb	postinc2,w,c
 28380  014B02  0EF6               	movlw	-10
 28381  014B04  50E3               	movf	plusw1,w,c
 28382  014B06  58DE               	subwfb	postinc2,w,c
 28383  014B08  50DE               	movf	postinc2,w,c
 28384  014B0A  0A80               	xorlw	128
 28385  014B0C  6E01               	movwf	btemp^0,c
 28386  014B0E  0EF7               	movlw	-9
 28387  014B10  50E3               	movf	plusw1,w,c
 28388  014B12  0A80               	xorlw	128
 28389  014B14  5801               	subwfb	btemp^0,w,c
 28390  014B16  B0D8               	btfsc	status,0,c
 28391  014B18  D053               	goto	l8020
 28392                           
 28393                           ;stkvar	_b @ sp[(-4)+-4]
 28394                           ;stkvar	_a @ sp[(-4)+-8]
 28395  014B1A  0EF4               	movlw	-12
 28396  014B1C  006F FF8C  F009    	movff	plusw1,btemp+8
 28397  014B22  0EF5               	movlw	-11
 28398  014B24  006F FF8C  F00A    	movff	plusw1,btemp+9
 28399  014B2A  0EF6               	movlw	-10
 28400  014B2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28401  014B32  0EF7               	movlw	-9
 28402  014B34  006F FF8C  F00C    	movff	plusw1,btemp+11
 28403  014B3A  0EF8               	movlw	-8
 28404  014B3C  50E3               	movf	plusw1,w,c
 28405  014B3E  5E09               	subwf	(btemp+8)^0,f,c
 28406  014B40  0EF9               	movlw	-7
 28407  014B42  50E3               	movf	plusw1,w,c
 28408  014B44  5A0A               	subwfb	(btemp+9)^0,f,c
 28409  014B46  0EFA               	movlw	-6
 28410  014B48  50E3               	movf	plusw1,w,c
 28411  014B4A  5A0B               	subwfb	(btemp+10)^0,f,c
 28412  014B4C  0EFB               	movlw	-5
 28413  014B4E  50E3               	movf	plusw1,w,c
 28414  014B50  5A0C               	subwfb	(btemp+11)^0,f,c
 28415  014B52  0EFF               	movlw	255
 28416  014B54  2409               	addwf	(btemp+8)^0,w,c
 28417  014B56  6E05               	movwf	(btemp+4)^0,c
 28418  014B58  0EFF               	movlw	255
 28419  014B5A  200A               	addwfc	(btemp+9)^0,w,c
 28420  014B5C  6E06               	movwf	(btemp+5)^0,c
 28421  014B5E  0EFF               	movlw	255
 28422  014B60  200B               	addwfc	(btemp+10)^0,w,c
 28423  014B62  6E07               	movwf	(btemp+6)^0,c
 28424  014B64  0EFF               	movlw	255
 28425  014B66  200C               	addwfc	(btemp+11)^0,w,c
 28426  014B68  6E08               	movwf	(btemp+7)^0,c
 28427                           
 28428                           ;stkvar	_b @ sp[(-4)+-4]
 28429  014B6A  0EF8               	movlw	-8
 28430  014B6C  0060  F017  FFE3   	movff	btemp+4,plusw1
 28431  014B72  0EF9               	movlw	-7
 28432  014B74  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28433  014B7A  0EFA               	movlw	-6
 28434  014B7C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28435  014B82  0EFB               	movlw	-5
 28436  014B84  0060  F023  FFE3   	movff	btemp+7,plusw1
 28437                           
 28438                           ;stkvar	_signs @ sp[(-4)+3]
 28439  014B8A  0EFF               	movlw	-1
 28440  014B8C  7EE3               	btg	plusw1,7,c
 28441                           
 28442                           ;stkvar	_grs @ sp[(-4)+0]
 28443  014B8E  0EFC               	movlw	-4
 28444  014B90  50E3               	movf	plusw1,w,c
 28445  014B92  0800               	sublw	0
 28446  014B94  6E0C               	movwf	(btemp+11)^0,c
 28447                           
 28448                           ;stkvar	_grs @ sp[(-4)+0]
 28449  014B96  0EFC               	movlw	-4
 28450  014B98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28451                           
 28452                           ;stkvar	_grs @ sp[(-4)+0]
 28453  014B9E  0EFC               	movlw	-4
 28454  014BA0  50E3               	movf	plusw1,w,c
 28455  014BA2  A4D8               	btfss	status,2,c
 28456  014BA4  D020               	goto	l8022
 28457                           
 28458                           ;stkvar	_b @ sp[(-4)+-4]
 28459  014BA6  50E1               	movf	fsr1l,w,c
 28460  014BA8  0FF8               	addlw	-8
 28461  014BAA  6ED9               	movwf	fsr2l,c
 28462  014BAC  50E2               	movf	fsr1h,w,c
 28463  014BAE  6EDA               	movwf	fsr2h,c
 28464  014BB0  0EFF               	movlw	255
 28465  014BB2  22DA               	addwfc	fsr2h,f,c
 28466  014BB4  2ADE               	incf	postinc2,f,c
 28467  014BB6  0E00               	movlw	0
 28468  014BB8  22DE               	addwfc	postinc2,f,c
 28469  014BBA  22DE               	addwfc	postinc2,f,c
 28470  014BBC  22DE               	addwfc	postinc2,f,c
 28471  014BBE  D013               	goto	l8022
 28472  014BC0                     l8020:
 28473                           
 28474                           ;stkvar	_a @ sp[(-4)+-8]
 28475                           ;stkvar	_b @ sp[(-4)+-4]
 28476  014BC0  50E1               	movf	fsr1l,w,c
 28477  014BC2  0FF8               	addlw	-8
 28478  014BC4  6ED9               	movwf	fsr2l,c
 28479  014BC6  50E2               	movf	fsr1h,w,c
 28480  014BC8  6EDA               	movwf	fsr2h,c
 28481  014BCA  0EFF               	movlw	255
 28482  014BCC  22DA               	addwfc	fsr2h,f,c
 28483  014BCE  0EF4               	movlw	-12
 28484  014BD0  50E3               	movf	plusw1,w,c
 28485  014BD2  5EDE               	subwf	postinc2,f,c
 28486  014BD4  0EF5               	movlw	-11
 28487  014BD6  50E3               	movf	plusw1,w,c
 28488  014BD8  5ADE               	subwfb	postinc2,f,c
 28489  014BDA  0EF6               	movlw	-10
 28490  014BDC  50E3               	movf	plusw1,w,c
 28491  014BDE  5ADE               	subwfb	postinc2,f,c
 28492  014BE0  0EF7               	movlw	-9
 28493  014BE2  50E3               	movf	plusw1,w,c
 28494  014BE4  5ADE               	subwfb	postinc2,f,c
 28495  014BE6                     l8022:
 28496                           
 28497                           ;stkvar	_b @ sp[(-4)+-4]
 28498  014BE6  0EF8               	movlw	-8
 28499  014BE8  50E3               	movf	plusw1,w,c
 28500  014BEA  E145               	bnz	l8044
 28501  014BEC  0EF9               	movlw	-7
 28502  014BEE  50E3               	movf	plusw1,w,c
 28503  014BF0  E142               	bnz	l8044
 28504  014BF2  0EFA               	movlw	-6
 28505  014BF4  50E3               	movf	plusw1,w,c
 28506  014BF6  E13F               	bnz	l8044
 28507  014BF8  0EFB               	movlw	-5
 28508  014BFA  50E3               	movf	plusw1,w,c
 28509  014BFC  A4D8               	btfss	status,2,c
 28510  014BFE  D03B               	goto	l8044
 28511                           
 28512                           ;stkvar	_grs @ sp[(-4)+0]
 28513  014C00  0EFC               	movlw	-4
 28514  014C02  50E3               	movf	plusw1,w,c
 28515  014C04  A4D8               	btfss	status,2,c
 28516  014C06  D037               	goto	l8044
 28517  014C08                     u5800:
 28518  014C08  0E00               	movlw	0
 28519  014C0A  6E01               	movwf	btemp^0,c
 28520  014C0C  0E00               	movlw	0
 28521  014C0E  6E02               	movwf	(btemp+1)^0,c
 28522  014C10  0E00               	movlw	0
 28523  014C12  6E03               	movwf	(btemp+2)^0,c
 28524  014C14  0E00               	movlw	0
 28525  014C16  6E04               	movwf	(btemp+3)^0,c
 28526  014C18  D0C6               	goto	l3008
 28527  014C1A                     l8030:
 28528                           
 28529                           ;stkvar	_b @ sp[(-4)+-4]
 28530  014C1A  90D8               	bcf	status,0,c
 28531  014C1C  0EF8               	movlw	-8
 28532  014C1E  36E3               	rlcf	plusw1,f,c
 28533  014C20  0EF9               	movlw	-7
 28534  014C22  36E3               	rlcf	plusw1,f,c
 28535  014C24  0EFA               	movlw	-6
 28536  014C26  36E3               	rlcf	plusw1,f,c
 28537  014C28  0EFB               	movlw	-5
 28538  014C2A  36E3               	rlcf	plusw1,f,c
 28539                           
 28540                           ;stkvar	_grs @ sp[(-4)+0]
 28541  014C2C  0EFC               	movlw	-4
 28542  014C2E  AEE3               	btfss	plusw1,7,c
 28543  014C30  D002               	goto	l3020
 28544                           
 28545                           ;stkvar	_b @ sp[(-4)+-4]
 28546  014C32  0EF8               	movlw	-8
 28547  014C34  80E3               	bsf	plusw1,0,c
 28548  014C36                     l3020:
 28549                           
 28550                           ;stkvar	_grs @ sp[(-4)+0]
 28551  014C36  0EFC               	movlw	-4
 28552  014C38  A0E3               	btfss	plusw1,0,c
 28553  014C3A  D00E               	goto	l8038
 28554                           
 28555                           ;stkvar	_grs @ sp[(-4)+0]
 28556  014C3C  0EFC               	movlw	-4
 28557  014C3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28558  014C44  90D8               	bcf	status,0,c
 28559  014C46  340C               	rlcf	(btemp+11)^0,w,c
 28560  014C48  6E0B               	movwf	(btemp+10)^0,c
 28561  014C4A  0E01               	movlw	1
 28562  014C4C  120B               	iorwf	(btemp+10)^0,f,c
 28563                           
 28564                           ;stkvar	_grs @ sp[(-4)+0]
 28565  014C4E  0EFC               	movlw	-4
 28566  014C50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28567  014C56  D009               	goto	l8040
 28568  014C58                     l8038:
 28569                           
 28570                           ;stkvar	_grs @ sp[(-4)+0]
 28571  014C58  50E1               	movf	fsr1l,w,c
 28572  014C5A  0FFC               	addlw	-4
 28573  014C5C  6ED9               	movwf	fsr2l,c
 28574  014C5E  50E2               	movf	fsr1h,w,c
 28575  014C60  6EDA               	movwf	fsr2h,c
 28576  014C62  0EFF               	movlw	255
 28577  014C64  22DA               	addwfc	fsr2h,f,c
 28578  014C66  90D8               	bcf	status,0,c
 28579  014C68  36DF               	rlcf	indf2,f,c
 28580  014C6A                     l8040:
 28581                           
 28582                           ;stkvar	_bexp @ sp[(-4)+1]
 28583  014C6A  0EFD               	movlw	-3
 28584  014C6C  50E3               	movf	plusw1,w,c
 28585  014C6E  B4D8               	btfsc	status,2,c
 28586  014C70  D002               	goto	l8044
 28587                           
 28588                           ;stkvar	_bexp @ sp[(-4)+1]
 28589  014C72  0EFD               	movlw	-3
 28590  014C74  06E3               	decf	plusw1,f,c
 28591  014C76                     l8044:
 28592                           
 28593                           ;stkvar	_b @ sp[(-4)+-4]
 28594  014C76  0EFA               	movlw	-6
 28595  014C78  AEE3               	btfss	plusw1,7,c
 28596  014C7A  D7CF               	goto	l8030
 28597  014C7C                     u5840:
 28598                           
 28599                           ;stkvar	_aexp @ sp[(-4)+2]
 28600  014C7C  0EFE               	movlw	-2
 28601  014C7E  6AE3               	clrf	plusw1,c
 28602                           
 28603                           ;stkvar	_grs @ sp[(-4)+0]
 28604  014C80  0EFC               	movlw	-4
 28605  014C82  AEE3               	btfss	plusw1,7,c
 28606  014C84  D00F               	goto	l8058
 28607                           
 28608                           ;stkvar	_grs @ sp[(-4)+0]
 28609  014C86  0EFC               	movlw	-4
 28610  014C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 28611  014C8E  0E7F               	movlw	127
 28612  014C90  160C               	andwf	(btemp+11)^0,f,c
 28613  014C92  B4D8               	btfsc	status,2,c
 28614  014C94  D004               	goto	l8054
 28615  014C96                     u5860:
 28616                           
 28617                           ;stkvar	_aexp @ sp[(-4)+2]
 28618  014C96  0EFE               	movlw	-2
 28619  014C98  6AE3               	clrf	plusw1,c
 28620  014C9A  2AE3               	incf	plusw1,f,c
 28621  014C9C  D003               	goto	l8058
 28622  014C9E                     l8054:
 28623                           
 28624                           ;stkvar	_b @ sp[(-4)+-4]
 28625  014C9E  0EF8               	movlw	-8
 28626  014CA0  B0E3               	btfsc	plusw1,0,c
 28627  014CA2  D7F9               	goto	u5860
 28628  014CA4                     l8058:
 28629                           
 28630                           ;stkvar	_aexp @ sp[(-4)+2]
 28631  014CA4  0EFE               	movlw	-2
 28632  014CA6  50E3               	movf	plusw1,w,c
 28633  014CA8  B4D8               	btfsc	status,2,c
 28634  014CAA  D02B               	goto	l8070
 28635                           
 28636                           ;stkvar	_b @ sp[(-4)+-4]
 28637  014CAC  50E1               	movf	fsr1l,w,c
 28638  014CAE  0FF8               	addlw	-8
 28639  014CB0  6ED9               	movwf	fsr2l,c
 28640  014CB2  50E2               	movf	fsr1h,w,c
 28641  014CB4  6EDA               	movwf	fsr2h,c
 28642  014CB6  0EFF               	movlw	255
 28643  014CB8  22DA               	addwfc	fsr2h,f,c
 28644  014CBA  2ADE               	incf	postinc2,f,c
 28645  014CBC  0E00               	movlw	0
 28646  014CBE  22DE               	addwfc	postinc2,f,c
 28647  014CC0  22DE               	addwfc	postinc2,f,c
 28648  014CC2  22DE               	addwfc	postinc2,f,c
 28649                           
 28650                           ;stkvar	_b @ sp[(-4)+-4]
 28651  014CC4  0EFB               	movlw	-5
 28652  014CC6  A0E3               	btfss	plusw1,0,c
 28653  014CC8  D01C               	goto	l8070
 28654  014CCA  0E01               	movlw	1
 28655  014CCC  6E0C               	movwf	(btemp+11)^0,c
 28656                           
 28657                           ;stkvar	_b @ sp[(-4)+-4]
 28658  014CCE  50E1               	movf	fsr1l,w,c
 28659  014CD0  0FF8               	addlw	-8
 28660  014CD2  6ED9               	movwf	fsr2l,c
 28661  014CD4  50E2               	movf	fsr1h,w,c
 28662  014CD6  6EDA               	movwf	fsr2h,c
 28663  014CD8  0EFF               	movlw	255
 28664  014CDA  22DA               	addwfc	fsr2h,f,c
 28665  014CDC  280C               	incf	(btemp+11)^0,w,c
 28666  014CDE  52DE               	movf	postinc2,f,c
 28667  014CE0  D008               	goto	u5900
 28668  014CE2                     u5905:
 28669  014CE2  52DE               	movf	postinc2,f,c
 28670  014CE4  90D8               	bcf	status,0,c
 28671  014CE6  BEDC               	btfsc	preinc2,7,c
 28672  014CE8  80D8               	bsf	status,0,c
 28673  014CEA  32DD               	rrcf	postdec2,f,c
 28674  014CEC  32DD               	rrcf	postdec2,f,c
 28675  014CEE  32DD               	rrcf	postdec2,f,c
 28676  014CF0  32DE               	rrcf	postinc2,f,c
 28677  014CF2                     u5900:
 28678  014CF2  2EE8               	decfsz	wreg,f,c
 28679  014CF4  D7F6               	goto	u5905
 28680                           
 28681                           ;stkvar	_bexp @ sp[(-4)+1]
 28682  014CF6  0EFD               	movlw	-3
 28683  014CF8  28E3               	incf	plusw1,w,c
 28684  014CFA  B4D8               	btfsc	status,2,c
 28685  014CFC  D002               	goto	l8070
 28686                           
 28687                           ;stkvar	_bexp @ sp[(-4)+1]
 28688  014CFE  0EFD               	movlw	-3
 28689  014D00  2AE3               	incf	plusw1,f,c
 28690  014D02                     l8070:
 28691                           
 28692                           ;stkvar	_bexp @ sp[(-4)+1]
 28693  014D02  0EFD               	movlw	-3
 28694  014D04  28E3               	incf	plusw1,w,c
 28695  014D06  B4D8               	btfsc	status,2,c
 28696  014D08  D004               	goto	u5930
 28697                           
 28698                           ;stkvar	_bexp @ sp[(-4)+1]
 28699  014D0A  0EFD               	movlw	-3
 28700  014D0C  50E3               	movf	plusw1,w,c
 28701  014D0E  A4D8               	btfss	status,2,c
 28702  014D10  D00E               	goto	l8080
 28703  014D12                     u5930:
 28704                           
 28705                           ;stkvar	_b @ sp[(-4)+-4]
 28706  014D12  0EF8               	movlw	-8
 28707  014D14  6AE3               	clrf	plusw1,c
 28708  014D16  0EF9               	movlw	-7
 28709  014D18  6AE3               	clrf	plusw1,c
 28710  014D1A  0EFA               	movlw	-6
 28711  014D1C  6AE3               	clrf	plusw1,c
 28712  014D1E  0EFB               	movlw	-5
 28713  014D20  6AE3               	clrf	plusw1,c
 28714                           
 28715                           ;stkvar	_bexp @ sp[(-4)+1]
 28716  014D22  0EFD               	movlw	-3
 28717  014D24  50E3               	movf	plusw1,w,c
 28718  014D26  A4D8               	btfss	status,2,c
 28719  014D28  D002               	goto	l8080
 28720                           
 28721                           ;stkvar	_signs @ sp[(-4)+3]
 28722  014D2A  0EFF               	movlw	-1
 28723  014D2C  6AE3               	clrf	plusw1,c
 28724  014D2E                     l8080:
 28725                           
 28726                           ;stkvar	_bexp @ sp[(-4)+1]
 28727  014D2E  0EFD               	movlw	-3
 28728  014D30  A0E3               	btfss	plusw1,0,c
 28729  014D32  D009               	goto	l8084
 28730                           
 28731                           ;stkvar	_b @ sp[(-4)+-4]
 28732  014D34  0EFA               	movlw	250
 28733  014D36  24E1               	addwf	fsr1l,w,c
 28734  014D38  6ED9               	movwf	fsr2l,c
 28735  014D3A  0EFF               	movlw	255
 28736  014D3C  20E2               	addwfc	fsr1h,w,c
 28737  014D3E  6EDA               	movwf	fsr2h,c
 28738  014D40  0E00               	movlw	0
 28739  014D42  8EDB               	bsf	plusw2,7,c
 28740  014D44  D008               	goto	l8086
 28741  014D46                     l8084:
 28742                           
 28743                           ;stkvar	_b @ sp[(-4)+-4]
 28744  014D46  0EFA               	movlw	250
 28745  014D48  24E1               	addwf	fsr1l,w,c
 28746  014D4A  6ED9               	movwf	fsr2l,c
 28747  014D4C  0EFF               	movlw	255
 28748  014D4E  20E2               	addwfc	fsr1h,w,c
 28749  014D50  6EDA               	movwf	fsr2h,c
 28750  014D52  0E7F               	movlw	127
 28751  014D54  16DF               	andwf	indf2,f,c
 28752  014D56                     l8086:
 28753                           
 28754                           ;stkvar	_b @ sp[(-4)+-4]
 28755  014D56  0EFB               	movlw	251
 28756  014D58  24E1               	addwf	fsr1l,w,c
 28757  014D5A  6ED9               	movwf	fsr2l,c
 28758  014D5C  0EFF               	movlw	255
 28759  014D5E  20E2               	addwfc	fsr1h,w,c
 28760  014D60  6EDA               	movwf	fsr2h,c
 28761                           
 28762                           ;stkvar	_bexp @ sp[(-4)+1]
 28763  014D62  0EFD               	movlw	-3
 28764  014D64  006F FF8C  F00C    	movff	plusw1,btemp+11
 28765  014D6A  90D8               	bcf	status,0,c
 28766  014D6C  300C               	rrcf	(btemp+11)^0,w,c
 28767  014D6E  6EDF               	movwf	indf2,c
 28768                           
 28769                           ;stkvar	_signs @ sp[(-4)+3]
 28770  014D70  0EFF               	movlw	-1
 28771  014D72  AEE3               	btfss	plusw1,7,c
 28772  014D74  D008               	goto	l8092
 28773                           
 28774                           ;stkvar	_b @ sp[(-4)+-4]
 28775  014D76  0EFB               	movlw	251
 28776  014D78  24E1               	addwf	fsr1l,w,c
 28777  014D7A  6ED9               	movwf	fsr2l,c
 28778  014D7C  0EFF               	movlw	255
 28779  014D7E  20E2               	addwfc	fsr1h,w,c
 28780  014D80  6EDA               	movwf	fsr2h,c
 28781  014D82  0E00               	movlw	0
 28782  014D84  8EDB               	bsf	plusw2,7,c
 28783  014D86                     l8092:
 28784                           
 28785                           ;stkvar	_b @ sp[(-4)+-4]
 28786  014D86  0EF8               	movlw	-8
 28787  014D88  006F FF8C  F001    	movff	plusw1,btemp
 28788  014D8E  0EF9               	movlw	-7
 28789  014D90  006F FF8C  F002    	movff	plusw1,btemp+1
 28790  014D96  0EFA               	movlw	-6
 28791  014D98  006F FF8C  F003    	movff	plusw1,btemp+2
 28792  014D9E  0EFB               	movlw	-5
 28793  014DA0  006F FF8C  F004    	movff	plusw1,btemp+3
 28794  014DA6                     l3008:
 28795                           
 28796                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28797  014DA6  0EF4               	movlw	244
 28798  014DA8  26E1               	addwf	fsr1l,f,c
 28799  014DAA  0EFF               	movlw	255
 28800  014DAC  22E2               	addwfc	fsr1h,f,c
 28801  014DAE  0012               	return		;funcret
 28802  014DB0                     __end_of___fladd:
 28803                           	opt callstack 0
 28804                           
 28805 ;; *************** function ___flmul *****************
 28806 ;; Defined at:
 28807 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28808 ;; Parameters:    Size  Location     Type
 28809 ;;  b               4  [STACK] unsigned char 
 28810 ;;  a               4  [STACK] unsigned char 
 28811 ;; Auto vars:     Size  Location     Type
 28812 ;;  prod            4  [STACK] struct .
 28813 ;;  grs             4  [STACK] unsigned long 
 28814 ;;  temp            2  [STACK] struct .
 28815 ;;  bexp            1  [STACK] unsigned char 
 28816 ;;  aexp            1  [STACK] unsigned char 
 28817 ;;  sign            1  [STACK] unsigned char 
 28818 ;; Return value:  Size  Location     Type
 28819 ;;                  4  [STACK] unsigned char 
 28820 ;; Registers used:
 28821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28822 ;; Tracked objects:
 28823 ;;		On entry : 0/0
 28824 ;;		On exit  : 0/0
 28825 ;;		Unchanged: 0/0
 28826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28831 ;;Total ram usage:        0 bytes
 28832 ;; Hardware stack levels used:    1
 28833 ;; Hardware stack levels required when called:   15
 28834 ;; This function calls:
 28835 ;;		Nothing
 28836 ;; This function is called by:
 28837 ;;		_conv_raw_result
 28838 ;;		_lp_filter
 28839 ;;		_calc_model_data
 28840 ;;		_calc_bsoc
 28841 ;;		_init_bsoc
 28842 ;;		_efgtoa
 28843 ;; This function uses a reentrant model
 28844 ;;
 28845                           
 28846                           	psect	text113
 28847  013DCA                     __ptext113:
 28848                           	opt callstack 0
 28849  013DCA                     ___flmul:
 28850                           	opt callstack 0
 28851                           
 28852                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28853  013DCA  0E0D               	movlw	13
 28854  013DCC  26E1               	addwf	fsr1l,f,c
 28855  013DCE  0E00               	movlw	0
 28856  013DD0  22E2               	addwfc	fsr1h,f,c
 28857                           
 28858                           ;stkvar	_b @ sp[(-13)+-4]
 28859                           
 28860                           ;incstack = 0
 28861 ;; hardware stack exceeded
 28862  013DD2  0EF2               	movlw	242
 28863  013DD4  24E1               	addwf	fsr1l,w,c
 28864  013DD6  6ED9               	movwf	fsr2l,c
 28865  013DD8  0EFF               	movlw	255
 28866  013DDA  20E2               	addwfc	fsr1h,w,c
 28867  013DDC  6EDA               	movwf	fsr2h,c
 28868  013DDE  50DF               	movf	indf2,w,c
 28869  013DE0  6E0C               	movwf	(btemp+11)^0,c
 28870  013DE2  0E80               	movlw	128
 28871  013DE4  160C               	andwf	(btemp+11)^0,f,c
 28872                           
 28873                           ;stkvar	_sign @ sp[(-13)+12]
 28874  013DE6  0EFF               	movlw	-1
 28875  013DE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28876                           
 28877                           ;stkvar	_b @ sp[(-13)+-4]
 28878  013DEE  0EF2               	movlw	242
 28879  013DF0  24E1               	addwf	fsr1l,w,c
 28880  013DF2  6ED9               	movwf	fsr2l,c
 28881  013DF4  0EFF               	movlw	255
 28882  013DF6  20E2               	addwfc	fsr1h,w,c
 28883  013DF8  6EDA               	movwf	fsr2h,c
 28884  013DFA  50DF               	movf	indf2,w,c
 28885  013DFC  6E0C               	movwf	(btemp+11)^0,c
 28886  013DFE  90D8               	bcf	status,0,c
 28887  013E00  340C               	rlcf	(btemp+11)^0,w,c
 28888  013E02  6E0B               	movwf	(btemp+10)^0,c
 28889                           
 28890                           ;stkvar	_bexp @ sp[(-13)+10]
 28891  013E04  0EFD               	movlw	-3
 28892  013E06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28893                           
 28894                           ;stkvar	_b @ sp[(-13)+-4]
 28895  013E0C  0EF1               	movlw	241
 28896  013E0E  24E1               	addwf	fsr1l,w,c
 28897  013E10  6ED9               	movwf	fsr2l,c
 28898  013E12  0EFF               	movlw	255
 28899  013E14  20E2               	addwfc	fsr1h,w,c
 28900  013E16  6EDA               	movwf	fsr2h,c
 28901  013E18  AEDF               	btfss	indf2,7,c
 28902  013E1A  D002               	goto	l8518
 28903                           
 28904                           ;stkvar	_bexp @ sp[(-13)+10]
 28905  013E1C  0EFD               	movlw	-3
 28906  013E1E  80E3               	bsf	plusw1,0,c
 28907  013E20                     l8518:
 28908                           
 28909                           ;stkvar	_bexp @ sp[(-13)+10]
 28910  013E20  0EFD               	movlw	-3
 28911  013E22  50E3               	movf	plusw1,w,c
 28912  013E24  B4D8               	btfsc	status,2,c
 28913  013E26  D01F               	goto	l8526
 28914                           
 28915                           ;stkvar	_bexp @ sp[(-13)+10]
 28916  013E28  0EFD               	movlw	-3
 28917  013E2A  28E3               	incf	plusw1,w,c
 28918  013E2C  A4D8               	btfss	status,2,c
 28919  013E2E  D018               	goto	l8524
 28920  013E30  0E00               	movlw	0
 28921  013E32  6E09               	movwf	(btemp+8)^0,c
 28922  013E34  0E00               	movlw	0
 28923  013E36  6E0A               	movwf	(btemp+9)^0,c
 28924  013E38  0E00               	movlw	0
 28925  013E3A  6E0B               	movwf	(btemp+10)^0,c
 28926  013E3C  0E00               	movlw	0
 28927  013E3E  6E0C               	movwf	(btemp+11)^0,c
 28928                           
 28929                           ;stkvar	_b @ sp[(-13)+-4]
 28930  013E40  0EEF               	movlw	-17
 28931  013E42  0060  F027  FFE3   	movff	btemp+8,plusw1
 28932  013E48  0EF0               	movlw	-16
 28933  013E4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28934  013E50  0EF1               	movlw	-15
 28935  013E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28936  013E58  0EF2               	movlw	-14
 28937  013E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28938  013E60                     l8524:
 28939                           
 28940                           ;stkvar	_b @ sp[(-13)+-4]
 28941  013E60  0EF1               	movlw	-15
 28942  013E62  8EE3               	bsf	plusw1,7,c
 28943  013E64  D018               	goto	l8528
 28944  013E66                     l8526:
 28945  013E66  0E00               	movlw	0
 28946  013E68  6E09               	movwf	(btemp+8)^0,c
 28947  013E6A  0E00               	movlw	0
 28948  013E6C  6E0A               	movwf	(btemp+9)^0,c
 28949  013E6E  0E00               	movlw	0
 28950  013E70  6E0B               	movwf	(btemp+10)^0,c
 28951  013E72  0E00               	movlw	0
 28952  013E74  6E0C               	movwf	(btemp+11)^0,c
 28953                           
 28954                           ;stkvar	_b @ sp[(-13)+-4]
 28955  013E76  0EEF               	movlw	-17
 28956  013E78  0060  F027  FFE3   	movff	btemp+8,plusw1
 28957  013E7E  0EF0               	movlw	-16
 28958  013E80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28959  013E86  0EF1               	movlw	-15
 28960  013E88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28961  013E8E  0EF2               	movlw	-14
 28962  013E90  0060  F033  FFE3   	movff	btemp+11,plusw1
 28963  013E96                     l8528:
 28964                           
 28965                           ;stkvar	_a @ sp[(-13)+-8]
 28966  013E96  0EEE               	movlw	238
 28967  013E98  24E1               	addwf	fsr1l,w,c
 28968  013E9A  6ED9               	movwf	fsr2l,c
 28969  013E9C  0EFF               	movlw	255
 28970  013E9E  20E2               	addwfc	fsr1h,w,c
 28971  013EA0  6EDA               	movwf	fsr2h,c
 28972  013EA2  50DF               	movf	indf2,w,c
 28973  013EA4  6E0C               	movwf	(btemp+11)^0,c
 28974  013EA6  0E80               	movlw	128
 28975  013EA8  160C               	andwf	(btemp+11)^0,f,c
 28976                           
 28977                           ;stkvar	_sign @ sp[(-13)+12]
 28978  013EAA  50E1               	movf	fsr1l,w,c
 28979  013EAC  0FFF               	addlw	-1
 28980  013EAE  6ED9               	movwf	fsr2l,c
 28981  013EB0  50E2               	movf	fsr1h,w,c
 28982  013EB2  6EDA               	movwf	fsr2h,c
 28983  013EB4  0EFF               	movlw	255
 28984  013EB6  22DA               	addwfc	fsr2h,f,c
 28985  013EB8  500C               	movf	(btemp+11)^0,w,c
 28986  013EBA  1ADF               	xorwf	indf2,f,c
 28987                           
 28988                           ;stkvar	_a @ sp[(-13)+-8]
 28989  013EBC  0EEE               	movlw	238
 28990  013EBE  24E1               	addwf	fsr1l,w,c
 28991  013EC0  6ED9               	movwf	fsr2l,c
 28992  013EC2  0EFF               	movlw	255
 28993  013EC4  20E2               	addwfc	fsr1h,w,c
 28994  013EC6  6EDA               	movwf	fsr2h,c
 28995  013EC8  50DF               	movf	indf2,w,c
 28996  013ECA  6E0C               	movwf	(btemp+11)^0,c
 28997  013ECC  90D8               	bcf	status,0,c
 28998  013ECE  340C               	rlcf	(btemp+11)^0,w,c
 28999  013ED0  6E0B               	movwf	(btemp+10)^0,c
 29000                           
 29001                           ;stkvar	_aexp @ sp[(-13)+11]
 29002  013ED2  0EFE               	movlw	-2
 29003  013ED4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29004                           
 29005                           ;stkvar	_a @ sp[(-13)+-8]
 29006  013EDA  0EED               	movlw	237
 29007  013EDC  24E1               	addwf	fsr1l,w,c
 29008  013EDE  6ED9               	movwf	fsr2l,c
 29009  013EE0  0EFF               	movlw	255
 29010  013EE2  20E2               	addwfc	fsr1h,w,c
 29011  013EE4  6EDA               	movwf	fsr2h,c
 29012  013EE6  AEDF               	btfss	indf2,7,c
 29013  013EE8  D002               	goto	l8536
 29014                           
 29015                           ;stkvar	_aexp @ sp[(-13)+11]
 29016  013EEA  0EFE               	movlw	-2
 29017  013EEC  80E3               	bsf	plusw1,0,c
 29018  013EEE                     l8536:
 29019                           
 29020                           ;stkvar	_aexp @ sp[(-13)+11]
 29021  013EEE  0EFE               	movlw	-2
 29022  013EF0  50E3               	movf	plusw1,w,c
 29023  013EF2  B4D8               	btfsc	status,2,c
 29024  013EF4  D01F               	goto	l8544
 29025                           
 29026                           ;stkvar	_aexp @ sp[(-13)+11]
 29027  013EF6  0EFE               	movlw	-2
 29028  013EF8  28E3               	incf	plusw1,w,c
 29029  013EFA  A4D8               	btfss	status,2,c
 29030  013EFC  D018               	goto	l8542
 29031  013EFE  0E00               	movlw	0
 29032  013F00  6E09               	movwf	(btemp+8)^0,c
 29033  013F02  0E00               	movlw	0
 29034  013F04  6E0A               	movwf	(btemp+9)^0,c
 29035  013F06  0E00               	movlw	0
 29036  013F08  6E0B               	movwf	(btemp+10)^0,c
 29037  013F0A  0E00               	movlw	0
 29038  013F0C  6E0C               	movwf	(btemp+11)^0,c
 29039                           
 29040                           ;stkvar	_a @ sp[(-13)+-8]
 29041  013F0E  0EEB               	movlw	-21
 29042  013F10  0060  F027  FFE3   	movff	btemp+8,plusw1
 29043  013F16  0EEC               	movlw	-20
 29044  013F18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29045  013F1E  0EED               	movlw	-19
 29046  013F20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29047  013F26  0EEE               	movlw	-18
 29048  013F28  0060  F033  FFE3   	movff	btemp+11,plusw1
 29049  013F2E                     l8542:
 29050                           
 29051                           ;stkvar	_a @ sp[(-13)+-8]
 29052  013F2E  0EED               	movlw	-19
 29053  013F30  8EE3               	bsf	plusw1,7,c
 29054  013F32  D018               	goto	l8546
 29055  013F34                     l8544:
 29056  013F34  0E00               	movlw	0
 29057  013F36  6E09               	movwf	(btemp+8)^0,c
 29058  013F38  0E00               	movlw	0
 29059  013F3A  6E0A               	movwf	(btemp+9)^0,c
 29060  013F3C  0E00               	movlw	0
 29061  013F3E  6E0B               	movwf	(btemp+10)^0,c
 29062  013F40  0E00               	movlw	0
 29063  013F42  6E0C               	movwf	(btemp+11)^0,c
 29064                           
 29065                           ;stkvar	_a @ sp[(-13)+-8]
 29066  013F44  0EEB               	movlw	-21
 29067  013F46  0060  F027  FFE3   	movff	btemp+8,plusw1
 29068  013F4C  0EEC               	movlw	-20
 29069  013F4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29070  013F54  0EED               	movlw	-19
 29071  013F56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29072  013F5C  0EEE               	movlw	-18
 29073  013F5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29074  013F64                     l8546:
 29075                           
 29076                           ;stkvar	_aexp @ sp[(-13)+11]
 29077  013F64  0EFE               	movlw	-2
 29078  013F66  50E3               	movf	plusw1,w,c
 29079  013F68  B4D8               	btfsc	status,2,c
 29080  013F6A  D004               	goto	u6920
 29081                           
 29082                           ;stkvar	_bexp @ sp[(-13)+10]
 29083  013F6C  0EFD               	movlw	-3
 29084  013F6E  50E3               	movf	plusw1,w,c
 29085  013F70  A4D8               	btfss	status,2,c
 29086  013F72  D009               	goto	l8554
 29087  013F74                     u6920:
 29088  013F74  0E00               	movlw	0
 29089  013F76  6E01               	movwf	btemp^0,c
 29090  013F78  0E00               	movlw	0
 29091  013F7A  6E02               	movwf	(btemp+1)^0,c
 29092  013F7C  0E00               	movlw	0
 29093  013F7E  6E03               	movwf	(btemp+2)^0,c
 29094  013F80  0E00               	movlw	0
 29095  013F82  6E04               	movwf	(btemp+3)^0,c
 29096  013F84  D332               	goto	l3089
 29097  013F86                     l8554:
 29098                           
 29099                           ;stkvar	_b @ sp[(-13)+-4]
 29100  013F86  0EEF               	movlw	-17
 29101  013F88  006F FF8C  F00C    	movff	plusw1,btemp+11
 29102                           
 29103                           ;stkvar	_a @ sp[(-13)+-8]
 29104  013F8E  0EED               	movlw	237
 29105  013F90  24E1               	addwf	fsr1l,w,c
 29106  013F92  6ED9               	movwf	fsr2l,c
 29107  013F94  0EFF               	movlw	255
 29108  013F96  20E2               	addwfc	fsr1h,w,c
 29109  013F98  6EDA               	movwf	fsr2h,c
 29110  013F9A  50DF               	movf	indf2,w,c
 29111  013F9C  020C               	mulwf	(btemp+11)^0,c
 29112                           
 29113                           ;stkvar	_temp @ sp[(-13)+8]
 29114  013F9E  0EFB               	movlw	-5
 29115  013FA0  006F FFCF FFE3     	movff	prodl,plusw1
 29116  013FA6  0EFC               	movlw	-4
 29117  013FA8  006F FFD3 FFE3     	movff	prodh,plusw1
 29118                           
 29119                           ;stkvar	_temp @ sp[(-13)+8]
 29120  013FAE  0EFB               	movlw	-5
 29121  013FB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29122  013FB6  0060  F030  F005   	movff	btemp+11,btemp+4
 29123  013FBC  6A06               	clrf	(btemp+5)^0,c
 29124  013FBE  6A07               	clrf	(btemp+6)^0,c
 29125  013FC0  6A08               	clrf	(btemp+7)^0,c
 29126                           
 29127                           ;stkvar	_grs @ sp[(-13)+4]
 29128  013FC2  0EF7               	movlw	-9
 29129  013FC4  0060  F017  FFE3   	movff	btemp+4,plusw1
 29130  013FCA  0EF8               	movlw	-8
 29131  013FCC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29132  013FD2  0EF9               	movlw	-7
 29133  013FD4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29134  013FDA  0EFA               	movlw	-6
 29135  013FDC  0060  F023  FFE3   	movff	btemp+7,plusw1
 29136                           
 29137                           ;stkvar	_temp @ sp[(-13)+8]
 29138  013FE2  0EFC               	movlw	252
 29139  013FE4  24E1               	addwf	fsr1l,w,c
 29140  013FE6  6ED9               	movwf	fsr2l,c
 29141  013FE8  0EFF               	movlw	255
 29142  013FEA  20E2               	addwfc	fsr1h,w,c
 29143  013FEC  6EDA               	movwf	fsr2h,c
 29144  013FEE  50DF               	movf	indf2,w,c
 29145  013FF0  6E0C               	movwf	(btemp+11)^0,c
 29146  013FF2  0060  F030  F005   	movff	btemp+11,btemp+4
 29147  013FF8  6A06               	clrf	(btemp+5)^0,c
 29148  013FFA  6A07               	clrf	(btemp+6)^0,c
 29149  013FFC  6A08               	clrf	(btemp+7)^0,c
 29150                           
 29151                           ;stkvar	_prod @ sp[(-13)+0]
 29152  013FFE  0EF3               	movlw	-13
 29153  014000  0060  F017  FFE3   	movff	btemp+4,plusw1
 29154  014006  0EF4               	movlw	-12
 29155  014008  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29156  01400E  0EF5               	movlw	-11
 29157  014010  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29158  014016  0EF6               	movlw	-10
 29159  014018  0060  F023  FFE3   	movff	btemp+7,plusw1
 29160                           
 29161                           ;stkvar	_b @ sp[(-13)+-4]
 29162  01401E  0EF0               	movlw	240
 29163  014020  24E1               	addwf	fsr1l,w,c
 29164  014022  6ED9               	movwf	fsr2l,c
 29165  014024  0EFF               	movlw	255
 29166  014026  20E2               	addwfc	fsr1h,w,c
 29167  014028  6EDA               	movwf	fsr2h,c
 29168  01402A  50DF               	movf	indf2,w,c
 29169  01402C  6E0C               	movwf	(btemp+11)^0,c
 29170                           
 29171                           ;stkvar	_a @ sp[(-13)+-8]
 29172  01402E  0EEC               	movlw	236
 29173  014030  24E1               	addwf	fsr1l,w,c
 29174  014032  6ED9               	movwf	fsr2l,c
 29175  014034  0EFF               	movlw	255
 29176  014036  20E2               	addwfc	fsr1h,w,c
 29177  014038  6EDA               	movwf	fsr2h,c
 29178  01403A  50DF               	movf	indf2,w,c
 29179  01403C  020C               	mulwf	(btemp+11)^0,c
 29180                           
 29181                           ;stkvar	_temp @ sp[(-13)+8]
 29182  01403E  0EFB               	movlw	-5
 29183  014040  006F FFCF FFE3     	movff	prodl,plusw1
 29184  014046  0EFC               	movlw	-4
 29185  014048  006F FFD3 FFE3     	movff	prodh,plusw1
 29186                           
 29187                           ;stkvar	_grs @ sp[(-13)+4]
 29188  01404E  50E1               	movf	fsr1l,w,c
 29189  014050  0FF7               	addlw	-9
 29190  014052  6ED9               	movwf	fsr2l,c
 29191  014054  50E2               	movf	fsr1h,w,c
 29192  014056  6EDA               	movwf	fsr2h,c
 29193  014058  0EFF               	movlw	255
 29194  01405A  22DA               	addwfc	fsr2h,f,c
 29195                           
 29196                           ;stkvar	_temp @ sp[(-13)+8]
 29197  01405C  0EFB               	movlw	-5
 29198  01405E  50E3               	movf	plusw1,w,c
 29199  014060  26DE               	addwf	postinc2,f,c
 29200  014062  0E00               	movlw	0
 29201  014064  22DE               	addwfc	postinc2,f,c
 29202  014066  22DE               	addwfc	postinc2,f,c
 29203  014068  22DE               	addwfc	postinc2,f,c
 29204                           
 29205                           ;stkvar	_prod @ sp[(-13)+0]
 29206  01406A  50E1               	movf	fsr1l,w,c
 29207  01406C  0FF3               	addlw	-13
 29208  01406E  6ED9               	movwf	fsr2l,c
 29209  014070  50E2               	movf	fsr1h,w,c
 29210  014072  6EDA               	movwf	fsr2h,c
 29211  014074  0EFF               	movlw	255
 29212  014076  22DA               	addwfc	fsr2h,f,c
 29213                           
 29214                           ;stkvar	_temp @ sp[(-13)+8]
 29215  014078  0EFC               	movlw	252
 29216  01407A  24E1               	addwf	fsr1l,w,c
 29217  01407C  6EE9               	movwf	fsr0l,c
 29218  01407E  0EFF               	movlw	255
 29219  014080  20E2               	addwfc	fsr1h,w,c
 29220  014082  6EEA               	movwf	fsr0h,c
 29221  014084  50EF               	movf	indf0,w,c
 29222  014086  26DE               	addwf	postinc2,f,c
 29223  014088  0E00               	movlw	0
 29224  01408A  22DE               	addwfc	postinc2,f,c
 29225  01408C  22DE               	addwfc	postinc2,f,c
 29226  01408E  22DE               	addwfc	postinc2,f,c
 29227                           
 29228                           ;stkvar	_b @ sp[(-13)+-4]
 29229  014090  0EF1               	movlw	241
 29230  014092  24E1               	addwf	fsr1l,w,c
 29231  014094  6ED9               	movwf	fsr2l,c
 29232  014096  0EFF               	movlw	255
 29233  014098  20E2               	addwfc	fsr1h,w,c
 29234  01409A  6EDA               	movwf	fsr2h,c
 29235  01409C  50DF               	movf	indf2,w,c
 29236  01409E  6E0C               	movwf	(btemp+11)^0,c
 29237                           
 29238                           ;stkvar	_a @ sp[(-13)+-8]
 29239  0140A0  0EEB               	movlw	-21
 29240  0140A2  50E3               	movf	plusw1,w,c
 29241  0140A4  020C               	mulwf	(btemp+11)^0,c
 29242                           
 29243                           ;stkvar	_temp @ sp[(-13)+8]
 29244  0140A6  0EFB               	movlw	-5
 29245  0140A8  006F FFCF FFE3     	movff	prodl,plusw1
 29246  0140AE  0EFC               	movlw	-4
 29247  0140B0  006F FFD3 FFE3     	movff	prodh,plusw1
 29248                           
 29249                           ;stkvar	_grs @ sp[(-13)+4]
 29250  0140B6  50E1               	movf	fsr1l,w,c
 29251  0140B8  0FF7               	addlw	-9
 29252  0140BA  6ED9               	movwf	fsr2l,c
 29253  0140BC  50E2               	movf	fsr1h,w,c
 29254  0140BE  6EDA               	movwf	fsr2h,c
 29255  0140C0  0EFF               	movlw	255
 29256  0140C2  22DA               	addwfc	fsr2h,f,c
 29257                           
 29258                           ;stkvar	_temp @ sp[(-13)+8]
 29259  0140C4  0EFB               	movlw	-5
 29260  0140C6  50E3               	movf	plusw1,w,c
 29261  0140C8  26DE               	addwf	postinc2,f,c
 29262  0140CA  0E00               	movlw	0
 29263  0140CC  22DE               	addwfc	postinc2,f,c
 29264  0140CE  22DE               	addwfc	postinc2,f,c
 29265  0140D0  22DE               	addwfc	postinc2,f,c
 29266                           
 29267                           ;stkvar	_prod @ sp[(-13)+0]
 29268  0140D2  50E1               	movf	fsr1l,w,c
 29269  0140D4  0FF3               	addlw	-13
 29270  0140D6  6ED9               	movwf	fsr2l,c
 29271  0140D8  50E2               	movf	fsr1h,w,c
 29272  0140DA  6EDA               	movwf	fsr2h,c
 29273  0140DC  0EFF               	movlw	255
 29274  0140DE  22DA               	addwfc	fsr2h,f,c
 29275                           
 29276                           ;stkvar	_temp @ sp[(-13)+8]
 29277  0140E0  0EFC               	movlw	252
 29278  0140E2  24E1               	addwf	fsr1l,w,c
 29279  0140E4  6EE9               	movwf	fsr0l,c
 29280  0140E6  0EFF               	movlw	255
 29281  0140E8  20E2               	addwfc	fsr1h,w,c
 29282  0140EA  6EEA               	movwf	fsr0h,c
 29283  0140EC  50EF               	movf	indf0,w,c
 29284  0140EE  26DE               	addwf	postinc2,f,c
 29285  0140F0  0E00               	movlw	0
 29286  0140F2  22DE               	addwfc	postinc2,f,c
 29287  0140F4  22DE               	addwfc	postinc2,f,c
 29288  0140F6  22DE               	addwfc	postinc2,f,c
 29289                           
 29290                           ;stkvar	_grs @ sp[(-13)+4]
 29291  0140F8  50E1               	movf	fsr1l,w,c
 29292  0140FA  0FF7               	addlw	-9
 29293  0140FC  6ED9               	movwf	fsr2l,c
 29294  0140FE  50E2               	movf	fsr1h,w,c
 29295  014100  6EDA               	movwf	fsr2h,c
 29296  014102  0EFF               	movlw	255
 29297  014104  22DA               	addwfc	fsr2h,f,c
 29298  014106  0E08               	movlw	8
 29299  014108                     u6935:
 29300  014108  90D8               	bcf	status,0,c
 29301  01410A  36DE               	rlcf	postinc2,f,c
 29302  01410C  36DE               	rlcf	postinc2,f,c
 29303  01410E  36DE               	rlcf	postinc2,f,c
 29304  014110  36DD               	rlcf	postdec2,f,c
 29305  014112  52DD               	movf	postdec2,f,c
 29306  014114  52DD               	movf	postdec2,f,c
 29307  014116  2EE8               	decfsz	wreg,f,c
 29308  014118  D7F7               	goto	u6935
 29309                           
 29310                           ;stkvar	_b @ sp[(-13)+-4]
 29311  01411A  0EF0               	movlw	240
 29312  01411C  24E1               	addwf	fsr1l,w,c
 29313  01411E  6ED9               	movwf	fsr2l,c
 29314  014120  0EFF               	movlw	255
 29315  014122  20E2               	addwfc	fsr1h,w,c
 29316  014124  6EDA               	movwf	fsr2h,c
 29317  014126  50DF               	movf	indf2,w,c
 29318  014128  6E0C               	movwf	(btemp+11)^0,c
 29319                           
 29320                           ;stkvar	_a @ sp[(-13)+-8]
 29321  01412A  0EEB               	movlw	-21
 29322  01412C  50E3               	movf	plusw1,w,c
 29323  01412E  020C               	mulwf	(btemp+11)^0,c
 29324                           
 29325                           ;stkvar	_temp @ sp[(-13)+8]
 29326  014130  0EFB               	movlw	-5
 29327  014132  006F FFCF FFE3     	movff	prodl,plusw1
 29328  014138  0EFC               	movlw	-4
 29329  01413A  006F FFD3 FFE3     	movff	prodh,plusw1
 29330                           
 29331                           ;stkvar	_temp @ sp[(-13)+8]
 29332  014140  0EFB               	movlw	-5
 29333  014142  006F FF8C  F00B    	movff	plusw1,btemp+10
 29334  014148  0EFC               	movlw	-4
 29335  01414A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29336                           
 29337                           ;stkvar	_grs @ sp[(-13)+4]
 29338  014150  50E1               	movf	fsr1l,w,c
 29339  014152  0FF7               	addlw	-9
 29340  014154  6ED9               	movwf	fsr2l,c
 29341  014156  50E2               	movf	fsr1h,w,c
 29342  014158  6EDA               	movwf	fsr2h,c
 29343  01415A  0EFF               	movlw	255
 29344  01415C  22DA               	addwfc	fsr2h,f,c
 29345  01415E  500B               	movf	(btemp+10)^0,w,c
 29346  014160  26DE               	addwf	postinc2,f,c
 29347  014162  500C               	movf	(btemp+11)^0,w,c
 29348  014164  22DE               	addwfc	postinc2,f,c
 29349  014166  0E00               	movlw	0
 29350  014168  22DE               	addwfc	postinc2,f,c
 29351  01416A  22DE               	addwfc	postinc2,f,c
 29352                           
 29353                           ;stkvar	_b @ sp[(-13)+-4]
 29354  01416C  0EEF               	movlw	-17
 29355  01416E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29356                           
 29357                           ;stkvar	_a @ sp[(-13)+-8]
 29358  014174  0EEC               	movlw	236
 29359  014176  24E1               	addwf	fsr1l,w,c
 29360  014178  6ED9               	movwf	fsr2l,c
 29361  01417A  0EFF               	movlw	255
 29362  01417C  20E2               	addwfc	fsr1h,w,c
 29363  01417E  6EDA               	movwf	fsr2h,c
 29364  014180  50DF               	movf	indf2,w,c
 29365  014182  020C               	mulwf	(btemp+11)^0,c
 29366                           
 29367                           ;stkvar	_temp @ sp[(-13)+8]
 29368  014184  0EFB               	movlw	-5
 29369  014186  006F FFCF FFE3     	movff	prodl,plusw1
 29370  01418C  0EFC               	movlw	-4
 29371  01418E  006F FFD3 FFE3     	movff	prodh,plusw1
 29372                           
 29373                           ;stkvar	_temp @ sp[(-13)+8]
 29374  014194  0EFB               	movlw	-5
 29375  014196  006F FF8C  F00B    	movff	plusw1,btemp+10
 29376  01419C  0EFC               	movlw	-4
 29377  01419E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29378                           
 29379                           ;stkvar	_grs @ sp[(-13)+4]
 29380  0141A4  50E1               	movf	fsr1l,w,c
 29381  0141A6  0FF7               	addlw	-9
 29382  0141A8  6ED9               	movwf	fsr2l,c
 29383  0141AA  50E2               	movf	fsr1h,w,c
 29384  0141AC  6EDA               	movwf	fsr2h,c
 29385  0141AE  0EFF               	movlw	255
 29386  0141B0  22DA               	addwfc	fsr2h,f,c
 29387  0141B2  500B               	movf	(btemp+10)^0,w,c
 29388  0141B4  26DE               	addwf	postinc2,f,c
 29389  0141B6  500C               	movf	(btemp+11)^0,w,c
 29390  0141B8  22DE               	addwfc	postinc2,f,c
 29391  0141BA  0E00               	movlw	0
 29392  0141BC  22DE               	addwfc	postinc2,f,c
 29393  0141BE  22DE               	addwfc	postinc2,f,c
 29394                           
 29395                           ;stkvar	_grs @ sp[(-13)+4]
 29396  0141C0  50E1               	movf	fsr1l,w,c
 29397  0141C2  0FF7               	addlw	-9
 29398  0141C4  6ED9               	movwf	fsr2l,c
 29399  0141C6  50E2               	movf	fsr1h,w,c
 29400  0141C8  6EDA               	movwf	fsr2h,c
 29401  0141CA  0EFF               	movlw	255
 29402  0141CC  22DA               	addwfc	fsr2h,f,c
 29403  0141CE  0E08               	movlw	8
 29404  0141D0                     u6945:
 29405  0141D0  90D8               	bcf	status,0,c
 29406  0141D2  36DE               	rlcf	postinc2,f,c
 29407  0141D4  36DE               	rlcf	postinc2,f,c
 29408  0141D6  36DE               	rlcf	postinc2,f,c
 29409  0141D8  36DD               	rlcf	postdec2,f,c
 29410  0141DA  52DD               	movf	postdec2,f,c
 29411  0141DC  52DD               	movf	postdec2,f,c
 29412  0141DE  2EE8               	decfsz	wreg,f,c
 29413  0141E0  D7F7               	goto	u6945
 29414                           
 29415                           ;stkvar	_b @ sp[(-13)+-4]
 29416  0141E2  0EEF               	movlw	-17
 29417  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29418                           
 29419                           ;stkvar	_a @ sp[(-13)+-8]
 29420  0141EA  0EEB               	movlw	-21
 29421  0141EC  50E3               	movf	plusw1,w,c
 29422  0141EE  020C               	mulwf	(btemp+11)^0,c
 29423                           
 29424                           ;stkvar	_temp @ sp[(-13)+8]
 29425  0141F0  0EFB               	movlw	-5
 29426  0141F2  006F FFCF FFE3     	movff	prodl,plusw1
 29427  0141F8  0EFC               	movlw	-4
 29428  0141FA  006F FFD3 FFE3     	movff	prodh,plusw1
 29429                           
 29430                           ;stkvar	_temp @ sp[(-13)+8]
 29431  014200  0EFB               	movlw	-5
 29432  014202  006F FF8C  F00B    	movff	plusw1,btemp+10
 29433  014208  0EFC               	movlw	-4
 29434  01420A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29435                           
 29436                           ;stkvar	_grs @ sp[(-13)+4]
 29437  014210  50E1               	movf	fsr1l,w,c
 29438  014212  0FF7               	addlw	-9
 29439  014214  6ED9               	movwf	fsr2l,c
 29440  014216  50E2               	movf	fsr1h,w,c
 29441  014218  6EDA               	movwf	fsr2h,c
 29442  01421A  0EFF               	movlw	255
 29443  01421C  22DA               	addwfc	fsr2h,f,c
 29444  01421E  500B               	movf	(btemp+10)^0,w,c
 29445  014220  26DE               	addwf	postinc2,f,c
 29446  014222  500C               	movf	(btemp+11)^0,w,c
 29447  014224  22DE               	addwfc	postinc2,f,c
 29448  014226  0E00               	movlw	0
 29449  014228  22DE               	addwfc	postinc2,f,c
 29450  01422A  22DE               	addwfc	postinc2,f,c
 29451                           
 29452                           ;stkvar	_b @ sp[(-13)+-4]
 29453  01422C  0EF0               	movlw	240
 29454  01422E  24E1               	addwf	fsr1l,w,c
 29455  014230  6ED9               	movwf	fsr2l,c
 29456  014232  0EFF               	movlw	255
 29457  014234  20E2               	addwfc	fsr1h,w,c
 29458  014236  6EDA               	movwf	fsr2h,c
 29459  014238  50DF               	movf	indf2,w,c
 29460  01423A  6E0C               	movwf	(btemp+11)^0,c
 29461                           
 29462                           ;stkvar	_a @ sp[(-13)+-8]
 29463  01423C  0EED               	movlw	237
 29464  01423E  24E1               	addwf	fsr1l,w,c
 29465  014240  6ED9               	movwf	fsr2l,c
 29466  014242  0EFF               	movlw	255
 29467  014244  20E2               	addwfc	fsr1h,w,c
 29468  014246  6EDA               	movwf	fsr2h,c
 29469  014248  50DF               	movf	indf2,w,c
 29470  01424A  020C               	mulwf	(btemp+11)^0,c
 29471                           
 29472                           ;stkvar	_temp @ sp[(-13)+8]
 29473  01424C  0EFB               	movlw	-5
 29474  01424E  006F FFCF FFE3     	movff	prodl,plusw1
 29475  014254  0EFC               	movlw	-4
 29476  014256  006F FFD3 FFE3     	movff	prodh,plusw1
 29477                           
 29478                           ;stkvar	_temp @ sp[(-13)+8]
 29479  01425C  0EFB               	movlw	-5
 29480  01425E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29481  014264  0EFC               	movlw	-4
 29482  014266  006F FF8C  F00C    	movff	plusw1,btemp+11
 29483                           
 29484                           ;stkvar	_prod @ sp[(-13)+0]
 29485  01426C  50E1               	movf	fsr1l,w,c
 29486  01426E  0FF3               	addlw	-13
 29487  014270  6ED9               	movwf	fsr2l,c
 29488  014272  50E2               	movf	fsr1h,w,c
 29489  014274  6EDA               	movwf	fsr2h,c
 29490  014276  0EFF               	movlw	255
 29491  014278  22DA               	addwfc	fsr2h,f,c
 29492  01427A  500B               	movf	(btemp+10)^0,w,c
 29493  01427C  26DE               	addwf	postinc2,f,c
 29494  01427E  500C               	movf	(btemp+11)^0,w,c
 29495  014280  22DE               	addwfc	postinc2,f,c
 29496  014282  0E00               	movlw	0
 29497  014284  22DE               	addwfc	postinc2,f,c
 29498  014286  22DE               	addwfc	postinc2,f,c
 29499                           
 29500                           ;stkvar	_b @ sp[(-13)+-4]
 29501  014288  0EF1               	movlw	241
 29502  01428A  24E1               	addwf	fsr1l,w,c
 29503  01428C  6ED9               	movwf	fsr2l,c
 29504  01428E  0EFF               	movlw	255
 29505  014290  20E2               	addwfc	fsr1h,w,c
 29506  014292  6EDA               	movwf	fsr2h,c
 29507  014294  50DF               	movf	indf2,w,c
 29508  014296  6E0C               	movwf	(btemp+11)^0,c
 29509                           
 29510                           ;stkvar	_a @ sp[(-13)+-8]
 29511  014298  0EEC               	movlw	236
 29512  01429A  24E1               	addwf	fsr1l,w,c
 29513  01429C  6ED9               	movwf	fsr2l,c
 29514  01429E  0EFF               	movlw	255
 29515  0142A0  20E2               	addwfc	fsr1h,w,c
 29516  0142A2  6EDA               	movwf	fsr2h,c
 29517  0142A4  50DF               	movf	indf2,w,c
 29518  0142A6  020C               	mulwf	(btemp+11)^0,c
 29519                           
 29520                           ;stkvar	_temp @ sp[(-13)+8]
 29521  0142A8  0EFB               	movlw	-5
 29522  0142AA  006F FFCF FFE3     	movff	prodl,plusw1
 29523  0142B0  0EFC               	movlw	-4
 29524  0142B2  006F FFD3 FFE3     	movff	prodh,plusw1
 29525                           
 29526                           ;stkvar	_temp @ sp[(-13)+8]
 29527  0142B8  0EFB               	movlw	-5
 29528  0142BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 29529  0142C0  0EFC               	movlw	-4
 29530  0142C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 29531                           
 29532                           ;stkvar	_prod @ sp[(-13)+0]
 29533  0142C8  50E1               	movf	fsr1l,w,c
 29534  0142CA  0FF3               	addlw	-13
 29535  0142CC  6ED9               	movwf	fsr2l,c
 29536  0142CE  50E2               	movf	fsr1h,w,c
 29537  0142D0  6EDA               	movwf	fsr2h,c
 29538  0142D2  0EFF               	movlw	255
 29539  0142D4  22DA               	addwfc	fsr2h,f,c
 29540  0142D6  500B               	movf	(btemp+10)^0,w,c
 29541  0142D8  26DE               	addwf	postinc2,f,c
 29542  0142DA  500C               	movf	(btemp+11)^0,w,c
 29543  0142DC  22DE               	addwfc	postinc2,f,c
 29544  0142DE  0E00               	movlw	0
 29545  0142E0  22DE               	addwfc	postinc2,f,c
 29546  0142E2  22DE               	addwfc	postinc2,f,c
 29547                           
 29548                           ;stkvar	_b @ sp[(-13)+-4]
 29549  0142E4  0EF1               	movlw	241
 29550  0142E6  24E1               	addwf	fsr1l,w,c
 29551  0142E8  6ED9               	movwf	fsr2l,c
 29552  0142EA  0EFF               	movlw	255
 29553  0142EC  20E2               	addwfc	fsr1h,w,c
 29554  0142EE  6EDA               	movwf	fsr2h,c
 29555  0142F0  50DF               	movf	indf2,w,c
 29556  0142F2  6E0C               	movwf	(btemp+11)^0,c
 29557                           
 29558                           ;stkvar	_a @ sp[(-13)+-8]
 29559  0142F4  0EED               	movlw	237
 29560  0142F6  24E1               	addwf	fsr1l,w,c
 29561  0142F8  6ED9               	movwf	fsr2l,c
 29562  0142FA  0EFF               	movlw	255
 29563  0142FC  20E2               	addwfc	fsr1h,w,c
 29564  0142FE  6EDA               	movwf	fsr2h,c
 29565  014300  50DF               	movf	indf2,w,c
 29566  014302  020C               	mulwf	(btemp+11)^0,c
 29567                           
 29568                           ;stkvar	_temp @ sp[(-13)+8]
 29569  014304  0EFB               	movlw	-5
 29570  014306  006F FFCF FFE3     	movff	prodl,plusw1
 29571  01430C  0EFC               	movlw	-4
 29572  01430E  006F FFD3 FFE3     	movff	prodh,plusw1
 29573                           
 29574                           ;stkvar	_temp @ sp[(-13)+8]
 29575  014314  0EFB               	movlw	-5
 29576  014316  006F FF8C  F00B    	movff	plusw1,btemp+10
 29577  01431C  0EFC               	movlw	-4
 29578  01431E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29579  014324  500B               	movf	(btemp+10)^0,w,c
 29580  014326  6E05               	movwf	(btemp+4)^0,c
 29581  014328  500C               	movf	(btemp+11)^0,w,c
 29582  01432A  6E06               	movwf	(btemp+5)^0,c
 29583  01432C  6A07               	clrf	(btemp+6)^0,c
 29584  01432E  6A08               	clrf	(btemp+7)^0,c
 29585  014330  0060  F01C  F008   	movff	btemp+6,btemp+7
 29586  014336  0060  F018  F007   	movff	btemp+5,btemp+6
 29587  01433C  0060  F014  F006   	movff	btemp+4,btemp+5
 29588  014342  6A05               	clrf	(btemp+4)^0,c
 29589                           
 29590                           ;stkvar	_prod @ sp[(-13)+0]
 29591  014344  50E1               	movf	fsr1l,w,c
 29592  014346  0FF3               	addlw	-13
 29593  014348  6ED9               	movwf	fsr2l,c
 29594  01434A  50E2               	movf	fsr1h,w,c
 29595  01434C  6EDA               	movwf	fsr2h,c
 29596  01434E  0EFF               	movlw	255
 29597  014350  22DA               	addwfc	fsr2h,f,c
 29598  014352  5005               	movf	(btemp+4)^0,w,c
 29599  014354  26DE               	addwf	postinc2,f,c
 29600  014356  5006               	movf	(btemp+5)^0,w,c
 29601  014358  22DE               	addwfc	postinc2,f,c
 29602  01435A  5007               	movf	(btemp+6)^0,w,c
 29603  01435C  22DE               	addwfc	postinc2,f,c
 29604  01435E  5008               	movf	(btemp+7)^0,w,c
 29605  014360  22DE               	addwfc	postinc2,f,c
 29606                           
 29607                           ;stkvar	_prod @ sp[(-13)+0]
 29608  014362  50E1               	movf	fsr1l,w,c
 29609  014364  0FF3               	addlw	-13
 29610  014366  6ED9               	movwf	fsr2l,c
 29611  014368  50E2               	movf	fsr1h,w,c
 29612  01436A  6EDA               	movwf	fsr2h,c
 29613  01436C  0EFF               	movlw	255
 29614  01436E  22DA               	addwfc	fsr2h,f,c
 29615                           
 29616                           ;stkvar	_grs @ sp[(-13)+4]
 29617  014370  0EFA               	movlw	250
 29618  014372  24E1               	addwf	fsr1l,w,c
 29619  014374  6EE9               	movwf	fsr0l,c
 29620  014376  0EFF               	movlw	255
 29621  014378  20E2               	addwfc	fsr1h,w,c
 29622  01437A  6EEA               	movwf	fsr0h,c
 29623  01437C  50EF               	movf	indf0,w,c
 29624  01437E  26DE               	addwf	postinc2,f,c
 29625  014380  0E00               	movlw	0
 29626  014382  22DE               	addwfc	postinc2,f,c
 29627  014384  22DE               	addwfc	postinc2,f,c
 29628  014386  22DE               	addwfc	postinc2,f,c
 29629                           
 29630                           ;stkvar	_grs @ sp[(-13)+4]
 29631  014388  50E1               	movf	fsr1l,w,c
 29632  01438A  0FF7               	addlw	-9
 29633  01438C  6ED9               	movwf	fsr2l,c
 29634  01438E  50E2               	movf	fsr1h,w,c
 29635  014390  6EDA               	movwf	fsr2h,c
 29636  014392  0EFF               	movlw	255
 29637  014394  22DA               	addwfc	fsr2h,f,c
 29638  014396  0E08               	movlw	8
 29639  014398                     u6955:
 29640  014398  90D8               	bcf	status,0,c
 29641  01439A  36DE               	rlcf	postinc2,f,c
 29642  01439C  36DE               	rlcf	postinc2,f,c
 29643  01439E  36DE               	rlcf	postinc2,f,c
 29644  0143A0  36DD               	rlcf	postdec2,f,c
 29645  0143A2  52DD               	movf	postdec2,f,c
 29646  0143A4  52DD               	movf	postdec2,f,c
 29647  0143A6  2EE8               	decfsz	wreg,f,c
 29648  0143A8  D7F7               	goto	u6955
 29649  0143AA  0E82               	movlw	130
 29650  0143AC  6E0B               	movwf	(btemp+10)^0,c
 29651  0143AE  0EFF               	movlw	255
 29652  0143B0  6E0C               	movwf	(btemp+11)^0,c
 29653                           
 29654                           ;stkvar	_bexp @ sp[(-13)+10]
 29655  0143B2  0EFD               	movlw	-3
 29656  0143B4  50E3               	movf	plusw1,w,c
 29657  0143B6  6E09               	movwf	(btemp+8)^0,c
 29658  0143B8  6A0A               	clrf	(btemp+9)^0,c
 29659                           
 29660                           ;stkvar	_aexp @ sp[(-13)+11]
 29661  0143BA  0EFE               	movlw	-2
 29662  0143BC  50E3               	movf	plusw1,w,c
 29663  0143BE  2609               	addwf	(btemp+8)^0,f,c
 29664  0143C0  0E00               	movlw	0
 29665  0143C2  220A               	addwfc	(btemp+9)^0,f,c
 29666  0143C4  500B               	movf	(btemp+10)^0,w,c
 29667  0143C6  2609               	addwf	(btemp+8)^0,f,c
 29668  0143C8  500C               	movf	(btemp+11)^0,w,c
 29669  0143CA  220A               	addwfc	(btemp+9)^0,f,c
 29670                           
 29671                           ;stkvar	_temp @ sp[(-13)+8]
 29672  0143CC  0EFB               	movlw	-5
 29673  0143CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29674  0143D4  0EFC               	movlw	-4
 29675  0143D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29676  0143DC  D021               	goto	l8616
 29677  0143DE                     l8606:
 29678                           
 29679                           ;stkvar	_prod @ sp[(-13)+0]
 29680  0143DE  90D8               	bcf	status,0,c
 29681  0143E0  0EF3               	movlw	-13
 29682  0143E2  36E3               	rlcf	plusw1,f,c
 29683  0143E4  0EF4               	movlw	-12
 29684  0143E6  36E3               	rlcf	plusw1,f,c
 29685  0143E8  0EF5               	movlw	-11
 29686  0143EA  36E3               	rlcf	plusw1,f,c
 29687  0143EC  0EF6               	movlw	-10
 29688  0143EE  36E3               	rlcf	plusw1,f,c
 29689                           
 29690                           ;stkvar	_grs @ sp[(-13)+4]
 29691  0143F0  0EFA               	movlw	-6
 29692  0143F2  AEE3               	btfss	plusw1,7,c
 29693  0143F4  D002               	goto	l8612
 29694                           
 29695                           ;stkvar	_prod @ sp[(-13)+0]
 29696  0143F6  0EF3               	movlw	-13
 29697  0143F8  80E3               	bsf	plusw1,0,c
 29698  0143FA                     l8612:
 29699                           
 29700                           ;stkvar	_grs @ sp[(-13)+4]
 29701  0143FA  90D8               	bcf	status,0,c
 29702  0143FC  0EF7               	movlw	-9
 29703  0143FE  36E3               	rlcf	plusw1,f,c
 29704  014400  0EF8               	movlw	-8
 29705  014402  36E3               	rlcf	plusw1,f,c
 29706  014404  0EF9               	movlw	-7
 29707  014406  36E3               	rlcf	plusw1,f,c
 29708  014408  0EFA               	movlw	-6
 29709  01440A  36E3               	rlcf	plusw1,f,c
 29710                           
 29711                           ;stkvar	_temp @ sp[(-13)+8]
 29712  01440C  50E1               	movf	fsr1l,w,c
 29713  01440E  0FFB               	addlw	-5
 29714  014410  6ED9               	movwf	fsr2l,c
 29715  014412  50E2               	movf	fsr1h,w,c
 29716  014414  6EDA               	movwf	fsr2h,c
 29717  014416  0EFF               	movlw	255
 29718  014418  22DA               	addwfc	fsr2h,f,c
 29719  01441A  06DE               	decf	postinc2,f,c
 29720  01441C  0E00               	movlw	0
 29721  01441E  5ADD               	subwfb	postdec2,f,c
 29722  014420                     l8616:
 29723                           
 29724                           ;stkvar	_prod @ sp[(-13)+0]
 29725  014420  0EF5               	movlw	-11
 29726  014422  AEE3               	btfss	plusw1,7,c
 29727  014424  D7DC               	goto	l8606
 29728                           
 29729                           ;stkvar	_aexp @ sp[(-13)+11]
 29730  014426  0EFE               	movlw	-2
 29731  014428  6AE3               	clrf	plusw1,c
 29732                           
 29733                           ;stkvar	_grs @ sp[(-13)+4]
 29734  01442A  0EFA               	movlw	-6
 29735  01442C  AEE3               	btfss	plusw1,7,c
 29736  01442E  D020               	goto	l8630
 29737                           
 29738                           ;stkvar	_grs @ sp[(-13)+4]
 29739  014430  50E1               	movf	fsr1l,w,c
 29740  014432  0FF7               	addlw	-9
 29741  014434  6ED9               	movwf	fsr2l,c
 29742  014436  50E2               	movf	fsr1h,w,c
 29743  014438  6EDA               	movwf	fsr2h,c
 29744  01443A  0EFF               	movlw	255
 29745  01443C  22DA               	addwfc	fsr2h,f,c
 29746  01443E  0EFF               	movlw	255
 29747  014440  14DE               	andwf	postinc2,w,c
 29748  014442  6E09               	movwf	(btemp+8)^0,c
 29749  014444  0EFF               	movlw	255
 29750  014446  14DE               	andwf	postinc2,w,c
 29751  014448  6E0A               	movwf	(btemp+9)^0,c
 29752  01444A  0EFF               	movlw	255
 29753  01444C  14DE               	andwf	postinc2,w,c
 29754  01444E  6E0B               	movwf	(btemp+10)^0,c
 29755  014450  0E7F               	movlw	127
 29756  014452  14DE               	andwf	postinc2,w,c
 29757  014454  6E0C               	movwf	(btemp+11)^0,c
 29758  014456  5009               	movf	(btemp+8)^0,w,c
 29759  014458  100A               	iorwf	(btemp+9)^0,w,c
 29760  01445A  100B               	iorwf	(btemp+10)^0,w,c
 29761  01445C  100C               	iorwf	(btemp+11)^0,w,c
 29762  01445E  B4D8               	btfsc	status,2,c
 29763  014460  D004               	goto	l8626
 29764  014462                     u6990:
 29765                           
 29766                           ;stkvar	_aexp @ sp[(-13)+11]
 29767  014462  0EFE               	movlw	-2
 29768  014464  6AE3               	clrf	plusw1,c
 29769  014466  2AE3               	incf	plusw1,f,c
 29770  014468  D003               	goto	l8630
 29771  01446A                     l8626:
 29772                           
 29773                           ;stkvar	_prod @ sp[(-13)+0]
 29774  01446A  0EF3               	movlw	-13
 29775  01446C  B0E3               	btfsc	plusw1,0,c
 29776  01446E  D7F9               	goto	u6990
 29777  014470                     l8630:
 29778                           
 29779                           ;stkvar	_aexp @ sp[(-13)+11]
 29780  014470  0EFE               	movlw	-2
 29781  014472  50E3               	movf	plusw1,w,c
 29782  014474  B4D8               	btfsc	status,2,c
 29783  014476  D036               	goto	l8640
 29784                           
 29785                           ;stkvar	_prod @ sp[(-13)+0]
 29786  014478  50E1               	movf	fsr1l,w,c
 29787  01447A  0FF3               	addlw	-13
 29788  01447C  6ED9               	movwf	fsr2l,c
 29789  01447E  50E2               	movf	fsr1h,w,c
 29790  014480  6EDA               	movwf	fsr2h,c
 29791  014482  0EFF               	movlw	255
 29792  014484  22DA               	addwfc	fsr2h,f,c
 29793  014486  2ADE               	incf	postinc2,f,c
 29794  014488  0E00               	movlw	0
 29795  01448A  22DE               	addwfc	postinc2,f,c
 29796  01448C  22DE               	addwfc	postinc2,f,c
 29797  01448E  22DE               	addwfc	postinc2,f,c
 29798                           
 29799                           ;stkvar	_prod @ sp[(-13)+0]
 29800  014490  0EF6               	movlw	-10
 29801  014492  A0E3               	btfss	plusw1,0,c
 29802  014494  D027               	goto	l8640
 29803  014496  0E01               	movlw	1
 29804  014498  6E0C               	movwf	(btemp+11)^0,c
 29805                           
 29806                           ;stkvar	_prod @ sp[(-13)+0]
 29807  01449A  50E1               	movf	fsr1l,w,c
 29808  01449C  0FF3               	addlw	-13
 29809  01449E  6ED9               	movwf	fsr2l,c
 29810  0144A0  50E2               	movf	fsr1h,w,c
 29811  0144A2  6EDA               	movwf	fsr2h,c
 29812  0144A4  0EFF               	movlw	255
 29813  0144A6  22DA               	addwfc	fsr2h,f,c
 29814  0144A8  280C               	incf	(btemp+11)^0,w,c
 29815  0144AA  52DE               	movf	postinc2,f,c
 29816  0144AC  D008               	goto	u7030
 29817  0144AE                     u7035:
 29818  0144AE  52DE               	movf	postinc2,f,c
 29819  0144B0  90D8               	bcf	status,0,c
 29820  0144B2  BEDC               	btfsc	preinc2,7,c
 29821  0144B4  80D8               	bsf	status,0,c
 29822  0144B6  32DD               	rrcf	postdec2,f,c
 29823  0144B8  32DD               	rrcf	postdec2,f,c
 29824  0144BA  32DD               	rrcf	postdec2,f,c
 29825  0144BC  32DE               	rrcf	postinc2,f,c
 29826  0144BE                     u7030:
 29827  0144BE  2EE8               	decfsz	wreg,f,c
 29828  0144C0  D7F6               	goto	u7035
 29829                           
 29830                           ;stkvar	_temp @ sp[(-13)+8]
 29831  0144C2  0EFB               	movlw	-5
 29832  0144C4  50E3               	movf	plusw1,w,c
 29833  0144C6  0F01               	addlw	1
 29834  0144C8  6E01               	movwf	btemp^0,c
 29835  0144CA  0EFB               	movlw	-5
 29836  0144CC  0060  F007  FFE3   	movff	btemp,plusw1
 29837  0144D2  6A01               	clrf	btemp^0,c
 29838  0144D4  0EFC               	movlw	-4
 29839  0144D6  50E3               	movf	plusw1,w,c
 29840  0144D8  2001               	addwfc	btemp^0,w,c
 29841  0144DA  6E01               	movwf	btemp^0,c
 29842  0144DC  0EFC               	movlw	-4
 29843  0144DE  0060  F007  FFE3   	movff	btemp,plusw1
 29844  0144E4                     l8640:
 29845                           
 29846                           ;stkvar	_temp @ sp[(-13)+8]
 29847  0144E4  0EFC               	movlw	-4
 29848  0144E6  BEE3               	btfsc	plusw1,7,c
 29849  0144E8  D020               	goto	l8644
 29850  0144EA  0EFC               	movlw	-4
 29851  0144EC  50E3               	movf	plusw1,w,c
 29852  0144EE  E104               	bnz	u7040
 29853  0144F0  0EFB               	movlw	-5
 29854  0144F2  28E3               	incf	plusw1,w,c
 29855  0144F4  A0D8               	btfss	status,0,c
 29856  0144F6  D019               	goto	l8644
 29857  0144F8                     u7040:
 29858  0144F8  0E00               	movlw	0
 29859  0144FA  6E09               	movwf	(btemp+8)^0,c
 29860  0144FC  0E00               	movlw	0
 29861  0144FE  6E0A               	movwf	(btemp+9)^0,c
 29862  014500  0E80               	movlw	128
 29863  014502  6E0B               	movwf	(btemp+10)^0,c
 29864  014504  0E7F               	movlw	127
 29865  014506  6E0C               	movwf	(btemp+11)^0,c
 29866                           
 29867                           ;stkvar	_prod @ sp[(-13)+0]
 29868  014508  0EF3               	movlw	-13
 29869  01450A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29870  014510  0EF4               	movlw	-12
 29871  014512  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29872  014518  0EF5               	movlw	-11
 29873  01451A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29874  014520  0EF6               	movlw	-10
 29875  014522  0060  F033  FFE3   	movff	btemp+11,plusw1
 29876  014528  D044               	goto	l8660
 29877  01452A                     l8644:
 29878                           
 29879                           ;stkvar	_temp @ sp[(-13)+8]
 29880  01452A  0EFC               	movlw	-4
 29881  01452C  BEE3               	btfsc	plusw1,7,c
 29882  01452E  D007               	goto	u7050
 29883  014530  0EFC               	movlw	-4
 29884  014532  50E3               	movf	plusw1,w,c
 29885  014534  E10F               	bnz	l8650
 29886  014536  0EFB               	movlw	-5
 29887  014538  04E3               	decf	plusw1,w,c
 29888  01453A  B0D8               	btfsc	status,0,c
 29889  01453C  D00B               	goto	l8650
 29890  01453E                     u7050:
 29891                           
 29892                           ;stkvar	_prod @ sp[(-13)+0]
 29893  01453E  0EF3               	movlw	-13
 29894  014540  6AE3               	clrf	plusw1,c
 29895  014542  0EF4               	movlw	-12
 29896  014544  6AE3               	clrf	plusw1,c
 29897  014546  0EF5               	movlw	-11
 29898  014548  6AE3               	clrf	plusw1,c
 29899  01454A  0EF6               	movlw	-10
 29900  01454C  6AE3               	clrf	plusw1,c
 29901                           
 29902                           ;stkvar	_sign @ sp[(-13)+12]
 29903  01454E  0EFF               	movlw	-1
 29904  014550  6AE3               	clrf	plusw1,c
 29905  014552  D02F               	goto	l8660
 29906  014554                     l8650:
 29907                           
 29908                           ;stkvar	_temp @ sp[(-13)+8]
 29909                           ;stkvar	_bexp @ sp[(-13)+10]
 29910  014554  0EFB               	movlw	-5
 29911  014556  006F FF8C  F001    	movff	plusw1,btemp
 29912  01455C  0EFD               	movlw	-3
 29913  01455E  0060  F007  FFE3   	movff	btemp,plusw1
 29914                           
 29915                           ;stkvar	_prod @ sp[(-13)+0]
 29916  014564  50E1               	movf	fsr1l,w,c
 29917  014566  0FF3               	addlw	-13
 29918  014568  6ED9               	movwf	fsr2l,c
 29919  01456A  50E2               	movf	fsr1h,w,c
 29920  01456C  6EDA               	movwf	fsr2h,c
 29921  01456E  0EFF               	movlw	255
 29922  014570  22DA               	addwfc	fsr2h,f,c
 29923  014572  0EFF               	movlw	255
 29924  014574  16DE               	andwf	postinc2,f,c
 29925  014576  0EFF               	movlw	255
 29926  014578  16DE               	andwf	postinc2,f,c
 29927  01457A  0E7F               	movlw	127
 29928  01457C  16DE               	andwf	postinc2,f,c
 29929  01457E  0E00               	movlw	0
 29930  014580  16DE               	andwf	postinc2,f,c
 29931                           
 29932                           ;stkvar	_bexp @ sp[(-13)+10]
 29933  014582  0EFD               	movlw	-3
 29934  014584  A0E3               	btfss	plusw1,0,c
 29935  014586  D008               	goto	l8658
 29936                           
 29937                           ;stkvar	_prod @ sp[(-13)+0]
 29938  014588  0EF5               	movlw	245
 29939  01458A  24E1               	addwf	fsr1l,w,c
 29940  01458C  6ED9               	movwf	fsr2l,c
 29941  01458E  0EFF               	movlw	255
 29942  014590  20E2               	addwfc	fsr1h,w,c
 29943  014592  6EDA               	movwf	fsr2h,c
 29944  014594  0E00               	movlw	0
 29945  014596  8EDB               	bsf	plusw2,7,c
 29946  014598                     l8658:
 29947                           
 29948                           ;stkvar	_prod @ sp[(-13)+0]
 29949  014598  0EF6               	movlw	246
 29950  01459A  24E1               	addwf	fsr1l,w,c
 29951  01459C  6ED9               	movwf	fsr2l,c
 29952  01459E  0EFF               	movlw	255
 29953  0145A0  20E2               	addwfc	fsr1h,w,c
 29954  0145A2  6EDA               	movwf	fsr2h,c
 29955                           
 29956                           ;stkvar	_bexp @ sp[(-13)+10]
 29957  0145A4  0EFD               	movlw	-3
 29958  0145A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 29959  0145AC  90D8               	bcf	status,0,c
 29960  0145AE  300C               	rrcf	(btemp+11)^0,w,c
 29961  0145B0  6EDF               	movwf	indf2,c
 29962  0145B2                     l8660:
 29963                           
 29964                           ;stkvar	_sign @ sp[(-13)+12]
 29965  0145B2  0EFF               	movlw	-1
 29966  0145B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29967                           
 29968                           ;stkvar	_prod @ sp[(-13)+0]
 29969  0145BA  0EF6               	movlw	246
 29970  0145BC  24E1               	addwf	fsr1l,w,c
 29971  0145BE  6ED9               	movwf	fsr2l,c
 29972  0145C0  0EFF               	movlw	255
 29973  0145C2  20E2               	addwfc	fsr1h,w,c
 29974  0145C4  6EDA               	movwf	fsr2h,c
 29975  0145C6  500C               	movf	(btemp+11)^0,w,c
 29976  0145C8  12DF               	iorwf	indf2,f,c
 29977                           
 29978                           ;stkvar	_prod @ sp[(-13)+0]
 29979  0145CA  0EF3               	movlw	-13
 29980  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 29981  0145D2  0EF4               	movlw	-12
 29982  0145D4  006F FF8C  F002    	movff	plusw1,btemp+1
 29983  0145DA  0EF5               	movlw	-11
 29984  0145DC  006F FF8C  F003    	movff	plusw1,btemp+2
 29985  0145E2  0EF6               	movlw	-10
 29986  0145E4  006F FF8C  F004    	movff	plusw1,btemp+3
 29987  0145EA                     l3089:
 29988                           
 29989                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29990  0145EA  0EEB               	movlw	235
 29991  0145EC  26E1               	addwf	fsr1l,f,c
 29992  0145EE  0EFF               	movlw	255
 29993  0145F0  22E2               	addwfc	fsr1h,f,c
 29994  0145F2  0012               	return		;funcret
 29995  0145F4                     __end_of___flmul:
 29996                           	opt callstack 0
 29997                           
 29998 ;; *************** function _SYSTEM_Initialize *****************
 29999 ;; Defined at:
 30000 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30001 ;; Parameters:    Size  Location     Type
 30002 ;;		None
 30003 ;; Auto vars:     Size  Location     Type
 30004 ;;		None
 30005 ;; Return value:  Size  Location     Type
 30006 ;;                  1  [STACK] void 
 30007 ;; Registers used:
 30008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 30009 ;; Tracked objects:
 30010 ;;		On entry : 0/0
 30011 ;;		On exit  : 3F/3C
 30012 ;;		Unchanged: 0/0
 30013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30018 ;;Total ram usage:        0 bytes
 30019 ;; Hardware stack levels used:    1
 30020 ;; Hardware stack levels required when called:   17
 30021 ;; This function calls:
 30022 ;;		_ADCC_Initialize
 30023 ;;		_CLKREF_Initialize
 30024 ;;		_DMA1_Initialize
 30025 ;;		_DMA2_Initialize
 30026 ;;		_EXT_INT_Initialize
 30027 ;;		_FVR_Initialize
 30028 ;;		_INTERRUPT_Initialize
 30029 ;;		_OSCILLATOR_Initialize
 30030 ;;		_PIN_MANAGER_Initialize
 30031 ;;		_PMD_Initialize
 30032 ;;		_PWM8_Initialize
 30033 ;;		_SPI1_Initialize
 30034 ;;		_TMR2_Initialize
 30035 ;;		_TMR3_Initialize
 30036 ;;		_TMR5_Initialize
 30037 ;;		_TMR6_Initialize
 30038 ;;		_UART1_Initialize
 30039 ;;		_UART2_Initialize
 30040 ;; This function is called by:
 30041 ;;		_main
 30042 ;; This function uses a reentrant model
 30043 ;;
 30044                           
 30045                           	psect	text114
 30046  01B7AA                     __ptext114:
 30047                           	opt callstack 0
 30048  01B7AA                     _SYSTEM_Initialize:
 30049                           	opt callstack 13
 30050                           
 30051                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30052                           
 30053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30054                           ;incstack = 0
 30055  01B7AA  ECB9  F0D9         	call	_INTERRUPT_Initialize	;wreg free
 30056                           
 30057                           ; BSR set to: 57
 30058                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30059  01B7AE  EC42  F0E2         	call	_PMD_Initialize	;wreg free
 30060                           
 30061                           ; BSR set to: 57
 30062                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30063  01B7B2  EC1A  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 30064                           
 30065                           ; BSR set to: 58
 30066                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30067  01B7B6  EC37  F0E2         	call	_OSCILLATOR_Initialize	;wreg free
 30068                           
 30069                           ; BSR set to: 57
 30070                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 30071  01B7BA  ECC5  F0E2         	call	_FVR_Initialize	;wreg free
 30072                           
 30073                           ; BSR set to: 62
 30074                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 30075  01B7BE  EC4E  F0D9         	call	_ADCC_Initialize	;wreg free
 30076                           
 30077                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 30078  01B7C2  EC15  F0E2         	call	_TMR2_Initialize	;wreg free
 30079                           
 30080                           ; BSR set to: 57
 30081                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 30082  01B7C6  EC2C  F0E2         	call	_PWM8_Initialize	;wreg free
 30083                           
 30084                           ; BSR set to: 63
 30085                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 30086  01B7CA  ECCE  F0DE         	call	_EXT_INT_Initialize	;wreg free
 30087                           
 30088                           ; BSR set to: 57
 30089                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 30090  01B7CE  ECA2  F0DF         	call	_TMR6_Initialize	;wreg free
 30091                           
 30092                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 30093  01B7D2  EC66  F0DC         	call	_TMR3_Initialize	;wreg free
 30094                           
 30095                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 30096  01B7D6  EC42  F0DC         	call	_TMR5_Initialize	;wreg free
 30097                           
 30098                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 30099  01B7DA  EC1E  F0DC         	call	_UART1_Initialize	;wreg free
 30100                           
 30101                           ; BSR set to: 57
 30102                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 30103  01B7DE  EC80  F0DA         	call	_UART2_Initialize	;wreg free
 30104                           
 30105                           ; BSR set to: 57
 30106                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 30107  01B7E2  EC21  F0E2         	call	_SPI1_Initialize	;wreg free
 30108                           
 30109                           ; BSR set to: 61
 30110                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 30111  01B7E6  EC0A  F0DB         	call	_DMA2_Initialize	;wreg free
 30112                           
 30113                           ; BSR set to: 59
 30114                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 30115  01B7EA  EC19  F0D9         	call	_DMA1_Initialize	;wreg free
 30116                           
 30117                           ; BSR set to: 59
 30118                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 30119  01B7EE  EC99  F0E2         	call	_CLKREF_Initialize	;wreg free
 30120                           
 30121                           ; BSR set to: 60
 30122                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30123  01B7F2  0012               	return		;funcret
 30124  01B7F4                     __end_of_SYSTEM_Initialize:
 30125                           	opt callstack 0
 30126                           
 30127 ;; *************** function _UART2_Initialize *****************
 30128 ;; Defined at:
 30129 ;;		line 78 in file "mcc_generated_files/uart2.c"
 30130 ;; Parameters:    Size  Location     Type
 30131 ;;		None
 30132 ;; Auto vars:     Size  Location     Type
 30133 ;;		None
 30134 ;; Return value:  Size  Location     Type
 30135 ;;                  1  [STACK] void 
 30136 ;; Registers used:
 30137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30138 ;; Tracked objects:
 30139 ;;		On entry : 3F/39
 30140 ;;		On exit  : 3F/39
 30141 ;;		Unchanged: 0/0
 30142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30147 ;;Total ram usage:        0 bytes
 30148 ;; Hardware stack levels used:    1
 30149 ;; Hardware stack levels required when called:   16
 30150 ;; This function calls:
 30151 ;;		_UART2_SetRxInterruptHandler
 30152 ;;		_UART2_SetTxInterruptHandler
 30153 ;; This function is called by:
 30154 ;;		_SYSTEM_Initialize
 30155 ;; This function uses a reentrant model
 30156 ;;
 30157                           
 30158                           	psect	text115
 30159  01B500                     __ptext115:
 30160                           	opt callstack 0
 30161  01B500                     _UART2_Initialize:
 30162                           	opt callstack 13
 30163                           
 30164                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 30165                           
 30166                           ; BSR set to: 60
 30167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30168                           ;incstack = 0
 30169  01B500  0139               	movlb	57	; () banked
 30170  01B502  9596               	bcf	150,2,b	;volatile
 30171                           
 30172                           ; BSR set to: 57
 30173                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 30174  01B504  0E26               	movlw	low _UART2_Receive_ISR
 30175  01B506  6EE6               	movwf	postinc1,c
 30176  01B508  0EC3               	movlw	high _UART2_Receive_ISR
 30177  01B50A  6EE6               	movwf	postinc1,c
 30178  01B50C  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 30179  01B50E  6EE6               	movwf	postinc1,c
 30180  01B510  ECF3  F0DF         	call	_UART2_SetRxInterruptHandler	;wreg free
 30181                           
 30182                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 30183  01B514  0139               	movlb	57	; () banked
 30184  01B516  9796               	bcf	150,3,b	;volatile
 30185                           
 30186                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 30187  01B518  0E18               	movlw	low _UART2_Transmit_ISR
 30188  01B51A  6EE6               	movwf	postinc1,c
 30189  01B51C  0EBF               	movlw	high _UART2_Transmit_ISR
 30190  01B51E  6EE6               	movwf	postinc1,c
 30191  01B520  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 30192  01B522  6EE6               	movwf	postinc1,c
 30193  01B524  ECDF  F0DF         	call	_UART2_SetTxInterruptHandler	;wreg free
 30194                           
 30195                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 30196  01B528  013D               	movlb	61	; () banked
 30197  01B52A  6BD4               	clrf	212,b	;volatile
 30198                           
 30199                           ; BSR set to: 61
 30200                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 30201  01B52C  6BD6               	clrf	214,b	;volatile
 30202                           
 30203                           ; BSR set to: 61
 30204                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 30205  01B52E  6BD8               	clrf	216,b	;volatile
 30206                           
 30207                           ; BSR set to: 61
 30208                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 30209  01B530  0EB0               	movlw	176
 30210  01B532  6FDA               	movwf	218,b	;volatile
 30211                           
 30212                           ; BSR set to: 61
 30213                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 30214  01B534  0E80               	movlw	128
 30215  01B536  6FDB               	movwf	219,b	;volatile
 30216                           
 30217                           ; BSR set to: 61
 30218                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 30219  01B538  6BDC               	clrf	220,b	;volatile
 30220                           
 30221                           ; BSR set to: 61
 30222                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 30223  01B53A  0E82               	movlw	130
 30224  01B53C  6FDD               	movwf	221,b	;volatile
 30225                           
 30226                           ; BSR set to: 61
 30227                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 30228  01B53E  0E06               	movlw	6
 30229  01B540  6FDE               	movwf	222,b	;volatile
 30230                           
 30231                           ; BSR set to: 61
 30232                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 30233  01B542  6BDF               	clrf	223,b	;volatile
 30234                           
 30235                           ; BSR set to: 61
 30236                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 30237  01B544  6BE0               	clrf	224,b	;volatile
 30238                           
 30239                           ; BSR set to: 61
 30240                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 30241  01B546  6BE1               	clrf	225,b	;volatile
 30242                           
 30243                           ; BSR set to: 61
 30244                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 30245  01B548  6BE2               	clrf	226,b	;volatile
 30246                           
 30247                           ; BSR set to: 61
 30248                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 30249  01B54A  0100               	movlb	0	; () banked
 30250  01B54C  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 30251                           
 30252                           ; BSR set to: 0
 30253                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 30254  01B54E  6A46               	clrf	_uart2TxTail^0,c	;volatile
 30255                           
 30256                           ; BSR set to: 0
 30257                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 30258  01B550  0E40               	movlw	64
 30259  01B552  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 30260                           
 30261                           ; BSR set to: 0
 30262                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 30263  01B554  6A44               	clrf	_uart2RxHead^0,c	;volatile
 30264                           
 30265                           ; BSR set to: 0
 30266                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 30267  01B556  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 30268                           
 30269                           ; BSR set to: 0
 30270                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 30271  01B558  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 30272                           
 30273                           ; BSR set to: 0
 30274                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 30275  01B55A  0139               	movlb	57	; () banked
 30276  01B55C  8596               	bsf	150,2,b	;volatile
 30277                           
 30278                           ; BSR set to: 57
 30279                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30280  01B55E  0012               	return		;funcret
 30281  01B560                     __end_of_UART2_Initialize:
 30282                           	opt callstack 0
 30283                           
 30284 ;; *************** function _UART2_SetTxInterruptHandler *****************
 30285 ;; Defined at:
 30286 ;;		line 252 in file "mcc_generated_files/uart2.c"
 30287 ;; Parameters:    Size  Location     Type
 30288 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30289 ;;		 -> UART2_Transmit_ISR(1), 
 30290 ;; Auto vars:     Size  Location     Type
 30291 ;;		None
 30292 ;; Return value:  Size  Location     Type
 30293 ;;                  1  [STACK] void 
 30294 ;; Registers used:
 30295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30296 ;; Tracked objects:
 30297 ;;		On entry : 3F/39
 30298 ;;		On exit  : 0/0
 30299 ;;		Unchanged: 0/0
 30300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30305 ;;Total ram usage:        0 bytes
 30306 ;; Hardware stack levels used:    1
 30307 ;; Hardware stack levels required when called:   15
 30308 ;; This function calls:
 30309 ;;		Nothing
 30310 ;; This function is called by:
 30311 ;;		_UART2_Initialize
 30312 ;; This function uses a reentrant model
 30313 ;;
 30314                           
 30315                           	psect	text116
 30316  01BFBE                     __ptext116:
 30317                           	opt callstack 0
 30318  01BFBE                     _UART2_SetTxInterruptHandler:
 30319                           	opt callstack 13
 30320                           
 30321                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30322                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30323                           
 30324                           ; BSR set to: 57
 30325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30326                           ;incstack = 0
 30327  01BFBE  50E1               	movf	fsr1l,w,c
 30328  01BFC0  0FFD               	addlw	-3
 30329  01BFC2  6ED9               	movwf	fsr2l,c
 30330  01BFC4  50E2               	movf	fsr1h,w,c
 30331  01BFC6  6EDA               	movwf	fsr2h,c
 30332  01BFC8  0EFF               	movlw	255
 30333  01BFCA  22DA               	addwfc	fsr2h,f,c
 30334  01BFCC  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30335  01BFD2  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30336  01BFD8  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30337                           
 30338                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30339  01BFDE  52E5               	movf	postdec1,f,c
 30340  01BFE0  52E5               	movf	postdec1,f,c
 30341  01BFE2  52E5               	movf	postdec1,f,c
 30342  01BFE4  0012               	return		;funcret
 30343  01BFE6                     __end_of_UART2_SetTxInterruptHandler:
 30344                           	opt callstack 0
 30345                           
 30346 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30347 ;; Defined at:
 30348 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30349 ;; Parameters:    Size  Location     Type
 30350 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30351 ;;		 -> UART2_Receive_ISR(1), 
 30352 ;; Auto vars:     Size  Location     Type
 30353 ;;		None
 30354 ;; Return value:  Size  Location     Type
 30355 ;;                  1  [STACK] void 
 30356 ;; Registers used:
 30357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30358 ;; Tracked objects:
 30359 ;;		On entry : 3F/39
 30360 ;;		On exit  : 0/0
 30361 ;;		Unchanged: 0/0
 30362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30367 ;;Total ram usage:        0 bytes
 30368 ;; Hardware stack levels used:    1
 30369 ;; Hardware stack levels required when called:   15
 30370 ;; This function calls:
 30371 ;;		Nothing
 30372 ;; This function is called by:
 30373 ;;		_UART2_Initialize
 30374 ;; This function uses a reentrant model
 30375 ;;
 30376                           
 30377                           	psect	text117
 30378  01BFE6                     __ptext117:
 30379                           	opt callstack 0
 30380  01BFE6                     _UART2_SetRxInterruptHandler:
 30381                           	opt callstack 13
 30382                           
 30383                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30384                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30385                           
 30386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30387                           ;incstack = 0
 30388  01BFE6  50E1               	movf	fsr1l,w,c
 30389  01BFE8  0FFD               	addlw	-3
 30390  01BFEA  6ED9               	movwf	fsr2l,c
 30391  01BFEC  50E2               	movf	fsr1h,w,c
 30392  01BFEE  6EDA               	movwf	fsr2h,c
 30393  01BFF0  0EFF               	movlw	255
 30394  01BFF2  22DA               	addwfc	fsr2h,f,c
 30395  01BFF4  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30396  01BFFA  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30397  01C000  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30398                           
 30399                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30400  01C006  52E5               	movf	postdec1,f,c
 30401  01C008  52E5               	movf	postdec1,f,c
 30402  01C00A  52E5               	movf	postdec1,f,c
 30403  01C00C  0012               	return		;funcret
 30404  01C00E                     __end_of_UART2_SetRxInterruptHandler:
 30405                           	opt callstack 0
 30406                           
 30407 ;; *************** function _UART1_Initialize *****************
 30408 ;; Defined at:
 30409 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30410 ;; Parameters:    Size  Location     Type
 30411 ;;		None
 30412 ;; Auto vars:     Size  Location     Type
 30413 ;;		None
 30414 ;; Return value:  Size  Location     Type
 30415 ;;                  1  [STACK] void 
 30416 ;; Registers used:
 30417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30418 ;; Tracked objects:
 30419 ;;		On entry : 0/39
 30420 ;;		On exit  : 3F/39
 30421 ;;		Unchanged: 0/0
 30422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30427 ;;Total ram usage:        0 bytes
 30428 ;; Hardware stack levels used:    1
 30429 ;; Hardware stack levels required when called:   16
 30430 ;; This function calls:
 30431 ;;		_UART1_SetRxInterruptHandler
 30432 ;; This function is called by:
 30433 ;;		_SYSTEM_Initialize
 30434 ;; This function uses a reentrant model
 30435 ;;
 30436                           
 30437                           	psect	text118
 30438  01B83C                     __ptext118:
 30439                           	opt callstack 0
 30440  01B83C                     _UART1_Initialize:
 30441                           	opt callstack 13
 30442                           
 30443                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30444                           
 30445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30446                           ;incstack = 0
 30447  01B83C  0139               	movlb	57	; () banked
 30448  01B83E  9793               	bcf	147,3,b	;volatile
 30449                           
 30450                           ; BSR set to: 57
 30451                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30452  01B840  0EE4               	movlw	low _UART1_Receive_ISR
 30453  01B842  6EE6               	movwf	postinc1,c
 30454  01B844  0EC2               	movlw	high _UART1_Receive_ISR
 30455  01B846  6EE6               	movwf	postinc1,c
 30456  01B848  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30457  01B84A  6EE6               	movwf	postinc1,c
 30458  01B84C  EC07  F0E0         	call	_UART1_SetRxInterruptHandler	;wreg free
 30459                           
 30460                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30461  01B850  013D               	movlb	61	; () banked
 30462  01B852  6BEC               	clrf	236,b	;volatile
 30463                           
 30464                           ; BSR set to: 61
 30465                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30466  01B854  6BED               	clrf	237,b	;volatile
 30467                           
 30468                           ; BSR set to: 61
 30469                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30470  01B856  6BEE               	clrf	238,b	;volatile
 30471                           
 30472                           ; BSR set to: 61
 30473                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30474  01B858  6BEF               	clrf	239,b	;volatile
 30475                           
 30476                           ; BSR set to: 61
 30477                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30478  01B85A  6BF0               	clrf	240,b	;volatile
 30479                           
 30480                           ; BSR set to: 61
 30481                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30482  01B85C  6BF1               	clrf	241,b	;volatile
 30483                           
 30484                           ; BSR set to: 61
 30485                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30486  01B85E  0EB0               	movlw	176
 30487  01B860  6FF2               	movwf	242,b	;volatile
 30488                           
 30489                           ; BSR set to: 61
 30490                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30491  01B862  0E80               	movlw	128
 30492  01B864  6FF3               	movwf	243,b	;volatile
 30493                           
 30494                           ; BSR set to: 61
 30495                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30496  01B866  6BF4               	clrf	244,b	;volatile
 30497                           
 30498                           ; BSR set to: 61
 30499                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30500  01B868  0E8A               	movlw	138
 30501  01B86A  6FF5               	movwf	245,b	;volatile
 30502                           
 30503                           ; BSR set to: 61
 30504                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30505  01B86C  6BF6               	clrf	246,b	;volatile
 30506                           
 30507                           ; BSR set to: 61
 30508                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30509  01B86E  6BF7               	clrf	247,b	;volatile
 30510                           
 30511                           ; BSR set to: 61
 30512                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30513  01B870  6BF8               	clrf	248,b	;volatile
 30514                           
 30515                           ; BSR set to: 61
 30516                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30517  01B872  6BF9               	clrf	249,b	;volatile
 30518                           
 30519                           ; BSR set to: 61
 30520                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30521  01B874  6BFA               	clrf	250,b	;volatile
 30522                           
 30523                           ; BSR set to: 61
 30524                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30525  01B876  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30526                           
 30527                           ; BSR set to: 61
 30528                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30529  01B878  0100               	movlb	0	; () banked
 30530  01B87A  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30531                           
 30532                           ; BSR set to: 0
 30533                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30534  01B87C  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30535                           
 30536                           ; BSR set to: 0
 30537                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30538  01B87E  0139               	movlb	57	; () banked
 30539  01B880  8793               	bsf	147,3,b	;volatile
 30540                           
 30541                           ; BSR set to: 57
 30542                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30543  01B882  0012               	return		;funcret
 30544  01B884                     __end_of_UART1_Initialize:
 30545                           	opt callstack 0
 30546                           
 30547 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30548 ;; Defined at:
 30549 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30550 ;; Parameters:    Size  Location     Type
 30551 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30552 ;;		 -> UART1_Receive_ISR(1), 
 30553 ;; Auto vars:     Size  Location     Type
 30554 ;;		None
 30555 ;; Return value:  Size  Location     Type
 30556 ;;                  1  [STACK] void 
 30557 ;; Registers used:
 30558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30559 ;; Tracked objects:
 30560 ;;		On entry : 3F/39
 30561 ;;		On exit  : 0/0
 30562 ;;		Unchanged: 0/0
 30563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30568 ;;Total ram usage:        0 bytes
 30569 ;; Hardware stack levels used:    1
 30570 ;; Hardware stack levels required when called:   15
 30571 ;; This function calls:
 30572 ;;		Nothing
 30573 ;; This function is called by:
 30574 ;;		_UART1_Initialize
 30575 ;; This function uses a reentrant model
 30576 ;;
 30577                           
 30578                           	psect	text119
 30579  01C00E                     __ptext119:
 30580                           	opt callstack 0
 30581  01C00E                     _UART1_SetRxInterruptHandler:
 30582                           	opt callstack 13
 30583                           
 30584                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30585                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30586                           
 30587                           ; BSR set to: 57
 30588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30589                           ;incstack = 0
 30590  01C00E  50E1               	movf	fsr1l,w,c
 30591  01C010  0FFD               	addlw	-3
 30592  01C012  6ED9               	movwf	fsr2l,c
 30593  01C014  50E2               	movf	fsr1h,w,c
 30594  01C016  6EDA               	movwf	fsr2h,c
 30595  01C018  0EFF               	movlw	255
 30596  01C01A  22DA               	addwfc	fsr2h,f,c
 30597  01C01C  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30598  01C022  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30599  01C028  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30600                           
 30601                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30602  01C02E  52E5               	movf	postdec1,f,c
 30603  01C030  52E5               	movf	postdec1,f,c
 30604  01C032  52E5               	movf	postdec1,f,c
 30605  01C034  0012               	return		;funcret
 30606  01C036                     __end_of_UART1_SetRxInterruptHandler:
 30607                           	opt callstack 0
 30608                           
 30609 ;; *************** function _TMR6_Initialize *****************
 30610 ;; Defined at:
 30611 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30612 ;; Parameters:    Size  Location     Type
 30613 ;;		None
 30614 ;; Auto vars:     Size  Location     Type
 30615 ;;		None
 30616 ;; Return value:  Size  Location     Type
 30617 ;;                  1  [STACK] void 
 30618 ;; Registers used:
 30619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30620 ;; Tracked objects:
 30621 ;;		On entry : 3F/39
 30622 ;;		On exit  : 0/0
 30623 ;;		Unchanged: 0/0
 30624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30629 ;;Total ram usage:        0 bytes
 30630 ;; Hardware stack levels used:    1
 30631 ;; Hardware stack levels required when called:   16
 30632 ;; This function calls:
 30633 ;;		_TMR6_SetInterruptHandler
 30634 ;; This function is called by:
 30635 ;;		_SYSTEM_Initialize
 30636 ;; This function uses a reentrant model
 30637 ;;
 30638                           
 30639                           	psect	text120
 30640  01BF44                     __ptext120:
 30641                           	opt callstack 0
 30642  01BF44                     _TMR6_Initialize:
 30643                           	opt callstack 13
 30644                           
 30645                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30646                           
 30647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30648                           ;incstack = 0
 30649  01BF44  0E01               	movlw	1
 30650  01BF46  6E96               	movwf	150,c	;volatile
 30651                           
 30652                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30653  01BF48  6A95               	clrf	149,c	;volatile
 30654                           
 30655                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30656  01BF4A  6A97               	clrf	151,c	;volatile
 30657                           
 30658                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30659  01BF4C  0E7C               	movlw	124
 30660  01BF4E  6E93               	movwf	147,c	;volatile
 30661                           
 30662                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30663  01BF50  6A92               	clrf	146,c	;volatile
 30664                           
 30665                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 30666  01BF52  0139               	movlb	57	; () banked
 30667  01BF54  91A9               	bcf	169,0,b	;volatile
 30668                           
 30669                           ; BSR set to: 57
 30670                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 30671  01BF56  8199               	bsf	153,0,b	;volatile
 30672                           
 30673                           ; BSR set to: 57
 30674                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 30675  01BF58  0E12               	movlw	low _TMR6_DefaultInterruptHandler
 30676  01BF5A  6EE6               	movwf	postinc1,c
 30677  01BF5C  0EB7               	movlw	high _TMR6_DefaultInterruptHandler
 30678  01BF5E  6EE6               	movwf	postinc1,c
 30679  01BF60  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30680  01BF62  6EE6               	movwf	postinc1,c
 30681  01BF64  EC1B  F0E0         	call	_TMR6_SetInterruptHandler	;wreg free
 30682                           
 30683                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 30684  01BF68  0EE0               	movlw	224
 30685  01BF6A  6E94               	movwf	148,c	;volatile
 30686                           
 30687                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30688  01BF6C  0012               	return		;funcret
 30689  01BF6E                     __end_of_TMR6_Initialize:
 30690                           	opt callstack 0
 30691                           
 30692 ;; *************** function _TMR6_SetInterruptHandler *****************
 30693 ;; Defined at:
 30694 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 30695 ;; Parameters:    Size  Location     Type
 30696 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30697 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 30698 ;; Auto vars:     Size  Location     Type
 30699 ;;		None
 30700 ;; Return value:  Size  Location     Type
 30701 ;;                  1  [STACK] void 
 30702 ;; Registers used:
 30703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30704 ;; Tracked objects:
 30705 ;;		On entry : 3F/39
 30706 ;;		On exit  : 0/0
 30707 ;;		Unchanged: 0/0
 30708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30713 ;;Total ram usage:        0 bytes
 30714 ;; Hardware stack levels used:    1
 30715 ;; Hardware stack levels required when called:   15
 30716 ;; This function calls:
 30717 ;;		Nothing
 30718 ;; This function is called by:
 30719 ;;		_TMR6_Initialize
 30720 ;; This function uses a reentrant model
 30721 ;;
 30722                           
 30723                           	psect	text121
 30724  01C036                     __ptext121:
 30725                           	opt callstack 0
 30726  01C036                     _TMR6_SetInterruptHandler:
 30727                           	opt callstack 13
 30728                           
 30729                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 30730                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30731                           
 30732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30733                           ;incstack = 0
 30734  01C036  50E1               	movf	fsr1l,w,c
 30735  01C038  0FFD               	addlw	-3
 30736  01C03A  6ED9               	movwf	fsr2l,c
 30737  01C03C  50E2               	movf	fsr1h,w,c
 30738  01C03E  6EDA               	movwf	fsr2h,c
 30739  01C040  0EFF               	movlw	255
 30740  01C042  22DA               	addwfc	fsr2h,f,c
 30741  01C044  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 30742  01C04A  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 30743  01C050  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 30744                           
 30745                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30746  01C056  52E5               	movf	postdec1,f,c
 30747  01C058  52E5               	movf	postdec1,f,c
 30748  01C05A  52E5               	movf	postdec1,f,c
 30749  01C05C  0012               	return		;funcret
 30750  01C05E                     __end_of_TMR6_SetInterruptHandler:
 30751                           	opt callstack 0
 30752                           
 30753 ;; *************** function _TMR5_Initialize *****************
 30754 ;; Defined at:
 30755 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30756 ;; Parameters:    Size  Location     Type
 30757 ;;		None
 30758 ;; Auto vars:     Size  Location     Type
 30759 ;;		None
 30760 ;; Return value:  Size  Location     Type
 30761 ;;                  1  [STACK] void 
 30762 ;; Registers used:
 30763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30764 ;; Tracked objects:
 30765 ;;		On entry : 0/39
 30766 ;;		On exit  : 0/0
 30767 ;;		Unchanged: 0/0
 30768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30773 ;;Total ram usage:        0 bytes
 30774 ;; Hardware stack levels used:    1
 30775 ;; Hardware stack levels required when called:   16
 30776 ;; This function calls:
 30777 ;;		_TMR5_SetInterruptHandler
 30778 ;; This function is called by:
 30779 ;;		_SYSTEM_Initialize
 30780 ;; This function uses a reentrant model
 30781 ;;
 30782                           
 30783                           	psect	text122
 30784  01B884                     __ptext122:
 30785                           	opt callstack 0
 30786  01B884                     _TMR5_Initialize:
 30787                           	opt callstack 13
 30788                           
 30789                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30790                           
 30791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30792                           ;incstack = 0
 30793  01B884  6A9B               	clrf	155,c	;volatile
 30794                           
 30795                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30796  01B886  6A9C               	clrf	156,c	;volatile
 30797                           
 30798                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30799  01B888  0E01               	movlw	1
 30800  01B88A  6E9D               	movwf	157,c	;volatile
 30801                           
 30802                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30803  01B88C  0E63               	movlw	99
 30804  01B88E  6E99               	movwf	153,c	;volatile
 30805                           
 30806                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30807  01B890  0EC0               	movlw	192
 30808  01B892  6E98               	movwf	152,c	;volatile
 30809                           
 30810                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30811  01B894  5098               	movf	152,w,c	;volatile
 30812  01B896  006F FE64  F001    	movff	16281,btemp	;volatile
 30813  01B89C  6A02               	clrf	(btemp+1)^0,c
 30814  01B89E  0060  F004  F002   	movff	btemp,btemp+1
 30815  01B8A4  6A01               	clrf	btemp^0,c
 30816  01B8A6  1001               	iorwf	btemp^0,w,c
 30817  01B8A8  0100               	movlb	0	; () banked
 30818  01B8AA  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30819  01B8AC  5002               	movf	(btemp+1)^0,w,c
 30820  01B8AE  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30821                           
 30822                           ; BSR set to: 0
 30823                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30824  01B8B0  0139               	movlb	57	; () banked
 30825  01B8B2  9DA8               	bcf	168,6,b	;volatile
 30826                           
 30827                           ; BSR set to: 57
 30828                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30829  01B8B4  8D98               	bsf	152,6,b	;volatile
 30830                           
 30831                           ; BSR set to: 57
 30832                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30833  01B8B6  0E5C               	movlw	low _TMR5_DefaultInterruptHandler
 30834  01B8B8  6EE6               	movwf	postinc1,c
 30835  01B8BA  0EBC               	movlw	high _TMR5_DefaultInterruptHandler
 30836  01B8BC  6EE6               	movwf	postinc1,c
 30837  01B8BE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30838  01B8C0  6EE6               	movwf	postinc1,c
 30839  01B8C2  EC2F  F0E0         	call	_TMR5_SetInterruptHandler	;wreg free
 30840                           
 30841                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30842  01B8C6  0E31               	movlw	49
 30843  01B8C8  6E9A               	movwf	154,c	;volatile
 30844                           
 30845                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30846  01B8CA  0012               	return		;funcret
 30847  01B8CC                     __end_of_TMR5_Initialize:
 30848                           	opt callstack 0
 30849                           
 30850 ;; *************** function _TMR5_SetInterruptHandler *****************
 30851 ;; Defined at:
 30852 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30853 ;; Parameters:    Size  Location     Type
 30854 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30855 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30856 ;; Auto vars:     Size  Location     Type
 30857 ;;		None
 30858 ;; Return value:  Size  Location     Type
 30859 ;;                  1  [STACK] void 
 30860 ;; Registers used:
 30861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30862 ;; Tracked objects:
 30863 ;;		On entry : 3F/39
 30864 ;;		On exit  : 0/0
 30865 ;;		Unchanged: 0/0
 30866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30871 ;;Total ram usage:        0 bytes
 30872 ;; Hardware stack levels used:    1
 30873 ;; Hardware stack levels required when called:   15
 30874 ;; This function calls:
 30875 ;;		Nothing
 30876 ;; This function is called by:
 30877 ;;		_TMR5_Initialize
 30878 ;; This function uses a reentrant model
 30879 ;;
 30880                           
 30881                           	psect	text123
 30882  01C05E                     __ptext123:
 30883                           	opt callstack 0
 30884  01C05E                     _TMR5_SetInterruptHandler:
 30885                           	opt callstack 13
 30886                           
 30887                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30888                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30889                           
 30890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30891                           ;incstack = 0
 30892  01C05E  50E1               	movf	fsr1l,w,c
 30893  01C060  0FFD               	addlw	-3
 30894  01C062  6ED9               	movwf	fsr2l,c
 30895  01C064  50E2               	movf	fsr1h,w,c
 30896  01C066  6EDA               	movwf	fsr2h,c
 30897  01C068  0EFF               	movlw	255
 30898  01C06A  22DA               	addwfc	fsr2h,f,c
 30899  01C06C  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 30900  01C072  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 30901  01C078  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 30902                           
 30903                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30904  01C07E  52E5               	movf	postdec1,f,c
 30905  01C080  52E5               	movf	postdec1,f,c
 30906  01C082  52E5               	movf	postdec1,f,c
 30907  01C084  0012               	return		;funcret
 30908  01C086                     __end_of_TMR5_SetInterruptHandler:
 30909                           	opt callstack 0
 30910                           
 30911 ;; *************** function _TMR3_Initialize *****************
 30912 ;; Defined at:
 30913 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30914 ;; Parameters:    Size  Location     Type
 30915 ;;		None
 30916 ;; Auto vars:     Size  Location     Type
 30917 ;;		None
 30918 ;; Return value:  Size  Location     Type
 30919 ;;                  1  [STACK] void 
 30920 ;; Registers used:
 30921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30922 ;; Tracked objects:
 30923 ;;		On entry : 0/39
 30924 ;;		On exit  : 0/0
 30925 ;;		Unchanged: 0/0
 30926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30931 ;;Total ram usage:        0 bytes
 30932 ;; Hardware stack levels used:    1
 30933 ;; Hardware stack levels required when called:   16
 30934 ;; This function calls:
 30935 ;;		_TMR3_SetInterruptHandler
 30936 ;; This function is called by:
 30937 ;;		_SYSTEM_Initialize
 30938 ;; This function uses a reentrant model
 30939 ;;
 30940                           
 30941                           	psect	text124
 30942  01B8CC                     __ptext124:
 30943                           	opt callstack 0
 30944  01B8CC                     _TMR3_Initialize:
 30945                           	opt callstack 13
 30946                           
 30947                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30948                           
 30949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30950                           ;incstack = 0
 30951  01B8CC  6AA7               	clrf	167,c	;volatile
 30952                           
 30953                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30954  01B8CE  6AA8               	clrf	168,c	;volatile
 30955                           
 30956                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30957  01B8D0  0E01               	movlw	1
 30958  01B8D2  6EA9               	movwf	169,c	;volatile
 30959                           
 30960                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30961  01B8D4  0E3C               	movlw	60
 30962  01B8D6  6EA5               	movwf	165,c	;volatile
 30963                           
 30964                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30965  01B8D8  0EB0               	movlw	176
 30966  01B8DA  6EA4               	movwf	164,c	;volatile
 30967                           
 30968                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30969  01B8DC  50A4               	movf	164,w,c	;volatile
 30970  01B8DE  006F FE94  F001    	movff	16293,btemp	;volatile
 30971  01B8E4  6A02               	clrf	(btemp+1)^0,c
 30972  01B8E6  0060  F004  F002   	movff	btemp,btemp+1
 30973  01B8EC  6A01               	clrf	btemp^0,c
 30974  01B8EE  1001               	iorwf	btemp^0,w,c
 30975  01B8F0  0100               	movlb	0	; () banked
 30976  01B8F2  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30977  01B8F4  5002               	movf	(btemp+1)^0,w,c
 30978  01B8F6  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30979                           
 30980                           ; BSR set to: 0
 30981                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 30982  01B8F8  0139               	movlb	57	; () banked
 30983  01B8FA  9DA6               	bcf	166,6,b	;volatile
 30984                           
 30985                           ; BSR set to: 57
 30986                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 30987  01B8FC  8D96               	bsf	150,6,b	;volatile
 30988                           
 30989                           ; BSR set to: 57
 30990                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 30991  01B8FE  0EB4               	movlw	low _TMR3_DefaultInterruptHandler
 30992  01B900  6EE6               	movwf	postinc1,c
 30993  01B902  0EC5               	movlw	high _TMR3_DefaultInterruptHandler
 30994  01B904  6EE6               	movwf	postinc1,c
 30995  01B906  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 30996  01B908  6EE6               	movwf	postinc1,c
 30997  01B90A  EC43  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
 30998                           
 30999                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 31000  01B90E  0E31               	movlw	49
 31001  01B910  6EA6               	movwf	166,c	;volatile
 31002                           
 31003                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31004  01B912  0012               	return		;funcret
 31005  01B914                     __end_of_TMR3_Initialize:
 31006                           	opt callstack 0
 31007                           
 31008 ;; *************** function _TMR3_SetInterruptHandler *****************
 31009 ;; Defined at:
 31010 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 31011 ;; Parameters:    Size  Location     Type
 31012 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31013 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 31014 ;; Auto vars:     Size  Location     Type
 31015 ;;		None
 31016 ;; Return value:  Size  Location     Type
 31017 ;;                  1  [STACK] void 
 31018 ;; Registers used:
 31019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31020 ;; Tracked objects:
 31021 ;;		On entry : 0/0
 31022 ;;		On exit  : 0/0
 31023 ;;		Unchanged: 0/0
 31024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31029 ;;Total ram usage:        0 bytes
 31030 ;; Hardware stack levels used:    1
 31031 ;; Hardware stack levels required when called:   15
 31032 ;; This function calls:
 31033 ;;		Nothing
 31034 ;; This function is called by:
 31035 ;;		_TMR3_Initialize
 31036 ;;		_init_bsoc
 31037 ;; This function uses a reentrant model
 31038 ;;
 31039                           
 31040                           	psect	text125
 31041  01C086                     __ptext125:
 31042                           	opt callstack 0
 31043  01C086                     _TMR3_SetInterruptHandler:
 31044                           	opt callstack 14
 31045                           
 31046                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 31047                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31048                           
 31049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31050                           ;incstack = 0
 31051  01C086  50E1               	movf	fsr1l,w,c
 31052  01C088  0FFD               	addlw	-3
 31053  01C08A  6ED9               	movwf	fsr2l,c
 31054  01C08C  50E2               	movf	fsr1h,w,c
 31055  01C08E  6EDA               	movwf	fsr2h,c
 31056  01C090  0EFF               	movlw	255
 31057  01C092  22DA               	addwfc	fsr2h,f,c
 31058  01C094  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 31059  01C09A  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 31060  01C0A0  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 31061                           
 31062                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31063  01C0A6  52E5               	movf	postdec1,f,c
 31064  01C0A8  52E5               	movf	postdec1,f,c
 31065  01C0AA  52E5               	movf	postdec1,f,c
 31066  01C0AC  0012               	return		;funcret
 31067  01C0AE                     __end_of_TMR3_SetInterruptHandler:
 31068                           	opt callstack 0
 31069                           
 31070 ;; *************** function _TMR2_Initialize *****************
 31071 ;; Defined at:
 31072 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 31073 ;; Parameters:    Size  Location     Type
 31074 ;;		None
 31075 ;; Auto vars:     Size  Location     Type
 31076 ;;		None
 31077 ;; Return value:  Size  Location     Type
 31078 ;;                  1  [STACK] void 
 31079 ;; Registers used:
 31080 ;;		wreg, status,2
 31081 ;; Tracked objects:
 31082 ;;		On entry : 0/3E
 31083 ;;		On exit  : 3F/39
 31084 ;;		Unchanged: 0/0
 31085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31090 ;;Total ram usage:        0 bytes
 31091 ;; Hardware stack levels used:    1
 31092 ;; Hardware stack levels required when called:   15
 31093 ;; This function calls:
 31094 ;;		Nothing
 31095 ;; This function is called by:
 31096 ;;		_SYSTEM_Initialize
 31097 ;; This function uses a reentrant model
 31098 ;;
 31099                           
 31100                           	psect	text126
 31101  01C42A                     __ptext126:
 31102                           	opt callstack 0
 31103  01C42A                     _TMR2_Initialize:
 31104                           	opt callstack 14
 31105                           
 31106                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 31107                           
 31108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31109                           ;incstack = 0
 31110  01C42A  0E01               	movlw	1
 31111  01C42C  6EAE               	movwf	174,c	;volatile
 31112                           
 31113                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 31114  01C42E  6AAD               	clrf	173,c	;volatile
 31115                           
 31116                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 31117  01C430  6AAF               	clrf	175,c	;volatile
 31118                           
 31119                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 31120  01C432  0E63               	movlw	99
 31121  01C434  6EAB               	movwf	171,c	;volatile
 31122                           
 31123                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 31124  01C436  6AAA               	clrf	170,c	;volatile
 31125                           
 31126                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 31127  01C438  0139               	movlb	57	; () banked
 31128  01C43A  95A4               	bcf	164,2,b	;volatile
 31129                           
 31130                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 31131  01C43C  0EC0               	movlw	192
 31132  01C43E  6EAC               	movwf	172,c	;volatile
 31133                           
 31134                           ; BSR set to: 57
 31135                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31136  01C440  0012               	return		;funcret
 31137  01C442                     __end_of_TMR2_Initialize:
 31138                           	opt callstack 0
 31139                           
 31140 ;; *************** function _SPI1_Initialize *****************
 31141 ;; Defined at:
 31142 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31143 ;; Parameters:    Size  Location     Type
 31144 ;;		None
 31145 ;; Auto vars:     Size  Location     Type
 31146 ;;		None
 31147 ;; Return value:  Size  Location     Type
 31148 ;;                  1  [STACK] void 
 31149 ;; Registers used:
 31150 ;;		wreg, status,2
 31151 ;; Tracked objects:
 31152 ;;		On entry : 3F/39
 31153 ;;		On exit  : 3F/3D
 31154 ;;		Unchanged: 0/0
 31155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31160 ;;Total ram usage:        0 bytes
 31161 ;; Hardware stack levels used:    1
 31162 ;; Hardware stack levels required when called:   15
 31163 ;; This function calls:
 31164 ;;		Nothing
 31165 ;; This function is called by:
 31166 ;;		_SYSTEM_Initialize
 31167 ;; This function uses a reentrant model
 31168 ;;
 31169                           
 31170                           	psect	text127
 31171  01C442                     __ptext127:
 31172                           	opt callstack 0
 31173  01C442                     _SPI1_Initialize:
 31174                           	opt callstack 14
 31175                           
 31176                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 31177                           
 31178                           ; BSR set to: 57
 31179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31180                           ;incstack = 0
 31181  01C442  0E40               	movlw	64
 31182  01C444  013D               	movlb	61	; () banked
 31183  01C446  6F15               	movwf	21,b	;volatile
 31184                           
 31185                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 31186  01C448  0E03               	movlw	3
 31187  01C44A  6F16               	movwf	22,b	;volatile
 31188                           
 31189                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 31190  01C44C  0E4F               	movlw	79
 31191  01C44E  6F19               	movwf	25,b	;volatile
 31192                           
 31193                           ; BSR set to: 61
 31194                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 31195  01C450  6B1C               	clrf	28,b	;volatile
 31196                           
 31197                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 31198  01C452  0E83               	movlw	131
 31199  01C454  6F14               	movwf	20,b	;volatile
 31200                           
 31201                           ; BSR set to: 61
 31202                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31203  01C456  0012               	return		;funcret
 31204  01C458                     __end_of_SPI1_Initialize:
 31205                           	opt callstack 0
 31206                           
 31207 ;; *************** function _PWM8_Initialize *****************
 31208 ;; Defined at:
 31209 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 31210 ;; Parameters:    Size  Location     Type
 31211 ;;		None
 31212 ;; Auto vars:     Size  Location     Type
 31213 ;;		None
 31214 ;; Return value:  Size  Location     Type
 31215 ;;                  1  [STACK] void 
 31216 ;; Registers used:
 31217 ;;		wreg, status,2
 31218 ;; Tracked objects:
 31219 ;;		On entry : 3F/39
 31220 ;;		On exit  : 3F/3F
 31221 ;;		Unchanged: 0/0
 31222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31227 ;;Total ram usage:        0 bytes
 31228 ;; Hardware stack levels used:    1
 31229 ;; Hardware stack levels required when called:   15
 31230 ;; This function calls:
 31231 ;;		Nothing
 31232 ;; This function is called by:
 31233 ;;		_SYSTEM_Initialize
 31234 ;; This function uses a reentrant model
 31235 ;;
 31236                           
 31237                           	psect	text128
 31238  01C458                     __ptext128:
 31239                           	opt callstack 0
 31240  01C458                     _PWM8_Initialize:
 31241                           	opt callstack 14
 31242                           
 31243                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 31244                           
 31245                           ; BSR set to: 61
 31246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31247                           ;incstack = 0
 31248  01C458  0E80               	movlw	128
 31249  01C45A  6E62               	movwf	98,c	;volatile
 31250                           
 31251                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 31252  01C45C  6A61               	clrf	97,c	;volatile
 31253                           
 31254                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 31255  01C45E  0E40               	movlw	64
 31256  01C460  6E60               	movwf	96,c	;volatile
 31257                           
 31258                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 31259  01C462  013F               	movlb	63	; () banked
 31260  01C464  515F               	movf	95,w,b	;volatile
 31261  01C466  0B3F               	andlw	-193
 31262  01C468  0940               	iorlw	64
 31263  01C46A  6F5F               	movwf	95,b	;volatile
 31264                           
 31265                           ; BSR set to: 63
 31266                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31267  01C46C  0012               	return		;funcret
 31268  01C46E                     __end_of_PWM8_Initialize:
 31269                           	opt callstack 0
 31270                           
 31271 ;; *************** function _PMD_Initialize *****************
 31272 ;; Defined at:
 31273 ;;		line 90 in file "mcc_generated_files/mcc.c"
 31274 ;; Parameters:    Size  Location     Type
 31275 ;;		None
 31276 ;; Auto vars:     Size  Location     Type
 31277 ;;		None
 31278 ;; Return value:  Size  Location     Type
 31279 ;;                  1  [STACK] void 
 31280 ;; Registers used:
 31281 ;;		None
 31282 ;; Tracked objects:
 31283 ;;		On entry : 3F/39
 31284 ;;		On exit  : 3F/39
 31285 ;;		Unchanged: 0/0
 31286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31291 ;;Total ram usage:        0 bytes
 31292 ;; Hardware stack levels used:    1
 31293 ;; Hardware stack levels required when called:   15
 31294 ;; This function calls:
 31295 ;;		Nothing
 31296 ;; This function is called by:
 31297 ;;		_SYSTEM_Initialize
 31298 ;; This function uses a reentrant model
 31299 ;;
 31300                           
 31301                           	psect	text129
 31302  01C484                     __ptext129:
 31303                           	opt callstack 0
 31304  01C484                     _PMD_Initialize:
 31305                           	opt callstack 14
 31306                           
 31307                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 31308                           
 31309                           ; BSR set to: 63
 31310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31311                           ;incstack = 0
 31312  01C484  0139               	movlb	57	; () banked
 31313  01C486  6BC0               	clrf	192,b	;volatile
 31314                           
 31315                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 31316  01C488  6BC1               	clrf	193,b	;volatile
 31317                           
 31318                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31319  01C48A  6BC2               	clrf	194,b	;volatile
 31320                           
 31321                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31322  01C48C  6BC3               	clrf	195,b	;volatile
 31323                           
 31324                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31325  01C48E  6BC4               	clrf	196,b	;volatile
 31326                           
 31327                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31328  01C490  6BC5               	clrf	197,b	;volatile
 31329                           
 31330                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31331  01C492  6BC6               	clrf	198,b	;volatile
 31332                           
 31333                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31334  01C494  6BC7               	clrf	199,b	;volatile
 31335                           
 31336                           ; BSR set to: 57
 31337                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31338  01C496  0012               	return		;funcret
 31339  01C498                     __end_of_PMD_Initialize:
 31340                           	opt callstack 0
 31341                           
 31342 ;; *************** function _PIN_MANAGER_Initialize *****************
 31343 ;; Defined at:
 31344 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31345 ;; Parameters:    Size  Location     Type
 31346 ;;		None
 31347 ;; Auto vars:     Size  Location     Type
 31348 ;;		None
 31349 ;; Return value:  Size  Location     Type
 31350 ;;                  1  [STACK] void 
 31351 ;; Registers used:
 31352 ;;		wreg, status,2
 31353 ;; Tracked objects:
 31354 ;;		On entry : 3F/39
 31355 ;;		On exit  : 3F/3A
 31356 ;;		Unchanged: 0/0
 31357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31362 ;;Total ram usage:        0 bytes
 31363 ;; Hardware stack levels used:    1
 31364 ;; Hardware stack levels required when called:   15
 31365 ;; This function calls:
 31366 ;;		Nothing
 31367 ;; This function is called by:
 31368 ;;		_SYSTEM_Initialize
 31369 ;; This function uses a reentrant model
 31370 ;;
 31371                           
 31372                           	psect	text130
 31373  01AE34                     __ptext130:
 31374                           	opt callstack 0
 31375  01AE34                     _PIN_MANAGER_Initialize:
 31376                           	opt callstack 14
 31377                           
 31378                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31379                           
 31380                           ; BSR set to: 57
 31381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31382                           ;incstack = 0
 31383  01AE34  0E07               	movlw	7
 31384  01AE36  6EBE               	movwf	190,c	;volatile
 31385                           
 31386                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31387  01AE38  6ABD               	clrf	189,c	;volatile
 31388                           
 31389                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31390  01AE3A  6ABA               	clrf	186,c	;volatile
 31391                           
 31392                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31393  01AE3C  0E23               	movlw	35
 31394  01AE3E  6EBF               	movwf	191,c	;volatile
 31395                           
 31396                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31397  01AE40  6ABB               	clrf	187,c	;volatile
 31398                           
 31399                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31400  01AE42  0E07               	movlw	7
 31401  01AE44  6EBC               	movwf	188,c	;volatile
 31402                           
 31403                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31404  01AE46  6AC6               	clrf	198,c	;volatile
 31405                           
 31406                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31407  01AE48  0E0C               	movlw	12
 31408  01AE4A  6EC7               	movwf	199,c	;volatile
 31409                           
 31410                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31411  01AE4C  68C2               	setf	194,c	;volatile
 31412                           
 31413                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31414  01AE4E  0EBF               	movlw	191
 31415  01AE50  6EC3               	movwf	195,c	;volatile
 31416                           
 31417                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31418  01AE52  0E90               	movlw	144
 31419  01AE54  6EC4               	movwf	196,c	;volatile
 31420                           
 31421                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31422  01AE56  0E0C               	movlw	12
 31423  01AE58  6EC5               	movwf	197,c	;volatile
 31424                           
 31425                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31426  01AE5A  013A               	movlb	58	; () banked
 31427  01AE5C  6B70               	clrf	112,b	;volatile
 31428                           
 31429                           ; BSR set to: 58
 31430                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31431  01AE5E  6B60               	clrf	96,b	;volatile
 31432                           
 31433                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31434  01AE60  0E3C               	movlw	60
 31435  01AE62  6F50               	movwf	80,b	;volatile
 31436                           
 31437                           ; BSR set to: 58
 31438                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31439  01AE64  6B80               	clrf	128,b	;volatile
 31440                           
 31441                           ; BSR set to: 58
 31442                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31443  01AE66  6B90               	clrf	144,b	;volatile
 31444                           
 31445                           ; BSR set to: 58
 31446                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31447  01AE68  6940               	setf	64,b	;volatile
 31448                           
 31449                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31450  01AE6A  0E0C               	movlw	12
 31451  01AE6C  6F71               	movwf	113,b	;volatile
 31452                           
 31453                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31454  01AE6E  0E0C               	movlw	12
 31455  01AE70  6F91               	movwf	145,b	;volatile
 31456                           
 31457                           ; BSR set to: 58
 31458                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31459  01AE72  6B81               	clrf	129,b	;volatile
 31460                           
 31461                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31462  01AE74  0E83               	movlw	131
 31463  01AE76  6F51               	movwf	81,b	;volatile
 31464                           
 31465                           ; BSR set to: 58
 31466                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31467  01AE78  6B41               	clrf	65,b	;volatile
 31468                           
 31469                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31470  01AE7A  0E97               	movlw	151
 31471  01AE7C  6F61               	movwf	97,b	;volatile
 31472                           
 31473                           ; BSR set to: 58
 31474                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31475  01AE7E  6B82               	clrf	130,b	;volatile
 31476                           
 31477                           ; BSR set to: 58
 31478                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31479  01AE80  6B92               	clrf	146,b	;volatile
 31480                           
 31481                           ; BSR set to: 58
 31482                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31483  01AE82  6B42               	clrf	66,b	;volatile
 31484                           
 31485                           ; BSR set to: 58
 31486                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31487  01AE84  6B52               	clrf	82,b	;volatile
 31488                           
 31489                           ; BSR set to: 58
 31490                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31491  01AE86  6B62               	clrf	98,b	;volatile
 31492                           
 31493                           ; BSR set to: 58
 31494                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31495  01AE88  6B72               	clrf	114,b	;volatile
 31496                           
 31497                           ; BSR set to: 58
 31498                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31499  01AE8A  6943               	setf	67,b	;volatile
 31500                           
 31501                           ; BSR set to: 58
 31502                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31503  01AE8C  6953               	setf	83,b	;volatile
 31504                           
 31505                           ; BSR set to: 58
 31506                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31507  01AE8E  6963               	setf	99,b	;volatile
 31508                           
 31509                           ; BSR set to: 58
 31510                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31511  01AE90  6973               	setf	115,b	;volatile
 31512                           
 31513                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31514  01AE92  0E07               	movlw	7
 31515  01AE94  6F83               	movwf	131,b	;volatile
 31516                           
 31517                           ; BSR set to: 58
 31518                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31519  01AE96  6993               	setf	147,b	;volatile
 31520                           
 31521                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31522  01AE98  0E0F               	movlw	15
 31523  01AE9A  6FE8               	movwf	232,b	;volatile
 31524                           
 31525                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31526  01AE9C  0E13               	movlw	19
 31527  01AE9E  6FDE               	movwf	222,b	;volatile
 31528                           
 31529                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31530  01AEA0  0E16               	movlw	22
 31531  01AEA2  6F0E               	movwf	14,b	;volatile
 31532                           
 31533                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31534  01AEA4  0E1E               	movlw	30
 31535  01AEA6  6F13               	movwf	19,b	;volatile
 31536                           
 31537                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31538  01AEA8  0E08               	movlw	8
 31539  01AEAA  6FC0               	movwf	192,b	;volatile
 31540                           
 31541                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31542  01AEAC  0E10               	movlw	16
 31543  01AEAE  6F19               	movwf	25,b	;volatile
 31544                           
 31545                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31546  01AEB0  0E09               	movlw	9
 31547  01AEB2  6FC1               	movwf	193,b	;volatile
 31548                           
 31549                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31550  01AEB4  0E1F               	movlw	31
 31551  01AEB6  6F15               	movwf	21,b	;volatile
 31552                           
 31553                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31554  01AEB8  0E13               	movlw	19
 31555  01AEBA  6F16               	movwf	22,b	;volatile
 31556                           
 31557                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31558  01AEBC  0E17               	movlw	23
 31559  01AEBE  6FE5               	movwf	229,b	;volatile
 31560                           
 31561                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31562  01AEC0  0E14               	movlw	20
 31563  01AEC2  6FDF               	movwf	223,b	;volatile
 31564                           
 31565                           ; BSR set to: 58
 31566                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31567  01AEC4  0012               	return		;funcret
 31568  01AEC6                     __end_of_PIN_MANAGER_Initialize:
 31569                           	opt callstack 0
 31570                           
 31571 ;; *************** function _OSCILLATOR_Initialize *****************
 31572 ;; Defined at:
 31573 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31574 ;; Parameters:    Size  Location     Type
 31575 ;;		None
 31576 ;; Auto vars:     Size  Location     Type
 31577 ;;		None
 31578 ;; Return value:  Size  Location     Type
 31579 ;;                  1  [STACK] void 
 31580 ;; Registers used:
 31581 ;;		wreg, status,2
 31582 ;; Tracked objects:
 31583 ;;		On entry : 3F/3A
 31584 ;;		On exit  : 3F/39
 31585 ;;		Unchanged: 0/0
 31586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31591 ;;Total ram usage:        0 bytes
 31592 ;; Hardware stack levels used:    1
 31593 ;; Hardware stack levels required when called:   15
 31594 ;; This function calls:
 31595 ;;		Nothing
 31596 ;; This function is called by:
 31597 ;;		_SYSTEM_Initialize
 31598 ;; This function uses a reentrant model
 31599 ;;
 31600                           
 31601                           	psect	text131
 31602  01C46E                     __ptext131:
 31603                           	opt callstack 0
 31604  01C46E                     _OSCILLATOR_Initialize:
 31605                           	opt callstack 14
 31606                           
 31607                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31608                           
 31609                           ; BSR set to: 58
 31610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31611                           ;incstack = 0
 31612  01C46E  0E20               	movlw	32
 31613  01C470  0139               	movlb	57	; () banked
 31614  01C472  6FD9               	movwf	217,b	;volatile
 31615                           
 31616                           ; BSR set to: 57
 31617                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31618  01C474  6BDB               	clrf	219,b	;volatile
 31619                           
 31620                           ; BSR set to: 57
 31621                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31622  01C476  6BDD               	clrf	221,b	;volatile
 31623                           
 31624                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31625  01C478  0E02               	movlw	2
 31626  01C47A  6FDF               	movwf	223,b	;volatile
 31627                           
 31628                           ; BSR set to: 57
 31629                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31630  01C47C  6BDE               	clrf	222,b	;volatile
 31631  01C47E                     l169:
 31632                           
 31633                           ; BSR set to: 57
 31634                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31635  01C47E  B1DC               	btfsc	220,0,b	;volatile
 31636  01C480  0012               	return	
 31637  01C482  D7FD               	goto	l169
 31638  01C484                     __end_of_OSCILLATOR_Initialize:
 31639                           	opt callstack 0
 31640                           
 31641 ;; *************** function _INTERRUPT_Initialize *****************
 31642 ;; Defined at:
 31643 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31644 ;; Parameters:    Size  Location     Type
 31645 ;;		None
 31646 ;; Auto vars:     Size  Location     Type
 31647 ;;  state           1  [STACK] _Bool 
 31648 ;; Return value:  Size  Location     Type
 31649 ;;                  1  [STACK] void 
 31650 ;; Registers used:
 31651 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31652 ;; Tracked objects:
 31653 ;;		On entry : 0/0
 31654 ;;		On exit  : 3F/39
 31655 ;;		Unchanged: 0/0
 31656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31661 ;;Total ram usage:        0 bytes
 31662 ;; Hardware stack levels used:    1
 31663 ;; Hardware stack levels required when called:   15
 31664 ;; This function calls:
 31665 ;;		Nothing
 31666 ;; This function is called by:
 31667 ;;		_SYSTEM_Initialize
 31668 ;; This function uses a reentrant model
 31669 ;;
 31670                           
 31671                           	psect	text132
 31672  01B372                     __ptext132:
 31673                           	opt callstack 0
 31674  01B372                     _INTERRUPT_Initialize:
 31675                           	opt callstack 0
 31676                           
 31677                           ; BSR set to: 57
 31678                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31679  01B372  52E6               	movf	postinc1,f,c
 31680                           
 31681                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31682                           
 31683                           ;incstack = 0
 31684  01B374  8AD2               	bsf	210,5,c	;volatile
 31685                           
 31686                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31687  01B376  AED2               	btfss	16338,7,c	;volatile
 31688  01B378  D003               	goto	u9520
 31689  01B37A  6A0C               	clrf	(btemp+11)^0,c
 31690  01B37C  2A0C               	incf	(btemp+11)^0,f,c
 31691  01B37E  D001               	goto	u9538
 31692  01B380                     u9520:
 31693  01B380  6A0C               	clrf	(btemp+11)^0,c
 31694  01B382                     u9538:
 31695                           
 31696                           ;stkvar	_state @ sp[(-1)+0]
 31697  01B382  0EFF               	movlw	-1
 31698  01B384  0060  F033  FFE3   	movff	btemp+11,plusw1
 31699                           
 31700                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31701  01B38A  9ED2               	bcf	16338,7,c	;volatile
 31702                           
 31703                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31704  01B38C  0E55               	movlw	85
 31705  01B38E  6ED4               	movwf	212,c	;volatile
 31706                           
 31707                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31708  01B390  0EAA               	movlw	170
 31709  01B392  6ED4               	movwf	212,c	;volatile
 31710                           
 31711                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31712  01B394  90D4               	bcf	212,0,c	;volatile
 31713                           
 31714                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 31715  01B396  0138               	movlb	56	; () banked
 31716  01B398  6B9F               	clrf	159,b	;volatile
 31717                           
 31718                           ; BSR set to: 56
 31719                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 31720  01B39A  6B9E               	clrf	158,b	;volatile
 31721                           
 31722                           ; BSR set to: 56
 31723                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 31724  01B39C  0E08               	movlw	8
 31725  01B39E  6F9D               	movwf	157,b	;volatile
 31726                           
 31727                           ; BSR set to: 56
 31728                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31729  01B3A0  0E55               	movlw	85
 31730  01B3A2  6ED4               	movwf	212,c	;volatile
 31731                           
 31732                           ; BSR set to: 56
 31733                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31734  01B3A4  0EAA               	movlw	170
 31735  01B3A6  6ED4               	movwf	212,c	;volatile
 31736                           
 31737                           ; BSR set to: 56
 31738                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31739  01B3A8  80D4               	bsf	212,0,c	;volatile
 31740                           
 31741                           ; BSR set to: 56
 31742                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31743                           ;stkvar	_state @ sp[(-1)+0]
 31744  01B3AA  0EFF               	movlw	-1
 31745  01B3AC  B0E3               	btfsc	plusw1,0,c
 31746  01B3AE  D002               	bra	u9545
 31747  01B3B0  9ED2               	bcf	16338,7,c	;volatile
 31748  01B3B2  D001               	bra	u9546
 31749  01B3B4                     u9545:
 31750  01B3B4  8ED2               	bsf	16338,7,c	;volatile
 31751  01B3B6                     u9546:
 31752                           
 31753                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31754  01B3B6  0139               	movlb	57	; () banked
 31755  01B3B8  8782               	bsf	130,3,b	;volatile
 31756                           
 31757                           ; BSR set to: 57
 31758                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31759  01B3BA  8382               	bsf	130,1,b	;volatile
 31760                           
 31761                           ; BSR set to: 57
 31762                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31763  01B3BC  8182               	bsf	130,0,b	;volatile
 31764                           
 31765                           ; BSR set to: 57
 31766                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31767  01B3BE  8582               	bsf	130,2,b	;volatile
 31768                           
 31769                           ; BSR set to: 57
 31770                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31771  01B3C0  8786               	bsf	134,3,b	;volatile
 31772                           
 31773                           ; BSR set to: 57
 31774                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31775  01B3C2  8586               	bsf	134,2,b	;volatile
 31776                           
 31777                           ; BSR set to: 57
 31778                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31779  01B3C4  8783               	bsf	131,3,b	;volatile
 31780                           
 31781                           ; BSR set to: 57
 31782                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31783  01B3C6  8181               	bsf	129,0,b	;volatile
 31784                           
 31785                           ; BSR set to: 57
 31786                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31787  01B3C8  9185               	bcf	133,0,b	;volatile
 31788                           
 31789                           ; BSR set to: 57
 31790                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31791  01B3CA  8189               	bsf	137,0,b	;volatile
 31792                           
 31793                           ; BSR set to: 57
 31794                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31795  01B3CC  9D88               	bcf	136,6,b	;volatile
 31796                           
 31797                           ; BSR set to: 57
 31798                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31799  01B3CE  9D86               	bcf	134,6,b	;volatile
 31800                           
 31801                           ; BSR set to: 57
 31802                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31803  01B3D0  8581               	bsf	129,2,b	;volatile
 31804                           
 31805                           ; BSR set to: 57
 31806                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31807  01B3D2  8781               	bsf	129,3,b	;volatile
 31808                           
 31809                           ; BSR set to: 57
 31810                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31811  01B3D4  52E5               	movf	postdec1,f,c
 31812  01B3D6  0012               	return		;funcret
 31813  01B3D8                     __end_of_INTERRUPT_Initialize:
 31814                           	opt callstack 0
 31815                           
 31816 ;; *************** function _FVR_Initialize *****************
 31817 ;; Defined at:
 31818 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31819 ;; Parameters:    Size  Location     Type
 31820 ;;		None
 31821 ;; Auto vars:     Size  Location     Type
 31822 ;;		None
 31823 ;; Return value:  Size  Location     Type
 31824 ;;                  1  [STACK] void 
 31825 ;; Registers used:
 31826 ;;		wreg, status,2
 31827 ;; Tracked objects:
 31828 ;;		On entry : 3F/39
 31829 ;;		On exit  : 3F/3E
 31830 ;;		Unchanged: 0/0
 31831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31836 ;;Total ram usage:        0 bytes
 31837 ;; Hardware stack levels used:    1
 31838 ;; Hardware stack levels required when called:   15
 31839 ;; This function calls:
 31840 ;;		Nothing
 31841 ;; This function is called by:
 31842 ;;		_SYSTEM_Initialize
 31843 ;; This function uses a reentrant model
 31844 ;;
 31845                           
 31846                           	psect	text133
 31847  01C58A                     __ptext133:
 31848                           	opt callstack 0
 31849  01C58A                     _FVR_Initialize:
 31850                           	opt callstack 14
 31851                           
 31852                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31853                           
 31854                           ; BSR set to: 57
 31855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31856                           ;incstack = 0
 31857  01C58A  0EAF               	movlw	175
 31858  01C58C  013E               	movlb	62	; () banked
 31859  01C58E  6FC1               	movwf	193,b	;volatile
 31860                           
 31861                           ; BSR set to: 62
 31862                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31863  01C590  0012               	return		;funcret
 31864  01C592                     __end_of_FVR_Initialize:
 31865                           	opt callstack 0
 31866                           
 31867 ;; *************** function _EXT_INT_Initialize *****************
 31868 ;; Defined at:
 31869 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31870 ;; Parameters:    Size  Location     Type
 31871 ;;		None
 31872 ;; Auto vars:     Size  Location     Type
 31873 ;;		None
 31874 ;; Return value:  Size  Location     Type
 31875 ;;                  1  [STACK] void 
 31876 ;; Registers used:
 31877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31878 ;; Tracked objects:
 31879 ;;		On entry : 3F/3F
 31880 ;;		On exit  : 3F/39
 31881 ;;		Unchanged: 0/0
 31882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31887 ;;Total ram usage:        0 bytes
 31888 ;; Hardware stack levels used:    1
 31889 ;; Hardware stack levels required when called:   16
 31890 ;; This function calls:
 31891 ;;		_INT0_SetInterruptHandler
 31892 ;;		_INT1_SetInterruptHandler
 31893 ;; This function is called by:
 31894 ;;		_SYSTEM_Initialize
 31895 ;; This function uses a reentrant model
 31896 ;;
 31897                           
 31898                           	psect	text134
 31899  01BD9C                     __ptext134:
 31900                           	opt callstack 0
 31901  01BD9C                     _EXT_INT_Initialize:
 31902                           	opt callstack 13
 31903                           
 31904                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31905                           
 31906                           ; BSR set to: 62
 31907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31908                           ;incstack = 0
 31909  01BD9C  0139               	movlb	57	; () banked
 31910  01BD9E  91A1               	bcf	161,0,b	;volatile
 31911                           
 31912                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31913  01BDA0  90D2               	bcf	210,0,c	;volatile
 31914                           
 31915                           ; BSR set to: 57
 31916                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31917  01BDA2  0EB6               	movlw	low _INT0_DefaultInterruptHandler
 31918  01BDA4  6EE6               	movwf	postinc1,c
 31919  01BDA6  0EC5               	movlw	high _INT0_DefaultInterruptHandler
 31920  01BDA8  6EE6               	movwf	postinc1,c
 31921  01BDAA  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31922  01BDAC  6EE6               	movwf	postinc1,c
 31923  01BDAE  EC6B  F0E0         	call	_INT0_SetInterruptHandler	;wreg free
 31924                           
 31925                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31926  01BDB2  0139               	movlb	57	; () banked
 31927  01BDB4  8191               	bsf	145,0,b	;volatile
 31928                           
 31929                           ; BSR set to: 57
 31930                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31931  01BDB6  91A5               	bcf	165,0,b	;volatile
 31932                           
 31933                           ; BSR set to: 57
 31934                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31935  01BDB8  92D2               	bcf	210,1,c	;volatile
 31936                           
 31937                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31938  01BDBA  0EB2               	movlw	low _INT1_DefaultInterruptHandler
 31939  01BDBC  6EE6               	movwf	postinc1,c
 31940  01BDBE  0EC5               	movlw	high _INT1_DefaultInterruptHandler
 31941  01BDC0  6EE6               	movwf	postinc1,c
 31942  01BDC2  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31943  01BDC4  6EE6               	movwf	postinc1,c
 31944  01BDC6  EC57  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
 31945                           
 31946                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31947  01BDCA  0139               	movlb	57	; () banked
 31948  01BDCC  8195               	bsf	149,0,b	;volatile
 31949                           
 31950                           ; BSR set to: 57
 31951                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31952  01BDCE  0012               	return		;funcret
 31953  01BDD0                     __end_of_EXT_INT_Initialize:
 31954                           	opt callstack 0
 31955                           
 31956 ;; *************** function _INT1_SetInterruptHandler *****************
 31957 ;; Defined at:
 31958 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31959 ;; Parameters:    Size  Location     Type
 31960 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31961 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31962 ;; Auto vars:     Size  Location     Type
 31963 ;;		None
 31964 ;; Return value:  Size  Location     Type
 31965 ;;                  1  [STACK] void 
 31966 ;; Registers used:
 31967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31968 ;; Tracked objects:
 31969 ;;		On entry : 3F/39
 31970 ;;		On exit  : 0/0
 31971 ;;		Unchanged: 0/0
 31972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31977 ;;Total ram usage:        0 bytes
 31978 ;; Hardware stack levels used:    1
 31979 ;; Hardware stack levels required when called:   15
 31980 ;; This function calls:
 31981 ;;		Nothing
 31982 ;; This function is called by:
 31983 ;;		_EXT_INT_Initialize
 31984 ;;		_start_switch_handler
 31985 ;; This function uses a reentrant model
 31986 ;;
 31987                           
 31988                           	psect	text135
 31989  01C0AE                     __ptext135:
 31990                           	opt callstack 0
 31991  01C0AE                     _INT1_SetInterruptHandler:
 31992                           	opt callstack 14
 31993                           
 31994                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 31995                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31996                           
 31997                           ; BSR set to: 57
 31998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31999                           ;incstack = 0
 32000  01C0AE  50E1               	movf	fsr1l,w,c
 32001  01C0B0  0FFD               	addlw	-3
 32002  01C0B2  6ED9               	movwf	fsr2l,c
 32003  01C0B4  50E2               	movf	fsr1h,w,c
 32004  01C0B6  6EDA               	movwf	fsr2h,c
 32005  01C0B8  0EFF               	movlw	255
 32006  01C0BA  22DA               	addwfc	fsr2h,f,c
 32007  01C0BC  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 32008  01C0C2  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 32009  01C0C8  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 32010                           
 32011                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32012  01C0CE  52E5               	movf	postdec1,f,c
 32013  01C0D0  52E5               	movf	postdec1,f,c
 32014  01C0D2  52E5               	movf	postdec1,f,c
 32015  01C0D4  0012               	return		;funcret
 32016  01C0D6                     __end_of_INT1_SetInterruptHandler:
 32017                           	opt callstack 0
 32018                           
 32019 ;; *************** function _INT0_SetInterruptHandler *****************
 32020 ;; Defined at:
 32021 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32022 ;; Parameters:    Size  Location     Type
 32023 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32024 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32025 ;; Auto vars:     Size  Location     Type
 32026 ;;		None
 32027 ;; Return value:  Size  Location     Type
 32028 ;;                  1  [STACK] void 
 32029 ;; Registers used:
 32030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32031 ;; Tracked objects:
 32032 ;;		On entry : 3F/39
 32033 ;;		On exit  : 0/0
 32034 ;;		Unchanged: 0/0
 32035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32040 ;;Total ram usage:        0 bytes
 32041 ;; Hardware stack levels used:    1
 32042 ;; Hardware stack levels required when called:   15
 32043 ;; This function calls:
 32044 ;;		Nothing
 32045 ;; This function is called by:
 32046 ;;		_EXT_INT_Initialize
 32047 ;; This function uses a reentrant model
 32048 ;;
 32049                           
 32050                           	psect	text136
 32051  01C0D6                     __ptext136:
 32052                           	opt callstack 0
 32053  01C0D6                     _INT0_SetInterruptHandler:
 32054                           	opt callstack 13
 32055                           
 32056                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 32057                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32058                           
 32059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32060                           ;incstack = 0
 32061  01C0D6  50E1               	movf	fsr1l,w,c
 32062  01C0D8  0FFD               	addlw	-3
 32063  01C0DA  6ED9               	movwf	fsr2l,c
 32064  01C0DC  50E2               	movf	fsr1h,w,c
 32065  01C0DE  6EDA               	movwf	fsr2h,c
 32066  01C0E0  0EFF               	movlw	255
 32067  01C0E2  22DA               	addwfc	fsr2h,f,c
 32068  01C0E4  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 32069  01C0EA  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 32070  01C0F0  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 32071                           
 32072                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32073  01C0F6  52E5               	movf	postdec1,f,c
 32074  01C0F8  52E5               	movf	postdec1,f,c
 32075  01C0FA  52E5               	movf	postdec1,f,c
 32076  01C0FC  0012               	return		;funcret
 32077  01C0FE                     __end_of_INT0_SetInterruptHandler:
 32078                           	opt callstack 0
 32079                           
 32080 ;; *************** function _DMA2_Initialize *****************
 32081 ;; Defined at:
 32082 ;;		line 61 in file "mcc_generated_files/dma2.c"
 32083 ;; Parameters:    Size  Location     Type
 32084 ;;		None
 32085 ;; Auto vars:     Size  Location     Type
 32086 ;;		None
 32087 ;; Return value:  Size  Location     Type
 32088 ;;                  1  [STACK] void 
 32089 ;; Registers used:
 32090 ;;		wreg, status,2
 32091 ;; Tracked objects:
 32092 ;;		On entry : 3F/3D
 32093 ;;		On exit  : 3F/3B
 32094 ;;		Unchanged: 0/0
 32095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32100 ;;Total ram usage:        0 bytes
 32101 ;; Hardware stack levels used:    1
 32102 ;; Hardware stack levels required when called:   15
 32103 ;; This function calls:
 32104 ;;		Nothing
 32105 ;; This function is called by:
 32106 ;;		_SYSTEM_Initialize
 32107 ;; This function uses a reentrant model
 32108 ;;
 32109                           
 32110                           	psect	text137
 32111  01B614                     __ptext137:
 32112                           	opt callstack 0
 32113  01B614                     _DMA2_Initialize:
 32114                           	opt callstack 14
 32115                           
 32116                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 32117                           
 32118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32119                           ;incstack = 0
 32120  01B614  0E00               	movlw	0
 32121  01B616  013B               	movlb	59	; () banked
 32122  01B618  6FD9               	movwf	217,b	;volatile
 32123  01B61A  0E10               	movlw	16
 32124  01B61C  6FDA               	movwf	218,b	;volatile
 32125  01B61E  0E00               	movlw	0
 32126  01B620  6FDB               	movwf	219,b	;volatile
 32127                           
 32128                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 32129  01B622  0E3F               	movlw	63
 32130  01B624  6FD1               	movwf	209,b	;volatile
 32131  01B626  0EBB               	movlw	187
 32132  01B628  6FD0               	movwf	208,b	;volatile
 32133                           
 32134                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 32135  01B62A  0E03               	movlw	3
 32136  01B62C  6FDD               	movwf	221,b	;volatile
 32137                           
 32138                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 32139  01B62E  0E00               	movlw	0
 32140  01B630  6FD8               	movwf	216,b	;volatile
 32141  01B632  0E01               	movlw	1
 32142  01B634  6FD7               	movwf	215,b	;volatile
 32143                           
 32144                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 32145  01B636  0E00               	movlw	0
 32146  01B638  6FCF               	movwf	207,b	;volatile
 32147  01B63A  0E01               	movlw	1
 32148  01B63C  6FCE               	movwf	206,b	;volatile
 32149                           
 32150                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 32151  01B63E  0E1C               	movlw	28
 32152  01B640  6FDF               	movwf	223,b	;volatile
 32153                           
 32154                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 32155  01B642  0E3D               	movlw	61
 32156  01B644  6FDE               	movwf	222,b	;volatile
 32157                           
 32158                           ; BSR set to: 59
 32159                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 32160  01B646  0139               	movlb	57	; () banked
 32161  01B648  97A5               	bcf	165,3,b	;volatile
 32162                           
 32163                           ; BSR set to: 57
 32164                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 32165  01B64A  95A5               	bcf	165,2,b	;volatile
 32166                           
 32167                           ; BSR set to: 57
 32168                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 32169  01B64C  9BA5               	bcf	165,5,b	;volatile
 32170                           
 32171                           ; BSR set to: 57
 32172                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 32173  01B64E  99A5               	bcf	165,4,b	;volatile
 32174                           
 32175                           ; BSR set to: 57
 32176                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 32177  01B650  9795               	bcf	149,3,b	;volatile
 32178                           
 32179                           ; BSR set to: 57
 32180                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 32181  01B652  9595               	bcf	149,2,b	;volatile
 32182                           
 32183                           ; BSR set to: 57
 32184                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 32185  01B654  9B95               	bcf	149,5,b	;volatile
 32186                           
 32187                           ; BSR set to: 57
 32188                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 32189  01B656  9995               	bcf	149,4,b	;volatile
 32190  01B658  9ED2               	bcf	16338,7,c	;# 
 32191  01B65A  0139               	banksel	14831	;# 
 32192  01B65C  0E55               	movlw	85	;# 
 32193  01B65E  6FEF               	movwf	14831,b	;# 
 32194  01B660  0EAA               	movlw	170	;# 
 32195  01B662  6FEF               	movwf	14831,b	;# 
 32196  01B664  81EF               	bsf	14831,0,b	;# 
 32197  01B666  8ED2               	bsf	16338,7,c	;# 
 32198                           
 32199                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 32200  01B668  013B               	movlb	59	; () banked
 32201  01B66A  6BDC               	clrf	220,b	;volatile
 32202                           
 32203                           ; BSR set to: 59
 32204                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32205  01B66C  0012               	return		;funcret
 32206  01B66E                     __end_of_DMA2_Initialize:
 32207                           	opt callstack 0
 32208                           
 32209 ;; *************** function _DMA1_Initialize *****************
 32210 ;; Defined at:
 32211 ;;		line 86 in file "mcc_generated_files/dma1.c"
 32212 ;; Parameters:    Size  Location     Type
 32213 ;;		None
 32214 ;; Auto vars:     Size  Location     Type
 32215 ;;		None
 32216 ;; Return value:  Size  Location     Type
 32217 ;;                  1  [STACK] void 
 32218 ;; Registers used:
 32219 ;;		wreg, status,2
 32220 ;; Tracked objects:
 32221 ;;		On entry : 3F/3B
 32222 ;;		On exit  : 3F/3B
 32223 ;;		Unchanged: 0/0
 32224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32229 ;;Total ram usage:        0 bytes
 32230 ;; Hardware stack levels used:    1
 32231 ;; Hardware stack levels required when called:   15
 32232 ;; This function calls:
 32233 ;;		Nothing
 32234 ;; This function is called by:
 32235 ;;		_SYSTEM_Initialize
 32236 ;; This function uses a reentrant model
 32237 ;;
 32238                           
 32239                           	psect	text138
 32240  01B232                     __ptext138:
 32241                           	opt callstack 0
 32242  01B232                     _DMA1_Initialize:
 32243                           	opt callstack 14
 32244                           
 32245                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 32246                           
 32247                           ; BSR set to: 59
 32248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32249                           ;incstack = 0
 32250  01B232  0E00               	movlw	0
 32251  01B234  013B               	movlb	59	; () banked
 32252  01B236  6FF9               	movwf	249,b	;volatile
 32253  01B238  0E10               	movlw	16
 32254  01B23A  6FFA               	movwf	250,b	;volatile
 32255  01B23C  0E00               	movlw	0
 32256  01B23E  6FFB               	movwf	251,b	;volatile
 32257                           
 32258                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 32259  01B240  0E3D               	movlw	61
 32260  01B242  6FF1               	movwf	241,b	;volatile
 32261  01B244  0E11               	movlw	17
 32262  01B246  6FF0               	movwf	240,b	;volatile
 32263                           
 32264                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 32265  01B248  0E03               	movlw	3
 32266  01B24A  6FFD               	movwf	253,b	;volatile
 32267                           
 32268                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 32269  01B24C  0E00               	movlw	0
 32270  01B24E  6FF8               	movwf	248,b	;volatile
 32271  01B250  0E01               	movlw	1
 32272  01B252  6FF7               	movwf	247,b	;volatile
 32273                           
 32274                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 32275  01B254  0E00               	movlw	0
 32276  01B256  6FEF               	movwf	239,b	;volatile
 32277  01B258  0E01               	movlw	1
 32278  01B25A  6FEE               	movwf	238,b	;volatile
 32279                           
 32280                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 32281  01B25C  0E15               	movlw	21
 32282  01B25E  6FFF               	movwf	255,b	;volatile
 32283                           
 32284                           ; BSR set to: 59
 32285                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 32286  01B260  6BFE               	clrf	254,b	;volatile
 32287                           
 32288                           ; BSR set to: 59
 32289                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 32290  01B262  0139               	movlb	57	; () banked
 32291  01B264  93A2               	bcf	162,1,b	;volatile
 32292                           
 32293                           ; BSR set to: 57
 32294                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 32295  01B266  91A2               	bcf	162,0,b	;volatile
 32296                           
 32297                           ; BSR set to: 57
 32298                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 32299  01B268  97A2               	bcf	162,3,b	;volatile
 32300                           
 32301                           ; BSR set to: 57
 32302                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 32303  01B26A  95A2               	bcf	162,2,b	;volatile
 32304                           
 32305                           ; BSR set to: 57
 32306                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 32307  01B26C  8392               	bsf	146,1,b	;volatile
 32308                           
 32309                           ; BSR set to: 57
 32310                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 32311  01B26E  8192               	bsf	146,0,b	;volatile
 32312                           
 32313                           ; BSR set to: 57
 32314                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 32315  01B270  8792               	bsf	146,3,b	;volatile
 32316                           
 32317                           ; BSR set to: 57
 32318                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32319  01B272  8592               	bsf	146,2,b	;volatile
 32320                           
 32321                           ; BSR set to: 57
 32322                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32323  01B274  6BF1               	clrf	241,b	;volatile
 32324                           
 32325                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32326  01B276  0E01               	movlw	1
 32327  01B278  6FF2               	movwf	242,b	;volatile
 32328                           
 32329                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32330  01B27A  0E04               	movlw	4
 32331  01B27C  6FF3               	movwf	243,b	;volatile
 32332                           
 32333                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32334  01B27E  0E02               	movlw	2
 32335  01B280  6FF4               	movwf	244,b	;volatile
 32336                           
 32337                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32338  01B282  0E03               	movlw	3
 32339  01B284  6FF7               	movwf	247,b	;volatile
 32340  01B286  9ED2               	bcf	16338,7,c	;# 
 32341  01B288  0139               	banksel	14831	;# 
 32342  01B28A  0E55               	movlw	85	;# 
 32343  01B28C  6FEF               	movwf	14831,b	;# 
 32344  01B28E  0EAA               	movlw	170	;# 
 32345  01B290  6FEF               	movwf	14831,b	;# 
 32346  01B292  81EF               	bsf	14831,0,b	;# 
 32347  01B294  8ED2               	bsf	16338,7,c	;# 
 32348                           
 32349                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32350  01B296  013B               	movlb	59	; () banked
 32351  01B298  6BFC               	clrf	252,b	;volatile
 32352                           
 32353                           ; BSR set to: 59
 32354                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32355  01B29A  0012               	return		;funcret
 32356  01B29C                     __end_of_DMA1_Initialize:
 32357                           	opt callstack 0
 32358                           
 32359 ;; *************** function _CLKREF_Initialize *****************
 32360 ;; Defined at:
 32361 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32362 ;; Parameters:    Size  Location     Type
 32363 ;;		None
 32364 ;; Auto vars:     Size  Location     Type
 32365 ;;		None
 32366 ;; Return value:  Size  Location     Type
 32367 ;;                  1  [STACK] void 
 32368 ;; Registers used:
 32369 ;;		wreg, status,2
 32370 ;; Tracked objects:
 32371 ;;		On entry : 3F/3B
 32372 ;;		On exit  : 3F/3C
 32373 ;;		Unchanged: 0/0
 32374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32379 ;;Total ram usage:        0 bytes
 32380 ;; Hardware stack levels used:    1
 32381 ;; Hardware stack levels required when called:   15
 32382 ;; This function calls:
 32383 ;;		Nothing
 32384 ;; This function is called by:
 32385 ;;		_SYSTEM_Initialize
 32386 ;; This function uses a reentrant model
 32387 ;;
 32388                           
 32389                           	psect	text139
 32390  01C532                     __ptext139:
 32391                           	opt callstack 0
 32392  01C532                     _CLKREF_Initialize:
 32393                           	opt callstack 14
 32394                           
 32395                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32396                           
 32397                           ; BSR set to: 59
 32398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32399                           ;incstack = 0
 32400  01C532  013C               	movlb	60	; () banked
 32401  01C534  6BE6               	clrf	230,b	;volatile
 32402                           
 32403                           ; BSR set to: 60
 32404                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32405  01C536  0E94               	movlw	148
 32406  01C538  6FE5               	movwf	229,b	;volatile
 32407                           
 32408                           ; BSR set to: 60
 32409                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32410  01C53A  0012               	return		;funcret
 32411  01C53C                     __end_of_CLKREF_Initialize:
 32412                           	opt callstack 0
 32413                           
 32414 ;; *************** function _ADCC_Initialize *****************
 32415 ;; Defined at:
 32416 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32417 ;; Parameters:    Size  Location     Type
 32418 ;;		None
 32419 ;; Auto vars:     Size  Location     Type
 32420 ;;		None
 32421 ;; Return value:  Size  Location     Type
 32422 ;;                  1  [STACK] void 
 32423 ;; Registers used:
 32424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32425 ;; Tracked objects:
 32426 ;;		On entry : 3F/3E
 32427 ;;		On exit  : 0/0
 32428 ;;		Unchanged: 0/0
 32429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32434 ;;Total ram usage:        0 bytes
 32435 ;; Hardware stack levels used:    1
 32436 ;; Hardware stack levels required when called:   16
 32437 ;; This function calls:
 32438 ;;		_ADCC_SetADIInterruptHandler
 32439 ;;		_ADCC_SetADTIInterruptHandler
 32440 ;; This function is called by:
 32441 ;;		_SYSTEM_Initialize
 32442 ;; This function uses a reentrant model
 32443 ;;
 32444                           
 32445                           	psect	text140
 32446  01B29C                     __ptext140:
 32447                           	opt callstack 0
 32448  01B29C                     _ADCC_Initialize:
 32449                           	opt callstack 13
 32450                           
 32451                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32452                           
 32453                           ; BSR set to: 60
 32454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32455                           ;incstack = 0
 32456  01B29C  013E               	movlb	62	; () banked
 32457  01B29E  6BDE               	clrf	222,b	;volatile
 32458                           
 32459                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32460  01B2A0  6BDF               	clrf	223,b	;volatile
 32461                           
 32462                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32463  01B2A2  6BE0               	clrf	224,b	;volatile
 32464                           
 32465                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32466  01B2A4  6BE1               	clrf	225,b	;volatile
 32467                           
 32468                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32469  01B2A6  6BE4               	clrf	228,b	;volatile
 32470                           
 32471                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32472  01B2A8  6BE5               	clrf	229,b	;volatile
 32473                           
 32474                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32475  01B2AA  6BEA               	clrf	234,b	;volatile
 32476                           
 32477                           ; BSR set to: 62
 32478                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32479  01B2AC  0E40               	movlw	64
 32480  01B2AE  6FEC               	movwf	236,b	;volatile
 32481                           
 32482                           ; BSR set to: 62
 32483                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32484  01B2B0  6BF1               	clrf	241,b	;volatile
 32485                           
 32486                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32487  01B2B2  0E20               	movlw	32
 32488  01B2B4  6FF3               	movwf	243,b	;volatile
 32489                           
 32490                           ; BSR set to: 62
 32491                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32492  01B2B6  6BF4               	clrf	244,b	;volatile
 32493                           
 32494                           ; BSR set to: 62
 32495                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32496  01B2B8  6BF5               	clrf	245,b	;volatile
 32497                           
 32498                           ; BSR set to: 62
 32499                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32500  01B2BA  6BF6               	clrf	246,b	;volatile
 32501                           
 32502                           ; BSR set to: 62
 32503                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32504  01B2BC  6BF7               	clrf	247,b	;volatile
 32505                           
 32506                           ; BSR set to: 62
 32507                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32508  01B2BE  6BF9               	clrf	249,b	;volatile
 32509                           
 32510                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32511  01B2C0  0E5B               	movlw	91
 32512  01B2C2  6FFA               	movwf	250,b	;volatile
 32513                           
 32514                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32515  01B2C4  0E27               	movlw	39
 32516  01B2C6  6FFB               	movwf	251,b	;volatile
 32517                           
 32518                           ; BSR set to: 62
 32519                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32520  01B2C8  6BFC               	clrf	252,b	;volatile
 32521                           
 32522                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32523  01B2CA  0E02               	movlw	2
 32524  01B2CC  6FFD               	movwf	253,b	;volatile
 32525                           
 32526                           ; BSR set to: 62
 32527                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32528  01B2CE  6BFE               	clrf	254,b	;volatile
 32529                           
 32530                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32531  01B2D0  0E07               	movlw	7
 32532  01B2D2  6FFF               	movwf	255,b	;volatile
 32533                           
 32534                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32535  01B2D4  0E84               	movlw	132
 32536  01B2D6  6FF8               	movwf	248,b	;volatile
 32537                           
 32538                           ; BSR set to: 62
 32539                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32540  01B2D8  0139               	movlb	57	; () banked
 32541  01B2DA  95A1               	bcf	161,2,b	;volatile
 32542                           
 32543                           ; BSR set to: 57
 32544                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32545  01B2DC  8591               	bsf	145,2,b	;volatile
 32546                           
 32547                           ; BSR set to: 57
 32548                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32549  01B2DE  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 32550  01B2E0  6EE6               	movwf	postinc1,c
 32551  01B2E2  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32552  01B2E4  6EE6               	movwf	postinc1,c
 32553  01B2E6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32554  01B2E8  6EE6               	movwf	postinc1,c
 32555  01B2EA  EC93  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32556                           
 32557                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32558  01B2EE  0139               	movlb	57	; () banked
 32559  01B2F0  97A1               	bcf	161,3,b	;volatile
 32560                           
 32561                           ; BSR set to: 57
 32562                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32563  01B2F2  8791               	bsf	145,3,b	;volatile
 32564                           
 32565                           ; BSR set to: 57
 32566                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32567  01B2F4  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 32568  01B2F6  6EE6               	movwf	postinc1,c
 32569  01B2F8  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32570  01B2FA  6EE6               	movwf	postinc1,c
 32571  01B2FC  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32572  01B2FE  6EE6               	movwf	postinc1,c
 32573  01B300  EC7F  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32574                           
 32575                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32576  01B304  0012               	return		;funcret
 32577  01B306                     __end_of_ADCC_Initialize:
 32578                           	opt callstack 0
 32579                           
 32580 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32581 ;; Defined at:
 32582 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32583 ;; Parameters:    Size  Location     Type
 32584 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32585 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32586 ;; Auto vars:     Size  Location     Type
 32587 ;;		None
 32588 ;; Return value:  Size  Location     Type
 32589 ;;                  1  [STACK] void 
 32590 ;; Registers used:
 32591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32592 ;; Tracked objects:
 32593 ;;		On entry : 0/0
 32594 ;;		On exit  : 0/0
 32595 ;;		Unchanged: 0/0
 32596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32601 ;;Total ram usage:        0 bytes
 32602 ;; Hardware stack levels used:    1
 32603 ;; Hardware stack levels required when called:   15
 32604 ;; This function calls:
 32605 ;;		Nothing
 32606 ;; This function is called by:
 32607 ;;		_ADCC_Initialize
 32608 ;;		_start_adc_scan
 32609 ;; This function uses a reentrant model
 32610 ;;
 32611                           
 32612                           	psect	text141
 32613  01C0FE                     __ptext141:
 32614                           	opt callstack 0
 32615  01C0FE                     _ADCC_SetADTIInterruptHandler:
 32616                           	opt callstack 14
 32617                           
 32618                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32619                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32620                           
 32621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32622                           ;incstack = 0
 32623  01C0FE  50E1               	movf	fsr1l,w,c
 32624  01C100  0FFD               	addlw	-3
 32625  01C102  6ED9               	movwf	fsr2l,c
 32626  01C104  50E2               	movf	fsr1h,w,c
 32627  01C106  6EDA               	movwf	fsr2h,c
 32628  01C108  0EFF               	movlw	255
 32629  01C10A  22DA               	addwfc	fsr2h,f,c
 32630  01C10C  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32631  01C112  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32632  01C118  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32633                           
 32634                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32635  01C11E  52E5               	movf	postdec1,f,c
 32636  01C120  52E5               	movf	postdec1,f,c
 32637  01C122  52E5               	movf	postdec1,f,c
 32638  01C124  0012               	return		;funcret
 32639  01C126                     __end_of_ADCC_SetADTIInterruptHandler:
 32640                           	opt callstack 0
 32641                           
 32642 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32643 ;; Defined at:
 32644 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32645 ;; Parameters:    Size  Location     Type
 32646 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32647 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32648 ;; Auto vars:     Size  Location     Type
 32649 ;;		None
 32650 ;; Return value:  Size  Location     Type
 32651 ;;                  1  [STACK] void 
 32652 ;; Registers used:
 32653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32654 ;; Tracked objects:
 32655 ;;		On entry : 6/0
 32656 ;;		On exit  : 0/0
 32657 ;;		Unchanged: 0/0
 32658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32663 ;;Total ram usage:        0 bytes
 32664 ;; Hardware stack levels used:    1
 32665 ;; Hardware stack levels required when called:   15
 32666 ;; This function calls:
 32667 ;;		Nothing
 32668 ;; This function is called by:
 32669 ;;		_ADCC_Initialize
 32670 ;;		_start_adc_scan
 32671 ;; This function uses a reentrant model
 32672 ;;
 32673                           
 32674                           	psect	text142
 32675  01C126                     __ptext142:
 32676                           	opt callstack 0
 32677  01C126                     _ADCC_SetADIInterruptHandler:
 32678                           	opt callstack 14
 32679                           
 32680                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 32681                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32682                           
 32683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32684                           ;incstack = 0
 32685  01C126  50E1               	movf	fsr1l,w,c
 32686  01C128  0FFD               	addlw	-3
 32687  01C12A  6ED9               	movwf	fsr2l,c
 32688  01C12C  50E2               	movf	fsr1h,w,c
 32689  01C12E  6EDA               	movwf	fsr2h,c
 32690  01C130  0EFF               	movlw	255
 32691  01C132  22DA               	addwfc	fsr2h,f,c
 32692  01C134  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 32693  01C13A  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 32694  01C140  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 32695                           
 32696                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32697  01C146  52E5               	movf	postdec1,f,c
 32698  01C148  52E5               	movf	postdec1,f,c
 32699  01C14A  52E5               	movf	postdec1,f,c
 32700  01C14C  0012               	return		;funcret
 32701  01C14E                     __end_of_ADCC_SetADIInterruptHandler:
 32702                           	opt callstack 0
 32703                           
 32704 ;; *************** function _INT1_ISR *****************
 32705 ;; Defined at:
 32706 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 32707 ;; Parameters:    Size  Location     Type
 32708 ;;		None
 32709 ;; Auto vars:     Size  Location     Type
 32710 ;;		None
 32711 ;; Return value:  Size  Location     Type
 32712 ;;                  1    wreg      void 
 32713 ;; Registers used:
 32714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32715 ;; Tracked objects:
 32716 ;;		On entry : 0/0
 32717 ;;		On exit  : 0/0
 32718 ;;		Unchanged: 0/0
 32719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32722 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32724 ;;Total ram usage:        4 bytes
 32725 ;; Hardware stack levels used:    1
 32726 ;; Hardware stack levels required when called:    5
 32727 ;; This function calls:
 32728 ;;		_INT1_CallBack
 32729 ;; This function is called by:
 32730 ;;		Interrupt level 1
 32731 ;; This function uses a non-reentrant model
 32732 ;;
 32733                           
 32734                           	psect	text143
 32735  01BBAC                     __ptext143:
 32736                           	opt callstack 0
 32737  01BBAC                     _INT1_ISR:
 32738                           	opt callstack 11
 32739                           
 32740                           ;incstack = 0
 32741  01BBAC  006F FF60  F027    	movff	status,??_INT1_ISR
 32742  01BBB2  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 32743  01BBB8  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 32744  01BBBE  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 32745  01BBC4  EE16  F0AF         	lfsr	1,___intlo_sp
 32746                           
 32747                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 32748  01BBC8  0139               	movlb	57	; () banked
 32749  01BBCA  91A5               	bcf	165,0,b	;volatile
 32750                           
 32751                           ; BSR set to: 57
 32752                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32753  01BBCC  ECF6  F0E0         	call	_INT1_CallBack	;wreg free
 32754  01BBD0  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32755  01BBD6  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32756  01BBDC  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32757  01BBE2  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32758  01BBE8  0011               	retfie		f
 32759  01BBEA                     __end_of_INT1_ISR:
 32760                           	opt callstack 0
 32761                           
 32762 ;; *************** function _INT1_CallBack *****************
 32763 ;; Defined at:
 32764 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32765 ;; Parameters:    Size  Location     Type
 32766 ;;		None
 32767 ;; Auto vars:     Size  Location     Type
 32768 ;;		None
 32769 ;; Return value:  Size  Location     Type
 32770 ;;                  1  [STACK] void 
 32771 ;; Registers used:
 32772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32773 ;; Tracked objects:
 32774 ;;		On entry : 3F/39
 32775 ;;		On exit  : 0/0
 32776 ;;		Unchanged: 0/0
 32777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32782 ;;Total ram usage:        0 bytes
 32783 ;; Hardware stack levels used:    1
 32784 ;; Hardware stack levels required when called:    4
 32785 ;; This function calls:
 32786 ;;		Absolute function
 32787 ;;		_INT1_DefaultInterruptHandler
 32788 ;;		_switch_handler
 32789 ;; This function is called by:
 32790 ;;		_INT1_ISR
 32791 ;; This function uses a reentrant model
 32792 ;;
 32793                           
 32794                           	psect	text144
 32795  01C1EC                     __ptext144:
 32796                           	opt callstack 0
 32797  01C1EC                     _INT1_CallBack:
 32798                           	opt callstack 11
 32799                           
 32800                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32801                           
 32802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32803                           ;incstack = 0
 32804  01C1EC  0100               	movlb	0	; () banked
 32805  01C1EE  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32806  01C1F0  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32807  01C1F2  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32808  01C1F4  B4D8               	btfsc	status,2,c
 32809  01C1F6  0012               	return	
 32810                           
 32811                           ; BSR set to: 0
 32812                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32813  01C1F8  D801               	call	u1011_28
 32814  01C1FA  0012               	return	
 32815  01C1FC                     u1011_28:
 32816  01C1FC  0005               	push	
 32817  01C1FE  6EFA               	movwf	pclath,c
 32818  01C200  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32819  01C202  6EFD               	movwf	tosl,c
 32820  01C204  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32821  01C206  6EFE               	movwf	tosh,c
 32822  01C208  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32823  01C20A  6EFF               	movwf	tosu,c
 32824  01C20C  50FA               	movf	pclath,w,c
 32825  01C20E  0012               	return		;indir
 32826  01C210                     __end_of_INT1_CallBack:
 32827                           	opt callstack 0
 32828                           
 32829 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32830 ;; Defined at:
 32831 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32832 ;; Parameters:    Size  Location     Type
 32833 ;;		None
 32834 ;; Auto vars:     Size  Location     Type
 32835 ;;		None
 32836 ;; Return value:  Size  Location     Type
 32837 ;;                  1  [STACK] void 
 32838 ;; Registers used:
 32839 ;;		None
 32840 ;; Tracked objects:
 32841 ;;		On entry : 3F/0
 32842 ;;		On exit  : 0/0
 32843 ;;		Unchanged: 0/0
 32844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32849 ;;Total ram usage:        0 bytes
 32850 ;; Hardware stack levels used:    1
 32851 ;; Hardware stack levels required when called:    3
 32852 ;; This function calls:
 32853 ;;		Nothing
 32854 ;; This function is called by:
 32855 ;;		_EXT_INT_Initialize
 32856 ;;		_INT1_CallBack
 32857 ;; This function uses a reentrant model
 32858 ;;
 32859                           
 32860                           	psect	text145
 32861  01C5B2                     __ptext145:
 32862                           	opt callstack 0
 32863  01C5B2                     _INT1_DefaultInterruptHandler:
 32864                           	opt callstack 11
 32865                           
 32866                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32867                           
 32868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32869                           ;incstack = 0
 32870  01C5B2  0012               	return		;funcret
 32871  01C5B4                     __end_of_INT1_DefaultInterruptHandler:
 32872                           	opt callstack 0
 32873                           
 32874 ;; *************** function _switch_handler *****************
 32875 ;; Defined at:
 32876 ;;		line 58 in file "dio.c"
 32877 ;; Parameters:    Size  Location     Type
 32878 ;;		None
 32879 ;; Auto vars:     Size  Location     Type
 32880 ;;  i               1  [STACK] unsigned char 
 32881 ;;  sw_value        1  [STACK] unsigned char 
 32882 ;; Return value:  Size  Location     Type
 32883 ;;                  1  [STACK] void 
 32884 ;; Registers used:
 32885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32886 ;; Tracked objects:
 32887 ;;		On entry : 3F/0
 32888 ;;		On exit  : 0/0
 32889 ;;		Unchanged: 0/0
 32890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32895 ;;Total ram usage:        0 bytes
 32896 ;; Hardware stack levels used:    1
 32897 ;; Hardware stack levels required when called:    3
 32898 ;; This function calls:
 32899 ;;		Nothing
 32900 ;; This function is called by:
 32901 ;;		_start_switch_handler
 32902 ;;		_INT1_CallBack
 32903 ;; This function uses a reentrant model
 32904 ;;
 32905                           
 32906                           	psect	text146
 32907  019768                     __ptext146:
 32908                           	opt callstack 0
 32909  019768                     _switch_handler:
 32910                           	opt callstack 0
 32911                           
 32912                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32913  019768  52E6               	movf	postinc1,f,c
 32914  01976A  52E6               	movf	postinc1,f,c
 32915                           
 32916                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32917                           ;stkvar	_i @ sp[(-2)+0]
 32918                           
 32919                           ;incstack = 0
 32920  01976C  0EFE               	movlw	-2
 32921  01976E  6AE3               	clrf	plusw1,c
 32922  019770  9ABF               	bcf	191,5,c	;volatile
 32923                           
 32924                           ;dio.c: 72:  __nop();
 32925  019772  F000               	nop	
 32926                           
 32927                           ;dio.c: 73:  __nop();
 32928  019774  F000               	nop	
 32929                           
 32930                           ;dio.c: 74:  __nop();
 32931  019776  F000               	nop	
 32932                           
 32933                           ;dio.c: 75:  __nop();
 32934  019778  F000               	nop	
 32935                           
 32936                           ;dio.c: 76:  __nop();
 32937  01977A  F000               	nop	
 32938                           
 32939                           ;dio.c: 77:  __nop();
 32940  01977C  F000               	nop	
 32941  01977E  D013               	goto	l10750
 32942  019780                     l10738:
 32943                           
 32944                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32945  019780  A6CF               	btfss	207,3,c	;volatile
 32946  019782  D00B               	goto	u980_20
 32947  019784  D007               	goto	u980_21
 32948  019786                     u979_28:
 32949                           
 32950                           ;stkvar	_sw_value @ sp[(-2)+1]
 32951  019786  0EFF               	movlw	-1
 32952  019788  0060  F033  FFE3   	movff	btemp+11,plusw1
 32953                           
 32954                           ;dio.c: 83:    break;
 32955  01978E  D021               	goto	l10752
 32956  019790                     l10740:
 32957                           
 32958                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32959  019790  A4CF               	btfss	207,2,c	;volatile
 32960  019792  D003               	goto	u980_20
 32961  019794                     u980_21:
 32962  019794  6A0C               	clrf	(btemp+11)^0,c
 32963  019796  2A0C               	incf	(btemp+11)^0,f,c
 32964  019798  D7F6               	goto	u979_28
 32965  01979A                     u980_20:
 32966  01979A  6A0C               	clrf	(btemp+11)^0,c
 32967  01979C  D7F4               	goto	u979_28
 32968  01979E                     l10742:
 32969                           
 32970                           ;dio.c: 88:    sw_value = 1;
 32971                           ;stkvar	_sw_value @ sp[(-2)+1]
 32972  01979E  0EFF               	movlw	-1
 32973  0197A0  6AE3               	clrf	plusw1,c
 32974  0197A2  2AE3               	incf	plusw1,f,c
 32975                           
 32976                           ;dio.c: 89:    break;
 32977  0197A4  D016               	goto	l10752
 32978  0197A6                     l10750:
 32979                           
 32980                           ;stkvar	_i @ sp[(-2)+0]
 32981  0197A6  0EFE               	movlw	-2
 32982  0197A8  50E3               	movf	plusw1,w,c
 32983  0197AA  6E0B               	movwf	(btemp+10)^0,c
 32984  0197AC  6A0C               	clrf	(btemp+11)^0,c
 32985                           
 32986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32987                           ; Switch size 1, requested type "simple"
 32988                           ; Number of cases is 1, Range of values is 0 to 0
 32989                           ; switch strategies available:
 32990                           ; Name         Instructions Cycles
 32991                           ; simple_byte            4     3 (average)
 32992                           ;	Chosen strategy is simple_byte
 32993  0197AE  500C               	movf	(btemp+11)^0,w,c
 32994  0197B0  0A00               	xorlw	0	; case 0
 32995  0197B2  A4D8               	btfss	status,2,c
 32996  0197B4  D7F4               	goto	l10742
 32997                           
 32998                           ; Switch size 1, requested type "simple"
 32999                           ; Number of cases is 4, Range of values is 0 to 3
 33000                           ; switch strategies available:
 33001                           ; Name         Instructions Cycles
 33002                           ; simple_byte           13     7 (average)
 33003                           ;	Chosen strategy is simple_byte
 33004  0197B6  500B               	movf	(btemp+10)^0,w,c
 33005  0197B8  0A00               	xorlw	0	; case 0
 33006  0197BA  B4D8               	btfsc	status,2,c
 33007  0197BC  D7F0               	goto	l10742
 33008  0197BE  0A01               	xorlw	1	; case 1
 33009  0197C0  B4D8               	btfsc	status,2,c
 33010  0197C2  D7ED               	goto	l10742
 33011  0197C4  0A03               	xorlw	3	; case 2
 33012  0197C6  B4D8               	btfsc	status,2,c
 33013  0197C8  D7E3               	goto	l10740
 33014  0197CA  0A01               	xorlw	1	; case 3
 33015  0197CC  B4D8               	btfsc	status,2,c
 33016  0197CE  D7D8               	goto	l10738
 33017  0197D0  D7E6               	goto	l10742
 33018  0197D2                     l10752:
 33019                           
 33020                           ;dio.c: 99:   if (sw_value) {
 33021                           ;stkvar	_sw_value @ sp[(-2)+1]
 33022  0197D2  0EFF               	movlw	-1
 33023  0197D4  50E3               	movf	plusw1,w,c
 33024  0197D6  B4D8               	btfsc	status,2,c
 33025  0197D8  D018               	goto	l10758
 33026                           
 33027                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 33028                           ;stkvar	_i @ sp[(-2)+0]
 33029  0197DA  0EFE               	movlw	-2
 33030  0197DC  50E3               	movf	plusw1,w,c
 33031  0197DE  0D05               	mullw	5
 33032  0197E0  0E54               	movlw	low _S
 33033  0197E2  24F3               	addwf	243,w,c
 33034  0197E4  6ED9               	movwf	fsr2l,c
 33035  0197E6  0E02               	movlw	high _S
 33036  0197E8  20F4               	addwfc	prodh,w,c
 33037  0197EA  6EDA               	movwf	fsr2h,c
 33038  0197EC  04DE               	decf	postinc2,w,c
 33039  0197EE  A4D8               	btfss	status,2,c
 33040  0197F0  D049               	goto	l10766
 33041                           
 33042                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 33043                           ;stkvar	_i @ sp[(-2)+0]
 33044  0197F2  0EFE               	movlw	-2
 33045  0197F4  50E3               	movf	plusw1,w,c
 33046  0197F6  0D05               	mullw	5
 33047  0197F8  0E54               	movlw	low _S
 33048  0197FA  24F3               	addwf	243,w,c
 33049  0197FC  6ED9               	movwf	fsr2l,c
 33050  0197FE  0E02               	movlw	high _S
 33051  019800  20F4               	addwfc	prodh,w,c
 33052  019802  6EDA               	movwf	fsr2h,c
 33053  019804  0E00               	movlw	0
 33054  019806  6EDF               	movwf	indf2,c
 33055  019808  D03D               	goto	l10766
 33056  01980A                     l10758:
 33057                           
 33058                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 33059                           ;stkvar	_i @ sp[(-2)+0]
 33060  01980A  0EFE               	movlw	-2
 33061  01980C  50E3               	movf	plusw1,w,c
 33062  01980E  0D05               	mullw	5
 33063  019810  0E54               	movlw	low _S
 33064  019812  24F3               	addwf	243,w,c
 33065  019814  6ED9               	movwf	fsr2l,c
 33066  019816  0E02               	movlw	high _S
 33067  019818  20F4               	addwfc	prodh,w,c
 33068  01981A  6EDA               	movwf	fsr2h,c
 33069  01981C  50DF               	movf	indf2,w,c
 33070  01981E  A4D8               	btfss	status,2,c
 33071  019820  D031               	goto	l10766
 33072                           
 33073                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 33074                           ;stkvar	_i @ sp[(-2)+0]
 33075  019822  0EFE               	movlw	-2
 33076  019824  50E3               	movf	plusw1,w,c
 33077  019826  0D05               	mullw	5
 33078  019828  0E54               	movlw	low _S
 33079  01982A  24F3               	addwf	243,w,c
 33080  01982C  6ED9               	movwf	fsr2l,c
 33081  01982E  0E02               	movlw	high _S
 33082  019830  20F4               	addwfc	prodh,w,c
 33083  019832  6EDA               	movwf	fsr2h,c
 33084  019834  0E01               	movlw	1
 33085  019836  6EDF               	movwf	indf2,c
 33086                           
 33087                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 33088  019838  EE20  F1C2         	lfsr	2,_V+187	;volatile
 33089                           
 33090                           ;stkvar	_i @ sp[(-2)+0]
 33091  01983C  0EFE               	movlw	-2
 33092  01983E  50E3               	movf	plusw1,w,c
 33093  019840  0D05               	mullw	5
 33094  019842  0E55               	movlw	low (_S+1)
 33095  019844  24F3               	addwf	243,w,c
 33096  019846  6EE9               	movwf	fsr0l,c
 33097  019848  0E02               	movlw	high (_S+1)
 33098  01984A  20F4               	addwfc	prodh,w,c
 33099  01984C  6EEA               	movwf	fsr0h,c
 33100  01984E  006F FF7B FFEE     	movff	postinc2,postinc0
 33101  019854  006F FF7B FFEE     	movff	postinc2,postinc0
 33102  01985A  006F FF7B FFEE     	movff	postinc2,postinc0
 33103  019860  006F FF7B FFEE     	movff	postinc2,postinc0
 33104                           
 33105                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 33106                           ;stkvar	_i @ sp[(-2)+0]
 33107  019866  0EFE               	movlw	-2
 33108  019868  006F FF8C  F00C    	movff	plusw1,btemp+11
 33109  01986E  0E01               	movlw	1
 33110  019870  6E0B               	movwf	(btemp+10)^0,c
 33111  019872  2A0C               	incf	(btemp+11)^0,f,c
 33112  019874  D002               	goto	u984_24
 33113  019876                     u984_25:
 33114  019876  90D8               	bcf	status,0,c
 33115  019878  360B               	rlcf	(btemp+10)^0,f,c
 33116  01987A                     u984_24:
 33117  01987A  2E0C               	decfsz	(btemp+11)^0,f,c
 33118  01987C  D7FC               	goto	u984_25
 33119  01987E  500B               	movf	(btemp+10)^0,w,c
 33120  019880  0102               	movlb	2	; () banked
 33121  019882  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 33122  019884                     l10766:
 33123                           
 33124                           ;dio.c: 110:  } while (++i < 4);
 33125                           ;stkvar	_i @ sp[(-2)+0]
 33126  019884  0EFE               	movlw	-2
 33127  019886  2AE3               	incf	plusw1,f,c
 33128  019888  0EFE               	movlw	-2
 33129  01988A  006F FF8C  F001    	movff	plusw1,btemp
 33130  019890  0E03               	movlw	3
 33131  019892  6401               	cpfsgt	btemp^0,c
 33132  019894  D788               	goto	l10750
 33133                           
 33134                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 33135  019896  8ABF               	bsf	191,5,c	;volatile
 33136                           
 33137                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33138  019898  52E5               	movf	postdec1,f,c
 33139  01989A  52E5               	movf	postdec1,f,c
 33140  01989C  0012               	return		;funcret
 33141  01989E                     __end_of_switch_handler:
 33142                           	opt callstack 0
 33143                           
 33144 ;; *************** function _TMR5_ISR *****************
 33145 ;; Defined at:
 33146 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 33147 ;; Parameters:    Size  Location     Type
 33148 ;;		None
 33149 ;; Auto vars:     Size  Location     Type
 33150 ;;		None
 33151 ;; Return value:  Size  Location     Type
 33152 ;;                  1    wreg      void 
 33153 ;; Registers used:
 33154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33155 ;; Tracked objects:
 33156 ;;		On entry : 0/0
 33157 ;;		On exit  : 3F/0
 33158 ;;		Unchanged: 0/0
 33159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33162 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33163 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33164 ;;Total ram usage:       15 bytes
 33165 ;; Hardware stack levels used:    1
 33166 ;; Hardware stack levels required when called:    9
 33167 ;; This function calls:
 33168 ;;		_TMR5_CallBack
 33169 ;;		_TMR5_WriteTimer
 33170 ;; This function is called by:
 33171 ;;		Interrupt level 1
 33172 ;; This function uses a non-reentrant model
 33173 ;;
 33174                           
 33175                           	psect	text147
 33176  01A204                     __ptext147:
 33177                           	opt callstack 0
 33178  01A204                     _TMR5_ISR:
 33179                           	opt callstack 7
 33180                           
 33181                           ;incstack = 0
 33182  01A204  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 33183  01A20A  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 33184  01A210  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 33185  01A216  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 33186  01A21C  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 33187  01A222  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 33188  01A228  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 33189  01A22E  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 33190  01A234  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 33191  01A23A  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 33192  01A240  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 33193  01A246  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 33194  01A24C  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 33195  01A252  EE16  F0AF         	lfsr	1,___intlo_sp
 33196                           
 33197                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 33198  01A256  0139               	movlb	57	; () banked
 33199  01A258  9DA8               	bcf	168,6,b	;volatile
 33200                           
 33201                           ; BSR set to: 57
 33202                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 33203  01A25A  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 33204  01A260  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 33205  01A266  EC96  F0DD         	call	_TMR5_WriteTimer	;wreg free
 33206                           
 33207                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 33208  01A26A  0101               	movlb	1	; () banked
 33209  01A26C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 33210  01A26E  6E2B               	movwf	??_TMR5_ISR^0,c
 33211  01A270  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 33212  01A272  0E05               	movlw	5
 33213  01A274  262B               	addwf	??_TMR5_ISR^0,f,c
 33214  01A276  0E00               	movlw	0
 33215  01A278  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 33216  01A27A  0100               	movlb	0	; () banked
 33217  01A27C  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 33218  01A27E  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33219  01A280  502B               	movf	??_TMR5_ISR^0,w,c
 33220  01A282  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 33221  01A284  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 33222  01A286  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33223  01A288  A0D8               	btfss	status,0,c
 33224  01A28A  D005               	goto	i1l1019
 33225                           
 33226                           ; BSR set to: 0
 33227                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 33228  01A28C  EC08  F0E1         	call	_TMR5_CallBack	;wreg free
 33229                           
 33230                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 33231  01A290  0100               	movlb	0	; () banked
 33232  01A292  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 33233  01A294  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 33234  01A296                     i1l1019:
 33235                           
 33236                           ; BSR set to: 0
 33237  01A296  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 33238  01A29C  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 33239  01A2A2  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 33240  01A2A8  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 33241  01A2AE  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 33242  01A2B4  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 33243  01A2BA  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 33244  01A2C0  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 33245  01A2C6  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 33246  01A2CC  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 33247  01A2D2  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 33248  01A2D8  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 33249  01A2DE  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 33250  01A2E4  0011               	retfie		f
 33251  01A2E6                     __end_of_TMR5_ISR:
 33252                           	opt callstack 0
 33253                           
 33254 ;; *************** function _TMR5_WriteTimer *****************
 33255 ;; Defined at:
 33256 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 33257 ;; Parameters:    Size  Location     Type
 33258 ;;  timerVal        2  [STACK] unsigned short 
 33259 ;; Auto vars:     Size  Location     Type
 33260 ;;		None
 33261 ;; Return value:  Size  Location     Type
 33262 ;;                  1  [STACK] void 
 33263 ;; Registers used:
 33264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33265 ;; Tracked objects:
 33266 ;;		On entry : 3F/39
 33267 ;;		On exit  : 0/0
 33268 ;;		Unchanged: 0/0
 33269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33274 ;;Total ram usage:        0 bytes
 33275 ;; Hardware stack levels used:    1
 33276 ;; Hardware stack levels required when called:    3
 33277 ;; This function calls:
 33278 ;;		Nothing
 33279 ;; This function is called by:
 33280 ;;		_TMR5_ISR
 33281 ;; This function uses a reentrant model
 33282 ;;
 33283                           
 33284                           	psect	text148
 33285  01BB2C                     __ptext148:
 33286                           	opt callstack 0
 33287  01BB2C                     _TMR5_WriteTimer:
 33288                           	opt callstack 12
 33289                           
 33290                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 33291                           
 33292                           ; BSR set to: 0
 33293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33294                           ;incstack = 0
 33295  01BB2C  A49A               	btfss	154,2,c	;volatile
 33296  01BB2E  D00F               	goto	l10970
 33297                           
 33298                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 33299  01BB30  909A               	bcf	154,0,c	;volatile
 33300                           
 33301                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 33302                           ;stkvar	_timerVal @ sp[(0)+-2]
 33303  01BB32  0EFF               	movlw	255
 33304  01BB34  24E1               	addwf	fsr1l,w,c
 33305  01BB36  6ED9               	movwf	fsr2l,c
 33306  01BB38  0EFF               	movlw	255
 33307  01BB3A  20E2               	addwfc	fsr1h,w,c
 33308  01BB3C  6EDA               	movwf	fsr2h,c
 33309  01BB3E  50DF               	movf	indf2,w,c
 33310  01BB40  6E99               	movwf	153,c	;volatile
 33311                           
 33312                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 33313                           ;stkvar	_timerVal @ sp[(0)+-2]
 33314  01BB42  0EFE               	movlw	-2
 33315  01BB44  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33316                           
 33317                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33318  01BB4A  809A               	bsf	154,0,c	;volatile
 33319                           
 33320                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33321  01BB4C  D00C               	goto	l1002
 33322  01BB4E                     l10970:
 33323                           
 33324                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33325                           ;stkvar	_timerVal @ sp[(0)+-2]
 33326  01BB4E  0EFF               	movlw	255
 33327  01BB50  24E1               	addwf	fsr1l,w,c
 33328  01BB52  6ED9               	movwf	fsr2l,c
 33329  01BB54  0EFF               	movlw	255
 33330  01BB56  20E2               	addwfc	fsr1h,w,c
 33331  01BB58  6EDA               	movwf	fsr2h,c
 33332  01BB5A  50DF               	movf	indf2,w,c
 33333  01BB5C  6E99               	movwf	153,c	;volatile
 33334                           
 33335                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33336                           ;stkvar	_timerVal @ sp[(0)+-2]
 33337  01BB5E  0EFE               	movlw	-2
 33338  01BB60  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33339  01BB66                     l1002:
 33340                           
 33341                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33342  01BB66  52E5               	movf	postdec1,f,c
 33343  01BB68  52E5               	movf	postdec1,f,c
 33344  01BB6A  0012               	return		;funcret
 33345  01BB6C                     __end_of_TMR5_WriteTimer:
 33346                           	opt callstack 0
 33347                           
 33348 ;; *************** function _TMR5_CallBack *****************
 33349 ;; Defined at:
 33350 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33351 ;; Parameters:    Size  Location     Type
 33352 ;;		None
 33353 ;; Auto vars:     Size  Location     Type
 33354 ;;		None
 33355 ;; Return value:  Size  Location     Type
 33356 ;;                  1  [STACK] void 
 33357 ;; Registers used:
 33358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33359 ;; Tracked objects:
 33360 ;;		On entry : 3F/0
 33361 ;;		On exit  : 0/0
 33362 ;;		Unchanged: 0/0
 33363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33368 ;;Total ram usage:        0 bytes
 33369 ;; Hardware stack levels used:    1
 33370 ;; Hardware stack levels required when called:    8
 33371 ;; This function calls:
 33372 ;;		Absolute function
 33373 ;;		_TMR5_DefaultInterruptHandler
 33374 ;; This function is called by:
 33375 ;;		_TMR5_ISR
 33376 ;; This function uses a reentrant model
 33377 ;;
 33378                           
 33379                           	psect	text149
 33380  01C210                     __ptext149:
 33381                           	opt callstack 0
 33382  01C210                     _TMR5_CallBack:
 33383                           	opt callstack 7
 33384                           
 33385                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33386                           
 33387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33388                           ;incstack = 0
 33389  01C210  0100               	movlb	0	; () banked
 33390  01C212  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33391  01C214  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33392  01C216  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33393  01C218  B4D8               	btfsc	status,2,c
 33394  01C21A  0012               	return	
 33395                           
 33396                           ; BSR set to: 0
 33397                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33398  01C21C  D801               	call	u1020_28
 33399  01C21E  0012               	return	
 33400  01C220                     u1020_28:
 33401  01C220  0005               	push	
 33402  01C222  6EFA               	movwf	pclath,c
 33403  01C224  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33404  01C226  6EFD               	movwf	tosl,c
 33405  01C228  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33406  01C22A  6EFE               	movwf	tosh,c
 33407  01C22C  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33408  01C22E  6EFF               	movwf	tosu,c
 33409  01C230  50FA               	movf	pclath,w,c
 33410  01C232  0012               	return		;indir
 33411  01C234                     __end_of_TMR5_CallBack:
 33412                           	opt callstack 0
 33413                           
 33414 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33415 ;; Defined at:
 33416 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33417 ;; Parameters:    Size  Location     Type
 33418 ;;		None
 33419 ;; Auto vars:     Size  Location     Type
 33420 ;;		None
 33421 ;; Return value:  Size  Location     Type
 33422 ;;                  1  [STACK] void 
 33423 ;; Registers used:
 33424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33425 ;; Tracked objects:
 33426 ;;		On entry : 3F/0
 33427 ;;		On exit  : 0/0
 33428 ;;		Unchanged: 0/0
 33429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33434 ;;Total ram usage:        0 bytes
 33435 ;; Hardware stack levels used:    1
 33436 ;; Hardware stack levels required when called:    7
 33437 ;; This function calls:
 33438 ;;		_check_day_time
 33439 ;; This function is called by:
 33440 ;;		_TMR5_Initialize
 33441 ;;		_TMR5_CallBack
 33442 ;; This function uses a reentrant model
 33443 ;;
 33444                           
 33445                           	psect	text150
 33446  01BC5C                     __ptext150:
 33447                           	opt callstack 0
 33448  01BC5C                     _TMR5_DefaultInterruptHandler:
 33449                           	opt callstack 7
 33450                           
 33451                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33452                           
 33453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33454                           ;incstack = 0
 33455  01BC5C  A0BE               	btfss	190,0,c	;volatile
 33456  01BC5E  D002               	goto	u958_20
 33457  01BC60  0E01               	movlw	1
 33458  01BC62  D001               	goto	u958_26
 33459  01BC64                     u958_20:
 33460  01BC64  0E00               	movlw	0
 33461  01BC66                     u958_26:
 33462  01BC66  0AFF               	xorlw	255
 33463  01BC68  6E0C               	movwf	(btemp+11)^0,c
 33464  01BC6A  50BE               	movf	190,w,c	;volatile
 33465  01BC6C  180C               	xorwf	(btemp+11)^0,w,c
 33466  01BC6E  0BFE               	andlw	-2
 33467  01BC70  180C               	xorwf	(btemp+11)^0,w,c
 33468  01BC72  6EBE               	movwf	190,c	;volatile
 33469                           
 33470                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33471  01BC74  0E01               	movlw	1
 33472  01BC76  0101               	movlb	1	; () banked
 33473  01BC78  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 33474  01BC7A  0E00               	movlw	0
 33475  01BC7C  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 33476  01BC7E  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33477  01BC80  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33478                           
 33479                           ; BSR set to: 1
 33480                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33481  01BC82  0E01               	movlw	1
 33482  01BC84  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33483  01BC86  0E00               	movlw	0
 33484  01BC88  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33485  01BC8A  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33486  01BC8C  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33487                           
 33488                           ; BSR set to: 1
 33489                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33490  01BC8E  EC33  F0C5         	call	_check_day_time	;wreg free
 33491                           
 33492                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33493  01BC92  0012               	return		;funcret
 33494  01BC94                     __end_of_TMR5_DefaultInterruptHandler:
 33495                           	opt callstack 0
 33496                           
 33497 ;; *************** function _check_day_time *****************
 33498 ;; Defined at:
 33499 ;;		line 165 in file "mbmc.c"
 33500 ;; Parameters:    Size  Location     Type
 33501 ;;		None
 33502 ;; Auto vars:     Size  Location     Type
 33503 ;;  light           4  [STACK] float 
 33504 ;; Return value:  Size  Location     Type
 33505 ;;                  1  [STACK] _Bool 
 33506 ;; Registers used:
 33507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33508 ;; Tracked objects:
 33509 ;;		On entry : 3F/1
 33510 ;;		On exit  : 0/0
 33511 ;;		Unchanged: 0/0
 33512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33517 ;;Total ram usage:        0 bytes
 33518 ;; Hardware stack levels used:    1
 33519 ;; Hardware stack levels required when called:    6
 33520 ;; This function calls:
 33521 ;;		___flge
 33522 ;;		_conv_raw_result
 33523 ;;		_get_ac_charger_relay
 33524 ;;		_set_ac_charger_relay
 33525 ;; This function is called by:
 33526 ;;		_TMR5_DefaultInterruptHandler
 33527 ;; This function uses a reentrant model
 33528 ;;
 33529                           
 33530                           	psect	text151
 33531  018A66                     __ptext151:
 33532                           	opt callstack 0
 33533  018A66                     _check_day_time:
 33534                           	opt callstack 0
 33535                           
 33536                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33537  018A66  52E6               	movf	postinc1,f,c
 33538  018A68  52E6               	movf	postinc1,f,c
 33539  018A6A  52E6               	movf	postinc1,f,c
 33540  018A6C  52E6               	movf	postinc1,f,c
 33541                           
 33542                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33543                           
 33544                           ;incstack = 0
 33545  018A6E  0E00               	movlw	0
 33546  018A70  6EE6               	movwf	postinc1,c
 33547  018A72  0E0D               	movlw	13
 33548  018A74  6EE6               	movwf	postinc1,c
 33549  018A76  EC95  F0A9         	call	_conv_raw_result	;wreg free
 33550                           
 33551                           ;stkvar	_light @ sp[(-4)+0]
 33552  018A7A  0EFC               	movlw	-4
 33553  018A7C  0060  F007  FFE3   	movff	btemp,plusw1
 33554  018A82  0EFD               	movlw	-3
 33555  018A84  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33556  018A8A  0EFE               	movlw	-2
 33557  018A8C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33558  018A92  0EFF               	movlw	-1
 33559  018A94  0060  F013  FFE3   	movff	btemp+3,plusw1
 33560                           
 33561                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33562  018A9A  2A41               	incf	check_day_time@day_delay^0,f,c
 33563  018A9C  0441               	decf	check_day_time@day_delay^0,w,c
 33564  018A9E  A4D8               	btfss	status,2,c
 33565  018AA0  D0A9               	goto	l1972
 33566  018AA2  0101               	movlb	1	; () banked
 33567  018AA4  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33568  018AA6  B4D8               	btfsc	status,2,c
 33569  018AA8  D0A5               	goto	l1972
 33570                           
 33571                           ; BSR set to: 1
 33572                           ;mbmc.c: 173:   if (C.soc > 15) {
 33573  018AAA  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33574  018AAE  0E01               	movlw	1
 33575  018AB0  50DB               	movf	plusw2,w,c
 33576  018AB2  E104               	bnz	u937_20
 33577  018AB4  0E10               	movlw	16
 33578  018AB6  5CDE               	subwf	postinc2,w,c
 33579  018AB8  A0D8               	btfss	status,0,c
 33580  018ABA  D073               	goto	l10014
 33581  018ABC                     u937_20:
 33582                           
 33583                           ; BSR set to: 1
 33584                           ;mbmc.c: 174:    if (!C.day) {
 33585  018ABC  EE22  F021         	lfsr	2,_C+290	;volatile
 33586  018AC0  50DF               	movf	indf2,w,c
 33587  018AC2  A4D8               	btfss	status,2,c
 33588  018AC4  D035               	goto	l10002
 33589                           
 33590                           ; BSR set to: 1
 33591                           ;mbmc.c: 175:     if (light > 22.0) {
 33592                           ;stkvar	_light @ sp[(-4)+0]
 33593  018AC6  0EFC               	movlw	-4
 33594  018AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 33595  018ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 33596  018AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 33597  018ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 33598  018AE0  0E00               	movlw	0
 33599  018AE2  6EE6               	movwf	postinc1,c
 33600  018AE4  0E00               	movlw	0
 33601  018AE6  6EE6               	movwf	postinc1,c
 33602  018AE8  0EB0               	movlw	176
 33603  018AEA  6EE6               	movwf	postinc1,c
 33604  018AEC  0E41               	movlw	65
 33605  018AEE  6EE6               	movwf	postinc1,c
 33606  018AF0  EC0A  F0C9         	call	___flge	;wreg free
 33607  018AF4  B001               	btfsc	btemp& (0+255),0,c
 33608  018AF6  D07E               	goto	l1972
 33609                           
 33610                           ;mbmc.c: 176:      C.day = 1;
 33611  018AF8  0E01               	movlw	1
 33612  018AFA  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33613                           
 33614                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33615  018B00  EE20  F188         	lfsr	2,_V+129	;volatile
 33616  018B04  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33617  018B0A  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33618  018B10  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33619  018B16  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33620                           
 33621                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33622  018B1C  EC83  F0E2         	call	_get_ac_charger_relay	;wreg free
 33623  018B20  5001               	movf	btemp^0,w,c
 33624  018B22  B4D8               	btfsc	status,2,c
 33625  018B24  D06B               	goto	l1968
 33626                           
 33627                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33628  018B26  0E00               	movlw	0
 33629  018B28  6EE6               	movwf	postinc1,c
 33630  018B2A  EC6D  F0E2         	call	_set_ac_charger_relay	;wreg free
 33631  018B2E  D066               	goto	l1968
 33632  018B30                     l10002:
 33633                           
 33634                           ; BSR set to: 1
 33635                           ;mbmc.c: 184:     if (light < 12.0) {
 33636  018B30  0E00               	movlw	0
 33637  018B32  6EE6               	movwf	postinc1,c
 33638  018B34  0E00               	movlw	0
 33639  018B36  6EE6               	movwf	postinc1,c
 33640  018B38  0E40               	movlw	64
 33641  018B3A  6EE6               	movwf	postinc1,c
 33642  018B3C  0E41               	movlw	65
 33643  018B3E  6EE6               	movwf	postinc1,c
 33644                           
 33645                           ;stkvar	_light @ sp[(-8)+0]
 33646  018B40  0EF8               	movlw	-8
 33647  018B42  006F FF8F FFE6     	movff	plusw1,postinc1
 33648  018B48  006F FF8F FFE6     	movff	plusw1,postinc1
 33649  018B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 33650  018B54  006F FF8F FFE6     	movff	plusw1,postinc1
 33651  018B5A  EC0A  F0C9         	call	___flge	;wreg free
 33652  018B5E  B001               	btfsc	btemp& (0+255),0,c
 33653  018B60  D049               	goto	l1972
 33654                           
 33655                           ;mbmc.c: 185:      C.day = 0;
 33656  018B62  0E00               	movlw	0
 33657  018B64  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33658                           
 33659                           ;mbmc.c: 186:      C.day_end = V.ticks;
 33660  018B6A  EE20  F188         	lfsr	2,_V+129	;volatile
 33661  018B6E  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 33662  018B74  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 33663  018B7A  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 33664  018B80  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 33665                           
 33666                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 33667  018B86  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33668  018B8A  0E01               	movlw	1
 33669  018B8C  50DB               	movf	plusw2,w,c
 33670  018B8E  E136               	bnz	l1968
 33671  018B90  0E28               	movlw	40
 33672  018B92  5CDE               	subwf	postinc2,w,c
 33673  018B94  B0D8               	btfsc	status,0,c
 33674  018B96  D032               	goto	l1968
 33675                           
 33676                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 33677  018B98  0E01               	movlw	1
 33678  018B9A  6EE6               	movwf	postinc1,c
 33679  018B9C  EC6D  F0E2         	call	_set_ac_charger_relay	;wreg free
 33680  018BA0  D02D               	goto	l1968
 33681  018BA2                     l10014:
 33682                           
 33683                           ; BSR set to: 1
 33684                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 33685  018BA2  EE21  F377         	lfsr	2,_C+120	;volatile
 33686  018BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 33687  018BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 33688  018BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 33689  018BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 33690  018BBE  EE21  F37B         	lfsr	2,_C+124	;volatile
 33691  018BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 33692  018BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 33693  018BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 33694  018BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 33695  018BDA  EC0A  F0C9         	call	___flge	;wreg free
 33696  018BDE  B001               	btfsc	btemp& (0+255),0,c
 33697  018BE0  D009               	goto	l1972
 33698                           
 33699                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 33700  018BE2  EC83  F0E2         	call	_get_ac_charger_relay	;wreg free
 33701  018BE6  5001               	movf	btemp^0,w,c
 33702  018BE8  A4D8               	btfss	status,2,c
 33703  018BEA  D004               	goto	l1972
 33704                           
 33705                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 33706  018BEC  0E01               	movlw	1
 33707  018BEE  6EE6               	movwf	postinc1,c
 33708  018BF0  EC6D  F0E2         	call	_set_ac_charger_relay	;wreg free
 33709  018BF4                     l1972:
 33710                           
 33711                           ;mbmc.c: 204:  if (day_delay >= 240)
 33712  018BF4  0EEF               	movlw	239
 33713  018BF6  6441               	cpfsgt	check_day_time@day_delay^0,c
 33714  018BF8  D001               	goto	l1968
 33715                           
 33716                           ;mbmc.c: 205:   day_delay = 0;
 33717  018BFA  6A41               	clrf	check_day_time@day_delay^0,c
 33718  018BFC                     l1968:
 33719                           
 33720                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33721  018BFC  52E5               	movf	postdec1,f,c
 33722  018BFE  52E5               	movf	postdec1,f,c
 33723  018C00  52E5               	movf	postdec1,f,c
 33724  018C02  52E5               	movf	postdec1,f,c
 33725  018C04  0012               	return		;funcret
 33726  018C06                     __end_of_check_day_time:
 33727                           	opt callstack 0
 33728                           
 33729 ;; *************** function _set_ac_charger_relay *****************
 33730 ;; Defined at:
 33731 ;;		line 135 in file "mbmc.c"
 33732 ;; Parameters:    Size  Location     Type
 33733 ;;  mode            1  [STACK] const _Bool 
 33734 ;; Auto vars:     Size  Location     Type
 33735 ;;		None
 33736 ;; Return value:  Size  Location     Type
 33737 ;;                  1  [STACK] void 
 33738 ;; Registers used:
 33739 ;;		wreg, fsr1l, fsr1h
 33740 ;; Tracked objects:
 33741 ;;		On entry : 0/1
 33742 ;;		On exit  : 0/0
 33743 ;;		Unchanged: 0/0
 33744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33749 ;;Total ram usage:        0 bytes
 33750 ;; Hardware stack levels used:    1
 33751 ;; Hardware stack levels required when called:    3
 33752 ;; This function calls:
 33753 ;;		Nothing
 33754 ;; This function is called by:
 33755 ;;		_check_day_time
 33756 ;; This function uses a reentrant model
 33757 ;;
 33758                           
 33759                           	psect	text152
 33760  01C4DA                     __ptext152:
 33761                           	opt callstack 0
 33762  01C4DA                     _set_ac_charger_relay:
 33763                           	opt callstack 9
 33764                           
 33765                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33766                           ;stkvar	_mode @ sp[(0)+-1]
 33767                           
 33768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33769                           ;incstack = 0
 33770  01C4DA  0EFF               	movlw	-1
 33771  01C4DC  B0E3               	btfsc	plusw1,0,c
 33772  01C4DE  D002               	bra	u932_25
 33773  01C4E0  9CBD               	bcf	189,6,c	;volatile
 33774  01C4E2  D001               	bra	u932_26
 33775  01C4E4                     u932_25:
 33776  01C4E4  8CBD               	bsf	189,6,c	;volatile
 33777  01C4E6                     u932_26:
 33778                           
 33779                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33780  01C4E6  52E5               	movf	postdec1,f,c
 33781  01C4E8  0012               	return		;funcret
 33782  01C4EA                     __end_of_set_ac_charger_relay:
 33783                           	opt callstack 0
 33784                           
 33785 ;; *************** function _get_ac_charger_relay *****************
 33786 ;; Defined at:
 33787 ;;		line 140 in file "mbmc.c"
 33788 ;; Parameters:    Size  Location     Type
 33789 ;;		None
 33790 ;; Auto vars:     Size  Location     Type
 33791 ;;		None
 33792 ;; Return value:  Size  Location     Type
 33793 ;;                  1  [STACK] _Bool 
 33794 ;; Registers used:
 33795 ;;		btemp
 33796 ;; Tracked objects:
 33797 ;;		On entry : 0/1
 33798 ;;		On exit  : 0/0
 33799 ;;		Unchanged: 0/0
 33800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33805 ;;Total ram usage:        0 bytes
 33806 ;; Hardware stack levels used:    1
 33807 ;; Hardware stack levels required when called:    3
 33808 ;; This function calls:
 33809 ;;		Nothing
 33810 ;; This function is called by:
 33811 ;;		_check_day_time
 33812 ;;		_calc_bsoc
 33813 ;; This function uses a reentrant model
 33814 ;;
 33815                           
 33816                           	psect	text153
 33817  01C506                     __ptext153:
 33818                           	opt callstack 0
 33819  01C506                     _get_ac_charger_relay:
 33820                           	opt callstack 10
 33821                           
 33822                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33823                           
 33824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33825                           ;incstack = 0
 33826  01C506  ACBD               	btfss	189,6,c	;volatile
 33827  01C508  D003               	goto	u951_20
 33828  01C50A  6A01               	clrf	btemp^0,c
 33829  01C50C  2A01               	incf	btemp^0,f,c
 33830  01C50E  0012               	return	
 33831  01C510                     u951_20:
 33832  01C510  6A01               	clrf	btemp^0,c
 33833                           
 33834                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33835  01C512  0012               	return		;funcret
 33836  01C514                     __end_of_get_ac_charger_relay:
 33837                           	opt callstack 0
 33838                           
 33839 ;; *************** function _TMR3_ISR *****************
 33840 ;; Defined at:
 33841 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33842 ;; Parameters:    Size  Location     Type
 33843 ;;		None
 33844 ;; Auto vars:     Size  Location     Type
 33845 ;;		None
 33846 ;; Return value:  Size  Location     Type
 33847 ;;                  1    wreg      void 
 33848 ;; Registers used:
 33849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33850 ;; Tracked objects:
 33851 ;;		On entry : 0/0
 33852 ;;		On exit  : 3F/0
 33853 ;;		Unchanged: 0/0
 33854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33857 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33858 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33859 ;;Total ram usage:       25 bytes
 33860 ;; Hardware stack levels used:    1
 33861 ;; Hardware stack levels required when called:   14
 33862 ;; This function calls:
 33863 ;;		_TMR3_CallBack
 33864 ;;		_TMR3_WriteTimer
 33865 ;; This function is called by:
 33866 ;;		Interrupt level 1
 33867 ;; This function uses a non-reentrant model
 33868 ;;
 33869                           
 33870                           	psect	text154
 33871  019378                     __ptext154:
 33872                           	opt callstack 0
 33873  019378                     _TMR3_ISR:
 33874                           	opt callstack 2
 33875                           
 33876                           ;incstack = 0
 33877  019378  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 33878  01937E  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 33879  019384  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 33880  01938A  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 33881  019390  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 33882  019396  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 33883  01939C  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 33884  0193A2  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 33885  0193A8  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 33886  0193AE  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 33887  0193B4  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 33888  0193BA  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 33889  0193C0  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 33890  0193C6  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 33891  0193CC  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 33892  0193D2  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 33893  0193D8  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 33894  0193DE  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 33895  0193E4  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 33896  0193EA  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 33897  0193F0  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 33898  0193F6  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 33899  0193FC  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 33900  019402  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 33901  019408  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 33902  01940E  EE16  F0AF         	lfsr	1,___intlo_sp
 33903                           
 33904                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33905  019412  0139               	movlb	57	; () banked
 33906  019414  9DA6               	bcf	166,6,b	;volatile
 33907                           
 33908                           ; BSR set to: 57
 33909                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33910  019416  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 33911  01941C  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33912  019422  ECB6  F0DD         	call	_TMR3_WriteTimer	;wreg free
 33913                           
 33914                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33915  019426  0100               	movlb	0	; () banked
 33916  019428  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33917  01942A  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33918  01942C  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33919  01942E  E104               	bnz	i1u1282_20
 33920  019430  0E28               	movlw	40
 33921  019432  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33922  019434  A0D8               	btfss	status,0,c
 33923  019436  D005               	goto	i1l1207
 33924  019438                     i1u1282_20:
 33925                           
 33926                           ; BSR set to: 0
 33927                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33928  019438  EC1A  F0E1         	call	_TMR3_CallBack	;wreg free
 33929                           
 33930                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33931  01943C  0100               	movlb	0	; () banked
 33932  01943E  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33933  019440  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33934  019442                     i1l1207:
 33935                           
 33936                           ; BSR set to: 0
 33937  019442  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 33938  019448  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 33939  01944E  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 33940  019454  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 33941  01945A  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 33942  019460  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 33943  019466  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 33944  01946C  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 33945  019472  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33946  019478  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33947  01947E  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33948  019484  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 33949  01948A  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 33950  019490  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 33951  019496  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 33952  01949C  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 33953  0194A2  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 33954  0194A8  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 33955  0194AE  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 33956  0194B4  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 33957  0194BA  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 33958  0194C0  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33959  0194C6  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33960  0194CC  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33961  0194D2  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 33962  0194D8  0011               	retfie		f
 33963  0194DA                     __end_of_TMR3_ISR:
 33964                           	opt callstack 0
 33965                           
 33966 ;; *************** function _TMR3_WriteTimer *****************
 33967 ;; Defined at:
 33968 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33969 ;; Parameters:    Size  Location     Type
 33970 ;;  timerVal        2  [STACK] unsigned short 
 33971 ;; Auto vars:     Size  Location     Type
 33972 ;;		None
 33973 ;; Return value:  Size  Location     Type
 33974 ;;                  1  [STACK] void 
 33975 ;; Registers used:
 33976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33977 ;; Tracked objects:
 33978 ;;		On entry : 3F/39
 33979 ;;		On exit  : 0/0
 33980 ;;		Unchanged: 0/0
 33981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33986 ;;Total ram usage:        0 bytes
 33987 ;; Hardware stack levels used:    1
 33988 ;; Hardware stack levels required when called:    3
 33989 ;; This function calls:
 33990 ;;		Nothing
 33991 ;; This function is called by:
 33992 ;;		_TMR3_ISR
 33993 ;; This function uses a reentrant model
 33994 ;;
 33995                           
 33996                           	psect	text155
 33997  01BB6C                     __ptext155:
 33998                           	opt callstack 0
 33999  01BB6C                     _TMR3_WriteTimer:
 34000                           	opt callstack 12
 34001                           
 34002                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 34003                           
 34004                           ; BSR set to: 0
 34005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34006                           ;incstack = 0
 34007  01BB6C  A4A6               	btfss	166,2,c	;volatile
 34008  01BB6E  D00F               	goto	l10988
 34009                           
 34010                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 34011  01BB70  90A6               	bcf	166,0,c	;volatile
 34012                           
 34013                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 34014                           ;stkvar	_timerVal @ sp[(0)+-2]
 34015  01BB72  0EFF               	movlw	255
 34016  01BB74  24E1               	addwf	fsr1l,w,c
 34017  01BB76  6ED9               	movwf	fsr2l,c
 34018  01BB78  0EFF               	movlw	255
 34019  01BB7A  20E2               	addwfc	fsr1h,w,c
 34020  01BB7C  6EDA               	movwf	fsr2h,c
 34021  01BB7E  50DF               	movf	indf2,w,c
 34022  01BB80  6EA5               	movwf	165,c	;volatile
 34023                           
 34024                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 34025                           ;stkvar	_timerVal @ sp[(0)+-2]
 34026  01BB82  0EFE               	movlw	-2
 34027  01BB84  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34028                           
 34029                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 34030  01BB8A  80A6               	bsf	166,0,c	;volatile
 34031                           
 34032                           ;mcc_generated_files/tmr3.c: 141:     }
 34033  01BB8C  D00C               	goto	l1190
 34034  01BB8E                     l10988:
 34035                           
 34036                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 34037                           ;stkvar	_timerVal @ sp[(0)+-2]
 34038  01BB8E  0EFF               	movlw	255
 34039  01BB90  24E1               	addwf	fsr1l,w,c
 34040  01BB92  6ED9               	movwf	fsr2l,c
 34041  01BB94  0EFF               	movlw	255
 34042  01BB96  20E2               	addwfc	fsr1h,w,c
 34043  01BB98  6EDA               	movwf	fsr2h,c
 34044  01BB9A  50DF               	movf	indf2,w,c
 34045  01BB9C  6EA5               	movwf	165,c	;volatile
 34046                           
 34047                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 34048                           ;stkvar	_timerVal @ sp[(0)+-2]
 34049  01BB9E  0EFE               	movlw	-2
 34050  01BBA0  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34051  01BBA6                     l1190:
 34052                           
 34053                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34054  01BBA6  52E5               	movf	postdec1,f,c
 34055  01BBA8  52E5               	movf	postdec1,f,c
 34056  01BBAA  0012               	return		;funcret
 34057  01BBAC                     __end_of_TMR3_WriteTimer:
 34058                           	opt callstack 0
 34059                           
 34060 ;; *************** function _TMR3_CallBack *****************
 34061 ;; Defined at:
 34062 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 34063 ;; Parameters:    Size  Location     Type
 34064 ;;		None
 34065 ;; Auto vars:     Size  Location     Type
 34066 ;;		None
 34067 ;; Return value:  Size  Location     Type
 34068 ;;                  1  [STACK] void 
 34069 ;; Registers used:
 34070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34071 ;; Tracked objects:
 34072 ;;		On entry : 3F/0
 34073 ;;		On exit  : 0/0
 34074 ;;		Unchanged: 0/0
 34075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34080 ;;Total ram usage:        0 bytes
 34081 ;; Hardware stack levels used:    1
 34082 ;; Hardware stack levels required when called:   13
 34083 ;; This function calls:
 34084 ;;		Absolute function
 34085 ;;		_TMR3_DefaultInterruptHandler
 34086 ;;		_calc_bsoc
 34087 ;; This function is called by:
 34088 ;;		_TMR3_ISR
 34089 ;; This function uses a reentrant model
 34090 ;;
 34091                           
 34092                           	psect	text156
 34093  01C234                     __ptext156:
 34094                           	opt callstack 0
 34095  01C234                     _TMR3_CallBack:
 34096                           	opt callstack 2
 34097                           
 34098                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 34099                           
 34100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34101                           ;incstack = 0
 34102  01C234  0100               	movlb	0	; () banked
 34103  01C236  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34104  01C238  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34105  01C23A  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34106  01C23C  B4D8               	btfsc	status,2,c
 34107  01C23E  0012               	return	
 34108                           
 34109                           ; BSR set to: 0
 34110                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 34111  01C240  D801               	call	u1269_28
 34112  01C242  0012               	return	
 34113  01C244                     u1269_28:
 34114  01C244  0005               	push	
 34115  01C246  6EFA               	movwf	pclath,c
 34116  01C248  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34117  01C24A  6EFD               	movwf	tosl,c
 34118  01C24C  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34119  01C24E  6EFE               	movwf	tosh,c
 34120  01C250  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34121  01C252  6EFF               	movwf	tosu,c
 34122  01C254  50FA               	movf	pclath,w,c
 34123  01C256  0012               	return		;indir
 34124  01C258                     __end_of_TMR3_CallBack:
 34125                           	opt callstack 0
 34126                           
 34127 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34128 ;; Defined at:
 34129 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 34130 ;; Parameters:    Size  Location     Type
 34131 ;;		None
 34132 ;; Auto vars:     Size  Location     Type
 34133 ;;		None
 34134 ;; Return value:  Size  Location     Type
 34135 ;;                  1  [STACK] void 
 34136 ;; Registers used:
 34137 ;;		None
 34138 ;; Tracked objects:
 34139 ;;		On entry : 3F/0
 34140 ;;		On exit  : 0/0
 34141 ;;		Unchanged: 0/0
 34142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34147 ;;Total ram usage:        0 bytes
 34148 ;; Hardware stack levels used:    1
 34149 ;; Hardware stack levels required when called:    3
 34150 ;; This function calls:
 34151 ;;		Nothing
 34152 ;; This function is called by:
 34153 ;;		_TMR3_Initialize
 34154 ;;		_TMR3_CallBack
 34155 ;; This function uses a reentrant model
 34156 ;;
 34157                           
 34158                           	psect	text157
 34159  01C5B4                     __ptext157:
 34160                           	opt callstack 0
 34161  01C5B4                     _TMR3_DefaultInterruptHandler:
 34162                           	opt callstack 11
 34163                           
 34164                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34165                           
 34166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34167                           ;incstack = 0
 34168  01C5B4  0012               	return		;funcret
 34169  01C5B6                     __end_of_TMR3_DefaultInterruptHandler:
 34170                           	opt callstack 0
 34171                           
 34172 ;; *************** function _calc_bsoc *****************
 34173 ;; Defined at:
 34174 ;;		line 39 in file "bsoc.c"
 34175 ;; Parameters:    Size  Location     Type
 34176 ;;		None
 34177 ;; Auto vars:     Size  Location     Type
 34178 ;;  adj             4  [STACK] float 
 34179 ;;  log_ptr         2  [STACK] PTR unsigned char 
 34180 ;;		 -> port_data(512), 
 34181 ;; Return value:  Size  Location     Type
 34182 ;;                  1  [STACK] void 
 34183 ;; Registers used:
 34184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 34185 ;; Tracked objects:
 34186 ;;		On entry : 3F/0
 34187 ;;		On exit  : 5/1
 34188 ;;		Unchanged: 0/0
 34189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34194 ;;Total ram usage:        0 bytes
 34195 ;; Hardware stack levels used:    1
 34196 ;; Hardware stack levels required when called:   12
 34197 ;; This function calls:
 34198 ;;		_StartTimer
 34199 ;;		___asfladd
 34200 ;;		___fldiv
 34201 ;;		___flge
 34202 ;;		___flmul
 34203 ;;		___flneg
 34204 ;;		___fltol
 34205 ;;		_fabsf
 34206 ;;		_get_ac_charger_relay
 34207 ;;		_port_data_dma_ptr
 34208 ;;		_send_port_data_dma
 34209 ;;		_sprintf
 34210 ;;		_strlen
 34211 ;; This function is called by:
 34212 ;;		_init_bsoc
 34213 ;;		_TMR3_CallBack
 34214 ;; This function uses a reentrant model
 34215 ;;
 34216                           
 34217                           	psect	text158
 34218  013394                     __ptext158:
 34219                           	opt callstack 0
 34220  013394                     _calc_bsoc:
 34221                           	opt callstack 0
 34222                           
 34223                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34224  013394  0E06               	movlw	6
 34225  013396  26E1               	addwf	fsr1l,f,c
 34226  013398  0E00               	movlw	0
 34227  01339A  22E2               	addwfc	fsr1h,f,c
 34228                           
 34229                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 34230                           
 34231                           ;incstack = 0
 34232  01339C  0E00               	movlw	0
 34233  01339E  6E09               	movwf	(btemp+8)^0,c
 34234  0133A0  0E00               	movlw	0
 34235  0133A2  6E0A               	movwf	(btemp+9)^0,c
 34236  0133A4  0E80               	movlw	128
 34237  0133A6  6E0B               	movwf	(btemp+10)^0,c
 34238  0133A8  0E3F               	movlw	63
 34239  0133AA  6E0C               	movwf	(btemp+11)^0,c
 34240                           
 34241                           ;stkvar	_adj @ sp[(-6)+0]
 34242  0133AC  0EFA               	movlw	-6
 34243  0133AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 34244  0133B4  0EFB               	movlw	-5
 34245  0133B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34246  0133BC  0EFC               	movlw	-4
 34247  0133BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34248  0133C4  0EFD               	movlw	-3
 34249  0133C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 34250  0133CC  82BE               	bsf	190,1,c	;volatile
 34251                           
 34252                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 34253  0133CE  0E00               	movlw	0
 34254  0133D0  6EE6               	movwf	postinc1,c
 34255  0133D2  0E00               	movlw	0
 34256  0133D4  6EE6               	movwf	postinc1,c
 34257  0133D6  0E61               	movlw	97
 34258  0133D8  6EE6               	movwf	postinc1,c
 34259  0133DA  0E45               	movlw	69
 34260  0133DC  6EE6               	movwf	postinc1,c
 34261  0133DE  EE21  F343         	lfsr	2,_C+68	;volatile
 34262  0133E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34263  0133E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34264  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 34265  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 34266  0133FA  ECD8  F0A6         	call	___fldiv	;wreg free
 34267  0133FE  0060  F007  FFE6   	movff	btemp,postinc1
 34268  013404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34269  01340A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34270  013410  0060  F013  FFE6   	movff	btemp+3,postinc1
 34271  013416  0E8F               	movlw	low (_C+144)
 34272  013418  6EE6               	movwf	postinc1,c
 34273  01341A  0E07               	movlw	high (_C+144)
 34274  01341C  6EE6               	movwf	postinc1,c
 34275  01341E  EC6A  F0D8         	call	___asfladd	;wreg free
 34276                           
 34277                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 34278  013422  EE21  F38F         	lfsr	2,_C+144	;volatile
 34279  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 34280  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 34281  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 34282  013438  006F FF7B FFE6     	movff	postinc2,postinc1
 34283  01343E  EE21  F38B         	lfsr	2,_C+140	;volatile
 34284  013442  006F FF7B FFE6     	movff	postinc2,postinc1
 34285  013448  006F FF7B FFE6     	movff	postinc2,postinc1
 34286  01344E  006F FF7B FFE6     	movff	postinc2,postinc1
 34287  013454  006F FF7B FFE6     	movff	postinc2,postinc1
 34288  01345A  EC0A  F0C9         	call	___flge	;wreg free
 34289  01345E  B001               	btfsc	btemp& (0+255),0,c
 34290  013460  D00E               	goto	l13090
 34291                           
 34292                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 34293  013462  EE21  F38B         	lfsr	2,_C+140	;volatile
 34294  013466  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 34295  01346C  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 34296  013472  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 34297  013478  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 34298  01347E                     l13090:
 34299                           
 34300                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 34301  01347E  0ECD               	movlw	205
 34302  013480  6EE6               	movwf	postinc1,c
 34303  013482  0ECC               	movlw	204
 34304  013484  6EE6               	movwf	postinc1,c
 34305  013486  0ECC               	movlw	204
 34306  013488  6EE6               	movwf	postinc1,c
 34307  01348A  0E3D               	movlw	61
 34308  01348C  6EE6               	movwf	postinc1,c
 34309  01348E  EE21  F38F         	lfsr	2,_C+144	;volatile
 34310  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 34311  013498  006F FF7B FFE6     	movff	postinc2,postinc1
 34312  01349E  006F FF7B FFE6     	movff	postinc2,postinc1
 34313  0134A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34314  0134AA  EC0A  F0C9         	call	___flge	;wreg free
 34315  0134AE  B001               	btfsc	btemp& (0+255),0,c
 34316  0134B0  D010               	goto	l13094
 34317                           
 34318                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34319  0134B2  0ECD               	movlw	205
 34320  0134B4  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34321  0134BA  0ECC               	movlw	204
 34322  0134BC  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34323  0134C2  0ECC               	movlw	204
 34324  0134C4  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34325  0134CA  0E3D               	movlw	61
 34326  0134CC  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34327  0134D2                     l13094:
 34328                           
 34329                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34330  0134D2  EE21  F343         	lfsr	2,_C+68	;volatile
 34331  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34332  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34333  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34334  0134E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34335  0134EE  0E0A               	movlw	10
 34336  0134F0  6EE6               	movwf	postinc1,c
 34337  0134F2  0ED7               	movlw	215
 34338  0134F4  6EE6               	movwf	postinc1,c
 34339  0134F6  0E23               	movlw	35
 34340  0134F8  6EE6               	movwf	postinc1,c
 34341  0134FA  0E3C               	movlw	60
 34342  0134FC  6EE6               	movwf	postinc1,c
 34343  0134FE  EC0A  F0C9         	call	___flge	;wreg free
 34344  013502  B001               	btfsc	btemp& (0+255),0,c
 34345  013504  D01C               	goto	l13098
 34346                           
 34347                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34348  013506  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34349  01350C  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34350  013512  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34351  013518  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34352                           
 34353                           ;stkvar	_adj @ sp[(-6)+0]
 34354  01351E  0EFA               	movlw	-6
 34355  013520  0060  F027  FFE3   	movff	btemp+8,plusw1
 34356  013526  0EFB               	movlw	-5
 34357  013528  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34358  01352E  0EFC               	movlw	-4
 34359  013530  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34360  013536  0EFD               	movlw	-3
 34361  013538  0060  F033  FFE3   	movff	btemp+11,plusw1
 34362  01353E                     l13098:
 34363                           
 34364                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34365  01353E  0E0A               	movlw	10
 34366  013540  6EE6               	movwf	postinc1,c
 34367  013542  0ED7               	movlw	215
 34368  013544  6EE6               	movwf	postinc1,c
 34369  013546  0E23               	movlw	35
 34370  013548  6EE6               	movwf	postinc1,c
 34371  01354A  0E3C               	movlw	60
 34372  01354C  6EE6               	movwf	postinc1,c
 34373  01354E  EE21  F343         	lfsr	2,_C+68	;volatile
 34374  013552  006F FF7B FFE6     	movff	postinc2,postinc1
 34375  013558  006F FF7B FFE6     	movff	postinc2,postinc1
 34376  01355E  006F FF7B FFE6     	movff	postinc2,postinc1
 34377  013564  006F FF7B FFE6     	movff	postinc2,postinc1
 34378  01356A  EC0A  F0C9         	call	___flge	;wreg free
 34379  01356E  B001               	btfsc	btemp& (0+255),0,c
 34380  013570  D01C               	goto	l13102
 34381                           
 34382                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34383  013572  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34384  013578  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34385  01357E  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34386  013584  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34387                           
 34388                           ;stkvar	_adj @ sp[(-6)+0]
 34389  01358A  0EFA               	movlw	-6
 34390  01358C  0060  F027  FFE3   	movff	btemp+8,plusw1
 34391  013592  0EFB               	movlw	-5
 34392  013594  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34393  01359A  0EFC               	movlw	-4
 34394  01359C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34395  0135A2  0EFD               	movlw	-3
 34396  0135A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 34397  0135AA                     l13102:
 34398                           
 34399                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34400  0135AA  0E00               	movlw	0
 34401  0135AC  6EE6               	movwf	postinc1,c
 34402  0135AE  0E00               	movlw	0
 34403  0135B0  6EE6               	movwf	postinc1,c
 34404  0135B2  0E61               	movlw	97
 34405  0135B4  6EE6               	movwf	postinc1,c
 34406  0135B6  0E45               	movlw	69
 34407  0135B8  6EE6               	movwf	postinc1,c
 34408                           
 34409                           ;stkvar	_adj @ sp[(-10)+0]
 34410  0135BA  0EF6               	movlw	-10
 34411  0135BC  006F FF8F FFE6     	movff	plusw1,postinc1
 34412  0135C2  006F FF8F FFE6     	movff	plusw1,postinc1
 34413  0135C8  006F FF8F FFE6     	movff	plusw1,postinc1
 34414  0135CE  006F FF8F FFE6     	movff	plusw1,postinc1
 34415  0135D4  EE21  F343         	lfsr	2,_C+68	;volatile
 34416  0135D8  006F FF7B FFE6     	movff	postinc2,postinc1
 34417  0135DE  006F FF7B FFE6     	movff	postinc2,postinc1
 34418  0135E4  006F FF7B FFE6     	movff	postinc2,postinc1
 34419  0135EA  006F FF7B FFE6     	movff	postinc2,postinc1
 34420  0135F0  ECE5  F09E         	call	___flmul	;wreg free
 34421  0135F4  0060  F007  FFE6   	movff	btemp,postinc1
 34422  0135FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34423  013600  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34424  013606  0060  F013  FFE6   	movff	btemp+3,postinc1
 34425  01360C  ECD8  F0A6         	call	___fldiv	;wreg free
 34426  013610  0060  F007  FFE6   	movff	btemp,postinc1
 34427  013616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34428  01361C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34429  013622  0060  F013  FFE6   	movff	btemp+3,postinc1
 34430  013628  0E8F               	movlw	low (_C+144)
 34431  01362A  6EE6               	movwf	postinc1,c
 34432  01362C  0E07               	movlw	high (_C+144)
 34433  01362E  6EE6               	movwf	postinc1,c
 34434  013630  EC6A  F0D8         	call	___asfladd	;wreg free
 34435                           
 34436                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34437  013634  EE21  F38F         	lfsr	2,_C+144	;volatile
 34438  013638  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34439  01363E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34440  013644  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34441  01364A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34442                           
 34443                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34444  013650  EE21  F39B         	lfsr	2,_C+156	;volatile
 34445  013654  006F FF7B FFE6     	movff	postinc2,postinc1
 34446  01365A  006F FF7B FFE6     	movff	postinc2,postinc1
 34447  013660  006F FF7B FFE6     	movff	postinc2,postinc1
 34448  013666  006F FF7B FFE6     	movff	postinc2,postinc1
 34449  01366C  EE21  F38B         	lfsr	2,_C+140	;volatile
 34450  013670  006F FF7B FFE6     	movff	postinc2,postinc1
 34451  013676  006F FF7B FFE6     	movff	postinc2,postinc1
 34452  01367C  006F FF7B FFE6     	movff	postinc2,postinc1
 34453  013682  006F FF7B FFE6     	movff	postinc2,postinc1
 34454  013688  EC0A  F0C9         	call	___flge	;wreg free
 34455  01368C  B001               	btfsc	btemp& (0+255),0,c
 34456  01368E  D00E               	goto	l13110
 34457                           
 34458                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34459  013690  EE21  F38B         	lfsr	2,_C+140	;volatile
 34460  013694  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34461  01369A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34462  0136A0  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34463  0136A6  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34464  0136AC                     l13110:
 34465                           
 34466                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34467  0136AC  0ECD               	movlw	205
 34468  0136AE  6EE6               	movwf	postinc1,c
 34469  0136B0  0ECC               	movlw	204
 34470  0136B2  6EE6               	movwf	postinc1,c
 34471  0136B4  0ECC               	movlw	204
 34472  0136B6  6EE6               	movwf	postinc1,c
 34473  0136B8  0E3D               	movlw	61
 34474  0136BA  6EE6               	movwf	postinc1,c
 34475  0136BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 34476  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 34477  0136C6  006F FF7B FFE6     	movff	postinc2,postinc1
 34478  0136CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34479  0136D2  006F FF7B FFE6     	movff	postinc2,postinc1
 34480  0136D8  EC0A  F0C9         	call	___flge	;wreg free
 34481  0136DC  B001               	btfsc	btemp& (0+255),0,c
 34482  0136DE  D010               	goto	l13114
 34483                           
 34484                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34485  0136E0  0ECD               	movlw	205
 34486  0136E2  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34487  0136E8  0ECC               	movlw	204
 34488  0136EA  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34489  0136F0  0ECC               	movlw	204
 34490  0136F2  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34491  0136F8  0E3D               	movlw	61
 34492  0136FA  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34493  013700                     l13114:
 34494                           
 34495                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34496  013700  0E00               	movlw	0
 34497  013702  6EE6               	movwf	postinc1,c
 34498  013704  0E00               	movlw	0
 34499  013706  6EE6               	movwf	postinc1,c
 34500  013708  0E61               	movlw	97
 34501  01370A  6EE6               	movwf	postinc1,c
 34502  01370C  0E45               	movlw	69
 34503  01370E  6EE6               	movwf	postinc1,c
 34504  013710  EE21  F347         	lfsr	2,_C+72	;volatile
 34505  013714  006F FF7B FFE6     	movff	postinc2,postinc1
 34506  01371A  006F FF7B FFE6     	movff	postinc2,postinc1
 34507  013720  006F FF7B FFE6     	movff	postinc2,postinc1
 34508  013726  006F FF7B FFE6     	movff	postinc2,postinc1
 34509  01372C  ECD8  F0A6         	call	___fldiv	;wreg free
 34510  013730  0060  F007  FFE6   	movff	btemp,postinc1
 34511  013736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34512  01373C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34513  013742  0060  F013  FFE6   	movff	btemp+3,postinc1
 34514  013748  0E93               	movlw	low (_C+148)
 34515  01374A  6EE6               	movwf	postinc1,c
 34516  01374C  0E07               	movlw	high (_C+148)
 34517  01374E  6EE6               	movwf	postinc1,c
 34518  013750  EC6A  F0D8         	call	___asfladd	;wreg free
 34519                           
 34520                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34521  013754  0E00               	movlw	0
 34522  013756  6EE6               	movwf	postinc1,c
 34523  013758  0E00               	movlw	0
 34524  01375A  6EE6               	movwf	postinc1,c
 34525  01375C  0E61               	movlw	97
 34526  01375E  6EE6               	movwf	postinc1,c
 34527  013760  0E45               	movlw	69
 34528  013762  6EE6               	movwf	postinc1,c
 34529  013764  EE21  F37B         	lfsr	2,_C+124	;volatile
 34530  013768  006F FF7B FFE6     	movff	postinc2,postinc1
 34531  01376E  006F FF7B FFE6     	movff	postinc2,postinc1
 34532  013774  006F FF7B FFE6     	movff	postinc2,postinc1
 34533  01377A  006F FF7B FFE6     	movff	postinc2,postinc1
 34534  013780  ECD8  F0A6         	call	___fldiv	;wreg free
 34535  013784  0060  F007  FFE6   	movff	btemp,postinc1
 34536  01378A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34537  013790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34538  013796  0060  F013  FFE6   	movff	btemp+3,postinc1
 34539  01379C  0EA7               	movlw	low (_C+168)
 34540  01379E  6EE6               	movwf	postinc1,c
 34541  0137A0  0E07               	movlw	high (_C+168)
 34542  0137A2  6EE6               	movwf	postinc1,c
 34543  0137A4  EC6A  F0D8         	call	___asfladd	;wreg free
 34544                           
 34545                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34546  0137A8  0E00               	movlw	0
 34547  0137AA  6EE6               	movwf	postinc1,c
 34548  0137AC  0E00               	movlw	0
 34549  0137AE  6EE6               	movwf	postinc1,c
 34550  0137B0  0E61               	movlw	97
 34551  0137B2  6EE6               	movwf	postinc1,c
 34552  0137B4  0E45               	movlw	69
 34553  0137B6  6EE6               	movwf	postinc1,c
 34554  0137B8  EE21  F377         	lfsr	2,_C+120	;volatile
 34555  0137BC  006F FF7B FFE6     	movff	postinc2,postinc1
 34556  0137C2  006F FF7B FFE6     	movff	postinc2,postinc1
 34557  0137C8  006F FF7B FFE6     	movff	postinc2,postinc1
 34558  0137CE  006F FF7B FFE6     	movff	postinc2,postinc1
 34559  0137D4  ECD8  F0A6         	call	___fldiv	;wreg free
 34560  0137D8  0060  F007  FFE6   	movff	btemp,postinc1
 34561  0137DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34562  0137E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34563  0137EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34564  0137F0  0EAB               	movlw	low (_C+172)
 34565  0137F2  6EE6               	movwf	postinc1,c
 34566  0137F4  0E07               	movlw	high (_C+172)
 34567  0137F6  6EE6               	movwf	postinc1,c
 34568  0137F8  EC6A  F0D8         	call	___asfladd	;wreg free
 34569                           
 34570                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34571  0137FC  0E00               	movlw	0
 34572  0137FE  6EE6               	movwf	postinc1,c
 34573  013800  0E00               	movlw	0
 34574  013802  6EE6               	movwf	postinc1,c
 34575  013804  0E61               	movlw	97
 34576  013806  6EE6               	movwf	postinc1,c
 34577  013808  0E45               	movlw	69
 34578  01380A  6EE6               	movwf	postinc1,c
 34579  01380C  EE21  F373         	lfsr	2,_C+116	;volatile
 34580  013810  006F FF7B FFE6     	movff	postinc2,postinc1
 34581  013816  006F FF7B FFE6     	movff	postinc2,postinc1
 34582  01381C  006F FF7B FFE6     	movff	postinc2,postinc1
 34583  013822  006F FF7B FFE6     	movff	postinc2,postinc1
 34584  013828  ECD8  F0A6         	call	___fldiv	;wreg free
 34585  01382C  0060  F007  FFE6   	movff	btemp,postinc1
 34586  013832  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34587  013838  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34588  01383E  0060  F013  FFE6   	movff	btemp+3,postinc1
 34589  013844  0EAF               	movlw	low (_C+176)
 34590  013846  6EE6               	movwf	postinc1,c
 34591  013848  0E07               	movlw	high (_C+176)
 34592  01384A  6EE6               	movwf	postinc1,c
 34593  01384C  EC6A  F0D8         	call	___asfladd	;wreg free
 34594                           
 34595                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34596  013850  EE21  F37F         	lfsr	2,_C+128	;volatile
 34597  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 34598  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 34599  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 34600  013866  006F FF7B FFE6     	movff	postinc2,postinc1
 34601  01386C  0E00               	movlw	0
 34602  01386E  6EE6               	movwf	postinc1,c
 34603  013870  0E00               	movlw	0
 34604  013872  6EE6               	movwf	postinc1,c
 34605  013874  0E00               	movlw	0
 34606  013876  6EE6               	movwf	postinc1,c
 34607  013878  0E00               	movlw	0
 34608  01387A  6EE6               	movwf	postinc1,c
 34609  01387C  EC0A  F0C9         	call	___flge	;wreg free
 34610  013880  B001               	btfsc	btemp& (0+255),0,c
 34611  013882  D02A               	goto	l13120
 34612                           
 34613                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34614  013884  0E00               	movlw	0
 34615  013886  6EE6               	movwf	postinc1,c
 34616  013888  0E00               	movlw	0
 34617  01388A  6EE6               	movwf	postinc1,c
 34618  01388C  0E61               	movlw	97
 34619  01388E  6EE6               	movwf	postinc1,c
 34620  013890  0E45               	movlw	69
 34621  013892  6EE6               	movwf	postinc1,c
 34622  013894  EE21  F37F         	lfsr	2,_C+128	;volatile
 34623  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 34624  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 34625  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34626  0138AA  006F FF7B FFE6     	movff	postinc2,postinc1
 34627  0138B0  ECD8  F0A6         	call	___fldiv	;wreg free
 34628  0138B4  0060  F007  FFE6   	movff	btemp,postinc1
 34629  0138BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34630  0138C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34631  0138C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 34632  0138CC  0E9F               	movlw	low (_C+160)
 34633  0138CE  6EE6               	movwf	postinc1,c
 34634  0138D0  0E07               	movlw	high (_C+160)
 34635  0138D2  6EE6               	movwf	postinc1,c
 34636  0138D4  EC6A  F0D8         	call	___asfladd	;wreg free
 34637  0138D8                     l13120:
 34638                           
 34639                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34640  0138D8  EE21  F37F         	lfsr	2,_C+128	;volatile
 34641  0138DC  0E03               	movlw	3
 34642  0138DE  AEDB               	btfss	plusw2,7,c
 34643  0138E0  D038               	goto	l13124
 34644                           
 34645                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34646  0138E2  0E00               	movlw	0
 34647  0138E4  6EE6               	movwf	postinc1,c
 34648  0138E6  0E00               	movlw	0
 34649  0138E8  6EE6               	movwf	postinc1,c
 34650  0138EA  0E61               	movlw	97
 34651  0138EC  6EE6               	movwf	postinc1,c
 34652  0138EE  0E45               	movlw	69
 34653  0138F0  6EE6               	movwf	postinc1,c
 34654  0138F2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34655  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 34656  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 34657  013902  006F FF7B FFE6     	movff	postinc2,postinc1
 34658  013908  006F FF7B FFE6     	movff	postinc2,postinc1
 34659  01390E  ECD8  F0A6         	call	___fldiv	;wreg free
 34660  013912  0060  F007  FFE6   	movff	btemp,postinc1
 34661  013918  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34662  01391E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34663  013924  0060  F013  FFE6   	movff	btemp+3,postinc1
 34664  01392A  EC38  F0D4         	call	_fabsf	;wreg free
 34665  01392E  0060  F007  FFE6   	movff	btemp,postinc1
 34666  013934  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34667  01393A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34668  013940  0060  F013  FFE6   	movff	btemp+3,postinc1
 34669  013946  0EA3               	movlw	low (_C+164)
 34670  013948  6EE6               	movwf	postinc1,c
 34671  01394A  0E07               	movlw	high (_C+164)
 34672  01394C  6EE6               	movwf	postinc1,c
 34673  01394E  EC6A  F0D8         	call	___asfladd	;wreg free
 34674  013952                     l13124:
 34675                           
 34676                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 34677  013952  0E00               	movlw	0
 34678  013954  6EE6               	movwf	postinc1,c
 34679  013956  0E00               	movlw	0
 34680  013958  6EE6               	movwf	postinc1,c
 34681  01395A  0EC8               	movlw	200
 34682  01395C  6EE6               	movwf	postinc1,c
 34683  01395E  0E42               	movlw	66
 34684  013960  6EE6               	movwf	postinc1,c
 34685  013962  EE21  F38B         	lfsr	2,_C+140	;volatile
 34686  013966  006F FF7B FFE6     	movff	postinc2,postinc1
 34687  01396C  006F FF7B FFE6     	movff	postinc2,postinc1
 34688  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 34689  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 34690  01397E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34691  013982  006F FF7B FFE6     	movff	postinc2,postinc1
 34692  013988  006F FF7B FFE6     	movff	postinc2,postinc1
 34693  01398E  006F FF7B FFE6     	movff	postinc2,postinc1
 34694  013994  006F FF7B FFE6     	movff	postinc2,postinc1
 34695  01399A  ECD8  F0A6         	call	___fldiv	;wreg free
 34696  01399E  0060  F007  FFE6   	movff	btemp,postinc1
 34697  0139A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34698  0139AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34699  0139B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 34700  0139B6  ECE5  F09E         	call	___flmul	;wreg free
 34701  0139BA  0060  F007  FFE6   	movff	btemp,postinc1
 34702  0139C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34703  0139C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34704  0139CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 34705  0139D2  EC51  F0C8         	call	___fltol	;wreg free
 34706  0139D6  0060  F004  F00B   	movff	btemp,btemp+10
 34707  0139DC  0060  F008  F00C   	movff	btemp+1,btemp+11
 34708  0139E2  0E01               	movlw	1
 34709  0139E4  260B               	addwf	(btemp+10)^0,f,c
 34710  0139E6  0E00               	movlw	0
 34711  0139E8  220C               	addwfc	(btemp+11)^0,f,c
 34712  0139EA  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 34713  0139F0  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 34714                           
 34715                           ;bsoc.c: 76:  if (C.soc > 100)
 34716  0139F6  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34717  0139FA  0E01               	movlw	1
 34718  0139FC  50DB               	movf	plusw2,w,c
 34719  0139FE  E104               	bnz	u1262_20
 34720  013A00  0E65               	movlw	101
 34721  013A02  5CDE               	subwf	postinc2,w,c
 34722  013A04  A0D8               	btfss	status,0,c
 34723  013A06  D008               	goto	l13130
 34724  013A08                     u1262_20:
 34725                           
 34726                           ;bsoc.c: 77:   C.soc = 100;
 34727  013A08  0E64               	movlw	100
 34728  013A0A  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 34729  013A10  0E00               	movlw	0
 34730  013A12  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 34731  013A18                     l13130:
 34732                           
 34733                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 34734  013A18  EE21  F343         	lfsr	2,_C+68	;volatile
 34735  013A1C  0E03               	movlw	3
 34736  013A1E  AEDB               	btfss	plusw2,7,c
 34737  013A20  D047               	goto	l2109
 34738                           
 34739                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 34740  013A22  EE21  F343         	lfsr	2,_C+68	;volatile
 34741  013A26  006F FF7B FFE6     	movff	postinc2,postinc1
 34742  013A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34743  013A32  006F FF7B FFE6     	movff	postinc2,postinc1
 34744  013A38  006F FF7B FFE6     	movff	postinc2,postinc1
 34745  013A3E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34746  013A42  006F FF7B FFE6     	movff	postinc2,postinc1
 34747  013A48  006F FF7B FFE6     	movff	postinc2,postinc1
 34748  013A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34749  013A54  006F FF7B FFE6     	movff	postinc2,postinc1
 34750  013A5A  ECD8  F0A6         	call	___fldiv	;wreg free
 34751  013A5E  0060  F007  FFE6   	movff	btemp,postinc1
 34752  013A64  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34753  013A6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34754  013A70  0060  F013  FFE6   	movff	btemp+3,postinc1
 34755  013A76  ECFA  F0DB         	call	___flneg	;wreg free
 34756  013A7A  0060  F007  FFE6   	movff	btemp,postinc1
 34757  013A80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34758  013A86  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34759  013A8C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34760  013A92  EC51  F0C8         	call	___fltol	;wreg free
 34761  013A96  0060  F004  F00B   	movff	btemp,btemp+10
 34762  013A9C  0060  F008  F00C   	movff	btemp+1,btemp+11
 34763  013AA2  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34764  013AA8  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34765                           
 34766                           ;bsoc.c: 81:  } else {
 34767  013AAE  D008               	goto	l13134
 34768  013AB0                     l2109:
 34769                           
 34770                           ;bsoc.c: 82:   C.runtime = 99;
 34771  013AB0  0E63               	movlw	99
 34772  013AB2  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34773  013AB8  0E00               	movlw	0
 34774  013ABA  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34775  013AC0                     l13134:
 34776                           
 34777                           ;bsoc.c: 84:  if (C.runtime > 99)
 34778  013AC0  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34779  013AC4  0E01               	movlw	1
 34780  013AC6  50DB               	movf	plusw2,w,c
 34781  013AC8  E104               	bnz	u1264_20
 34782  013ACA  0E64               	movlw	100
 34783  013ACC  5CDE               	subwf	postinc2,w,c
 34784  013ACE  A0D8               	btfss	status,0,c
 34785  013AD0  D008               	goto	l13138
 34786  013AD2                     u1264_20:
 34787                           
 34788                           ;bsoc.c: 85:   C.runtime = 99;
 34789  013AD2  0E63               	movlw	99
 34790  013AD4  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34791  013ADA  0E00               	movlw	0
 34792  013ADC  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34793  013AE2                     l13138:
 34794                           
 34795                           ;bsoc.c: 87:  V.lowint_count++;
 34796  013AE2  0E01               	movlw	1
 34797  013AE4  0101               	movlb	1	; () banked
 34798  013AE6  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 34799  013AE8  0E00               	movlw	0
 34800  013AEA  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34801  013AEC  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34802  013AEE  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34803                           
 34804                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34805  013AF0  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 34806  013AF2  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 34807  013AF4  A4D8               	btfss	status,2,c
 34808  013AF6  D15B               	goto	l13150
 34809                           
 34810                           ; BSR set to: 1
 34811  013AF8  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 34812  013AFA  B4D8               	btfsc	status,2,c
 34813  013AFC  D158               	goto	l13150
 34814                           
 34815                           ; BSR set to: 1
 34816                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34817  013AFE  EC9E  F0E2         	call	_port_data_dma_ptr	;wreg free
 34818                           
 34819                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34820  013B02  0EFF               	movlw	-1
 34821  013B04  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34822  013B0A  0EFE               	movlw	-2
 34823  013B0C  0060  F007  FFE3   	movff	btemp,plusw1
 34824                           
 34825                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34826  013B12  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34827  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34828  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34829  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34830  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34831  013B2E  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34832  013B32  006F FF7B FFE6     	movff	postinc2,postinc1
 34833  013B38  006F FF7B FFE6     	movff	postinc2,postinc1
 34834  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34835  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34836  013B4A  EE21  F39B         	lfsr	2,_C+156	;volatile
 34837  013B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34838  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 34839  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 34840  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 34841  013B66  EE22  F026         	lfsr	2,_C+295	;volatile
 34842  013B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34843  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 34844  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 34845  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34846  013B82  EE22  F022         	lfsr	2,_C+291	;volatile
 34847  013B86  006F FF7B FFE6     	movff	postinc2,postinc1
 34848  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 34849  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 34850  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 34851  013B9E  EE22  F021         	lfsr	2,_C+290	;volatile
 34852  013BA2  50DF               	movf	indf2,w,c
 34853  013BA4  6EE6               	movwf	postinc1,c
 34854  013BA6  0E00               	movlw	0
 34855  013BA8  6EE6               	movwf	postinc1,c
 34856  013BAA  EC83  F0E2         	call	_get_ac_charger_relay	;wreg free
 34857  013BAE  5001               	movf	btemp^0,w,c
 34858  013BB0  6EE6               	movwf	postinc1,c
 34859  013BB2  0E00               	movlw	0
 34860  013BB4  6EE6               	movwf	postinc1,c
 34861  013BB6  EE21  F367         	lfsr	2,_C+104	;volatile
 34862  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34863  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34864  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34865  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34866  013BD2  EE21  F387         	lfsr	2,_C+136	;volatile
 34867  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34868  013BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34869  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34870  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34871  013BEE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34872  013BF2  006F FF78  F00B    	movff	postinc2,btemp+10
 34873  013BF8  006F FF74  F00C    	movff	postdec2,btemp+11
 34874  013BFE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34875  013C04  0060  F033  FFE6   	movff	btemp+11,postinc1
 34876  013C0A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34877  013C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 34878  013C14  006F FF74  F00C    	movff	postdec2,btemp+11
 34879  013C1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34880  013C20  0060  F033  FFE6   	movff	btemp+11,postinc1
 34881  013C26  EE21  F393         	lfsr	2,_C+148	;volatile
 34882  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34883  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34884  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34885  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34886  013C42  EE21  F38F         	lfsr	2,_C+144	;volatile
 34887  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34888  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34889  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34890  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34891  013C5E  EE21  F377         	lfsr	2,_C+120	;volatile
 34892  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34893  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34894  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34895  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34896  013C7A  EE21  F373         	lfsr	2,_C+116	;volatile
 34897  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34898  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34899  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34900  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34901  013C96  EE21  F37B         	lfsr	2,_C+124	;volatile
 34902  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34903  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34904  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34905  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34906  013CB2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34907  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34908  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34909  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34910  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34911  013CCE  EE21  F363         	lfsr	2,_C+100	;volatile
 34912  013CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34913  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34914  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34915  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34916  013CEA  EE21  F34B         	lfsr	2,_C+76	;volatile
 34917  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34918  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34919  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34920  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 34921  013D06  EE21  F34F         	lfsr	2,_C+80	;volatile
 34922  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34923  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 34924  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 34925  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34926  013D22  EE21  F353         	lfsr	2,_C+84	;volatile
 34927  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 34928  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34929  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 34930  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 34931  013D3E  0060  F623  FFE6   	movff	_V+129,postinc1
 34932  013D44  0060  F627  FFE6   	movff	_V+130,postinc1
 34933  013D4A  0060  F62B  FFE6   	movff	_V+131,postinc1
 34934  013D50  0060  F62F  FFE6   	movff	_V+132,postinc1
 34935  013D56  0E31               	movlw	49
 34936  013D58  6EE6               	movwf	postinc1,c
 34937  013D5A  0E00               	movlw	0
 34938  013D5C  6EE6               	movwf	postinc1,c
 34939  013D5E  0ED1               	movlw	low STR_64
 34940  013D60  6EE6               	movwf	postinc1,c
 34941  013D62  0EFB               	movlw	high STR_64
 34942  013D64  6EE6               	movwf	postinc1,c
 34943                           
 34944                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34945  013D66  0EAA               	movlw	-86
 34946  013D68  006F FF8F FFE6     	movff	plusw1,postinc1
 34947  013D6E  006F FF8F FFE6     	movff	plusw1,postinc1
 34948  013D74  0E56               	movlw	86
 34949  013D76  6EE6               	movwf	postinc1,c
 34950  013D78  EC16  F0CF         	call	_sprintf	;wreg free
 34951                           
 34952                           ; BSR set to: 0
 34953                           ;bsoc.c: 97:   StartTimer(TMR_DISPLAY, 125);
 34954  013D7C  0E7D               	movlw	125
 34955  013D7E  6EE6               	movwf	postinc1,c
 34956  013D80  0E00               	movlw	0
 34957  013D82  6EE6               	movwf	postinc1,c
 34958  013D84  0E0A               	movlw	10
 34959  013D86  6EE6               	movwf	postinc1,c
 34960  013D88  EC76  F0DD         	call	_StartTimer	;wreg free
 34961                           
 34962                           ;bsoc.c: 98:   send_port_data_dma(strlen((char*) log_ptr));
 34963                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34964  013D8C  0EFE               	movlw	-2
 34965  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 34966  013D94  006F FF8F FFE6     	movff	plusw1,postinc1
 34967  013D9A  EC34  F0D6         	call	_strlen	;wreg free
 34968  013D9E  0060  F007  FFE6   	movff	btemp,postinc1
 34969  013DA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34970  013DAA  EC60  F0DB         	call	_send_port_data_dma	;wreg free
 34971  013DAE                     l13150:
 34972                           
 34973                           ;bsoc.c: 100:  if (log_update_wait >= 10)
 34974  013DAE  0E09               	movlw	9
 34975  013DB0  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34976  013DB2  D001               	goto	l2113
 34977                           
 34978                           ;bsoc.c: 101:   log_update_wait = 0;
 34979  013DB4  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 34980  013DB6                     l2113:
 34981                           
 34982                           ;bsoc.c: 103:  C.update = 0;
 34983  013DB6  0E00               	movlw	0
 34984  013DB8  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 34985                           
 34986                           ;bsoc.c: 105:  do { LATEbits.LATE1 = 0; } while(0);
 34987  013DBE  92BE               	bcf	190,1,c	;volatile
 34988                           
 34989                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 34990  013DC0  0EFA               	movlw	250
 34991  013DC2  26E1               	addwf	fsr1l,f,c
 34992  013DC4  0EFF               	movlw	255
 34993  013DC6  22E2               	addwfc	fsr1h,f,c
 34994  013DC8  0012               	return		;funcret
 34995  013DCA                     __end_of_calc_bsoc:
 34996                           	opt callstack 0
 34997                           
 34998 ;; *************** function _send_port_data_dma *****************
 34999 ;; Defined at:
 35000 ;;		line 398 in file "eadog.c"
 35001 ;; Parameters:    Size  Location     Type
 35002 ;;  dsize           2  [STACK] unsigned short 
 35003 ;; Auto vars:     Size  Location     Type
 35004 ;;		None
 35005 ;; Return value:  Size  Location     Type
 35006 ;;                  1  [STACK] void 
 35007 ;; Registers used:
 35008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 35009 ;; Tracked objects:
 35010 ;;		On entry : 0/0
 35011 ;;		On exit  : 3F/3B
 35012 ;;		Unchanged: 0/0
 35013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35018 ;;Total ram usage:        0 bytes
 35019 ;; Hardware stack levels used:    1
 35020 ;; Hardware stack levels required when called:    3
 35021 ;; This function calls:
 35022 ;;		Nothing
 35023 ;; This function is called by:
 35024 ;;		_calc_bsoc
 35025 ;; This function uses a reentrant model
 35026 ;;
 35027                           
 35028                           	psect	text159
 35029  01B6C0                     __ptext159:
 35030                           	opt callstack 0
 35031  01B6C0                     _send_port_data_dma:
 35032                           	opt callstack 10
 35033                           
 35034                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 35035                           ;stkvar	_dsize @ sp[(0)+-2]
 35036                           
 35037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35038                           ;incstack = 0
 35039  01B6C0  0EFE               	movlw	-2
 35040  01B6C2  04E3               	decf	plusw1,w,c
 35041  01B6C4  0EFF               	movlw	-1
 35042  01B6C6  006F FF8C  F001    	movff	plusw1,btemp
 35043  01B6CC  0E02               	movlw	2
 35044  01B6CE  5A01               	subwfb	btemp^0,f,c
 35045  01B6D0  A0D8               	btfss	status,0,c
 35046  01B6D2  D00C               	goto	l10124
 35047                           
 35048                           ;eadog.c: 401:   dsize = 512;
 35049  01B6D4  0E00               	movlw	0
 35050  01B6D6  6E0B               	movwf	(btemp+10)^0,c
 35051  01B6D8  0E02               	movlw	2
 35052  01B6DA  6E0C               	movwf	(btemp+11)^0,c
 35053                           
 35054                           ;stkvar	_dsize @ sp[(0)+-2]
 35055  01B6DC  0EFE               	movlw	-2
 35056  01B6DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35057  01B6E4  0EFF               	movlw	-1
 35058  01B6E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 35059  01B6EC                     l10124:
 35060                           
 35061                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 35062  01B6EC  013B               	movlb	59	; () banked
 35063  01B6EE  9FDC               	bcf	220,7,b	;volatile
 35064                           
 35065                           ; BSR set to: 59
 35066                           ;eadog.c: 404:  DMA2SSZ = dsize;
 35067                           ;stkvar	_dsize @ sp[(0)+-2]
 35068  01B6F0  0EFE               	movlw	-2
 35069  01B6F2  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 35070  01B6F8  0EFF               	movlw	-1
 35071  01B6FA  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 35072                           
 35073                           ; BSR set to: 59
 35074                           ;eadog.c: 405:  DMA2DSZ = 1;
 35075  01B700  0E00               	movlw	0
 35076  01B702  6FCF               	movwf	207,b	;volatile
 35077  01B704  0E01               	movlw	1
 35078  01B706  6FCE               	movwf	206,b	;volatile
 35079                           
 35080                           ; BSR set to: 59
 35081                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 35082  01B708  8FDC               	bsf	220,7,b	;volatile
 35083                           
 35084                           ; BSR set to: 59
 35085                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 35086  01B70A  8DDC               	bsf	220,6,b	;volatile
 35087                           
 35088                           ; BSR set to: 59
 35089                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 35090  01B70C  52E5               	movf	postdec1,f,c
 35091  01B70E  52E5               	movf	postdec1,f,c
 35092  01B710  0012               	return		;funcret
 35093  01B712                     __end_of_send_port_data_dma:
 35094                           	opt callstack 0
 35095                           
 35096 ;; *************** function _port_data_dma_ptr *****************
 35097 ;; Defined at:
 35098 ;;		line 413 in file "eadog.c"
 35099 ;; Parameters:    Size  Location     Type
 35100 ;;		None
 35101 ;; Auto vars:     Size  Location     Type
 35102 ;;		None
 35103 ;; Return value:  Size  Location     Type
 35104 ;;                  2  [STACK] PTR unsigned char 
 35105 ;; Registers used:
 35106 ;;		wreg, status,2, status,0, btemp, btemp+1
 35107 ;; Tracked objects:
 35108 ;;		On entry : 3F/1
 35109 ;;		On exit  : 0/0
 35110 ;;		Unchanged: 0/0
 35111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35116 ;;Total ram usage:        0 bytes
 35117 ;; Hardware stack levels used:    1
 35118 ;; Hardware stack levels required when called:    3
 35119 ;; This function calls:
 35120 ;;		Nothing
 35121 ;; This function is called by:
 35122 ;;		_calc_bsoc
 35123 ;; This function uses a reentrant model
 35124 ;;
 35125                           
 35126                           	psect	text160
 35127  01C53C                     __ptext160:
 35128                           	opt callstack 0
 35129  01C53C                     _port_data_dma_ptr:
 35130                           	opt callstack 10
 35131                           
 35132                           ;eadog.c: 415:  return port_data;
 35133                           
 35134                           ; BSR set to: 59
 35135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35136                           ;incstack = 0
 35137  01C53C  0EFF               	movlw	low _port_data
 35138  01C53E  6E01               	movwf	btemp^0,c
 35139  01C540  0E04               	movlw	high _port_data
 35140  01C542  6E02               	movwf	(btemp+1)^0,c
 35141                           
 35142                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35143  01C544  0012               	return		;funcret
 35144  01C546                     __end_of_port_data_dma_ptr:
 35145                           	opt callstack 0
 35146                           
 35147 ;; *************** function ___asfladd *****************
 35148 ;; Defined at:
 35149 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 35150 ;; Parameters:    Size  Location     Type
 35151 ;;  f1p             2  [STACK] PTR 
 35152 ;;		 -> C(299), 
 35153 ;;  f2              4  [STACK] PTR 
 35154 ;; Auto vars:     Size  Location     Type
 35155 ;;		None
 35156 ;; Return value:  Size  Location     Type
 35157 ;;                  4  [STACK] PTR 
 35158 ;; Registers used:
 35159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 35160 ;; Tracked objects:
 35161 ;;		On entry : 0/0
 35162 ;;		On exit  : 0/0
 35163 ;;		Unchanged: 0/0
 35164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35169 ;;Total ram usage:        0 bytes
 35170 ;; Hardware stack levels used:    1
 35171 ;; Hardware stack levels required when called:    4
 35172 ;; This function calls:
 35173 ;;		___fladd
 35174 ;; This function is called by:
 35175 ;;		_calc_bsoc
 35176 ;; This function uses a reentrant model
 35177 ;;
 35178                           
 35179                           	psect	text161
 35180  01B0D4                     __ptext161:
 35181                           	opt callstack 0
 35182  01B0D4                     ___asfladd:
 35183                           	opt callstack 9
 35184                           
 35185                           ;	Return value of ___asfladd is never used
 35186                           ;stkvar	_f2 @ sp[(0)+-6]
 35187                           
 35188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35189                           ;incstack = 0
 35190  01B0D4  0EFA               	movlw	-6
 35191  01B0D6  006F FF8F FFE6     	movff	plusw1,postinc1
 35192  01B0DC  006F FF8F FFE6     	movff	plusw1,postinc1
 35193  01B0E2  006F FF8F FFE6     	movff	plusw1,postinc1
 35194  01B0E8  006F FF8F FFE6     	movff	plusw1,postinc1
 35195                           
 35196                           ;stkvar	_f1p @ sp[(-4)+-2]
 35197  01B0EE  0EFA               	movlw	-6
 35198  01B0F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 35199  01B0F6  0EFB               	movlw	-5
 35200  01B0F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 35201  01B0FE  006F FF7B FFE6     	movff	postinc2,postinc1
 35202  01B104  006F FF7B FFE6     	movff	postinc2,postinc1
 35203  01B10A  006F FF7B FFE6     	movff	postinc2,postinc1
 35204  01B110  006F FF7B FFE6     	movff	postinc2,postinc1
 35205  01B116  ECFA  F0A2         	call	___fladd	;wreg free
 35206                           
 35207                           ;stkvar	_f1p @ sp[(0)+-2]
 35208  01B11A  0EFE               	movlw	-2
 35209  01B11C  006F FF8F FFD9     	movff	plusw1,fsr2l
 35210  01B122  0EFF               	movlw	-1
 35211  01B124  006F FF8F FFDA     	movff	plusw1,fsr2h
 35212  01B12A  0060  F007  FFDE   	movff	btemp,postinc2
 35213  01B130  0060  F00B  FFDE   	movff	btemp+1,postinc2
 35214  01B136  0060  F00F  FFDE   	movff	btemp+2,postinc2
 35215  01B13C  0060  F013  FFDE   	movff	btemp+3,postinc2
 35216                           
 35217                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 35218  01B142  0EFA               	movlw	250
 35219  01B144  26E1               	addwf	fsr1l,f,c
 35220  01B146  0EFF               	movlw	255
 35221  01B148  22E2               	addwfc	fsr1h,f,c
 35222  01B14A  0012               	return		;funcret
 35223  01B14C                     __end_of___asfladd:
 35224                           	opt callstack 0
 35225                           
 35226 ;; *************** function _INT0_ISR *****************
 35227 ;; Defined at:
 35228 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 35229 ;; Parameters:    Size  Location     Type
 35230 ;;		None
 35231 ;; Auto vars:     Size  Location     Type
 35232 ;;		None
 35233 ;; Return value:  Size  Location     Type
 35234 ;;                  1    wreg      void 
 35235 ;; Registers used:
 35236 ;;		wreg, status,2, status,0, pclath, tosl
 35237 ;; Tracked objects:
 35238 ;;		On entry : 0/0
 35239 ;;		On exit  : 0/0
 35240 ;;		Unchanged: 0/0
 35241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35246 ;;Total ram usage:        0 bytes
 35247 ;; Hardware stack levels used:    1
 35248 ;; Hardware stack levels required when called:    2
 35249 ;; This function calls:
 35250 ;;		_INT0_CallBack
 35251 ;; This function is called by:
 35252 ;;		Interrupt level 2
 35253 ;; This function uses a non-reentrant model
 35254 ;;
 35255                           
 35256                           	psect	text162
 35257  01C514                     __ptext162:
 35258                           	opt callstack 0
 35259  01C514                     _INT0_ISR:
 35260                           	opt callstack 2
 35261                           
 35262                           ;incstack = 0
 35263  01C514  EE14  F15E         	lfsr	1,___inthi_sp
 35264                           
 35265                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 35266  01C518  0139               	movlb	57	; () banked
 35267  01C51A  91A1               	bcf	161,0,b	;volatile
 35268                           
 35269                           ; BSR set to: 57
 35270                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 35271  01C51C  EC2C  F0E1         	call	_INT0_CallBack	;wreg free
 35272  01C520  0011               	retfie		f
 35273  01C522                     __end_of_INT0_ISR:
 35274                           	opt callstack 0
 35275                           
 35276 ;; *************** function _INT0_CallBack *****************
 35277 ;; Defined at:
 35278 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 35279 ;; Parameters:    Size  Location     Type
 35280 ;;		None
 35281 ;; Auto vars:     Size  Location     Type
 35282 ;;		None
 35283 ;; Return value:  Size  Location     Type
 35284 ;;                  1  [STACK] void 
 35285 ;; Registers used:
 35286 ;;		wreg, status,2, status,0, pclath, tosl
 35287 ;; Tracked objects:
 35288 ;;		On entry : 3F/39
 35289 ;;		On exit  : 0/0
 35290 ;;		Unchanged: 0/0
 35291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35296 ;;Total ram usage:        0 bytes
 35297 ;; Hardware stack levels used:    1
 35298 ;; Hardware stack levels required when called:    1
 35299 ;; This function calls:
 35300 ;;		Absolute function
 35301 ;;		_INT0_DefaultInterruptHandler
 35302 ;; This function is called by:
 35303 ;;		_INT0_ISR
 35304 ;; This function uses a reentrant model
 35305 ;;
 35306                           
 35307                           	psect	text163
 35308  01C258                     __ptext163:
 35309                           	opt callstack 0
 35310  01C258                     _INT0_CallBack:
 35311                           	opt callstack 2
 35312                           
 35313                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 35314                           
 35315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35316                           ;incstack = 0
 35317  01C258  0100               	movlb	0	; () banked
 35318  01C25A  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35319  01C25C  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35320  01C25E  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35321  01C260  B4D8               	btfsc	status,2,c
 35322  01C262  0012               	return	
 35323                           
 35324                           ; BSR set to: 0
 35325                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35326  01C264  D801               	call	u1009_48
 35327  01C266  0012               	return	
 35328  01C268                     u1009_48:
 35329  01C268  0005               	push	
 35330  01C26A  6EFA               	movwf	pclath,c
 35331  01C26C  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35332  01C26E  6EFD               	movwf	tosl,c
 35333  01C270  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35334  01C272  6EFE               	movwf	tosh,c
 35335  01C274  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35336  01C276  6EFF               	movwf	tosu,c
 35337  01C278  50FA               	movf	pclath,w,c
 35338  01C27A  0012               	return		;indir
 35339  01C27C                     __end_of_INT0_CallBack:
 35340                           	opt callstack 0
 35341                           
 35342 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35343 ;; Defined at:
 35344 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35345 ;; Parameters:    Size  Location     Type
 35346 ;;		None
 35347 ;; Auto vars:     Size  Location     Type
 35348 ;;		None
 35349 ;; Return value:  Size  Location     Type
 35350 ;;                  1  [STACK] void 
 35351 ;; Registers used:
 35352 ;;		None
 35353 ;; Tracked objects:
 35354 ;;		On entry : 3F/0
 35355 ;;		On exit  : 0/0
 35356 ;;		Unchanged: 0/0
 35357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35362 ;;Total ram usage:        0 bytes
 35363 ;; Hardware stack levels used:    1
 35364 ;; This function calls:
 35365 ;;		Nothing
 35366 ;; This function is called by:
 35367 ;;		_EXT_INT_Initialize
 35368 ;;		_INT0_CallBack
 35369 ;; This function uses a reentrant model
 35370 ;;
 35371                           
 35372                           	psect	text164
 35373  01C5B6                     __ptext164:
 35374                           	opt callstack 0
 35375  01C5B6                     _INT0_DefaultInterruptHandler:
 35376                           	opt callstack 2
 35377                           
 35378                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35379                           
 35380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35381                           ;incstack = 0
 35382  01C5B6  0012               	return		;funcret
 35383  01C5B8                     __end_of_INT0_DefaultInterruptHandler:
 35384                           	opt callstack 0
 35385                           
 35386 ;; *************** function _Default_ISR *****************
 35387 ;; Defined at:
 35388 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35389 ;; Parameters:    Size  Location     Type
 35390 ;;		None
 35391 ;; Auto vars:     Size  Location     Type
 35392 ;;		None
 35393 ;; Return value:  Size  Location     Type
 35394 ;;                  1    wreg      void 
 35395 ;; Registers used:
 35396 ;;		None
 35397 ;; Tracked objects:
 35398 ;;		On entry : 0/0
 35399 ;;		On exit  : 0/0
 35400 ;;		Unchanged: 0/0
 35401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35406 ;;Total ram usage:        0 bytes
 35407 ;; Hardware stack levels used:    1
 35408 ;; This function calls:
 35409 ;;		Nothing
 35410 ;; This function is called by:
 35411 ;;		Interrupt level 2
 35412 ;; This function uses a non-reentrant model
 35413 ;;
 35414                           
 35415                           	psect	text165
 35416  01C5AC                     __ptext165:
 35417                           	opt callstack 0
 35418  01C5AC                     _Default_ISR:
 35419                           	opt callstack 4
 35420                           
 35421                           ;incstack = 0
 35422  01C5AC  EE14  F15E         	lfsr	1,___inthi_sp
 35423  01C5B0  0011               	retfie		f
 35424  01C5B2                     __end_of_Default_ISR:
 35425                           	opt callstack 0
 35426                           
 35427 ;; *************** function _ADCC_ISR *****************
 35428 ;; Defined at:
 35429 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35430 ;; Parameters:    Size  Location     Type
 35431 ;;		None
 35432 ;; Auto vars:     Size  Location     Type
 35433 ;;		None
 35434 ;; Return value:  Size  Location     Type
 35435 ;;                  1    wreg      void 
 35436 ;; Registers used:
 35437 ;;		wreg, status,2, status,0, pclath, tosl
 35438 ;; Tracked objects:
 35439 ;;		On entry : 0/0
 35440 ;;		On exit  : 0/0
 35441 ;;		Unchanged: 0/0
 35442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35447 ;;Total ram usage:        0 bytes
 35448 ;; Hardware stack levels used:    1
 35449 ;; Hardware stack levels required when called:    1
 35450 ;; This function calls:
 35451 ;;		Absolute function
 35452 ;;		_ADCC_DefaultInterruptHandler
 35453 ;;		_adc_int_handler
 35454 ;; This function is called by:
 35455 ;;		Interrupt level 2
 35456 ;; This function uses a non-reentrant model
 35457 ;;
 35458                           
 35459                           	psect	text166
 35460  01BEEC                     __ptext166:
 35461                           	opt callstack 0
 35462  01BEEC                     _ADCC_ISR:
 35463                           	opt callstack 3
 35464                           
 35465                           ;incstack = 0
 35466  01BEEC  EE14  F15E         	lfsr	1,___inthi_sp
 35467                           
 35468                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35469  01BEF0  0139               	movlb	57	; () banked
 35470  01BEF2  95A1               	bcf	161,2,b	;volatile
 35471                           
 35472                           ; BSR set to: 57
 35473                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35474  01BEF4  0100               	movlb	0	; () banked
 35475  01BEF6  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35476  01BEF8  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35477  01BEFA  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35478  01BEFC  B4D8               	btfsc	status,2,c
 35479  01BEFE  0011               	retfie		f
 35480                           
 35481                           ; BSR set to: 0
 35482                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35483  01BF00  D801               	call	i2u1056_48
 35484  01BF02  0011               	retfie		f
 35485  01BF04                     i2u1056_48:
 35486  01BF04  0005               	push	
 35487  01BF06  6EFA               	movwf	pclath,c
 35488  01BF08  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35489  01BF0A  6EFD               	movwf	tosl,c
 35490  01BF0C  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35491  01BF0E  6EFE               	movwf	tosh,c
 35492  01BF10  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35493  01BF12  6EFF               	movwf	tosu,c
 35494  01BF14  50FA               	movf	pclath,w,c
 35495  01BF16  0012               	return		;indir
 35496  01BF18                     __end_of_ADCC_ISR:
 35497                           	opt callstack 0
 35498                           
 35499 ;; *************** function _adc_int_t_handler *****************
 35500 ;; Defined at:
 35501 ;;		line 168 in file "daq.c"
 35502 ;; Parameters:    Size  Location     Type
 35503 ;;		None
 35504 ;; Auto vars:     Size  Location     Type
 35505 ;;		None
 35506 ;; Return value:  Size  Location     Type
 35507 ;;                  1  [STACK] void 
 35508 ;; Registers used:
 35509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35510 ;; Tracked objects:
 35511 ;;		On entry : 3F/0
 35512 ;;		On exit  : 1/0
 35513 ;;		Unchanged: 0/0
 35514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35519 ;;Total ram usage:        0 bytes
 35520 ;; Hardware stack levels used:    1
 35521 ;; Hardware stack levels required when called:    1
 35522 ;; This function calls:
 35523 ;;		_ADCC_DischargeSampleCapacitor
 35524 ;;		_ADCC_StartConversion
 35525 ;; This function is called by:
 35526 ;;		_start_adc_scan
 35527 ;;		_ADCC_ThresholdISR
 35528 ;; This function uses a reentrant model
 35529 ;;
 35530                           
 35531                           	psect	text167
 35532  01B056                     __ptext167:
 35533                           	opt callstack 0
 35534  01B056                     _adc_int_t_handler:
 35535                           	opt callstack 2
 35536                           
 35537                           ;daq.c: 173:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35538                           
 35539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35540                           ;incstack = 0
 35541  01B056  013E               	movlb	62	; () banked
 35542  01B058  51E6               	movf	230,w,b	;volatile
 35543  01B05A  006F FB9C  F001    	movff	16103,btemp	;volatile
 35544  01B060  6A02               	clrf	(btemp+1)^0,c
 35545  01B062  0060  F004  F002   	movff	btemp,btemp+1
 35546  01B068  6A01               	clrf	btemp^0,c
 35547  01B06A  2601               	addwf	btemp^0,f,c
 35548  01B06C  0E00               	movlw	0
 35549  01B06E  2202               	addwfc	(btemp+1)^0,f,c
 35550  01B070  0100               	movlb	0	; () banked
 35551  01B072  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35552  01B074  0D02               	mullw	2
 35553  01B076  50F3               	movf	243,w,c
 35554  01B078  0FAF               	addlw	low _R
 35555  01B07A  6ED9               	movwf	fsr2l,c
 35556  01B07C  6ADA               	clrf	fsr2h,c
 35557  01B07E  0060  F007  FFDE   	movff	btemp,postinc2
 35558  01B084  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35559  01B08A                     l11402:
 35560                           
 35561                           ;daq.c: 175:   if (++R.scan_index > 0XD) {
 35562  01B08A  0100               	movlb	0	; () banked
 35563  01B08C  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35564  01B08E  0E0D               	movlw	13
 35565  01B090  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35566  01B092  D003               	goto	l11408
 35567                           
 35568                           ; BSR set to: 0
 35569                           ;daq.c: 176:    R.done = 1;
 35570  01B094  0E01               	movlw	1
 35571  01B096  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35572  01B098  0012               	return	
 35573  01B09A                     l11408:
 35574                           
 35575                           ; BSR set to: 0
 35576                           ;daq.c: 182:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35577  01B09A  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35578  01B0A0  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35579  01B0A4  006F FF78  F009    	movff	postinc2,btemp+8
 35580  01B0AA  006F FF74  F00A    	movff	postdec2,btemp+9
 35581  01B0B0  2A0C               	incf	(btemp+11)^0,f,c
 35582  01B0B2  D003               	goto	u1053_44
 35583  01B0B4                     u1053_45:
 35584  01B0B4  90D8               	bcf	status,0,c
 35585  01B0B6  320A               	rrcf	(btemp+9)^0,f,c
 35586  01B0B8  3209               	rrcf	(btemp+8)^0,f,c
 35587  01B0BA                     u1053_44:
 35588  01B0BA  2E0C               	decfsz	(btemp+11)^0,f,c
 35589  01B0BC  D7FB               	goto	u1053_45
 35590  01B0BE  A009               	btfss	(btemp+8)^0,0,c
 35591  01B0C0  D7E4               	goto	l11402
 35592                           
 35593                           ;daq.c: 183:  ADCC_DischargeSampleCapacitor();
 35594  01B0C2  ECB5  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35595                           
 35596                           ; BSR set to: 62
 35597                           ;daq.c: 184:  ADCC_StartConversion(R.scan_index & 0xf);
 35598  01B0C6  0100               	movlb	0	; () banked
 35599  01B0C8  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35600  01B0CA  0B0F               	andlw	15
 35601  01B0CC  6EE6               	movwf	postinc1,c
 35602  01B0CE  EC4C  F0E2         	call	_ADCC_StartConversion	;wreg free
 35603                           
 35604                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35605  01B0D2  0012               	return		;funcret
 35606  01B0D4                     __end_of_adc_int_t_handler:
 35607                           	opt callstack 0
 35608                           
 35609 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35610 ;; Defined at:
 35611 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35612 ;; Parameters:    Size  Location     Type
 35613 ;;		None
 35614 ;; Auto vars:     Size  Location     Type
 35615 ;;		None
 35616 ;; Return value:  Size  Location     Type
 35617 ;;                  1  [STACK] void 
 35618 ;; Registers used:
 35619 ;;		None
 35620 ;; Tracked objects:
 35621 ;;		On entry : 3F/0
 35622 ;;		On exit  : 0/0
 35623 ;;		Unchanged: 0/0
 35624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35629 ;;Total ram usage:        0 bytes
 35630 ;; Hardware stack levels used:    1
 35631 ;; This function calls:
 35632 ;;		Nothing
 35633 ;; This function is called by:
 35634 ;;		_ADCC_Initialize
 35635 ;;		_ADCC_ISR
 35636 ;;		_ADCC_ThresholdISR
 35637 ;; This function uses a reentrant model
 35638 ;;
 35639                           
 35640                           	psect	text168
 35641  01C5B8                     __ptext168:
 35642                           	opt callstack 0
 35643  01C5B8                     _ADCC_DefaultInterruptHandler:
 35644                           	opt callstack 3
 35645                           
 35646                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35647                           
 35648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35649                           ;incstack = 0
 35650  01C5B8  0012               	return		;funcret
 35651  01C5BA                     __end_of_ADCC_DefaultInterruptHandler:
 35652                           	opt callstack 0
 35653                           
 35654 ;; *************** function _adc_int_handler *****************
 35655 ;; Defined at:
 35656 ;;		line 158 in file "daq.c"
 35657 ;; Parameters:    Size  Location     Type
 35658 ;;		None
 35659 ;; Auto vars:     Size  Location     Type
 35660 ;;		None
 35661 ;; Return value:  Size  Location     Type
 35662 ;;                  1  [STACK] void 
 35663 ;; Registers used:
 35664 ;;		None
 35665 ;; Tracked objects:
 35666 ;;		On entry : 3F/0
 35667 ;;		On exit  : 0/0
 35668 ;;		Unchanged: 0/0
 35669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35674 ;;Total ram usage:        0 bytes
 35675 ;; Hardware stack levels used:    1
 35676 ;; This function calls:
 35677 ;;		Nothing
 35678 ;; This function is called by:
 35679 ;;		_start_adc_scan
 35680 ;;		_ADCC_ISR
 35681 ;; This function uses a reentrant model
 35682 ;;
 35683                           
 35684                           	psect	text169
 35685  01C5BA                     __ptext169:
 35686                           	opt callstack 0
 35687  01C5BA                     _adc_int_handler:
 35688                           	opt callstack 3
 35689                           
 35690                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35691                           
 35692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35693                           ;incstack = 0
 35694  01C5BA  0012               	return		;funcret
 35695  01C5BC                     __end_of_adc_int_handler:
 35696                           	opt callstack 0
 35697                           
 35698 ;; *************** function _ADCC_ThresholdISR *****************
 35699 ;; Defined at:
 35700 ;;		line 327 in file "mcc_generated_files/adcc.c"
 35701 ;; Parameters:    Size  Location     Type
 35702 ;;		None
 35703 ;; Auto vars:     Size  Location     Type
 35704 ;;		None
 35705 ;; Return value:  Size  Location     Type
 35706 ;;                  1    wreg      void 
 35707 ;; Registers used:
 35708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 35709 ;; Tracked objects:
 35710 ;;		On entry : 0/0
 35711 ;;		On exit  : 0/0
 35712 ;;		Unchanged: 0/0
 35713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35716 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35717 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35718 ;;Total ram usage:        5 bytes
 35719 ;; Hardware stack levels used:    1
 35720 ;; Hardware stack levels required when called:    2
 35721 ;; This function calls:
 35722 ;;		Absolute function
 35723 ;;		_ADCC_DefaultInterruptHandler
 35724 ;;		_adc_int_t_handler
 35725 ;; This function is called by:
 35726 ;;		Interrupt level 2
 35727 ;; This function uses a non-reentrant model
 35728 ;;
 35729                           
 35730                           	psect	text170
 35731  01B308                     __ptext170:
 35732                           	opt callstack 0
 35733  01B308                     _ADCC_ThresholdISR:
 35734                           	opt callstack 2
 35735                           
 35736                           ;incstack = 0
 35737  01B308  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 35738  01B30E  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 35739  01B314  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 35740  01B31A  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 35741  01B320  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 35742  01B326  EE14  F15E         	lfsr	1,___inthi_sp
 35743                           
 35744                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35745  01B32A  0139               	movlb	57	; () banked
 35746  01B32C  97A1               	bcf	161,3,b	;volatile
 35747                           
 35748                           ; BSR set to: 57
 35749                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35750  01B32E  0100               	movlb	0	; () banked
 35751  01B330  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35752  01B332  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35753  01B334  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35754  01B336  B4D8               	btfsc	status,2,c
 35755  01B338  D00C               	goto	i2u1058_49
 35756                           
 35757                           ; BSR set to: 0
 35758                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35759  01B33A  D801               	call	i2u1058_48
 35760  01B33C  D00A               	goto	i2u1058_49
 35761  01B33E                     i2u1058_48:
 35762  01B33E  0005               	push	
 35763  01B340  6EFA               	movwf	pclath,c
 35764  01B342  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35765  01B344  6EFD               	movwf	tosl,c
 35766  01B346  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35767  01B348  6EFE               	movwf	tosh,c
 35768  01B34A  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35769  01B34C  6EFF               	movwf	tosu,c
 35770  01B34E  50FA               	movf	pclath,w,c
 35771  01B350  0012               	return		;indir
 35772  01B352                     i2u1058_49:
 35773  01B352  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35774  01B358  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35775  01B35E  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35776  01B364  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35777  01B36A  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35778  01B370  0011               	retfie		f
 35779  01B372                     __end_of_ADCC_ThresholdISR:
 35780                           	opt callstack 0
 35781                           
 35782 ;; *************** function _UART1_rx_vect_isr *****************
 35783 ;; Defined at:
 35784 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35785 ;; Parameters:    Size  Location     Type
 35786 ;;		None
 35787 ;; Auto vars:     Size  Location     Type
 35788 ;;		None
 35789 ;; Return value:  Size  Location     Type
 35790 ;;                  1    wreg      void 
 35791 ;; Registers used:
 35792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35793 ;; Tracked objects:
 35794 ;;		On entry : 0/0
 35795 ;;		On exit  : 0/0
 35796 ;;		Unchanged: 0/0
 35797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35802 ;;Total ram usage:        0 bytes
 35803 ;; Hardware stack levels used:    1
 35804 ;; Hardware stack levels required when called:    1
 35805 ;; This function calls:
 35806 ;;		Absolute function
 35807 ;;		_UART1_Receive_ISR
 35808 ;; This function is called by:
 35809 ;;		Interrupt level 2
 35810 ;; This function uses a non-reentrant model
 35811 ;;
 35812                           
 35813                           	psect	text171
 35814  01C150                     __ptext171:
 35815                           	opt callstack 0
 35816  01C150                     _UART1_rx_vect_isr:
 35817                           	opt callstack 3
 35818                           
 35819                           ;incstack = 0
 35820  01C150  EE14  F15E         	lfsr	1,___inthi_sp
 35821                           
 35822                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35823  01C154  0100               	movlb	0	; () banked
 35824  01C156  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35825  01C158  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35826  01C15A  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35827  01C15C  B4D8               	btfsc	status,2,c
 35828  01C15E  0011               	retfie		f
 35829                           
 35830                           ; BSR set to: 0
 35831                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35832  01C160  D801               	call	i2u1060_48
 35833  01C162  0011               	retfie		f
 35834  01C164                     i2u1060_48:
 35835  01C164  0005               	push	
 35836  01C166  6EFA               	movwf	pclath,c
 35837  01C168  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35838  01C16A  6EFD               	movwf	tosl,c
 35839  01C16C  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35840  01C16E  6EFE               	movwf	tosh,c
 35841  01C170  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35842  01C172  6EFF               	movwf	tosu,c
 35843  01C174  50FA               	movf	pclath,w,c
 35844  01C176  0012               	return		;indir
 35845  01C178                     __end_of_UART1_rx_vect_isr:
 35846                           	opt callstack 0
 35847                           
 35848 ;; *************** function _UART1_Receive_ISR *****************
 35849 ;; Defined at:
 35850 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35851 ;; Parameters:    Size  Location     Type
 35852 ;;		None
 35853 ;; Auto vars:     Size  Location     Type
 35854 ;;		None
 35855 ;; Return value:  Size  Location     Type
 35856 ;;                  1  [STACK] void 
 35857 ;; Registers used:
 35858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35859 ;; Tracked objects:
 35860 ;;		On entry : 3F/0
 35861 ;;		On exit  : 3F/0
 35862 ;;		Unchanged: 0/0
 35863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35868 ;;Total ram usage:        0 bytes
 35869 ;; Hardware stack levels used:    1
 35870 ;; This function calls:
 35871 ;;		Nothing
 35872 ;; This function is called by:
 35873 ;;		_UART1_Initialize
 35874 ;;		_UART1_rx_vect_isr
 35875 ;; This function uses a reentrant model
 35876 ;;
 35877                           
 35878                           	psect	text172
 35879  01C2E4                     __ptext172:
 35880                           	opt callstack 0
 35881  01C2E4                     _UART1_Receive_ISR:
 35882                           	opt callstack 3
 35883                           
 35884                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35885                           
 35886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35887                           ;incstack = 0
 35888  01C2E4  0ED9               	movlw	low _uart1RxBuffer
 35889  01C2E6  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 35890  01C2E8  6ED9               	movwf	fsr2l,c
 35891  01C2EA  6ADA               	clrf	fsr2h,c
 35892  01C2EC  0E01               	movlw	high _uart1RxBuffer
 35893  01C2EE  22DA               	addwfc	fsr2h,f,c
 35894  01C2F0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35895  01C2F6  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35896                           
 35897                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35898  01C2F8  0E07               	movlw	7
 35899  01C2FA  6447               	cpfsgt	_uart1RxHead^0,c
 35900  01C2FC  D001               	goto	l10932
 35901                           
 35902                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35903  01C2FE  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35904  01C300                     l10932:
 35905                           
 35906                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35907  01C300  0100               	movlb	0	; () banked
 35908  01C302  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35909                           
 35910                           ; BSR set to: 0
 35911                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35912  01C304  0012               	return		;funcret
 35913  01C306                     __end_of_UART1_Receive_ISR:
 35914                           	opt callstack 0
 35915                           
 35916 ;; *************** function _UART2_tx_vect_isr *****************
 35917 ;; Defined at:
 35918 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35919 ;; Parameters:    Size  Location     Type
 35920 ;;		None
 35921 ;; Auto vars:     Size  Location     Type
 35922 ;;		None
 35923 ;; Return value:  Size  Location     Type
 35924 ;;                  1    wreg      void 
 35925 ;; Registers used:
 35926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35927 ;; Tracked objects:
 35928 ;;		On entry : 0/0
 35929 ;;		On exit  : 0/0
 35930 ;;		Unchanged: 0/0
 35931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35936 ;;Total ram usage:        0 bytes
 35937 ;; Hardware stack levels used:    1
 35938 ;; Hardware stack levels required when called:    1
 35939 ;; This function calls:
 35940 ;;		Absolute function
 35941 ;;		_UART2_Transmit_ISR
 35942 ;; This function is called by:
 35943 ;;		Interrupt level 2
 35944 ;; This function uses a non-reentrant model
 35945 ;;
 35946                           
 35947                           	psect	text173
 35948  01C178                     __ptext173:
 35949                           	opt callstack 0
 35950  01C178                     _UART2_tx_vect_isr:
 35951                           	opt callstack 3
 35952                           
 35953                           ; BSR set to: 0
 35954                           ;incstack = 0
 35955  01C178  EE14  F15E         	lfsr	1,___inthi_sp
 35956                           
 35957                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35958  01C17C  0100               	movlb	0	; () banked
 35959  01C17E  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35960  01C180  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35961  01C182  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35962  01C184  B4D8               	btfsc	status,2,c
 35963  01C186  0011               	retfie		f
 35964                           
 35965                           ; BSR set to: 0
 35966                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35967  01C188  D801               	call	i2u1062_48
 35968  01C18A  0011               	retfie		f
 35969  01C18C                     i2u1062_48:
 35970  01C18C  0005               	push	
 35971  01C18E  6EFA               	movwf	pclath,c
 35972  01C190  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35973  01C192  6EFD               	movwf	tosl,c
 35974  01C194  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35975  01C196  6EFE               	movwf	tosh,c
 35976  01C198  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35977  01C19A  6EFF               	movwf	tosu,c
 35978  01C19C  50FA               	movf	pclath,w,c
 35979  01C19E  0012               	return		;indir
 35980  01C1A0                     __end_of_UART2_tx_vect_isr:
 35981                           	opt callstack 0
 35982                           
 35983 ;; *************** function _UART2_Transmit_ISR *****************
 35984 ;; Defined at:
 35985 ;;		line 213 in file "mcc_generated_files/uart2.c"
 35986 ;; Parameters:    Size  Location     Type
 35987 ;;		None
 35988 ;; Auto vars:     Size  Location     Type
 35989 ;;		None
 35990 ;; Return value:  Size  Location     Type
 35991 ;;                  1  [STACK] void 
 35992 ;; Registers used:
 35993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35994 ;; Tracked objects:
 35995 ;;		On entry : 3F/0
 35996 ;;		On exit  : 3B/39
 35997 ;;		Unchanged: 0/0
 35998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36003 ;;Total ram usage:        0 bytes
 36004 ;; Hardware stack levels used:    1
 36005 ;; This function calls:
 36006 ;;		Nothing
 36007 ;; This function is called by:
 36008 ;;		_UART2_Initialize
 36009 ;;		_UART2_tx_vect_isr
 36010 ;; This function uses a reentrant model
 36011 ;;
 36012                           
 36013                           	psect	text174
 36014  01BF18                     __ptext174:
 36015                           	opt callstack 0
 36016  01BF18                     _UART2_Transmit_ISR:
 36017                           	opt callstack 3
 36018                           
 36019                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 36020                           
 36021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36022                           ;incstack = 0
 36023  01BF18  0E40               	movlw	64
 36024  01BF1A  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 36025  01BF1C  D010               	goto	l673
 36026                           
 36027                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 36028  01BF1E  0E00               	movlw	low _uart2TxBuffer
 36029  01BF20  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 36030  01BF22  6ED9               	movwf	fsr2l,c
 36031  01BF24  6ADA               	clrf	fsr2h,c
 36032  01BF26  0E03               	movlw	high _uart2TxBuffer
 36033  01BF28  22DA               	addwfc	fsr2h,f,c
 36034  01BF2A  50DF               	movf	indf2,w,c
 36035  01BF2C  013D               	movlb	61	; () banked
 36036  01BF2E  6FD2               	movwf	210,b	;volatile
 36037                           
 36038                           ; BSR set to: 61
 36039  01BF30  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 36040                           
 36041                           ; BSR set to: 61
 36042                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 36043  01BF32  0E3F               	movlw	63
 36044  01BF34  6446               	cpfsgt	_uart2TxTail^0,c
 36045  01BF36  D001               	goto	l10944
 36046                           
 36047                           ; BSR set to: 61
 36048                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 36049  01BF38  6A46               	clrf	_uart2TxTail^0,c	;volatile
 36050  01BF3A                     l10944:
 36051                           
 36052                           ; BSR set to: 61
 36053                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 36054  01BF3A  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 36055                           
 36056                           ;mcc_generated_files/uart2.c: 224:     }
 36057  01BF3C  0012               	return	
 36058  01BF3E                     l673:
 36059                           
 36060                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 36061  01BF3E  0139               	movlb	57	; () banked
 36062  01BF40  9796               	bcf	150,3,b	;volatile
 36063                           
 36064                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36065  01BF42  0012               	return		;funcret
 36066  01BF44                     __end_of_UART2_Transmit_ISR:
 36067                           	opt callstack 0
 36068                           
 36069 ;; *************** function _UART2_rx_vect_isr *****************
 36070 ;; Defined at:
 36071 ;;		line 203 in file "mcc_generated_files/uart2.c"
 36072 ;; Parameters:    Size  Location     Type
 36073 ;;		None
 36074 ;; Auto vars:     Size  Location     Type
 36075 ;;		None
 36076 ;; Return value:  Size  Location     Type
 36077 ;;                  1    wreg      void 
 36078 ;; Registers used:
 36079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36080 ;; Tracked objects:
 36081 ;;		On entry : 0/0
 36082 ;;		On exit  : 0/0
 36083 ;;		Unchanged: 0/0
 36084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36089 ;;Total ram usage:        0 bytes
 36090 ;; Hardware stack levels used:    1
 36091 ;; Hardware stack levels required when called:    1
 36092 ;; This function calls:
 36093 ;;		Absolute function
 36094 ;;		_UART2_Receive_ISR
 36095 ;; This function is called by:
 36096 ;;		Interrupt level 2
 36097 ;; This function uses a non-reentrant model
 36098 ;;
 36099                           
 36100                           	psect	text175
 36101  01C1A0                     __ptext175:
 36102                           	opt callstack 0
 36103  01C1A0                     _UART2_rx_vect_isr:
 36104                           	opt callstack 3
 36105                           
 36106                           ;incstack = 0
 36107  01C1A0  EE14  F15E         	lfsr	1,___inthi_sp
 36108                           
 36109                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 36110  01C1A4  0100               	movlb	0	; () banked
 36111  01C1A6  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36112  01C1A8  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36113  01C1AA  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36114  01C1AC  B4D8               	btfsc	status,2,c
 36115  01C1AE  0011               	retfie		f
 36116                           
 36117                           ; BSR set to: 0
 36118                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 36119  01C1B0  D801               	call	i2u1064_48
 36120  01C1B2  0011               	retfie		f
 36121  01C1B4                     i2u1064_48:
 36122  01C1B4  0005               	push	
 36123  01C1B6  6EFA               	movwf	pclath,c
 36124  01C1B8  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36125  01C1BA  6EFD               	movwf	tosl,c
 36126  01C1BC  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36127  01C1BE  6EFE               	movwf	tosh,c
 36128  01C1C0  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36129  01C1C2  6EFF               	movwf	tosu,c
 36130  01C1C4  50FA               	movf	pclath,w,c
 36131  01C1C6  0012               	return		;indir
 36132  01C1C8                     __end_of_UART2_rx_vect_isr:
 36133                           	opt callstack 0
 36134                           
 36135 ;; *************** function _UART2_Receive_ISR *****************
 36136 ;; Defined at:
 36137 ;;		line 233 in file "mcc_generated_files/uart2.c"
 36138 ;; Parameters:    Size  Location     Type
 36139 ;;		None
 36140 ;; Auto vars:     Size  Location     Type
 36141 ;;		None
 36142 ;; Return value:  Size  Location     Type
 36143 ;;                  1  [STACK] void 
 36144 ;; Registers used:
 36145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36146 ;; Tracked objects:
 36147 ;;		On entry : 3F/0
 36148 ;;		On exit  : 3F/0
 36149 ;;		Unchanged: 0/0
 36150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36155 ;;Total ram usage:        0 bytes
 36156 ;; Hardware stack levels used:    1
 36157 ;; This function calls:
 36158 ;;		Nothing
 36159 ;; This function is called by:
 36160 ;;		_UART2_Initialize
 36161 ;;		_UART2_rx_vect_isr
 36162 ;; This function uses a reentrant model
 36163 ;;
 36164                           
 36165                           	psect	text176
 36166  01C326                     __ptext176:
 36167                           	opt callstack 0
 36168  01C326                     _UART2_Receive_ISR:
 36169                           	opt callstack 3
 36170                           
 36171                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 36172                           
 36173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36174                           ;incstack = 0
 36175  01C326  0E00               	movlw	low _uart2RxBuffer
 36176  01C328  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 36177  01C32A  6ED9               	movwf	fsr2l,c
 36178  01C32C  6ADA               	clrf	fsr2h,c
 36179  01C32E  0E04               	movlw	high _uart2RxBuffer
 36180  01C330  22DA               	addwfc	fsr2h,f,c
 36181  01C332  006F F743 FFDF     	movff	15824,indf2	;volatile
 36182  01C338  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 36183                           
 36184                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 36185  01C33A  2844               	incf	_uart2RxHead^0,w,c
 36186  01C33C  B4D8               	btfsc	status,2,c
 36187                           
 36188                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 36189  01C33E  6A44               	clrf	_uart2RxHead^0,c	;volatile
 36190                           
 36191                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 36192  01C340  0100               	movlb	0	; () banked
 36193  01C342  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 36194                           
 36195                           ; BSR set to: 0
 36196                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36197  01C344  0012               	return		;funcret
 36198  01C346                     __end_of_UART2_Receive_ISR:
 36199                           	opt callstack 0
 36200                           
 36201 ;; *************** function _TMR6_ISR *****************
 36202 ;; Defined at:
 36203 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 36204 ;; Parameters:    Size  Location     Type
 36205 ;;		None
 36206 ;; Auto vars:     Size  Location     Type
 36207 ;;		None
 36208 ;; Return value:  Size  Location     Type
 36209 ;;                  1    wreg      void 
 36210 ;; Registers used:
 36211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36212 ;; Tracked objects:
 36213 ;;		On entry : 0/0
 36214 ;;		On exit  : 0/0
 36215 ;;		Unchanged: 0/0
 36216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36221 ;;Total ram usage:        1 bytes
 36222 ;; Hardware stack levels used:    1
 36223 ;; Hardware stack levels required when called:    2
 36224 ;; This function calls:
 36225 ;;		_TMR6_CallBack
 36226 ;; This function is called by:
 36227 ;;		Interrupt level 2
 36228 ;; This function uses a non-reentrant model
 36229 ;;
 36230                           
 36231                           	psect	text177
 36232  01C3F8                     __ptext177:
 36233                           	opt callstack 0
 36234  01C3F8                     _TMR6_ISR:
 36235                           	opt callstack 2
 36236                           
 36237                           ; BSR set to: 0
 36238                           ;incstack = 0
 36239  01C3F8  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 36240  01C3FE  EE14  F15E         	lfsr	1,___inthi_sp
 36241                           
 36242                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 36243  01C402  0139               	movlb	57	; () banked
 36244  01C404  91A9               	bcf	169,0,b	;volatile
 36245                           
 36246                           ; BSR set to: 57
 36247                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 36248  01C406  EC3E  F0E1         	call	_TMR6_CallBack	;wreg free
 36249  01C40A  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 36250  01C410  0011               	retfie		f
 36251  01C412                     __end_of_TMR6_ISR:
 36252                           	opt callstack 0
 36253                           
 36254 ;; *************** function _TMR6_CallBack *****************
 36255 ;; Defined at:
 36256 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 36257 ;; Parameters:    Size  Location     Type
 36258 ;;		None
 36259 ;; Auto vars:     Size  Location     Type
 36260 ;;		None
 36261 ;; Return value:  Size  Location     Type
 36262 ;;                  1  [STACK] void 
 36263 ;; Registers used:
 36264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36265 ;; Tracked objects:
 36266 ;;		On entry : 3F/39
 36267 ;;		On exit  : 0/0
 36268 ;;		Unchanged: 0/0
 36269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36274 ;;Total ram usage:        0 bytes
 36275 ;; Hardware stack levels used:    1
 36276 ;; Hardware stack levels required when called:    1
 36277 ;; This function calls:
 36278 ;;		Absolute function
 36279 ;;		_TMR6_DefaultInterruptHandler
 36280 ;; This function is called by:
 36281 ;;		_TMR6_ISR
 36282 ;; This function uses a reentrant model
 36283 ;;
 36284                           
 36285                           	psect	text178
 36286  01C27C                     __ptext178:
 36287                           	opt callstack 0
 36288  01C27C                     _TMR6_CallBack:
 36289                           	opt callstack 2
 36290                           
 36291                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 36292                           
 36293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36294                           ;incstack = 0
 36295  01C27C  0100               	movlb	0	; () banked
 36296  01C27E  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36297  01C280  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36298  01C282  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36299  01C284  B4D8               	btfsc	status,2,c
 36300  01C286  0012               	return	
 36301                           
 36302                           ; BSR set to: 0
 36303                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 36304  01C288  D801               	call	u1017_48
 36305  01C28A  0012               	return	
 36306  01C28C                     u1017_48:
 36307  01C28C  0005               	push	
 36308  01C28E  6EFA               	movwf	pclath,c
 36309  01C290  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36310  01C292  6EFD               	movwf	tosl,c
 36311  01C294  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36312  01C296  6EFE               	movwf	tosh,c
 36313  01C298  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36314  01C29A  6EFF               	movwf	tosu,c
 36315  01C29C  50FA               	movf	pclath,w,c
 36316  01C29E  0012               	return		;indir
 36317  01C2A0                     __end_of_TMR6_CallBack:
 36318                           	opt callstack 0
 36319                           
 36320 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36321 ;; Defined at:
 36322 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36323 ;; Parameters:    Size  Location     Type
 36324 ;;		None
 36325 ;; Auto vars:     Size  Location     Type
 36326 ;;  i               1  [STACK] unsigned char 
 36327 ;; Return value:  Size  Location     Type
 36328 ;;                  1  [STACK] void 
 36329 ;; Registers used:
 36330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36331 ;; Tracked objects:
 36332 ;;		On entry : 3F/0
 36333 ;;		On exit  : 0/0
 36334 ;;		Unchanged: 0/0
 36335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36340 ;;Total ram usage:        0 bytes
 36341 ;; Hardware stack levels used:    1
 36342 ;; This function calls:
 36343 ;;		Nothing
 36344 ;; This function is called by:
 36345 ;;		_TMR6_Initialize
 36346 ;;		_TMR6_CallBack
 36347 ;; This function uses a reentrant model
 36348 ;;
 36349                           
 36350                           	psect	text179
 36351  01B712                     __ptext179:
 36352                           	opt callstack 0
 36353  01B712                     _TMR6_DefaultInterruptHandler:
 36354                           	opt callstack 0
 36355                           
 36356                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36357  01B712  52E6               	movf	postinc1,f,c
 36358                           
 36359                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36360                           ;stkvar	_i @ sp[(-1)+0]
 36361                           
 36362                           ;incstack = 0
 36363  01B714  0EFF               	movlw	-1
 36364  01B716  6AE3               	clrf	plusw1,c
 36365  01B718                     l10514:
 36366                           
 36367                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36368                           ;stkvar	_i @ sp[(-1)+0]
 36369  01B718  0EFF               	movlw	-1
 36370  01B71A  50E3               	movf	plusw1,w,c
 36371  01B71C  0D02               	mullw	2
 36372  01B71E  0E7D               	movlw	low _tickCount
 36373  01B720  24F3               	addwf	243,w,c
 36374  01B722  6ED9               	movwf	fsr2l,c
 36375  01B724  0E02               	movlw	high _tickCount
 36376  01B726  20F4               	addwfc	prodh,w,c
 36377  01B728  6EDA               	movwf	fsr2h,c
 36378  01B72A  50DE               	movf	postinc2,w,c
 36379  01B72C  10DE               	iorwf	postinc2,w,c
 36380  01B72E  B4D8               	btfsc	status,2,c
 36381  01B730  D00C               	goto	l10518
 36382                           
 36383                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36384                           ;stkvar	_i @ sp[(-1)+0]
 36385  01B732  0EFF               	movlw	-1
 36386  01B734  50E3               	movf	plusw1,w,c
 36387  01B736  0D02               	mullw	2
 36388  01B738  0E7D               	movlw	low _tickCount
 36389  01B73A  24F3               	addwf	243,w,c
 36390  01B73C  6ED9               	movwf	fsr2l,c
 36391  01B73E  0E02               	movlw	high _tickCount
 36392  01B740  20F4               	addwfc	prodh,w,c
 36393  01B742  6EDA               	movwf	fsr2h,c
 36394  01B744  06DE               	decf	postinc2,f,c
 36395  01B746  0E00               	movlw	0
 36396  01B748  5ADD               	subwfb	postdec2,f,c
 36397  01B74A                     l10518:
 36398                           
 36399                           ;mcc_generated_files/tmr6.c: 207:  }
 36400                           ;stkvar	_i @ sp[(-1)+0]
 36401  01B74A  0EFF               	movlw	-1
 36402  01B74C  2AE3               	incf	plusw1,f,c
 36403                           
 36404                           ;stkvar	_i @ sp[(-1)+0]
 36405  01B74E  0EFF               	movlw	-1
 36406  01B750  006F FF8C  F001    	movff	plusw1,btemp
 36407  01B756  0E0C               	movlw	12
 36408  01B758  6401               	cpfsgt	btemp^0,c
 36409  01B75A  D7DE               	goto	l10514
 36410                           
 36411                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36412  01B75C  52E5               	movf	postdec1,f,c
 36413  01B75E  0012               	return		;funcret
 36414  01B760                     __end_of_TMR6_DefaultInterruptHandler:
 36415                           	opt callstack 0
 36416                           
 36417 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36418 ;; Defined at:
 36419 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36420 ;; Parameters:    Size  Location     Type
 36421 ;;		None
 36422 ;; Auto vars:     Size  Location     Type
 36423 ;;		None
 36424 ;; Return value:  Size  Location     Type
 36425 ;;                  1    wreg      void 
 36426 ;; Registers used:
 36427 ;;		None
 36428 ;; Tracked objects:
 36429 ;;		On entry : 0/0
 36430 ;;		On exit  : 3F/1
 36431 ;;		Unchanged: 0/0
 36432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36437 ;;Total ram usage:        0 bytes
 36438 ;; Hardware stack levels used:    1
 36439 ;; This function calls:
 36440 ;;		Nothing
 36441 ;; This function is called by:
 36442 ;;		Interrupt level 2
 36443 ;; This function uses a non-reentrant model
 36444 ;;
 36445                           
 36446                           	psect	text180
 36447  01C524                     __ptext180:
 36448                           	opt callstack 0
 36449  01C524                     _DMA1_DMASCNT_ISR:
 36450                           	opt callstack 4
 36451                           
 36452                           ;incstack = 0
 36453  01C524  EE14  F15E         	lfsr	1,___inthi_sp
 36454                           
 36455                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36456  01C528  0139               	movlb	57	; () banked
 36457  01C52A  91A2               	bcf	162,0,b	;volatile
 36458                           
 36459                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36460  01C52C  0101               	movlb	1	; () banked
 36461  01C52E  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 36462                           
 36463                           ; BSR set to: 1
 36464  01C530  0011               	retfie		f
 36465  01C532                     __end_of_DMA1_DMASCNT_ISR:
 36466                           	opt callstack 0
 36467                           
 36468 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36469 ;; Defined at:
 36470 ;;		line 133 in file "mcc_generated_files/dma1.c"
 36471 ;; Parameters:    Size  Location     Type
 36472 ;;		None
 36473 ;; Auto vars:     Size  Location     Type
 36474 ;;		None
 36475 ;; Return value:  Size  Location     Type
 36476 ;;                  1    wreg      void 
 36477 ;; Registers used:
 36478 ;;		None
 36479 ;; Tracked objects:
 36480 ;;		On entry : 0/0
 36481 ;;		On exit  : 3F/39
 36482 ;;		Unchanged: 0/0
 36483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36488 ;;Total ram usage:        0 bytes
 36489 ;; Hardware stack levels used:    1
 36490 ;; This function calls:
 36491 ;;		Nothing
 36492 ;; This function is called by:
 36493 ;;		Interrupt level 2
 36494 ;; This function uses a non-reentrant model
 36495 ;;
 36496                           
 36497                           	psect	text181
 36498  01C548                     __ptext181:
 36499                           	opt callstack 0
 36500  01C548                     _DMA1_DMADCNT_ISR:
 36501                           	opt callstack 4
 36502                           
 36503                           ; BSR set to: 1
 36504                           ;incstack = 0
 36505  01C548  EE14  F15E         	lfsr	1,___inthi_sp
 36506                           
 36507                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 36508  01C54C  0139               	movlb	57	; () banked
 36509  01C54E  93A2               	bcf	162,1,b	;volatile
 36510                           
 36511                           ; BSR set to: 57
 36512  01C550  0011               	retfie		f
 36513  01C552                     __end_of_DMA1_DMADCNT_ISR:
 36514                           	opt callstack 0
 36515                           
 36516 ;; *************** function _DMA1_DMAA_ISR *****************
 36517 ;; Defined at:
 36518 ;;		line 143 in file "mcc_generated_files/dma1.c"
 36519 ;; Parameters:    Size  Location     Type
 36520 ;;		None
 36521 ;; Auto vars:     Size  Location     Type
 36522 ;;		None
 36523 ;; Return value:  Size  Location     Type
 36524 ;;                  1    wreg      void 
 36525 ;; Registers used:
 36526 ;;		None
 36527 ;; Tracked objects:
 36528 ;;		On entry : 0/0
 36529 ;;		On exit  : 3F/39
 36530 ;;		Unchanged: 0/0
 36531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36536 ;;Total ram usage:        0 bytes
 36537 ;; Hardware stack levels used:    1
 36538 ;; This function calls:
 36539 ;;		Nothing
 36540 ;; This function is called by:
 36541 ;;		Interrupt level 2
 36542 ;; This function uses a non-reentrant model
 36543 ;;
 36544                           
 36545                           	psect	text182
 36546  01C554                     __ptext182:
 36547                           	opt callstack 0
 36548  01C554                     _DMA1_DMAA_ISR:
 36549                           	opt callstack 4
 36550                           
 36551                           ; BSR set to: 57
 36552                           ;incstack = 0
 36553  01C554  EE14  F15E         	lfsr	1,___inthi_sp
 36554                           
 36555                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 36556  01C558  0139               	movlb	57	; () banked
 36557  01C55A  97A2               	bcf	162,3,b	;volatile
 36558                           
 36559                           ; BSR set to: 57
 36560  01C55C  0011               	retfie		f
 36561  01C55E                     __end_of_DMA1_DMAA_ISR:
 36562                           	opt callstack 0
 36563                           
 36564 ;; *************** function _DMA1_DMAOR_ISR *****************
 36565 ;; Defined at:
 36566 ;;		line 154 in file "mcc_generated_files/dma1.c"
 36567 ;; Parameters:    Size  Location     Type
 36568 ;;		None
 36569 ;; Auto vars:     Size  Location     Type
 36570 ;;		None
 36571 ;; Return value:  Size  Location     Type
 36572 ;;                  1    wreg      void 
 36573 ;; Registers used:
 36574 ;;		None
 36575 ;; Tracked objects:
 36576 ;;		On entry : 0/0
 36577 ;;		On exit  : 3F/39
 36578 ;;		Unchanged: 0/0
 36579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36584 ;;Total ram usage:        0 bytes
 36585 ;; Hardware stack levels used:    1
 36586 ;; This function calls:
 36587 ;;		Nothing
 36588 ;; This function is called by:
 36589 ;;		Interrupt level 2
 36590 ;; This function uses a non-reentrant model
 36591 ;;
 36592                           
 36593                           	psect	text183
 36594  01C560                     __ptext183:
 36595                           	opt callstack 0
 36596  01C560                     _DMA1_DMAOR_ISR:
 36597                           	opt callstack 4
 36598                           
 36599                           ; BSR set to: 57
 36600                           ;incstack = 0
 36601  01C560  EE14  F15E         	lfsr	1,___inthi_sp
 36602                           
 36603                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 36604  01C564  0139               	movlb	57	; () banked
 36605  01C566  95A2               	bcf	162,2,b	;volatile
 36606                           
 36607                           ; BSR set to: 57
 36608  01C568  0011               	retfie		f
 36609  01C56A                     __end_of_DMA1_DMAOR_ISR:
 36610                           	opt callstack 0
 36611                           
 36612                           ;
 36613                           ; Interrupt Vector Table @ 0x8
 36614                           ;
 36615                           
 36616                           	psect	ivt0x8
 36617  000008                     __pivt0x8:
 36618                           	opt callstack 0
 36619  000008                     ivt0x8_base:
 36620                           	opt callstack 0
 36621                           
 36622                           ; Vector 0 : SWINT
 36623  000008  716B               	dw	_Default_ISR shr (0+2)
 36624                           
 36625                           ; Vector 1 : HLVD
 36626  00000A  716B               	dw	_Default_ISR shr (0+2)
 36627                           
 36628                           ; Vector 2 : OSF
 36629  00000C  716B               	dw	_Default_ISR shr (0+2)
 36630                           
 36631                           ; Vector 3 : CSW
 36632  00000E  716B               	dw	_Default_ISR shr (0+2)
 36633                           
 36634                           ; Vector 4 : NVM
 36635  000010  716B               	dw	_Default_ISR shr (0+2)
 36636                           
 36637                           ; Vector 5 : SCAN
 36638  000012  716B               	dw	_Default_ISR shr (0+2)
 36639                           
 36640                           ; Vector 6 : CRC
 36641  000014  716B               	dw	_Default_ISR shr (0+2)
 36642                           
 36643                           ; Vector 7 : IOC
 36644  000016  716B               	dw	_Default_ISR shr (0+2)
 36645                           
 36646                           ; Vector 8 : INT0
 36647  000018  7145               	dw	_INT0_ISR shr (0+2)
 36648                           
 36649                           ; Vector 9 : ZCD
 36650  00001A  716B               	dw	_Default_ISR shr (0+2)
 36651                           
 36652                           ; Vector 10 : AD
 36653  00001C  6FBB               	dw	_ADCC_ISR shr (0+2)
 36654                           
 36655                           ; Vector 11 : ADT
 36656  00001E  6CC2               	dw	_ADCC_ThresholdISR shr (0+2)
 36657                           
 36658                           ; Vector 12 : CMP1
 36659  000020  716B               	dw	_Default_ISR shr (0+2)
 36660                           
 36661                           ; Vector 13 : SMT1
 36662  000022  716B               	dw	_Default_ISR shr (0+2)
 36663                           
 36664                           ; Vector 14 : SMT1PRA
 36665  000024  716B               	dw	_Default_ISR shr (0+2)
 36666                           
 36667                           ; Vector 15 : SMT1PRW
 36668  000026  716B               	dw	_Default_ISR shr (0+2)
 36669                           
 36670                           ; Vector 16 : DMA1SCNT
 36671  000028  7149               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 36672                           
 36673                           ; Vector 17 : DMA1DCNT
 36674  00002A  7152               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 36675                           
 36676                           ; Vector 18 : DMA1OR
 36677  00002C  7158               	dw	_DMA1_DMAOR_ISR shr (0+2)
 36678                           
 36679                           ; Vector 19 : DMA1A
 36680  00002E  7155               	dw	_DMA1_DMAA_ISR shr (0+2)
 36681                           
 36682                           ; Vector 20 : SPI1RX
 36683  000030  716B               	dw	_Default_ISR shr (0+2)
 36684                           
 36685                           ; Vector 21 : SPI1TX
 36686  000032  716B               	dw	_Default_ISR shr (0+2)
 36687                           
 36688                           ; Vector 22 : SPI1
 36689  000034  716B               	dw	_Default_ISR shr (0+2)
 36690                           
 36691                           ; Vector 23 : I2C1RX
 36692  000036  716B               	dw	_Default_ISR shr (0+2)
 36693                           
 36694                           ; Vector 24 : I2C1TX
 36695  000038  716B               	dw	_Default_ISR shr (0+2)
 36696                           
 36697                           ; Vector 25 : I2C1
 36698  00003A  716B               	dw	_Default_ISR shr (0+2)
 36699                           
 36700                           ; Vector 26 : I2C1E
 36701  00003C  716B               	dw	_Default_ISR shr (0+2)
 36702                           
 36703                           ; Vector 27 : U1RX
 36704  00003E  7054               	dw	_UART1_rx_vect_isr shr (0+2)
 36705                           
 36706                           ; Vector 28 : U1TX
 36707  000040  716B               	dw	_Default_ISR shr (0+2)
 36708                           
 36709                           ; Vector 29 : U1E
 36710  000042  716B               	dw	_Default_ISR shr (0+2)
 36711                           
 36712                           ; Vector 30 : U1
 36713  000044  716B               	dw	_Default_ISR shr (0+2)
 36714                           
 36715                           ; Vector 31 : TMR0
 36716  000046  716B               	dw	_Default_ISR shr (0+2)
 36717                           
 36718                           ; Vector 32 : TMR1
 36719  000048  716B               	dw	_Default_ISR shr (0+2)
 36720                           
 36721                           ; Vector 33 : TMR1G
 36722  00004A  716B               	dw	_Default_ISR shr (0+2)
 36723                           
 36724                           ; Vector 34 : TMR2
 36725  00004C  716B               	dw	_Default_ISR shr (0+2)
 36726                           
 36727                           ; Vector 35 : CCP1
 36728  00004E  716B               	dw	_Default_ISR shr (0+2)
 36729                           
 36730                           ; Vector 36 : Undefined
 36731  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 36732                           
 36733                           ; Vector 37 : NCO1
 36734  000052  716B               	dw	_Default_ISR shr (0+2)
 36735                           
 36736                           ; Vector 38 : CWG1
 36737  000054  716B               	dw	_Default_ISR shr (0+2)
 36738                           
 36739                           ; Vector 39 : CLC1
 36740  000056  716B               	dw	_Default_ISR shr (0+2)
 36741                           
 36742                           ; Vector 40 : INT1
 36743  000058  6EEB               	dw	_INT1_ISR shr (0+2)
 36744                           
 36745                           ; Vector 41 : CMP2
 36746  00005A  716B               	dw	_Default_ISR shr (0+2)
 36747                           
 36748                           ; Vector 42 : DMA2SCNT
 36749  00005C  716B               	dw	_Default_ISR shr (0+2)
 36750                           
 36751                           ; Vector 43 : DMA2DCNT
 36752  00005E  716B               	dw	_Default_ISR shr (0+2)
 36753                           
 36754                           ; Vector 44 : DMA2OR
 36755  000060  716B               	dw	_Default_ISR shr (0+2)
 36756                           
 36757                           ; Vector 45 : DMA2A
 36758  000062  716B               	dw	_Default_ISR shr (0+2)
 36759                           
 36760                           ; Vector 46 : I2C2RX
 36761  000064  716B               	dw	_Default_ISR shr (0+2)
 36762                           
 36763                           ; Vector 47 : I2C2TX
 36764  000066  716B               	dw	_Default_ISR shr (0+2)
 36765                           
 36766                           ; Vector 48 : I2C2
 36767  000068  716B               	dw	_Default_ISR shr (0+2)
 36768                           
 36769                           ; Vector 49 : I2C2E
 36770  00006A  716B               	dw	_Default_ISR shr (0+2)
 36771                           
 36772                           ; Vector 50 : U2RX
 36773  00006C  7068               	dw	_UART2_rx_vect_isr shr (0+2)
 36774                           
 36775                           ; Vector 51 : U2TX
 36776  00006E  705E               	dw	_UART2_tx_vect_isr shr (0+2)
 36777                           
 36778                           ; Vector 52 : U2E
 36779  000070  716B               	dw	_Default_ISR shr (0+2)
 36780                           
 36781                           ; Vector 53 : U2
 36782  000072  716B               	dw	_Default_ISR shr (0+2)
 36783                           
 36784                           ; Vector 54 : TMR3
 36785  000074  64DE               	dw	_TMR3_ISR shr (0+2)
 36786                           
 36787                           ; Vector 55 : TMR3G
 36788  000076  716B               	dw	_Default_ISR shr (0+2)
 36789                           
 36790                           ; Vector 56 : TMR4
 36791  000078  716B               	dw	_Default_ISR shr (0+2)
 36792                           
 36793                           ; Vector 57 : CCP2
 36794  00007A  716B               	dw	_Default_ISR shr (0+2)
 36795                           
 36796                           ; Vector 58 : Undefined
 36797  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36798                           
 36799                           ; Vector 59 : CWG2
 36800  00007E  716B               	dw	_Default_ISR shr (0+2)
 36801                           
 36802                           ; Vector 60 : CLC2
 36803  000080  716B               	dw	_Default_ISR shr (0+2)
 36804                           
 36805                           ; Vector 61 : INT2
 36806  000082  716B               	dw	_Default_ISR shr (0+2)
 36807                           
 36808                           ; Vector 62 : Undefined
 36809  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36810                           
 36811                           ; Vector 63 : Undefined
 36812  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36813                           
 36814                           ; Vector 64 : Undefined
 36815  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36816                           
 36817                           ; Vector 65 : Undefined
 36818  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36819                           
 36820                           ; Vector 66 : Undefined
 36821  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36822                           
 36823                           ; Vector 67 : Undefined
 36824  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36825                           
 36826                           ; Vector 68 : Undefined
 36827  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36828                           
 36829                           ; Vector 69 : Undefined
 36830  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36831                           
 36832                           ; Vector 70 : TMR5
 36833  000094  6881               	dw	_TMR5_ISR shr (0+2)
 36834                           
 36835                           ; Vector 71 : TMR5G
 36836  000096  716B               	dw	_Default_ISR shr (0+2)
 36837                           
 36838                           ; Vector 72 : TMR6
 36839  000098  70FE               	dw	_TMR6_ISR shr (0+2)
 36840                           
 36841                           ; Vector 73 : CCP3
 36842  00009A  716B               	dw	_Default_ISR shr (0+2)
 36843                           
 36844                           ; Vector 74 : CWG3
 36845  00009C  716B               	dw	_Default_ISR shr (0+2)
 36846                           
 36847                           ; Vector 75 : CLC3
 36848  00009E  716B               	dw	_Default_ISR shr (0+2)
 36849                           
 36850                           ; Vector 76 : Undefined
 36851  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36852                           
 36853                           ; Vector 77 : Undefined
 36854  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36855                           
 36856                           ; Vector 78 : Undefined
 36857  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36858                           
 36859                           ; Vector 79 : Undefined
 36860  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36861                           
 36862                           ; Vector 80 : CCP4
 36863  0000A8  716B               	dw	_Default_ISR shr (0+2)
 36864                           
 36865                           ; Vector 81 : CLC4
 36866  0000AA  716B               	dw	_Default_ISR shr (0+2)
 36867  0000AC                     ivt0x8_undefint:
 36868                           	opt callstack 0
 36869  0000AC  00FF               	reset	
 36870                           
 36871                           	psect	text184
 36872  000000                     __ptext184:
 36873                           	opt callstack 0
 36874                           
 36875                           	psect	rparam
 36876  0000                     
 36877                           	psect	temp
 36878  000001                     btemp:
 36879                           	opt callstack 0
 36880  000001                     	ds	32
 36881  0000                     wtemp0	set	btemp
 36882  0000                     wtemp1	set	btemp+2
 36883  0000                     wtemp2	set	btemp+4
 36884  0000                     wtemp3	set	btemp+6
 36885  0000                     wtemp4	set	btemp+8
 36886  0000                     wtemp5	set	btemp+10
 36887  0000                     wtemp8	set	btemp+1
 36888  0000                     ttemp0	set	btemp
 36889  0000                     ttemp1	set	btemp+3
 36890  0000                     ttemp2	set	btemp+6
 36891  0000                     ttemp3	set	btemp+9
 36892  0000                     ttemp5	set	btemp+1
 36893  0000                     ttemp6	set	btemp+4
 36894  0000                     ttemp7	set	btemp+8
 36895  0000                     ltemp0	set	btemp
 36896  0000                     ltemp1	set	btemp+4
 36897  0000                     ltemp2	set	btemp+8
 36898  0000                     lltemp0	set	btemp
 36899  0000                     lltemp1	set	btemp+8
 36900  0000                     lltemp2	set	btemp+16
 36901  0000                     lltemp3	set	btemp+24
 36902                           tosu	equ	0x3FFF
 36903                           tosh	equ	0x3FFE
 36904                           tosl	equ	0x3FFD
 36905                           stkptr	equ	0x3FFC
 36906                           pclatu	equ	0x3FFB
 36907                           pclath	equ	0x3FFA
 36908                           pcl	equ	0x3FF9
 36909                           tblptru	equ	0x3FF8
 36910                           tblptrh	equ	0x3FF7
 36911                           tblptrl	equ	0x3FF6
 36912                           tablat	equ	0x3FF5
 36913                           prodh	equ	0x3FF4
 36914                           prodl	equ	0x3FF3
 36915                           indf0	equ	0x3FEF
 36916                           postinc0	equ	0x3FEE
 36917                           postdec0	equ	0x3FED
 36918                           preinc0	equ	0x3FEC
 36919                           plusw0	equ	0x3FEB
 36920                           fsr0h	equ	0x3FEA
 36921                           fsr0l	equ	0x3FE9
 36922                           wreg	equ	0x3FE8
 36923                           indf1	equ	0x3FE7
 36924                           postinc1	equ	0x3FE6
 36925                           postdec1	equ	0x3FE5
 36926                           preinc1	equ	0x3FE4
 36927                           plusw1	equ	0x3FE3
 36928                           fsr1h	equ	0x3FE2
 36929                           fsr1l	equ	0x3FE1
 36930                           bsr	equ	0x3FE0
 36931                           indf2	equ	0x3FDF
 36932                           postinc2	equ	0x3FDE
 36933                           postdec2	equ	0x3FDD
 36934                           preinc2	equ	0x3FDC
 36935                           plusw2	equ	0x3FDB
 36936                           fsr2h	equ	0x3FDA
 36937                           fsr2l	equ	0x3FD9
 36938                           status	equ	0x3FD8


Data Sizes:
    Strings     1070
    Constant    492
    Data        1070
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     251
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6322_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4785tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  481379
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10397
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46C      58        0.0%
DATA                 0      0     979       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jan 18 05:21:01 2020

                     _SPI1_Exchange8bit C346                __end_of_set_display_info C3BE  
                                     _C 06FF                                       _D 082A  
                                     _H 01C6                                       _P 01EF  
                                     _R 00AF                                       _S 0254  
                                     _T FAB5                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C086            __end_of_start_switch_handler C326  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBBD                  __end_of_FVR_Initialize C592  
                        _check_day_time 8A66                             __CFG_LVP$ON 000000  
                                   l169 C47E                                     l807 C354  
                                   l673 BF3E                                     _GIE 01FE97  
                                   _abs B95A                                     _pad 9C08  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C42A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C258  
                     _update_adc_result BBEA                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C1EC  
                          __CFG_ZCD$OFF 000000                                    l1002 BB66  
                                  l2113 3DB6                                    l2034 A566  
                                  l2043 88A4                                    l3020 4C36  
                                  l1332 12A2                                    l2109 3AB0  
                                  l1190 BBA6                                    l2214 9C64  
                                  l1350 1902                                    l3008 4DA6  
                                  l1601 AE2C                                    l2234 591C  
                                  l2314 0B1A                                    l2155 745C  
                       _timer3ReloadVal 009E                                    l1348 18FE  
                                  l3053 5320                                    l2270 123A  
                                  l1374 23A8                                    l1358 19A2  
                                  l3160 B99A                                    l3152 8D92  
                                  l2352 754A                                    l1616 BCE2  
                                  l1368 1BA6                                    l3129 86C4  
                                  l1369 1DCE                                    l1812 5838  
                                  l1732 C3BA                                    l3260 9AE6  
                                  l2373 6874                                    l1469 B5C4  
                                  l2438 338A                                    l3191 7C08  
                                  l3089 45EA                                    l2730 A6F4  
                                  l1675 BC40                                    l2299 066A  
                                  l1908 8A5C                                    l2388 614E  
                                  l1692 9E28                                    l1684 836A  
                                  l1852 B1BC                                    l2741 936C  
                                  l1597 AA6C                                    l1685 84C6  
                                  l2734 9298                                    l3542 B04C  
                  _ADCC_StartConversion C498                                    l3527 82AE  
                                  l3555 AFC8                                    l1955 9F4A  
                                  l1972 8BF4                                    l1968 8BFC  
                                  l8000 4AAC                                    l2768 920A  
                                  l8020 4BC0                                    l8004 4AB6  
                                  l8030 4C1A                                    l8022 4BE6  
                                  l8040 4C6A                                    l8008 4AE8  
                                  l8210 B03C                                    l8044 4C76  
                                  l8070 4D02                                    l8054 4C9E  
                                  l8038 4C58                                    l8080 4D2E  
                                  l8400 4FA8                                    l8240 6750  
                                  l8224 65E2                                    l8058 4CA4  
                                  l8306 78EC                                    l8092 4D86  
                                  l8084 4D46                                    l8500 52F4  
                                  l8244 6798                                    l8086 4D56  
                                  l8502 5304                                    l8414 4FFC  
                                  l8406 4FE2                                    l8342 7FEA  
                                  l8334 7F3E                                    l8326 7EB6  
                                  l8182 8D30                                    l8238 6700  
                                  l8440 5128                                    l8432 50C2  
                                  l8424 508C                                    l8168 B98A  
                                  l8192 8D8A                                    l8248 6806  
                                  l8434 50D4                                    l8442 512C  
                                  l8362 4E06                                    l8282 7780  
                                  l8186 8D34                                    l8266 AFB8  
                                  l8612 43FA                                    l8524 3E60  
                                  l8372 4E5C                                    l9500 7AB6  
                                  l8630 4470                                    l8606 43DE  
                                  l8542 3F2E                                    l8526 3E66  
                                  l8518 3E20                                    l7902 4708  
                                  l8454 5176                                    l8382 4EE4  
                                  l8374 4E8C                                    l9502 7AF4  
                                  l8294 781A                                    l8640 44E4  
                                  l8616 4420                                    l8544 3F34  
                                  l8536 3EEE                                    l8528 3E96  
                                  l7920 47C0                                    l8472 51EC  
                                  l8448 515A                                    l8392 4F3A  
                                  l8368 4E46                                    l8288 77D4  
                                  l8650 4554                                    l8626 446A  
                                  l8554 3F86                                    l8546 3F64  
                                  l7914 477A                                    l8482 5260  
                                  l8458 519C                                    l8394 4F6A  
                                  l9506 7B5C                                    l8714 960E  
                                  l8706 95DA                                    l8730 9B22  
                                  l8802 B812                                    l8660 45B2  
                                  l8644 452A                                    l7908 473A  
                                  l8468 51E6                                    l8388 4F24  
                                  l8900 B6B0                                    l9516 7BF8  
                                  l8812 90F4                                    l9532 8120  
                                  l7926 47E2                                    l7918 4790  
                                  l8494 52CC                                    l8734 9B3A  
                                  l8726 9B10                                    l8830 9192  
                                  l9534 818C                                    l8488 529C  
                                  l9800 858E                                    l9480 79B8  
                                  l7856 AC8E                                    l8680 94FE  
                                  l8752 9BEE                                    l8744 9BBA  
                                  l8760 A67C                                    l8658 4598  
                                  l7970 49B2                                    l7890 468A  
                                  l9810 85F0                                    l9802 85A4  
                                  l9490 7A4E                                    l9482 79DA  
                                  l7858 ACB0                                    l7972 49C4  
                                  l7980 49FE                                    l7956 4920  
                                  l7884 464A                                    l9812 860E  
                                  l9804 85C2                                    l8692 9534  
                                  l8764 A6BE                                    l8836 91A2  
                                  l8828 9176                                    l8852 8F70  
                                  l7966 4992                                    l7894 46A0  
                                  l8782 92E6                                    l9822 8642  
                                  l9814 8624                                    l8686 9514  
                                  l8838 91B8                                    l7976 49CE  
                                  l7896 46D0                                    l8776 9256  
                                  l9832 86A4                                    l9496 7A7A  
                                  l8768 A6F2                                    l8864 9042  
                                  l8794 936A                                    l8786 9334  
                                  l9842 532C                                    l9914 BFB6  
                                  l9498 7A92                                    l8884 970E  
                                  l8876 9662                                    l7998 4A9A  
                                  l9790 8514                                    l9870 55EE  
                                  l9862 55BC                                    STR_1 FF1E  
                                  l9848 535C                                    STR_2 FF09  
                                  STR_3 FFD2                                    l9882 576A  
                                  l9874 568A                                    l9858 54AE  
                                  STR_4 FECA                                    STR_5 FEA0  
                                  STR_6 FEA0                                    STR_7 FEA0  
                                  l9798 8580                                    STR_8 FEB5  
                                  STR_9 FC9B                                    l9888 5806  
                                  l9896 5818                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6210 657A                                    _T6PR 003F93  
                                  u5500 ACDE                                    u7100 9560  
                                  u6140 8D82                                    u6220 65C6  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u7030 44BE                                    u6150 8D84  
                                  u6310 BA1E                                    _PMD2 0039C2  
                                  u6135 8D64                                    u6215 6570  
                                  _PMD3 0039C3                                    u7040 44F8  
                                  u6080 B96E                                    u7120 95FA  
                                  u6320 BA20                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u7050 453E  
                                  u6410 77D0                                    u6090 8CB4  
                                  u5530 BE54                                    u6330 AF76  
                                  _PMD6 0039C6                                    u7035 44AE  
                                  u5507 ACD0                                    _PMD7 0039C7  
                                  u5700 4A16                                    u7300 90D4  
                                  u6260 66A6                                    u5540 BE56  
                                  u6180 AFFA                                    u6340 AF78  
                                  u6421 77DA                                    u6245 6600  
                                  u6430 7814                                    u6510 7EB0  
                                  u7230 A6EE                                    u7310 90E8  
                                  u6246 6606                                    u6190 AFFC  
                                  u6095 8CAA                                    u6247 6614  
                                  u5800 4C08                                    u5640 4946  
                                  u6360 BE84                                    u6440 7846  
                                  u7320 9122                                    u6280 677E  
                                  u7305 90CA                                    u6265 669C  
                                  u7401 8F30                                    u5650 4966  
                                  u6370 BE86                                    u6530 7F06  
                                  u7170 9B66                                    u7410 8F6A  
                                  u5651 4960                                    u5900 4CF2  
                                  u6460 7924                                    u6540 7F38  
                                  u7420 8F9C                                    u7325 9118  
                                  u6285 6774                                    u7510 B68C  
                                  u6390 777A                                    u6550 7F6A  
                                  u7190 9BDA                                    u5840 4C7C  
                                  u5760 4ADE                                    u7520 B6AC  
                                  u6480 7976                                    u7440 907A  
                                  u5905 4CE2                                    u5930 4D12  
                                  u5690 49F6                                    u6810 523A  
                                  u6730 5154                                    u6570 8022  
                                  u7290 B80E                                    u7370 91C0  
                                  u5860 4C96                                    u5668 4968  
                                  u6820 5274                                    u9140 8638  
                                  u9204 5376                                    u7460 965C  
                                  u5765 4ACE                                    u9205 5370  
                                  u6830 52B0                                    u6590 8074  
                                  u7390 91EA                                    u7470 968E  
                                  u5695 49E6                                    u6815 522A  
                                  u6920 3F74                                    u9224 5398  
                                  u9225 5392                                    u6770 51DE  
                                  u7490 9746                                    u5970 BE24  
                                  u9244 55D6                                    u8620 7A4A  
                                  u5980 BE26                                    u9245 55D0  
                                  u6935 4108                                    u9520 B380  
                                  u9264 56A4                                    u9184 5346  
                                  u8640 7BA2                                    u6945 41D0  
                                  u9265 569E                                    u9185 5340  
                                  u9290 56CE                                    u8650 7BA4  
                                  u8730 8254                                    u6955 4398  
                                  u9284 56C6                                    u8740 8282  
                                  u9285 56C0                                    u9605 C4B4  
                                  u6990 4462                                    u8750 C2A6  
                                  u9606 C4B6                                    u8735 824E  
                                  u9640 88C0                                    u9545 B3B4  
                                  u9465 BA5A                                    u8737 8240  
                                  u9546 B3B6                                    u9538 B382  
                                  u8690 81BA                                    _PLLR 01CEE0  
                                  u8747 8274                                    u8697 81AC  
                                  u9595 C4C4                                    u9780 C2CE  
                                  u9596 C4C6                                    u9786 C2D0  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR BF18                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0297                                    _cp_h FBCD  
                                  _cp_l FBC9                                    _atoi 799E  
                                  _ctoa AEC6                                    _main 1244  
                                  _dtoa 583E                                    _nanf B49E  
                                  _seed 01F3                                    _prec 003C  
                                  _nout 009A                                    _spin FB45  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 7460  
                                  btemp 0001                                    _utoa 6830  
                                  _xtoa 610A                  __end_of_check_adc_scan C57A  
                         ___fpclassifyf 8C06                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00A2               __end_of_SPI1_Exchange8bit C364  
             __size_of_clear_hid_pflags 0046                         _TMR3_Initialize B8CC  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr C150                            ___param_bank 000000  
                __end_of_check_day_time 8C06                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C522                        __end_of_INT1_ISR BBEA  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma AA74  
         __end_of_OSCILLATOR_Initialize C484                                   l10002 8B30  
                                 l10014 8BA2                                   l10032 BCEC  
                                 l10124 B6EC                                   l11102 A01C  
                                 l11210 A7FC                                   l10090 BED0  
                                 l11124 71A4                                   l12110 6FF2  
                                 l11206 A7BE                                   l11150 7248  
                                 l11134 71EA                                   l11126 71B4  
                                 l12200 590C                                   l12104 6F34  
                                 l13000 AA8A                                   l11144 7220  
                                 l11128 71BA                                   l10514 B718  
                                 l11402 B08A                                   l13002 AA98  
                                 l13010 AACC                                   l11170 72C8  
                                 l11162 72A2                                   l11154 7254  
                                 l11138 71F6                                   l12140 9C5C  
                                 l12212 5974                                   l12124 710A  
                                 l12116 705C                                   l10700 B192  
                                 l10518 B74A                                   l13110 36AC  
                                 l13102 35AA                                   l11254 60FC  
                                 l12150 9CF4                                   l12142 9C6E  
                                 l12222 5B86                                   l11408 B09A  
                                 l13120 38D8                                   l11088 8EFC  
                                 l12072 99FC                                   l12136 9C34  
                                 l12208 5956                                   l13008 AAA0  
                                 l13032 9D40                                   l11192 7422  
                                 l10712 A0C4                                   l11096 9F6A  
                                 l13130 3A18                                   l13114 3700  
                                 l12146 9CAA                                   l12242 5C38  
                                 l12330 0470                                   l11194 744C  
                                 l13124 3952                                   l10740 9790  
                                 l10628 BC56                                   l12084 AD1A  
                                 l12156 A40E                                   l12404 0926  
                                 l12324 0396                                   l12308 02FC  
                                 l12316 032A                                   l12260 00AC  
                                 l10708 A062                                   l13150 3DAE  
                                 l13134 3AC0                                   l10742 979E  
                                 l10750 97A6                                   l10590 8922  
                                 l12174 AEE4                                   l12246 5C74  
                                 l12350 057C                                   l12334 04D2  
                                 l10670 BC0A                                   l10752 97D2  
                                 l12088 AD58                                   l12176 AF10  
                                 l12504 0FD6                                   l12352 058E  
                                 l12328 0406                                   l12272 00F0  
                                 l12280 0146                                   l12600 76DE  
                                 l13312 8462                                   l13072 A500  
                                 l13232 86E2                                   l13138 3AE2  
                                 l13090 347E                                   l10738 9780  
                                 l10586 890E                                   l10578 88E2  
                                 l12506 0FF0                                   l12442 0C32  
                                 l12426 0B12                                   l12418 0A48  
                                 l12346 0554                                   l12290 01EA  
                                 l10932 C300                                   l12516 1092  
                                 l12428 0B34                                   l12292 0216  
                                 l13244 8796                                   l13500 1968  
                                 PRLOCK 0039EF                                   l13094 34D2  
                                 l10766 9884                                   l10758 980A  
                                 l12542 119A                                   l12526 10E2  
                                 l12454 0CBA                                   l12462 0D24  
                                 l12470 0D90                                   l12366 05F6  
                                 l12358 0594                                   l12294 022C  
                                 l12622 68C0                                   l12614 6864  
                                 l13254 886E                                   l10694 B180  
                                 l10944 BF3A                                   l13272 B228  
                                 l12384 06B8                                   l12368 0602  
                                 l12632 6AB6                                   l10872 A78C  
                                 l13600 2322                                   l13360 1284  
                                 l13098 353E                                   l10970 BB4E  
                                 l12490 0F3A                                   l12394 077A  
                                 l12298 0258                                   l12562 74CC  
                                 l12714 647A                                   l13602 233A  
                                 l13530 1AB2                                   l13418 146E  
                                 l13362 128C                                   l12388 06F0  
                                 l12660 6178                                   l12812 2984  
                                 l12804 2898                                   l10868 A710  
                                 l13612 237E                                   l13508 198E  
                                 l12478 0EA2                                   l12582 75BC  
                                 l12654 613E                                   l13622 23D4  
                                 l13542 200A                                   l13518 19B2  
                                 l13366 12AA                                   l12592 7676  
                                 l12904 3180                                   l12840 2C1E  
                                 l12816 29D8                                   l12752 24CA  
                                 l13608 2358                                   l13464 16D6  
                                 l13368 12BC                                   l12586 75EC  
                                 l12578 7580                                   l12690 630A  
                                 l12674 6214                                   l12666 61B4  
                                 l12754 2504                                   l13298 833A  
                                 l13546 206A                                   l10988 BB8E  
                                 l12596 76A2                                   l12924 3312  
                                 l12860 2D7E                                   l12836 2BEA  
                                 l12828 2B32                                   l12756 251A  
                                 l13572 2280                                   l13556 21FE  
                                 l13476 17B0                                   l12918 32B8  
                                 l12870 2E2C                                   l12774 264C  
                                 l12934 3336                                   l13558 222A  
                                 l13486 1906                                   l12928 3316  
                                 l12880 2F4E                                   l12776 2686  
                                 l12952 AC1A                                   l13584 22D2  
                                 l13488 1934                                   l12698 6390  
                                 l12890 3004                                   l12794 2800  
                                 l12778 269C                                   l13594 2310  
                                 l12972 A94A                                   l12974 A98C  
                                 l12996 AA78                                   l12998 AA80  
                       __end_of___aodiv 799E                            _Volts_to_SOC A6FE  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4DB0                                   _ADCLK 003EFF  
                       __end_of___aomod 8098                                   _ADPCH 003EF1  
                       __end_of___fldiv 532A                                   _ADREF 003EFD  
                       __end_of___awdiv 9628                         __end_of___flneg B83C  
                                 STR_10 FD56                                   STR_11 FE32  
                                 STR_12 FEDF                                   STR_21 FF83  
                                 STR_13 FEF4                                   STR_14 FF48  
                                 STR_30 FE5E                                   STR_22 FE1C  
                                 STR_15 FF33                                   STR_23 FE06  
                                 STR_31 FD6C                                   STR_40 FE8A  
                                 STR_24 FDF0                                   STR_32 FD82  
                                 STR_16 FD40                                   STR_41 FE8A  
                                 STR_25 FDDA                                   STR_33 FD98  
                                 STR_17 FC67                           __CFG_WDTE$OFF 000000  
                                 STR_50 FFBF                                   STR_42 FE8A  
                                 STR_26 FDC4                                   STR_34 FCE4  
                                 STR_18 FC81                                   STR_43 FFFC  
                                 STR_51 FFA4                                   STR_19 FF94  
                                 STR_27 FDAE                                   STR_35 FD29  
                                 STR_52 FFA4                                   STR_44 FFF9  
                                 STR_28 FE74                                   STR_36 FC4A  
                       __end_of___awmod 9C08                                   STR_53 FFA4  
                                 STR_45 FFB3                                   STR_29 FE48  
                                 STR_37 FCCD                                   STR_70 FFE3  
                                 STR_46 FFC9                                   STR_38 FCFB  
                                 STR_54 FCB5                                   STR_63 FC49  
                                 STR_47 FF5D                                   STR_39 FD12  
                                 STR_48 FF5D                                   STR_56 FF70  
                                 STR_64 FBD1                                   _ADRPT 003EEC  
                                 STR_73 FFEA                                   STR_65 FFD7  
                                 STR_49 FFBF                                   STR_82 FFED  
                                 STR_66 FFDF                                   STR_75 FFEA  
                                 STR_84 FFED                                   STR_92 FFF6  
                                 STR_77 FFF0                                   STR_69 FFDB  
                                 STR_94 FFF6                                   STR_79 FFF0  
                                 STR_87 FFF3                                   STR_96 FFE7  
                       __end_of___flmul 45F4                                   STR_89 FFF3  
                                 STR_98 FFE7                         __end_of___flsub B9E6  
                       __end_of___fltol 9214                                   u11100 5870  
                                 u11200 5BF4                                   u11120 58E0  
                                 u11040 A488                                   u12000 6260  
                                 u10400 AB40                                   u10401 AB3A  
                                 u11210 5BF8                                   u12010 6262  
                                 u11140 58F2                                   u11300 0194  
                                 u12100 6406                                   u10420 AB88  
                                 u10421 AB82                                   u11230 5C0E  
                                 u11310 0196                                   u12110 640A  
                                 u12030 62C0                                   u11047 A47A  
                                 u11160 5942                                   u12040 62C2  
                                 u13000 229A                                   u11170 5B9A  
                                 u11090 586E                                   u12210 26E4  
                                 u10418 AB42                         __end_of___lodiv 90A2  
                                 u11420 0562                                   u11340 02A6  
                                 u12060 638C                                   u12300 2A60  
                                 u12220 26E6                                   u11181 5BCA  
                                 u11190 5BE0                                   u11350 02A8  
                                 u11270 00DA                                   u12070 63AC  
                                 u12230 270C                                   u10438 AB8A  
                                 u13006 229C                                   u11191 5BDE  
                                 u12400 3058                                   u12160 2562  
                                 u12081 63DC                                   u12065 636E  
                                 u11450 05C6                                   u12090 63F2  
                                 u12330 2CD8                                   u12170 2564  
                                 _U1P1H 003DED                                   u12091 63F0  
                                 u12420 3208                                   u12340 2CDA  
                                 u12180 258A                                   _U1P2H 003DEF  
                                 u10910 99F0                                   u11390 050E  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11720 10B8  
                                 u11560 0A18                                   u12280 28EC  
                                 u12440 ABFA                                   u12520 A542  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10930 9A6C                                   u11490 0648  
                                 _U1P3L 003DF0                                   u11740 116E  
                                 u11660 0EE4                                   u11820 75E2  
                                 u12508 A4DE                                   u11750 1170  
                                 u11830 7628                                   _U2P1L 003DD4  
                                 u11911 6AF8                                   u11920 6B0E  
                                 u12800 84B2                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u11921 6B0C  
                                 u11930 6B22                                   u12810 84B4  
                                 u12538 A544                                   u12490 A4DC  
                                 _U2P3L 003DD8                                   u11860 7704  
                                 u11940 6B26                                   u11837 761A  
                                 u10990 717E                                   _T5CLK 003F9D  
                                 u11880 684A                                   u11960 6124  
                       __end_of___lomod 9768                                   u12860 1588  
                                 _T2HLT 003FAD                                   u11990 620C  
                                 u12880 17DE                                   _T5CON 003F9A  
                                 u12980 2270                                   u12990 2288  
                                 _T6CON 003F94                                   u12986 2272  
                                 u12996 228A                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0085  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result BC24                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR C5AC  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 94DA                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A2E6  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR C412  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                                 _fabsf A870                                   _flags 003E  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay C514  
                                 _fputc 99CC              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha BA2A                                   _fputs AD0A  
                       __end_of_isdigit BE90                         __end_of_ivln2_h FBC9  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand BD00  
                                 _width 003A                                   _putch C3DC  
          __end_of_set_ac_charger_relay C4EA                         __end_of_islower BE30  
                       __end_of_isspace B6C0                _INT1_SetInterruptHandler C0AE  
                       __end_of_set_dac ABC2                         __end_of_isupper BE60  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler C036             _UART1_SetRxInterruptHandler C00E  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9F36  
                       __end_of_tolower B056                         __end_of_strncmp 82B8  
                       __end_of_toupper AFD2               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr C178                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B884                   __end_of_ringBufS_init BF96  
                       __initialization A2E6                       _UART2_rx_vect_isr C1A0  
                          __end_of_cp_h FBD1                            __end_of_cp_l FBCD  
                          __end_of_atoi 7C12                            __end_of_ctoa AF4E  
                          __end_of_main 23E8                            __end_of_dtoa 5CBE  
                          __end_of_nanf B500                            __end_of_spin FBBD  
                          __end_of_stoa 771E                            __end_of_utoa 6B70  
                          __end_of_xtoa 64C4                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C442  
                 __end_of_send_lcd_data C1EC                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B232                _TMR5_SetInterruptHandler C05E  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 007C                       _port_data_dma_ptr C53C  
                    esr_check@esr_state 00A4                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BF44  
                       _PWM8_Initialize C458                        _UART1_Initialize B83C  
                     _UART2_tx_vect_isr C178                      _UART2_Transmit_ISR BF18  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B3D8  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue BA2A  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A296                                  _RB6PPS 003A0E  
                                i1l1207 9442                    _start_switch_handler C306  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B914                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C4F8  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u932_25 C4E4                                  u932_26 C4E6  
                                u951_20 C510                                  u937_20 8ABC  
                                u980_20 979A                                  u980_21 9794  
                  __size_of_hid_display 01DC                                  u958_20 BC64  
                                u958_26 BC66                                  u984_24 987A  
                                u984_25 9876                                  u979_28 9786  
                      __end_of___xxtofl 86CE   __end_of_ADCC_DischargeSampleCapacitor C572  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C56A  
              __end_of_send_lcd_cmd_dma C382                         _TMR3_WriteTimer BB6C  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr C1C8  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C532  
                      _UART2_Initialize B500                                  _WaitMs BCCA  
                       _conv_raw_result 532A                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 9214  
                                ___fleq A63A                       _ADCC_ThresholdISR B308  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush ADA2  
                                _efgtoa 0000                                  _floorf 64C4  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A8  
                     dac_spi_control@S2 00A7                       dac_spi_control@SB 00A5  
                     dac_spi_control@SC 00A6                      ?_ADCC_ThresholdISR 0021  
                                _memset 6E9C                    __size_of_help_button 0038  
                                clear_0 A358                                  clear_1 A36C  
                                clear_2 A37E                                  clear_3 A38A  
                                clear_4 A396                                  clear_5 A3A2  
                                clear_6 A3AE               __end_of_port_data_dma_ptr C546  
                                _printf B43C                      _eaDogM_WriteString ABC2  
                                _strcpy A3C6                               ?_ADCC_ISR 0021  
                                _strlen AC68                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize B29C  
                        _PMD_Initialize C484              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr C1A0                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B43C                            __mediumconst F9E4  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B614  
                      __end_of_spinners A02C                        __end_of_vfprintf A9CA  
                            _StartTimer BAEC                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B8CC  
                     _SYSTEM_Initialize B7AA                              __accesstop 0060  
               __end_of__initialization A3C0                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C58A  
                  __end_of_display_info C582               __end_of_CLKREF_Initialize C53C  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer BB2C                   _set_temp_display_help C4CA  
                      _clear_hid_pflags B914                   __end_of_TMR3_CallBack C258  
             __end_of_ADCC_ThresholdISR B372                      __size_of_calc_bsoc 0A36  
                __end_of_ringBufS_flush AE34                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 BC94                            __pidataBANK1 A56C  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A91E  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 9AF0                           __end_of_fputs ADA2  
                  _get_ac_charger_relay C506                           __end_of_srand BD34  
                 __end_of_TMR5_CallBack C234                           __end_of_putch C3F6  
                  _set_ac_charger_relay C4DA                 __end_of_PWM8_Initialize C46E  
               __end_of_TMR6_Initialize BF6E                       _adc_int_t_handler B056  
                __end_of_PMD_Initialize C498                              __end_of_bp FBC5  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack C2A0  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C554  
                 TMR3_ISR@CountCallBack 009C                          _clear_adc_scan C592  
                    __size_of_hid_input 00D2                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0091               __end_of_SYSTEM_Initialize B7F4  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer BBAC                              __pbssBANK0 0060  
                            __pbssBANK1 01CD                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 82B8                 __end_of_conv_raw_result 583E  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 0097  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone BFBE                        _DMA1_DMADCNT_ISR C548  
                       _convert_dac_raw A02C                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma BDD0  
                 __end_of_wait_lcd_done C2C2        __end_of_TMR3_SetInterruptHandler C0AE  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C05E  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B306  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B0D4  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B14C  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C126   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C0FE                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C2E4                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C598  
                               u1011_28 C1FC                                 u1020_28 C220  
                               u1017_48 C28C                                 u1009_48 C268  
                               u1053_44 B0BA                                 u1053_45 B0B4  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C524  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               u1262_20 3A08                                 _U2ERRIR 003DE1  
                               u1264_20 3AD2                                 u1269_28 C244  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control B14C  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3DCA                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch BEBE                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer BB6C                 __size_of_switch_handler 0136  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one C4CA  
            __end_of_set_load_relay_two C4BA       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 8D9C  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim C412  
                               __Lparam 0000                __end_of_UART1_Initialize B884  
                     __end_of_hid_input A56C                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 771E                                 ___fladd 45F4  
                               ___aomod 7E58                                 ___fldiv 4DB0  
                               ___awdiv 94DA                                 ___flneg B7F4  
                               ___awmod 9AF0                                 ___flmul 3DCA  
                               ___flsub B9A0                                 ___fltol 90A2  
                               ___lodiv 8F22                                 ___lomod 9628  
             __end_of_UART1_Receive_ISR C306                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display A202  
                               __pcinit A2E6                __end_of_mode_lamp_bright C506  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand C4EA                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B560  
                               __ptext2 C306                                 __ptext3 BD00  
                               __ptext4 9F36                                 __ptext5 BD34  
                               __ptext6 BD68                                 __ptext7 A02C  
                               __ptext8 AB1C                                 __ptext9 B14C  
                     __end_of_esr_check 7460                       _UART2_Receive_ISR C326  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize C46E                            __size_of_abs 0046  
                               us660999 8086                            __size_of_pad 0114  
                     __end_of_init_bsoc 7E58                                 us750999 9758  
                               _isalpha B9E6                                 _isdigit BE60  
                               us649999 7988                                 us745999 908C  
                               _ivln2_h FBC5                               _T3CONbits 003FA6  
                               _mode_sw 00A9                       __end_of_lp_filter 8A66  
                               _islower BE00                                 _isspace B66E  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac AB1C                __end_of_UART2_Initialize B560  
                               _isupper BE30              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9E2C                                 _tolower AFD2  
                 __size_of_display_help 0008                                 _utctime 01EB  
               __end_of_convert_dac_raw A118                   __size_of_display_info 0008  
                               _strncmp 8098                                 _toupper AF4E  
                  end_of_initialization A3C0               __size_of_convert_adc_data 00B8  
                    _check_enter_button B1C0                       __end_of_set_dac_a BD9C  
                     __end_of_set_dac_b BD68                               i1u1282_20 9438  
   __end_of_UART2_SetRxInterruptHandler C00E             _UART2_SetRxInterruptHandler BFE6  
                             i2u1060_48 C164                               i2u1062_48 C18C  
                             i2u1064_48 C1B4                               i2u1056_48 BF04  
                             i2u1058_48 B33E                               i2u1058_49 B352  
               check_day_time@day_delay 0041                       __end_of_set_vterm C3A0  
                     __end_of_vfpfcnvrt 3394                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd C5A4               __end_of_UART2_Receive_ISR C346  
                        wdtdelay@dcount 0078                 __end_of_dac_spi_control B1C0  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C5AA                _TMR3_SetInterruptHandler C086  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler C036  
                          _display_help C582                   _TMR5_InterruptHandler 007F  
                          _display_info C57A    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B95A                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler C14E             _ADCC_SetADIInterruptHandler C126  
                            _update_lcd 9D1C                         _calc_model_data 5CBE  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B560                         _DMA1_Initialize B232  
                            _start_bsoc C2C2                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C442                   __end_of_get_vterm_ptr BEBE  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs BD00            __end_of_INTERRUPT_Initialize B3D8  
                            _vterm_dump 989E                          __end_of___flge 9376  
                        __end_of___fleq A6FE    __end_of_INT0_DefaultInterruptHandler C5B8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C5B6  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize B614  
                         __pidataBIGRAM 6B70                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6830             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01E7                          __end_of_memset 7188  
                        __end_of_printf B49E                __end_of_DMA1_DMADCNT_ISR C552  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C27C  
                        __end_of_strcpy A49A                          __end_of_strlen AD0A  
                   start_initialization A2E6    __end_of_TMR5_DefaultInterruptHandler BC94  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler BC5C  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B9A0  
                 __end_of_INT1_CallBack C210               __size_of_set_display_info 001E  
                           __end_of_pad 9D1C                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd BAEC                          _switch_handler 9768  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01D9                   __end_of___fpclassifyf 8D9C  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C532  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C560  
                   __end_of_hid_display 88AA              __end_of_send_port_data_dma B712  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BF96  
                         _ringBufS_init BF6E                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize BDD0  
               __end_of_calc_model_data 610A                           _send_lcd_data C1C8  
                   __end_of_help_button BC5C         __end_of_eaDogM_WriteStringAtPos AB1C  
                   __end_of_BVSOC_TABLE FAB5                               ___asfladd B0D4  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B29C                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler C0FE  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 989E  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C458  
              _UART1_RxInterruptHandler 008B                _UART2_TxInterruptHandler 008E  
                             __end_of_T FB45                        _convert_adc_data A7B8  
                             _calc_bsoc 3394               __size_of_ringBufS_put_dma 00AA  
                          _init_display A118                  __end_of_DMA1_DMAOR_ISR C56A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0082  
                    calc_ror_data@bcror 0068                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B66E                      calc_ror_data@bvror 006C  
                _PIN_MANAGER_Initialize AE34                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C59E                           __pmediumconst F9E4  
                             __ptext100 A870                               __ptext101 532A  
                             __ptext110 88AA                               __ptext102 B49E  
                             __ptext111 B9A0                               __ptext103 C3BE  
                             __ptext120 BF44                               __ptext112 45F4  
                             __ptext104 84CA                               __ptext121 C036  
                             __ptext113 3DCA                               __ptext105 4DB0  
                             __ptext130 AE34                               __ptext122 B884  
                             __ptext114 B7AA                               __ptext106 9214  
                             __ptext131 C46E                               __ptext123 C05E  
                             __ptext115 B500                               __ptext107 5CBE  
                             __ptext140 B29C                               __ptext132 B372  
                             __ptext124 B8CC                               __ptext116 BFBE  
                             __ptext108 C5A4                               __ptext141 C0FE  
                             __ptext133 C58A                               __ptext125 C086  
                             __ptext117 BFE6                               __ptext109 C2C2  
                             __ptext150 BC5C                               __ptext142 C126  
                             __ptext134 BD9C                               __ptext126 C42A  
                             __ptext118 B83C                               __ptext151 8A66  
                             __ptext143 BBAC                               __ptext135 C0AE  
                             __ptext127 C442                               __ptext119 C00E  
                             __ptext160 C53C                               __ptext152 C4DA  
                             __ptext144 C1EC                               __ptext136 C0D6  
                             __ptext128 C458                               __ptext161 B0D4  
                             __ptext153 C506                               __ptext145 C5B2  
                             __ptext137 B614                               __ptext129 C484  
                             __ptext170 B308                               __ptext162 C514  
                             __ptext154 9378                               __ptext146 9768  
                             __ptext138 B232                               __ptext171 C150  
                             __ptext163 C258                               __ptext155 BB6C  
                             __ptext147 A204                               __ptext139 C532  
                             __ptext180 C524                               __ptext172 C2E4  
                             __ptext164 C5B6                               __ptext156 C234  
                             __ptext148 BB2C                               __ptext181 C548  
                             __ptext173 C178                               __ptext165 C5AC  
                             __ptext157 C5B4                               __ptext149 C210  
                             __ptext182 C554                               __ptext174 BF18  
                             __ptext166 BEEC                               __ptext158 3394  
                             __ptext183 C560                               __ptext175 C1A0  
                             __ptext167 B056                               __ptext159 B6C0  
                             __ptext184 0000                               __ptext176 C326  
                             __ptext168 C5B8                               __ptext177 C3F8  
                             __ptext169 C5BA                               __ptext178 C27C  
                             __ptext179 B712                               _hid_input A49A  
                    __end_of_StartTimer BB2C                      _set_load_relay_one C4BA  
                    _set_load_relay_two C4AA                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR BEEC                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 7188  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7C12                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 88AA  
                           _hid_display 86CE                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B372  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR C514  
                              _INT1_ISR BBAC                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                               _set_dac_a BD68  
                             _set_dac_b BD34                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack C234                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm C382                     __size_of_update_lcd 0110  
                           _help_button BC24                                _TMR3_ISR 9378  
                           _BVSOC_TABLE F9E5                                _TMR5_ISR A204  
                              _TMR6_ISR C3F8                               _port_data 04FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 23E8  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack C210                              _ADCON0bits 003EF8  
                    __end_of_check_help 84CA                               _start_lcd C59E  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack C27C                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc C5A4  
                      _set_display_info C3A0                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 A2FA                               copy_data1 A320  
                             copy_data2 A342                _INT0_SetInterruptHandler C0D6  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler BFE6  
           _UART2_SetTxInterruptHandler BFBE                            _uart1RxCount 00AD  
                          _uart2RxCount 00AA                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0514                           _wait_lcd_done C2A0  
                          _send_lcd_cmd BAAC                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler C5BA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch BEEA                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR C55E                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 84CA                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand C4F8                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00A6  
                              __ptext10 BDD0                                __ptext11 A118  
                              __ptext20 A49A                                __ptext12 C1C8  
                              __ptext21 BEBE                                __ptext13 BA6C  
                              __ptext30 C4BA                                __ptext22 7188  
                              __ptext14 BAAC                                __ptext31 C4EA  
                              __ptext23 BBEA                                __ptext15 C346  
                              __ptext40 AA74                                __ptext32 A7B8  
                              __ptext24 B3D8                                __ptext16 BF6E  
                              __ptext41 C364                                __ptext33 B914  
                              __ptext25 C498                                __ptext17 7C12  
                              __ptext50 B43C                                __ptext42 C2A0  
                              __ptext34 82B8                                __ptext26 C56A  
                              __ptext18 A6FE                                __ptext51 A91E  
                              __ptext43 B5BA                                __ptext35 989E  
                              __ptext27 C592                                __ptext19 86CE  
                              __ptext60 8098                                __ptext52 23E8  
                              __ptext44 B760                                __ptext36 9E2C  
                              __ptext28 C572                                __ptext61 7460  
                              __ptext53 610A                                __ptext45 ABC2  
                              __ptext37 BE90                                __ptext29 C4AA  
                              __ptext70 A63A                                __ptext62 0000  
                              __ptext54 AF4E                                __ptext46 C598  
                              __ptext38 BCCA                                __ptext71 9AF0  
                              __ptext63 AFD2                                __ptext55 BE00  
                              __ptext47 C59E                                __ptext39 9D1C  
                              __ptext80 AD0A                                __ptext72 94DA  
                              __ptext64 BE30                                __ptext56 B9E6  
                              __ptext48 ADA2                                __ptext81 99CC  
                              __ptext73 583E                                __ptext65 A3C6  
                              __ptext57 6830                                __ptext49 6E9C  
                              __ptext90 C412                                __ptext82 C3DC  
                              __ptext74 B95A                                __ptext66 64C4  
                              __ptext58 9628                                __ptext91 C4F8  
                              __ptext83 A9CA                                __ptext75 7E58  
                              __ptext67 8C06                                __ptext59 8F22  
                              __ptext92 BA2A                                __ptext84 799E  
                              __ptext76 771E                                __ptext68 90A2  
                              __ptext93 BC24                                __ptext85 B66E  
                              __ptext77 AEC6                                __ptext69 B7F4  
                              __ptext94 BF96                                __ptext86 BE60  
                              __ptext78 9C08                                __ptext95 BAEC  
                              __ptext87 C382                                __ptext79 AC68  
                              __ptext96 C57A                                __ptext88 C4CA  
                              __ptext97 C582                                __ptext89 C3A0  
                              __ptext98 B1C0                                __ptext99 8D9C  
                      __size_of_isupper 0030                                us1108999 5858  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1177999 7472                                us1189999 6896  
                              us1198999 618A                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A9CA  
                  __end_of_Volts_to_SOC A7B8                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 11A4  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma BE00  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion C4AA  
                              _spi_link 01CD                                _wdtdelay B5BA  
            __end_of_UART2_Transmit_ISR BF44                                _spinners 9F36  
                              _vfprintf A91E                __end_of_convert_adc_data A870  
            __end_of_PWM8_LoadDutyValue BA6C    __end_of_TMR3_DefaultInterruptHandler C5B6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler C5B4  
  __end_of_INT1_DefaultInterruptHandler C5B4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler C5B2                      _send_port_data_dma B6C0  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C3BE  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E1                             _uart2TxTail 0046  
                          _wait_lcd_set C598                      _EXT_INT_Initialize BD9C  
  __end_of_TMR6_DefaultInterruptHandler B760   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler B712                       _send_lcd_data_dma B760  
  __end_of_ADCC_DefaultInterruptHandler C5BA   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler C5B8                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long BA6C  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help C4DA  
                 __end_of_calc_ror_data 8F22                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString AC68                   __end_of_mode_lamp_dim C42A  
               __end_of_adc_int_handler C5BC                __size_of_convert_dac_raw 00EC  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9E2C                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc B5BA                      __end_of_start_bsoc C2E4  
                        _FVR_Initialize C58A                  __end_of_get_raw_result C3DC  
                      _send_lcd_cmd_dma C364                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00A0        __end_of_INT1_SetInterruptHandler C0D6  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 0074  
             __end_of_send_lcd_data_dma B7AA                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long BAAC                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR C5B2          __end_of_PIN_MANAGER_Initialize AEC6  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 99CC  
               _eaDogM_WriteStringAtPos AA74                           _get_vterm_ptr BE90  
                        _check_adc_scan C572               __size_of_UART2_Initialize 0060  
