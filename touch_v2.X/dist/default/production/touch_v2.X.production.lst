

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 26 02:02:48 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=4,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=4,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=4,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=4,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=4,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=4,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   172                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   173                           	psect	text146,global,reloc=4,class=CODE,delta=1
   174                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   175                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   176  0000                     
   177                           ; Version 2.10
   178                           ; Generated 31/07/2019 GMT
   179                           ; 
   180                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   181                           ; All rights reserved.
   182                           ; 
   183                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   184                           ; 
   185                           ; Redistribution and use in source and binary forms, with or without modification, are
   186                           ; permitted provided that the following conditions are met:
   187                           ; 
   188                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   189                           ;        conditions and the following disclaimer.
   190                           ; 
   191                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   192                           ;        of conditions and the following disclaimer in the documentation and/or other
   193                           ;        materials provided with the distribution.
   194                           ; 
   195                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   196                           ;        software without specific prior written permission.
   197                           ; 
   198                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   199                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   200                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   201                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   202                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   203                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   204                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   205                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   206                           ; 
   207                           ; 
   208                           ; Code-generator required, PIC18F57K42 Definitions
   209                           ; 
   210                           ; SFR Addresses
   211  0000                     
   212 ;;_inp_index	offset	0
   213 ;;_k	offset	1
   214 ;;_j	offset	2
   215 ;;_i	offset	3
   216 ;;_mode	offset	4
   217 ;;_channel	offset=-1 (param)
   218 ;;_s	offset=-2 (param)
   219 ;;_cmd	offset=-1 (param)
   220 ;;_cmd	offset=-1 (param)
   221 ;;_data	offset=-1 (param)
   222 ;;__this	offset=-2 (param)
   223 ;;_i	offset=-1 (param)
   224 ;;_cmd	offset=-1 (param)
   225 ;;_i	offset	0
   226 ;;_lp_speed	offset	0
   227 ;;_new	offset=-4 (param)
   228 ;;_bn	offset=-5 (param)
   229 ;;_slow	offset=-6 (param)
   230 ;;_chan	offset=-1 (param)
   231 ;;_to_what	offset=-2 (param)
   232 ;;_u	offset	0
   233 ;;_s	offset=-2 (param)
   234 ;;_index	offset=-1 (param)
   235 ;;_arg	offset	0
   236 ;;_exp	offset	4
   237 ;;_sign	offset=-1 (param)
   238 ;;_val	offset=-5 (param)
   239 ;;_estatus	offset	0
   240 ;;_flipper	offset=-1 (param)
   241 ;;_f	offset	0
   242 ;;_ap	offset	6
   243 ;;_s	offset=-3 (param)
   244 ;;_fmt	offset=-5 (param)
   245 ;;_line	offset=-1 (param)
   246 ;;_vterm	offset=-2 (param)
   247 ;;_numMilliseconds	offset=-2 (param)
   248 ;;_vterm	offset=-1 (param)
   249 ;;_r	offset=-1 (param)
   250 ;;_c	offset=-2 (param)
   251 ;;_strPtr	offset=-4 (param)
   252 ;;_strPtr	offset=-1 (param)
   253 ;;_delay	offset=-4 (param)
   254 ;;_strPtr	offset=-2 (param)
   255 ;;__this	offset=-2 (param)
   256 ;;_clearBuffer	offset=-3 (param)
   257 ;;_s	offset	0
   258 ;;_k	offset	2
   259 ;;_dest	offset=-2 (param)
   260 ;;_c	offset=-4 (param)
   261 ;;_n	offset=-6 (param)
   262 ;;_ap	offset	0
   263 ;;_fmt	offset=-3 (param)
   264 ;;_cfmt	offset	0
   265 ;;_fp	offset=-2 (param)
   266 ;;_fmt	offset=-4 (param)
   267 ;;_ap	offset=-6 (param)
   268 ;;_vfpfcnvrt$4426	offset	0
   269 ;;_vfpfcnvrt$4432	offset	2
   270 ;;_vfpfcnvrt$4425	offset	4
   271 ;;_llu	offset	6
   272 ;;_ll	offset	14
   273 ;;_f	offset	22
   274 ;;_ct	offset	26
   275 ;;_cp	offset	29
   276 ;;_c	offset	31
   277 ;;_fp	offset=-2 (param)
   278 ;;_fmt	offset=-4 (param)
   279 ;;_ap	offset=-6 (param)
   280 ;;_xtoa$4411	offset	0
   281 ;;_xtoa$4410	offset	2
   282 ;;_n	offset	4
   283 ;;_c	offset	12
   284 ;;_i	offset	14
   285 ;;_w	offset	16
   286 ;;_p	offset	18
   287 ;;_fp	offset=-2 (param)
   288 ;;_d	offset=-10 (param)
   289 ;;_x	offset=-11 (param)
   290 ;;_toupper$5071	offset	0
   291 ;;_c	offset=-2 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_c	offset=-2 (param)
   294 ;;_r	offset	0
   295 ;;_l	offset	2
   296 ;;__l	offset=-2 (param)
   297 ;;__r	offset=-4 (param)
   298 ;;_n	offset=-6 (param)
   299 ;;_nuls	offset	0
   300 ;;_l	offset	7
   301 ;;_p	offset	9
   302 ;;_cp	offset	11
   303 ;;_w	offset	13
   304 ;;_i	offset	15
   305 ;;_fp	offset=-2 (param)
   306 ;;_s	offset=-4 (param)
   307 ;;_efgtoa$4390	offset	0
   308 ;;_efgtoa$4389	offset	2
   309 ;;_efgtoa$4388	offset	4
   310 ;;_efgtoa$4384	offset	6
   311 ;;_efgtoa$4380	offset	8
   312 ;;_efgtoa$4379	offset	10
   313 ;;_u	offset	12
   314 ;;_g	offset	16
   315 ;;_l	offset	20
   316 ;;_h	offset	24
   317 ;;_ou	offset	28
   318 ;;_n	offset	32
   319 ;;_e	offset	34
   320 ;;_i	offset	36
   321 ;;_w	offset	38
   322 ;;_p	offset	40
   323 ;;_sign	offset	42
   324 ;;_d	offset	44
   325 ;;_ne	offset	46
   326 ;;_m	offset	48
   327 ;;_pp	offset	50
   328 ;;_t	offset	52
   329 ;;_mode	offset	54
   330 ;;_nmode	offset	55
   331 ;;_fp	offset=-2 (param)
   332 ;;_f	offset=-6 (param)
   333 ;;_c	offset=-7 (param)
   334 ;;_tolower$5056	offset	0
   335 ;;_c	offset=-2 (param)
   336 ;;_c	offset=-2 (param)
   337 ;;_d	offset	0
   338 ;;_s	offset	2
   339 ;;_dest	offset=-2 (param)
   340 ;;_src	offset=-4 (param)
   341 ;;_u	offset	0
   342 ;;_m	offset	4
   343 ;;_e	offset	8
   344 ;;_x	offset=-4 (param)
   345 ;;_u	offset	0
   346 ;;_e	offset	4
   347 ;;_x	offset=-4 (param)
   348 ;;_exp1	offset	0
   349 ;;_sign1	offset	1
   350 ;;_f1	offset=-4 (param)
   351 ;;_b	offset=-4 (param)
   352 ;;_a	offset=-8 (param)
   353 ;;_grs	offset	0
   354 ;;_bexp	offset	1
   355 ;;_aexp	offset	2
   356 ;;_signs	offset	3
   357 ;;_b	offset=-4 (param)
   358 ;;_a	offset=-8 (param)
   359 ;;_f1	offset=-4 (param)
   360 ;;_prod	offset	0
   361 ;;_grs	offset	4
   362 ;;_temp	offset	8
   363 ;;_bexp	offset	10
   364 ;;_aexp	offset	11
   365 ;;_sign	offset	12
   366 ;;_b	offset=-4 (param)
   367 ;;_a	offset=-8 (param)
   368 ;;_ff1	offset=-4 (param)
   369 ;;_ff2	offset=-8 (param)
   370 ;;_ff1	offset=-4 (param)
   371 ;;_ff2	offset=-8 (param)
   372 ;;_grs	offset	0
   373 ;;_rem	offset	4
   374 ;;_new_exp	offset	8
   375 ;;_aexp	offset	10
   376 ;;_bexp	offset	11
   377 ;;_sign	offset	12
   378 ;;_b	offset=-4 (param)
   379 ;;_a	offset=-8 (param)
   380 ;;_sign	offset	0
   381 ;;_counter	offset	1
   382 ;;_dividend	offset=-2 (param)
   383 ;;_divisor	offset=-4 (param)
   384 ;;_quotient	offset	0
   385 ;;_sign	offset	2
   386 ;;_counter	offset	3
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_dtoa$4356	offset	0
   390 ;;_n	offset	2
   391 ;;_i	offset	10
   392 ;;_s	offset	12
   393 ;;_w	offset	14
   394 ;;_p	offset	16
   395 ;;_fp	offset=-2 (param)
   396 ;;_d	offset=-10 (param)
   397 ;;_a	offset=-2 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-8 (param)
   401 ;;_divisor	offset=-16 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	8
   404 ;;_counter	offset	9
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_w	offset	0
   408 ;;_fp	offset=-2 (param)
   409 ;;_c	offset=-3 (param)
   410 ;;_w	offset	0
   411 ;;_i	offset	2
   412 ;;_fp	offset=-2 (param)
   413 ;;_buf	offset=-4 (param)
   414 ;;_p	offset=-6 (param)
   415 ;;_a	offset	0
   416 ;;_s	offset=-2 (param)
   417 ;;_i	offset	0
   418 ;;_c	offset	2
   419 ;;_s	offset=-2 (param)
   420 ;;_fp	offset=-4 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_fp	offset=-4 (param)
   423 ;;_c	offset=-1 (param)
   424 ;;__this	offset=-2 (param)
   425 ;;_c	offset=-3 (param)
   426 ;;_atoi$4909	offset	0
   427 ;;_atoi$4907	offset	2
   428 ;;_atoi$4908	offset	4
   429 ;;_n	offset	5
   430 ;;_neg	offset	7
   431 ;;_s	offset=-2 (param)
   432 ;;_isspace$4947	offset	0
   433 ;;_c	offset=-2 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_vterm	offset=-1 (param)
   436 ;;_new_response_info	offset=-1 (param)
   437 ;;_new_response_info	offset=-1 (param)
   438 ;;_level	offset=-2 (param)
   439 ;;_dutyValue	offset=-2 (param)
   440 ;;_timer	offset=-1 (param)
   441 ;;_timer	offset=-1 (param)
   442 ;;_count	offset=-3 (param)
   443 ;;_InterruptHandler	offset=-3 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_InterruptHandler	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_state	offset	0
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_i	offset	0
   455 ;;_sw_value	offset	1
   456 ;;_timerVal	offset=-2 (param)
   457 ;;_channel	offset=-1 (param)
   458 ;;_i	offset	0
   459                           
   460                           	psect	idataBANK0
   461  017ECE                     __pidataBANK0:
   462                           	opt callstack 0
   463                           
   464                           ;initializer for _R
   465  017ECE  0000               	dw	0
   466  017ED0  0000               	dw	0
   467  017ED2  0000               	dw	0
   468  017ED4  0000               	dw	0
   469  017ED6  0000               	dw	0
   470  017ED8  0000               	dw	0
   471  017EDA  0000               	dw	0
   472  017EDC  0000               	dw	0
   473  017EDE  0000               	dw	0
   474  017EE0  0000               	dw	0
   475  017EE2  0000               	dw	0
   476  017EE4  0000               	dw	0
   477  017EE6  0000               	dw	0
   478  017EE8  0000               	dw	0
   479  017EEA  0000               	dw	0
   480  017EEC  0000               	dw	0
   481  017EEE  0F6C               	dw	3948
   482  017EF0  0F99               	dw	3993
   483  017EF2  00                 	db	0
   484  017EF3  0000               	dw	0
   485  017EF5  00                 	db	0
   486                           
   487                           ;initializer for stoa@F1166
   488  017EF6  28                 	db	40
   489  017EF7  6E                 	db	110
   490  017EF8  75                 	db	117
   491  017EF9  6C                 	db	108
   492  017EFA  6C                 	db	108
   493  017EFB  29                 	db	41
   494  017EFC  00                 	db	0
   495                           
   496                           	psect	idataBANK1
   497  016D72                     __pidataBANK1:
   498                           	opt callstack 0
   499                           
   500                           ;initializer for _V
   501  016D72  00                 	db	0
   502  016D73  00                 	db	0
   503  016D74  00                 	db	0
   504  016D75  00                 	db	0
   505  016D76  00                 	db	0
   506  016D77  00                 	db	0
   507  016D78  00                 	db	0
   508  016D79  00                 	db	0
   509  016D7A  00                 	db	0
   510  016D7B  00                 	db	0
   511  016D7C  00                 	db	0
   512  016D7D  00                 	db	0
   513  016D7E  00                 	db	0
   514  016D7F  00                 	db	0
   515  016D80  00                 	db	0
   516  016D81  00                 	db	0
   517  016D82  00                 	db	0
   518  016D83  00                 	db	0
   519  016D84  00                 	db	0
   520  016D85  00                 	db	0
   521  016D86  00                 	db	0
   522  016D87  00                 	db	0
   523  016D88  00                 	db	0
   524  016D89  00                 	db	0
   525  016D8A  00                 	db	0
   526  016D8B  00                 	db	0
   527  016D8C  00                 	db	0
   528  016D8D  00                 	db	0
   529  016D8E  00                 	db	0
   530  016D8F  00                 	db	0
   531  016D90  00                 	db	0
   532  016D91  00                 	db	0
   533  016D92  00                 	db	0
   534  016D93  00                 	db	0
   535  016D94  00                 	db	0
   536  016D95  00                 	db	0
   537  016D96  00                 	db	0
   538  016D97  00                 	db	0
   539  016D98  00                 	db	0
   540  016D99  00                 	db	0
   541  016D9A  00                 	db	0
   542  016D9B  00                 	db	0
   543  016D9C  00                 	db	0
   544  016D9D  00                 	db	0
   545  016D9E  00                 	db	0
   546  016D9F  00                 	db	0
   547  016DA0  00                 	db	0
   548  016DA1  00                 	db	0
   549  016DA2  00                 	db	0
   550  016DA3  00                 	db	0
   551  016DA4  00                 	db	0
   552  016DA5  00                 	db	0
   553  016DA6  00                 	db	0
   554  016DA7  00                 	db	0
   555  016DA8  00                 	db	0
   556  016DA9  00                 	db	0
   557  016DAA  00                 	db	0
   558  016DAB  00                 	db	0
   559  016DAC  00                 	db	0
   560  016DAD  00                 	db	0
   561  016DAE  00                 	db	0
   562  016DAF  00                 	db	0
   563  016DB0  00                 	db	0
   564  016DB1  00                 	db	0
   565  016DB2  00                 	db	0
   566  016DB3  00                 	db	0
   567  016DB4  00                 	db	0
   568  016DB5  00                 	db	0
   569  016DB6  00                 	db	0
   570  016DB7  00                 	db	0
   571  016DB8  00                 	db	0
   572  016DB9  00                 	db	0
   573  016DBA  00                 	db	0
   574  016DBB  00                 	db	0
   575  016DBC  00                 	db	0
   576  016DBD  00                 	db	0
   577  016DBE  00                 	db	0
   578  016DBF  00                 	db	0
   579  016DC0  00                 	db	0
   580  016DC1  00                 	db	0
   581  016DC2  00                 	db	0
   582  016DC3  00                 	db	0
   583  016DC4  00                 	db	0
   584  016DC5  00                 	db	0
   585  016DC6  00                 	db	0
   586  016DC7  00                 	db	0
   587  016DC8  00                 	db	0
   588  016DC9  00                 	db	0
   589  016DCA  00                 	db	0
   590  016DCB  00                 	db	0
   591  016DCC  00                 	db	0
   592  016DCD  00                 	db	0
   593  016DCE  00                 	db	0
   594  016DCF  00                 	db	0
   595  016DD0  00                 	db	0
   596  016DD1  00                 	db	0
   597  016DD2  00                 	db	0
   598  016DD3  00                 	db	0
   599  016DD4  00                 	db	0
   600  016DD5  00                 	db	0
   601  016DD6  00                 	db	0
   602  016DD7  00                 	db	0
   603  016DD8  00                 	db	0
   604  016DD9  00                 	db	0
   605  016DDA  00                 	db	0
   606  016DDB  00                 	db	0
   607  016DDC  00                 	db	0
   608  016DDD  00                 	db	0
   609  016DDE  00                 	db	0
   610  016DDF  00                 	db	0
   611  016DE0  00                 	db	0
   612  016DE1  00                 	db	0
   613  016DE2  00                 	db	0
   614  016DE3  00                 	db	0
   615  016DE4  00                 	db	0
   616  016DE5  00                 	db	0
   617  016DE6  00                 	db	0
   618  016DE7  00                 	db	0
   619  016DE8  00                 	db	0
   620  016DE9  00                 	db	0
   621  016DEA  00                 	db	0
   622  016DEB  00                 	db	0
   623  016DEC  00                 	db	0
   624  016DED  00                 	db	0
   625  016DEE  00                 	db	0
   626  016DEF  00                 	db	0
   627  016DF0  00                 	db	0
   628  016DF1  00                 	db	0
   629  016DF2  00                 	db	0
   630  016DF3  0000               	dw	0
   631  016DF5  0000               	dw	0
   632  016DF7  0000               	dw	0
   633  016DF9  0000               	dw	0
   634  016DFB  00                 	db	0
   635  016DFC  00                 	db	0
   636  016DFD  00                 	db	0
   637  016DFE  00                 	db	0
   638  016DFF  00                 	db	0
   639  016E00  00                 	db	0
   640  016E01  0000               	dw	0
   641  016E03  0000               	dw	0
   642  016E05  0000               	dw	0
   643  016E07  0000               	dw	0
   644  016E09  0000               	dw	0
   645  016E0B  0000               	dw	0
   646  016E0D  00                 	db	0
   647  016E0E  00                 	db	0
   648  016E0F  00                 	db	0
   649  016E10  00                 	db	0
   650  016E11  00                 	db	0
   651  016E12  00                 	db	0
   652  016E13  00                 	db	0
   653  016E14  00                 	db	0
   654  016E15  00                 	db	0
   655  016E16  00                 	db	0
   656  016E17  0000               	dw	0
   657  016E19  0000               	dw	0
   658  016E1B  2D                 	db	45
   659  016E1C  00                 	db	0
   660  016E1D  0000               	dw	0
   661  016E1F  0000               	dw	0
   662  016E21  0000               	dw	0
   663  016E23  0000               	dw	0
   664  016E25  0000               	dw	0
   665  016E27  0000               	dw	0
   666  016E29  0000               	dw	0
   667  016E2B  0000               	dw	0
   668                           
   669                           	psect	idataBANK2
   670  01853E                     __pidataBANK2:
   671                           	opt callstack 0
   672                           
   673                           ;initializer for _port_data
   674  01853E  FF                 	db	255
   675  01853F  00                 	db	0
   676  018540  FF                 	db	255
   677  018541  00                 	db	0
   678  018542  FF                 	db	255
   679  018543  00                 	db	0
   680  018544  FF                 	db	255
   681  018545  00                 	db	0
   682  018546  FF                 	db	255
   683  018547  00                 	db	0
   684  018548  FF                 	db	255
   685  018549  00                 	db	0
   686  01854A  FF                 	db	255
   687  01854B  00                 	db	0
   688  01854C  FF                 	db	255
   689  01854D  00                 	db	0
   690                           
   691                           	psect	mediumconst
   692  00FE5E                     __pmediumconst:
   693                           	opt callstack 0
   694  00FE5E  00                 	db	0
   695  00FE5F                     _T:
   696                           	opt callstack 0
   697  00FE5F  63                 	db	99
   698  00FE60  6F                 	db	111
   699  00FE61  6D                 	db	109
   700  00FE62  6D                 	db	109
   701  00FE63  61                 	db	97
   702  00FE64  6E                 	db	110
   703  00FE65  64                 	db	100
   704  00FE66  73                 	db	115
   705  00FE67  20                 	db	32
   706  00FE68  31                 	db	49
   707  00FE69  00                 	db	0
   708  00FE6A  00                 	db	0
   709  00FE6B  00                 	db	0
   710  00FE6C  00                 	db	0
   711  00FE6D  00                 	db	0
   712  00FE6E  00                 	db	0
   713  00FE6F  00                 	db	0
   714  00FE70  00                 	db	0
   715  00FE71  64                 	db	100
   716  00FE72  69                 	db	105
   717  00FE73  73                 	db	115
   718  00FE74  70                 	db	112
   719  00FE75  6C                 	db	108
   720  00FE76  61                 	db	97
   721  00FE77  79                 	db	121
   722  00FE78  73                 	db	115
   723  00FE79  20                 	db	32
   724  00FE7A  31                 	db	49
   725  00FE7B  00                 	db	0
   726  00FE7C  00                 	db	0
   727  00FE7D  00                 	db	0
   728  00FE7E  00                 	db	0
   729  00FE7F  00                 	db	0
   730  00FE80  00                 	db	0
   731  00FE81  00                 	db	0
   732  00FE82  00                 	db	0
   733  00FE83  63                 	db	99
   734  00FE84  6F                 	db	111
   735  00FE85  6D                 	db	109
   736  00FE86  6D                 	db	109
   737  00FE87  61                 	db	97
   738  00FE88  6E                 	db	110
   739  00FE89  64                 	db	100
   740  00FE8A  73                 	db	115
   741  00FE8B  20                 	db	32
   742  00FE8C  32                 	db	50
   743  00FE8D  00                 	db	0
   744  00FE8E  00                 	db	0
   745  00FE8F  00                 	db	0
   746  00FE90  00                 	db	0
   747  00FE91  00                 	db	0
   748  00FE92  00                 	db	0
   749  00FE93  00                 	db	0
   750  00FE94  00                 	db	0
   751  00FE95  64                 	db	100
   752  00FE96  69                 	db	105
   753  00FE97  73                 	db	115
   754  00FE98  70                 	db	112
   755  00FE99  6C                 	db	108
   756  00FE9A  61                 	db	97
   757  00FE9B  79                 	db	121
   758  00FE9C  73                 	db	115
   759  00FE9D  20                 	db	32
   760  00FE9E  32                 	db	50
   761  00FE9F  00                 	db	0
   762  00FEA0  00                 	db	0
   763  00FEA1  00                 	db	0
   764  00FEA2  00                 	db	0
   765  00FEA3  00                 	db	0
   766  00FEA4  00                 	db	0
   767  00FEA5  00                 	db	0
   768  00FEA6  00                 	db	0
   769  00FEA7  63                 	db	99
   770  00FEA8  6F                 	db	111
   771  00FEA9  6D                 	db	109
   772  00FEAA  6D                 	db	109
   773  00FEAB  61                 	db	97
   774  00FEAC  6E                 	db	110
   775  00FEAD  64                 	db	100
   776  00FEAE  73                 	db	115
   777  00FEAF  20                 	db	32
   778  00FEB0  33                 	db	51
   779  00FEB1  00                 	db	0
   780  00FEB2  00                 	db	0
   781  00FEB3  00                 	db	0
   782  00FEB4  00                 	db	0
   783  00FEB5  00                 	db	0
   784  00FEB6  00                 	db	0
   785  00FEB7  00                 	db	0
   786  00FEB8  00                 	db	0
   787  00FEB9  64                 	db	100
   788  00FEBA  69                 	db	105
   789  00FEBB  73                 	db	115
   790  00FEBC  70                 	db	112
   791  00FEBD  6C                 	db	108
   792  00FEBE  61                 	db	97
   793  00FEBF  79                 	db	121
   794  00FEC0  73                 	db	115
   795  00FEC1  20                 	db	32
   796  00FEC2  33                 	db	51
   797  00FEC3  00                 	db	0
   798  00FEC4  00                 	db	0
   799  00FEC5  00                 	db	0
   800  00FEC6  00                 	db	0
   801  00FEC7  00                 	db	0
   802  00FEC8  00                 	db	0
   803  00FEC9  00                 	db	0
   804  00FECA  00                 	db	0
   805  00FECB  63                 	db	99
   806  00FECC  6F                 	db	111
   807  00FECD  6D                 	db	109
   808  00FECE  6D                 	db	109
   809  00FECF  61                 	db	97
   810  00FED0  6E                 	db	110
   811  00FED1  64                 	db	100
   812  00FED2  73                 	db	115
   813  00FED3  20                 	db	32
   814  00FED4  34                 	db	52
   815  00FED5  00                 	db	0
   816  00FED6  00                 	db	0
   817  00FED7  00                 	db	0
   818  00FED8  00                 	db	0
   819  00FED9  00                 	db	0
   820  00FEDA  00                 	db	0
   821  00FEDB  00                 	db	0
   822  00FEDC  00                 	db	0
   823  00FEDD  64                 	db	100
   824  00FEDE  69                 	db	105
   825  00FEDF  73                 	db	115
   826  00FEE0  70                 	db	112
   827  00FEE1  6C                 	db	108
   828  00FEE2  61                 	db	97
   829  00FEE3  79                 	db	121
   830  00FEE4  73                 	db	115
   831  00FEE5  20                 	db	32
   832  00FEE6  34                 	db	52
   833  00FEE7  00                 	db	0
   834  00FEE8  00                 	db	0
   835  00FEE9  00                 	db	0
   836  00FEEA  00                 	db	0
   837  00FEEB  00                 	db	0
   838  00FEEC  00                 	db	0
   839  00FEED  00                 	db	0
   840  00FEEE  00                 	db	0
   841  00FEEF                     __end_of_T:
   842                           	opt callstack 0
   843  0000                     _IVTADL	set	14493
   844  0000                     _IVTADH	set	14494
   845  0000                     _IVTADU	set	14495
   846  0000                     _PIR4bits	set	14756
   847  0000                     _PIE8bits	set	14744
   848  0000                     _PIR8bits	set	14760
   849  0000                     _SCANPR	set	14839
   850  0000                     _DMA2PR	set	14836
   851  0000                     _DMA1PR	set	14835
   852  0000                     _MAINPR	set	14834
   853  0000                     _ISRPR	set	14833
   854  0000                     _PIE2bits	set	14738
   855  0000                     _PIR2bits	set	14754
   856  0000                     _PIE9bits	set	14745
   857  0000                     _PIR9bits	set	14761
   858  0000                     _PIE6bits	set	14742
   859  0000                     _PIE3bits	set	14739
   860  0000                     _PMD7	set	14791
   861  0000                     _PMD6	set	14790
   862  0000                     _PMD5	set	14789
   863  0000                     _PMD4	set	14788
   864  0000                     _PMD3	set	14787
   865  0000                     _PMD2	set	14786
   866  0000                     _PMD1	set	14785
   867  0000                     _PMD0	set	14784
   868  0000                     _OSCTUNE	set	14814
   869  0000                     _OSCFRQ	set	14815
   870  0000                     _OSCEN	set	14813
   871  0000                     _OSCCON3	set	14811
   872  0000                     _OSCCON1	set	14809
   873  0000                     _IPR8bits	set	14728
   874  0000                     _IPR9bits	set	14729
   875  0000                     _IPR5bits	set	14725
   876  0000                     _IPR1bits	set	14721
   877  0000                     _IPR3bits	set	14723
   878  0000                     _IPR6bits	set	14726
   879  0000                     _IPR2bits	set	14722
   880  0000                     _PIE5bits	set	14741
   881  0000                     _PIE1bits	set	14737
   882  0000                     _PIR5bits	set	14757
   883  0000                     _PIR1bits	set	14753
   884  0000                     _PLLR	set	118496
   885  0000                     _SPI1SDIPPS	set	15071
   886  0000                     _U1RXPPS	set	15077
   887  0000                     _RC6PPS	set	14870
   888  0000                     _RC5PPS	set	14869
   889  0000                     _INT1PPS	set	15041
   890  0000                     _RD1PPS	set	14873
   891  0000                     _INT0PPS	set	15040
   892  0000                     _RC3PPS	set	14867
   893  0000                     _RB6PPS	set	14862
   894  0000                     _SPI1SCKPPS	set	15070
   895  0000                     _U2RXPPS	set	15080
   896  0000                     _SLRCONF	set	14995
   897  0000                     _SLRCONE	set	14979
   898  0000                     _SLRCOND	set	14963
   899  0000                     _SLRCONC	set	14947
   900  0000                     _SLRCONB	set	14931
   901  0000                     _SLRCONA	set	14915
   902  0000                     _ODCOND	set	14962
   903  0000                     _ODCONC	set	14946
   904  0000                     _ODCONB	set	14930
   905  0000                     _ODCONA	set	14914
   906  0000                     _ODCONF	set	14994
   907  0000                     _ODCONE	set	14978
   908  0000                     _WPUC	set	14945
   909  0000                     _WPUA	set	14913
   910  0000                     _WPUB	set	14929
   911  0000                     _WPUE	set	14977
   912  0000                     _WPUF	set	14993
   913  0000                     _WPUD	set	14961
   914  0000                     _ANSELA	set	14912
   915  0000                     _ANSELF	set	14992
   916  0000                     _ANSELE	set	14976
   917  0000                     _ANSELB	set	14928
   918  0000                     _ANSELC	set	14944
   919  0000                     _ANSELD	set	14960
   920  0000                     _DMA2SSA	set	15321
   921  0000                     _DMA1SSA	set	15353
   922  0000                     _DMA2DSZ	set	15310
   923  0000                     _DMA2SSZ	set	15319
   924  0000                     _DMA2DSA	set	15312
   925  0000                     _DMA1DSZ	set	15342
   926  0000                     _DMA1SSZ	set	15351
   927  0000                     _DMA1DSA	set	15344
   928  0000                     _DMA1CON0bits	set	15356
   929  0000                     _DMA1CON1bits	set	15357
   930  0000                     _DMA2CON0	set	15324
   931  0000                     _DMA2AIRQ	set	15326
   932  0000                     _DMA2SIRQ	set	15327
   933  0000                     _DMA2CON1	set	15325
   934  0000                     _DMA1CON0	set	15356
   935  0000                     _DMA1AIRQ	set	15358
   936  0000                     _DMA1SIRQ	set	15359
   937  0000                     _DMA1CON1	set	15357
   938  0000                     _CLKRCON	set	15589
   939  0000                     _CLKRCLK	set	15590
   940  0000                     _SPI1INTFbits	set	15642
   941  0000                     _SPI1RXB	set	15632
   942  0000                     _SPI1TXB	set	15633
   943  0000                     _SPI1TCNTL	set	15634
   944  0000                     _SPI1CON0	set	15636
   945  0000                     _SPI1CLK	set	15644
   946  0000                     _SPI1BAUD	set	15641
   947  0000                     _SPI1CON2	set	15638
   948  0000                     _SPI1CON1	set	15637
   949  0000                     _U2RXB	set	15824
   950  0000                     _U2TXB	set	15826
   951  0000                     _U2ERRIE	set	15842
   952  0000                     _U2ERRIR	set	15841
   953  0000                     _U2UIR	set	15840
   954  0000                     _U2FIFO	set	15839
   955  0000                     _U2BRGH	set	15838
   956  0000                     _U2BRGL	set	15837
   957  0000                     _U2CON2	set	15836
   958  0000                     _U2CON1	set	15835
   959  0000                     _U2CON0	set	15834
   960  0000                     _U2P3L	set	15832
   961  0000                     _U2P2L	set	15830
   962  0000                     _U2P1L	set	15828
   963  0000                     _U1RXB	set	15848
   964  0000                     _U1TXB	set	15850
   965  0000                     _U1ERRIE	set	15866
   966  0000                     _U1ERRIR	set	15865
   967  0000                     _U1UIR	set	15864
   968  0000                     _U1FIFO	set	15863
   969  0000                     _U1BRGH	set	15862
   970  0000                     _U1BRGL	set	15861
   971  0000                     _U1CON2	set	15860
   972  0000                     _U1CON1	set	15859
   973  0000                     _U1CON0	set	15858
   974  0000                     _U1P3H	set	15857
   975  0000                     _U1P3L	set	15856
   976  0000                     _U1P2H	set	15855
   977  0000                     _U1P2L	set	15854
   978  0000                     _U1P1H	set	15853
   979  0000                     _U1P1L	set	15852
   980  0000                     _FVRCON	set	16065
   981  0000                     _ADFLTRL	set	16102
   982  0000                     _ADFLTRH	set	16103
   983  0000                     _ADCON0bits	set	16120
   984  0000                     _ADCON0	set	16120
   985  0000                     _ADCLK	set	16127
   986  0000                     _ADACT	set	16126
   987  0000                     _ADREF	set	16125
   988  0000                     _ADSTAT	set	16124
   989  0000                     _ADCON3	set	16123
   990  0000                     _ADCON2	set	16122
   991  0000                     _ADCON1	set	16121
   992  0000                     _ADPREH	set	16119
   993  0000                     _ADPREL	set	16118
   994  0000                     _ADCAP	set	16117
   995  0000                     _ADACQH	set	16116
   996  0000                     _ADACQL	set	16115
   997  0000                     _ADPCH	set	16113
   998  0000                     _ADRPT	set	16108
   999  0000                     _ADACCU	set	16106
  1000  0000                     _ADSTPTH	set	16101
  1001  0000                     _ADSTPTL	set	16100
  1002  0000                     _ADUTHH	set	16097
  1003  0000                     _ADUTHL	set	16096
  1004  0000                     _ADLTHH	set	16095
  1005  0000                     _ADLTHL	set	16094
  1006  0000                     _CCPTMRS1bits	set	16223
  1007  0000                     _PORTFbits	set	16335
  1008  0000                     _LATCbits	set	16316
  1009  0000                     _LATDbits	set	16317
  1010  0000                     _PORTBbits	set	16331
  1011  0000                     _T2CON	set	16300
  1012  0000                     _T2TMR	set	16298
  1013  0000                     _T2PR	set	16299
  1014  0000                     _T2RST	set	16303
  1015  0000                     _T2HLT	set	16301
  1016  0000                     _T2CLKCON	set	16302
  1017  0000                     _PWM8DCL	set	16224
  1018  0000                     _PWM8DCH	set	16225
  1019  0000                     _PWM8CON	set	16226
  1020  0000                     _LATEbits	set	16318
  1021  0000                     _T5CONbits	set	16282
  1022  0000                     _T5CON	set	16282
  1023  0000                     _TMR5L	set	16280
  1024  0000                     _TMR5H	set	16281
  1025  0000                     _T5CLK	set	16285
  1026  0000                     _T5GATE	set	16284
  1027  0000                     _T5GCON	set	16283
  1028  0000                     _T6CON	set	16276
  1029  0000                     _T6TMR	set	16274
  1030  0000                     _T6PR	set	16275
  1031  0000                     _T6RST	set	16279
  1032  0000                     _T6HLT	set	16277
  1033  0000                     _T6CLKCON	set	16278
  1034  0000                     _TRISD	set	16325
  1035  0000                     _TRISC	set	16324
  1036  0000                     _TRISB	set	16323
  1037  0000                     _TRISA	set	16322
  1038  0000                     _TRISF	set	16327
  1039  0000                     _TRISE	set	16326
  1040  0000                     _LATC	set	16316
  1041  0000                     _LATB	set	16315
  1042  0000                     _LATF	set	16319
  1043  0000                     _LATA	set	16314
  1044  0000                     _LATD	set	16317
  1045  0000                     _LATE	set	16318
  1046  0000                     _IVTLOCKbits	set	16340
  1047  0000                     _IVTLOCK	set	16340
  1048  0000                     _INTCON0bits	set	16338
  1049  0000                     _GIE	set	130711
  1050  00FEEF                     
  1051                           ; BSR set to: 57
  1052  00FEEF  20                 	db	32
  1053  00FEF0  4D                 	db	77	;'M'
  1054  00FEF1  65                 	db	101	;'e'
  1055  00FEF2  73                 	db	115	;'s'
  1056  00FEF3  67                 	db	103	;'g'
  1057  00FEF4  20                 	db	32
  1058  00FEF5  25                 	db	37
  1059  00FEF6  64                 	db	100	;'d'
  1060  00FEF7  20                 	db	32
  1061  00FEF8  53                 	db	83	;'S'
  1062  00FEF9  74                 	db	116	;'t'
  1063  00FEFA  61                 	db	97	;'a'
  1064  00FEFB  63                 	db	99	;'c'
  1065  00FEFC  6B                 	db	107	;'k'
  1066  00FEFD  20                 	db	32
  1067  00FEFE  25                 	db	37
  1068  00FEFF  64                 	db	100	;'d'
  1069  00FF00  20                 	db	32
  1070  00FF01  20                 	db	32
  1071  00FF02  20                 	db	32
  1072  00FF03  20                 	db	32
  1073  00FF04  20                 	db	32
  1074  00FF05  20                 	db	32
  1075  00FF06  00                 	db	0
  1076  00FF07                     STR_27:
  1077                           
  1078                           ; BSR set to: 57
  1079  00FF07  20                 	db	32
  1080  00FF08  20                 	db	32
  1081  00FF09  20                 	db	32
  1082  00FF0A  20                 	db	32
  1083  00FF0B  20                 	db	32
  1084  00FF0C  20                 	db	32
  1085  00FF0D  20                 	db	32
  1086  00FF0E  20                 	db	32
  1087  00FF0F  20                 	db	32
  1088  00FF10  20                 	db	32
  1089  00FF11  20                 	db	32
  1090  00FF12  20                 	db	32
  1091  00FF13  20                 	db	32
  1092  00FF14  20                 	db	32
  1093  00FF15  20                 	db	32
  1094  00FF16  20                 	db	32
  1095  00FF17  20                 	db	32
  1096  00FF18  20                 	db	32
  1097  00FF19  00                 	db	0
  1098  00FF1A                     STR_17:
  1099                           
  1100                           ; BSR set to: 57
  1101  00FF1A  48                 	db	72	;'H'
  1102  00FF1B  45                 	db	69	;'E'
  1103  00FF1C  4C                 	db	76	;'L'
  1104  00FF1D  50                 	db	80	;'P'
  1105  00FF1E  20                 	db	32
  1106  00FF1F  25                 	db	37
  1107  00FF20  73                 	db	115	;'s'
  1108  00FF21  20                 	db	32
  1109  00FF22  20                 	db	32
  1110  00FF23  20                 	db	32
  1111  00FF24  20                 	db	32
  1112  00FF25  20                 	db	32
  1113  00FF26  20                 	db	32
  1114  00FF27  20                 	db	32
  1115  00FF28  20                 	db	32
  1116  00FF29  20                 	db	32
  1117  00FF2A  20                 	db	32
  1118  00FF2B  20                 	db	32
  1119  00FF2C  00                 	db	0
  1120  00FF2D                     
  1121                           ; BSR set to: 57
  1122  00FF2D  44                 	db	68	;'D'
  1123  00FF2E  49                 	db	73	;'I'
  1124  00FF2F  53                 	db	83	;'S'
  1125  00FF30  50                 	db	80	;'P'
  1126  00FF31  4C                 	db	76	;'L'
  1127  00FF32  41                 	db	65	;'A'
  1128  00FF33  59                 	db	89	;'Y'
  1129  00FF34  20                 	db	32
  1130  00FF35  25                 	db	37
  1131  00FF36  73                 	db	115	;'s'
  1132  00FF37  20                 	db	32
  1133  00FF38  20                 	db	32
  1134  00FF39  20                 	db	32
  1135  00FF3A  20                 	db	32
  1136  00FF3B  20                 	db	32
  1137  00FF3C  20                 	db	32
  1138  00FF3D  20                 	db	32
  1139  00FF3E  20                 	db	32
  1140  00FF3F  00                 	db	0
  1141  00FF40                     STR_8:
  1142                           
  1143                           ; BSR set to: 57
  1144  00FF40  20                 	db	32
  1145  00FF41  56                 	db	86	;'V'
  1146  00FF42  54                 	db	84	;'T'
  1147  00FF43  45                 	db	69	;'E'
  1148  00FF44  52                 	db	82	;'R'
  1149  00FF45  4D                 	db	77	;'M'
  1150  00FF46  20                 	db	32
  1151  00FF47  23                 	db	35
  1152  00FF48  32                 	db	50	;'2'
  1153  00FF49  20                 	db	32
  1154  00FF4A  20                 	db	32
  1155  00FF4B  20                 	db	32
  1156  00FF4C  20                 	db	32
  1157  00FF4D  20                 	db	32
  1158  00FF4E  20                 	db	32
  1159  00FF4F  20                 	db	32
  1160  00FF50  00                 	db	0
  1161  00FF51                     STR_4:
  1162                           
  1163                           ; BSR set to: 57
  1164  00FF51  20                 	db	32
  1165  00FF52  4E                 	db	78	;'N'
  1166  00FF53  53                 	db	83	;'S'
  1167  00FF54  41                 	db	65	;'A'
  1168  00FF55  53                 	db	83	;'S'
  1169  00FF56  50                 	db	80	;'P'
  1170  00FF57  4F                 	db	79	;'O'
  1171  00FF58  4F                 	db	79	;'O'
  1172  00FF59  4B                 	db	75	;'K'
  1173  00FF5A  20                 	db	32
  1174  00FF5B  20                 	db	32
  1175  00FF5C  20                 	db	32
  1176  00FF5D  20                 	db	32
  1177  00FF5E  20                 	db	32
  1178  00FF5F  20                 	db	32
  1179  00FF60  20                 	db	32
  1180  00FF61  00                 	db	0
  1181  00FF62                     STR_1:
  1182                           
  1183                           ; BSR set to: 57
  1184  00FF62  20                 	db	32
  1185  00FF63  4D                 	db	77	;'M'
  1186  00FF64  42                 	db	66	;'B'
  1187  00FF65  4D                 	db	77	;'M'
  1188  00FF66  43                 	db	67	;'C'
  1189  00FF67  20                 	db	32
  1190  00FF68  53                 	db	83	;'S'
  1191  00FF69  4F                 	db	79	;'O'
  1192  00FF6A  4C                 	db	76	;'L'
  1193  00FF6B  41                 	db	65	;'A'
  1194  00FF6C  52                 	db	82	;'R'
  1195  00FF6D  4D                 	db	77	;'M'
  1196  00FF6E  4F                 	db	79	;'O'
  1197  00FF6F  4E                 	db	78	;'N'
  1198  00FF70  20                 	db	32
  1199  00FF71  20                 	db	32
  1200  00FF72  00                 	db	0
  1201  00FF73                     STR_5:
  1202                           
  1203                           ; BSR set to: 57
  1204  00FF73  20                 	db	32
  1205  00FF74  53                 	db	83	;'S'
  1206  00FF75  45                 	db	69	;'E'
  1207  00FF76  51                 	db	81	;'Q'
  1208  00FF77  55                 	db	85	;'U'
  1209  00FF78  45                 	db	69	;'E'
  1210  00FF79  4E                 	db	78	;'N'
  1211  00FF7A  43                 	db	67	;'C'
  1212  00FF7B  45                 	db	69	;'E'
  1213  00FF7C  20                 	db	32
  1214  00FF7D  54                 	db	84	;'T'
  1215  00FF7E  45                 	db	69	;'E'
  1216  00FF7F  53                 	db	83	;'S'
  1217  00FF80  54                 	db	84	;'T'
  1218  00FF81  20                 	db	32
  1219  00FF82  20                 	db	32
  1220  00FF83  00                 	db	0
  1221  00FF84                     STR_11:
  1222                           
  1223                           ; BSR set to: 57
  1224  00FF84  25                 	db	37
  1225  00FF85  64                 	db	100	;'d'
  1226  00FF86  20                 	db	32
  1227  00FF87  25                 	db	37
  1228  00FF88  32                 	db	50	;'2'
  1229  00FF89  2E                 	db	46
  1230  00FF8A  34                 	db	52	;'4'
  1231  00FF8B  66                 	db	102	;'f'
  1232  00FF8C  2C                 	db	44
  1233  00FF8D  20                 	db	32
  1234  00FF8E  25                 	db	37
  1235  00FF8F  64                 	db	100	;'d'
  1236  00FF90  20                 	db	32
  1237  00FF91  20                 	db	32
  1238  00FF92  20                 	db	32
  1239  00FF93  23                 	db	35
  1240  00FF94  00                 	db	0
  1241  00FF95                     STR_21:
  1242                           
  1243                           ; BSR set to: 57
  1244  00FF95  76                 	db	118	;'v'
  1245  00FF96  74                 	db	116	;'t'
  1246  00FF97  65                 	db	101	;'e'
  1247  00FF98  72                 	db	114	;'r'
  1248  00FF99  6D                 	db	109	;'m'
  1249  00FF9A  20                 	db	32
  1250  00FF9B  25                 	db	37
  1251  00FF9C  78                 	db	120	;'x'
  1252  00FF9D  3A                 	db	58	;':'
  1253  00FF9E  25                 	db	37
  1254  00FF9F  78                 	db	120	;'x'
  1255  00FFA0  20                 	db	32
  1256  00FFA1  20                 	db	32
  1257  00FFA2  20                 	db	32
  1258  00FFA3  00                 	db	0
  1259  00FFA4                     STR_2:
  1260                           
  1261                           ; BSR set to: 57
  1262  00FFA4  20                 	db	32
  1263  00FFA5  56                 	db	86	;'V'
  1264  00FFA6  65                 	db	101	;'e'
  1265  00FFA7  72                 	db	114	;'r'
  1266  00FFA8  73                 	db	115	;'s'
  1267  00FFA9  69                 	db	105	;'i'
  1268  00FFAA  6F                 	db	111	;'o'
  1269  00FFAB  6E                 	db	110	;'n'
  1270  00FFAC  20                 	db	32
  1271  00FFAD  25                 	db	37
  1272  00FFAE  73                 	db	115	;'s'
  1273  00FFAF  20                 	db	32
  1274  00FFB0  20                 	db	32
  1275  00FFB1  20                 	db	32
  1276  00FFB2  00                 	db	0
  1277  00FFB3                     STR_9:
  1278                           
  1279                           ; BSR set to: 57
  1280  00FFB3  25                 	db	37
  1281  00FFB4  64                 	db	100	;'d'
  1282  00FFB5  20                 	db	32
  1283  00FFB6  25                 	db	37
  1284  00FFB7  32                 	db	50	;'2'
  1285  00FFB8  2E                 	db	46
  1286  00FFB9  34                 	db	52	;'4'
  1287  00FFBA  66                 	db	102	;'f'
  1288  00FFBB  20                 	db	32
  1289  00FFBC  20                 	db	32
  1290  00FFBD  20                 	db	32
  1291  00FFBE  25                 	db	37
  1292  00FFBF  64                 	db	100	;'d'
  1293  00FFC0  00                 	db	0
  1294  00FFC1                     STR_15:
  1295                           
  1296                           ; BSR set to: 57
  1297  00FFC1  4E                 	db	78	;'N'
  1298  00FFC2  6F                 	db	111	;'o'
  1299  00FFC3  76                 	db	118	;'v'
  1300  00FFC4  20                 	db	32
  1301  00FFC5  32                 	db	50	;'2'
  1302  00FFC6  35                 	db	53	;'5'
  1303  00FFC7  20                 	db	32
  1304  00FFC8  32                 	db	50	;'2'
  1305  00FFC9  30                 	db	48	;'0'
  1306  00FFCA  31                 	db	49	;'1'
  1307  00FFCB  39                 	db	57	;'9'
  1308  00FFCC  00                 	db	0
  1309  00FFCD                     STR_19:
  1310                           
  1311                           ; BSR set to: 57
  1312  00FFCD  25                 	db	37
  1313  00FFCE  73                 	db	115	;'s'
  1314  00FFCF  20                 	db	32
  1315  00FFD0  20                 	db	32
  1316  00FFD1  20                 	db	32
  1317  00FFD2  20                 	db	32
  1318  00FFD3  20                 	db	32
  1319  00FFD4  20                 	db	32
  1320  00FFD5  20                 	db	32
  1321  00FFD6  00                 	db	0
  1322  00FFD7                     STR_16:
  1323                           
  1324                           ; BSR set to: 57
  1325  00FFD7  31                 	db	49	;'1'
  1326  00FFD8  35                 	db	53	;'5'
  1327  00FFD9  3A                 	db	58	;':'
  1328  00FFDA  33                 	db	51	;'3'
  1329  00FFDB  39                 	db	57	;'9'
  1330  00FFDC  3A                 	db	58	;':'
  1331  00FFDD  33                 	db	51	;'3'
  1332  00FFDE  31                 	db	49	;'1'
  1333  00FFDF  00                 	db	0
  1334  00FFE0                     STR_3:
  1335                           
  1336                           ; BSR set to: 57
  1337  00FFE0  30                 	db	48	;'0'
  1338  00FFE1  2E                 	db	46
  1339  00FFE2  39                 	db	57	;'9'
  1340  00FFE3  36                 	db	54	;'6'
  1341  00FFE4  00                 	db	0
  1342  00FFE5                     STR_34:
  1343                           
  1344                           ; BSR set to: 57
  1345  00FFE5  49                 	db	73	;'I'
  1346  00FFE6  4E                 	db	78	;'N'
  1347  00FFE7  46                 	db	70	;'F'
  1348  00FFE8  00                 	db	0
  1349  00FFE9                     STR_38:
  1350                           
  1351                           ; BSR set to: 57
  1352  00FFE9  4E                 	db	78	;'N'
  1353  00FFEA  41                 	db	65	;'A'
  1354  00FFEB  4E                 	db	78	;'N'
  1355  00FFEC  00                 	db	0
  1356  00FFED                     STR_35:
  1357                           
  1358                           ; BSR set to: 57
  1359  00FFED  69                 	db	105	;'i'
  1360  00FFEE  6E                 	db	110	;'n'
  1361  00FFEF  66                 	db	102	;'f'
  1362  00FFF0  00                 	db	0
  1363  00FFF1                     STR_39:
  1364                           
  1365                           ; BSR set to: 57
  1366  00FFF1  6E                 	db	110	;'n'
  1367  00FFF2  61                 	db	97	;'a'
  1368  00FFF3  6E                 	db	110	;'n'
  1369  00FFF4  00                 	db	0
  1370  00FFF5                     STR_42:
  1371                           
  1372                           ; BSR set to: 57
  1373  00FFF5  6C                 	db	108	;'l'
  1374  00FFF6  66                 	db	102	;'f'
  1375  00FFF7  00                 	db	0
  1376  00FFF8                     STR_13:
  1377                           
  1378                           ; BSR set to: 57
  1379  00FFF8  25                 	db	37
  1380  00FFF9  63                 	db	99	;'c'
  1381  00FFFA  00                 	db	0
  1382  00FFFB                     STR_12:
  1383                           
  1384                           ; BSR set to: 57
  1385  00FFFB  25                 	db	37
  1386  00FFFC  73                 	db	115	;'s'
  1387  00FFFD  00                 	db	0
  1388  0000                     
  1389                           ; #config settings
  1390  00FFFE  00                 	db	0	; dummy byte at the end
  1391  0000                     
  1392                           	psect	cinit
  1393  0169FC                     __pcinit:
  1394                           	opt callstack 0
  1395  0169FC                     start_initialization:
  1396                           	opt callstack 0
  1397  0169FC                     __initialization:
  1398                           	opt callstack 0
  1399                           
  1400                           ; Initialize objects allocated to BANK2 (16 bytes)
  1401                           ; load TBLPTR registers with __pidataBANK2
  1402  0169FC  0E3E               	movlw	low __pidataBANK2
  1403  0169FE  6EF6               	movwf	tblptrl,c
  1404  016A00  0E85               	movlw	high __pidataBANK2
  1405  016A02  6EF7               	movwf	tblptrh,c
  1406  016A04  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1407  016A06  6EF8               	movwf	tblptru,c
  1408  016A08  EE00  F290         	lfsr	0,__pdataBANK2
  1409  016A0C  EE20 F010          	lfsr	2,16
  1410  016A10                     copy_data0:
  1411  016A10  0009               	tblrd		*+
  1412  016A12  006F FFD7 FFEE     	movff	tablat,postinc0
  1413  016A18  50DD               	movf	postdec2,w,c
  1414  016A1A  50D9               	movf	fsr2l,w,c
  1415  016A1C  E1F9               	bnz	copy_data0
  1416                           
  1417                           ; Initialize objects allocated to BANK1 (187 bytes)
  1418                           ; load TBLPTR registers with __pidataBANK1
  1419  016A1E  0E72               	movlw	low __pidataBANK1
  1420  016A20  6EF6               	movwf	tblptrl,c
  1421  016A22  0E6D               	movlw	high __pidataBANK1
  1422  016A24  6EF7               	movwf	tblptrh,c
  1423  016A26  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1424  016A28  6EF8               	movwf	tblptru,c
  1425  016A2A  EE00  F100         	lfsr	0,__pdataBANK1
  1426  016A2E  EE20 F0BB          	lfsr	2,187
  1427  016A32                     copy_data1:
  1428  016A32  0009               	tblrd		*+
  1429  016A34  006F FFD7 FFEE     	movff	tablat,postinc0
  1430  016A3A  50DD               	movf	postdec2,w,c
  1431  016A3C  50D9               	movf	fsr2l,w,c
  1432  016A3E  E1F9               	bnz	copy_data1
  1433                           
  1434                           ; Initialize objects allocated to BANK0 (47 bytes)
  1435                           ; load TBLPTR registers with __pidataBANK0
  1436  016A40  0ECE               	movlw	low __pidataBANK0
  1437  016A42  6EF6               	movwf	tblptrl,c
  1438  016A44  0E7E               	movlw	high __pidataBANK0
  1439  016A46  6EF7               	movwf	tblptrh,c
  1440  016A48  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1441  016A4A  6EF8               	movwf	tblptru,c
  1442  016A4C  EE00  F0C7         	lfsr	0,__pdataBANK0
  1443  016A50  EE20 F02F          	lfsr	2,47
  1444  016A54                     copy_data2:
  1445  016A54  0009               	tblrd		*+
  1446  016A56  006F FFD7 FFEE     	movff	tablat,postinc0
  1447  016A5C  50DD               	movf	postdec2,w,c
  1448  016A5E  50D9               	movf	fsr2l,w,c
  1449  016A60  E1F9               	bnz	copy_data2
  1450                           
  1451                           ; Clear objects allocated to BANK7 (255 bytes)
  1452  016A62  EE01  F300         	lfsr	0,__pbssBANK7
  1453  016A66  EE20 F0FF          	lfsr	2,255
  1454  016A6A                     clear_0:
  1455  016A6A  6AEE               	clrf	postinc0,c
  1456  016A6C  50DD               	movf	postdec2,w,c
  1457  016A6E  50D9               	movf	fsr2l,w,c
  1458  016A70  E1FC               	bnz	clear_0
  1459  016A72  50DA               	movf	fsr2h,w,c
  1460  016A74  E1FA               	bnz	clear_0
  1461                           
  1462                           ; Clear objects allocated to BANK6 (255 bytes)
  1463  016A76  EE01  F200         	lfsr	0,__pbssBANK6
  1464  016A7A  EE20 F0FF          	lfsr	2,255
  1465  016A7E                     clear_1:
  1466  016A7E  6AEE               	clrf	postinc0,c
  1467  016A80  50DD               	movf	postdec2,w,c
  1468  016A82  50D9               	movf	fsr2l,w,c
  1469  016A84  E1FC               	bnz	clear_1
  1470  016A86  50DA               	movf	fsr2h,w,c
  1471  016A88  E1FA               	bnz	clear_1
  1472                           
  1473                           ; Clear objects allocated to BANK5 (218 bytes)
  1474  016A8A  EE01  F100         	lfsr	0,__pbssBANK5
  1475  016A8E  0EDA               	movlw	218
  1476  016A90                     clear_2:
  1477  016A90  6AEE               	clrf	postinc0,c
  1478  016A92  06E8               	decf	wreg,f,c
  1479  016A94  E1FD               	bnz	clear_2
  1480                           
  1481                           ; Clear objects allocated to BANK4 (134 bytes)
  1482  016A96  EE01  F000         	lfsr	0,__pbssBANK4
  1483  016A9A  0E86               	movlw	134
  1484  016A9C                     clear_3:
  1485  016A9C  6AEE               	clrf	postinc0,c
  1486  016A9E  06E8               	decf	wreg,f,c
  1487  016AA0  E1FD               	bnz	clear_3
  1488                           
  1489                           ; Clear objects allocated to BANK3 (236 bytes)
  1490  016AA2  EE00  F300         	lfsr	0,__pbssBANK3
  1491  016AA6  0EEC               	movlw	236
  1492  016AA8                     clear_4:
  1493  016AA8  6AEE               	clrf	postinc0,c
  1494  016AAA  06E8               	decf	wreg,f,c
  1495  016AAC  E1FD               	bnz	clear_4
  1496                           
  1497                           ; Clear objects allocated to BANK2 (144 bytes)
  1498  016AAE  EE00  F200         	lfsr	0,__pbssBANK2
  1499  016AB2  0E90               	movlw	144
  1500  016AB4                     clear_5:
  1501  016AB4  6AEE               	clrf	postinc0,c
  1502  016AB6  06E8               	decf	wreg,f,c
  1503  016AB8  E1FD               	bnz	clear_5
  1504                           
  1505                           ; Clear objects allocated to BANK1 (8 bytes)
  1506  016ABA  EE00  F1BB         	lfsr	0,__pbssBANK1
  1507  016ABE  0E08               	movlw	8
  1508  016AC0                     clear_6:
  1509  016AC0  6AEE               	clrf	postinc0,c
  1510  016AC2  06E8               	decf	wreg,f,c
  1511  016AC4  E1FD               	bnz	clear_6
  1512                           
  1513                           ; Clear objects allocated to BANK0 (103 bytes)
  1514  016AC6  EE00  F060         	lfsr	0,__pbssBANK0
  1515  016ACA  0E67               	movlw	103
  1516  016ACC                     clear_7:
  1517  016ACC  6AEE               	clrf	postinc0,c
  1518  016ACE  06E8               	decf	wreg,f,c
  1519  016AD0  E1FD               	bnz	clear_7
  1520                           
  1521                           ; Clear objects allocated to COMRAM (49 bytes)
  1522  016AD2  EE00  F001         	lfsr	0,__pbssCOMRAM
  1523  016AD6  0E31               	movlw	49
  1524  016AD8                     clear_8:
  1525  016AD8  6AEE               	clrf	postinc0,c
  1526  016ADA  06E8               	decf	wreg,f,c
  1527  016ADC  E1FD               	bnz	clear_8
  1528                           
  1529                           ;
  1530                           ; Setup IVTBASE
  1531                           ;
  1532  016ADE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1533  016AE0  6ED5               	movwf	213,c
  1534  016AE2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1535  016AE4  6ED6               	movwf	214,c
  1536  016AE6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1537  016AE8  6ED7               	movwf	215,c
  1538  016AEA                     end_of_initialization:
  1539                           	opt callstack 0
  1540  016AEA                     __end_of__initialization:
  1541                           	opt callstack 0
  1542  016AEA  0100               	movlb	0
  1543  016AEC  EFC7  F09B         	goto	_main	;jump to C main() function
  1544                           
  1545                           	psect	bssCOMRAM
  1546  000001                     __pbssCOMRAM:
  1547                           	opt callstack 0
  1548  000001                     _ADCC_ADTI_InterruptHandler:
  1549                           	opt callstack 0
  1550  000001                     	ds	3
  1551  000004                     _ADCC_ADI_InterruptHandler:
  1552                           	opt callstack 0
  1553  000004                     	ds	3
  1554  000007                     _UART1_TxInterruptHandler:
  1555                           	opt callstack 0
  1556  000007                     	ds	3
  1557  00000A                     _UART1_RxInterruptHandler:
  1558                           	opt callstack 0
  1559  00000A                     	ds	3
  1560  00000D                     _UART2_TxInterruptHandler:
  1561                           	opt callstack 0
  1562  00000D                     	ds	3
  1563  000010                     _UART2_RxInterruptHandler:
  1564                           	opt callstack 0
  1565  000010                     	ds	3
  1566  000013                     _INT1_InterruptHandler:
  1567                           	opt callstack 0
  1568  000013                     	ds	3
  1569  000016                     _INT0_InterruptHandler:
  1570                           	opt callstack 0
  1571  000016                     	ds	3
  1572  000019                     _nout:
  1573                           	opt callstack 0
  1574  000019                     	ds	2
  1575  00001B                     _width:
  1576                           	opt callstack 0
  1577  00001B                     	ds	2
  1578  00001D                     _prec:
  1579                           	opt callstack 0
  1580  00001D                     	ds	2
  1581  00001F                     _flags:
  1582                           	opt callstack 0
  1583  00001F                     	ds	2
  1584  000021                     TMR5_ISR@CountCallBack:
  1585                           	opt callstack 0
  1586  000021                     	ds	2
  1587  000023                     _timer5ReloadVal:
  1588                           	opt callstack 0
  1589  000023                     	ds	2
  1590  000025                     _mode_sw:
  1591                           	opt callstack 0
  1592  000025                     	ds	1
  1593  000026                     _uart2RxCount:
  1594                           	opt callstack 0
  1595  000026                     	ds	1
  1596  000027                     _uart2RxTail:
  1597                           	opt callstack 0
  1598  000027                     	ds	1
  1599  000028                     _uart2RxHead:
  1600                           	opt callstack 0
  1601  000028                     	ds	1
  1602  000029                     _uart2TxBufferRemaining:
  1603                           	opt callstack 0
  1604  000029                     	ds	1
  1605  00002A                     _uart2TxTail:
  1606                           	opt callstack 0
  1607  00002A                     	ds	1
  1608  00002B                     _uart2TxHead:
  1609                           	opt callstack 0
  1610  00002B                     	ds	1
  1611  00002C                     _uart1RxCount:
  1612                           	opt callstack 0
  1613  00002C                     	ds	1
  1614  00002D                     _uart1RxTail:
  1615                           	opt callstack 0
  1616  00002D                     	ds	1
  1617  00002E                     _uart1RxHead:
  1618                           	opt callstack 0
  1619  00002E                     	ds	1
  1620  00002F                     _uart1TxBufferRemaining:
  1621                           	opt callstack 0
  1622  00002F                     	ds	1
  1623  000030                     _uart1TxTail:
  1624                           	opt callstack 0
  1625  000030                     	ds	1
  1626  000031                     _uart1TxHead:
  1627                           	opt callstack 0
  1628  000031                     	ds	1
  1629                           
  1630                           	psect	bssBANK0
  1631  000060                     __pbssBANK0:
  1632                           	opt callstack 0
  1633  000060                     _S:
  1634                           	opt callstack 0
  1635  000060                     	ds	41
  1636  000089                     _tickCount:
  1637                           	opt callstack 0
  1638  000089                     	ds	24
  1639  0000A1                     _spi_link:
  1640                           	opt callstack 0
  1641  0000A1                     	ds	12
  1642  0000AD                     floorf@F524:
  1643                           	opt callstack 0
  1644  0000AD                     	ds	4
  1645  0000B1                     ___fpclassifyf@F463:
  1646                           	opt callstack 0
  1647  0000B1                     	ds	4
  1648  0000B5                     _utctime:
  1649                           	opt callstack 0
  1650  0000B5                     	ds	4
  1651  0000B9                     wdtdelay@dcount:
  1652                           	opt callstack 0
  1653  0000B9                     	ds	4
  1654  0000BD                     _P:
  1655                           	opt callstack 0
  1656  0000BD                     	ds	4
  1657  0000C1                     _TMR5_InterruptHandler:
  1658                           	opt callstack 0
  1659  0000C1                     	ds	3
  1660  0000C4                     _TMR6_InterruptHandler:
  1661                           	opt callstack 0
  1662  0000C4                     	ds	3
  1663                           
  1664                           	psect	dataBANK0
  1665  0000C7                     __pdataBANK0:
  1666                           	opt callstack 0
  1667  0000C7                     _R:
  1668                           	opt callstack 0
  1669  0000C7                     	ds	40
  1670  0000EF                     stoa@F1166:
  1671                           	opt callstack 0
  1672  0000EF                     	ds	7
  1673                           
  1674                           	psect	bssBANK1
  1675  0001BB                     __pbssBANK1:
  1676                           	opt callstack 0
  1677  0001BB                     _seed:
  1678                           	opt callstack 0
  1679  0001BB                     	ds	8
  1680                           
  1681                           	psect	dataBANK1
  1682  000100                     __pdataBANK1:
  1683                           	opt callstack 0
  1684  000100                     _V:
  1685                           	opt callstack 0
  1686  000100                     	ds	187
  1687                           
  1688                           	psect	bssBANK2
  1689  000200                     __pbssBANK2:
  1690                           	opt callstack 0
  1691  000200                     lp_filter@smooth:
  1692                           	opt callstack 0
  1693  000200                     	ds	64
  1694  000240                     _dbuf:
  1695                           	opt callstack 0
  1696  000240                     	ds	80
  1697                           
  1698                           	psect	dataBANK2
  1699  000290                     __pdataBANK2:
  1700                           	opt callstack 0
  1701  000290                     _port_data:
  1702                           	opt callstack 0
  1703  000290                     	ds	16
  1704                           
  1705                           	psect	bssBANK3
  1706  000300                     __pbssBANK3:
  1707                           	opt callstack 0
  1708  000300                     _C:
  1709                           	opt callstack 0
  1710  000300                     	ds	108
  1711  00036C                     _uart2TxBuffer:
  1712                           	opt callstack 0
  1713  00036C                     	ds	64
  1714  0003AC                     _uart1TxBuffer:
  1715                           	opt callstack 0
  1716  0003AC                     	ds	64
  1717                           
  1718                           	psect	bssBANK4
  1719  000400                     __pbssBANK4:
  1720                           	opt callstack 0
  1721  000400                     _ring_buf2:
  1722                           	opt callstack 0
  1723  000400                     	ds	67
  1724  000443                     _ring_buf1:
  1725                           	opt callstack 0
  1726  000443                     	ds	67
  1727                           
  1728                           	psect	bssBANK5
  1729  000500                     __pbssBANK5:
  1730                           	opt callstack 0
  1731  000500                     _D:
  1732                           	opt callstack 0
  1733  000500                     	ds	218
  1734                           
  1735                           	psect	bssBANK6
  1736  000600                     __pbssBANK6:
  1737                           	opt callstack 0
  1738  000600                     _uart1RxBuffer:
  1739                           	opt callstack 0
  1740  000600                     	ds	255
  1741                           
  1742                           	psect	bssBANK7
  1743  000700                     __pbssBANK7:
  1744                           	opt callstack 0
  1745  000700                     _uart2RxBuffer:
  1746                           	opt callstack 0
  1747  000700                     	ds	255
  1748                           
  1749                           	psect	cstackBANK1
  1750  0001C3                     __pcstackBANK1:
  1751                           	opt callstack 0
  1752  0001C3                     ??_TMR5_ISR:
  1753                           
  1754                           ; 1 bytes @ 0x0
  1755  0001C3                     	ds	4
  1756                           
  1757                           	psect	cstackBANK0
  1758  0000F6                     __pcstackBANK0:
  1759                           	opt callstack 0
  1760  0000F6                     ??_INT1_ISR:
  1761                           
  1762                           ; 1 bytes @ 0x0
  1763  0000F6                     	ds	4
  1764                           
  1765                           	psect	cstackCOMRAM
  1766  000052                     __pcstackCOMRAM:
  1767                           	opt callstack 0
  1768  000052                     ??_ADCC_ThresholdISR:
  1769  000052                     
  1770                           ; 1 bytes @ 0x0
  1771  000052                     	ds	5
  1772  000057                     ??_TMR6_ISR:
  1773                           
  1774                           ; 1 bytes @ 0x5
  1775  000057                     	ds	1
  1776  000058                     
  1777                           ; 1 bytes @ 0x6
  1778 ;;
  1779 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  1780 ;;
  1781 ;; *************** function _main *****************
  1782 ;; Defined at:
  1783 ;;		line 158 in file "main.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  inp_index       1  [STACK] unsigned char 
  1788 ;;  k               1  [STACK] unsigned char 
  1789 ;;  j               1  [STACK] unsigned char 
  1790 ;;  i               1  [STACK] unsigned char 
  1791 ;;  mode            1  [STACK] enum E17005
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1  [STACK] void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 1/1
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels required when called:   19
  1807 ;; This function calls:
  1808 ;;		_SYSTEM_Initialize
  1809 ;;		_StartTimer
  1810 ;;		_TimerDone
  1811 ;;		_WaitMs
  1812 ;;		_check_adc_scan
  1813 ;;		_check_help
  1814 ;;		_clear_adc_scan
  1815 ;;		_convert_adc_data
  1816 ;;		_eaDogM_WriteCommand
  1817 ;;		_get_raw_result
  1818 ;;		_get_switch
  1819 ;;		_get_vterm_ptr
  1820 ;;		_init_display
  1821 ;;		_mode_lamp_dim
  1822 ;;		_set_display_info
  1823 ;;		_set_vterm
  1824 ;;		_sprintf
  1825 ;;		_srand
  1826 ;;		_start_adc_scan
  1827 ;;		_start_switch_handler
  1828 ;;		_update_lcd
  1829 ;; This function is called by:
  1830 ;;		Startup code after reset
  1831 ;; This function uses a reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text0
  1835  01378E                     __ptext0:
  1836                           	opt callstack 0
  1837  01378E                     _main:
  1838                           	opt callstack 0
  1839                           
  1840                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1841  01378E  0E05               	movlw	5
  1842  013790  26E1               	addwf	fsr1l,f,c
  1843  013792  0E00               	movlw	0
  1844  013794  22E2               	addwfc	fsr1h,f,c
  1845                           
  1846                           ;main.c: 160:  UI_STATES mode;;main.c: 161:  uint8_t inp_index = 0,i=C_BATT,j=C_PV,k=V_C
      +                          C;
  1847                           ;stkvar	_inp_index @ sp[(-5)+0]
  1848                           
  1849                           ;incstack = 0
  1850  013796  0EFB               	movlw	-5
  1851  013798  6AE3               	clrf	plusw1,c
  1852                           
  1853                           ;stkvar	_i @ sp[(-5)+3]
  1854  01379A  0EFE               	movlw	-2
  1855  01379C  6AE3               	clrf	plusw1,c
  1856                           
  1857                           ;stkvar	_j @ sp[(-5)+2]
  1858  01379E  0EFD               	movlw	-3
  1859  0137A0  6AE3               	clrf	plusw1,c
  1860  0137A2  2AE3               	incf	plusw1,f,c
  1861                           
  1862                           ;stkvar	_k @ sp[(-5)+1]
  1863  0137A4  0EFC               	movlw	-4
  1864  0137A6  6AE3               	clrf	plusw1,c
  1865  0137A8  82E3               	bsf	plusw1,1,c
  1866                           
  1867                           ;main.c: 163:  SYSTEM_Initialize();
  1868  0137AA  EC8F  F0BD         	call	_SYSTEM_Initialize	;wreg free
  1869                           
  1870                           ; BSR set to: 60
  1871                           ;main.c: 166:  (INTCON0bits.GIEH = 1);
  1872  0137AE  8ED2               	bsf	210,7,c	;volatile
  1873                           
  1874                           ; BSR set to: 60
  1875                           ;main.c: 169:  (INTCON0bits.GIEL = 1);
  1876  0137B0  8CD2               	bsf	210,6,c	;volatile
  1877                           
  1878                           ; BSR set to: 60
  1879                           ;main.c: 171:  V.ui_state = UI_STATE_INIT;
  1880  0137B2  0101               	movlb	1	; () banked
  1881  0137B4  6B00               	clrf	_V& (0+255),b	;volatile
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;main.c: 176:  WaitMs(300);
  1885  0137B6  0E2C               	movlw	44
  1886  0137B8  6EE6               	movwf	postinc1,c
  1887  0137BA  0E01               	movlw	1
  1888  0137BC  6EE6               	movwf	postinc1,c
  1889  0137BE  ECB5  F0BE         	call	_WaitMs	;wreg free
  1890                           
  1891                           ;main.c: 177:  if (PORTBbits.RB0) {
  1892  0137C2  A0CB               	btfss	203,0,c	;volatile
  1893  0137C4  D004               	goto	l12021
  1894                           
  1895                           ;main.c: 178:   mode = UI_STATE_HOST;
  1896                           ;stkvar	_mode @ sp[(-5)+4]
  1897  0137C6  0EFF               	movlw	-1
  1898  0137C8  6AE3               	clrf	plusw1,c
  1899  0137CA  2AE3               	incf	plusw1,f,c
  1900                           
  1901                           ;main.c: 179:  } else {
  1902  0137CC  D004               	goto	l12023
  1903  0137CE                     l12021:
  1904                           
  1905                           ;main.c: 180:   mode = UI_STATE_LOG;
  1906                           ;stkvar	_mode @ sp[(-5)+4]
  1907  0137CE  0EFF               	movlw	-1
  1908  0137D0  6AE3               	clrf	plusw1,c
  1909  0137D2  80E3               	bsf	plusw1,0,c
  1910  0137D4  82E3               	bsf	plusw1,1,c	;indir
  1911  0137D6                     l12023:
  1912                           
  1913                           ;main.c: 183:  if (mode == UI_STATE_HOST) {
  1914                           ;stkvar	_mode @ sp[(-5)+4]
  1915  0137D6  0EFF               	movlw	-1
  1916  0137D8  04E3               	decf	plusw1,w,c
  1917  0137DA  A4D8               	btfss	status,2,c
  1918  0137DC  D007               	goto	l1246
  1919                           
  1920                           ;main.c: 184:   do { LATDbits.LATD0 = 1; } while(0);
  1921  0137DE  80BD               	bsf	189,0,c	;volatile
  1922                           
  1923                           ;main.c: 185:   V.mode_pwm = 70;
  1924  0137E0  0E00               	movlw	0
  1925  0137E2  0101               	movlb	1	; () banked
  1926  0137E4  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1927  0137E6  0E46               	movlw	70
  1928  0137E8  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1929                           
  1930                           ;main.c: 186:  } else {
  1931  0137EA  D004               	goto	l12027
  1932  0137EC                     l1246:
  1933  0137EC  90BD               	bcf	189,0,c	;volatile
  1934                           
  1935                           ;main.c: 188:   V.mode_pwm = 0;
  1936  0137EE  0101               	movlb	1	; () banked
  1937  0137F0  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1938  0137F2  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1939  0137F4                     l12027:
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;main.c: 190:  mode_lamp_dim(V.mode_pwm);
  1943  0137F4  0060  F657  FFE6   	movff	_V+149,postinc1
  1944  0137FA  0060  F65B  FFE6   	movff	_V+150,postinc1
  1945  013800  EC53  F0C2         	call	_mode_lamp_dim	;wreg free
  1946  013804  D0D0               	goto	l12071
  1947  013806                     l12029:
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;main.c: 201:    init_display();
  1951  013806  EC78  F0B5         	call	_init_display	;wreg free
  1952                           
  1953                           ; BSR set to: 61
  1954                           ;main.c: 202:    eaDogM_WriteCommand(0b00001100);
  1955  01380A  0E0C               	movlw	12
  1956  01380C  6EE6               	movwf	postinc1,c
  1957  01380E  ECAF  F0C2         	call	_eaDogM_WriteCommand	;wreg free
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;main.c: 204:    V.ui_state = mode;
  1961                           ;stkvar	_mode @ sp[(-5)+4]
  1962  013812  0EFF               	movlw	-1
  1963  013814  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;main.c: 205:    srand(1957);
  1967  01381A  0EA5               	movlw	165
  1968  01381C  6EE6               	movwf	postinc1,c
  1969  01381E  0E07               	movlw	7
  1970  013820  6EE6               	movwf	postinc1,c
  1971  013822  ECEB  F0BE         	call	_srand	;wreg free
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;main.c: 206:    set_vterm(0);
  1975  013826  0E00               	movlw	0
  1976  013828  6EE6               	movwf	postinc1,c
  1977  01382A  EC2A  F0C2         	call	_set_vterm	;wreg free
  1978                           
  1979                           ; BSR set to: 5
  1980                           ;main.c: 207:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1981  01382E  0E62               	movlw	low STR_1
  1982  013830  6EE6               	movwf	postinc1,c
  1983  013832  0EFF               	movlw	high STR_1
  1984  013834  6EE6               	movwf	postinc1,c
  1985  013836  0E00               	movlw	0
  1986  013838  6EE6               	movwf	postinc1,c
  1987  01383A  0E00               	movlw	0
  1988  01383C  6EE6               	movwf	postinc1,c
  1989  01383E  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  1990  013842  0060  F0CB  FFE6   	movff	btemp,postinc1
  1991  013848  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1992  01384E  0E04               	movlw	4
  1993  013850  6EE6               	movwf	postinc1,c
  1994  013852  EC79  F0B4         	call	_sprintf	;wreg free
  1995                           
  1996                           ;main.c: 208:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.96");
  1997  013856  0EE0               	movlw	low STR_3
  1998  013858  6EE6               	movwf	postinc1,c
  1999  01385A  0EFF               	movlw	high STR_3
  2000  01385C  6EE6               	movwf	postinc1,c
  2001  01385E  0EA4               	movlw	low STR_2
  2002  013860  6EE6               	movwf	postinc1,c
  2003  013862  0EFF               	movlw	high STR_2
  2004  013864  6EE6               	movwf	postinc1,c
  2005  013866  0E00               	movlw	0
  2006  013868  6EE6               	movwf	postinc1,c
  2007  01386A  0E01               	movlw	1
  2008  01386C  6EE6               	movwf	postinc1,c
  2009  01386E  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  2010  013872  0060  F0CB  FFE6   	movff	btemp,postinc1
  2011  013878  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2012  01387E  0E06               	movlw	6
  2013  013880  6EE6               	movwf	postinc1,c
  2014  013882  EC79  F0B4         	call	_sprintf	;wreg free
  2015                           
  2016                           ;main.c: 209:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2017  013886  0E51               	movlw	low STR_4
  2018  013888  6EE6               	movwf	postinc1,c
  2019  01388A  0EFF               	movlw	high STR_4
  2020  01388C  6EE6               	movwf	postinc1,c
  2021  01388E  0E00               	movlw	0
  2022  013890  6EE6               	movwf	postinc1,c
  2023  013892  0E02               	movlw	2
  2024  013894  6EE6               	movwf	postinc1,c
  2025  013896  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  2026  01389A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2027  0138A0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2028  0138A6  0E04               	movlw	4
  2029  0138A8  6EE6               	movwf	postinc1,c
  2030  0138AA  EC79  F0B4         	call	_sprintf	;wreg free
  2031                           
  2032                           ;main.c: 210:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2033  0138AE  0E73               	movlw	low STR_5
  2034  0138B0  6EE6               	movwf	postinc1,c
  2035  0138B2  0EFF               	movlw	high STR_5
  2036  0138B4  6EE6               	movwf	postinc1,c
  2037  0138B6  0E02               	movlw	2
  2038  0138B8  6EE6               	movwf	postinc1,c
  2039  0138BA  0E00               	movlw	0
  2040  0138BC  6EE6               	movwf	postinc1,c
  2041  0138BE  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  2042  0138C2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2043  0138C8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2044  0138CE  0E04               	movlw	4
  2045  0138D0  6EE6               	movwf	postinc1,c
  2046  0138D2  EC79  F0B4         	call	_sprintf	;wreg free
  2047                           
  2048                           ;main.c: 211:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.96");
  2049  0138D6  0EE0               	movlw	low STR_3
  2050  0138D8  6EE6               	movwf	postinc1,c
  2051  0138DA  0EFF               	movlw	high STR_3
  2052  0138DC  6EE6               	movwf	postinc1,c
  2053  0138DE  0EA4               	movlw	low STR_2
  2054  0138E0  6EE6               	movwf	postinc1,c
  2055  0138E2  0EFF               	movlw	high STR_2
  2056  0138E4  6EE6               	movwf	postinc1,c
  2057  0138E6  0E02               	movlw	2
  2058  0138E8  6EE6               	movwf	postinc1,c
  2059  0138EA  0E01               	movlw	1
  2060  0138EC  6EE6               	movwf	postinc1,c
  2061  0138EE  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  2062  0138F2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2063  0138F8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2064  0138FE  0E06               	movlw	6
  2065  013900  6EE6               	movwf	postinc1,c
  2066  013902  EC79  F0B4         	call	_sprintf	;wreg free
  2067                           
  2068                           ;main.c: 212:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2069  013906  0E40               	movlw	low STR_8
  2070  013908  6EE6               	movwf	postinc1,c
  2071  01390A  0EFF               	movlw	high STR_8
  2072  01390C  6EE6               	movwf	postinc1,c
  2073  01390E  0E02               	movlw	2
  2074  013910  6EE6               	movwf	postinc1,c
  2075  013912  0E02               	movlw	2
  2076  013914  6EE6               	movwf	postinc1,c
  2077  013916  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  2078  01391A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2079  013920  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2080  013926  0E04               	movlw	4
  2081  013928  6EE6               	movwf	postinc1,c
  2082  01392A  EC79  F0B4         	call	_sprintf	;wreg free
  2083                           
  2084                           ;main.c: 213:    update_lcd(0);
  2085  01392E  0E00               	movlw	0
  2086  013930  6EE6               	movwf	postinc1,c
  2087  013932  ECF2  F0B3         	call	_update_lcd	;wreg free
  2088                           
  2089                           ;main.c: 214:    WaitMs(3000);
  2090  013936  0EB8               	movlw	184
  2091  013938  6EE6               	movwf	postinc1,c
  2092  01393A  0E0B               	movlw	11
  2093  01393C  6EE6               	movwf	postinc1,c
  2094  01393E  ECB5  F0BE         	call	_WaitMs	;wreg free
  2095                           
  2096                           ;main.c: 215:    StartTimer(TMR_DISPLAY, 250);
  2097  013942  0EFA               	movlw	250
  2098  013944  6EE6               	movwf	postinc1,c
  2099  013946  0E00               	movlw	0
  2100  013948  6EE6               	movwf	postinc1,c
  2101  01394A  0E0A               	movlw	10
  2102  01394C  6EE6               	movwf	postinc1,c
  2103  01394E  EC7B  F0BE         	call	_StartTimer	;wreg free
  2104                           
  2105                           ;main.c: 216:    StartTimer(TMR_ADC, 200);
  2106  013952  0EC8               	movlw	200
  2107  013954  6EE6               	movwf	postinc1,c
  2108  013956  0E00               	movlw	0
  2109  013958  6EE6               	movwf	postinc1,c
  2110  01395A  0E01               	movlw	1
  2111  01395C  6EE6               	movwf	postinc1,c
  2112  01395E  EC7B  F0BE         	call	_StartTimer	;wreg free
  2113                           
  2114                           ;main.c: 217:    StartTimer(TMR_INFO, 3000);
  2115  013962  0EB8               	movlw	184
  2116  013964  6EE6               	movwf	postinc1,c
  2117  013966  0E0B               	movlw	11
  2118  013968  6EE6               	movwf	postinc1,c
  2119  01396A  0E07               	movlw	7
  2120  01396C  6EE6               	movwf	postinc1,c
  2121  01396E  EC7B  F0BE         	call	_StartTimer	;wreg free
  2122                           
  2123                           ;main.c: 218:    StartTimer(TMR_FLIPPER, 1500);
  2124  013972  0EDC               	movlw	220
  2125  013974  6EE6               	movwf	postinc1,c
  2126  013976  0E05               	movlw	5
  2127  013978  6EE6               	movwf	postinc1,c
  2128  01397A  0E0B               	movlw	11
  2129  01397C  6EE6               	movwf	postinc1,c
  2130  01397E  EC7B  F0BE         	call	_StartTimer	;wreg free
  2131                           
  2132                           ;main.c: 219:    StartTimer(TMR_HELPDIS, 3000);
  2133  013982  0EB8               	movlw	184
  2134  013984  6EE6               	movwf	postinc1,c
  2135  013986  0E0B               	movlw	11
  2136  013988  6EE6               	movwf	postinc1,c
  2137  01398A  0E09               	movlw	9
  2138  01398C  6EE6               	movwf	postinc1,c
  2139  01398E  EC7B  F0BE         	call	_StartTimer	;wreg free
  2140                           
  2141                           ;main.c: 221:    start_adc_scan();
  2142  013992  EC57  F0BB         	call	_start_adc_scan	;wreg free
  2143                           
  2144                           ;main.c: 222:    start_switch_handler();
  2145  013996  ECC1  F0C1         	call	_start_switch_handler	;wreg free
  2146                           
  2147                           ;main.c: 224:    break;
  2148  01399A  D01C               	goto	l12073
  2149  01399C                     l1254:
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;main.c: 230:    P.SYSTEM_STABLE = 1;
  2153  01399C  0100               	movlb	0	; () banked
  2154  01399E  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2155                           
  2156                           ;main.c: 231:    break;
  2157  0139A0  D019               	goto	l12073
  2158  0139A2                     l1256:
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;main.c: 234:    V.ui_state = UI_STATE_INIT;
  2162  0139A2  6B00               	clrf	_V& (0+255),b	;volatile
  2163                           
  2164                           ;main.c: 235:    break;
  2165  0139A4  D017               	goto	l12073
  2166  0139A6                     l12071:
  2167  0139A6  0101               	movlb	1	; () banked
  2168  0139A8  5100               	movf	_V& (0+255),w,b	;volatile
  2169  0139AA  6E3C               	movwf	(btemp+10)^0,c
  2170  0139AC  6A3D               	clrf	(btemp+11)^0,c
  2171                           
  2172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2173                           ; Switch size 1, requested type "simple"
  2174                           ; Number of cases is 1, Range of values is 0 to 0
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte            4     3 (average)
  2178                           ;	Chosen strategy is simple_byte
  2179  0139AE  503D               	movf	(btemp+11)^0,w,c
  2180  0139B0  0A00               	xorlw	0	; case 0
  2181  0139B2  A4D8               	btfss	status,2,c
  2182  0139B4  D7F6               	goto	l1256
  2183                           
  2184                           ; BSR set to: 1
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 5, Range of values is 0 to 5
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte           16     9 (average)
  2190                           ;	Chosen strategy is simple_byte
  2191  0139B6  503C               	movf	(btemp+10)^0,w,c
  2192  0139B8  0A00               	xorlw	0	; case 0
  2193  0139BA  B4D8               	btfsc	status,2,c
  2194  0139BC  D724               	goto	l12029
  2195  0139BE  0A01               	xorlw	1	; case 1
  2196  0139C0  B4D8               	btfsc	status,2,c
  2197  0139C2  D008               	goto	l12073
  2198  0139C4  0A02               	xorlw	2	; case 3
  2199  0139C6  B4D8               	btfsc	status,2,c
  2200  0139C8  D005               	goto	l12073
  2201  0139CA  0A07               	xorlw	7	; case 4
  2202  0139CC  B4D8               	btfsc	status,2,c
  2203  0139CE  D7E6               	goto	l1254
  2204  0139D0  0A01               	xorlw	1	; case 5
  2205  0139D2  D7E7               	goto	l1256
  2206  0139D4                     l12073:
  2207                           
  2208                           ;main.c: 238:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2209  0139D4  0E01               	movlw	1
  2210  0139D6  6EE6               	movwf	postinc1,c
  2211  0139D8  EC69  F0C1         	call	_TimerDone	;wreg free
  2212  0139DC  5032               	movf	btemp^0,w,c
  2213  0139DE  B4D8               	btfsc	status,2,c
  2214  0139E0  D013               	goto	l12085
  2215  0139E2  ECEF  F0C2         	call	_check_adc_scan	;wreg free
  2216  0139E6  5032               	movf	btemp^0,w,c
  2217  0139E8  B4D8               	btfsc	status,2,c
  2218  0139EA  D00E               	goto	l12085
  2219                           
  2220                           ;main.c: 242:    convert_adc_data();
  2221  0139EC  EC49  F0BA         	call	_convert_adc_data	;wreg free
  2222                           
  2223                           ;main.c: 246:    clear_adc_scan();
  2224  0139F0  ECF7  F0C2         	call	_clear_adc_scan	;wreg free
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;main.c: 247:    start_adc_scan();
  2228  0139F4  EC57  F0BB         	call	_start_adc_scan	;wreg free
  2229                           
  2230                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  2231  0139F8  0EC8               	movlw	200
  2232  0139FA  6EE6               	movwf	postinc1,c
  2233  0139FC  0E00               	movlw	0
  2234  0139FE  6EE6               	movwf	postinc1,c
  2235  013A00  0E01               	movlw	1
  2236  013A02  6EE6               	movwf	postinc1,c
  2237  013A04  EC7B  F0BE         	call	_StartTimer	;wreg free
  2238  013A08                     l12085:
  2239                           
  2240                           ;main.c: 255:   if (TimerDone(TMR_DISPLAY)) {
  2241                           
  2242                           ;main.c: 251:   if (V.ticks) {
  2243  013A08  0E0A               	movlw	10
  2244  013A0A  6EE6               	movwf	postinc1,c
  2245  013A0C  EC69  F0C1         	call	_TimerDone	;wreg free
  2246  013A10  5032               	movf	btemp^0,w,c
  2247  013A12  B4D8               	btfsc	status,2,c
  2248  013A14  D0C8               	goto	l12103
  2249                           
  2250                           ;main.c: 256:    if (TimerDone(TMR_HELPDIS)) {
  2251  013A16  0E09               	movlw	9
  2252  013A18  6EE6               	movwf	postinc1,c
  2253  013A1A  EC69  F0C1         	call	_TimerDone	;wreg free
  2254  013A1E  5032               	movf	btemp^0,w,c
  2255  013A20  B4D8               	btfsc	status,2,c
  2256  013A22  D004               	goto	l12093
  2257                           
  2258                           ;main.c: 257:     set_display_info(DIS_STR);
  2259  013A24  0E00               	movlw	0
  2260  013A26  6EE6               	movwf	postinc1,c
  2261  013A28  ECEF  F0C1         	call	_set_display_info	;wreg free
  2262  013A2C                     l12093:
  2263                           
  2264                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d", get_raw_result(i), C.calc
      +                          [i], get_switch(SSELECT));
  2265  013A2C  0E02               	movlw	2
  2266  013A2E  6EE6               	movwf	postinc1,c
  2267  013A30  EC29  F0C0         	call	_get_switch	;wreg free
  2268  013A34  5032               	movf	btemp^0,w,c
  2269  013A36  6EE6               	movwf	postinc1,c
  2270  013A38  0E00               	movlw	0
  2271  013A3A  6EE6               	movwf	postinc1,c
  2272                           
  2273                           ;stkvar	_i @ sp[(-7)+3]
  2274  013A3C  0EFC               	movlw	-4
  2275  013A3E  50E3               	movf	plusw1,w,c
  2276  013A40  0D04               	mullw	4
  2277  013A42  0E00               	movlw	low _C
  2278  013A44  24F3               	addwf	243,w,c
  2279  013A46  6ED9               	movwf	fsr2l,c
  2280  013A48  0E03               	movlw	high _C
  2281  013A4A  20F4               	addwfc	prodh,w,c
  2282  013A4C  6EDA               	movwf	fsr2h,c
  2283  013A4E  006F FF7B FFE6     	movff	postinc2,postinc1
  2284  013A54  006F FF7B FFE6     	movff	postinc2,postinc1
  2285  013A5A  006F FF7B FFE6     	movff	postinc2,postinc1
  2286  013A60  006F FF7B FFE6     	movff	postinc2,postinc1
  2287                           
  2288                           ;stkvar	_i @ sp[(-11)+3]
  2289  013A66  0EF8               	movlw	-8
  2290  013A68  50E3               	movf	plusw1,w,c
  2291  013A6A  6EE6               	movwf	postinc1,c
  2292  013A6C  ECE0  F0C1         	call	_get_raw_result	;wreg free
  2293  013A70  0060  F0CB  FFE6   	movff	btemp,postinc1
  2294  013A76  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2295  013A7C  0EB3               	movlw	low STR_9
  2296  013A7E  6EE6               	movwf	postinc1,c
  2297  013A80  0EFF               	movlw	high STR_9
  2298  013A82  6EE6               	movwf	postinc1,c
  2299  013A84  0E00               	movlw	0
  2300  013A86  6EE6               	movwf	postinc1,c
  2301  013A88  0E00               	movlw	0
  2302  013A8A  6EE6               	movwf	postinc1,c
  2303  013A8C  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  2304  013A90  0060  F0CB  FFE6   	movff	btemp,postinc1
  2305  013A96  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2306  013A9C  0E0C               	movlw	12
  2307  013A9E  6EE6               	movwf	postinc1,c
  2308  013AA0  EC79  F0B4         	call	_sprintf	;wreg free
  2309                           
  2310                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d", get_raw_result(j), C.calc
      +                          [j], get_switch(SENTER));
  2311  013AA4  0E03               	movlw	3
  2312  013AA6  6EE6               	movwf	postinc1,c
  2313  013AA8  EC29  F0C0         	call	_get_switch	;wreg free
  2314  013AAC  5032               	movf	btemp^0,w,c
  2315  013AAE  6EE6               	movwf	postinc1,c
  2316  013AB0  0E00               	movlw	0
  2317  013AB2  6EE6               	movwf	postinc1,c
  2318                           
  2319                           ;stkvar	_j @ sp[(-7)+2]
  2320  013AB4  0EFB               	movlw	-5
  2321  013AB6  50E3               	movf	plusw1,w,c
  2322  013AB8  0D04               	mullw	4
  2323  013ABA  0E00               	movlw	low _C
  2324  013ABC  24F3               	addwf	243,w,c
  2325  013ABE  6ED9               	movwf	fsr2l,c
  2326  013AC0  0E03               	movlw	high _C
  2327  013AC2  20F4               	addwfc	prodh,w,c
  2328  013AC4  6EDA               	movwf	fsr2h,c
  2329  013AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  2330  013ACC  006F FF7B FFE6     	movff	postinc2,postinc1
  2331  013AD2  006F FF7B FFE6     	movff	postinc2,postinc1
  2332  013AD8  006F FF7B FFE6     	movff	postinc2,postinc1
  2333                           
  2334                           ;stkvar	_j @ sp[(-11)+2]
  2335  013ADE  0EF7               	movlw	-9
  2336  013AE0  50E3               	movf	plusw1,w,c
  2337  013AE2  6EE6               	movwf	postinc1,c
  2338  013AE4  ECE0  F0C1         	call	_get_raw_result	;wreg free
  2339  013AE8  0060  F0CB  FFE6   	movff	btemp,postinc1
  2340  013AEE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2341  013AF4  0EB3               	movlw	low STR_9
  2342  013AF6  6EE6               	movwf	postinc1,c
  2343  013AF8  0EFF               	movlw	high STR_9
  2344  013AFA  6EE6               	movwf	postinc1,c
  2345  013AFC  0E00               	movlw	0
  2346  013AFE  6EE6               	movwf	postinc1,c
  2347  013B00  0E01               	movlw	1
  2348  013B02  6EE6               	movwf	postinc1,c
  2349  013B04  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  2350  013B08  0060  F0CB  FFE6   	movff	btemp,postinc1
  2351  013B0E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2352  013B14  0E0C               	movlw	12
  2353  013B16  6EE6               	movwf	postinc1,c
  2354  013B18  EC79  F0B4         	call	_sprintf	;wreg free
  2355                           
  2356                           ;main.c: 262:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C.c
      +                          alc[k], inp_index);
  2357                           ;stkvar	_inp_index @ sp[(-5)+0]
  2358  013B1C  0EFB               	movlw	-5
  2359  013B1E  50E3               	movf	plusw1,w,c
  2360  013B20  6EE6               	movwf	postinc1,c
  2361  013B22  0E00               	movlw	0
  2362  013B24  6EE6               	movwf	postinc1,c
  2363                           
  2364                           ;stkvar	_k @ sp[(-7)+1]
  2365  013B26  0EFA               	movlw	-6
  2366  013B28  50E3               	movf	plusw1,w,c
  2367  013B2A  0D04               	mullw	4
  2368  013B2C  0E00               	movlw	low _C
  2369  013B2E  24F3               	addwf	243,w,c
  2370  013B30  6ED9               	movwf	fsr2l,c
  2371  013B32  0E03               	movlw	high _C
  2372  013B34  20F4               	addwfc	prodh,w,c
  2373  013B36  6EDA               	movwf	fsr2h,c
  2374  013B38  006F FF7B FFE6     	movff	postinc2,postinc1
  2375  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  2376  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
  2377  013B4A  006F FF7B FFE6     	movff	postinc2,postinc1
  2378                           
  2379                           ;stkvar	_k @ sp[(-11)+1]
  2380  013B50  0EF6               	movlw	-10
  2381  013B52  50E3               	movf	plusw1,w,c
  2382  013B54  6EE6               	movwf	postinc1,c
  2383  013B56  ECE0  F0C1         	call	_get_raw_result	;wreg free
  2384  013B5A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2385  013B60  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2386  013B66  0E84               	movlw	low STR_11
  2387  013B68  6EE6               	movwf	postinc1,c
  2388  013B6A  0EFF               	movlw	high STR_11
  2389  013B6C  6EE6               	movwf	postinc1,c
  2390  013B6E  0E00               	movlw	0
  2391  013B70  6EE6               	movwf	postinc1,c
  2392  013B72  0E02               	movlw	2
  2393  013B74  6EE6               	movwf	postinc1,c
  2394  013B76  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  2395  013B7A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2396  013B80  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2397  013B86  0E0C               	movlw	12
  2398  013B88  6EE6               	movwf	postinc1,c
  2399  013B8A  EC79  F0B4         	call	_sprintf	;wreg free
  2400                           
  2401                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  2402  013B8E  0EFA               	movlw	250
  2403  013B90  6EE6               	movwf	postinc1,c
  2404  013B92  0E00               	movlw	0
  2405  013B94  6EE6               	movwf	postinc1,c
  2406  013B96  0E0A               	movlw	10
  2407  013B98  6EE6               	movwf	postinc1,c
  2408  013B9A  EC7B  F0BE         	call	_StartTimer	;wreg free
  2409                           
  2410                           ;main.c: 264:    update_lcd(0);
  2411  013B9E  0E00               	movlw	0
  2412  013BA0  6EE6               	movwf	postinc1,c
  2413  013BA2  ECF2  F0B3         	call	_update_lcd	;wreg free
  2414  013BA6                     l12103:
  2415                           
  2416                           ;main.c: 270:   if (check_help(V.flipper)) {
  2417  013BA6  0101               	movlb	1	; () banked
  2418  013BA8  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2419  013BAA  6EE6               	movwf	postinc1,c
  2420  013BAC  EC59  F0AA         	call	_check_help	;wreg free
  2421  013BB0  5032               	movf	btemp^0,w,c
  2422  013BB2  B4D8               	btfsc	status,2,c
  2423  013BB4  D01E               	goto	l12117
  2424                           
  2425                           ;main.c: 272:    inp_index += 3;
  2426                           ;stkvar	_inp_index @ sp[(-5)+0]
  2427  013BB6  0EFB               	movlw	-5
  2428  013BB8  006F FF8C  F032    	movff	plusw1,btemp
  2429  013BBE  0E03               	movlw	3
  2430  013BC0  2632               	addwf	btemp^0,f,c
  2431  013BC2  0EFB               	movlw	-5
  2432  013BC4  0060  F0CB  FFE3   	movff	btemp,plusw1
  2433                           
  2434                           ;main.c: 273:    i=V_BAT;
  2435                           ;stkvar	_i @ sp[(-5)+3]
  2436  013BCA  0EFE               	movlw	-2
  2437  013BCC  6AE3               	clrf	plusw1,c
  2438  013BCE  84E3               	bsf	plusw1,2,c
  2439                           
  2440                           ;main.c: 274:    j=V_PV;
  2441                           ;stkvar	_j @ sp[(-5)+2]
  2442  013BD0  0EFD               	movlw	-3
  2443  013BD2  6AE3               	clrf	plusw1,c
  2444  013BD4  80E3               	bsf	plusw1,0,c
  2445  013BD6  84E3               	bsf	plusw1,2,c	;indir
  2446                           
  2447                           ;main.c: 275:    k=V_CBUS;
  2448                           ;stkvar	_k @ sp[(-5)+1]
  2449  013BD8  0EFC               	movlw	-4
  2450  013BDA  6AE3               	clrf	plusw1,c
  2451  013BDC  82E3               	bsf	plusw1,1,c
  2452  013BDE  84E3               	bsf	plusw1,2,c	;indir
  2453                           
  2454                           ;main.c: 276:    if (inp_index > 12)
  2455                           ;stkvar	_inp_index @ sp[(-5)+0]
  2456  013BE0  0EFB               	movlw	-5
  2457  013BE2  006F FF8C  F032    	movff	plusw1,btemp
  2458  013BE8  0E0C               	movlw	12
  2459  013BEA  6432               	cpfsgt	btemp^0,c
  2460  013BEC  D002               	goto	l12117
  2461                           
  2462                           ;main.c: 277:     inp_index = 0;
  2463                           ;stkvar	_inp_index @ sp[(-5)+0]
  2464  013BEE  0EFB               	movlw	-5
  2465  013BF0  6AE3               	clrf	plusw1,c
  2466  013BF2                     l12117:
  2467                           
  2468                           ;main.c: 284:   if (V.set_sequ) {
  2469  013BF2  0101               	movlb	1	; () banked
  2470  013BF4  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2471  013BF6  D6D7               	goto	l12071
  2472                           
  2473                           ; BSR set to: 1
  2474                           ;main.c: 285:    if (TimerDone(TMR_INFO)) {
  2475  013BF8  0E07               	movlw	7
  2476  013BFA  6EE6               	movwf	postinc1,c
  2477  013BFC  EC69  F0C1         	call	_TimerDone	;wreg free
  2478  013C00  5032               	movf	btemp^0,w,c
  2479  013C02  B4D8               	btfsc	status,2,c
  2480  013C04  D00B               	goto	l12127
  2481                           
  2482                           ;main.c: 286:     V.set_sequ = 0;
  2483  013C06  0101               	movlb	1	; () banked
  2484  013C08  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2485                           
  2486                           ; BSR set to: 1
  2487                           ;main.c: 287:     set_vterm(0);
  2488  013C0A  0E00               	movlw	0
  2489  013C0C  6EE6               	movwf	postinc1,c
  2490  013C0E  EC2A  F0C2         	call	_set_vterm	;wreg free
  2491                           
  2492                           ; BSR set to: 5
  2493                           ;main.c: 288:     update_lcd(0);
  2494  013C12  0E00               	movlw	0
  2495  013C14  6EE6               	movwf	postinc1,c
  2496  013C16  ECF2  F0B3         	call	_update_lcd	;wreg free
  2497                           
  2498                           ;main.c: 289:    } else {
  2499  013C1A  D6C5               	goto	l12071
  2500  013C1C                     l12127:
  2501                           
  2502                           ;main.c: 290:     set_vterm(2);
  2503  013C1C  0E02               	movlw	2
  2504  013C1E  6EE6               	movwf	postinc1,c
  2505  013C20  EC2A  F0C2         	call	_set_vterm	;wreg free
  2506                           
  2507                           ; BSR set to: 5
  2508                           ;main.c: 291:     update_lcd(2);
  2509  013C24  0E02               	movlw	2
  2510  013C26  6EE6               	movwf	postinc1,c
  2511  013C28  ECF2  F0B3         	call	_update_lcd	;wreg free
  2512  013C2C  D6BC               	goto	l12071
  2513  013C2E                     __end_of_main:
  2514                           	opt callstack 0
  2515                           
  2516 ;; *************** function _start_switch_handler *****************
  2517 ;; Defined at:
  2518 ;;		line 119 in file "dio.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1  [STACK] void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2527 ;; Tracked objects:
  2528 ;;		On entry : 1/4
  2529 ;;		On exit  : 3F/39
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2536 ;;Total ram usage:        0 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    7
  2539 ;; This function calls:
  2540 ;;		_INT1_SetInterruptHandler
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text1
  2547  018382                     __ptext1:
  2548                           	opt callstack 0
  2549  018382                     _start_switch_handler:
  2550                           	opt callstack 23
  2551                           
  2552                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2553                           
  2554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2555                           ;incstack = 0
  2556  018382  0139               	movlb	57	; () banked
  2557  018384  9195               	bcf	149,0,b	;volatile
  2558                           
  2559                           ; BSR set to: 57
  2560                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2561  018386  0E1E               	movlw	low _switch_handler
  2562  018388  6EE6               	movwf	postinc1,c
  2563  01838A  0E62               	movlw	high _switch_handler
  2564  01838C  6EE6               	movwf	postinc1,c
  2565  01838E  0E01               	movlw	low (_switch_handler shr (0+16))
  2566  018390  6EE6               	movwf	postinc1,c
  2567  018392  ECB5  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
  2568                           
  2569                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2570  018396  0E02               	movlw	2
  2571  018398  0100               	movlb	0	; () banked
  2572  01839A  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2576  01839C  0139               	movlb	57	; () banked
  2577  01839E  8195               	bsf	149,0,b	;volatile
  2578                           
  2579                           ; BSR set to: 57
  2580                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2581  0183A0  0012               	return		;funcret
  2582  0183A2                     __end_of_start_switch_handler:
  2583                           	opt callstack 0
  2584                           
  2585 ;; *************** function _start_adc_scan *****************
  2586 ;; Defined at:
  2587 ;;		line 33 in file "daq.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1  [STACK] _Bool 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/5
  2598 ;;		On exit  : 1/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    7
  2608 ;; This function calls:
  2609 ;;		_ADCC_DischargeSampleCapacitor
  2610 ;;		_ADCC_SetADIInterruptHandler
  2611 ;;		_ADCC_SetADTIInterruptHandler
  2612 ;;		_ADCC_StartConversion
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text2
  2619  0176AE                     __ptext2:
  2620                           	opt callstack 0
  2621  0176AE                     _start_adc_scan:
  2622                           	opt callstack 23
  2623                           
  2624                           ;daq.c: 35:  if (R.done)
  2625                           
  2626                           ; BSR set to: 57
  2627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2628                           ;incstack = 0
  2629  0176AE  0100               	movlb	0	; () banked
  2630  0176B0  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2631  0176B2  A4D8               	btfss	status,2,c
  2632  0176B4  0012               	return	
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;daq.c: 38:  R.scan_index = 0;
  2636  0176B6  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2640  0176B8  013A               	movlb	58	; () banked
  2641  0176BA  5140               	movf	64,w,b	;volatile
  2642  0176BC  006E F940  F032    	movff	14928,btemp	;volatile
  2643  0176C2  6A33               	clrf	(btemp+1)^0,c
  2644  0176C4  0060  F0C8  F033   	movff	btemp,btemp+1
  2645  0176CA  6A32               	clrf	btemp^0,c
  2646  0176CC  2632               	addwf	btemp^0,f,c
  2647  0176CE  0E00               	movlw	0
  2648  0176D0  2233               	addwfc	(btemp+1)^0,f,c
  2649  0176D2  0E77               	movlw	119
  2650  0176D4  1432               	andwf	btemp^0,w,c
  2651  0176D6  0100               	movlb	0	; () banked
  2652  0176D8  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2653  0176DA  0E3C               	movlw	60
  2654  0176DC  1433               	andwf	(btemp+1)^0,w,c
  2655  0176DE  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2659  0176E0  0E0C               	movlw	low _adc_int_handler
  2660  0176E2  6EE6               	movwf	postinc1,c
  2661  0176E4  0E86               	movlw	high _adc_int_handler
  2662  0176E6  6EE6               	movwf	postinc1,c
  2663  0176E8  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2664  0176EA  6EE6               	movwf	postinc1,c
  2665  0176EC  ECF1  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2666                           
  2667                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2668  0176F0  0E14               	movlw	low _adc_int_t_handler
  2669  0176F2  6EE6               	movwf	postinc1,c
  2670  0176F4  0E74               	movlw	high _adc_int_t_handler
  2671  0176F6  6EE6               	movwf	postinc1,c
  2672  0176F8  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2673  0176FA  6EE6               	movwf	postinc1,c
  2674  0176FC  ECDD  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2675                           
  2676                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2677  017700  ECE3  F0C2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2678                           
  2679                           ; BSR set to: 62
  2680                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2681  017704  0100               	movlb	0	; () banked
  2682  017706  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2683  017708  0B0F               	andlw	15
  2684  01770A  6EE6               	movwf	postinc1,c
  2685  01770C  EC96  F0C2         	call	_ADCC_StartConversion	;wreg free
  2686                           
  2687                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2688  017710  0012               	return		;funcret
  2689  017712                     __end_of_start_adc_scan:
  2690                           	opt callstack 0
  2691                           
  2692 ;; *************** function _ADCC_StartConversion *****************
  2693 ;; Defined at:
  2694 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  channel         1  [STACK] enum E16136
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1  [STACK] void 
  2701 ;; Registers used:
  2702 ;;		fsr1l, fsr1h
  2703 ;; Tracked objects:
  2704 ;;		On entry : 3F/0
  2705 ;;		On exit  : 3F/3E
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    6
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_start_adc_scan
  2719 ;;		_adc_int_t_handler
  2720 ;; This function uses a reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text3
  2724  01852C                     __ptext3:
  2725                           	opt callstack 0
  2726  01852C                     _ADCC_StartConversion:
  2727                           	opt callstack 6
  2728                           
  2729                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2730                           ;stkvar	_channel @ sp[(0)+-1]
  2731                           
  2732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2733                           ;incstack = 0
  2734  01852C  0EFF               	movlw	-1
  2735  01852E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2736                           
  2737                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2738  018534  013E               	movlb	62	; () banked
  2739  018536  8FF8               	bsf	248,7,b	;volatile
  2740                           
  2741                           ; BSR set to: 62
  2742                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2743  018538  81F8               	bsf	248,0,b	;volatile
  2744                           
  2745                           ; BSR set to: 62
  2746                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2747  01853A  52E5               	movf	postdec1,f,c
  2748  01853C  0012               	return		;funcret
  2749  01853E                     __end_of_ADCC_StartConversion:
  2750                           	opt callstack 0
  2751                           
  2752 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2753 ;; Defined at:
  2754 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1  [STACK] void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 3F/3E
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2772 ;;Total ram usage:        0 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    6
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_start_adc_scan
  2779 ;;		_adc_int_t_handler
  2780 ;; This function uses a reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text4
  2784  0185C6                     __ptext4:
  2785                           	opt callstack 0
  2786  0185C6                     _ADCC_DischargeSampleCapacitor:
  2787                           	opt callstack 6
  2788                           
  2789                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2790                           
  2791                           ; BSR set to: 62
  2792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2793                           ;incstack = 0
  2794  0185C6  0E3B               	movlw	59
  2795  0185C8  013E               	movlb	62	; () banked
  2796  0185CA  6FF1               	movwf	241,b	;volatile
  2797                           
  2798                           ; BSR set to: 62
  2799                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2800  0185CC  0012               	return		;funcret
  2801  0185CE                     __end_of_ADCC_DischargeSampleCapacitor:
  2802                           	opt callstack 0
  2803                           
  2804 ;; *************** function _srand *****************
  2805 ;; Defined at:
  2806 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  s               2  [STACK] unsigned int 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1  [STACK] void 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2815 ;; Tracked objects:
  2816 ;;		On entry : 3F/0
  2817 ;;		On exit  : 3F/1
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    6
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text5
  2835  017DD6                     __ptext5:
  2836                           	opt callstack 0
  2837  017DD6                     _srand:
  2838                           	opt callstack 24
  2839                           
  2840                           ;stkvar	_s @ sp[(0)+-2]
  2841                           
  2842                           ; BSR set to: 62
  2843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2844                           ;incstack = 0
  2845  017DD6  0EFE               	movlw	-2
  2846  017DD8  50E3               	movf	plusw1,w,c
  2847  017DDA  0FFF               	addlw	255
  2848  017DDC  6E3C               	movwf	(btemp+10)^0,c
  2849  017DDE  0EFF               	movlw	-1
  2850  017DE0  006F FF8C  F03D    	movff	plusw1,btemp+11
  2851  017DE6  0EFF               	movlw	255
  2852  017DE8  223D               	addwfc	(btemp+11)^0,f,c
  2853  017DEA  0060  F0F0  F1BB   	movff	btemp+10,_seed
  2854  017DF0  0060  F0F4  F1BC   	movff	btemp+11,_seed+1
  2855  017DF6  0101               	movlb	1	; () banked
  2856  017DF8  6BBD               	clrf	(_seed+2)& (0+255),b
  2857  017DFA  6BBE               	clrf	(_seed+3)& (0+255),b
  2858  017DFC  6BBF               	clrf	(_seed+4)& (0+255),b
  2859  017DFE  6BC0               	clrf	(_seed+5)& (0+255),b
  2860  017E00  6BC1               	clrf	(_seed+6)& (0+255),b
  2861  017E02  6BC2               	clrf	(_seed+7)& (0+255),b
  2862                           
  2863                           ; BSR set to: 1
  2864                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2865  017E04  52E5               	movf	postdec1,f,c
  2866  017E06  52E5               	movf	postdec1,f,c
  2867  017E08  0012               	return		;funcret
  2868  017E0A                     __end_of_srand:
  2869                           	opt callstack 0
  2870                           
  2871 ;; *************** function _init_display *****************
  2872 ;; Defined at:
  2873 ;;		line 37 in file "eadog.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1  [STACK] void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/1
  2884 ;;		On exit  : 3F/3D
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    8
  2894 ;; This function calls:
  2895 ;;		_ringBufS_init
  2896 ;;		_send_lcd_cmd
  2897 ;;		_send_lcd_cmd_long
  2898 ;;		_wdtdelay
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text6
  2905  016AF0                     __ptext6:
  2906                           	opt callstack 0
  2907  016AF0                     _init_display:
  2908                           	opt callstack 22
  2909                           
  2910                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2911                           
  2912                           ; BSR set to: 1
  2913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2914                           ;incstack = 0
  2915  016AF0  0E43               	movlw	low _ring_buf1
  2916  016AF2  0100               	movlb	0	; () banked
  2917  016AF4  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2918  016AF6  0E04               	movlw	high _ring_buf1
  2919  016AF8  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2920                           
  2921                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2922  016AFA  0E00               	movlw	low _ring_buf2
  2923  016AFC  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2924  016AFE  0E04               	movlw	high _ring_buf2
  2925  016B00  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2929  016B02  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  2930  016B08  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  2931  016B0E  EC15  F0C0         	call	_ringBufS_init	;wreg free
  2932                           
  2933                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2934  016B12  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  2935  016B18  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  2936  016B1E  EC15  F0C0         	call	_ringBufS_init	;wreg free
  2937                           
  2938                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2939  016B22  84BE               	bsf	190,2,c	;volatile
  2940  016B24  84BC               	bsf	188,2,c	;volatile
  2941                           
  2942                           ;eadog.c: 46:  wdtdelay(350000);
  2943  016B26  0E30               	movlw	48
  2944  016B28  6EE6               	movwf	postinc1,c
  2945  016B2A  0E57               	movlw	87
  2946  016B2C  6EE6               	movwf	postinc1,c
  2947  016B2E  0E05               	movlw	5
  2948  016B30  6EE6               	movwf	postinc1,c
  2949  016B32  0E00               	movlw	0
  2950  016B34  6EE6               	movwf	postinc1,c
  2951  016B36  EC4C  F0BC         	call	_wdtdelay	;wreg free
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2955  016B3A  0E39               	movlw	57
  2956  016B3C  6EE6               	movwf	postinc1,c
  2957  016B3E  EC01  F0C0         	call	_send_lcd_cmd	;wreg free
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2961  016B42  0E1D               	movlw	29
  2962  016B44  6EE6               	movwf	postinc1,c
  2963  016B46  EC01  F0C0         	call	_send_lcd_cmd	;wreg free
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2967  016B4A  0E50               	movlw	80
  2968  016B4C  6EE6               	movwf	postinc1,c
  2969  016B4E  EC01  F0C0         	call	_send_lcd_cmd	;wreg free
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2973  016B52  0E6C               	movlw	108
  2974  016B54  6EE6               	movwf	postinc1,c
  2975  016B56  EC01  F0C0         	call	_send_lcd_cmd	;wreg free
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2979  016B5A  0E76               	movlw	118
  2980  016B5C  6EE6               	movwf	postinc1,c
  2981  016B5E  EC01  F0C0         	call	_send_lcd_cmd	;wreg free
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2985  016B62  0E38               	movlw	56
  2986  016B64  6EE6               	movwf	postinc1,c
  2987  016B66  ECED  F0BF         	call	_send_lcd_cmd_long	;wreg free
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2991  016B6A  0E0F               	movlw	15
  2992  016B6C  6EE6               	movwf	postinc1,c
  2993  016B6E  EC01  F0C0         	call	_send_lcd_cmd	;wreg free
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2997  016B72  0E01               	movlw	1
  2998  016B74  6EE6               	movwf	postinc1,c
  2999  016B76  ECED  F0BF         	call	_send_lcd_cmd_long	;wreg free
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3003  016B7A  0E02               	movlw	2
  3004  016B7C  6EE6               	movwf	postinc1,c
  3005  016B7E  EC01  F0C0         	call	_send_lcd_cmd	;wreg free
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3009  016B82  0E06               	movlw	6
  3010  016B84  6EE6               	movwf	postinc1,c
  3011  016B86  EC01  F0C0         	call	_send_lcd_cmd	;wreg free
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;eadog.c: 57:  wdtdelay(30);
  3015  016B8A  0E1E               	movlw	30
  3016  016B8C  6EE6               	movwf	postinc1,c
  3017  016B8E  0E00               	movlw	0
  3018  016B90  6EE6               	movwf	postinc1,c
  3019  016B92  0E00               	movlw	0
  3020  016B94  6EE6               	movwf	postinc1,c
  3021  016B96  0E00               	movlw	0
  3022  016B98  6EE6               	movwf	postinc1,c
  3023  016B9A  EC4C  F0BC         	call	_wdtdelay	;wreg free
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3027  016B9E  0E02               	movlw	2
  3028  016BA0  013D               	movlb	61	; () banked
  3029  016BA2  6F16               	movwf	22,b	;volatile
  3030                           
  3031                           ; BSR set to: 61
  3032                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3033  016BA4  0E40               	movlw	64
  3034  016BA6  6F15               	movwf	21,b	;volatile
  3035                           
  3036                           ; BSR set to: 61
  3037                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3038  016BA8  0E83               	movlw	131
  3039  016BAA  6F14               	movwf	20,b	;volatile
  3040                           
  3041                           ; BSR set to: 61
  3042                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3043  016BAC  931A               	bcf	26,1,b	;volatile
  3044                           
  3045                           ; BSR set to: 61
  3046                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3047  016BAE  0E3F               	movlw	-193
  3048  016BB0  013B               	movlb	59	; () banked
  3049  016BB2  17FD               	andwf	253,f,b	;volatile
  3050                           
  3051                           ; BSR set to: 59
  3052                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3053  016BB4  9BFD               	bcf	253,5,b	;volatile
  3054                           
  3055                           ; BSR set to: 59
  3056                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3057  016BB6  51FD               	movf	253,w,b	;volatile
  3058  016BB8  0BF9               	andlw	-7
  3059  016BBA  0902               	iorlw	2
  3060  016BBC  6FFD               	movwf	253,b	;volatile
  3061                           
  3062                           ; BSR set to: 59
  3063                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3064  016BBE  0EE7               	movlw	-25
  3065  016BC0  17FD               	andwf	253,f,b	;volatile
  3066                           
  3067                           ; BSR set to: 59
  3068                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3069  016BC2  81FD               	bsf	253,0,b	;volatile
  3070                           
  3071                           ; BSR set to: 59
  3072                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3073  016BC4  0E43               	movlw	low _ring_buf1
  3074  016BC6  6FF9               	movwf	249,b	;volatile
  3075  016BC8  0E04               	movlw	high _ring_buf1
  3076  016BCA  6FFA               	movwf	250,b	;volatile
  3077  016BCC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3078  016BCE  6FFB               	movwf	251,b	;volatile
  3079                           
  3080                           ; BSR set to: 59
  3081                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3082  016BD0  9BFC               	bcf	252,5,b	;volatile
  3083                           
  3084                           ; BSR set to: 59
  3085                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3086  016BD2  013D               	movlb	61	; () banked
  3087  016BD4  831A               	bsf	26,1,b	;volatile
  3088                           
  3089                           ; BSR set to: 61
  3090                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3091  016BD6  94BE               	bcf	190,2,c	;volatile
  3092                           
  3093                           ; BSR set to: 61
  3094                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3095  016BD8  0012               	return		;funcret
  3096  016BDA                     __end_of_init_display:
  3097                           	opt callstack 0
  3098                           
  3099 ;; *************** function _send_lcd_cmd_long *****************
  3100 ;; Defined at:
  3101 ;;		line 114 in file "eadog.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  cmd             1  [STACK] const unsigned char 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1  [STACK] void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3110 ;; Tracked objects:
  3111 ;;		On entry : 3F/0
  3112 ;;		On exit  : 3F/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3119 ;;Total ram usage:        0 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    7
  3122 ;; This function calls:
  3123 ;;		_SPI1_Exchange8bit
  3124 ;;		_wdtdelay
  3125 ;; This function is called by:
  3126 ;;		_init_display
  3127 ;; This function uses a reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text7
  3131  017FDA                     __ptext7:
  3132                           	opt callstack 0
  3133  017FDA                     _send_lcd_cmd_long:
  3134                           	opt callstack 22
  3135                           
  3136                           ; BSR set to: 61
  3137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3138                           ;incstack = 0
  3139                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3140  017FDA  92BC               	bcf	188,1,c	;volatile
  3141                           
  3142                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3143  017FDC  94BC               	bcf	188,2,c	;volatile
  3144                           
  3145                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3146                           ;stkvar	_cmd @ sp[(0)+-1]
  3147  017FDE  0EFF               	movlw	-1
  3148  017FE0  50E3               	movf	plusw1,w,c
  3149  017FE2  6EE6               	movwf	postinc1,c
  3150  017FE4  ECD1  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3151                           
  3152                           ; BSR set to: 57
  3153                           ;eadog.c: 119:  wdtdelay(800);
  3154  017FE8  0E20               	movlw	32
  3155  017FEA  6EE6               	movwf	postinc1,c
  3156  017FEC  0E03               	movlw	3
  3157  017FEE  6EE6               	movwf	postinc1,c
  3158  017FF0  0E00               	movlw	0
  3159  017FF2  6EE6               	movwf	postinc1,c
  3160  017FF4  0E00               	movlw	0
  3161  017FF6  6EE6               	movwf	postinc1,c
  3162  017FF8  EC4C  F0BC         	call	_wdtdelay	;wreg free
  3163                           
  3164                           ; BSR set to: 0
  3165  017FFC  82BC               	bsf	188,1,c	;volatile
  3166                           
  3167                           ; BSR set to: 0
  3168                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3169  017FFE  52E5               	movf	postdec1,f,c
  3170  018000  0012               	return		;funcret
  3171  018002                     __end_of_send_lcd_cmd_long:
  3172                           	opt callstack 0
  3173                           
  3174 ;; *************** function _send_lcd_cmd *****************
  3175 ;; Defined at:
  3176 ;;		line 102 in file "eadog.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  cmd             1  [STACK] const unsigned char 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1  [STACK] void 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3185 ;; Tracked objects:
  3186 ;;		On entry : 3F/0
  3187 ;;		On exit  : 3F/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    7
  3197 ;; This function calls:
  3198 ;;		_SPI1_Exchange8bit
  3199 ;;		_wdtdelay
  3200 ;; This function is called by:
  3201 ;;		_init_display
  3202 ;; This function uses a reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text8
  3206  018002                     __ptext8:
  3207                           	opt callstack 0
  3208  018002                     _send_lcd_cmd:
  3209                           	opt callstack 22
  3210                           
  3211                           ; BSR set to: 0
  3212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3213                           ;incstack = 0
  3214                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3215  018002  92BC               	bcf	188,1,c	;volatile
  3216                           
  3217                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3218  018004  94BC               	bcf	188,2,c	;volatile
  3219                           
  3220                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3221                           ;stkvar	_cmd @ sp[(0)+-1]
  3222  018006  0EFF               	movlw	-1
  3223  018008  50E3               	movf	plusw1,w,c
  3224  01800A  6EE6               	movwf	postinc1,c
  3225  01800C  ECD1  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3226                           
  3227                           ; BSR set to: 57
  3228                           ;eadog.c: 107:  wdtdelay(30);
  3229  018010  0E1E               	movlw	30
  3230  018012  6EE6               	movwf	postinc1,c
  3231  018014  0E00               	movlw	0
  3232  018016  6EE6               	movwf	postinc1,c
  3233  018018  0E00               	movlw	0
  3234  01801A  6EE6               	movwf	postinc1,c
  3235  01801C  0E00               	movlw	0
  3236  01801E  6EE6               	movwf	postinc1,c
  3237  018020  EC4C  F0BC         	call	_wdtdelay	;wreg free
  3238                           
  3239                           ; BSR set to: 0
  3240  018024  82BC               	bsf	188,1,c	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3244  018026  52E5               	movf	postdec1,f,c
  3245  018028  0012               	return		;funcret
  3246  01802A                     __end_of_send_lcd_cmd:
  3247                           	opt callstack 0
  3248                           
  3249 ;; *************** function _SPI1_Exchange8bit *****************
  3250 ;; Defined at:
  3251 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  data            1  [STACK] unsigned char 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1  [STACK] unsigned char 
  3258 ;; Registers used:
  3259 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 3F/39
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    6
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_send_lcd_cmd
  3276 ;;		_send_lcd_cmd_long
  3277 ;; This function uses a reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text9
  3281  0183A2                     __ptext9:
  3282                           	opt callstack 0
  3283  0183A2                     _SPI1_Exchange8bit:
  3284                           	opt callstack 22
  3285                           
  3286                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3287                           
  3288                           ; BSR set to: 0
  3289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3290                           ;incstack = 0
  3291  0183A2  0E01               	movlw	1
  3292  0183A4  013D               	movlb	61	; () banked
  3293  0183A6  6F12               	movwf	18,b	;volatile
  3294                           
  3295                           ; BSR set to: 61
  3296                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3297                           ;stkvar	_data @ sp[(0)+-1]
  3298  0183A8  0EFF               	movlw	-1
  3299  0183AA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3300  0183B0                     l835:
  3301                           
  3302                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3303  0183B0  0139               	movlb	57	; () banked
  3304  0183B2  A9A2               	btfss	162,4,b	;volatile
  3305  0183B4  D7FD               	goto	l835
  3306                           
  3307                           ; BSR set to: 57
  3308                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3309  0183B6  006F F440  F032    	movff	15632,btemp	;volatile
  3310                           
  3311                           ; BSR set to: 57
  3312                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3313  0183BC  52E5               	movf	postdec1,f,c
  3314  0183BE  0012               	return		;funcret
  3315  0183C0                     __end_of_SPI1_Exchange8bit:
  3316                           	opt callstack 0
  3317                           
  3318 ;; *************** function _ringBufS_init *****************
  3319 ;; Defined at:
  3320 ;;		line 22 in file "ringbufs.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  _this           2  [STACK] PTR volatile struct ring
  3323 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1  [STACK] void 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    7
  3342 ;; This function calls:
  3343 ;;		_memset
  3344 ;; This function is called by:
  3345 ;;		_init_display
  3346 ;; This function uses a reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text10
  3350  01802A                     __ptext10:
  3351                           	opt callstack 0
  3352  01802A                     _ringBufS_init:
  3353                           	opt callstack 22
  3354                           
  3355                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3356                           
  3357                           ; BSR set to: 57
  3358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3359                           ;incstack = 0
  3360  01802A  0E43               	movlw	67
  3361  01802C  6EE6               	movwf	postinc1,c
  3362  01802E  0E00               	movlw	0
  3363  018030  6EE6               	movwf	postinc1,c
  3364  018032  0E00               	movlw	0
  3365  018034  6EE6               	movwf	postinc1,c
  3366  018036  0E00               	movlw	0
  3367  018038  6EE6               	movwf	postinc1,c
  3368                           
  3369                           ;stkvar	__this @ sp[(-4)+-2]
  3370  01803A  0EFA               	movlw	-6
  3371  01803C  006F FF8F FFE6     	movff	plusw1,postinc1
  3372  018042  006F FF8F FFE6     	movff	plusw1,postinc1
  3373  018048  ECEA  F0A3         	call	_memset	;wreg free
  3374                           
  3375                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3376  01804C  52E5               	movf	postdec1,f,c
  3377  01804E  52E5               	movf	postdec1,f,c
  3378  018050  0012               	return		;funcret
  3379  018052                     __end_of_ringBufS_init:
  3380                           	opt callstack 0
  3381                           
  3382 ;; *************** function _get_switch *****************
  3383 ;; Defined at:
  3384 ;;		line 18 in file "dio.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  i               1  [STACK] unsigned char 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1  [STACK] enum E17013
  3391 ;; Registers used:
  3392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/39
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    6
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;; This function uses a reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text11
  3413  018052                     __ptext11:
  3414                           	opt callstack 0
  3415  018052                     _get_switch:
  3416                           	opt callstack 24
  3417                           
  3418                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3419                           ;stkvar	_i @ sp[(0)+-1]
  3420                           
  3421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3422                           ;incstack = 0
  3423  018052  0EFF               	movlw	-1
  3424  018054  006F FF8C  F032    	movff	plusw1,btemp
  3425  01805A  0E03               	movlw	3
  3426  01805C  6432               	cpfsgt	btemp^0,c
  3427  01805E  D002               	goto	l11907
  3428                           
  3429                           ;dio.c: 21:   return SW_OFF;
  3430  018060  0E00               	movlw	0
  3431  018062  D008               	goto	L1
  3432  018064                     l11907:
  3433                           
  3434                           ;dio.c: 23:  return S.button[i].sw;
  3435                           ;stkvar	_i @ sp[(0)+-1]
  3436  018064  0EFF               	movlw	-1
  3437  018066  50E3               	movf	plusw1,w,c
  3438  018068  0D05               	mullw	5
  3439  01806A  50F3               	movf	243,w,c
  3440  01806C  0F60               	addlw	low _S
  3441  01806E  6ED9               	movwf	fsr2l,c
  3442  018070  6ADA               	clrf	fsr2h,c
  3443  018072  50DF               	movf	indf2,w,c
  3444  018074                     L1:
  3445  018074  6E32               	movwf	btemp^0,c
  3446                           
  3447                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3448  018076  52E5               	movf	postdec1,f,c
  3449  018078  0012               	return		;funcret
  3450  01807A                     __end_of_get_switch:
  3451                           	opt callstack 0
  3452                           
  3453 ;; *************** function _eaDogM_WriteCommand *****************
  3454 ;; Defined at:
  3455 ;;		line 160 in file "eadog.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  cmd             1  [STACK] const unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1  [STACK] void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3464 ;; Tracked objects:
  3465 ;;		On entry : 3F/3D
  3466 ;;		On exit  : 3F/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:   16
  3476 ;; This function calls:
  3477 ;;		_send_lcd_cmd_dma
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;; This function uses a reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text12
  3484  01855E                     __ptext12:
  3485                           	opt callstack 0
  3486  01855E                     _eaDogM_WriteCommand:
  3487                           	opt callstack 14
  3488                           
  3489                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3490                           ;stkvar	_cmd @ sp[(0)+-1]
  3491                           
  3492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3493                           ;incstack = 0
  3494  01855E  0EFF               	movlw	-1
  3495  018560  50E3               	movf	plusw1,w,c
  3496  018562  6EE6               	movwf	postinc1,c
  3497  018564  ECD3  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  3498                           
  3499                           ; BSR set to: 0
  3500                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3501  018568  52E5               	movf	postdec1,f,c
  3502  01856A  0012               	return		;funcret
  3503  01856C                     __end_of_eaDogM_WriteCommand:
  3504                           	opt callstack 0
  3505                           
  3506 ;; *************** function _convert_adc_data *****************
  3507 ;; Defined at:
  3508 ;;		line 38 in file "mbmc.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  i               1  [STACK] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1  [STACK] void 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/39
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    9
  3529 ;; This function calls:
  3530 ;;		_conv_raw_result
  3531 ;;		_lp_filter
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text13
  3538  017492                     __ptext13:
  3539                           	opt callstack 0
  3540  017492                     _convert_adc_data:
  3541                           	opt callstack 0
  3542                           
  3543                           ; BSR set to: 0
  3544                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3545  017492  52E6               	movf	postinc1,f,c
  3546                           
  3547                           ;mbmc.c: 40:  uint8_t i = 0;
  3548                           ;stkvar	_i @ sp[(-1)+0]
  3549                           
  3550                           ;incstack = 0
  3551  017494  0EFF               	movlw	-1
  3552  017496  6AE3               	clrf	plusw1,c
  3553  017498                     l11895:
  3554                           
  3555                           ;mbmc.c: 44:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3556  017498  0E01               	movlw	1
  3557  01749A  6EE6               	movwf	postinc1,c
  3558                           
  3559                           ;stkvar	_i @ sp[(-2)+0]
  3560  01749C  0EFE               	movlw	-2
  3561  01749E  50E3               	movf	plusw1,w,c
  3562  0174A0  6EE6               	movwf	postinc1,c
  3563  0174A2  0E01               	movlw	1
  3564  0174A4  6EE6               	movwf	postinc1,c
  3565                           
  3566                           ;stkvar	_i @ sp[(-4)+0]
  3567  0174A6  0EFC               	movlw	-4
  3568  0174A8  50E3               	movf	plusw1,w,c
  3569  0174AA  6EE6               	movwf	postinc1,c
  3570  0174AC  EC71  F099         	call	_conv_raw_result	;wreg free
  3571  0174B0  0060  F0CB  FFE6   	movff	btemp,postinc1
  3572  0174B6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3573  0174BC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3574  0174C2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3575  0174C8  EC53  F0AD         	call	_lp_filter	;wreg free
  3576                           
  3577                           ;stkvar	_i @ sp[(-1)+0]
  3578  0174CC  0EFF               	movlw	-1
  3579  0174CE  50E3               	movf	plusw1,w,c
  3580  0174D0  0D04               	mullw	4
  3581  0174D2  0E00               	movlw	low _C
  3582  0174D4  24F3               	addwf	243,w,c
  3583  0174D6  6ED9               	movwf	fsr2l,c
  3584  0174D8  0E03               	movlw	high _C
  3585  0174DA  20F4               	addwfc	prodh,w,c
  3586  0174DC  6EDA               	movwf	fsr2h,c
  3587  0174DE  0060  F0CB  FFDE   	movff	btemp,postinc2
  3588  0174E4  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3589  0174EA  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3590  0174F0  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3591                           
  3592                           ;mbmc.c: 48:  } while (++i < 16);
  3593                           ;stkvar	_i @ sp[(-1)+0]
  3594  0174F6  0EFF               	movlw	-1
  3595  0174F8  2AE3               	incf	plusw1,f,c
  3596  0174FA  0EFF               	movlw	-1
  3597  0174FC  006F FF8C  F032    	movff	plusw1,btemp
  3598  017502  0E0F               	movlw	15
  3599  017504  6432               	cpfsgt	btemp^0,c
  3600  017506  D7C8               	goto	l11895
  3601                           
  3602                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3603  017508  52E5               	movf	postdec1,f,c
  3604  01750A  0012               	return		;funcret
  3605  01750C                     __end_of_convert_adc_data:
  3606                           	opt callstack 0
  3607                           
  3608 ;; *************** function _lp_filter *****************
  3609 ;; Defined at:
  3610 ;;		line 16 in file "mbmc.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  new             4  [STACK] const float 
  3613 ;;  bn              1  [STACK] const unsigned char 
  3614 ;;  slow            1  [STACK] const char 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  lp_speed        4  [STACK] float 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  4  [STACK] float 
  3619 ;; Registers used:
  3620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/39
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    8
  3633 ;; This function calls:
  3634 ;;		___fladd
  3635 ;;		___flmul
  3636 ;;		___flsub
  3637 ;; This function is called by:
  3638 ;;		_convert_adc_data
  3639 ;; This function uses a reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text14
  3643  015AA6                     __ptext14:
  3644                           	opt callstack 0
  3645  015AA6                     _lp_filter:
  3646                           	opt callstack 0
  3647                           
  3648                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3649  015AA6  52E6               	movf	postinc1,f,c
  3650  015AA8  52E6               	movf	postinc1,f,c
  3651  015AAA  52E6               	movf	postinc1,f,c
  3652  015AAC  52E6               	movf	postinc1,f,c
  3653                           
  3654                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16];;mbmc.c: 19:  float lp_speed;;mbmc.c: 21: 
      +                           if (bn >= 16)
  3655                           ;stkvar	_bn @ sp[(-4)+-5]
  3656                           
  3657                           ;incstack = 0
  3658  015AAE  0EF7               	movlw	-9
  3659  015AB0  006F FF8C  F032    	movff	plusw1,btemp
  3660  015AB6  0E0F               	movlw	15
  3661  015AB8  6432               	cpfsgt	btemp^0,c
  3662  015ABA  D011               	goto	l11749
  3663  015ABC                     u12520:
  3664                           
  3665                           ;mbmc.c: 22:   return new;
  3666                           ;stkvar	_new @ sp[(-4)+-4]
  3667  015ABC  0EF8               	movlw	-8
  3668  015ABE  006F FF8C  F032    	movff	plusw1,btemp
  3669  015AC4  0EF9               	movlw	-7
  3670  015AC6  006F FF8C  F033    	movff	plusw1,btemp+1
  3671  015ACC  0EFA               	movlw	-6
  3672  015ACE  006F FF8C  F034    	movff	plusw1,btemp+2
  3673  015AD4  0EFB               	movlw	-5
  3674  015AD6  006F FF8C  F035    	movff	plusw1,btemp+3
  3675  015ADC  D0BF               	goto	l1693
  3676  015ADE                     l11749:
  3677                           
  3678                           ;mbmc.c: 24:  if (slow == (-1)) {
  3679                           ;stkvar	_slow @ sp[(-4)+-6]
  3680  015ADE  0EF6               	movlw	-10
  3681  015AE0  28E3               	incf	plusw1,w,c
  3682  015AE2  A4D8               	btfss	status,2,c
  3683  015AE4  D012               	goto	l11757
  3684                           
  3685                           ;mbmc.c: 25:   smooth[bn] = 0.0;
  3686                           ;stkvar	_bn @ sp[(-4)+-5]
  3687  015AE6  0EF7               	movlw	-9
  3688  015AE8  50E3               	movf	plusw1,w,c
  3689  015AEA  0D04               	mullw	4
  3690  015AEC  0E00               	movlw	low lp_filter@smooth
  3691  015AEE  24F3               	addwf	243,w,c
  3692  015AF0  6ED9               	movwf	fsr2l,c
  3693  015AF2  0E02               	movlw	high lp_filter@smooth
  3694  015AF4  20F4               	addwfc	prodh,w,c
  3695  015AF6  6EDA               	movwf	fsr2h,c
  3696  015AF8  0E00               	movlw	0
  3697  015AFA  6EDE               	movwf	postinc2,c
  3698  015AFC  0E00               	movlw	0
  3699  015AFE  6EDE               	movwf	postinc2,c
  3700  015B00  0E00               	movlw	0
  3701  015B02  6EDE               	movwf	postinc2,c
  3702  015B04  0E00               	movlw	0
  3703  015B06  6EDD               	movwf	postdec2,c
  3704  015B08  D7D9               	goto	u12520
  3705  015B0A                     l11757:
  3706                           
  3707                           ;mbmc.c: 29:  if (slow) {
  3708                           ;stkvar	_slow @ sp[(-4)+-6]
  3709  015B0A  0EF6               	movlw	-10
  3710  015B0C  50E3               	movf	plusw1,w,c
  3711  015B0E  B4D8               	btfsc	status,2,c
  3712  015B10  D008               	goto	l11761
  3713                           
  3714                           ;mbmc.c: 30:   lp_speed = 0.066;
  3715  015B12  0E02               	movlw	2
  3716  015B14  6E3A               	movwf	(btemp+8)^0,c
  3717  015B16  0E2B               	movlw	43
  3718  015B18  6E3B               	movwf	(btemp+9)^0,c
  3719  015B1A  0E87               	movlw	135
  3720  015B1C  6E3C               	movwf	(btemp+10)^0,c
  3721  015B1E  0E3D               	movlw	61
  3722  015B20  D007               	goto	L2
  3723  015B22                     l11761:
  3724                           
  3725                           ;mbmc.c: 32:   lp_speed = 0.125;
  3726  015B22  0E00               	movlw	0
  3727  015B24  6E3A               	movwf	(btemp+8)^0,c
  3728  015B26  0E00               	movlw	0
  3729  015B28  6E3B               	movwf	(btemp+9)^0,c
  3730  015B2A  0E00               	movlw	0
  3731  015B2C  6E3C               	movwf	(btemp+10)^0,c
  3732  015B2E  0E3E               	movlw	62
  3733  015B30                     L2:
  3734  015B30  6E3D               	movwf	(btemp+11)^0,c
  3735                           
  3736                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3737  015B32  0EFC               	movlw	-4
  3738  015B34  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  3739  015B3A  0EFD               	movlw	-3
  3740  015B3C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  3741  015B42  0EFE               	movlw	-2
  3742  015B44  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  3743  015B4A  0EFF               	movlw	-1
  3744  015B4C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3745                           
  3746                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3747                           ;stkvar	_bn @ sp[(-4)+-5]
  3748  015B52  0EF7               	movlw	-9
  3749  015B54  50E3               	movf	plusw1,w,c
  3750  015B56  0D04               	mullw	4
  3751  015B58  0E00               	movlw	low lp_filter@smooth
  3752  015B5A  24F3               	addwf	243,w,c
  3753  015B5C  6ED9               	movwf	fsr2l,c
  3754  015B5E  0E02               	movlw	high lp_filter@smooth
  3755  015B60  20F4               	addwfc	prodh,w,c
  3756  015B62  6EDA               	movwf	fsr2h,c
  3757  015B64  006F FF7B FFE6     	movff	postinc2,postinc1
  3758  015B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  3759  015B70  006F FF7B FFE6     	movff	postinc2,postinc1
  3760  015B76  006F FF7B FFE6     	movff	postinc2,postinc1
  3761                           
  3762                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3763  015B7C  0EF8               	movlw	-8
  3764  015B7E  006F FF8F FFE6     	movff	plusw1,postinc1
  3765  015B84  006F FF8F FFE6     	movff	plusw1,postinc1
  3766  015B8A  006F FF8F FFE6     	movff	plusw1,postinc1
  3767  015B90  006F FF8F FFE6     	movff	plusw1,postinc1
  3768                           
  3769                           ;stkvar	_bn @ sp[(-12)+-5]
  3770  015B96  0EEF               	movlw	-17
  3771  015B98  50E3               	movf	plusw1,w,c
  3772  015B9A  0D04               	mullw	4
  3773  015B9C  0E00               	movlw	low lp_filter@smooth
  3774  015B9E  24F3               	addwf	243,w,c
  3775  015BA0  6ED9               	movwf	fsr2l,c
  3776  015BA2  0E02               	movlw	high lp_filter@smooth
  3777  015BA4  20F4               	addwfc	prodh,w,c
  3778  015BA6  6EDA               	movwf	fsr2h,c
  3779  015BA8  006F FF7B FFE6     	movff	postinc2,postinc1
  3780  015BAE  006F FF7B FFE6     	movff	postinc2,postinc1
  3781  015BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  3782  015BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  3783                           
  3784                           ;stkvar	_new @ sp[(-16)+-4]
  3785  015BC0  0EEC               	movlw	-20
  3786  015BC2  006F FF8F FFE6     	movff	plusw1,postinc1
  3787  015BC8  006F FF8F FFE6     	movff	plusw1,postinc1
  3788  015BCE  006F FF8F FFE6     	movff	plusw1,postinc1
  3789  015BD4  006F FF8F FFE6     	movff	plusw1,postinc1
  3790  015BDA  EC49  F0BD         	call	___flsub	;wreg free
  3791  015BDE  0060  F0CB  FFE6   	movff	btemp,postinc1
  3792  015BE4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3793  015BEA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3794  015BF0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3795  015BF6  ECC1  F08E         	call	___flmul	;wreg free
  3796  015BFA  0060  F0CB  FFE6   	movff	btemp,postinc1
  3797  015C00  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3798  015C06  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3799  015C0C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3800  015C12  ECD6  F092         	call	___fladd	;wreg free
  3801                           
  3802                           ;stkvar	_bn @ sp[(-4)+-5]
  3803  015C16  0EF7               	movlw	-9
  3804  015C18  50E3               	movf	plusw1,w,c
  3805  015C1A  0D04               	mullw	4
  3806  015C1C  0E00               	movlw	low lp_filter@smooth
  3807  015C1E  24F3               	addwf	243,w,c
  3808  015C20  6ED9               	movwf	fsr2l,c
  3809  015C22  0E02               	movlw	high lp_filter@smooth
  3810  015C24  20F4               	addwfc	prodh,w,c
  3811  015C26  6EDA               	movwf	fsr2h,c
  3812  015C28  0060  F0CB  FFDE   	movff	btemp,postinc2
  3813  015C2E  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3814  015C34  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3815  015C3A  0060  F0D7  FFDD   	movff	btemp+3,postdec2
  3816  015C40  52DD               	movf	postdec2,f,c
  3817  015C42  52DD               	movf	postdec2,f,c
  3818  015C44  006F FF78  F032    	movff	postinc2,btemp
  3819  015C4A  006F FF78  F033    	movff	postinc2,btemp+1
  3820  015C50  006F FF78  F034    	movff	postinc2,btemp+2
  3821  015C56  006F FF78  F035    	movff	postinc2,btemp+3
  3822  015C5C                     l1693:
  3823                           
  3824                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3825  015C5C  0EF6               	movlw	246
  3826  015C5E  26E1               	addwf	fsr1l,f,c
  3827  015C60  0EFF               	movlw	255
  3828  015C62  22E2               	addwfc	fsr1h,f,c
  3829  015C64  0012               	return		;funcret
  3830  015C66                     __end_of_lp_filter:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function _conv_raw_result *****************
  3834 ;; Defined at:
  3835 ;;		line 80 in file "daq.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  chan            1  [STACK] const enum E16136
  3838 ;;  to_what         1  [STACK] const enum E16198
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  4  [STACK] float 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/39
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    8
  3857 ;; This function calls:
  3858 ;;		___fldiv
  3859 ;;		___flmul
  3860 ;;		___flsub
  3861 ;;		___xxtofl
  3862 ;;		_get_raw_result
  3863 ;;		_nanf
  3864 ;; This function is called by:
  3865 ;;		_convert_adc_data
  3866 ;; This function uses a reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text15
  3870  0132E2                     __ptext15:
  3871                           	opt callstack 0
  3872  0132E2                     _conv_raw_result:
  3873                           	opt callstack 21
  3874                           
  3875                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  3876                           
  3877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3878                           ;incstack = 0
  3879  0132E2  D242               	goto	l11733
  3880  0132E4                     l11679:
  3881                           
  3882                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  3883                           ;stkvar	_chan @ sp[(0)+-1]
  3884  0132E4  0EFF               	movlw	-1
  3885  0132E6  006F FF8C  F03D    	movff	plusw1,btemp+11
  3886  0132EC  0E77               	movlw	119
  3887  0132EE  6E3A               	movwf	(btemp+8)^0,c
  3888  0132F0  0E3C               	movlw	60
  3889  0132F2  6E3B               	movwf	(btemp+9)^0,c
  3890  0132F4  2A3D               	incf	(btemp+11)^0,f,c
  3891  0132F6  D003               	goto	u12404
  3892  0132F8                     u12405:
  3893  0132F8  343B               	rlcf	(btemp+9)^0,w,c
  3894  0132FA  323B               	rrcf	(btemp+9)^0,f,c
  3895  0132FC  323A               	rrcf	(btemp+8)^0,f,c
  3896  0132FE                     u12404:
  3897  0132FE  2E3D               	decfsz	(btemp+11)^0,f,c
  3898  013300  D7FB               	goto	u12405
  3899  013302  B03A               	btfsc	(btemp+8)^0,0,c
  3900  013304  D007               	goto	l11685
  3901                           
  3902                           ;daq.c: 86:    return nanf("");
  3903  013306  0E19               	movlw	low (STR_27+18)
  3904  013308  6EE6               	movwf	postinc1,c
  3905  01330A  0EFF               	movlw	high (STR_27+18)
  3906  01330C  6EE6               	movwf	postinc1,c
  3907  01330E  ECBB  F0BB         	call	_nanf	;wreg free
  3908  013312  D23A               	goto	l1656
  3909  013314                     l11685:
  3910                           
  3911                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  3912                           ;stkvar	_chan @ sp[(0)+-1]
  3913  013314  0EFF               	movlw	-1
  3914  013316  006F FF8C  F03D    	movff	plusw1,btemp+11
  3915  01331C  0E03               	movlw	3
  3916  01331E  6E3A               	movwf	(btemp+8)^0,c
  3917  013320  0E00               	movlw	0
  3918  013322  6E3B               	movwf	(btemp+9)^0,c
  3919  013324  2A3D               	incf	(btemp+11)^0,f,c
  3920  013326  D003               	goto	u12424
  3921  013328                     u12425:
  3922  013328  343B               	rlcf	(btemp+9)^0,w,c
  3923  01332A  323B               	rrcf	(btemp+9)^0,f,c
  3924  01332C  323A               	rrcf	(btemp+8)^0,f,c
  3925  01332E                     u12424:
  3926  01332E  2E3D               	decfsz	(btemp+11)^0,f,c
  3927  013330  D7FB               	goto	u12425
  3928  013332  A03A               	btfss	(btemp+8)^0,0,c
  3929  013334  D0EB               	goto	l11699
  3930                           
  3931                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  3932                           ;stkvar	_chan @ sp[(0)+-1]
  3933  013336  0EFF               	movlw	-1
  3934  013338  006F FF8C  F03D    	movff	plusw1,btemp+11
  3935  01333E  0E01               	movlw	1
  3936  013340  6E3A               	movwf	(btemp+8)^0,c
  3937  013342  0E00               	movlw	0
  3938  013344  6E3B               	movwf	(btemp+9)^0,c
  3939  013346  2A3D               	incf	(btemp+11)^0,f,c
  3940  013348  D003               	goto	u12444
  3941  01334A                     u12445:
  3942  01334A  343B               	rlcf	(btemp+9)^0,w,c
  3943  01334C  323B               	rrcf	(btemp+9)^0,f,c
  3944  01334E  323A               	rrcf	(btemp+8)^0,f,c
  3945  013350                     u12444:
  3946  013350  2E3D               	decfsz	(btemp+11)^0,f,c
  3947  013352  D7FB               	goto	u12445
  3948  013354  A03A               	btfss	(btemp+8)^0,0,c
  3949  013356  D06D               	goto	l11695
  3950                           
  3951                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.14385
      +                          00;
  3952  013358  0E6A               	movlw	106
  3953  01335A  6EE6               	movwf	postinc1,c
  3954  01335C  0E4D               	movlw	77
  3955  01335E  6EE6               	movwf	postinc1,c
  3956  013360  0E13               	movlw	19
  3957  013362  6EE6               	movwf	postinc1,c
  3958  013364  0E3E               	movlw	62
  3959  013366  6EE6               	movwf	postinc1,c
  3960  013368  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  3961  01336E  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  3962  013374  0E00               	movlw	0
  3963  013376  BE3B               	btfsc	(btemp+9)^0,7,c
  3964  013378  0EFF               	movlw	255
  3965  01337A  6E3C               	movwf	(btemp+10)^0,c
  3966  01337C  6E3D               	movwf	(btemp+11)^0,c
  3967  01337E  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3968  013384  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3969  01338A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3970  013390  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3971  013396  0E01               	movlw	1
  3972  013398  6EE6               	movwf	postinc1,c
  3973  01339A  EC6D  F0AB         	call	___xxtofl	;wreg free
  3974  01339E  0060  F0CB  FFE6   	movff	btemp,postinc1
  3975  0133A4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3976  0133AA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3977  0133B0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3978                           
  3979                           ;stkvar	_chan @ sp[(-8)+-1]
  3980  0133B6  0EF7               	movlw	-9
  3981  0133B8  50E3               	movf	plusw1,w,c
  3982  0133BA  6EE6               	movwf	postinc1,c
  3983  0133BC  ECE0  F0C1         	call	_get_raw_result	;wreg free
  3984  0133C0  0060  F0C8  F03C   	movff	btemp,btemp+10
  3985  0133C6  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3986  0133CC  503C               	movf	(btemp+10)^0,w,c
  3987  0133CE  6E36               	movwf	(btemp+4)^0,c
  3988  0133D0  503D               	movf	(btemp+11)^0,w,c
  3989  0133D2  6E37               	movwf	(btemp+5)^0,c
  3990  0133D4  6A38               	clrf	(btemp+6)^0,c
  3991  0133D6  6A39               	clrf	(btemp+7)^0,c
  3992  0133D8  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3993  0133DE  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3994  0133E4  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3995  0133EA  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3996  0133F0  0E00               	movlw	0
  3997  0133F2  6EE6               	movwf	postinc1,c
  3998  0133F4  EC6D  F0AB         	call	___xxtofl	;wreg free
  3999  0133F8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4000  0133FE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4001  013404  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4002  01340A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4003  013410  EC49  F0BD         	call	___flsub	;wreg free
  4004  013414  0060  F0CB  FFE6   	movff	btemp,postinc1
  4005  01341A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4006  013420  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4007  013426  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4008  01342C  ECC1  F08E         	call	___flmul	;wreg free
  4009  013430  D1AB               	goto	l1656
  4010  013432                     l11695:
  4011                           
  4012                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.06010
      +                          00;
  4013  013432  0E6B               	movlw	107
  4014  013434  6EE6               	movwf	postinc1,c
  4015  013436  0E2B               	movlw	43
  4016  013438  6EE6               	movwf	postinc1,c
  4017  01343A  0E76               	movlw	118
  4018  01343C  6EE6               	movwf	postinc1,c
  4019  01343E  0E3D               	movlw	61
  4020  013440  6EE6               	movwf	postinc1,c
  4021  013442  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4022  013448  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4023  01344E  0E00               	movlw	0
  4024  013450  BE3B               	btfsc	(btemp+9)^0,7,c
  4025  013452  0EFF               	movlw	255
  4026  013454  6E3C               	movwf	(btemp+10)^0,c
  4027  013456  6E3D               	movwf	(btemp+11)^0,c
  4028  013458  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4029  01345E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4030  013464  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4031  01346A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4032  013470  0E01               	movlw	1
  4033  013472  6EE6               	movwf	postinc1,c
  4034  013474  EC6D  F0AB         	call	___xxtofl	;wreg free
  4035  013478  0060  F0CB  FFE6   	movff	btemp,postinc1
  4036  01347E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4037  013484  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4038  01348A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4039                           
  4040                           ;stkvar	_chan @ sp[(-8)+-1]
  4041  013490  0EF7               	movlw	-9
  4042  013492  50E3               	movf	plusw1,w,c
  4043  013494  6EE6               	movwf	postinc1,c
  4044  013496  ECE0  F0C1         	call	_get_raw_result	;wreg free
  4045  01349A  0060  F0C8  F03C   	movff	btemp,btemp+10
  4046  0134A0  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4047  0134A6  503C               	movf	(btemp+10)^0,w,c
  4048  0134A8  6E36               	movwf	(btemp+4)^0,c
  4049  0134AA  503D               	movf	(btemp+11)^0,w,c
  4050  0134AC  6E37               	movwf	(btemp+5)^0,c
  4051  0134AE  6A38               	clrf	(btemp+6)^0,c
  4052  0134B0  6A39               	clrf	(btemp+7)^0,c
  4053  0134B2  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4054  0134B8  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4055  0134BE  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4056  0134C4  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4057  0134CA  0E00               	movlw	0
  4058  0134CC  6EE6               	movwf	postinc1,c
  4059  0134CE  EC6D  F0AB         	call	___xxtofl	;wreg free
  4060  0134D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  4061  0134D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4062  0134DE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4063  0134E4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4064  0134EA  EC49  F0BD         	call	___flsub	;wreg free
  4065  0134EE  0060  F0CB  FFE6   	movff	btemp,postinc1
  4066  0134F4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4067  0134FA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4068  013500  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4069  013506  ECC1  F08E         	call	___flmul	;wreg free
  4070  01350A  D13E               	goto	l1656
  4071  01350C                     l11699:
  4072                           
  4073                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4074                           ;stkvar	_chan @ sp[(0)+-1]
  4075  01350C  0EFF               	movlw	-1
  4076  01350E  006F FF8C  F03D    	movff	plusw1,btemp+11
  4077  013514  0E00               	movlw	0
  4078  013516  6E3A               	movwf	(btemp+8)^0,c
  4079  013518  0E08               	movlw	8
  4080  01351A  6E3B               	movwf	(btemp+9)^0,c
  4081  01351C  2A3D               	incf	(btemp+11)^0,f,c
  4082  01351E  D003               	goto	u12464
  4083  013520                     u12465:
  4084  013520  343B               	rlcf	(btemp+9)^0,w,c
  4085  013522  323B               	rrcf	(btemp+9)^0,f,c
  4086  013524  323A               	rrcf	(btemp+8)^0,f,c
  4087  013526                     u12464:
  4088  013526  2E3D               	decfsz	(btemp+11)^0,f,c
  4089  013528  D7FB               	goto	u12465
  4090  01352A  A03A               	btfss	(btemp+8)^0,0,c
  4091  01352C  D008               	goto	l11707
  4092                           
  4093                           ;daq.c: 96:     return 25.0;
  4094  01352E  0E00               	movlw	0
  4095  013530  6E32               	movwf	btemp^0,c
  4096  013532  0E00               	movlw	0
  4097  013534  6E33               	movwf	(btemp+1)^0,c
  4098  013536  0EC8               	movlw	200
  4099  013538  6E34               	movwf	(btemp+2)^0,c
  4100  01353A  0E41               	movlw	65
  4101  01353C  D113               	goto	L3
  4102  01353E                     l11707:
  4103                           
  4104                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4105  01353E  0E00               	movlw	0
  4106  013540  6EE6               	movwf	postinc1,c
  4107  013542  0E00               	movlw	0
  4108  013544  6EE6               	movwf	postinc1,c
  4109  013546  0E7A               	movlw	122
  4110  013548  6EE6               	movwf	postinc1,c
  4111  01354A  0E44               	movlw	68
  4112  01354C  6EE6               	movwf	postinc1,c
  4113  01354E  0E61               	movlw	97
  4114  013550  6EE6               	movwf	postinc1,c
  4115  013552  0E03               	movlw	3
  4116  013554  6EE6               	movwf	postinc1,c
  4117  013556  0E84               	movlw	132
  4118  013558  6EE6               	movwf	postinc1,c
  4119  01355A  0E40               	movlw	64
  4120  01355C  6EE6               	movwf	postinc1,c
  4121                           
  4122                           ;stkvar	_chan @ sp[(-8)+-1]
  4123  01355E  0EF7               	movlw	-9
  4124  013560  50E3               	movf	plusw1,w,c
  4125  013562  6EE6               	movwf	postinc1,c
  4126  013564  ECE0  F0C1         	call	_get_raw_result	;wreg free
  4127  013568  0060  F0C8  F03C   	movff	btemp,btemp+10
  4128  01356E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4129  013574  503C               	movf	(btemp+10)^0,w,c
  4130  013576  6E36               	movwf	(btemp+4)^0,c
  4131  013578  503D               	movf	(btemp+11)^0,w,c
  4132  01357A  6E37               	movwf	(btemp+5)^0,c
  4133  01357C  6A38               	clrf	(btemp+6)^0,c
  4134  01357E  6A39               	clrf	(btemp+7)^0,c
  4135  013580  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4136  013586  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4137  01358C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4138  013592  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4139  013598  0E00               	movlw	0
  4140  01359A  6EE6               	movwf	postinc1,c
  4141  01359C  EC6D  F0AB         	call	___xxtofl	;wreg free
  4142  0135A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4143  0135A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4144  0135AC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4145  0135B2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4146  0135B8  ECC1  F08E         	call	___flmul	;wreg free
  4147  0135BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  4148  0135C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4149  0135C8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4150  0135CE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4151  0135D4  ECB4  F096         	call	___fldiv	;wreg free
  4152  0135D8  D0D7               	goto	l1656
  4153  0135DA                     l11711:
  4154                           
  4155                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4156                           ;stkvar	_chan @ sp[(0)+-1]
  4157  0135DA  0EFF               	movlw	-1
  4158  0135DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  4159  0135E2  0E03               	movlw	3
  4160  0135E4  6E3A               	movwf	(btemp+8)^0,c
  4161  0135E6  0E00               	movlw	0
  4162  0135E8  6E3B               	movwf	(btemp+9)^0,c
  4163  0135EA  2A3D               	incf	(btemp+11)^0,f,c
  4164  0135EC  D003               	goto	u12484
  4165  0135EE                     u12485:
  4166  0135EE  343B               	rlcf	(btemp+9)^0,w,c
  4167  0135F0  323B               	rrcf	(btemp+9)^0,f,c
  4168  0135F2  323A               	rrcf	(btemp+8)^0,f,c
  4169  0135F4                     u12484:
  4170  0135F4  2E3D               	decfsz	(btemp+11)^0,f,c
  4171  0135F6  D7FB               	goto	u12485
  4172  0135F8  B03A               	btfsc	(btemp+8)^0,0,c
  4173  0135FA  D011               	goto	u12510
  4174                           
  4175                           ;stkvar	_chan @ sp[(0)+-1]
  4176  0135FC  0EFF               	movlw	-1
  4177  0135FE  006F FF8C  F03D    	movff	plusw1,btemp+11
  4178  013604  0E00               	movlw	0
  4179  013606  6E3A               	movwf	(btemp+8)^0,c
  4180  013608  0E08               	movlw	8
  4181  01360A  6E3B               	movwf	(btemp+9)^0,c
  4182  01360C  2A3D               	incf	(btemp+11)^0,f,c
  4183  01360E  D003               	goto	u12504
  4184  013610                     u12505:
  4185  013610  343B               	rlcf	(btemp+9)^0,w,c
  4186  013612  323B               	rrcf	(btemp+9)^0,f,c
  4187  013614  323A               	rrcf	(btemp+8)^0,f,c
  4188  013616                     u12504:
  4189  013616  2E3D               	decfsz	(btemp+11)^0,f,c
  4190  013618  D7FB               	goto	u12505
  4191  01361A  A03A               	btfss	(btemp+8)^0,0,c
  4192  01361C  D04E               	goto	l11719
  4193  01361E                     u12510:
  4194                           
  4195                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4196  01361E  0E00               	movlw	0
  4197  013620  6EE6               	movwf	postinc1,c
  4198  013622  0E00               	movlw	0
  4199  013624  6EE6               	movwf	postinc1,c
  4200  013626  0E7A               	movlw	122
  4201  013628  6EE6               	movwf	postinc1,c
  4202  01362A  0E44               	movlw	68
  4203  01362C  6EE6               	movwf	postinc1,c
  4204  01362E  0E00               	movlw	0
  4205  013630  6EE6               	movwf	postinc1,c
  4206  013632  0E00               	movlw	0
  4207  013634  6EE6               	movwf	postinc1,c
  4208  013636  0E20               	movlw	32
  4209  013638  6EE6               	movwf	postinc1,c
  4210  01363A  0E3F               	movlw	63
  4211  01363C  6EE6               	movwf	postinc1,c
  4212                           
  4213                           ;stkvar	_chan @ sp[(-8)+-1]
  4214  01363E  0EF7               	movlw	-9
  4215  013640  50E3               	movf	plusw1,w,c
  4216  013642  6EE6               	movwf	postinc1,c
  4217  013644  ECE0  F0C1         	call	_get_raw_result	;wreg free
  4218  013648  0060  F0C8  F03C   	movff	btemp,btemp+10
  4219  01364E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4220  013654  503C               	movf	(btemp+10)^0,w,c
  4221  013656  6E36               	movwf	(btemp+4)^0,c
  4222  013658  503D               	movf	(btemp+11)^0,w,c
  4223  01365A  6E37               	movwf	(btemp+5)^0,c
  4224  01365C  6A38               	clrf	(btemp+6)^0,c
  4225  01365E  6A39               	clrf	(btemp+7)^0,c
  4226  013660  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4227  013666  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4228  01366C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4229  013672  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4230  013678  0E00               	movlw	0
  4231  01367A  6EE6               	movwf	postinc1,c
  4232  01367C  EC6D  F0AB         	call	___xxtofl	;wreg free
  4233  013680  0060  F0CB  FFE6   	movff	btemp,postinc1
  4234  013686  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4235  01368C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4236  013692  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4237  013698  ECC1  F08E         	call	___flmul	;wreg free
  4238  01369C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4239  0136A2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4240  0136A8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4241  0136AE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4242  0136B4  ECB4  F096         	call	___fldiv	;wreg free
  4243  0136B8  D067               	goto	l1656
  4244  0136BA                     l11719:
  4245                           
  4246                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4247  0136BA  0E00               	movlw	0
  4248  0136BC  6EE6               	movwf	postinc1,c
  4249  0136BE  0E00               	movlw	0
  4250  0136C0  6EE6               	movwf	postinc1,c
  4251  0136C2  0E7A               	movlw	122
  4252  0136C4  6EE6               	movwf	postinc1,c
  4253  0136C6  0E44               	movlw	68
  4254  0136C8  6EE6               	movwf	postinc1,c
  4255  0136CA  0E61               	movlw	97
  4256  0136CC  6EE6               	movwf	postinc1,c
  4257  0136CE  0E03               	movlw	3
  4258  0136D0  6EE6               	movwf	postinc1,c
  4259  0136D2  0E84               	movlw	132
  4260  0136D4  6EE6               	movwf	postinc1,c
  4261  0136D6  0E40               	movlw	64
  4262  0136D8  6EE6               	movwf	postinc1,c
  4263                           
  4264                           ;stkvar	_chan @ sp[(-8)+-1]
  4265  0136DA  0EF7               	movlw	-9
  4266  0136DC  50E3               	movf	plusw1,w,c
  4267  0136DE  6EE6               	movwf	postinc1,c
  4268  0136E0  ECE0  F0C1         	call	_get_raw_result	;wreg free
  4269  0136E4  0060  F0C8  F03C   	movff	btemp,btemp+10
  4270  0136EA  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4271  0136F0  503C               	movf	(btemp+10)^0,w,c
  4272  0136F2  6E36               	movwf	(btemp+4)^0,c
  4273  0136F4  503D               	movf	(btemp+11)^0,w,c
  4274  0136F6  6E37               	movwf	(btemp+5)^0,c
  4275  0136F8  6A38               	clrf	(btemp+6)^0,c
  4276  0136FA  6A39               	clrf	(btemp+7)^0,c
  4277  0136FC  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4278  013702  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4279  013708  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4280  01370E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4281  013714  0E00               	movlw	0
  4282  013716  6EE6               	movwf	postinc1,c
  4283  013718  EC6D  F0AB         	call	___xxtofl	;wreg free
  4284  01371C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4285  013722  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4286  013728  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4287  01372E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4288  013734  ECC1  F08E         	call	___flmul	;wreg free
  4289  013738  0060  F0CB  FFE6   	movff	btemp,postinc1
  4290  01373E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4291  013744  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4292  01374A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4293  013750  ECB4  F096         	call	___fldiv	;wreg free
  4294  013754  D019               	goto	l1656
  4295  013756                     l11725:
  4296                           
  4297                           ;daq.c: 109:   return 0.0;
  4298  013756  0E00               	movlw	0
  4299  013758  6E32               	movwf	btemp^0,c
  4300  01375A  0E00               	movlw	0
  4301  01375C  6E33               	movwf	(btemp+1)^0,c
  4302  01375E  0E00               	movlw	0
  4303  013760  6E34               	movwf	(btemp+2)^0,c
  4304  013762  0E00               	movlw	0
  4305  013764                     L3:
  4306  013764  6E35               	movwf	(btemp+3)^0,c
  4307  013766  D010               	goto	l1656
  4308  013768                     l11733:
  4309                           
  4310                           ;stkvar	_to_what @ sp[(0)+-2]
  4311  013768  0EFE               	movlw	-2
  4312  01376A  50E3               	movf	plusw1,w,c
  4313  01376C  6E3C               	movwf	(btemp+10)^0,c
  4314  01376E  6A3D               	clrf	(btemp+11)^0,c
  4315                           
  4316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4317                           ; Switch size 1, requested type "simple"
  4318                           ; Number of cases is 1, Range of values is 0 to 0
  4319                           ; switch strategies available:
  4320                           ; Name         Instructions Cycles
  4321                           ; simple_byte            4     3 (average)
  4322                           ;	Chosen strategy is simple_byte
  4323  013770  503D               	movf	(btemp+11)^0,w,c
  4324  013772  0A00               	xorlw	0	; case 0
  4325  013774  A4D8               	btfss	status,2,c
  4326  013776  D7EF               	goto	l11725
  4327                           
  4328                           ; Switch size 1, requested type "simple"
  4329                           ; Number of cases is 2, Range of values is 0 to 1
  4330                           ; switch strategies available:
  4331                           ; Name         Instructions Cycles
  4332                           ; simple_byte            7     4 (average)
  4333                           ;	Chosen strategy is simple_byte
  4334  013778  503C               	movf	(btemp+10)^0,w,c
  4335  01377A  0A00               	xorlw	0	; case 0
  4336  01377C  B4D8               	btfsc	status,2,c
  4337  01377E  D5B2               	goto	l11679
  4338  013780  0A01               	xorlw	1	; case 1
  4339  013782  B4D8               	btfsc	status,2,c
  4340  013784  D72A               	goto	l11711
  4341  013786  D7E7               	goto	l11725
  4342  013788                     l1656:
  4343                           
  4344                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4345  013788  52E5               	movf	postdec1,f,c
  4346  01378A  52E5               	movf	postdec1,f,c
  4347  01378C  0012               	return		;funcret
  4348  01378E                     __end_of_conv_raw_result:
  4349                           	opt callstack 0
  4350                           
  4351 ;; *************** function _nanf *****************
  4352 ;; Defined at:
  4353 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  s               2  [STACK] PTR const unsigned char 
  4356 ;;		 -> STR_33(1), 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  u               4  [STACK] struct .
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  4  [STACK] float 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/39
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4372 ;;Total ram usage:        0 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    6
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_conv_raw_result
  4379 ;; This function uses a reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text16
  4383  017776                     __ptext16:
  4384                           	opt callstack 0
  4385  017776                     _nanf:
  4386                           	opt callstack 0
  4387                           
  4388                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4389  017776  52E6               	movf	postinc1,f,c
  4390  017778  52E6               	movf	postinc1,f,c
  4391  01777A  52E6               	movf	postinc1,f,c
  4392  01777C  52E6               	movf	postinc1,f,c
  4393                           
  4394                           ;incstack = 0
  4395  01777E  0EFF               	movlw	255
  4396  017780  6E3A               	movwf	(btemp+8)^0,c
  4397  017782  0EFF               	movlw	255
  4398  017784  6E3B               	movwf	(btemp+9)^0,c
  4399  017786  0EFF               	movlw	255
  4400  017788  6E3C               	movwf	(btemp+10)^0,c
  4401  01778A  0E7F               	movlw	127
  4402  01778C  6E3D               	movwf	(btemp+11)^0,c
  4403                           
  4404                           ;stkvar	_u @ sp[(-4)+0]
  4405  01778E  0EFC               	movlw	-4
  4406  017790  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4407  017796  0EFD               	movlw	-3
  4408  017798  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4409  01779E  0EFE               	movlw	-2
  4410  0177A0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4411  0177A6  0EFF               	movlw	-1
  4412  0177A8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4413                           
  4414                           ;stkvar	_u @ sp[(-4)+0]
  4415  0177AE  0EFC               	movlw	-4
  4416  0177B0  006F FF8C  F032    	movff	plusw1,btemp
  4417  0177B6  0EFD               	movlw	-3
  4418  0177B8  006F FF8C  F033    	movff	plusw1,btemp+1
  4419  0177BE  0EFE               	movlw	-2
  4420  0177C0  006F FF8C  F034    	movff	plusw1,btemp+2
  4421  0177C6  0EFF               	movlw	-1
  4422  0177C8  006F FF8C  F035    	movff	plusw1,btemp+3
  4423                           
  4424                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4425  0177CE  0EFA               	movlw	250
  4426  0177D0  26E1               	addwf	fsr1l,f,c
  4427  0177D2  0EFF               	movlw	255
  4428  0177D4  22E2               	addwfc	fsr1h,f,c
  4429  0177D6  0012               	return		;funcret
  4430  0177D8                     __end_of_nanf:
  4431                           	opt callstack 0
  4432                           
  4433 ;; *************** function _get_raw_result *****************
  4434 ;; Defined at:
  4435 ;;		line 72 in file "daq.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  index           1  [STACK] const enum E16136
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  2  [STACK] unsigned short 
  4442 ;; Registers used:
  4443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/39
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4453 ;;Total ram usage:        0 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    6
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;;		_conv_raw_result
  4461 ;; This function uses a reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text17
  4465  0183C0                     __ptext17:
  4466                           	opt callstack 0
  4467  0183C0                     _get_raw_result:
  4468                           	opt callstack 24
  4469                           
  4470                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4471                           ;stkvar	_index @ sp[(0)+-1]
  4472                           
  4473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4474                           ;incstack = 0
  4475  0183C0  0EFF               	movlw	-1
  4476  0183C2  50E3               	movf	plusw1,w,c
  4477  0183C4  0D02               	mullw	2
  4478  0183C6  50F3               	movf	243,w,c
  4479  0183C8  0FC7               	addlw	low _R
  4480  0183CA  6ED9               	movwf	fsr2l,c
  4481  0183CC  6ADA               	clrf	fsr2h,c
  4482  0183CE  006F FF78  F032    	movff	postinc2,btemp
  4483  0183D4  006F FF74  F033    	movff	postdec2,btemp+1
  4484                           
  4485                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4486  0183DA  52E5               	movf	postdec1,f,c
  4487  0183DC  0012               	return		;funcret
  4488  0183DE                     __end_of_get_raw_result:
  4489                           	opt callstack 0
  4490                           
  4491 ;; *************** function ___xxtofl *****************
  4492 ;; Defined at:
  4493 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  sign            1  [STACK] unsigned char 
  4496 ;;  val             4  [STACK] long 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  arg             4  [STACK] unsigned long 
  4499 ;;  exp             1  [STACK] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  4  [STACK] unsigned char 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/39
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    6
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_conv_raw_result
  4520 ;; This function uses a reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text18
  4524  0156DA                     __ptext18:
  4525                           	opt callstack 0
  4526  0156DA                     ___xxtofl:
  4527                           	opt callstack 0
  4528                           
  4529                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4530  0156DA  0E05               	movlw	5
  4531  0156DC  26E1               	addwf	fsr1l,f,c
  4532  0156DE  0E00               	movlw	0
  4533  0156E0  22E2               	addwfc	fsr1h,f,c
  4534                           
  4535                           ;stkvar	_sign @ sp[(-5)+-1]
  4536                           
  4537                           ;incstack = 0
  4538  0156E2  0EFA               	movlw	-6
  4539  0156E4  50E3               	movf	plusw1,w,c
  4540  0156E6  B4D8               	btfsc	status,2,c
  4541  0156E8  D01D               	goto	l11175
  4542                           
  4543                           ;stkvar	_val @ sp[(-5)+-5]
  4544  0156EA  0EF9               	movlw	-7
  4545  0156EC  AEE3               	btfss	plusw1,7,c
  4546  0156EE  D01A               	goto	l11175
  4547                           
  4548                           ;stkvar	_val @ sp[(-5)+-5]
  4549  0156F0  0EF6               	movlw	-10
  4550  0156F2  006F FF8C  F03A    	movff	plusw1,btemp+8
  4551  0156F8  0EF7               	movlw	-9
  4552  0156FA  006F FF8C  F03B    	movff	plusw1,btemp+9
  4553  015700  0EF8               	movlw	-8
  4554  015702  006F FF8C  F03C    	movff	plusw1,btemp+10
  4555  015708  0EF9               	movlw	-7
  4556  01570A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4557  015710  1E3A               	comf	(btemp+8)^0,f,c
  4558  015712  1E3B               	comf	(btemp+9)^0,f,c
  4559  015714  1E3C               	comf	(btemp+10)^0,f,c
  4560  015716  1E3D               	comf	(btemp+11)^0,f,c
  4561  015718  2A3A               	incf	(btemp+8)^0,f,c
  4562  01571A  0E00               	movlw	0
  4563  01571C  223B               	addwfc	(btemp+9)^0,f,c
  4564  01571E  223C               	addwfc	(btemp+10)^0,f,c
  4565  015720  223D               	addwfc	(btemp+11)^0,f,c
  4566  015722  D010               	goto	L4
  4567  015724                     l11175:
  4568                           
  4569                           ;stkvar	_val @ sp[(-5)+-5]
  4570  015724  0EF6               	movlw	-10
  4571  015726  006F FF8C  F03A    	movff	plusw1,btemp+8
  4572  01572C  0EF7               	movlw	-9
  4573  01572E  006F FF8C  F03B    	movff	plusw1,btemp+9
  4574  015734  0EF8               	movlw	-8
  4575  015736  006F FF8C  F03C    	movff	plusw1,btemp+10
  4576  01573C  0EF9               	movlw	-7
  4577  01573E  006F FF8C  F03D    	movff	plusw1,btemp+11
  4578  015744                     L4:
  4579                           
  4580                           ;stkvar	_arg @ sp[(-5)+0]
  4581  015744  0EFB               	movlw	-5
  4582  015746  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4583  01574C  0EFC               	movlw	-4
  4584  01574E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4585  015754  0EFD               	movlw	-3
  4586  015756  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4587  01575C  0EFE               	movlw	-2
  4588  01575E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4589                           
  4590                           ;stkvar	_val @ sp[(-5)+-5]
  4591  015764  0EF6               	movlw	-10
  4592  015766  50E3               	movf	plusw1,w,c
  4593  015768  E113               	bnz	l11183
  4594  01576A  0EF7               	movlw	-9
  4595  01576C  50E3               	movf	plusw1,w,c
  4596  01576E  E110               	bnz	l11183
  4597  015770  0EF8               	movlw	-8
  4598  015772  50E3               	movf	plusw1,w,c
  4599  015774  E10D               	bnz	l11183
  4600  015776  0EF9               	movlw	-7
  4601  015778  50E3               	movf	plusw1,w,c
  4602  01577A  A4D8               	btfss	status,2,c
  4603  01577C  D009               	goto	l11183
  4604  01577E  0E00               	movlw	0
  4605  015780  6E32               	movwf	btemp^0,c
  4606  015782  0E00               	movlw	0
  4607  015784  6E33               	movwf	(btemp+1)^0,c
  4608  015786  0E00               	movlw	0
  4609  015788  6E34               	movwf	(btemp+2)^0,c
  4610  01578A  0E00               	movlw	0
  4611  01578C  6E35               	movwf	(btemp+3)^0,c
  4612  01578E  D0A2               	goto	l2700
  4613  015790                     l11183:
  4614  015790  0E96               	movlw	150
  4615  015792  6E3D               	movwf	(btemp+11)^0,c
  4616                           
  4617                           ;stkvar	_exp @ sp[(-5)+4]
  4618  015794  0EFF               	movlw	-1
  4619  015796  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4620  01579C  D00B               	goto	l11187
  4621  01579E                     l11185:
  4622                           
  4623                           ;stkvar	_exp @ sp[(-5)+4]
  4624  01579E  0EFF               	movlw	-1
  4625  0157A0  2AE3               	incf	plusw1,f,c
  4626                           
  4627                           ;stkvar	_arg @ sp[(-5)+0]
  4628  0157A2  90D8               	bcf	status,0,c
  4629  0157A4  0EFE               	movlw	-2
  4630  0157A6  32E3               	rrcf	plusw1,f,c
  4631  0157A8  0EFD               	movlw	-3
  4632  0157AA  32E3               	rrcf	plusw1,f,c
  4633  0157AC  0EFC               	movlw	-4
  4634  0157AE  32E3               	rrcf	plusw1,f,c
  4635  0157B0  0EFB               	movlw	-5
  4636  0157B2  32E3               	rrcf	plusw1,f,c
  4637  0157B4                     l11187:
  4638                           
  4639                           ;stkvar	_arg @ sp[(-5)+0]
  4640  0157B4  50E1               	movf	fsr1l,w,c
  4641  0157B6  0FFB               	addlw	-5
  4642  0157B8  6ED9               	movwf	fsr2l,c
  4643  0157BA  50E2               	movf	fsr1h,w,c
  4644  0157BC  6EDA               	movwf	fsr2h,c
  4645  0157BE  0EFF               	movlw	255
  4646  0157C0  22DA               	addwfc	fsr2h,f,c
  4647  0157C2  52DE               	movf	postinc2,f,c
  4648  0157C4  52DE               	movf	postinc2,f,c
  4649  0157C6  52DE               	movf	postinc2,f,c
  4650  0157C8  0EFE               	movlw	254
  4651  0157CA  14DD               	andwf	postdec2,w,c
  4652  0157CC  B4D8               	btfsc	status,2,c
  4653  0157CE  D018               	goto	l11195
  4654  0157D0  D7E6               	goto	l11185
  4655  0157D2                     l11189:
  4656                           
  4657                           ;stkvar	_exp @ sp[(-5)+4]
  4658  0157D2  0EFF               	movlw	-1
  4659  0157D4  2AE3               	incf	plusw1,f,c
  4660                           
  4661                           ;stkvar	_arg @ sp[(-5)+0]
  4662  0157D6  50E1               	movf	fsr1l,w,c
  4663  0157D8  0FFB               	addlw	-5
  4664  0157DA  6ED9               	movwf	fsr2l,c
  4665  0157DC  50E2               	movf	fsr1h,w,c
  4666  0157DE  6EDA               	movwf	fsr2h,c
  4667  0157E0  0EFF               	movlw	255
  4668  0157E2  22DA               	addwfc	fsr2h,f,c
  4669  0157E4  2ADE               	incf	postinc2,f,c
  4670  0157E6  0E00               	movlw	0
  4671  0157E8  22DE               	addwfc	postinc2,f,c
  4672  0157EA  22DE               	addwfc	postinc2,f,c
  4673  0157EC  22DE               	addwfc	postinc2,f,c
  4674                           
  4675                           ;stkvar	_arg @ sp[(-5)+0]
  4676  0157EE  90D8               	bcf	status,0,c
  4677  0157F0  0EFE               	movlw	-2
  4678  0157F2  32E3               	rrcf	plusw1,f,c
  4679  0157F4  0EFD               	movlw	-3
  4680  0157F6  32E3               	rrcf	plusw1,f,c
  4681  0157F8  0EFC               	movlw	-4
  4682  0157FA  32E3               	rrcf	plusw1,f,c
  4683  0157FC  0EFB               	movlw	-5
  4684  0157FE  32E3               	rrcf	plusw1,f,c
  4685  015800                     l11195:
  4686                           
  4687                           ;stkvar	_arg @ sp[(-5)+0]
  4688  015800  50E1               	movf	fsr1l,w,c
  4689  015802  0FFB               	addlw	-5
  4690  015804  6ED9               	movwf	fsr2l,c
  4691  015806  50E2               	movf	fsr1h,w,c
  4692  015808  6EDA               	movwf	fsr2h,c
  4693  01580A  0EFF               	movlw	255
  4694  01580C  22DA               	addwfc	fsr2h,f,c
  4695  01580E  52DE               	movf	postinc2,f,c
  4696  015810  52DE               	movf	postinc2,f,c
  4697  015812  52DE               	movf	postinc2,f,c
  4698  015814  0EFF               	movlw	255
  4699  015816  14DD               	andwf	postdec2,w,c
  4700  015818  B4D8               	btfsc	status,2,c
  4701  01581A  D00C               	goto	l11199
  4702  01581C  D7DA               	goto	l11189
  4703  01581E                     l11197:
  4704                           
  4705                           ;stkvar	_exp @ sp[(-5)+4]
  4706  01581E  0EFF               	movlw	-1
  4707  015820  06E3               	decf	plusw1,f,c
  4708                           
  4709                           ;stkvar	_arg @ sp[(-5)+0]
  4710  015822  90D8               	bcf	status,0,c
  4711  015824  0EFB               	movlw	-5
  4712  015826  36E3               	rlcf	plusw1,f,c
  4713  015828  0EFC               	movlw	-4
  4714  01582A  36E3               	rlcf	plusw1,f,c
  4715  01582C  0EFD               	movlw	-3
  4716  01582E  36E3               	rlcf	plusw1,f,c
  4717  015830  0EFE               	movlw	-2
  4718  015832  36E3               	rlcf	plusw1,f,c
  4719  015834                     l11199:
  4720                           
  4721                           ;stkvar	_arg @ sp[(-5)+0]
  4722  015834  0EFD               	movlw	-3
  4723  015836  BEE3               	btfsc	plusw1,7,c
  4724  015838  D007               	goto	u12260
  4725                           
  4726                           ;stkvar	_exp @ sp[(-5)+4]
  4727  01583A  0EFF               	movlw	-1
  4728  01583C  006F FF8C  F032    	movff	plusw1,btemp
  4729  015842  0E02               	movlw	2
  4730  015844  6032               	cpfslt	btemp^0,c
  4731  015846  D7EB               	goto	l11197
  4732  015848                     u12260:
  4733                           
  4734                           ;stkvar	_exp @ sp[(-5)+4]
  4735  015848  0EFF               	movlw	-1
  4736  01584A  B0E3               	btfsc	plusw1,0,c
  4737  01584C  D002               	goto	l11207
  4738                           
  4739                           ;stkvar	_arg @ sp[(-5)+0]
  4740  01584E  0EFD               	movlw	-3
  4741  015850  9EE3               	bcf	plusw1,7,c
  4742  015852                     l11207:
  4743                           
  4744                           ;stkvar	_exp @ sp[(-5)+4]
  4745  015852  50E1               	movf	fsr1l,w,c
  4746  015854  0FFF               	addlw	-1
  4747  015856  6ED9               	movwf	fsr2l,c
  4748  015858  50E2               	movf	fsr1h,w,c
  4749  01585A  6EDA               	movwf	fsr2h,c
  4750  01585C  0EFF               	movlw	255
  4751  01585E  22DA               	addwfc	fsr2h,f,c
  4752  015860  90D8               	bcf	status,0,c
  4753  015862  32DF               	rrcf	indf2,f,c
  4754                           
  4755                           ;stkvar	_exp @ sp[(-5)+4]
  4756  015864  0EFF               	movlw	-1
  4757  015866  006F FF8C  F03D    	movff	plusw1,btemp+11
  4758  01586C  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4759  015872  6A37               	clrf	(btemp+5)^0,c
  4760  015874  6A38               	clrf	(btemp+6)^0,c
  4761  015876  6A39               	clrf	(btemp+7)^0,c
  4762  015878  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4763  01587E  6A38               	clrf	(btemp+6)^0,c
  4764  015880  6A37               	clrf	(btemp+5)^0,c
  4765  015882  6A36               	clrf	(btemp+4)^0,c
  4766                           
  4767                           ;stkvar	_arg @ sp[(-5)+0]
  4768  015884  50E1               	movf	fsr1l,w,c
  4769  015886  0FFB               	addlw	-5
  4770  015888  6ED9               	movwf	fsr2l,c
  4771  01588A  50E2               	movf	fsr1h,w,c
  4772  01588C  6EDA               	movwf	fsr2h,c
  4773  01588E  0EFF               	movlw	255
  4774  015890  22DA               	addwfc	fsr2h,f,c
  4775  015892  5036               	movf	(btemp+4)^0,w,c
  4776  015894  12DE               	iorwf	postinc2,f,c
  4777  015896  5037               	movf	(btemp+5)^0,w,c
  4778  015898  12DE               	iorwf	postinc2,f,c
  4779  01589A  5038               	movf	(btemp+6)^0,w,c
  4780  01589C  12DE               	iorwf	postinc2,f,c
  4781  01589E  5039               	movf	(btemp+7)^0,w,c
  4782  0158A0  12DE               	iorwf	postinc2,f,c
  4783                           
  4784                           ;stkvar	_sign @ sp[(-5)+-1]
  4785  0158A2  0EFA               	movlw	-6
  4786  0158A4  50E3               	movf	plusw1,w,c
  4787  0158A6  B4D8               	btfsc	status,2,c
  4788  0158A8  D005               	goto	l11217
  4789                           
  4790                           ;stkvar	_val @ sp[(-5)+-5]
  4791  0158AA  0EF9               	movlw	-7
  4792  0158AC  AEE3               	btfss	plusw1,7,c
  4793  0158AE  D002               	goto	l11217
  4794                           
  4795                           ;stkvar	_arg @ sp[(-5)+0]
  4796  0158B0  0EFE               	movlw	-2
  4797  0158B2  8EE3               	bsf	plusw1,7,c
  4798  0158B4                     l11217:
  4799                           
  4800                           ;stkvar	_arg @ sp[(-5)+0]
  4801  0158B4  0EFB               	movlw	-5
  4802  0158B6  006F FF8C  F032    	movff	plusw1,btemp
  4803  0158BC  0EFC               	movlw	-4
  4804  0158BE  006F FF8C  F033    	movff	plusw1,btemp+1
  4805  0158C4  0EFD               	movlw	-3
  4806  0158C6  006F FF8C  F034    	movff	plusw1,btemp+2
  4807  0158CC  0EFE               	movlw	-2
  4808  0158CE  006F FF8C  F035    	movff	plusw1,btemp+3
  4809  0158D4                     l2700:
  4810                           
  4811                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4812  0158D4  0EF6               	movlw	246
  4813  0158D6  26E1               	addwf	fsr1l,f,c
  4814  0158D8  0EFF               	movlw	255
  4815  0158DA  22E2               	addwfc	fsr1h,f,c
  4816  0158DC  0012               	return		;funcret
  4817  0158DE                     __end_of___xxtofl:
  4818                           	opt callstack 0
  4819                           
  4820 ;; *************** function _clear_adc_scan *****************
  4821 ;; Defined at:
  4822 ;;		line 64 in file "daq.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1  [STACK] void 
  4829 ;; Registers used:
  4830 ;;		None
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/39
  4833 ;;		On exit  : 3F/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4840 ;;Total ram usage:        0 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    6
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text19
  4851  0185EE                     __ptext19:
  4852                           	opt callstack 0
  4853  0185EE                     _clear_adc_scan:
  4854                           	opt callstack 24
  4855                           
  4856                           ;daq.c: 66:  R.done = 0;
  4857                           
  4858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4859                           ;incstack = 0
  4860  0185EE  0100               	movlb	0	; () banked
  4861  0185F0  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  4862                           
  4863                           ; BSR set to: 0
  4864                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4865  0185F2  0012               	return		;funcret
  4866  0185F4                     __end_of_clear_adc_scan:
  4867                           	opt callstack 0
  4868                           
  4869 ;; *************** function _check_help *****************
  4870 ;; Defined at:
  4871 ;;		line 40 in file "mconfig.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  flipper         1  [STACK] const _Bool 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  estatus         1  [STACK] _Bool 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1  [STACK] _Bool 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4880 ;; Tracked objects:
  4881 ;;		On entry : 3F/1
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4889 ;;Total ram usage:        0 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:   18
  4892 ;; This function calls:
  4893 ;;		_StartTimer
  4894 ;;		_TimerDone
  4895 ;;		_display_help
  4896 ;;		_display_info
  4897 ;;		_get_vterm_ptr
  4898 ;;		_help_button
  4899 ;;		_mode_lamp_bright
  4900 ;;		_mode_lamp_dim
  4901 ;;		_set_display_info
  4902 ;;		_set_temp_display_help
  4903 ;;		_set_vterm
  4904 ;;		_sprintf
  4905 ;;		_update_lcd
  4906 ;;		_vterm_dump
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text20
  4913  0154B2                     __ptext20:
  4914                           	opt callstack 0
  4915  0154B2                     _check_help:
  4916                           	opt callstack 0
  4917                           
  4918                           ; BSR set to: 0
  4919                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4920  0154B2  52E6               	movf	postinc1,f,c
  4921                           
  4922                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  4923                           ;stkvar	_estatus @ sp[(-1)+0]
  4924                           
  4925                           ;incstack = 0
  4926  0154B4  0EFF               	movlw	-1
  4927  0154B6  6AE3               	clrf	plusw1,c
  4928                           
  4929                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  4930  0154B8  EC99  F0BE         	call	_help_button	;wreg free
  4931  0154BC  5032               	movf	btemp^0,w,c
  4932  0154BE  B4D8               	btfsc	status,2,c
  4933  0154C0  D0D3               	goto	l11947
  4934  0154C2  ECE7  F0C2         	call	_display_info	;wreg free
  4935  0154C6  0432               	decf	btemp^0,w,c
  4936  0154C8  B4D8               	btfsc	status,2,c
  4937  0154CA  D0CE               	goto	l11947
  4938                           
  4939                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  4940  0154CC  0EDC               	movlw	220
  4941  0154CE  6EE6               	movwf	postinc1,c
  4942  0154D0  0E05               	movlw	5
  4943  0154D2  6EE6               	movwf	postinc1,c
  4944  0154D4  0E0B               	movlw	11
  4945  0154D6  6EE6               	movwf	postinc1,c
  4946  0154D8  EC7B  F0BE         	call	_StartTimer	;wreg free
  4947                           
  4948                           ;mconfig.c: 48:   if (V.debug)
  4949  0154DC  0101               	movlb	1	; () banked
  4950  0154DE  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4951                           
  4952                           ; BSR set to: 1
  4953                           ;mconfig.c: 49:    vterm_dump();
  4954  0154E0  ECB3  F0B1         	call	_vterm_dump	;wreg free
  4955                           
  4956                           ;mconfig.c: 51:   set_vterm(1);
  4957  0154E4  0E01               	movlw	1
  4958  0154E6  6EE6               	movwf	postinc1,c
  4959  0154E8  EC2A  F0C2         	call	_set_vterm	;wreg free
  4960                           
  4961                           ; BSR set to: 5
  4962                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  4963  0154EC  ECE7  F0C2         	call	_display_info	;wreg free
  4964  0154F0  5032               	movf	btemp^0,w,c
  4965  0154F2  6EE6               	movwf	postinc1,c
  4966  0154F4  ECA7  F0C2         	call	_set_temp_display_help	;wreg free
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  4970  0154F8  0E01               	movlw	1
  4971  0154FA  6EE6               	movwf	postinc1,c
  4972  0154FC  ECEF  F0C1         	call	_set_display_info	;wreg free
  4973                           
  4974                           ;mconfig.c: 54:   if (flipper) {
  4975                           ;stkvar	_flipper @ sp[(-1)+-1]
  4976  015500  0EFE               	movlw	-2
  4977  015502  50E3               	movf	plusw1,w,c
  4978  015504  B4D8               	btfsc	status,2,c
  4979  015506  D019               	goto	l11933
  4980                           
  4981                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4982  015508  0EC1               	movlw	low STR_15
  4983  01550A  6EE6               	movwf	postinc1,c
  4984  01550C  0EFF               	movlw	high STR_15
  4985  01550E  6EE6               	movwf	postinc1,c
  4986  015510  0E1A               	movlw	low STR_17
  4987  015512  6EE6               	movwf	postinc1,c
  4988  015514  0EFF               	movlw	high STR_17
  4989  015516  6EE6               	movwf	postinc1,c
  4990  015518  0E01               	movlw	1
  4991  01551A  6EE6               	movwf	postinc1,c
  4992  01551C  0E00               	movlw	0
  4993  01551E  6EE6               	movwf	postinc1,c
  4994  015520  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  4995  015524  0060  F0CB  FFE6   	movff	btemp,postinc1
  4996  01552A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4997  015530  0E06               	movlw	6
  4998  015532  6EE6               	movwf	postinc1,c
  4999  015534  EC79  F0B4         	call	_sprintf	;wreg free
  5000                           
  5001                           ;mconfig.c: 56:   } else {
  5002  015538  D018               	goto	l1560
  5003  01553A                     l11933:
  5004                           
  5005                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5006  01553A  0ED7               	movlw	low STR_16
  5007  01553C  6EE6               	movwf	postinc1,c
  5008  01553E  0EFF               	movlw	high STR_16
  5009  015540  6EE6               	movwf	postinc1,c
  5010  015542  0E1A               	movlw	low STR_17
  5011  015544  6EE6               	movwf	postinc1,c
  5012  015546  0EFF               	movlw	high STR_17
  5013  015548  6EE6               	movwf	postinc1,c
  5014  01554A  0E01               	movlw	1
  5015  01554C  6EE6               	movwf	postinc1,c
  5016  01554E  0E00               	movlw	0
  5017  015550  6EE6               	movwf	postinc1,c
  5018  015552  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5019  015556  0060  F0CB  FFE6   	movff	btemp,postinc1
  5020  01555C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5021  015562  0E06               	movlw	6
  5022  015564  6EE6               	movwf	postinc1,c
  5023  015566  EC79  F0B4         	call	_sprintf	;wreg free
  5024  01556A                     l1560:
  5025                           
  5026                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5027  01556A  0101               	movlb	1	; () banked
  5028  01556C  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5029  01556E  32E8               	rrcf	wreg,f,c
  5030  015570  32E8               	rrcf	wreg,f,c
  5031  015572  0B03               	andlw	3
  5032  015574  0D24               	mullw	36
  5033  015576  0E12               	movlw	18
  5034  015578  26F3               	addwf	243,f,c
  5035  01557A  0E00               	movlw	0
  5036  01557C  22F4               	addwfc	244,f,c
  5037  01557E  0E5F               	movlw	low _T
  5038  015580  6E3C               	movwf	(btemp+10)^0,c
  5039  015582  0EFE               	movlw	high _T
  5040  015584  6E3D               	movwf	(btemp+11)^0,c
  5041  015586  50F3               	movf	243,w,c
  5042  015588  263C               	addwf	(btemp+10)^0,f,c
  5043  01558A  50F4               	movf	244,w,c
  5044  01558C  223D               	addwfc	(btemp+11)^0,f,c
  5045  01558E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5046  015594  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5047  01559A  0ECD               	movlw	low STR_19
  5048  01559C  6EE6               	movwf	postinc1,c
  5049  01559E  0EFF               	movlw	high STR_19
  5050  0155A0  6EE6               	movwf	postinc1,c
  5051  0155A2  0E01               	movlw	1
  5052  0155A4  6EE6               	movwf	postinc1,c
  5053  0155A6  0E01               	movlw	1
  5054  0155A8  6EE6               	movwf	postinc1,c
  5055  0155AA  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5056  0155AE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5057  0155B4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5058  0155BA  0E06               	movlw	6
  5059  0155BC  6EE6               	movwf	postinc1,c
  5060  0155BE  EC79  F0B4         	call	_sprintf	;wreg free
  5061                           
  5062                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5063  0155C2  0101               	movlb	1	; () banked
  5064  0155C4  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5065  0155C6  32E8               	rrcf	wreg,f,c
  5066  0155C8  32E8               	rrcf	wreg,f,c
  5067  0155CA  0B03               	andlw	3
  5068  0155CC  0D24               	mullw	36
  5069  0155CE  0E5F               	movlw	low _T
  5070  0155D0  6E3C               	movwf	(btemp+10)^0,c
  5071  0155D2  0EFE               	movlw	high _T
  5072  0155D4  6E3D               	movwf	(btemp+11)^0,c
  5073  0155D6  50F3               	movf	243,w,c
  5074  0155D8  263C               	addwf	(btemp+10)^0,f,c
  5075  0155DA  50F4               	movf	244,w,c
  5076  0155DC  223D               	addwfc	(btemp+11)^0,f,c
  5077  0155DE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5078  0155E4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5079  0155EA  0ECD               	movlw	low STR_19
  5080  0155EC  6EE6               	movwf	postinc1,c
  5081  0155EE  0EFF               	movlw	high STR_19
  5082  0155F0  6EE6               	movwf	postinc1,c
  5083  0155F2  0E01               	movlw	1
  5084  0155F4  6EE6               	movwf	postinc1,c
  5085  0155F6  0E02               	movlw	2
  5086  0155F8  6EE6               	movwf	postinc1,c
  5087  0155FA  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5088  0155FE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5089  015604  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5090  01560A  0E06               	movlw	6
  5091  01560C  6EE6               	movwf	postinc1,c
  5092  01560E  EC79  F0B4         	call	_sprintf	;wreg free
  5093                           
  5094                           ;mconfig.c: 61:   V.help_id++;
  5095  015612  EE20  F19B         	lfsr	2,_V+155	;volatile
  5096  015616  38DF               	swapf	223,w,c
  5097  015618  6E3D               	movwf	(btemp+11)^0,c
  5098  01561A  323D               	rrcf	(btemp+11)^0,f,c
  5099  01561C  303D               	rrcf	(btemp+11)^0,w,c
  5100  01561E  0B03               	andlw	3
  5101  015620  6E3D               	movwf	(btemp+11)^0,c
  5102  015622  2A3D               	incf	(btemp+11)^0,f,c
  5103  015624  3A3D               	swapf	(btemp+11)^0,f,c
  5104  015626  363D               	rlcf	(btemp+11)^0,f,c
  5105  015628  363D               	rlcf	(btemp+11)^0,f,c
  5106  01562A  50DF               	movf	223,w,c
  5107  01562C  183D               	xorwf	(btemp+11)^0,w,c
  5108  01562E  0B3F               	andlw	-193
  5109  015630  183D               	xorwf	(btemp+11)^0,w,c
  5110  015632  6EDF               	movwf	223,c
  5111                           
  5112                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  5113  015634  0EB8               	movlw	184
  5114  015636  6EE6               	movwf	postinc1,c
  5115  015638  0E0B               	movlw	11
  5116  01563A  6EE6               	movwf	postinc1,c
  5117  01563C  0E09               	movlw	9
  5118  01563E  6EE6               	movwf	postinc1,c
  5119  015640  EC7B  F0BE         	call	_StartTimer	;wreg free
  5120                           
  5121                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  5122  015644  0EB8               	movlw	184
  5123  015646  6EE6               	movwf	postinc1,c
  5124  015648  0E0B               	movlw	11
  5125  01564A  6EE6               	movwf	postinc1,c
  5126  01564C  0E07               	movlw	7
  5127  01564E  6EE6               	movwf	postinc1,c
  5128  015650  EC7B  F0BE         	call	_StartTimer	;wreg free
  5129                           
  5130                           ;mconfig.c: 64:   mode_lamp_bright();
  5131  015654  ECB6  F0C2         	call	_mode_lamp_bright	;wreg free
  5132                           
  5133                           ;mconfig.c: 65:   update_lcd(1);
  5134  015658  0E01               	movlw	1
  5135  01565A  6EE6               	movwf	postinc1,c
  5136  01565C  ECF2  F0B3         	call	_update_lcd	;wreg free
  5137                           
  5138                           ;mconfig.c: 66:   estatus=1;
  5139                           ;stkvar	_estatus @ sp[(-1)+0]
  5140  015660  0EFF               	movlw	-1
  5141  015662  6AE3               	clrf	plusw1,c
  5142  015664  2AE3               	incf	plusw1,f,c
  5143                           
  5144                           ;mconfig.c: 67:  } else {
  5145  015666  D032               	goto	l11963
  5146  015668                     l11947:
  5147                           
  5148                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  5149  015668  0E09               	movlw	9
  5150  01566A  6EE6               	movwf	postinc1,c
  5151  01566C  EC69  F0C1         	call	_TimerDone	;wreg free
  5152  015670  5032               	movf	btemp^0,w,c
  5153  015672  B4D8               	btfsc	status,2,c
  5154  015674  D02B               	goto	l11963
  5155                           
  5156                           ;mconfig.c: 69:    set_vterm(0);
  5157  015676  0E00               	movlw	0
  5158  015678  6EE6               	movwf	postinc1,c
  5159  01567A  EC2A  F0C2         	call	_set_vterm	;wreg free
  5160                           
  5161                           ; BSR set to: 5
  5162                           ;mconfig.c: 70:    V.help = 0;
  5163  01567E  0101               	movlb	1	; () banked
  5164  015680  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5165                           
  5166                           ; BSR set to: 1
  5167                           ;mconfig.c: 71:    set_display_info(display_help());
  5168  015682  ECEB  F0C2         	call	_display_help	;wreg free
  5169  015686  5032               	movf	btemp^0,w,c
  5170  015688  6EE6               	movwf	postinc1,c
  5171  01568A  ECEF  F0C1         	call	_set_display_info	;wreg free
  5172                           
  5173                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  5174  01568E  0060  F657  FFE6   	movff	_V+149,postinc1
  5175  015694  0060  F65B  FFE6   	movff	_V+150,postinc1
  5176  01569A  EC53  F0C2         	call	_mode_lamp_dim	;wreg free
  5177                           
  5178                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  5179  01569E  0E0B               	movlw	11
  5180  0156A0  6EE6               	movwf	postinc1,c
  5181  0156A2  EC69  F0C1         	call	_TimerDone	;wreg free
  5182  0156A6  5032               	movf	btemp^0,w,c
  5183  0156A8  B4D8               	btfsc	status,2,c
  5184  0156AA  D010               	goto	l11963
  5185                           
  5186                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  5187  0156AC  0101               	movlb	1	; () banked
  5188  0156AE  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5189  0156B0  A4D8               	btfss	status,2,c
  5190  0156B2  D002               	goto	u12640
  5191  0156B4  0E01               	movlw	1
  5192  0156B6  D001               	goto	u12650
  5193  0156B8                     u12640:
  5194  0156B8  0E00               	movlw	0
  5195  0156BA                     u12650:
  5196  0156BA  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5197                           
  5198                           ; BSR set to: 1
  5199                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5200  0156BC  0EDC               	movlw	220
  5201  0156BE  6EE6               	movwf	postinc1,c
  5202  0156C0  0E05               	movlw	5
  5203  0156C2  6EE6               	movwf	postinc1,c
  5204  0156C4  0E0B               	movlw	11
  5205  0156C6  6EE6               	movwf	postinc1,c
  5206  0156C8  EC7B  F0BE         	call	_StartTimer	;wreg free
  5207  0156CC                     l11963:
  5208                           
  5209                           ;mconfig.c: 79:  return estatus;
  5210                           ;stkvar	_estatus @ sp[(-1)+0]
  5211  0156CC  0EFF               	movlw	-1
  5212  0156CE  006F FF8C  F032    	movff	plusw1,btemp
  5213                           
  5214                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5215  0156D4  52E5               	movf	postdec1,f,c
  5216  0156D6  52E5               	movf	postdec1,f,c
  5217  0156D8  0012               	return		;funcret
  5218  0156DA                     __end_of_check_help:
  5219                           	opt callstack 0
  5220                           
  5221 ;; *************** function _vterm_dump *****************
  5222 ;; Defined at:
  5223 ;;		line 121 in file "mconfig.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1  [STACK] void 
  5230 ;; Registers used:
  5231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5232 ;; Tracked objects:
  5233 ;;		On entry : 3F/1
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5241 ;;Total ram usage:        0 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:   17
  5244 ;; This function calls:
  5245 ;;		_WaitMs
  5246 ;;		_eaDogM_WriteStringAtPos
  5247 ;;		_get_vterm_ptr
  5248 ;;		_sprintf
  5249 ;;		_wait_lcd_done
  5250 ;; This function is called by:
  5251 ;;		_check_help
  5252 ;; This function uses a reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text21
  5256  016366                     __ptext21:
  5257                           	opt callstack 0
  5258  016366                     _vterm_dump:
  5259                           	opt callstack 12
  5260                           
  5261                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5262                           
  5263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5264                           ;incstack = 0
  5265  016366  0E01               	movlw	1
  5266  016368  6EE6               	movwf	postinc1,c
  5267  01636A  0E00               	movlw	0
  5268  01636C  6EE6               	movwf	postinc1,c
  5269  01636E  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5270  016372  0060  F0CB  FFE6   	movff	btemp,postinc1
  5271  016378  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5272  01637E  0E00               	movlw	0
  5273  016380  6EE6               	movwf	postinc1,c
  5274  016382  0E00               	movlw	0
  5275  016384  6EE6               	movwf	postinc1,c
  5276  016386  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5277  01638A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5278  016390  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5279  016396  0E95               	movlw	low STR_21
  5280  016398  6EE6               	movwf	postinc1,c
  5281  01639A  0EFF               	movlw	high STR_21
  5282  01639C  6EE6               	movwf	postinc1,c
  5283  01639E  0E01               	movlw	low (_V+1)
  5284  0163A0  6EE6               	movwf	postinc1,c
  5285  0163A2  0E01               	movlw	high (_V+1)
  5286  0163A4  6EE6               	movwf	postinc1,c
  5287  0163A6  0E08               	movlw	8
  5288  0163A8  6EE6               	movwf	postinc1,c
  5289  0163AA  EC79  F0B4         	call	_sprintf	;wreg free
  5290                           
  5291                           ;mconfig.c: 124:  wait_lcd_done();
  5292  0163AE  EC1C  F0C2         	call	_wait_lcd_done	;wreg free
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5296  0163B2  0E01               	movlw	low (_V+1)
  5297  0163B4  6EE6               	movwf	postinc1,c
  5298  0163B6  0E01               	movlw	high (_V+1)
  5299  0163B8  6EE6               	movwf	postinc1,c
  5300  0163BA  0E00               	movlw	0
  5301  0163BC  6EE6               	movwf	postinc1,c
  5302  0163BE  0E00               	movlw	0
  5303  0163C0  6EE6               	movwf	postinc1,c
  5304  0163C2  ECD0  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5305                           
  5306                           ; BSR set to: 59
  5307                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5308  0163C6  0E01               	movlw	1
  5309  0163C8  6EE6               	movwf	postinc1,c
  5310  0163CA  0E01               	movlw	1
  5311  0163CC  6EE6               	movwf	postinc1,c
  5312  0163CE  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5313  0163D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5314  0163D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5315  0163DE  0E00               	movlw	0
  5316  0163E0  6EE6               	movwf	postinc1,c
  5317  0163E2  0E01               	movlw	1
  5318  0163E4  6EE6               	movwf	postinc1,c
  5319  0163E6  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5320  0163EA  0060  F0CB  FFE6   	movff	btemp,postinc1
  5321  0163F0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5322  0163F6  0E95               	movlw	low STR_21
  5323  0163F8  6EE6               	movwf	postinc1,c
  5324  0163FA  0EFF               	movlw	high STR_21
  5325  0163FC  6EE6               	movwf	postinc1,c
  5326  0163FE  0E01               	movlw	low (_V+1)
  5327  016400  6EE6               	movwf	postinc1,c
  5328  016402  0E01               	movlw	high (_V+1)
  5329  016404  6EE6               	movwf	postinc1,c
  5330  016406  0E08               	movlw	8
  5331  016408  6EE6               	movwf	postinc1,c
  5332  01640A  EC79  F0B4         	call	_sprintf	;wreg free
  5333                           
  5334                           ;mconfig.c: 127:  wait_lcd_done();
  5335  01640E  EC1C  F0C2         	call	_wait_lcd_done	;wreg free
  5336                           
  5337                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5338  016412  0E01               	movlw	low (_V+1)
  5339  016414  6EE6               	movwf	postinc1,c
  5340  016416  0E01               	movlw	high (_V+1)
  5341  016418  6EE6               	movwf	postinc1,c
  5342  01641A  0E00               	movlw	0
  5343  01641C  6EE6               	movwf	postinc1,c
  5344  01641E  0E01               	movlw	1
  5345  016420  6EE6               	movwf	postinc1,c
  5346  016422  ECD0  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5347                           
  5348                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5349  016426  0E01               	movlw	1
  5350  016428  6EE6               	movwf	postinc1,c
  5351  01642A  0E02               	movlw	2
  5352  01642C  6EE6               	movwf	postinc1,c
  5353  01642E  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5354  016432  0060  F0CB  FFE6   	movff	btemp,postinc1
  5355  016438  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5356  01643E  0E00               	movlw	0
  5357  016440  6EE6               	movwf	postinc1,c
  5358  016442  0E02               	movlw	2
  5359  016444  6EE6               	movwf	postinc1,c
  5360  016446  EC7F  F0BF         	call	_get_vterm_ptr	;wreg free
  5361  01644A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5362  016450  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5363  016456  0E95               	movlw	low STR_21
  5364  016458  6EE6               	movwf	postinc1,c
  5365  01645A  0EFF               	movlw	high STR_21
  5366  01645C  6EE6               	movwf	postinc1,c
  5367  01645E  0E01               	movlw	low (_V+1)
  5368  016460  6EE6               	movwf	postinc1,c
  5369  016462  0E01               	movlw	high (_V+1)
  5370  016464  6EE6               	movwf	postinc1,c
  5371  016466  0E08               	movlw	8
  5372  016468  6EE6               	movwf	postinc1,c
  5373  01646A  EC79  F0B4         	call	_sprintf	;wreg free
  5374                           
  5375                           ;mconfig.c: 130:  wait_lcd_done();
  5376  01646E  EC1C  F0C2         	call	_wait_lcd_done	;wreg free
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5380  016472  0E01               	movlw	low (_V+1)
  5381  016474  6EE6               	movwf	postinc1,c
  5382  016476  0E01               	movlw	high (_V+1)
  5383  016478  6EE6               	movwf	postinc1,c
  5384  01647A  0E00               	movlw	0
  5385  01647C  6EE6               	movwf	postinc1,c
  5386  01647E  0E02               	movlw	2
  5387  016480  6EE6               	movwf	postinc1,c
  5388  016482  ECD0  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5389                           
  5390                           ; BSR set to: 59
  5391                           ;mconfig.c: 132:  WaitMs(3000);
  5392  016486  0EB8               	movlw	184
  5393  016488  6EE6               	movwf	postinc1,c
  5394  01648A  0E0B               	movlw	11
  5395  01648C  6EE6               	movwf	postinc1,c
  5396  01648E  ECB5  F0BE         	call	_WaitMs	;wreg free
  5397                           
  5398                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5399  016492  0012               	return		;funcret
  5400  016494                     __end_of_vterm_dump:
  5401                           	opt callstack 0
  5402                           
  5403 ;; *************** function _sprintf *****************
  5404 ;; Defined at:
  5405 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  s               2  [STACK] PTR unsigned char 
  5408 ;;		 -> D.lcd(216), D(218), V(187), 
  5409 ;;  fmt             2  [STACK] PTR const unsigned char 
  5410 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5411 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5412 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5413 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5414 ;;		 -> STR_11(17), STR_10(14), STR_9(14), STR_8(17), 
  5415 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5416 ;;		 -> STR_1(17), 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  f               6  [STACK] struct _IO_FILE
  5419 ;;  ap              2  [STACK] PTR void [1]
  5420 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5421 ;;  ret             2    0        int 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  2  [STACK] int 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/5
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:   14
  5438 ;; This function calls:
  5439 ;;		_vfprintf
  5440 ;; This function is called by:
  5441 ;;		_main
  5442 ;;		_check_help
  5443 ;;		_vterm_dump
  5444 ;; This function uses a reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text22
  5448  0168F2                     __ptext22:
  5449                           	opt callstack 0
  5450  0168F2                     _sprintf:
  5451                           	opt callstack 0
  5452                           
  5453                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5454  0168F2  0E08               	movlw	8
  5455  0168F4  26E1               	addwf	fsr1l,f,c
  5456  0168F6  0E00               	movlw	0
  5457  0168F8  22E2               	addwfc	fsr1h,f,c
  5458                           
  5459                           ;incstack = 0
  5460  0168FA  0EFE               	movlw	254
  5461  0168FC  6E3C               	movwf	(btemp+10)^0,c
  5462  0168FE  0EFF               	movlw	255
  5463  016900  6E3D               	movwf	(btemp+11)^0,c
  5464                           
  5465                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5466  016902  0EF5               	movlw	245
  5467  016904  24E1               	addwf	fsr1l,w,c
  5468  016906  6E3A               	movwf	(btemp+8)^0,c
  5469  016908  0EFF               	movlw	255
  5470  01690A  20E2               	addwfc	fsr1h,w,c
  5471  01690C  6E3B               	movwf	(btemp+9)^0,c
  5472  01690E  503C               	movf	(btemp+10)^0,w,c
  5473  016910  263A               	addwf	(btemp+8)^0,f,c
  5474  016912  503D               	movf	(btemp+11)^0,w,c
  5475  016914  223B               	addwfc	(btemp+9)^0,f,c
  5476                           
  5477                           ;stkvar	_ap @ sp[(-8)+6]
  5478  016916  0EFF               	movlw	-1
  5479  016918  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5480  01691E  0EFE               	movlw	-2
  5481  016920  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5482                           
  5483                           ;stkvar	_s @ sp[(-8)+-3]
  5484  016926  0EF5               	movlw	-11
  5485  016928  006F FF8C  F03C    	movff	plusw1,btemp+10
  5486  01692E  0EF6               	movlw	-10
  5487  016930  006F FF8C  F03D    	movff	plusw1,btemp+11
  5488                           
  5489                           ;stkvar	_f @ sp[(-8)+0]
  5490  016936  0EF9               	movlw	-7
  5491  016938  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5492  01693E  0EF8               	movlw	-8
  5493  016940  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5494                           
  5495                           ;stkvar	_f @ sp[(-8)+0]
  5496  016946  0EFA               	movlw	250
  5497  016948  24E1               	addwf	fsr1l,w,c
  5498  01694A  6ED9               	movwf	fsr2l,c
  5499  01694C  0EFF               	movlw	255
  5500  01694E  20E2               	addwfc	fsr1h,w,c
  5501  016950  6EDA               	movwf	fsr2h,c
  5502  016952  0E00               	movlw	0
  5503  016954  6EDE               	movwf	postinc2,c
  5504  016956  0E00               	movlw	0
  5505  016958  6EDD               	movwf	postdec2,c
  5506                           
  5507                           ;stkvar	_f @ sp[(-8)+0]
  5508  01695A  0EFC               	movlw	252
  5509  01695C  24E1               	addwf	fsr1l,w,c
  5510  01695E  6ED9               	movwf	fsr2l,c
  5511  016960  0EFF               	movlw	255
  5512  016962  20E2               	addwfc	fsr1h,w,c
  5513  016964  6EDA               	movwf	fsr2h,c
  5514  016966  0E00               	movlw	0
  5515  016968  6EDE               	movwf	postinc2,c
  5516  01696A  0E00               	movlw	0
  5517  01696C  6EDD               	movwf	postdec2,c
  5518                           
  5519                           ;stkvar	_ap @ sp[(-8)+6]
  5520  01696E  0EFE               	movlw	254
  5521  016970  24E1               	addwf	fsr1l,w,c
  5522  016972  6E32               	movwf	btemp^0,c
  5523  016974  0EFF               	movlw	255
  5524  016976  20E2               	addwfc	fsr1h,w,c
  5525  016978  6E33               	movwf	(btemp+1)^0,c
  5526  01697A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5527  016980  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5528                           
  5529                           ;stkvar	_fmt @ sp[(-10)+-5]
  5530  016986  0EF1               	movlw	-15
  5531  016988  006F FF8F FFE6     	movff	plusw1,postinc1
  5532  01698E  006F FF8F FFE6     	movff	plusw1,postinc1
  5533                           
  5534                           ;stkvar	_f @ sp[(-12)+0]
  5535  016994  0EF4               	movlw	244
  5536  016996  24E1               	addwf	fsr1l,w,c
  5537  016998  6E32               	movwf	btemp^0,c
  5538  01699A  0EFF               	movlw	255
  5539  01699C  20E2               	addwfc	fsr1h,w,c
  5540  01699E  6E33               	movwf	(btemp+1)^0,c
  5541  0169A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  5542  0169A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5543  0169AC  EC6C  F0B7         	call	_vfprintf	;wreg free
  5544                           
  5545                           ;stkvar	_f @ sp[(-8)+0]
  5546  0169B0  0EFA               	movlw	250
  5547  0169B2  24E1               	addwf	fsr1l,w,c
  5548  0169B4  6ED9               	movwf	fsr2l,c
  5549  0169B6  0EFF               	movlw	255
  5550  0169B8  20E2               	addwfc	fsr1h,w,c
  5551  0169BA  6EDA               	movwf	fsr2h,c
  5552  0169BC  006F FF78  F03C    	movff	postinc2,btemp+10
  5553  0169C2  006F FF74  F03D    	movff	postdec2,btemp+11
  5554                           
  5555                           ;stkvar	_s @ sp[(-8)+-3]
  5556  0169C8  0EF5               	movlw	-11
  5557  0169CA  006F FF8C  F03A    	movff	plusw1,btemp+8
  5558  0169D0  0EF6               	movlw	-10
  5559  0169D2  006F FF8C  F03B    	movff	plusw1,btemp+9
  5560  0169D8  503C               	movf	(btemp+10)^0,w,c
  5561  0169DA  243A               	addwf	(btemp+8)^0,w,c
  5562  0169DC  6ED9               	movwf	fsr2l,c
  5563  0169DE  503D               	movf	(btemp+11)^0,w,c
  5564  0169E0  203B               	addwfc	(btemp+9)^0,w,c
  5565  0169E2  6EDA               	movwf	fsr2h,c
  5566  0169E4  0E00               	movlw	0
  5567  0169E6  6EDF               	movwf	indf2,c
  5568                           
  5569                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5570  0169E8  0EF8               	movlw	248
  5571  0169EA  26E1               	addwf	fsr1l,f,c
  5572  0169EC  0EFF               	movlw	255
  5573  0169EE  22E2               	addwfc	fsr1h,f,c
  5574  0169F0  52E5               	movf	postdec1,f,c
  5575  0169F2  50E7               	movf	indf1,w,c
  5576  0169F4  5EE1               	subwf	fsr1l,f,c
  5577  0169F6  0E00               	movlw	0
  5578  0169F8  5AE2               	subwfb	fsr1h,f,c
  5579  0169FA  0012               	return		;funcret
  5580  0169FC                     __end_of_sprintf:
  5581                           	opt callstack 0
  5582                           
  5583 ;; *************** function _get_vterm_ptr *****************
  5584 ;; Defined at:
  5585 ;;		line 116 in file "mconfig.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;  line            1  [STACK] const unsigned char 
  5588 ;;  vterm           1  [STACK] const unsigned char 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  2  [STACK] PTR unsigned char 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/5
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    6
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_main
  5611 ;;		_check_help
  5612 ;;		_vterm_dump
  5613 ;; This function uses a reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text23
  5617  017EFE                     __ptext23:
  5618                           	opt callstack 0
  5619  017EFE                     _get_vterm_ptr:
  5620                           	opt callstack 24
  5621                           
  5622                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  5623                           ;stkvar	_vterm @ sp[(0)+-2]
  5624                           
  5625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5626                           ;incstack = 0
  5627  017EFE  0EFE               	movlw	-2
  5628  017F00  50E3               	movf	plusw1,w,c
  5629  017F02  0B03               	andlw	3
  5630  017F04  0D36               	mullw	54
  5631  017F06  0E00               	movlw	low _D
  5632  017F08  6E32               	movwf	btemp^0,c
  5633  017F0A  0E05               	movlw	high _D
  5634  017F0C  6E33               	movwf	(btemp+1)^0,c
  5635  017F0E  50F3               	movf	243,w,c
  5636  017F10  2632               	addwf	btemp^0,f,c
  5637  017F12  50F4               	movf	244,w,c
  5638  017F14  2233               	addwfc	(btemp+1)^0,f,c
  5639                           
  5640                           ;stkvar	_line @ sp[(0)+-1]
  5641  017F16  0EFF               	movlw	-1
  5642  017F18  50E3               	movf	plusw1,w,c
  5643  017F1A  0B03               	andlw	3
  5644  017F1C  0D12               	mullw	18
  5645  017F1E  50F3               	movf	243,w,c
  5646  017F20  2632               	addwf	btemp^0,f,c
  5647  017F22  50F4               	movf	244,w,c
  5648  017F24  2233               	addwfc	(btemp+1)^0,f,c
  5649                           
  5650                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5651  017F26  52E5               	movf	postdec1,f,c
  5652  017F28  52E5               	movf	postdec1,f,c
  5653  017F2A  0012               	return		;funcret
  5654  017F2C                     __end_of_get_vterm_ptr:
  5655                           	opt callstack 0
  5656                           
  5657 ;; *************** function _WaitMs *****************
  5658 ;; Defined at:
  5659 ;;		line 32 in file "timers.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  numMilliseco    2  [STACK] const unsigned short 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1  [STACK] void 
  5666 ;; Registers used:
  5667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5668 ;; Tracked objects:
  5669 ;;		On entry : 1/1
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5677 ;;Total ram usage:        0 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    7
  5680 ;; This function calls:
  5681 ;;		_StartTimer
  5682 ;;		_TimerDone
  5683 ;; This function is called by:
  5684 ;;		_main
  5685 ;;		_vterm_dump
  5686 ;; This function uses a reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text24
  5690  017D6A                     __ptext24:
  5691                           	opt callstack 0
  5692  017D6A                     _WaitMs:
  5693                           	opt callstack 21
  5694                           
  5695                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5696                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5697                           
  5698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5699                           ;incstack = 0
  5700  017D6A  0EFE               	movlw	-2
  5701  017D6C  006F FF8F FFE6     	movff	plusw1,postinc1
  5702  017D72  006F FF8F FFE6     	movff	plusw1,postinc1
  5703  017D78  0E00               	movlw	0
  5704  017D7A  6EE6               	movwf	postinc1,c
  5705  017D7C  EC7B  F0BE         	call	_StartTimer	;wreg free
  5706                           
  5707                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5708  017D80  D005               	goto	l11137
  5709  017D82                     l1490:
  5710                           
  5711                           ;timers.c: 36:   __nop();
  5712  017D82  F000               	nop	
  5713                           
  5714                           ;timers.c: 37:   __nop();
  5715  017D84  F000               	nop	
  5716                           
  5717                           ;timers.c: 38:   __nop();
  5718  017D86  F000               	nop	
  5719                           
  5720                           ;timers.c: 39:   __nop();
  5721  017D88  F000               	nop	
  5722  017D8A  0004               	clrwdt		;# 
  5723  017D8C                     l11137:
  5724                           
  5725                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5726  017D8C  0E00               	movlw	0
  5727  017D8E  6EE6               	movwf	postinc1,c
  5728  017D90  EC69  F0C1         	call	_TimerDone	;wreg free
  5729  017D94  5032               	movf	btemp^0,w,c
  5730  017D96  B4D8               	btfsc	status,2,c
  5731  017D98  D7F4               	goto	l1490
  5732                           
  5733                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5734  017D9A  52E5               	movf	postdec1,f,c
  5735  017D9C  52E5               	movf	postdec1,f,c
  5736  017D9E  0012               	return		;funcret
  5737  017DA0                     __end_of_WaitMs:
  5738                           	opt callstack 0
  5739                           
  5740 ;; *************** function _update_lcd *****************
  5741 ;; Defined at:
  5742 ;;		line 85 in file "mconfig.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  vterm           1  [STACK] unsigned char 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;		None
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1  [STACK] unsigned char 
  5749 ;; Registers used:
  5750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/5
  5753 ;;		On exit  : 1/1
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5760 ;;Total ram usage:        0 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:   17
  5763 ;; This function calls:
  5764 ;;		_eaDogM_WriteStringAtPos
  5765 ;;		_wait_lcd_done
  5766 ;; This function is called by:
  5767 ;;		_main
  5768 ;;		_check_help
  5769 ;; This function uses a reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text25
  5773  0167E4                     __ptext25:
  5774                           	opt callstack 0
  5775  0167E4                     _update_lcd:
  5776                           	opt callstack 13
  5777                           
  5778                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  5779                           ;stkvar	_vterm @ sp[(0)+-1]
  5780                           
  5781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5782                           ;incstack = 0
  5783  0167E4  0EFF               	movlw	-1
  5784  0167E6  006F FF8C  F032    	movff	plusw1,btemp
  5785  0167EC  0E03               	movlw	3
  5786  0167EE  1632               	andwf	btemp^0,f,c
  5787  0167F0  0EFF               	movlw	-1
  5788  0167F2  0060  F0CB  FFE3   	movff	btemp,plusw1
  5789                           
  5790                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  5791  0167F8  0105               	movlb	5	; () banked
  5792  0167FA  A1D8               	btfss	(_D+216)& (0+255),0,b
  5793  0167FC  D004               	goto	l11591
  5794                           
  5795                           ; BSR set to: 5
  5796                           ;stkvar	_vterm @ sp[(0)+-1]
  5797  0167FE  0EFF               	movlw	-1
  5798  016800  50E3               	movf	plusw1,w,c
  5799  016802  B4D8               	btfsc	status,2,c
  5800  016804  D074               	goto	l1568
  5801  016806                     l11591:
  5802                           
  5803                           ; BSR set to: 5
  5804                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  5805                           ;stkvar	_vterm @ sp[(0)+-1]
  5806  016806  0EFF               	movlw	-1
  5807  016808  50E3               	movf	plusw1,w,c
  5808  01680A  0D36               	mullw	54
  5809  01680C  0E10               	movlw	low (_D+16)
  5810  01680E  24F3               	addwf	243,w,c
  5811  016810  6ED9               	movwf	fsr2l,c
  5812  016812  0E05               	movlw	high (_D+16)
  5813  016814  20F4               	addwfc	prodh,w,c
  5814  016816  6EDA               	movwf	fsr2h,c
  5815  016818  0E00               	movlw	0
  5816  01681A  6EDF               	movwf	indf2,c
  5817                           
  5818                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  5819                           ;stkvar	_vterm @ sp[(0)+-1]
  5820  01681C  0EFF               	movlw	-1
  5821  01681E  50E3               	movf	plusw1,w,c
  5822  016820  0D36               	mullw	54
  5823  016822  0E22               	movlw	low (_D+34)
  5824  016824  24F3               	addwf	243,w,c
  5825  016826  6ED9               	movwf	fsr2l,c
  5826  016828  0E05               	movlw	high (_D+34)
  5827  01682A  20F4               	addwfc	prodh,w,c
  5828  01682C  6EDA               	movwf	fsr2h,c
  5829  01682E  0E00               	movlw	0
  5830  016830  6EDF               	movwf	indf2,c
  5831                           
  5832                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  5833                           ;stkvar	_vterm @ sp[(0)+-1]
  5834  016832  0EFF               	movlw	-1
  5835  016834  50E3               	movf	plusw1,w,c
  5836  016836  0D36               	mullw	54
  5837  016838  0E34               	movlw	low (_D+52)
  5838  01683A  24F3               	addwf	243,w,c
  5839  01683C  6ED9               	movwf	fsr2l,c
  5840  01683E  0E05               	movlw	high (_D+52)
  5841  016840  20F4               	addwfc	prodh,w,c
  5842  016842  6EDA               	movwf	fsr2h,c
  5843  016844  0E00               	movlw	0
  5844  016846  6EDF               	movwf	indf2,c
  5845                           
  5846                           ; BSR set to: 5
  5847                           ;mconfig.c: 95:  wait_lcd_done();
  5848  016848  EC1C  F0C2         	call	_wait_lcd_done	;wreg free
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5852                           ;stkvar	_vterm @ sp[(0)+-1]
  5853  01684C  0EFF               	movlw	-1
  5854  01684E  50E3               	movf	plusw1,w,c
  5855  016850  0D36               	mullw	54
  5856  016852  0E00               	movlw	low _D
  5857  016854  6E3C               	movwf	(btemp+10)^0,c
  5858  016856  0E05               	movlw	high _D
  5859  016858  6E3D               	movwf	(btemp+11)^0,c
  5860  01685A  50F3               	movf	243,w,c
  5861  01685C  263C               	addwf	(btemp+10)^0,f,c
  5862  01685E  50F4               	movf	244,w,c
  5863  016860  223D               	addwfc	(btemp+11)^0,f,c
  5864  016862  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5865  016868  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5866  01686E  0E00               	movlw	0
  5867  016870  6EE6               	movwf	postinc1,c
  5868  016872  0E00               	movlw	0
  5869  016874  6EE6               	movwf	postinc1,c
  5870  016876  ECD0  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5871                           
  5872                           ; BSR set to: 59
  5873                           ;mconfig.c: 97:  wait_lcd_done();
  5874  01687A  EC1C  F0C2         	call	_wait_lcd_done	;wreg free
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5878                           ;stkvar	_vterm @ sp[(0)+-1]
  5879  01687E  0EFF               	movlw	-1
  5880  016880  50E3               	movf	plusw1,w,c
  5881  016882  0D36               	mullw	54
  5882  016884  0E00               	movlw	low _D
  5883  016886  6E3C               	movwf	(btemp+10)^0,c
  5884  016888  0E05               	movlw	high _D
  5885  01688A  6E3D               	movwf	(btemp+11)^0,c
  5886  01688C  0E12               	movlw	18
  5887  01688E  263C               	addwf	(btemp+10)^0,f,c
  5888  016890  0E00               	movlw	0
  5889  016892  223D               	addwfc	(btemp+11)^0,f,c
  5890  016894  50F3               	movf	243,w,c
  5891  016896  263C               	addwf	(btemp+10)^0,f,c
  5892  016898  50F4               	movf	244,w,c
  5893  01689A  223D               	addwfc	(btemp+11)^0,f,c
  5894  01689C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5895  0168A2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5896  0168A8  0E00               	movlw	0
  5897  0168AA  6EE6               	movwf	postinc1,c
  5898  0168AC  0E01               	movlw	1
  5899  0168AE  6EE6               	movwf	postinc1,c
  5900  0168B0  ECD0  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5901                           
  5902                           ; BSR set to: 59
  5903                           ;mconfig.c: 99:  wait_lcd_done();
  5904  0168B4  EC1C  F0C2         	call	_wait_lcd_done	;wreg free
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5908                           ;stkvar	_vterm @ sp[(0)+-1]
  5909  0168B8  0EFF               	movlw	-1
  5910  0168BA  50E3               	movf	plusw1,w,c
  5911  0168BC  0D36               	mullw	54
  5912  0168BE  0E00               	movlw	low _D
  5913  0168C0  6E3C               	movwf	(btemp+10)^0,c
  5914  0168C2  0E05               	movlw	high _D
  5915  0168C4  6E3D               	movwf	(btemp+11)^0,c
  5916  0168C6  0E24               	movlw	36
  5917  0168C8  263C               	addwf	(btemp+10)^0,f,c
  5918  0168CA  0E00               	movlw	0
  5919  0168CC  223D               	addwfc	(btemp+11)^0,f,c
  5920  0168CE  50F3               	movf	243,w,c
  5921  0168D0  263C               	addwf	(btemp+10)^0,f,c
  5922  0168D2  50F4               	movf	244,w,c
  5923  0168D4  223D               	addwfc	(btemp+11)^0,f,c
  5924  0168D6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5925  0168DC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5926  0168E2  0E00               	movlw	0
  5927  0168E4  6EE6               	movwf	postinc1,c
  5928  0168E6  0E02               	movlw	2
  5929  0168E8  6EE6               	movwf	postinc1,c
  5930  0168EA  ECD0  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5931  0168EE                     l1568:
  5932                           
  5933                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5934  0168EE  52E5               	movf	postdec1,f,c
  5935  0168F0  0012               	return		;funcret
  5936  0168F2                     __end_of_update_lcd:
  5937                           	opt callstack 0
  5938                           
  5939 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5940 ;; Defined at:
  5941 ;;		line 252 in file "eadog.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  r               1  [STACK] const unsigned char 
  5944 ;;  c               1  [STACK] const unsigned char 
  5945 ;;  strPtr          2  [STACK] PTR unsigned char 
  5946 ;;		 -> D.lcd(216), D(218), V(187), 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1  [STACK] void 
  5951 ;; Registers used:
  5952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5953 ;; Tracked objects:
  5954 ;;		On entry : 3F/0
  5955 ;;		On exit  : 3F/3B
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:   16
  5965 ;; This function calls:
  5966 ;;		_eaDogM_WriteString
  5967 ;;		_send_lcd_cmd_dma
  5968 ;; This function is called by:
  5969 ;;		_update_lcd
  5970 ;;		_vterm_dump
  5971 ;; This function uses a reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text26
  5975  017DA0                     __ptext26:
  5976                           	opt callstack 0
  5977  017DA0                     _eaDogM_WriteStringAtPos:
  5978                           	opt callstack 13
  5979                           
  5980                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5981                           ;stkvar	_c @ sp[(0)+-2]
  5982                           
  5983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5984                           ;incstack = 0
  5985  017DA0  0EFE               	movlw	-2
  5986  017DA2  006F FF8C  F03D    	movff	plusw1,btemp+11
  5987                           
  5988                           ;stkvar	_r @ sp[(0)+-1]
  5989  017DA8  0EFF               	movlw	-1
  5990  017DAA  50E3               	movf	plusw1,w,c
  5991  017DAC  0D10               	mullw	16
  5992  017DAE  50F3               	movf	243,w,c
  5993  017DB0  243D               	addwf	(btemp+11)^0,w,c
  5994  017DB2  0F80               	addlw	128
  5995  017DB4  6EE6               	movwf	postinc1,c
  5996  017DB6  ECD3  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  5997                           
  5998                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5999                           ;stkvar	_strPtr @ sp[(0)+-4]
  6000  017DBA  0EFC               	movlw	-4
  6001  017DBC  006F FF8F FFE6     	movff	plusw1,postinc1
  6002  017DC2  006F FF8F FFE6     	movff	plusw1,postinc1
  6003  017DC8  ECC0  F0B7         	call	_eaDogM_WriteString	;wreg free
  6004                           
  6005                           ; BSR set to: 59
  6006                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6007  017DCC  52E5               	movf	postdec1,f,c
  6008  017DCE  52E5               	movf	postdec1,f,c
  6009  017DD0  52E5               	movf	postdec1,f,c
  6010  017DD2  52E5               	movf	postdec1,f,c
  6011  017DD4  0012               	return		;funcret
  6012  017DD6                     __end_of_eaDogM_WriteStringAtPos:
  6013                           	opt callstack 0
  6014                           
  6015 ;; *************** function _send_lcd_cmd_dma *****************
  6016 ;; Defined at:
  6017 ;;		line 205 in file "eadog.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  strPtr          1  [STACK] unsigned char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;		None
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1  [STACK] void 
  6024 ;; Registers used:
  6025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/3D
  6028 ;;		On exit  : 3F/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6035 ;;Total ram usage:        0 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:   15
  6038 ;; This function calls:
  6039 ;;		_printf
  6040 ;;		_ringBufS_flush
  6041 ;;		_start_lcd
  6042 ;;		_wait_lcd_done
  6043 ;;		_wait_lcd_set
  6044 ;; This function is called by:
  6045 ;;		_eaDogM_WriteCommand
  6046 ;;		_eaDogM_WriteStringAtPos
  6047 ;; This function uses a reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text27
  6051  0179A6                     __ptext27:
  6052                           	opt callstack 0
  6053  0179A6                     _send_lcd_cmd_dma:
  6054                           	opt callstack 13
  6055                           
  6056                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6057                           
  6058                           ; BSR set to: 59
  6059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6060                           ;incstack = 0
  6061  0179A6  ECFA  F0C2         	call	_wait_lcd_set	;wreg free
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6065  0179AA  0E00               	movlw	0
  6066  0179AC  6EE6               	movwf	postinc1,c
  6067  0179AE  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6068  0179B4  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6069  0179BA  ECB0  F0B8         	call	_ringBufS_flush	;wreg free
  6070  0179BE  92BC               	bcf	188,1,c	;volatile
  6071  0179C0  94BC               	bcf	188,2,c	;volatile
  6072                           
  6073                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6074  0179C2  013B               	movlb	59	; () banked
  6075  0179C4  9FFC               	bcf	252,7,b	;volatile
  6076                           
  6077                           ; BSR set to: 59
  6078                           ;eadog.c: 214:  DMA1SSZ = 1;
  6079  0179C6  0E00               	movlw	0
  6080  0179C8  6FF8               	movwf	248,b	;volatile
  6081  0179CA  0E01               	movlw	1
  6082  0179CC  6FF7               	movwf	247,b	;volatile
  6083                           
  6084                           ; BSR set to: 59
  6085                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6086  0179CE  8FFC               	bsf	252,7,b	;volatile
  6087                           
  6088                           ; BSR set to: 59
  6089                           ;eadog.c: 216:  printf("%c", strPtr);
  6090                           ;stkvar	_strPtr @ sp[(0)+-1]
  6091  0179D0  0EFF               	movlw	-1
  6092  0179D2  50E3               	movf	plusw1,w,c
  6093  0179D4  6EE6               	movwf	postinc1,c
  6094  0179D6  0E00               	movlw	0
  6095  0179D8  6EE6               	movwf	postinc1,c
  6096  0179DA  0EF8               	movlw	low STR_13
  6097  0179DC  6EE6               	movwf	postinc1,c
  6098  0179DE  0EFF               	movlw	high STR_13
  6099  0179E0  6EE6               	movwf	postinc1,c
  6100  0179E2  0E04               	movlw	4
  6101  0179E4  6EE6               	movwf	postinc1,c
  6102  0179E6  ECEC  F0BB         	call	_printf	;wreg free
  6103                           
  6104                           ;eadog.c: 217:  start_lcd();
  6105  0179EA  ECFD  F0C2         	call	_start_lcd	;wreg free
  6106                           
  6107                           ; BSR set to: 59
  6108                           ;eadog.c: 218:  wait_lcd_done();
  6109  0179EE  EC1C  F0C2         	call	_wait_lcd_done	;wreg free
  6110                           
  6111                           ; BSR set to: 0
  6112  0179F2  82BC               	bsf	188,1,c	;volatile
  6113                           
  6114                           ; BSR set to: 0
  6115                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6116  0179F4  52E5               	movf	postdec1,f,c
  6117  0179F6  0012               	return		;funcret
  6118  0179F8                     __end_of_send_lcd_cmd_dma:
  6119                           	opt callstack 0
  6120                           
  6121 ;; *************** function _wait_lcd_done *****************
  6122 ;; Defined at:
  6123 ;;		line 141 in file "eadog.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;		None
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1  [STACK] void 
  6130 ;; Registers used:
  6131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/1
  6134 ;;		On exit  : 3F/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6141 ;;Total ram usage:        0 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    7
  6144 ;; This function calls:
  6145 ;;		_wdtdelay
  6146 ;; This function is called by:
  6147 ;;		_send_lcd_cmd_dma
  6148 ;;		_update_lcd
  6149 ;;		_vterm_dump
  6150 ;; This function uses a reentrant model
  6151 ;;
  6152                           
  6153                           	psect	text28
  6154  018438                     __ptext28:
  6155                           	opt callstack 0
  6156  018438                     _wait_lcd_done:
  6157                           	opt callstack 22
  6158                           
  6159                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6160                           
  6161                           ; BSR set to: 0
  6162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6163                           ;incstack = 0
  6164  018438  0100               	movlb	0	; () banked
  6165  01843A  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6166  01843C  D7FD               	goto	_wait_lcd_done
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;eadog.c: 144:  wdtdelay(50);
  6170  01843E  0E32               	movlw	50
  6171  018440  6EE6               	movwf	postinc1,c
  6172  018442  0E00               	movlw	0
  6173  018444  6EE6               	movwf	postinc1,c
  6174  018446  0E00               	movlw	0
  6175  018448  6EE6               	movwf	postinc1,c
  6176  01844A  0E00               	movlw	0
  6177  01844C  6EE6               	movwf	postinc1,c
  6178  01844E  EC4C  F0BC         	call	_wdtdelay	;wreg free
  6179                           
  6180                           ; BSR set to: 0
  6181                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6182  018452  0012               	return		;funcret
  6183  018454                     __end_of_wait_lcd_done:
  6184                           	opt callstack 0
  6185                           
  6186 ;; *************** function _wdtdelay *****************
  6187 ;; Defined at:
  6188 ;;		line 22 in file "eadog.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  delay           4  [STACK] const unsigned long 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1  [STACK] void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 3F/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6206 ;;Total ram usage:        0 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    6
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_init_display
  6213 ;;		_send_lcd_cmd
  6214 ;;		_send_lcd_cmd_long
  6215 ;;		_wait_lcd_done
  6216 ;; This function uses a reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text29
  6220  017898                     __ptext29:
  6221                           	opt callstack 0
  6222  017898                     _wdtdelay:
  6223                           	opt callstack 22
  6224                           
  6225                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6226                           
  6227                           ; BSR set to: 0
  6228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6229                           ;incstack = 0
  6230  017898  0100               	movlb	0	; () banked
  6231  01789A  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6232  01789C  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6233  01789E  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6234  0178A0  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6235  0178A2                     l1335:
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;eadog.c: 27:   __nop();
  6239  0178A2  F000               	nop	
  6240  0178A4  0004               	clrwdt		;# 
  6241                           
  6242                           ;eadog.c: 29:  };
  6243  0178A6  0E01               	movlw	1
  6244  0178A8  0100               	movlb	0	; () banked
  6245  0178AA  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6246  0178AC  0E00               	movlw	0
  6247  0178AE  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6248  0178B0  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6249  0178B2  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;stkvar	_delay @ sp[(0)+-4]
  6253  0178B4  0EFC               	movlw	-4
  6254  0178B6  006F FF8C  F032    	movff	plusw1,btemp
  6255  0178BC  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6256  0178BE  5C32               	subwf	btemp^0,w,c
  6257  0178C0  0EFD               	movlw	-3
  6258  0178C2  006F FF8C  F032    	movff	plusw1,btemp
  6259  0178C8  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6260  0178CA  5832               	subwfb	btemp^0,w,c
  6261  0178CC  0EFE               	movlw	-2
  6262  0178CE  006F FF8C  F032    	movff	plusw1,btemp
  6263  0178D4  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6264  0178D6  5832               	subwfb	btemp^0,w,c
  6265  0178D8  0EFF               	movlw	-1
  6266  0178DA  006F FF8C  F032    	movff	plusw1,btemp
  6267  0178E0  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6268  0178E2  5832               	subwfb	btemp^0,w,c
  6269  0178E4  B0D8               	btfsc	status,0,c
  6270  0178E6  D7DD               	goto	l1335
  6271                           
  6272                           ; BSR set to: 0
  6273                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6274  0178E8  52E5               	movf	postdec1,f,c
  6275  0178EA  52E5               	movf	postdec1,f,c
  6276  0178EC  52E5               	movf	postdec1,f,c
  6277  0178EE  52E5               	movf	postdec1,f,c
  6278  0178F0  0012               	return		;funcret
  6279  0178F2                     __end_of_wdtdelay:
  6280                           	opt callstack 0
  6281                           
  6282 ;; *************** function _eaDogM_WriteString *****************
  6283 ;; Defined at:
  6284 ;;		line 184 in file "eadog.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  strPtr          2  [STACK] PTR unsigned char 
  6287 ;;		 -> D.lcd(216), D(218), V(187), 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1  [STACK] void 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6294 ;; Tracked objects:
  6295 ;;		On entry : 3F/0
  6296 ;;		On exit  : 3F/3B
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6303 ;;Total ram usage:        0 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:   15
  6306 ;; This function calls:
  6307 ;;		_printf
  6308 ;;		_ringBufS_flush
  6309 ;;		_start_lcd
  6310 ;;		_strlen
  6311 ;;		_wait_lcd_set
  6312 ;; This function is called by:
  6313 ;;		_eaDogM_WriteStringAtPos
  6314 ;; This function uses a reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text30
  6318  016F80                     __ptext30:
  6319                           	opt callstack 0
  6320  016F80                     _eaDogM_WriteString:
  6321                           	opt callstack 13
  6322                           
  6323                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6324                           
  6325                           ; BSR set to: 0
  6326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6327                           ;incstack = 0
  6328  016F80  ECFA  F0C2         	call	_wait_lcd_set	;wreg free
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6332  016F84  0E00               	movlw	0
  6333  016F86  6EE6               	movwf	postinc1,c
  6334  016F88  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6335  016F8E  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6336  016F94  ECB0  F0B8         	call	_ringBufS_flush	;wreg free
  6337  016F98  94BC               	bcf	188,2,c	;volatile
  6338                           
  6339                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6340                           ;stkvar	_strPtr @ sp[(0)+-2]
  6341  016F9A  0EFE               	movlw	-2
  6342  016F9C  006F FF8F FFE6     	movff	plusw1,postinc1
  6343  016FA2  006F FF8F FFE6     	movff	plusw1,postinc1
  6344  016FA8  EC13  F0B8         	call	_strlen	;wreg free
  6345  016FAC  5033               	movf	(btemp+1)^0,w,c
  6346  016FAE  E104               	bnz	u12160
  6347  016FB0  0E41               	movlw	65
  6348  016FB2  5C32               	subwf	btemp^0,w,c
  6349  016FB4  A0D8               	btfss	status,0,c
  6350  016FB6  D010               	goto	l11093
  6351  016FB8                     u12160:
  6352                           
  6353                           ;stkvar	_strPtr @ sp[(0)+-2]
  6354  016FB8  0EFE               	movlw	-2
  6355  016FBA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6356  016FC0  0EFF               	movlw	-1
  6357  016FC2  006F FF8C  F03D    	movff	plusw1,btemp+11
  6358  016FC8  0E40               	movlw	64
  6359  016FCA  243C               	addwf	(btemp+10)^0,w,c
  6360  016FCC  6ED9               	movwf	fsr2l,c
  6361  016FCE  0E00               	movlw	0
  6362  016FD0  203D               	addwfc	(btemp+11)^0,w,c
  6363  016FD2  6EDA               	movwf	fsr2h,c
  6364  016FD4  0E00               	movlw	0
  6365  016FD6  6EDF               	movwf	indf2,c
  6366  016FD8                     l11093:
  6367                           
  6368                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6369  016FD8  013B               	movlb	59	; () banked
  6370  016FDA  9FFC               	bcf	252,7,b	;volatile
  6371                           
  6372                           ; BSR set to: 59
  6373                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6374                           ;stkvar	_strPtr @ sp[(0)+-2]
  6375  016FDC  0EFE               	movlw	-2
  6376  016FDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6377  016FE4  006F FF8F FFE6     	movff	plusw1,postinc1
  6378  016FEA  EC13  F0B8         	call	_strlen	;wreg free
  6379  016FEE  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6380  016FF4  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6381                           
  6382                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6383  016FFA  013B               	movlb	59	; () banked
  6384  016FFC  8FFC               	bsf	252,7,b	;volatile
  6385                           
  6386                           ; BSR set to: 59
  6387                           ;eadog.c: 195:  printf("%s", strPtr);
  6388                           ;stkvar	_strPtr @ sp[(0)+-2]
  6389  016FFE  0EFE               	movlw	-2
  6390  017000  006F FF8F FFE6     	movff	plusw1,postinc1
  6391  017006  006F FF8F FFE6     	movff	plusw1,postinc1
  6392  01700C  0EFB               	movlw	low STR_12
  6393  01700E  6EE6               	movwf	postinc1,c
  6394  017010  0EFF               	movlw	high STR_12
  6395  017012  6EE6               	movwf	postinc1,c
  6396  017014  0E04               	movlw	4
  6397  017016  6EE6               	movwf	postinc1,c
  6398  017018  ECEC  F0BB         	call	_printf	;wreg free
  6399                           
  6400                           ;eadog.c: 196:  start_lcd();
  6401  01701C  ECFD  F0C2         	call	_start_lcd	;wreg free
  6402                           
  6403                           ; BSR set to: 59
  6404                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6405  017020  52E5               	movf	postdec1,f,c
  6406  017022  52E5               	movf	postdec1,f,c
  6407  017024  0012               	return		;funcret
  6408  017026                     __end_of_eaDogM_WriteString:
  6409                           	opt callstack 0
  6410                           
  6411 ;; *************** function _wait_lcd_set *****************
  6412 ;; Defined at:
  6413 ;;		line 131 in file "eadog.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1  [STACK] void 
  6420 ;; Registers used:
  6421 ;;		None
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/3D
  6424 ;;		On exit  : 3F/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6431 ;;Total ram usage:        0 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    6
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_eaDogM_WriteString
  6438 ;;		_send_lcd_cmd_dma
  6439 ;; This function uses a reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text31
  6443  0185F4                     __ptext31:
  6444                           	opt callstack 0
  6445  0185F4                     _wait_lcd_set:
  6446                           	opt callstack 21
  6447                           
  6448                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6449                           
  6450                           ; BSR set to: 59
  6451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6452                           ;incstack = 0
  6453  0185F4  0100               	movlb	0	; () banked
  6454  0185F6  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6455                           
  6456                           ; BSR set to: 0
  6457                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6458  0185F8  0012               	return		;funcret
  6459  0185FA                     __end_of_wait_lcd_set:
  6460                           	opt callstack 0
  6461                           
  6462 ;; *************** function _start_lcd *****************
  6463 ;; Defined at:
  6464 ;;		line 126 in file "eadog.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1  [STACK] void 
  6471 ;; Registers used:
  6472 ;;		None
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/3B
  6475 ;;		On exit  : 3F/3B
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6482 ;;Total ram usage:        0 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    6
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_eaDogM_WriteString
  6489 ;;		_send_lcd_cmd_dma
  6490 ;; This function uses a reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text32
  6494  0185FA                     __ptext32:
  6495                           	opt callstack 0
  6496  0185FA                     _start_lcd:
  6497                           	opt callstack 21
  6498                           
  6499                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6500                           
  6501                           ; BSR set to: 0
  6502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6503                           ;incstack = 0
  6504  0185FA  013B               	movlb	59	; () banked
  6505  0185FC  8DFC               	bsf	252,6,b	;volatile
  6506                           
  6507                           ; BSR set to: 59
  6508                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6509  0185FE  0012               	return		;funcret
  6510  018600                     __end_of_start_lcd:
  6511                           	opt callstack 0
  6512                           
  6513 ;; *************** function _ringBufS_flush *****************
  6514 ;; Defined at:
  6515 ;;		line 76 in file "ringbufs.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6518 ;;		 -> ring_buf1(67), 
  6519 ;;  clearBuffer     1  [STACK] const char 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1  [STACK] void 
  6524 ;; Registers used:
  6525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6526 ;; Tracked objects:
  6527 ;;		On entry : 3F/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6535 ;;Total ram usage:        0 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; Hardware stack levels required when called:    7
  6538 ;; This function calls:
  6539 ;;		_memset
  6540 ;; This function is called by:
  6541 ;;		_eaDogM_WriteString
  6542 ;;		_send_lcd_cmd_dma
  6543 ;; This function uses a reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text33
  6547  017160                     __ptext33:
  6548                           	opt callstack 0
  6549  017160                     _ringBufS_flush:
  6550                           	opt callstack 20
  6551                           
  6552                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6553                           ;stkvar	__this @ sp[(0)+-2]
  6554                           
  6555                           ; BSR set to: 59
  6556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6557                           ;incstack = 0
  6558  017160  0EFE               	movlw	-2
  6559  017162  006F FF8C  F03C    	movff	plusw1,btemp+10
  6560  017168  0EFF               	movlw	-1
  6561  01716A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6562  017170  0E42               	movlw	66
  6563  017172  243C               	addwf	(btemp+10)^0,w,c
  6564  017174  6ED9               	movwf	fsr2l,c
  6565  017176  0E00               	movlw	0
  6566  017178  203D               	addwfc	(btemp+11)^0,w,c
  6567  01717A  6EDA               	movwf	fsr2h,c
  6568  01717C  0E00               	movlw	0
  6569  01717E  6EDF               	movwf	indf2,c
  6570                           
  6571                           ;ringbufs.c: 79:  _this->head = 0;
  6572                           ;stkvar	__this @ sp[(0)+-2]
  6573  017180  0EFE               	movlw	-2
  6574  017182  006F FF8C  F03C    	movff	plusw1,btemp+10
  6575  017188  0EFF               	movlw	-1
  6576  01718A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6577  017190  0E40               	movlw	64
  6578  017192  243C               	addwf	(btemp+10)^0,w,c
  6579  017194  6ED9               	movwf	fsr2l,c
  6580  017196  0E00               	movlw	0
  6581  017198  203D               	addwfc	(btemp+11)^0,w,c
  6582  01719A  6EDA               	movwf	fsr2h,c
  6583  01719C  0E00               	movlw	0
  6584  01719E  6EDF               	movwf	indf2,c
  6585                           
  6586                           ;ringbufs.c: 80:  _this->tail = 0;
  6587                           ;stkvar	__this @ sp[(0)+-2]
  6588  0171A0  0EFE               	movlw	-2
  6589  0171A2  006F FF8C  F03C    	movff	plusw1,btemp+10
  6590  0171A8  0EFF               	movlw	-1
  6591  0171AA  006F FF8C  F03D    	movff	plusw1,btemp+11
  6592  0171B0  0E41               	movlw	65
  6593  0171B2  243C               	addwf	(btemp+10)^0,w,c
  6594  0171B4  6ED9               	movwf	fsr2l,c
  6595  0171B6  0E00               	movlw	0
  6596  0171B8  203D               	addwfc	(btemp+11)^0,w,c
  6597  0171BA  6EDA               	movwf	fsr2h,c
  6598  0171BC  0E00               	movlw	0
  6599  0171BE  6EDF               	movwf	indf2,c
  6600                           
  6601                           ;ringbufs.c: 81:  if (clearBuffer) {
  6602                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6603  0171C0  0EFD               	movlw	-3
  6604  0171C2  50E3               	movf	plusw1,w,c
  6605  0171C4  B4D8               	btfsc	status,2,c
  6606  0171C6  D011               	goto	l1475
  6607                           
  6608                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6609  0171C8  0E40               	movlw	64
  6610  0171CA  6EE6               	movwf	postinc1,c
  6611  0171CC  0E00               	movlw	0
  6612  0171CE  6EE6               	movwf	postinc1,c
  6613  0171D0  0E00               	movlw	0
  6614  0171D2  6EE6               	movwf	postinc1,c
  6615  0171D4  0E00               	movlw	0
  6616  0171D6  6EE6               	movwf	postinc1,c
  6617                           
  6618                           ;stkvar	__this @ sp[(-4)+-2]
  6619  0171D8  0EFA               	movlw	-6
  6620  0171DA  006F FF8F FFE6     	movff	plusw1,postinc1
  6621  0171E0  006F FF8F FFE6     	movff	plusw1,postinc1
  6622  0171E6  ECEA  F0A3         	call	_memset	;wreg free
  6623  0171EA                     l1475:
  6624                           
  6625                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6626  0171EA  52E5               	movf	postdec1,f,c
  6627  0171EC  52E5               	movf	postdec1,f,c
  6628  0171EE  52E5               	movf	postdec1,f,c
  6629  0171F0  0012               	return		;funcret
  6630  0171F2                     __end_of_ringBufS_flush:
  6631                           	opt callstack 0
  6632                           
  6633 ;; *************** function _memset *****************
  6634 ;; Defined at:
  6635 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  dest            2  [STACK] PTR void 
  6638 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6639 ;;  c               2  [STACK] int 
  6640 ;;  n               2  [STACK] unsigned int 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  s               2  [STACK] PTR unsigned char 
  6643 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6644 ;;  k               2  [STACK] unsigned int 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  2  [STACK] PTR void 
  6647 ;; Registers used:
  6648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6658 ;;Total ram usage:        0 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    6
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_ringBufS_init
  6665 ;;		_ringBufS_flush
  6666 ;; This function uses a reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text34
  6670  0147D4                     __ptext34:
  6671                           	opt callstack 0
  6672  0147D4                     _memset:
  6673                           	opt callstack 0
  6674                           
  6675                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6676  0147D4  52E6               	movf	postinc1,f,c
  6677  0147D6  52E6               	movf	postinc1,f,c
  6678  0147D8  52E6               	movf	postinc1,f,c
  6679  0147DA  52E6               	movf	postinc1,f,c
  6680                           
  6681                           ;stkvar	_dest @ sp[(-4)+-2]
  6682                           
  6683                           ;incstack = 0
  6684  0147DC  0EFA               	movlw	-6
  6685  0147DE  006F FF8C  F03C    	movff	plusw1,btemp+10
  6686  0147E4  0EFB               	movlw	-5
  6687  0147E6  006F FF8C  F03D    	movff	plusw1,btemp+11
  6688                           
  6689                           ;stkvar	_s @ sp[(-4)+0]
  6690  0147EC  0EFD               	movlw	-3
  6691  0147EE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6692  0147F4  0EFC               	movlw	-4
  6693  0147F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6694                           
  6695                           ;stkvar	_n @ sp[(-4)+-6]
  6696  0147FC  0EF6               	movlw	-10
  6697  0147FE  006F FF8C  F032    	movff	plusw1,btemp
  6698  014804  0EF7               	movlw	-9
  6699  014806  50E3               	movf	plusw1,w,c
  6700  014808  1032               	iorwf	btemp^0,w,c
  6701  01480A  B4D8               	btfsc	status,2,c
  6702  01480C  D154               	goto	u12110
  6703                           
  6704                           ;stkvar	_c @ sp[(-4)+-4]
  6705                           ;stkvar	_s @ sp[(-4)+0]
  6706  01480E  0EFC               	movlw	-4
  6707  014810  006F FF8F FFD9     	movff	plusw1,fsr2l
  6708  014816  0EFD               	movlw	-3
  6709  014818  006F FF8F FFDA     	movff	plusw1,fsr2h
  6710  01481E  0EF8               	movlw	-8
  6711  014820  006F FF8F FFDF     	movff	plusw1,indf2
  6712                           
  6713                           ;stkvar	_c @ sp[(-4)+-4]
  6714                           ;stkvar	_n @ sp[(-4)+-6]
  6715                           ;stkvar	_s @ sp[(-4)+0]
  6716  014826  0EFC               	movlw	-4
  6717  014828  006F FF8C  F03C    	movff	plusw1,btemp+10
  6718  01482E  0EFD               	movlw	-3
  6719  014830  006F FF8C  F03D    	movff	plusw1,btemp+11
  6720  014836  0EF6               	movlw	-10
  6721  014838  50E3               	movf	plusw1,w,c
  6722  01483A  263C               	addwf	(btemp+10)^0,f,c
  6723  01483C  0EF7               	movlw	-9
  6724  01483E  50E3               	movf	plusw1,w,c
  6725  014840  223D               	addwfc	(btemp+11)^0,f,c
  6726  014842  0EFF               	movlw	255
  6727  014844  243C               	addwf	(btemp+10)^0,w,c
  6728  014846  6ED9               	movwf	fsr2l,c
  6729  014848  0EFF               	movlw	255
  6730  01484A  203D               	addwfc	(btemp+11)^0,w,c
  6731  01484C  6EDA               	movwf	fsr2h,c
  6732  01484E  0EF8               	movlw	-8
  6733  014850  006F FF8F FFDF     	movff	plusw1,indf2
  6734                           
  6735                           ;stkvar	_n @ sp[(-4)+-6]
  6736  014856  0EF7               	movlw	-9
  6737  014858  50E3               	movf	plusw1,w,c
  6738  01485A  E108               	bnz	l10987
  6739  01485C  0EF6               	movlw	-10
  6740  01485E  006F FF8C  F032    	movff	plusw1,btemp
  6741  014864  0E03               	movlw	3
  6742  014866  5E32               	subwf	btemp^0,f,c
  6743  014868  A0D8               	btfss	status,0,c
  6744  01486A  D125               	goto	u12110
  6745  01486C                     l10987:
  6746                           
  6747                           ;stkvar	_c @ sp[(-4)+-4]
  6748                           ;stkvar	_s @ sp[(-4)+0]
  6749  01486C  0EFC               	movlw	-4
  6750  01486E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6751  014874  0EFD               	movlw	-3
  6752  014876  006F FF8C  F03D    	movff	plusw1,btemp+11
  6753  01487C  0E01               	movlw	1
  6754  01487E  243C               	addwf	(btemp+10)^0,w,c
  6755  014880  6ED9               	movwf	fsr2l,c
  6756  014882  0E00               	movlw	0
  6757  014884  203D               	addwfc	(btemp+11)^0,w,c
  6758  014886  6EDA               	movwf	fsr2h,c
  6759  014888  0EF8               	movlw	-8
  6760  01488A  006F FF8F FFDF     	movff	plusw1,indf2
  6761                           
  6762                           ;stkvar	_c @ sp[(-4)+-4]
  6763                           ;stkvar	_s @ sp[(-4)+0]
  6764  014890  0EFC               	movlw	-4
  6765  014892  006F FF8C  F03C    	movff	plusw1,btemp+10
  6766  014898  0EFD               	movlw	-3
  6767  01489A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6768  0148A0  0E02               	movlw	2
  6769  0148A2  243C               	addwf	(btemp+10)^0,w,c
  6770  0148A4  6ED9               	movwf	fsr2l,c
  6771  0148A6  0E00               	movlw	0
  6772  0148A8  203D               	addwfc	(btemp+11)^0,w,c
  6773  0148AA  6EDA               	movwf	fsr2h,c
  6774  0148AC  0EF8               	movlw	-8
  6775  0148AE  006F FF8F FFDF     	movff	plusw1,indf2
  6776                           
  6777                           ;stkvar	_c @ sp[(-4)+-4]
  6778                           ;stkvar	_n @ sp[(-4)+-6]
  6779                           ;stkvar	_s @ sp[(-4)+0]
  6780  0148B4  0EFC               	movlw	-4
  6781  0148B6  006F FF8C  F03C    	movff	plusw1,btemp+10
  6782  0148BC  0EFD               	movlw	-3
  6783  0148BE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6784  0148C4  0EF6               	movlw	-10
  6785  0148C6  50E3               	movf	plusw1,w,c
  6786  0148C8  263C               	addwf	(btemp+10)^0,f,c
  6787  0148CA  0EF7               	movlw	-9
  6788  0148CC  50E3               	movf	plusw1,w,c
  6789  0148CE  223D               	addwfc	(btemp+11)^0,f,c
  6790  0148D0  0EFE               	movlw	254
  6791  0148D2  243C               	addwf	(btemp+10)^0,w,c
  6792  0148D4  6ED9               	movwf	fsr2l,c
  6793  0148D6  0EFF               	movlw	255
  6794  0148D8  203D               	addwfc	(btemp+11)^0,w,c
  6795  0148DA  6EDA               	movwf	fsr2h,c
  6796  0148DC  0EF8               	movlw	-8
  6797  0148DE  006F FF8F FFDF     	movff	plusw1,indf2
  6798                           
  6799                           ;stkvar	_c @ sp[(-4)+-4]
  6800                           ;stkvar	_n @ sp[(-4)+-6]
  6801                           ;stkvar	_s @ sp[(-4)+0]
  6802  0148E4  0EFC               	movlw	-4
  6803  0148E6  006F FF8C  F03C    	movff	plusw1,btemp+10
  6804  0148EC  0EFD               	movlw	-3
  6805  0148EE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6806  0148F4  0EF6               	movlw	-10
  6807  0148F6  50E3               	movf	plusw1,w,c
  6808  0148F8  263C               	addwf	(btemp+10)^0,f,c
  6809  0148FA  0EF7               	movlw	-9
  6810  0148FC  50E3               	movf	plusw1,w,c
  6811  0148FE  223D               	addwfc	(btemp+11)^0,f,c
  6812  014900  0EFD               	movlw	253
  6813  014902  243C               	addwf	(btemp+10)^0,w,c
  6814  014904  6ED9               	movwf	fsr2l,c
  6815  014906  0EFF               	movlw	255
  6816  014908  203D               	addwfc	(btemp+11)^0,w,c
  6817  01490A  6EDA               	movwf	fsr2h,c
  6818  01490C  0EF8               	movlw	-8
  6819  01490E  006F FF8F FFDF     	movff	plusw1,indf2
  6820                           
  6821                           ;stkvar	_n @ sp[(-4)+-6]
  6822  014914  0EF7               	movlw	-9
  6823  014916  50E3               	movf	plusw1,w,c
  6824  014918  E108               	bnz	l10993
  6825  01491A  0EF6               	movlw	-10
  6826  01491C  006F FF8C  F032    	movff	plusw1,btemp
  6827  014922  0E07               	movlw	7
  6828  014924  5E32               	subwf	btemp^0,f,c
  6829  014926  A0D8               	btfss	status,0,c
  6830  014928  D0C6               	goto	u12110
  6831  01492A                     l10993:
  6832                           
  6833                           ;stkvar	_c @ sp[(-4)+-4]
  6834                           ;stkvar	_s @ sp[(-4)+0]
  6835  01492A  0EFC               	movlw	-4
  6836  01492C  006F FF8C  F03C    	movff	plusw1,btemp+10
  6837  014932  0EFD               	movlw	-3
  6838  014934  006F FF8C  F03D    	movff	plusw1,btemp+11
  6839  01493A  0E03               	movlw	3
  6840  01493C  243C               	addwf	(btemp+10)^0,w,c
  6841  01493E  6ED9               	movwf	fsr2l,c
  6842  014940  0E00               	movlw	0
  6843  014942  203D               	addwfc	(btemp+11)^0,w,c
  6844  014944  6EDA               	movwf	fsr2h,c
  6845  014946  0EF8               	movlw	-8
  6846  014948  006F FF8F FFDF     	movff	plusw1,indf2
  6847                           
  6848                           ;stkvar	_c @ sp[(-4)+-4]
  6849                           ;stkvar	_n @ sp[(-4)+-6]
  6850                           ;stkvar	_s @ sp[(-4)+0]
  6851  01494E  0EFC               	movlw	-4
  6852  014950  006F FF8C  F03C    	movff	plusw1,btemp+10
  6853  014956  0EFD               	movlw	-3
  6854  014958  006F FF8C  F03D    	movff	plusw1,btemp+11
  6855  01495E  0EF6               	movlw	-10
  6856  014960  50E3               	movf	plusw1,w,c
  6857  014962  263C               	addwf	(btemp+10)^0,f,c
  6858  014964  0EF7               	movlw	-9
  6859  014966  50E3               	movf	plusw1,w,c
  6860  014968  223D               	addwfc	(btemp+11)^0,f,c
  6861  01496A  0EFC               	movlw	252
  6862  01496C  243C               	addwf	(btemp+10)^0,w,c
  6863  01496E  6ED9               	movwf	fsr2l,c
  6864  014970  0EFF               	movlw	255
  6865  014972  203D               	addwfc	(btemp+11)^0,w,c
  6866  014974  6EDA               	movwf	fsr2h,c
  6867  014976  0EF8               	movlw	-8
  6868  014978  006F FF8F FFDF     	movff	plusw1,indf2
  6869                           
  6870                           ;stkvar	_n @ sp[(-4)+-6]
  6871  01497E  0EF7               	movlw	-9
  6872  014980  50E3               	movf	plusw1,w,c
  6873  014982  E108               	bnz	l10999
  6874  014984  0EF6               	movlw	-10
  6875  014986  006F FF8C  F032    	movff	plusw1,btemp
  6876  01498C  0E09               	movlw	9
  6877  01498E  5E32               	subwf	btemp^0,f,c
  6878  014990  A0D8               	btfss	status,0,c
  6879  014992  D091               	goto	u12110
  6880  014994                     l10999:
  6881                           
  6882                           ;stkvar	_s @ sp[(-4)+0]
  6883  014994  0EFC               	movlw	-4
  6884  014996  006F FF8C  F03C    	movff	plusw1,btemp+10
  6885  01499C  1E3C               	comf	(btemp+10)^0,f,c
  6886  01499E  0EFD               	movlw	-3
  6887  0149A0  006F FF8C  F03D    	movff	plusw1,btemp+11
  6888  0149A6  1E3D               	comf	(btemp+11)^0,f,c
  6889  0149A8  2A3C               	incf	(btemp+10)^0,f,c
  6890  0149AA  B4D8               	btfsc	status,2,c
  6891  0149AC  2A3D               	incf	(btemp+11)^0,f,c
  6892  0149AE  0E03               	movlw	3
  6893  0149B0  163C               	andwf	(btemp+10)^0,f,c
  6894  0149B2  0E00               	movlw	0
  6895  0149B4  163D               	andwf	(btemp+11)^0,f,c
  6896                           
  6897                           ;stkvar	_k @ sp[(-4)+2]
  6898  0149B6  0EFE               	movlw	-2
  6899  0149B8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6900  0149BE  0EFF               	movlw	-1
  6901  0149C0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6902                           
  6903                           ;stkvar	_k @ sp[(-4)+2]
  6904                           ;stkvar	_s @ sp[(-4)+0]
  6905  0149C6  0EFC               	movlw	-4
  6906  0149C8  50E3               	movf	plusw1,w,c
  6907  0149CA  6E32               	movwf	btemp^0,c
  6908  0149CC  0EFE               	movlw	-2
  6909  0149CE  50E3               	movf	plusw1,w,c
  6910  0149D0  2632               	addwf	btemp^0,f,c
  6911  0149D2  0EFC               	movlw	-4
  6912  0149D4  0060  F0CB  FFE3   	movff	btemp,plusw1
  6913  0149DA  0EFD               	movlw	-3
  6914  0149DC  50E3               	movf	plusw1,w,c
  6915  0149DE  6E32               	movwf	btemp^0,c
  6916  0149E0  0EFF               	movlw	-1
  6917  0149E2  50E3               	movf	plusw1,w,c
  6918  0149E4  2232               	addwfc	btemp^0,f,c
  6919  0149E6  0EFD               	movlw	-3
  6920  0149E8  0060  F0CB  FFE3   	movff	btemp,plusw1
  6921                           
  6922                           ;stkvar	_k @ sp[(-4)+2]
  6923                           ;stkvar	_n @ sp[(-4)+-6]
  6924  0149EE  0EF6               	movlw	-10
  6925  0149F0  50E3               	movf	plusw1,w,c
  6926  0149F2  6E32               	movwf	btemp^0,c
  6927  0149F4  0EFE               	movlw	-2
  6928  0149F6  50E3               	movf	plusw1,w,c
  6929  0149F8  5E32               	subwf	btemp^0,f,c
  6930  0149FA  0EF6               	movlw	-10
  6931  0149FC  0060  F0CB  FFE3   	movff	btemp,plusw1
  6932  014A02  0EF7               	movlw	-9
  6933  014A04  50E3               	movf	plusw1,w,c
  6934  014A06  6E32               	movwf	btemp^0,c
  6935  014A08  0EFF               	movlw	-1
  6936  014A0A  50E3               	movf	plusw1,w,c
  6937  014A0C  5A32               	subwfb	btemp^0,f,c
  6938  014A0E  0EF7               	movlw	-9
  6939  014A10  0060  F0CB  FFE3   	movff	btemp,plusw1
  6940  014A16  0EFC               	movlw	252
  6941  014A18  6E3C               	movwf	(btemp+10)^0,c
  6942  014A1A  0EFF               	movlw	255
  6943  014A1C  6E3D               	movwf	(btemp+11)^0,c
  6944                           
  6945                           ;stkvar	_n @ sp[(-4)+-6]
  6946  014A1E  0EF6               	movlw	-10
  6947  014A20  006F FF8C  F032    	movff	plusw1,btemp
  6948  014A26  503C               	movf	(btemp+10)^0,w,c
  6949  014A28  1632               	andwf	btemp^0,f,c
  6950  014A2A  0EF6               	movlw	-10
  6951  014A2C  0060  F0CB  FFE3   	movff	btemp,plusw1
  6952  014A32  0EF7               	movlw	-9
  6953  014A34  006F FF8C  F032    	movff	plusw1,btemp
  6954  014A3A  503D               	movf	(btemp+11)^0,w,c
  6955  014A3C  1632               	andwf	btemp^0,f,c
  6956  014A3E  0EF7               	movlw	-9
  6957  014A40  D02E               	goto	L5
  6958  014A42                     l11007:
  6959                           
  6960                           ;stkvar	_c @ sp[(-4)+-4]
  6961                           ;stkvar	_s @ sp[(-4)+0]
  6962  014A42  0EFC               	movlw	-4
  6963  014A44  006F FF8F FFD9     	movff	plusw1,fsr2l
  6964  014A4A  0EFD               	movlw	-3
  6965  014A4C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6966  014A52  0EF8               	movlw	-8
  6967  014A54  006F FF8F FFDF     	movff	plusw1,indf2
  6968                           
  6969                           ;stkvar	_n @ sp[(-4)+-6]
  6970  014A5A  0EF6               	movlw	-10
  6971  014A5C  006F FF8C  F032    	movff	plusw1,btemp
  6972  014A62  0E01               	movlw	1
  6973  014A64  5E32               	subwf	btemp^0,f,c
  6974  014A66  0EF6               	movlw	-10
  6975  014A68  0060  F0CB  FFE3   	movff	btemp,plusw1
  6976  014A6E  0EF7               	movlw	-9
  6977  014A70  006F FF8C  F032    	movff	plusw1,btemp
  6978  014A76  0E00               	movlw	0
  6979  014A78  5A32               	subwfb	btemp^0,f,c
  6980  014A7A  0EF7               	movlw	-9
  6981  014A7C  0060  F0CB  FFE3   	movff	btemp,plusw1
  6982                           
  6983                           ;stkvar	_s @ sp[(-4)+0]
  6984  014A82  0EFC               	movlw	-4
  6985  014A84  50E3               	movf	plusw1,w,c
  6986  014A86  0F01               	addlw	1
  6987  014A88  6E32               	movwf	btemp^0,c
  6988  014A8A  0EFC               	movlw	-4
  6989  014A8C  0060  F0CB  FFE3   	movff	btemp,plusw1
  6990  014A92  6A32               	clrf	btemp^0,c
  6991  014A94  0EFD               	movlw	-3
  6992  014A96  50E3               	movf	plusw1,w,c
  6993  014A98  2032               	addwfc	btemp^0,w,c
  6994  014A9A  6E32               	movwf	btemp^0,c
  6995  014A9C  0EFD               	movlw	-3
  6996  014A9E                     L5:
  6997  014A9E  0060  F0CB  FFE3   	movff	btemp,plusw1
  6998                           
  6999                           ;stkvar	_n @ sp[(-4)+-6]
  7000  014AA4  0EF6               	movlw	-10
  7001  014AA6  006F FF8C  F032    	movff	plusw1,btemp
  7002  014AAC  0EF7               	movlw	-9
  7003  014AAE  50E3               	movf	plusw1,w,c
  7004  014AB0  1032               	iorwf	btemp^0,w,c
  7005  014AB2  A4D8               	btfss	status,2,c
  7006  014AB4  D7C6               	goto	l11007
  7007  014AB6                     u12110:
  7008                           
  7009                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7010  014AB6  0EF6               	movlw	246
  7011  014AB8  26E1               	addwf	fsr1l,f,c
  7012  014ABA  0EFF               	movlw	255
  7013  014ABC  22E2               	addwfc	fsr1h,f,c
  7014  014ABE  0012               	return		;funcret
  7015  014AC0                     __end_of_memset:
  7016                           	opt callstack 0
  7017                           
  7018 ;; *************** function _printf *****************
  7019 ;; Defined at:
  7020 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  fmt             2  [STACK] PTR const unsigned char 
  7023 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;  ap              2  [STACK] PTR void [1]
  7026 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7027 ;;  ret             2    0        int 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  2  [STACK] int 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7032 ;; Tracked objects:
  7033 ;;		On entry : 3F/3B
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7041 ;;Total ram usage:        0 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:   14
  7044 ;; This function calls:
  7045 ;;		_vfprintf
  7046 ;; This function is called by:
  7047 ;;		_eaDogM_WriteString
  7048 ;;		_send_lcd_cmd_dma
  7049 ;; This function uses a reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text35
  7053  0177D8                     __ptext35:
  7054                           	opt callstack 0
  7055  0177D8                     _printf:
  7056                           	opt callstack 0
  7057                           
  7058                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7059  0177D8  52E6               	movf	postinc1,f,c
  7060  0177DA  52E6               	movf	postinc1,f,c
  7061                           
  7062                           ;stkvar	?_printf @ sp[(-2)+-3]
  7063                           
  7064                           ;incstack = 0
  7065  0177DC  0EFB               	movlw	251
  7066  0177DE  24E1               	addwf	fsr1l,w,c
  7067  0177E0  6E3C               	movwf	(btemp+10)^0,c
  7068  0177E2  0EFF               	movlw	255
  7069  0177E4  20E2               	addwfc	fsr1h,w,c
  7070  0177E6  6E3D               	movwf	(btemp+11)^0,c
  7071                           
  7072                           ;stkvar	_ap @ sp[(-2)+0]
  7073  0177E8  0EFF               	movlw	-1
  7074  0177EA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7075  0177F0  0EFE               	movlw	-2
  7076  0177F2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7077                           
  7078                           ;stkvar	_ap @ sp[(-2)+0]
  7079  0177F8  0EFE               	movlw	254
  7080  0177FA  24E1               	addwf	fsr1l,w,c
  7081  0177FC  6E32               	movwf	btemp^0,c
  7082  0177FE  0EFF               	movlw	255
  7083  017800  20E2               	addwfc	fsr1h,w,c
  7084  017802  6E33               	movwf	(btemp+1)^0,c
  7085  017804  0060  F0CB  FFE6   	movff	btemp,postinc1
  7086  01780A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7087                           
  7088                           ;stkvar	_fmt @ sp[(-4)+-3]
  7089  017810  0EF9               	movlw	-7
  7090  017812  006F FF8F FFE6     	movff	plusw1,postinc1
  7091  017818  006F FF8F FFE6     	movff	plusw1,postinc1
  7092  01781E  0E00               	movlw	0
  7093  017820  6EE6               	movwf	postinc1,c
  7094  017822  0E00               	movlw	0
  7095  017824  6EE6               	movwf	postinc1,c
  7096  017826  EC6C  F0B7         	call	_vfprintf	;wreg free
  7097                           
  7098                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7099  01782A  52E5               	movf	postdec1,f,c
  7100  01782C  52E5               	movf	postdec1,f,c
  7101  01782E  52E5               	movf	postdec1,f,c
  7102  017830  50E7               	movf	indf1,w,c
  7103  017832  5EE1               	subwf	fsr1l,f,c
  7104  017834  0E00               	movlw	0
  7105  017836  5AE2               	subwfb	fsr1h,f,c
  7106  017838  0012               	return		;funcret
  7107  01783A                     __end_of_printf:
  7108                           	opt callstack 0
  7109                           
  7110 ;; *************** function _vfprintf *****************
  7111 ;; Defined at:
  7112 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7115 ;;		 -> f(6), NULL(0), 
  7116 ;;  fmt             2  [STACK] PTR const unsigned char 
  7117 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7118 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7119 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7120 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7121 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7122 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7123 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7124 ;;  ap              2  [STACK] PTR PTR void 
  7125 ;;		 -> ap(2), ap(2), 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  cfmt            2  [STACK] PTR unsigned char 
  7128 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7129 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7130 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7131 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7132 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7133 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7134 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  2  [STACK] int 
  7137 ;; Registers used:
  7138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/5
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7148 ;;Total ram usage:        0 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:   13
  7151 ;; This function calls:
  7152 ;;		_vfpfcnvrt
  7153 ;; This function is called by:
  7154 ;;		_sprintf
  7155 ;;		_printf
  7156 ;; This function uses a reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text36
  7160  016ED8                     __ptext36:
  7161                           	opt callstack 0
  7162  016ED8                     _vfprintf:
  7163                           	opt callstack 0
  7164                           
  7165                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7166  016ED8  52E6               	movf	postinc1,f,c
  7167  016EDA  52E6               	movf	postinc1,f,c
  7168                           
  7169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7170                           ;stkvar	_fmt @ sp[(-2)+-4]
  7171                           
  7172                           ;incstack = 0
  7173  016EDC  0EFA               	movlw	-6
  7174  016EDE  006F FF8C  F03C    	movff	plusw1,btemp+10
  7175  016EE4  0EFB               	movlw	-5
  7176  016EE6  006F FF8C  F03D    	movff	plusw1,btemp+11
  7177                           
  7178                           ;stkvar	_cfmt @ sp[(-2)+0]
  7179  016EEC  0EFF               	movlw	-1
  7180  016EEE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7181  016EF4  0EFE               	movlw	-2
  7182  016EF6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7183                           
  7184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7185  016EFC  6A19               	clrf	_nout^0,c
  7186  016EFE  6A1A               	clrf	(_nout+1)^0,c
  7187                           
  7188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7189  016F00  D020               	goto	l11021
  7190  016F02                     l11019:
  7191                           
  7192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7193                           ;stkvar	_ap @ sp[(-2)+-6]
  7194  016F02  0EF8               	movlw	-8
  7195  016F04  006F FF8F FFE6     	movff	plusw1,postinc1
  7196  016F0A  006F FF8F FFE6     	movff	plusw1,postinc1
  7197                           
  7198                           ;stkvar	_cfmt @ sp[(-4)+0]
  7199  016F10  0EFC               	movlw	252
  7200  016F12  24E1               	addwf	fsr1l,w,c
  7201  016F14  6E32               	movwf	btemp^0,c
  7202  016F16  0EFF               	movlw	255
  7203  016F18  20E2               	addwfc	fsr1h,w,c
  7204  016F1A  6E33               	movwf	(btemp+1)^0,c
  7205  016F1C  0060  F0CB  FFE6   	movff	btemp,postinc1
  7206  016F22  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7207                           
  7208                           ;stkvar	_fp @ sp[(-6)+-2]
  7209  016F28  0EF8               	movlw	-8
  7210  016F2A  006F FF8F FFE6     	movff	plusw1,postinc1
  7211  016F30  006F FF8F FFE6     	movff	plusw1,postinc1
  7212  016F36  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7213  016F3A  5032               	movf	btemp^0,w,c
  7214  016F3C  2619               	addwf	_nout^0,f,c
  7215  016F3E  5033               	movf	(btemp+1)^0,w,c
  7216  016F40  221A               	addwfc	(_nout+1)^0,f,c
  7217  016F42                     l11021:
  7218                           
  7219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7220                           ;stkvar	_cfmt @ sp[(-2)+0]
  7221  016F42  50E1               	movf	fsr1l,w,c
  7222  016F44  0FFE               	addlw	-2
  7223  016F46  6ED9               	movwf	fsr2l,c
  7224  016F48  50E2               	movf	fsr1h,w,c
  7225  016F4A  6EDA               	movwf	fsr2h,c
  7226  016F4C  0EFF               	movlw	255
  7227  016F4E  22DA               	addwfc	fsr2h,f,c
  7228  016F50  006F FF7B FFF6     	movff	postinc2,tblptrl
  7229  016F56  006F FF77 FFF7     	movff	postdec2,tblptrh
  7230  016F5C                     	if	0	;tblptru may be non-zero
  7231  016F5C                     	endif
  7232  016F5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7233  016F5C  0E00               	movlw	low (__mediumconst shr (0+16))
  7234  016F5E  6EF8               	movwf	tblptru,c
  7235  016F60                     	endif
  7236  016F60  0008               	tblrd		*
  7237  016F62  50F5               	movf	tablat,w,c
  7238  016F64  0900               	iorlw	0
  7239  016F66  A4D8               	btfss	status,2,c
  7240  016F68  D7CC               	goto	l11019
  7241                           
  7242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7243  016F6A  0060  F064  F032   	movff	_nout,btemp
  7244  016F70  0060  F068  F033   	movff	_nout+1,btemp+1
  7245                           
  7246                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7247  016F76  0EF8               	movlw	248
  7248  016F78  26E1               	addwf	fsr1l,f,c
  7249  016F7A  0EFF               	movlw	255
  7250  016F7C  22E2               	addwfc	fsr1h,f,c
  7251  016F7E  0012               	return		;funcret
  7252  016F80                     __end_of_vfprintf:
  7253                           	opt callstack 0
  7254                           
  7255 ;; *************** function _vfpfcnvrt *****************
  7256 ;; Defined at:
  7257 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7260 ;;		 -> f(6), NULL(0), 
  7261 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7262 ;;		 -> cfmt(2), 
  7263 ;;  ap              2  [STACK] PTR PTR void 
  7264 ;;		 -> ap(2), ap(2), 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  llu             8  [STACK] unsigned long long 
  7267 ;;  ll              8  [STACK] long long 
  7268 ;;  f               4  [STACK] long long 
  7269 ;;  ct              3  [STACK] unsigned char [3]
  7270 ;;  vp              3    0        PTR void 
  7271 ;;  cp              2  [STACK] PTR unsigned char 
  7272 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7273 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7274 ;;		 -> STR_3(5), V(187), 
  7275 ;;  i               2    0        int 
  7276 ;;  done            2    0        int 
  7277 ;;  c               1  [STACK] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  2  [STACK] int 
  7280 ;; Registers used:
  7281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/5
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7291 ;;Total ram usage:        0 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:   12
  7294 ;; This function calls:
  7295 ;;		_atoi
  7296 ;;		_ctoa
  7297 ;;		_dtoa
  7298 ;;		_efgtoa
  7299 ;;		_fputc
  7300 ;;		_isdigit
  7301 ;;		_isupper
  7302 ;;		_stoa
  7303 ;;		_strncmp
  7304 ;;		_tolower
  7305 ;;		_xtoa
  7306 ;; This function is called by:
  7307 ;;		_vfprintf
  7308 ;; This function uses a reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text37
  7312  011244                     __ptext37:
  7313                           	opt callstack 0
  7314  011244                     _vfpfcnvrt:
  7315                           	opt callstack 0
  7316                           
  7317                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7318  011244  0E20               	movlw	32
  7319  011246  26E1               	addwf	fsr1l,f,c
  7320  011248  0E00               	movlw	0
  7321  01124A  22E2               	addwfc	fsr1h,f,c
  7322                           
  7323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7324                           ;stkvar	_fmt @ sp[(-32)+-4]
  7325                           
  7326                           ;incstack = 0
  7327  01124C  0EDC               	movlw	-36
  7328  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7329  011254  0EDD               	movlw	-35
  7330  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7331  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7332  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7333  011268                     	if	0	;tblptru may be non-zero
  7334  011268                     	endif
  7335  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7336  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7337  01126A  6EF8               	movwf	tblptru,c
  7338  01126C                     	endif
  7339  01126C  0008               	tblrd		*
  7340  01126E  50F5               	movf	tablat,w,c
  7341  011270  0A25               	xorlw	37
  7342  011272  A4D8               	btfss	status,2,c
  7343  011274  EF92  F08E         	goto	l10955
  7344                           
  7345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7346                           ;stkvar	_fmt @ sp[(-32)+-4]
  7347  011278  0EDC               	movlw	-36
  7348  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7349  011280  0EDD               	movlw	-35
  7350  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7351  011288  2ADE               	incf	postinc2,f,c
  7352  01128A  0E00               	movlw	0
  7353  01128C  22DD               	addwfc	postdec2,f,c
  7354                           
  7355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7356  01128E  6A1B               	clrf	_width^0,c
  7357  011290  6A1C               	clrf	(_width+1)^0,c
  7358  011292  6A1F               	clrf	_flags^0,c
  7359  011294  6A20               	clrf	(_flags+1)^0,c
  7360                           
  7361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7362  011296  681D               	setf	_prec^0,c
  7363  011298  681E               	setf	(_prec+1)^0,c
  7364                           
  7365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7366                           ;stkvar	_fmt @ sp[(-32)+-4]
  7367  01129A  0EDC               	movlw	-36
  7368  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7369  0112A2  0EDD               	movlw	-35
  7370  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7371  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7372  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7373  0112B6                     	if	0	;tblptru may be non-zero
  7374  0112B6                     	endif
  7375  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7376  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7377  0112B8  6EF8               	movwf	tblptru,c
  7378  0112BA                     	endif
  7379  0112BA  0008               	tblrd		*
  7380  0112BC  50F5               	movf	tablat,w,c
  7381  0112BE  0A2A               	xorlw	42
  7382  0112C0  A4D8               	btfss	status,2,c
  7383  0112C2  D031               	goto	l10819
  7384                           
  7385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7386                           ;stkvar	_fmt @ sp[(-32)+-4]
  7387  0112C4  0EDC               	movlw	-36
  7388  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7389  0112CC  0EDD               	movlw	-35
  7390  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7391  0112D4  2ADE               	incf	postinc2,f,c
  7392  0112D6  0E00               	movlw	0
  7393  0112D8  22DD               	addwfc	postdec2,f,c
  7394                           
  7395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7396                           ;stkvar	_ap @ sp[(-32)+-6]
  7397  0112DA  0EDA               	movlw	-38
  7398  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7399  0112E2  0EDB               	movlw	-37
  7400  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7401  0112EA  0E02               	movlw	2
  7402  0112EC  5EDE               	subwf	postinc2,f,c
  7403  0112EE  0E00               	movlw	0
  7404  0112F0  5ADD               	subwfb	postdec2,f,c
  7405  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7406  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7407  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7408  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7409  01130A  006F FF78  F01B    	movff	postinc2,_width
  7410  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7411                           
  7412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7413  011316  AE1C               	btfss	(_width+1)^0,7,c
  7414  011318  D066               	goto	u11860
  7415                           
  7416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7417  01131A  801F               	bsf	_flags^0,0,c
  7418                           
  7419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7420  01131C  6C1B               	negf	_width^0,c
  7421  01131E  1E1C               	comf	(_width+1)^0,f,c
  7422  011320  B0D8               	btfsc	status,0,c
  7423  011322  2A1C               	incf	(_width+1)^0,f,c
  7424  011324  D060               	goto	u11860
  7425  011326                     l10819:
  7426                           
  7427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7428                           ;stkvar	_fmt @ sp[(-32)+-4]
  7429  011326  0EDC               	movlw	-36
  7430  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7431  01132E  0EDD               	movlw	-35
  7432  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7433  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7434  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7435  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7436  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7437  01134E  ECFF  F0A7         	call	_atoi	;wreg free
  7438  011352  0060  F0C8  F01B   	movff	btemp,_width
  7439  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7440                           
  7441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7442  01135E  D00B               	goto	l10823
  7443  011360                     l10821:
  7444                           
  7445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7446                           ;stkvar	_fmt @ sp[(-32)+-4]
  7447  011360  0EDC               	movlw	-36
  7448  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7449  011368  0EDD               	movlw	-35
  7450  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7451  011370  2ADE               	incf	postinc2,f,c
  7452  011372  0E00               	movlw	0
  7453  011374  22DD               	addwfc	postdec2,f,c
  7454  011376                     l10823:
  7455  011376  0ED0               	movlw	208
  7456  011378  6E3C               	movwf	(btemp+10)^0,c
  7457  01137A  0EFF               	movlw	255
  7458  01137C  6E3D               	movwf	(btemp+11)^0,c
  7459                           
  7460                           ;stkvar	_fmt @ sp[(-32)+-4]
  7461  01137E  0EDC               	movlw	-36
  7462  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7463  011386  0EDD               	movlw	-35
  7464  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7465  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7466  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7467  01139A                     	if	0	;tblptru may be non-zero
  7468  01139A                     	endif
  7469  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7470  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7471  01139C  6EF8               	movwf	tblptru,c
  7472  01139E                     	endif
  7473  01139E  0008               	tblrd		*
  7474  0113A0  50F5               	movf	tablat,w,c
  7475  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7476  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7477  0113A6  503C               	movf	(btemp+10)^0,w,c
  7478  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7479  0113AA  503D               	movf	(btemp+11)^0,w,c
  7480  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7481  0113AE  503B               	movf	(btemp+9)^0,w,c
  7482  0113B0  E106               	bnz	u11840
  7483  0113B2  0E0A               	movlw	10
  7484  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7485  0113B6  B0D8               	btfsc	status,0,c
  7486  0113B8  D002               	goto	u11840
  7487  0113BA  0E01               	movlw	1
  7488  0113BC  D001               	goto	u11850
  7489  0113BE                     u11840:
  7490  0113BE  0E00               	movlw	0
  7491  0113C0                     u11850:
  7492  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7493  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7494                           
  7495                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+4]
  7496  0113C4  0EE4               	movlw	-28
  7497  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7498  0113CC  0EE5               	movlw	-27
  7499  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7500                           
  7501                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+4]
  7502  0113D4  0EE4               	movlw	-28
  7503  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7504  0113DC  0EE5               	movlw	-27
  7505  0113DE  50E3               	movf	plusw1,w,c
  7506  0113E0  1032               	iorwf	btemp^0,w,c
  7507  0113E2  A4D8               	btfss	status,2,c
  7508  0113E4  D7BD               	goto	l10821
  7509  0113E6                     u11860:
  7510                           
  7511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7512                           ;stkvar	_fmt @ sp[(-32)+-4]
  7513  0113E6  0EDC               	movlw	-36
  7514  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7515  0113EE  0EDD               	movlw	-35
  7516  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7517  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7518  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7519  011402                     	if	0	;tblptru may be non-zero
  7520  011402                     	endif
  7521  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7522  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7523  011404  6EF8               	movwf	tblptru,c
  7524  011406                     	endif
  7525  011406  0008               	tblrd		*
  7526  011408  50F5               	movf	tablat,w,c
  7527  01140A  0A2E               	xorlw	46
  7528  01140C  A4D8               	btfss	status,2,c
  7529  01140E  D0AC               	goto	u11910
  7530                           
  7531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7532  011410  6A1D               	clrf	_prec^0,c
  7533  011412  6A1E               	clrf	(_prec+1)^0,c
  7534                           
  7535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7536                           ;stkvar	_fmt @ sp[(-32)+-4]
  7537  011414  0EDC               	movlw	-36
  7538  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7539  01141C  0EDD               	movlw	-35
  7540  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7541  011424  2ADE               	incf	postinc2,f,c
  7542  011426  0E00               	movlw	0
  7543  011428  22DD               	addwfc	postdec2,f,c
  7544                           
  7545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7546                           ;stkvar	_fmt @ sp[(-32)+-4]
  7547  01142A  0EDC               	movlw	-36
  7548  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7549  011432  0EDD               	movlw	-35
  7550  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7551  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7552  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7553  011446                     	if	0	;tblptru may be non-zero
  7554  011446                     	endif
  7555  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7556  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7557  011448  6EF8               	movwf	tblptru,c
  7558  01144A                     	endif
  7559  01144A  0008               	tblrd		*
  7560  01144C  50F5               	movf	tablat,w,c
  7561  01144E  0A2A               	xorlw	42
  7562  011450  A4D8               	btfss	status,2,c
  7563  011452  D02A               	goto	l10841
  7564                           
  7565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7566                           ;stkvar	_fmt @ sp[(-32)+-4]
  7567  011454  0EDC               	movlw	-36
  7568  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7569  01145C  0EDD               	movlw	-35
  7570  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7571  011464  2ADE               	incf	postinc2,f,c
  7572  011466  0E00               	movlw	0
  7573  011468  22DD               	addwfc	postdec2,f,c
  7574                           
  7575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7576                           ;stkvar	_ap @ sp[(-32)+-6]
  7577  01146A  0EDA               	movlw	-38
  7578  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7579  011472  0EDB               	movlw	-37
  7580  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7581  01147A  0E02               	movlw	2
  7582  01147C  5EDE               	subwf	postinc2,f,c
  7583  01147E  0E00               	movlw	0
  7584  011480  5ADD               	subwfb	postdec2,f,c
  7585  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7586  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7587  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7588  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7589  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7590  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7591                           
  7592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7593  0114A6  D060               	goto	u11910
  7594  0114A8                     l10841:
  7595                           
  7596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7597                           ;stkvar	_fmt @ sp[(-32)+-4]
  7598  0114A8  0EDC               	movlw	-36
  7599  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7600  0114B0  0EDD               	movlw	-35
  7601  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7602  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7603  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7604  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7605  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7606  0114D0  ECFF  F0A7         	call	_atoi	;wreg free
  7607  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7608  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7609                           
  7610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7611  0114E0  D00B               	goto	l10845
  7612  0114E2                     l10843:
  7613                           
  7614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7615                           ;stkvar	_fmt @ sp[(-32)+-4]
  7616  0114E2  0EDC               	movlw	-36
  7617  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7618  0114EA  0EDD               	movlw	-35
  7619  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7620  0114F2  2ADE               	incf	postinc2,f,c
  7621  0114F4  0E00               	movlw	0
  7622  0114F6  22DD               	addwfc	postdec2,f,c
  7623  0114F8                     l10845:
  7624  0114F8  0ED0               	movlw	208
  7625  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7626  0114FC  0EFF               	movlw	255
  7627  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7628                           
  7629                           ;stkvar	_fmt @ sp[(-32)+-4]
  7630  011500  0EDC               	movlw	-36
  7631  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7632  011508  0EDD               	movlw	-35
  7633  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7634  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7635  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7636  01151C                     	if	0	;tblptru may be non-zero
  7637  01151C                     	endif
  7638  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7639  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7640  01151E  6EF8               	movwf	tblptru,c
  7641  011520                     	endif
  7642  011520  0008               	tblrd		*
  7643  011522  50F5               	movf	tablat,w,c
  7644  011524  6E3A               	movwf	(btemp+8)^0,c
  7645  011526  6A3B               	clrf	(btemp+9)^0,c
  7646  011528  503C               	movf	(btemp+10)^0,w,c
  7647  01152A  263A               	addwf	(btemp+8)^0,f,c
  7648  01152C  503D               	movf	(btemp+11)^0,w,c
  7649  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7650  011530  503B               	movf	(btemp+9)^0,w,c
  7651  011532  E106               	bnz	u11890
  7652  011534  0E0A               	movlw	10
  7653  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7654  011538  B0D8               	btfsc	status,0,c
  7655  01153A  D002               	goto	u11890
  7656  01153C  0E01               	movlw	1
  7657  01153E  D001               	goto	u11900
  7658  011540                     u11890:
  7659  011540  0E00               	movlw	0
  7660  011542                     u11900:
  7661  011542  6E3C               	movwf	(btemp+10)^0,c
  7662  011544  6A3D               	clrf	(btemp+11)^0,c
  7663                           
  7664                           ;stkvar	_vfpfcnvrt$4426 @ sp[(-32)+0]
  7665  011546  0EE0               	movlw	-32
  7666  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7667  01154E  0EE1               	movlw	-31
  7668  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7669                           
  7670                           ;stkvar	_vfpfcnvrt$4426 @ sp[(-32)+0]
  7671  011556  0EE0               	movlw	-32
  7672  011558  006F FF8C  F032    	movff	plusw1,btemp
  7673  01155E  0EE1               	movlw	-31
  7674  011560  50E3               	movf	plusw1,w,c
  7675  011562  1032               	iorwf	btemp^0,w,c
  7676  011564  A4D8               	btfss	status,2,c
  7677  011566  D7BD               	goto	l10843
  7678  011568                     u11910:
  7679                           
  7680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7681                           ;stkvar	_fmt @ sp[(-32)+-4]
  7682  011568  0EDC               	movlw	-36
  7683  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7684  011570  0EDD               	movlw	-35
  7685  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7686  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7687  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7688  011584                     	if	0	;tblptru may be non-zero
  7689  011584                     	endif
  7690  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7691  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7692  011586  6EF8               	movwf	tblptru,c
  7693  011588                     	endif
  7694  011588  0008               	tblrd		*
  7695  01158A  50F5               	movf	tablat,w,c
  7696  01158C  6EE6               	movwf	postinc1,c
  7697  01158E  0E00               	movlw	0
  7698  011590  6EE6               	movwf	postinc1,c
  7699  011592  ECC8  F0B9         	call	_tolower	;wreg free
  7700                           
  7701                           ;stkvar	_ct @ sp[(-32)+26]
  7702  011596  0EFA               	movlw	-6
  7703  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7704                           
  7705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7706                           ;stkvar	_ct @ sp[(-32)+26]
  7707  01159E  0EFA               	movlw	-6
  7708  0115A0  50E3               	movf	plusw1,w,c
  7709  0115A2  B4D8               	btfsc	status,2,c
  7710  0115A4  D05B               	goto	l10861
  7711                           
  7712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7713                           ;stkvar	_ct @ sp[(-32)+26]
  7714  0115A6  0EFB               	movlw	251
  7715  0115A8  24E1               	addwf	fsr1l,w,c
  7716  0115AA  6ED9               	movwf	fsr2l,c
  7717  0115AC  0EFF               	movlw	255
  7718  0115AE  20E2               	addwfc	fsr1h,w,c
  7719  0115B0  6EDA               	movwf	fsr2h,c
  7720                           
  7721                           ;stkvar	_fmt @ sp[(-32)+-4]
  7722  0115B2  0EDC               	movlw	-36
  7723  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7724  0115BA  0EDD               	movlw	-35
  7725  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7726  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7727  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7728  0115CE  0E01               	movlw	1
  7729  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7730  0115D2  0E00               	movlw	0
  7731  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7732  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7733  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7734  0115E2                     	if	0	;tblptru may be non-zero
  7735  0115E2                     	endif
  7736  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7737  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7738  0115E4  6EF8               	movwf	tblptru,c
  7739  0115E6                     	endif
  7740  0115E6  0008               	tblrd		*
  7741  0115E8  50F5               	movf	tablat,w,c
  7742  0115EA  6EE6               	movwf	postinc1,c
  7743  0115EC  0E00               	movlw	0
  7744  0115EE  6EE6               	movwf	postinc1,c
  7745  0115F0  ECC8  F0B9         	call	_tolower	;wreg free
  7746  0115F4  5032               	movf	btemp^0,w,c
  7747  0115F6  6EDF               	movwf	indf2,c
  7748                           
  7749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7750                           ;stkvar	_ct @ sp[(-32)+26]
  7751  0115F8  0EFB               	movlw	251
  7752  0115FA  24E1               	addwf	fsr1l,w,c
  7753  0115FC  6ED9               	movwf	fsr2l,c
  7754  0115FE  0EFF               	movlw	255
  7755  011600  20E2               	addwfc	fsr1h,w,c
  7756  011602  6EDA               	movwf	fsr2h,c
  7757  011604  50DF               	movf	indf2,w,c
  7758  011606  B4D8               	btfsc	status,2,c
  7759  011608  D029               	goto	l10861
  7760                           
  7761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7762                           ;stkvar	_ct @ sp[(-32)+26]
  7763  01160A  0EFC               	movlw	252
  7764  01160C  24E1               	addwf	fsr1l,w,c
  7765  01160E  6ED9               	movwf	fsr2l,c
  7766  011610  0EFF               	movlw	255
  7767  011612  20E2               	addwfc	fsr1h,w,c
  7768  011614  6EDA               	movwf	fsr2h,c
  7769                           
  7770                           ;stkvar	_fmt @ sp[(-32)+-4]
  7771  011616  0EDC               	movlw	-36
  7772  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7773  01161E  0EDD               	movlw	-35
  7774  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7775  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7776  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7777  011632  0E02               	movlw	2
  7778  011634  263C               	addwf	(btemp+10)^0,f,c
  7779  011636  0E00               	movlw	0
  7780  011638  223D               	addwfc	(btemp+11)^0,f,c
  7781  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7782  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7783  011646                     	if	0	;tblptru may be non-zero
  7784  011646                     	endif
  7785  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7786  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7787  011648  6EF8               	movwf	tblptru,c
  7788  01164A                     	endif
  7789  01164A  0008               	tblrd		*
  7790  01164C  50F5               	movf	tablat,w,c
  7791  01164E  6EE6               	movwf	postinc1,c
  7792  011650  0E00               	movlw	0
  7793  011652  6EE6               	movwf	postinc1,c
  7794  011654  ECC8  F0B9         	call	_tolower	;wreg free
  7795  011658  5032               	movf	btemp^0,w,c
  7796  01165A  6EDF               	movwf	indf2,c
  7797  01165C                     l10861:
  7798                           
  7799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7800                           ;stkvar	_fmt @ sp[(-32)+-4]
  7801  01165C  0EDC               	movlw	-36
  7802  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7803  011664  0EDD               	movlw	-35
  7804  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7805  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7806  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7807  011678                     	if	0	;tblptru may be non-zero
  7808  011678                     	endif
  7809  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7810  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7811  01167A  6EF8               	movwf	tblptru,c
  7812  01167C                     	endif
  7813  01167C  0008               	tblrd		*
  7814  01167E  50F5               	movf	tablat,w,c
  7815  011680  0A63               	xorlw	99
  7816  011682  A4D8               	btfss	status,2,c
  7817  011684  D036               	goto	l10871
  7818                           
  7819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7820                           ;stkvar	_fmt @ sp[(-32)+-4]
  7821  011686  0EDC               	movlw	-36
  7822  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7823  01168E  0EDD               	movlw	-35
  7824  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7825  011696  2ADE               	incf	postinc2,f,c
  7826  011698  0E00               	movlw	0
  7827  01169A  22DD               	addwfc	postdec2,f,c
  7828                           
  7829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7830                           ;stkvar	_ap @ sp[(-32)+-6]
  7831  01169C  0EDA               	movlw	-38
  7832  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7833  0116A4  0EDB               	movlw	-37
  7834  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7835  0116AC  0E02               	movlw	2
  7836  0116AE  5EDE               	subwf	postinc2,f,c
  7837  0116B0  0E00               	movlw	0
  7838  0116B2  5ADD               	subwfb	postdec2,f,c
  7839  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7840  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7841  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7842  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7843  0116CC  50DF               	movf	indf2,w,c
  7844  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7845                           
  7846                           ;stkvar	_c @ sp[(-32)+31]
  7847  0116D0  0EFF               	movlw	-1
  7848  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7849                           
  7850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7851                           ;stkvar	_c @ sp[(-32)+31]
  7852  0116D8  0EFF               	movlw	-1
  7853  0116DA  50E3               	movf	plusw1,w,c
  7854  0116DC  6EE6               	movwf	postinc1,c
  7855                           
  7856                           ;stkvar	_fp @ sp[(-33)+-2]
  7857  0116DE  0EDD               	movlw	-35
  7858  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7859  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7860  0116EC  EC42  F0B9         	call	_ctoa	;wreg free
  7861  0116F0  D343               	goto	l2017
  7862  0116F2                     l10871:
  7863                           
  7864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7865                           ;stkvar	_fmt @ sp[(-32)+-4]
  7866  0116F2  0EDC               	movlw	-36
  7867  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7868  0116FA  0EDD               	movlw	-35
  7869  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7870  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7871  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7872  01170E                     	if	0	;tblptru may be non-zero
  7873  01170E                     	endif
  7874  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7875  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7876  011710  6EF8               	movwf	tblptru,c
  7877  011712                     	endif
  7878  011712  0008               	tblrd		*
  7879  011714  50F5               	movf	tablat,w,c
  7880  011716  0A64               	xorlw	100
  7881  011718  B4D8               	btfsc	status,2,c
  7882  01171A  D015               	goto	u11960
  7883                           
  7884                           ;stkvar	_fmt @ sp[(-32)+-4]
  7885  01171C  0EDC               	movlw	-36
  7886  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7887  011724  0EDD               	movlw	-35
  7888  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7889  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7890  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7891  011738                     	if	0	;tblptru may be non-zero
  7892  011738                     	endif
  7893  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7894  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7895  01173A  6EF8               	movwf	tblptru,c
  7896  01173C                     	endif
  7897  01173C  0008               	tblrd		*
  7898  01173E  50F5               	movf	tablat,w,c
  7899  011740  0A69               	xorlw	105
  7900  011742  A4D8               	btfss	status,2,c
  7901  011744  D075               	goto	l10883
  7902  011746                     u11960:
  7903                           
  7904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7905                           ;stkvar	_fmt @ sp[(-32)+-4]
  7906  011746  0EDC               	movlw	-36
  7907  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7908  01174E  0EDD               	movlw	-35
  7909  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7910  011756  2ADE               	incf	postinc2,f,c
  7911  011758  0E00               	movlw	0
  7912  01175A  22DD               	addwfc	postdec2,f,c
  7913                           
  7914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7915                           ;stkvar	_ap @ sp[(-32)+-6]
  7916  01175C  0EDA               	movlw	-38
  7917  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7918  011764  0EDB               	movlw	-37
  7919  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7920  01176C  0E02               	movlw	2
  7921  01176E  5EDE               	subwf	postinc2,f,c
  7922  011770  0E00               	movlw	0
  7923  011772  5ADD               	subwfb	postdec2,f,c
  7924  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  7925  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  7926  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7927  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7928  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  7929  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  7930                           
  7931                           ;stkvar	_ll @ sp[(-32)+14]
  7932  011798  0EEE               	movlw	-18
  7933  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7934  0117A0  0EEF               	movlw	-17
  7935  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7936  0117A8  6A32               	clrf	btemp^0,c
  7937  0117AA  BEE3               	btfsc	plusw1,7,c
  7938  0117AC  6832               	setf	btemp^0,c
  7939  0117AE  0EF0               	movlw	-16
  7940  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7941  0117B6  0EF1               	movlw	-15
  7942  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7943  0117BE  0EF2               	movlw	-14
  7944  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7945  0117C6  0EF3               	movlw	-13
  7946  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7947  0117CE  0EF4               	movlw	-12
  7948  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7949  0117D6  0EF5               	movlw	-11
  7950  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7951                           
  7952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7953                           ;stkvar	_ll @ sp[(-32)+14]
  7954  0117DE  50E1               	movf	fsr1l,w,c
  7955  0117E0  0FEE               	addlw	-18
  7956  0117E2  6ED9               	movwf	fsr2l,c
  7957  0117E4  50E2               	movf	fsr1h,w,c
  7958  0117E6  6EDA               	movwf	fsr2h,c
  7959  0117E8  0EFF               	movlw	255
  7960  0117EA  22DA               	addwfc	fsr2h,f,c
  7961  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7962  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7963  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7964  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7965  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7966  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7967  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7968  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7969                           
  7970                           ;stkvar	_fp @ sp[(-40)+-2]
  7971  01181C  0ED6               	movlw	-42
  7972  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7973  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7974  01182A  EC17  F09E         	call	_dtoa	;wreg free
  7975  01182E  D2A4               	goto	l2017
  7976  011830                     l10883:
  7977                           
  7978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7979                           ;stkvar	_ct @ sp[(-32)+26]
  7980  011830  0EFA               	movlw	-6
  7981  011832  006F FF8C  F032    	movff	plusw1,btemp
  7982  011838  0E66               	movlw	102
  7983  01183A  1832               	xorwf	btemp^0,w,c
  7984  01183C  A4D8               	btfss	status,2,c
  7985  01183E  D06E               	goto	l10895
  7986                           
  7987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7988                           ;stkvar	_fmt @ sp[(-32)+-4]
  7989  011840  0EDC               	movlw	-36
  7990  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7991  011848  0EDD               	movlw	-35
  7992  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7993  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7994  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7995  01185C                     	if	0	;tblptru may be non-zero
  7996  01185C                     	endif
  7997  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7998  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7999  01185E  6EF8               	movwf	tblptru,c
  8000  011860                     	endif
  8001                           
  8002                           ;stkvar	_c @ sp[(-32)+31]
  8003  011860  0008               	tblrd		*
  8004  011862  0EFF               	movlw	-1
  8005  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8006                           
  8007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8008                           ;stkvar	_fmt @ sp[(-32)+-4]
  8009  01186A  0EDC               	movlw	-36
  8010  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8011  011872  0EDD               	movlw	-35
  8012  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8013  01187A  2ADE               	incf	postinc2,f,c
  8014  01187C  0E00               	movlw	0
  8015  01187E  22DD               	addwfc	postdec2,f,c
  8016                           
  8017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8018                           ;stkvar	_ap @ sp[(-32)+-6]
  8019  011880  0EDA               	movlw	-38
  8020  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8021  011888  0EDB               	movlw	-37
  8022  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8023  011890  0E04               	movlw	4
  8024  011892  5EDE               	subwf	postinc2,f,c
  8025  011894  0E00               	movlw	0
  8026  011896  5ADD               	subwfb	postdec2,f,c
  8027  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8028  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8029  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8030  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8031  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8032  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8033  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8034  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8035                           
  8036                           ;stkvar	_f @ sp[(-32)+22]
  8037  0118C8  0EF6               	movlw	-10
  8038  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8039  0118D0  0EF7               	movlw	-9
  8040  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8041  0118D8  0EF8               	movlw	-8
  8042  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8043  0118E0  0EF9               	movlw	-7
  8044  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8045  0118E8                     l10891:
  8046                           
  8047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8048                           ;stkvar	_c @ sp[(-32)+31]
  8049  0118E8  0EFF               	movlw	-1
  8050  0118EA  50E3               	movf	plusw1,w,c
  8051  0118EC  6EE6               	movwf	postinc1,c
  8052                           
  8053                           ;stkvar	_f @ sp[(-33)+22]
  8054  0118EE  0EF5               	movlw	-11
  8055  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8056  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8057  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8058  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8059                           
  8060                           ;stkvar	_fp @ sp[(-37)+-2]
  8061  011908  0ED9               	movlw	-39
  8062  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8063  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8064  011916  EC00  F080         	call	_efgtoa	;wreg free
  8065  01191A  D22E               	goto	l2017
  8066  01191C                     l10895:
  8067                           
  8068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8069  01191C  0E02               	movlw	2
  8070  01191E  6EE6               	movwf	postinc1,c
  8071  011920  0E00               	movlw	0
  8072  011922  6EE6               	movwf	postinc1,c
  8073  011924  0EF5               	movlw	low STR_42
  8074  011926  6EE6               	movwf	postinc1,c
  8075  011928  0EFF               	movlw	high STR_42
  8076  01192A  6EE6               	movwf	postinc1,c
  8077                           
  8078                           ;stkvar	_ct @ sp[(-36)+26]
  8079  01192C  0EF6               	movlw	246
  8080  01192E  24E1               	addwf	fsr1l,w,c
  8081  011930  6E32               	movwf	btemp^0,c
  8082  011932  0EFF               	movlw	255
  8083  011934  20E2               	addwfc	fsr1h,w,c
  8084  011936  6E33               	movwf	(btemp+1)^0,c
  8085  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8086  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8087  011944  EC6F  F0AC         	call	_strncmp	;wreg free
  8088  011948  5032               	movf	btemp^0,w,c
  8089  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8090  01194C  A4D8               	btfss	status,2,c
  8091  01194E  D096               	goto	l10915
  8092                           
  8093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8094                           ;stkvar	_fmt @ sp[(-32)+-4]
  8095  011950  0EDC               	movlw	-36
  8096  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8097  011958  0EDD               	movlw	-35
  8098  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8099  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8100  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8101  01196C  0E01               	movlw	1
  8102  01196E  263C               	addwf	(btemp+10)^0,f,c
  8103  011970  0E00               	movlw	0
  8104  011972  223D               	addwfc	(btemp+11)^0,f,c
  8105  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8106  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8107  011980                     	if	0	;tblptru may be non-zero
  8108  011980                     	endif
  8109  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8110  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8111  011982  6EF8               	movwf	tblptru,c
  8112  011984                     	endif
  8113                           
  8114                           ;stkvar	_c @ sp[(-32)+31]
  8115  011984  0008               	tblrd		*
  8116  011986  0EFF               	movlw	-1
  8117  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8118  01198E  0EBF               	movlw	191
  8119  011990  6E3C               	movwf	(btemp+10)^0,c
  8120  011992  0EFF               	movlw	255
  8121  011994  6E3D               	movwf	(btemp+11)^0,c
  8122                           
  8123                           ;stkvar	_fmt @ sp[(-32)+-4]
  8124  011996  0EDC               	movlw	-36
  8125  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8126  01199E  0EDD               	movlw	-35
  8127  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8128  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8129  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8130  0119B2                     	if	0	;tblptru may be non-zero
  8131  0119B2                     	endif
  8132  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8133  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8134  0119B4  6EF8               	movwf	tblptru,c
  8135  0119B6                     	endif
  8136  0119B6  0008               	tblrd		*
  8137  0119B8  50F5               	movf	tablat,w,c
  8138  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8139  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8140  0119BE  503C               	movf	(btemp+10)^0,w,c
  8141  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8142  0119C2  503D               	movf	(btemp+11)^0,w,c
  8143  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8144  0119C6  503B               	movf	(btemp+9)^0,w,c
  8145  0119C8  E106               	bnz	u11990
  8146  0119CA  0E1A               	movlw	26
  8147  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8148  0119CE  B0D8               	btfsc	status,0,c
  8149  0119D0  D002               	goto	u11990
  8150  0119D2  0E01               	movlw	1
  8151  0119D4  D001               	goto	u12000
  8152  0119D6                     u11990:
  8153  0119D6  0E00               	movlw	0
  8154  0119D8                     u12000:
  8155  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8156  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8157                           
  8158                           ;stkvar	_vfpfcnvrt$4432 @ sp[(-32)+2]
  8159  0119DC  0EE2               	movlw	-30
  8160  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8161  0119E4  0EE3               	movlw	-29
  8162  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8163                           
  8164                           ;stkvar	_vfpfcnvrt$4432 @ sp[(-32)+2]
  8165  0119EC  0EE2               	movlw	-30
  8166  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8167  0119F4  0EE3               	movlw	-29
  8168  0119F6  50E3               	movf	plusw1,w,c
  8169  0119F8  1032               	iorwf	btemp^0,w,c
  8170                           
  8171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8172                           ;stkvar	_ap @ sp[(-32)+-6]
  8173                           
  8174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8175                           
  8176                           ;stkvar	_f @ sp[(-32)+22]
  8177                           
  8178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8179                           ;stkvar	_ap @ sp[(-32)+-6]
  8180  0119FA  0EDA               	movlw	-38
  8181  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8182  011A02  0EDB               	movlw	-37
  8183  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8184  011A0A  0E04               	movlw	4
  8185  011A0C  5EDE               	subwf	postinc2,f,c
  8186  011A0E  0E00               	movlw	0
  8187  011A10  5ADD               	subwfb	postdec2,f,c
  8188  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8189  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8190  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8191  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8192  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8193  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8194  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8195  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8196                           
  8197                           ;stkvar	_f @ sp[(-32)+22]
  8198  011A42  0EF6               	movlw	-10
  8199  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8200  011A4A  0EF7               	movlw	-9
  8201  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8202  011A52  0EF8               	movlw	-8
  8203  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8204  011A5A  0EF9               	movlw	-7
  8205  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8206                           
  8207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8208                           ;stkvar	_fmt @ sp[(-32)+-4]
  8209  011A62  0EDC               	movlw	-36
  8210  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8211  011A6A  0EDD               	movlw	-35
  8212  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8213  011A72  0E02               	movlw	2
  8214  011A74  26DE               	addwf	postinc2,f,c
  8215  011A76  0E00               	movlw	0
  8216  011A78  22DD               	addwfc	postdec2,f,c
  8217  011A7A  D736               	goto	l10891
  8218  011A7C                     l10915:
  8219                           
  8220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8221                           ;stkvar	_fmt @ sp[(-32)+-4]
  8222  011A7C  0EDC               	movlw	-36
  8223  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8224  011A84  0EDD               	movlw	-35
  8225  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8226  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8227  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8228  011A98                     	if	0	;tblptru may be non-zero
  8229  011A98                     	endif
  8230  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8231  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8232  011A9A  6EF8               	movwf	tblptru,c
  8233  011A9C                     	endif
  8234  011A9C  0008               	tblrd		*
  8235  011A9E  50F5               	movf	tablat,w,c
  8236  011AA0  0A73               	xorlw	115
  8237  011AA2  A4D8               	btfss	status,2,c
  8238  011AA4  D042               	goto	l10925
  8239                           
  8240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8241                           ;stkvar	_fmt @ sp[(-32)+-4]
  8242  011AA6  0EDC               	movlw	-36
  8243  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8244  011AAE  0EDD               	movlw	-35
  8245  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8246  011AB6  2ADE               	incf	postinc2,f,c
  8247  011AB8  0E00               	movlw	0
  8248  011ABA  22DD               	addwfc	postdec2,f,c
  8249                           
  8250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8251                           ;stkvar	_ap @ sp[(-32)+-6]
  8252  011ABC  0EDA               	movlw	-38
  8253  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8254  011AC4  0EDB               	movlw	-37
  8255  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8256  011ACC  0E02               	movlw	2
  8257  011ACE  5EDE               	subwf	postinc2,f,c
  8258  011AD0  0E00               	movlw	0
  8259  011AD2  5ADD               	subwfb	postdec2,f,c
  8260  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8261  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8262  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8263  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8264  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8265  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8266                           
  8267                           ;stkvar	_cp @ sp[(-32)+29]
  8268  011AF8  0EFE               	movlw	-2
  8269  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8270  011B00  0EFD               	movlw	-3
  8271  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8272                           
  8273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8274                           ;stkvar	_cp @ sp[(-32)+29]
  8275  011B08  0EFD               	movlw	-3
  8276  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8277  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8278                           
  8279                           ;stkvar	_fp @ sp[(-34)+-2]
  8280  011B16  0EDC               	movlw	-36
  8281  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8282  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8283  011B24  EC60  F0A5         	call	_stoa	;wreg free
  8284  011B28  D127               	goto	l2017
  8285  011B2A                     l10925:
  8286                           
  8287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8288                           ;stkvar	_fmt @ sp[(-32)+-4]
  8289  011B2A  0EDC               	movlw	-36
  8290  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8291  011B32  0EDD               	movlw	-35
  8292  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8293  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8294  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8295  011B46                     	if	0	;tblptru may be non-zero
  8296  011B46                     	endif
  8297  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8298  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8299  011B48  6EF8               	movwf	tblptru,c
  8300  011B4A                     	endif
  8301  011B4A  0008               	tblrd		*
  8302  011B4C  50F5               	movf	tablat,w,c
  8303  011B4E  0A78               	xorlw	120
  8304  011B50  B4D8               	btfsc	status,2,c
  8305  011B52  D015               	goto	u12040
  8306                           
  8307                           ;stkvar	_fmt @ sp[(-32)+-4]
  8308  011B54  0EDC               	movlw	-36
  8309  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8310  011B5C  0EDD               	movlw	-35
  8311  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8312  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8313  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8314  011B70                     	if	0	;tblptru may be non-zero
  8315  011B70                     	endif
  8316  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8317  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8318  011B72  6EF8               	movwf	tblptru,c
  8319  011B74                     	endif
  8320  011B74  0008               	tblrd		*
  8321  011B76  50F5               	movf	tablat,w,c
  8322  011B78  0A58               	xorlw	88
  8323  011B7A  A4D8               	btfss	status,2,c
  8324  011B7C  D094               	goto	l10939
  8325  011B7E                     u12040:
  8326                           
  8327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8328                           ;stkvar	_fmt @ sp[(-32)+-4]
  8329  011B7E  0EDC               	movlw	-36
  8330  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8331  011B86  0EDD               	movlw	-35
  8332  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8333  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8334  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8335  011B9A                     	if	0	;tblptru may be non-zero
  8336  011B9A                     	endif
  8337  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8338  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8339  011B9C  6EF8               	movwf	tblptru,c
  8340  011B9E                     	endif
  8341                           
  8342                           ;stkvar	_c @ sp[(-32)+31]
  8343  011B9E  0008               	tblrd		*
  8344  011BA0  0EFF               	movlw	-1
  8345  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8346                           
  8347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8348                           ;stkvar	_fmt @ sp[(-32)+-4]
  8349  011BA8  0EDC               	movlw	-36
  8350  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8351  011BB0  0EDD               	movlw	-35
  8352  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8353  011BB8  2ADE               	incf	postinc2,f,c
  8354  011BBA  0E00               	movlw	0
  8355  011BBC  22DD               	addwfc	postdec2,f,c
  8356                           
  8357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8358                           ;stkvar	_ap @ sp[(-32)+-6]
  8359  011BBE  0EDA               	movlw	-38
  8360  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8361  011BC6  0EDB               	movlw	-37
  8362  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8363  011BCE  0E02               	movlw	2
  8364  011BD0  5EDE               	subwf	postinc2,f,c
  8365  011BD2  0E00               	movlw	0
  8366  011BD4  5ADD               	subwfb	postdec2,f,c
  8367  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8368  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8369  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8370  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8371  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8372  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8373  011BFA  503C               	movf	(btemp+10)^0,w,c
  8374  011BFC  6E42               	movwf	(btemp+16)^0,c
  8375  011BFE  503D               	movf	(btemp+11)^0,w,c
  8376  011C00  6E43               	movwf	(btemp+17)^0,c
  8377  011C02  6A44               	clrf	(btemp+18)^0,c
  8378  011C04  6A45               	clrf	(btemp+19)^0,c
  8379  011C06  6A46               	clrf	(btemp+20)^0,c
  8380  011C08  6A47               	clrf	(btemp+21)^0,c
  8381  011C0A  6A48               	clrf	(btemp+22)^0,c
  8382  011C0C  6A49               	clrf	(btemp+23)^0,c
  8383                           
  8384                           ;stkvar	_llu @ sp[(-32)+6]
  8385  011C0E  0EE6               	movlw	-26
  8386  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8387  011C16  0EE7               	movlw	-25
  8388  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8389  011C1E  0EE8               	movlw	-24
  8390  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8391  011C26  0EE9               	movlw	-23
  8392  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8393  011C2E  0EEA               	movlw	-22
  8394  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8395  011C36  0EEB               	movlw	-21
  8396  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8397  011C3E  0EEC               	movlw	-20
  8398  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8399  011C46  0EED               	movlw	-19
  8400  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8401                           
  8402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8403                           ;stkvar	_c @ sp[(-32)+31]
  8404  011C4E  0EFF               	movlw	-1
  8405  011C50  50E3               	movf	plusw1,w,c
  8406  011C52  6EE6               	movwf	postinc1,c
  8407                           
  8408                           ;stkvar	_llu @ sp[(-33)+6]
  8409  011C54  50E1               	movf	fsr1l,w,c
  8410  011C56  0FE5               	addlw	-27
  8411  011C58  6ED9               	movwf	fsr2l,c
  8412  011C5A  50E2               	movf	fsr1h,w,c
  8413  011C5C  6EDA               	movwf	fsr2h,c
  8414  011C5E  0EFF               	movlw	255
  8415  011C60  22DA               	addwfc	fsr2h,f,c
  8416  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8417  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8418  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8419  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8420  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8421  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8422  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8423  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8424                           
  8425                           ;stkvar	_fp @ sp[(-41)+-2]
  8426  011C92  0ED5               	movlw	-43
  8427  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8428  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8429  011CA0  EC57  F0A0         	call	_xtoa	;wreg free
  8430  011CA4  D069               	goto	l2017
  8431  011CA6                     l10939:
  8432                           
  8433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8434                           ;stkvar	_fmt @ sp[(-32)+-4]
  8435  011CA6  0EDC               	movlw	-36
  8436  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8437  011CAE  0EDD               	movlw	-35
  8438  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8439  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8440  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8441  011CC2                     	if	0	;tblptru may be non-zero
  8442  011CC2                     	endif
  8443  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8444  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8445  011CC4  6EF8               	movwf	tblptru,c
  8446  011CC6                     	endif
  8447  011CC6  0008               	tblrd		*
  8448  011CC8  50F5               	movf	tablat,w,c
  8449  011CCA  0A25               	xorlw	37
  8450  011CCC  A4D8               	btfss	status,2,c
  8451  011CCE  D01A               	goto	l10949
  8452                           
  8453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8454                           ;stkvar	_fmt @ sp[(-32)+-4]
  8455  011CD0  0EDC               	movlw	-36
  8456  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8457  011CD8  0EDD               	movlw	-35
  8458  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8459  011CE0  2ADE               	incf	postinc2,f,c
  8460  011CE2  0E00               	movlw	0
  8461  011CE4  22DD               	addwfc	postdec2,f,c
  8462                           
  8463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8464                           ;stkvar	_fp @ sp[(-32)+-2]
  8465  011CE6  0EDE               	movlw	-34
  8466  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8467  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8468  011CF4  0E25               	movlw	37
  8469  011CF6  6EE6               	movwf	postinc1,c
  8470  011CF8  0E00               	movlw	0
  8471  011CFA  6EE6               	movwf	postinc1,c
  8472  011CFC  EC4A  F0B2         	call	_fputc	;wreg free
  8473  011D00                     l10945:
  8474                           
  8475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8476  011D00  0E01               	movlw	1
  8477  011D02  D00C               	goto	L6
  8478  011D04                     l10949:
  8479                           
  8480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8481                           ;stkvar	_fmt @ sp[(-32)+-4]
  8482  011D04  0EDC               	movlw	-36
  8483  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8484  011D0C  0EDD               	movlw	-35
  8485  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8486  011D14  2ADE               	incf	postinc2,f,c
  8487  011D16  0E00               	movlw	0
  8488  011D18  22DD               	addwfc	postdec2,f,c
  8489                           
  8490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8491  011D1A  0E00               	movlw	0
  8492  011D1C                     L6:
  8493  011D1C  6E32               	movwf	btemp^0,c
  8494  011D1E  0E00               	movlw	0
  8495  011D20  6E33               	movwf	(btemp+1)^0,c
  8496  011D22  D02A               	goto	l2017
  8497  011D24                     l10955:
  8498                           
  8499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8500                           ;stkvar	_fp @ sp[(-32)+-2]
  8501  011D24  0EDE               	movlw	-34
  8502  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8503  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8504                           
  8505                           ;stkvar	_fmt @ sp[(-34)+-4]
  8506  011D32  0EDA               	movlw	-38
  8507  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8508  011D3A  0EDB               	movlw	-37
  8509  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8510  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8511  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8512  011D4E                     	if	0	;tblptru may be non-zero
  8513  011D4E                     	endif
  8514  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8515  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8516  011D50  6EF8               	movwf	tblptru,c
  8517  011D52                     	endif
  8518  011D52  0008               	tblrd		*
  8519  011D54  50F5               	movf	tablat,w,c
  8520  011D56  6EE6               	movwf	postinc1,c
  8521  011D58  0E00               	movlw	0
  8522  011D5A  6EE6               	movwf	postinc1,c
  8523  011D5C  EC4A  F0B2         	call	_fputc	;wreg free
  8524                           
  8525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8526                           ;stkvar	_fmt @ sp[(-32)+-4]
  8527  011D60  0EDC               	movlw	-36
  8528  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8529  011D68  0EDD               	movlw	-35
  8530  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8531  011D70  2ADE               	incf	postinc2,f,c
  8532  011D72  0E00               	movlw	0
  8533  011D74  22DD               	addwfc	postdec2,f,c
  8534  011D76  D7C4               	goto	l10945
  8535  011D78                     l2017:
  8536                           
  8537                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8538  011D78  0EDA               	movlw	218
  8539  011D7A  26E1               	addwf	fsr1l,f,c
  8540  011D7C  0EFF               	movlw	255
  8541  011D7E  22E2               	addwfc	fsr1h,f,c
  8542  011D80  0012               	return		;funcret
  8543  011D82                     __end_of_vfpfcnvrt:
  8544                           	opt callstack 0
  8545                           
  8546 ;; *************** function _xtoa *****************
  8547 ;; Defined at:
  8548 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8551 ;;		 -> f(6), NULL(0), 
  8552 ;;  d               8  [STACK] unsigned long long 
  8553 ;;  x               1  [STACK] unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  n               8  [STACK] unsigned long long 
  8556 ;;  c               2  [STACK] int 
  8557 ;;  i               2  [STACK] int 
  8558 ;;  w               2  [STACK] int 
  8559 ;;  p               2  [STACK] int 
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  2  [STACK] int 
  8562 ;; Registers used:
  8563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/5
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8573 ;;Total ram usage:        0 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:   11
  8576 ;; This function calls:
  8577 ;;		_isalpha
  8578 ;;		_isupper
  8579 ;;		_pad
  8580 ;;		_toupper
  8581 ;; This function is called by:
  8582 ;;		_vfpfcnvrt
  8583 ;; This function uses a reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text38
  8587  0140AE                     __ptext38:
  8588                           	opt callstack 0
  8589  0140AE                     _xtoa:
  8590                           	opt callstack 0
  8591                           
  8592                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8593  0140AE  0E14               	movlw	20
  8594  0140B0  26E1               	addwf	fsr1l,f,c
  8595  0140B2  0E00               	movlw	0
  8596  0140B4  22E2               	addwfc	fsr1h,f,c
  8597                           
  8598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8599                           
  8600                           ;incstack = 0
  8601  0140B6  AE1E               	btfss	(_prec+1)^0,7,c
  8602                           
  8603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8604  0140B8  921F               	bcf	_flags^0,1,c
  8605                           
  8606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8607  0140BA  BE1E               	btfsc	(_prec+1)^0,7,c
  8608  0140BC  D005               	goto	u11520
  8609  0140BE  501E               	movf	(_prec+1)^0,w,c
  8610  0140C0  E110               	bnz	l10669
  8611  0140C2  041D               	decf	_prec^0,w,c
  8612  0140C4  B0D8               	btfsc	status,0,c
  8613  0140C6  D00D               	goto	l10669
  8614  0140C8                     u11520:
  8615  0140C8  0E01               	movlw	1
  8616  0140CA  6E3C               	movwf	(btemp+10)^0,c
  8617  0140CC  0E00               	movlw	0
  8618  0140CE  6E3D               	movwf	(btemp+11)^0,c
  8619                           
  8620                           ;stkvar	_p @ sp[(-20)+18]
  8621  0140D0  0EFE               	movlw	-2
  8622  0140D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8623  0140D8  0EFF               	movlw	-1
  8624  0140DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8625  0140E0  D008               	goto	l1967
  8626  0140E2                     l10669:
  8627                           
  8628                           ;stkvar	_p @ sp[(-20)+18]
  8629  0140E2  0EFE               	movlw	-2
  8630  0140E4  0060  F077  FFE3   	movff	_prec,plusw1
  8631  0140EA  0EFF               	movlw	-1
  8632  0140EC  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8633  0140F2                     l1967:
  8634                           
  8635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8636                           ;stkvar	_w @ sp[(-20)+16]
  8637  0140F2  0EFC               	movlw	-4
  8638  0140F4  0060  F06F  FFE3   	movff	_width,plusw1
  8639  0140FA  0EFD               	movlw	-3
  8640  0140FC  0060  F073  FFE3   	movff	_width+1,plusw1
  8641                           
  8642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8643  014102  A81F               	btfss	_flags^0,4,c
  8644  014104  D00B               	goto	l10675
  8645                           
  8646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8647                           ;stkvar	_w @ sp[(-20)+16]
  8648  014106  50E1               	movf	fsr1l,w,c
  8649  014108  0FFC               	addlw	-4
  8650  01410A  6ED9               	movwf	fsr2l,c
  8651  01410C  50E2               	movf	fsr1h,w,c
  8652  01410E  6EDA               	movwf	fsr2h,c
  8653  014110  0EFF               	movlw	255
  8654  014112  22DA               	addwfc	fsr2h,f,c
  8655  014114  0EFE               	movlw	254
  8656  014116  26DE               	addwf	postinc2,f,c
  8657  014118  0EFF               	movlw	255
  8658  01411A  22DD               	addwfc	postdec2,f,c
  8659  01411C                     l10675:
  8660                           
  8661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8662                           ;stkvar	_d @ sp[(-20)+-10]
  8663  01411C  0EE2               	movlw	226
  8664  01411E  24E1               	addwf	fsr1l,w,c
  8665  014120  6ED9               	movwf	fsr2l,c
  8666  014122  0EFF               	movlw	255
  8667  014124  20E2               	addwfc	fsr1h,w,c
  8668  014126  6EDA               	movwf	fsr2h,c
  8669                           
  8670                           ;stkvar	_n @ sp[(-20)+4]
  8671  014128  0E08               	movlw	8
  8672  01412A  6E32               	movwf	btemp^0,c
  8673  01412C  0EF0               	movlw	-16
  8674  01412E                     us1154999:
  8675  01412E  006F FF7B FFE3     	movff	postinc2,plusw1
  8676  014134  28E8               	incf	wreg,w,c
  8677  014136  2E32               	decfsz	btemp^0,f,c
  8678  014138  D7FA               	bra	us1154999
  8679                           
  8680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8681  01413A  0E4F               	movlw	79
  8682  01413C  6E3C               	movwf	(btemp+10)^0,c
  8683  01413E  0E00               	movlw	0
  8684  014140  6E3D               	movwf	(btemp+11)^0,c
  8685                           
  8686                           ;stkvar	_i @ sp[(-20)+14]
  8687  014142  0EFA               	movlw	-6
  8688  014144  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8689  01414A  0EFB               	movlw	-5
  8690  01414C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8691                           
  8692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8693  014152  0102               	movlb	2	; () banked
  8694  014154  6B8F               	clrf	(_dbuf+79)& (0+255),b
  8695                           
  8696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8697  014156  D0EE               	goto	l10713
  8698  014158                     l10681:
  8699                           
  8700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8701                           ;stkvar	_i @ sp[(-20)+14]
  8702  014158  50E1               	movf	fsr1l,w,c
  8703  01415A  0FFA               	addlw	-6
  8704  01415C  6ED9               	movwf	fsr2l,c
  8705  01415E  50E2               	movf	fsr1h,w,c
  8706  014160  6EDA               	movwf	fsr2h,c
  8707  014162  0EFF               	movlw	255
  8708  014164  22DA               	addwfc	fsr2h,f,c
  8709  014166  06DE               	decf	postinc2,f,c
  8710  014168  0E00               	movlw	0
  8711  01416A  5ADD               	subwfb	postdec2,f,c
  8712                           
  8713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8714                           ;stkvar	_n @ sp[(-20)+4]
  8715  01416C  0EF0               	movlw	-16
  8716  01416E  006F FF8C  F03C    	movff	plusw1,btemp+10
  8717  014174  0EF1               	movlw	-15
  8718  014176  006F FF8C  F03D    	movff	plusw1,btemp+11
  8719  01417C  0E0F               	movlw	15
  8720  01417E  163C               	andwf	(btemp+10)^0,f,c
  8721  014180  0E00               	movlw	0
  8722  014182  163D               	andwf	(btemp+11)^0,f,c
  8723                           
  8724                           ;stkvar	_c @ sp[(-20)+12]
  8725  014184  0EF8               	movlw	-8
  8726  014186  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8727  01418C  0EF9               	movlw	-7
  8728  01418E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8729                           
  8730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8731                           ;stkvar	_c @ sp[(-20)+12]
  8732  014194  0EF9               	movlw	-7
  8733  014196  BEE3               	btfsc	plusw1,7,c
  8734  014198  D00F               	goto	l10689
  8735  01419A  0EF9               	movlw	-7
  8736  01419C  50E3               	movf	plusw1,w,c
  8737  01419E  E108               	bnz	u11550
  8738  0141A0  0EF8               	movlw	-8
  8739  0141A2  006F FF8C  F032    	movff	plusw1,btemp
  8740  0141A8  0E0A               	movlw	10
  8741  0141AA  5E32               	subwf	btemp^0,f,c
  8742  0141AC  A0D8               	btfss	status,0,c
  8743  0141AE  D004               	goto	l10689
  8744  0141B0                     u11550:
  8745                           
  8746                           ;stkvar	_c @ sp[(-20)+12]
  8747  0141B0  0EF8               	movlw	-8
  8748  0141B2  50E3               	movf	plusw1,w,c
  8749  0141B4  0F57               	addlw	87
  8750  0141B6  D003               	goto	L7
  8751  0141B8                     l10689:
  8752                           
  8753                           ;stkvar	_c @ sp[(-20)+12]
  8754  0141B8  0EF8               	movlw	-8
  8755  0141BA  50E3               	movf	plusw1,w,c
  8756  0141BC  0F30               	addlw	48
  8757  0141BE                     L7:
  8758  0141BE  6E3C               	movwf	(btemp+10)^0,c
  8759  0141C0  0EF9               	movlw	-7
  8760  0141C2  006F FF8C  F03D    	movff	plusw1,btemp+11
  8761  0141C8  0E00               	movlw	0
  8762  0141CA  223D               	addwfc	(btemp+11)^0,f,c
  8763                           
  8764                           ;stkvar	_c @ sp[(-20)+12]
  8765  0141CC  0EF8               	movlw	-8
  8766  0141CE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8767  0141D4  0EF9               	movlw	-7
  8768  0141D6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8769  0141DC  0EBF               	movlw	191
  8770  0141DE  6E3C               	movwf	(btemp+10)^0,c
  8771  0141E0  0EFF               	movlw	255
  8772  0141E2  6E3D               	movwf	(btemp+11)^0,c
  8773                           
  8774                           ;stkvar	_x @ sp[(-20)+-11]
  8775  0141E4  0EE1               	movlw	-31
  8776  0141E6  50E3               	movf	plusw1,w,c
  8777  0141E8  6E3A               	movwf	(btemp+8)^0,c
  8778  0141EA  6A3B               	clrf	(btemp+9)^0,c
  8779  0141EC  503C               	movf	(btemp+10)^0,w,c
  8780  0141EE  263A               	addwf	(btemp+8)^0,f,c
  8781  0141F0  503D               	movf	(btemp+11)^0,w,c
  8782  0141F2  223B               	addwfc	(btemp+9)^0,f,c
  8783  0141F4  503B               	movf	(btemp+9)^0,w,c
  8784  0141F6  E106               	bnz	u11560
  8785  0141F8  0E1A               	movlw	26
  8786  0141FA  5C3A               	subwf	(btemp+8)^0,w,c
  8787  0141FC  B0D8               	btfsc	status,0,c
  8788  0141FE  D002               	goto	u11560
  8789  014200  0E01               	movlw	1
  8790  014202  D001               	goto	u11570
  8791  014204                     u11560:
  8792  014204  0E00               	movlw	0
  8793  014206                     u11570:
  8794  014206  6E3C               	movwf	(btemp+10)^0,c
  8795  014208  6A3D               	clrf	(btemp+11)^0,c
  8796                           
  8797                           ;stkvar	_xtoa$4410 @ sp[(-20)+2]
  8798  01420A  0EEE               	movlw	-18
  8799  01420C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8800  014212  0EEF               	movlw	-17
  8801  014214  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8802                           
  8803                           ;stkvar	_xtoa$4410 @ sp[(-20)+2]
  8804  01421A  0EEE               	movlw	-18
  8805  01421C  006F FF8C  F032    	movff	plusw1,btemp
  8806  014222  0EEF               	movlw	-17
  8807  014224  50E3               	movf	plusw1,w,c
  8808  014226  1032               	iorwf	btemp^0,w,c
  8809  014228  B4D8               	btfsc	status,2,c
  8810  01422A  D041               	goto	l10705
  8811  01422C  0E9F               	movlw	159
  8812  01422E  6E3C               	movwf	(btemp+10)^0,c
  8813  014230  0EFF               	movlw	255
  8814  014232  6E3D               	movwf	(btemp+11)^0,c
  8815                           
  8816                           ;stkvar	_c @ sp[(-20)+12]
  8817  014234  0EF8               	movlw	-8
  8818  014236  006F FF8C  F03A    	movff	plusw1,btemp+8
  8819  01423C  0EF9               	movlw	-7
  8820  01423E  006F FF8C  F03B    	movff	plusw1,btemp+9
  8821  014244  0E20               	movlw	32
  8822  014246  123A               	iorwf	(btemp+8)^0,f,c
  8823  014248  0E00               	movlw	0
  8824  01424A  123B               	iorwf	(btemp+9)^0,f,c
  8825  01424C  503C               	movf	(btemp+10)^0,w,c
  8826  01424E  263A               	addwf	(btemp+8)^0,f,c
  8827  014250  503D               	movf	(btemp+11)^0,w,c
  8828  014252  223B               	addwfc	(btemp+9)^0,f,c
  8829  014254  503B               	movf	(btemp+9)^0,w,c
  8830  014256  E106               	bnz	u11590
  8831  014258  0E1A               	movlw	26
  8832  01425A  5C3A               	subwf	(btemp+8)^0,w,c
  8833  01425C  B0D8               	btfsc	status,0,c
  8834  01425E  D002               	goto	u11590
  8835  014260  0E01               	movlw	1
  8836  014262  D001               	goto	u11600
  8837  014264                     u11590:
  8838  014264  0E00               	movlw	0
  8839  014266                     u11600:
  8840  014266  6E3C               	movwf	(btemp+10)^0,c
  8841  014268  6A3D               	clrf	(btemp+11)^0,c
  8842                           
  8843                           ;stkvar	_xtoa$4411 @ sp[(-20)+0]
  8844  01426A  0EEC               	movlw	-20
  8845  01426C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8846  014272  0EED               	movlw	-19
  8847  014274  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8848                           
  8849                           ;stkvar	_xtoa$4411 @ sp[(-20)+0]
  8850  01427A  0EEC               	movlw	-20
  8851  01427C  006F FF8C  F032    	movff	plusw1,btemp
  8852  014282  0EED               	movlw	-19
  8853  014284  50E3               	movf	plusw1,w,c
  8854  014286  1032               	iorwf	btemp^0,w,c
  8855  014288  B4D8               	btfsc	status,2,c
  8856  01428A  D011               	goto	l10705
  8857                           
  8858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8859                           ;stkvar	_c @ sp[(-20)+12]
  8860  01428C  0EF8               	movlw	-8
  8861  01428E  006F FF8F FFE6     	movff	plusw1,postinc1
  8862  014294  006F FF8F FFE6     	movff	plusw1,postinc1
  8863  01429A  EC86  F0B9         	call	_toupper	;wreg free
  8864                           
  8865                           ;stkvar	_c @ sp[(-20)+12]
  8866  01429E  0EF8               	movlw	-8
  8867  0142A0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8868  0142A6  0EF9               	movlw	-7
  8869  0142A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8870  0142AE                     l10705:
  8871                           
  8872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8873                           ;stkvar	_c @ sp[(-20)+12]
  8874                           ;stkvar	_i @ sp[(-20)+14]
  8875  0142AE  0EFA               	movlw	-6
  8876  0142B0  006F FF8C  F03C    	movff	plusw1,btemp+10
  8877  0142B6  0EFB               	movlw	-5
  8878  0142B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  8879  0142BE  0E40               	movlw	low _dbuf
  8880  0142C0  243C               	addwf	(btemp+10)^0,w,c
  8881  0142C2  6ED9               	movwf	fsr2l,c
  8882  0142C4  0E02               	movlw	high _dbuf
  8883  0142C6  203D               	addwfc	(btemp+11)^0,w,c
  8884  0142C8  6EDA               	movwf	fsr2h,c
  8885  0142CA  0EF8               	movlw	-8
  8886  0142CC  006F FF8F FFDF     	movff	plusw1,indf2
  8887                           
  8888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8889                           ;stkvar	_p @ sp[(-20)+18]
  8890  0142D2  50E1               	movf	fsr1l,w,c
  8891  0142D4  0FFE               	addlw	-2
  8892  0142D6  6ED9               	movwf	fsr2l,c
  8893  0142D8  50E2               	movf	fsr1h,w,c
  8894  0142DA  6EDA               	movwf	fsr2h,c
  8895  0142DC  0EFF               	movlw	255
  8896  0142DE  22DA               	addwfc	fsr2h,f,c
  8897  0142E0  06DE               	decf	postinc2,f,c
  8898  0142E2  0E00               	movlw	0
  8899  0142E4  5ADD               	subwfb	postdec2,f,c
  8900                           
  8901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8902                           ;stkvar	_w @ sp[(-20)+16]
  8903  0142E6  50E1               	movf	fsr1l,w,c
  8904  0142E8  0FFC               	addlw	-4
  8905  0142EA  6ED9               	movwf	fsr2l,c
  8906  0142EC  50E2               	movf	fsr1h,w,c
  8907  0142EE  6EDA               	movwf	fsr2h,c
  8908  0142F0  0EFF               	movlw	255
  8909  0142F2  22DA               	addwfc	fsr2h,f,c
  8910  0142F4  06DE               	decf	postinc2,f,c
  8911  0142F6  0E00               	movlw	0
  8912  0142F8  5ADD               	subwfb	postdec2,f,c
  8913                           
  8914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8915  0142FA  0E04               	movlw	4
  8916  0142FC  6E3D               	movwf	(btemp+11)^0,c
  8917                           
  8918                           ;stkvar	_n @ sp[(-20)+4]
  8919  0142FE  50E1               	movf	fsr1l,w,c
  8920  014300  0FF0               	addlw	-16
  8921  014302  6ED9               	movwf	fsr2l,c
  8922  014304  50E2               	movf	fsr1h,w,c
  8923  014306  6EDA               	movwf	fsr2h,c
  8924  014308  0EFF               	movlw	255
  8925  01430A  22DA               	addwfc	fsr2h,f,c
  8926  01430C  283D               	incf	(btemp+11)^0,w,c
  8927  01430E  52DE               	movf	postinc2,f,c
  8928  014310  D00F               	goto	u11620
  8929  014312                     u11625:
  8930  014312  52DE               	movf	postinc2,f,c
  8931  014314  52DE               	movf	postinc2,f,c
  8932  014316  52DE               	movf	postinc2,f,c
  8933  014318  52DE               	movf	postinc2,f,c
  8934  01431A  52DE               	movf	postinc2,f,c
  8935  01431C  52DE               	movf	postinc2,f,c
  8936  01431E  90D8               	bcf	status,0,c
  8937  014320  32DD               	rrcf	postdec2,f,c
  8938  014322  32DD               	rrcf	postdec2,f,c
  8939  014324  32DD               	rrcf	postdec2,f,c
  8940  014326  32DD               	rrcf	postdec2,f,c
  8941  014328  32DD               	rrcf	postdec2,f,c
  8942  01432A  32DD               	rrcf	postdec2,f,c
  8943  01432C  32DD               	rrcf	postdec2,f,c
  8944  01432E  32DE               	rrcf	postinc2,f,c
  8945  014330                     u11620:
  8946  014330  2EE8               	decfsz	wreg,f,c
  8947  014332  D7EF               	goto	u11625
  8948  014334                     l10713:
  8949                           
  8950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8951                           ;stkvar	_i @ sp[(-20)+14]
  8952  014334  0EFB               	movlw	-5
  8953  014336  BEE3               	btfsc	plusw1,7,c
  8954  014338  D03A               	goto	u11670
  8955  01433A  0EFB               	movlw	-5
  8956  01433C  50E3               	movf	plusw1,w,c
  8957  01433E  E108               	bnz	u11630
  8958  014340  0EFA               	movlw	-6
  8959  014342  006F FF8C  F032    	movff	plusw1,btemp
  8960  014348  0E02               	movlw	2
  8961  01434A  5E32               	subwf	btemp^0,f,c
  8962  01434C  A0D8               	btfss	status,0,c
  8963  01434E  D02F               	goto	u11670
  8964  014350                     u11630:
  8965                           
  8966                           ;stkvar	_n @ sp[(-20)+4]
  8967  014350  0EF0               	movlw	-16
  8968  014352  50E3               	movf	plusw1,w,c
  8969  014354  E115               	bnz	u11641
  8970  014356  0EF1               	movlw	-15
  8971  014358  50E3               	movf	plusw1,w,c
  8972  01435A  E112               	bnz	u11641
  8973  01435C  0EF2               	movlw	-14
  8974  01435E  50E3               	movf	plusw1,w,c
  8975  014360  E10F               	bnz	u11641
  8976  014362  0EF3               	movlw	-13
  8977  014364  50E3               	movf	plusw1,w,c
  8978  014366  E10C               	bnz	u11641
  8979  014368  0EF4               	movlw	-12
  8980  01436A  50E3               	movf	plusw1,w,c
  8981  01436C  E109               	bnz	u11641
  8982  01436E  0EF5               	movlw	-11
  8983  014370  50E3               	movf	plusw1,w,c
  8984  014372  E106               	bnz	u11641
  8985  014374  0EF6               	movlw	-10
  8986  014376  50E3               	movf	plusw1,w,c
  8987  014378  E103               	bnz	u11641
  8988  01437A  0EF7               	movlw	-9
  8989  01437C  50E3               	movf	plusw1,w,c
  8990  01437E  A4D8               	btfss	status,2,c
  8991  014380                     u11641:
  8992  014380  D6EB               	goto	l10681
  8993                           
  8994                           ;stkvar	_p @ sp[(-20)+18]
  8995  014382  0EFF               	movlw	-1
  8996  014384  BEE3               	btfsc	plusw1,7,c
  8997  014386  D007               	goto	u11650
  8998  014388  0EFF               	movlw	-1
  8999  01438A  50E3               	movf	plusw1,w,c
  9000  01438C  E103               	bnz	u11651
  9001  01438E  0EFE               	movlw	-2
  9002  014390  04E3               	decf	plusw1,w,c
  9003  014392  B0D8               	btfsc	status,0,c
  9004  014394                     u11651:
  9005  014394  D6E1               	goto	l10681
  9006  014396                     u11650:
  9007                           
  9008                           ;stkvar	_w @ sp[(-20)+16]
  9009  014396  0EFD               	movlw	-3
  9010  014398  BEE3               	btfsc	plusw1,7,c
  9011  01439A  D009               	goto	u11670
  9012  01439C  0EFD               	movlw	-3
  9013  01439E  50E3               	movf	plusw1,w,c
  9014  0143A0  E104               	bnz	u11660
  9015  0143A2  0EFC               	movlw	-4
  9016  0143A4  04E3               	decf	plusw1,w,c
  9017  0143A6  A0D8               	btfss	status,0,c
  9018  0143A8  D002               	goto	u11670
  9019  0143AA                     u11660:
  9020  0143AA  B21F               	btfsc	_flags^0,1,c
  9021  0143AC  D6D5               	goto	l10681
  9022  0143AE                     u11670:
  9023                           
  9024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9025  0143AE  A81F               	btfss	_flags^0,4,c
  9026  0143B0  D036               	goto	l10729
  9027                           
  9028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9029                           ;stkvar	_i @ sp[(-20)+14]
  9030  0143B2  50E1               	movf	fsr1l,w,c
  9031  0143B4  0FFA               	addlw	-6
  9032  0143B6  6ED9               	movwf	fsr2l,c
  9033  0143B8  50E2               	movf	fsr1h,w,c
  9034  0143BA  6EDA               	movwf	fsr2h,c
  9035  0143BC  0EFF               	movlw	255
  9036  0143BE  22DA               	addwfc	fsr2h,f,c
  9037  0143C0  06DE               	decf	postinc2,f,c
  9038  0143C2  0E00               	movlw	0
  9039  0143C4  5ADD               	subwfb	postdec2,f,c
  9040                           
  9041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9042                           ;stkvar	_x @ sp[(-20)+-11]
  9043                           ;stkvar	_i @ sp[(-20)+14]
  9044  0143C6  0EFA               	movlw	-6
  9045  0143C8  006F FF8C  F03C    	movff	plusw1,btemp+10
  9046  0143CE  0EFB               	movlw	-5
  9047  0143D0  006F FF8C  F03D    	movff	plusw1,btemp+11
  9048  0143D6  0E40               	movlw	low _dbuf
  9049  0143D8  243C               	addwf	(btemp+10)^0,w,c
  9050  0143DA  6ED9               	movwf	fsr2l,c
  9051  0143DC  0E02               	movlw	high _dbuf
  9052  0143DE  203D               	addwfc	(btemp+11)^0,w,c
  9053  0143E0  6EDA               	movwf	fsr2h,c
  9054  0143E2  0EE1               	movlw	-31
  9055  0143E4  006F FF8F FFDF     	movff	plusw1,indf2
  9056                           
  9057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9058                           ;stkvar	_i @ sp[(-20)+14]
  9059  0143EA  50E1               	movf	fsr1l,w,c
  9060  0143EC  0FFA               	addlw	-6
  9061  0143EE  6ED9               	movwf	fsr2l,c
  9062  0143F0  50E2               	movf	fsr1h,w,c
  9063  0143F2  6EDA               	movwf	fsr2h,c
  9064  0143F4  0EFF               	movlw	255
  9065  0143F6  22DA               	addwfc	fsr2h,f,c
  9066  0143F8  06DE               	decf	postinc2,f,c
  9067  0143FA  0E00               	movlw	0
  9068  0143FC  5ADD               	subwfb	postdec2,f,c
  9069                           
  9070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9071                           ;stkvar	_i @ sp[(-20)+14]
  9072  0143FE  0EFA               	movlw	-6
  9073  014400  006F FF8C  F03C    	movff	plusw1,btemp+10
  9074  014406  0EFB               	movlw	-5
  9075  014408  006F FF8C  F03D    	movff	plusw1,btemp+11
  9076  01440E  0E40               	movlw	low _dbuf
  9077  014410  243C               	addwf	(btemp+10)^0,w,c
  9078  014412  6ED9               	movwf	fsr2l,c
  9079  014414  0E02               	movlw	high _dbuf
  9080  014416  203D               	addwfc	(btemp+11)^0,w,c
  9081  014418  6EDA               	movwf	fsr2h,c
  9082  01441A  0E30               	movlw	48
  9083  01441C  6EDF               	movwf	indf2,c
  9084  01441E                     l10729:
  9085                           
  9086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9087                           ;stkvar	_w @ sp[(-20)+16]
  9088  01441E  0EFC               	movlw	-4
  9089  014420  006F FF8F FFE6     	movff	plusw1,postinc1
  9090  014426  006F FF8F FFE6     	movff	plusw1,postinc1
  9091                           
  9092                           ;stkvar	_i @ sp[(-22)+14]
  9093  01442C  0E40               	movlw	low _dbuf
  9094  01442E  6E3C               	movwf	(btemp+10)^0,c
  9095  014430  0E02               	movlw	high _dbuf
  9096  014432  6E3D               	movwf	(btemp+11)^0,c
  9097  014434  0EF8               	movlw	-8
  9098  014436  50E3               	movf	plusw1,w,c
  9099  014438  263C               	addwf	(btemp+10)^0,f,c
  9100  01443A  0EF9               	movlw	-7
  9101  01443C  50E3               	movf	plusw1,w,c
  9102  01443E  223D               	addwfc	(btemp+11)^0,f,c
  9103  014440  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9104  014446  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9105                           
  9106                           ;stkvar	_fp @ sp[(-24)+-2]
  9107  01444C  0EE6               	movlw	-26
  9108  01444E  006F FF8F FFE6     	movff	plusw1,postinc1
  9109  014454  006F FF8F FFE6     	movff	plusw1,postinc1
  9110  01445A  EC68  F0B3         	call	_pad	;wreg free
  9111                           
  9112                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9113  01445E  0EE1               	movlw	225
  9114  014460  26E1               	addwf	fsr1l,f,c
  9115  014462  0EFF               	movlw	255
  9116  014464  22E2               	addwfc	fsr1h,f,c
  9117  014466  0012               	return		;funcret
  9118  014468                     __end_of_xtoa:
  9119                           	opt callstack 0
  9120                           
  9121 ;; *************** function _toupper *****************
  9122 ;; Defined at:
  9123 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  c               2  [STACK] int 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;		None
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  2  [STACK] int 
  9130 ;; Registers used:
  9131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/2
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9141 ;;Total ram usage:        0 bytes
  9142 ;; Hardware stack levels used:    1
  9143 ;; Hardware stack levels required when called:    7
  9144 ;; This function calls:
  9145 ;;		_islower
  9146 ;; This function is called by:
  9147 ;;		_xtoa
  9148 ;; This function uses a reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text39
  9152  01730C                     __ptext39:
  9153                           	opt callstack 0
  9154  01730C                     _toupper:
  9155                           	opt callstack 0
  9156                           
  9157                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9158  01730C  52E6               	movf	postinc1,f,c
  9159  01730E  52E6               	movf	postinc1,f,c
  9160                           
  9161                           ;stkvar	_c @ sp[(-2)+-2]
  9162                           
  9163                           ;incstack = 0
  9164  017310  0EFC               	movlw	-4
  9165  017312  50E3               	movf	plusw1,w,c
  9166  017314  0F9F               	addlw	159
  9167  017316  6E3C               	movwf	(btemp+10)^0,c
  9168  017318  0EFD               	movlw	-3
  9169  01731A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9170  017320  0EFF               	movlw	255
  9171  017322  223D               	addwfc	(btemp+11)^0,f,c
  9172  017324  503D               	movf	(btemp+11)^0,w,c
  9173  017326  E106               	bnz	u9620
  9174  017328  0E1A               	movlw	26
  9175  01732A  5C3C               	subwf	(btemp+10)^0,w,c
  9176  01732C  B0D8               	btfsc	status,0,c
  9177  01732E  D002               	goto	u9620
  9178  017330  0E01               	movlw	1
  9179  017332  D001               	goto	u9630
  9180  017334                     u9620:
  9181  017334  0E00               	movlw	0
  9182  017336                     u9630:
  9183  017336  6E3C               	movwf	(btemp+10)^0,c
  9184  017338  6A3D               	clrf	(btemp+11)^0,c
  9185                           
  9186                           ;stkvar	_toupper$5071 @ sp[(-2)+0]
  9187  01733A  0EFE               	movlw	-2
  9188  01733C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9189  017342  0EFF               	movlw	-1
  9190  017344  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9191                           
  9192                           ;stkvar	_toupper$5071 @ sp[(-2)+0]
  9193  01734A  0EFE               	movlw	-2
  9194  01734C  006F FF8C  F032    	movff	plusw1,btemp
  9195  017352  0EFF               	movlw	-1
  9196  017354  50E3               	movf	plusw1,w,c
  9197  017356  1032               	iorwf	btemp^0,w,c
  9198  017358  B4D8               	btfsc	status,2,c
  9199  01735A  D00D               	goto	l9631
  9200                           
  9201                           ;stkvar	_c @ sp[(-2)+-2]
  9202  01735C  0EFC               	movlw	-4
  9203  01735E  006F FF8C  F032    	movff	plusw1,btemp
  9204  017364  0EFD               	movlw	-3
  9205  017366  006F FF8C  F033    	movff	plusw1,btemp+1
  9206  01736C  0E5F               	movlw	95
  9207  01736E  1632               	andwf	btemp^0,f,c
  9208  017370  0E00               	movlw	0
  9209  017372  1633               	andwf	(btemp+1)^0,f,c
  9210  017374  D008               	goto	l2900
  9211  017376                     l9631:
  9212                           
  9213                           ;stkvar	_c @ sp[(-2)+-2]
  9214  017376  0EFC               	movlw	-4
  9215  017378  006F FF8C  F032    	movff	plusw1,btemp
  9216  01737E  0EFD               	movlw	-3
  9217  017380  006F FF8C  F033    	movff	plusw1,btemp+1
  9218  017386                     l2900:
  9219                           
  9220                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9221  017386  52E5               	movf	postdec1,f,c
  9222  017388  52E5               	movf	postdec1,f,c
  9223  01738A  52E5               	movf	postdec1,f,c
  9224  01738C  52E5               	movf	postdec1,f,c
  9225  01738E  0012               	return		;funcret
  9226  017390                     __end_of_toupper:
  9227                           	opt callstack 0
  9228                           
  9229 ;; *************** function _islower *****************
  9230 ;; Defined at:
  9231 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  c               2  [STACK] int 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  2  [STACK] int 
  9238 ;; Registers used:
  9239 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9249 ;;Total ram usage:        0 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    6
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_toupper
  9256 ;; This function uses a reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text40
  9260  017E3E                     __ptext40:
  9261                           	opt callstack 0
  9262  017E3E                     _islower:
  9263                           	opt callstack 16
  9264                           
  9265                           ;stkvar	_c @ sp[(0)+-2]
  9266                           
  9267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9268                           ;incstack = 0
  9269  017E3E  0EFE               	movlw	-2
  9270  017E40  50E3               	movf	plusw1,w,c
  9271  017E42  0F9F               	addlw	159
  9272  017E44  6E3C               	movwf	(btemp+10)^0,c
  9273  017E46  0EFF               	movlw	-1
  9274  017E48  006F FF8C  F03D    	movff	plusw1,btemp+11
  9275  017E4E  0EFF               	movlw	255
  9276  017E50  223D               	addwfc	(btemp+11)^0,f,c
  9277  017E52  503D               	movf	(btemp+11)^0,w,c
  9278  017E54  E106               	bnz	u9310
  9279  017E56  0E1A               	movlw	26
  9280  017E58  5C3C               	subwf	(btemp+10)^0,w,c
  9281  017E5A  B0D8               	btfsc	status,0,c
  9282  017E5C  D002               	goto	u9310
  9283  017E5E  0E01               	movlw	1
  9284  017E60  D001               	goto	u9320
  9285  017E62                     u9310:
  9286  017E62  0E00               	movlw	0
  9287  017E64                     u9320:
  9288  017E64  6E32               	movwf	btemp^0,c
  9289  017E66  6A33               	clrf	(btemp+1)^0,c
  9290                           
  9291                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9292  017E68  52E5               	movf	postdec1,f,c
  9293  017E6A  52E5               	movf	postdec1,f,c
  9294  017E6C  0012               	return		;funcret
  9295  017E6E                     __end_of_islower:
  9296                           	opt callstack 0
  9297                           
  9298 ;; *************** function _isalpha *****************
  9299 ;; Defined at:
  9300 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;  c               2  [STACK] int 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;		None
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  2  [STACK] int 
  9307 ;; Registers used:
  9308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9318 ;;Total ram usage:        0 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    6
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_xtoa
  9325 ;; This function uses a reentrant model
  9326 ;;
  9327                           
  9328                           	psect	text41
  9329  017BF0                     __ptext41:
  9330                           	opt callstack 0
  9331  017BF0                     _isalpha:
  9332                           	opt callstack 17
  9333                           
  9334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9335                           ;incstack = 0
  9336  017BF0  0E9F               	movlw	159
  9337  017BF2  6E3C               	movwf	(btemp+10)^0,c
  9338  017BF4  0EFF               	movlw	255
  9339  017BF6  6E3D               	movwf	(btemp+11)^0,c
  9340                           
  9341                           ;stkvar	_c @ sp[(0)+-2]
  9342  017BF8  0EFE               	movlw	-2
  9343  017BFA  006F FF8C  F03A    	movff	plusw1,btemp+8
  9344  017C00  0EFF               	movlw	-1
  9345  017C02  006F FF8C  F03B    	movff	plusw1,btemp+9
  9346  017C08  0E20               	movlw	32
  9347  017C0A  123A               	iorwf	(btemp+8)^0,f,c
  9348  017C0C  0E00               	movlw	0
  9349  017C0E  123B               	iorwf	(btemp+9)^0,f,c
  9350  017C10  503C               	movf	(btemp+10)^0,w,c
  9351  017C12  263A               	addwf	(btemp+8)^0,f,c
  9352  017C14  503D               	movf	(btemp+11)^0,w,c
  9353  017C16  223B               	addwfc	(btemp+9)^0,f,c
  9354  017C18  503B               	movf	(btemp+9)^0,w,c
  9355  017C1A  E106               	bnz	u9600
  9356  017C1C  0E1A               	movlw	26
  9357  017C1E  5C3A               	subwf	(btemp+8)^0,w,c
  9358  017C20  B0D8               	btfsc	status,0,c
  9359  017C22  D002               	goto	u9600
  9360  017C24  0E01               	movlw	1
  9361  017C26  D001               	goto	u9610
  9362  017C28                     u9600:
  9363  017C28  0E00               	movlw	0
  9364  017C2A                     u9610:
  9365  017C2A  6E32               	movwf	btemp^0,c
  9366  017C2C  6A33               	clrf	(btemp+1)^0,c
  9367                           
  9368                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9369  017C2E  52E5               	movf	postdec1,f,c
  9370  017C30  52E5               	movf	postdec1,f,c
  9371  017C32  0012               	return		;funcret
  9372  017C34                     __end_of_isalpha:
  9373                           	opt callstack 0
  9374                           
  9375 ;; *************** function _strncmp *****************
  9376 ;; Defined at:
  9377 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;  _l              2  [STACK] PTR const unsigned char 
  9380 ;;		 -> ct(3), 
  9381 ;;  _r              2  [STACK] PTR const unsigned char 
  9382 ;;		 -> STR_44(3), 
  9383 ;;  n               2  [STACK] unsigned int 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  r               2  [STACK] PTR const unsigned char 
  9386 ;;		 -> STR_44(3), 
  9387 ;;  l               2  [STACK] PTR const unsigned char 
  9388 ;;		 -> ct(3), 
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  2  [STACK] int 
  9391 ;; Registers used:
  9392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/5
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9402 ;;Total ram usage:        0 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:    6
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_vfpfcnvrt
  9409 ;; This function uses a reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text42
  9413  0158DE                     __ptext42:
  9414                           	opt callstack 0
  9415  0158DE                     _strncmp:
  9416                           	opt callstack 0
  9417                           
  9418                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9419  0158DE  52E6               	movf	postinc1,f,c
  9420  0158E0  52E6               	movf	postinc1,f,c
  9421  0158E2  52E6               	movf	postinc1,f,c
  9422  0158E4  52E6               	movf	postinc1,f,c
  9423                           
  9424                           ;stkvar	__l @ sp[(-4)+-2]
  9425                           
  9426                           ;incstack = 0
  9427  0158E6  0EFA               	movlw	-6
  9428  0158E8  006F FF8C  F03C    	movff	plusw1,btemp+10
  9429  0158EE  0EFB               	movlw	-5
  9430  0158F0  006F FF8C  F03D    	movff	plusw1,btemp+11
  9431                           
  9432                           ;stkvar	_l @ sp[(-4)+2]
  9433  0158F6  0EFF               	movlw	-1
  9434  0158F8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9435  0158FE  0EFE               	movlw	-2
  9436  015900  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9437                           
  9438                           ;stkvar	__r @ sp[(-4)+-4]
  9439  015906  0EF8               	movlw	-8
  9440  015908  006F FF8C  F03C    	movff	plusw1,btemp+10
  9441  01590E  0EF9               	movlw	-7
  9442  015910  006F FF8C  F03D    	movff	plusw1,btemp+11
  9443                           
  9444                           ;stkvar	_r @ sp[(-4)+0]
  9445  015916  0EFD               	movlw	-3
  9446  015918  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9447  01591E  0EFC               	movlw	-4
  9448  015920  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9449                           
  9450                           ;stkvar	_n @ sp[(-4)+-6]
  9451  015926  0EF6               	movlw	-10
  9452  015928  006F FF8C  F032    	movff	plusw1,btemp
  9453  01592E  0E01               	movlw	1
  9454  015930  5E32               	subwf	btemp^0,f,c
  9455  015932  0EF6               	movlw	-10
  9456  015934  0060  F0CB  FFE3   	movff	btemp,plusw1
  9457  01593A  0EF7               	movlw	-9
  9458  01593C  006F FF8C  F032    	movff	plusw1,btemp
  9459  015942  0E00               	movlw	0
  9460  015944  5A32               	subwfb	btemp^0,f,c
  9461  015946  0EF7               	movlw	-9
  9462  015948  0060  F0CB  FFE3   	movff	btemp,plusw1
  9463  01594E  0EF6               	movlw	-10
  9464  015950  28E3               	incf	plusw1,w,c
  9465  015952  E13F               	bnz	l10789
  9466  015954  0EF7               	movlw	-9
  9467  015956  28E3               	incf	plusw1,w,c
  9468  015958  A4D8               	btfss	status,2,c
  9469  01595A  D03B               	goto	l10789
  9470  01595C  0E00               	movlw	0
  9471  01595E  6E32               	movwf	btemp^0,c
  9472  015960  0E00               	movlw	0
  9473  015962  6E33               	movwf	(btemp+1)^0,c
  9474  015964  D09B               	goto	l2872
  9475  015966                     l10787:
  9476                           
  9477                           ;stkvar	_l @ sp[(-4)+2]
  9478  015966  0EFE               	movlw	-2
  9479  015968  50E3               	movf	plusw1,w,c
  9480  01596A  0F01               	addlw	1
  9481  01596C  6E32               	movwf	btemp^0,c
  9482  01596E  0EFE               	movlw	-2
  9483  015970  0060  F0CB  FFE3   	movff	btemp,plusw1
  9484  015976  6A32               	clrf	btemp^0,c
  9485  015978  0EFF               	movlw	-1
  9486  01597A  50E3               	movf	plusw1,w,c
  9487  01597C  2032               	addwfc	btemp^0,w,c
  9488  01597E  6E32               	movwf	btemp^0,c
  9489  015980  0EFF               	movlw	-1
  9490  015982  0060  F0CB  FFE3   	movff	btemp,plusw1
  9491                           
  9492                           ;stkvar	_r @ sp[(-4)+0]
  9493  015988  0EFC               	movlw	-4
  9494  01598A  50E3               	movf	plusw1,w,c
  9495  01598C  0F01               	addlw	1
  9496  01598E  6E32               	movwf	btemp^0,c
  9497  015990  0EFC               	movlw	-4
  9498  015992  0060  F0CB  FFE3   	movff	btemp,plusw1
  9499  015998  6A32               	clrf	btemp^0,c
  9500  01599A  0EFD               	movlw	-3
  9501  01599C  50E3               	movf	plusw1,w,c
  9502  01599E  2032               	addwfc	btemp^0,w,c
  9503  0159A0  6E32               	movwf	btemp^0,c
  9504  0159A2  0EFD               	movlw	-3
  9505  0159A4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9506                           
  9507                           ;stkvar	_n @ sp[(-4)+-6]
  9508  0159AA  0EF6               	movlw	-10
  9509  0159AC  006F FF8C  F032    	movff	plusw1,btemp
  9510  0159B2  0E01               	movlw	1
  9511  0159B4  5E32               	subwf	btemp^0,f,c
  9512  0159B6  0EF6               	movlw	-10
  9513  0159B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9514  0159BE  0EF7               	movlw	-9
  9515  0159C0  006F FF8C  F032    	movff	plusw1,btemp
  9516  0159C6  0E00               	movlw	0
  9517  0159C8  5A32               	subwfb	btemp^0,f,c
  9518  0159CA  0EF7               	movlw	-9
  9519  0159CC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9520  0159D2                     l10789:
  9521                           
  9522                           ;stkvar	_l @ sp[(-4)+2]
  9523  0159D2  0EFE               	movlw	-2
  9524  0159D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9525  0159DA  0EFF               	movlw	-1
  9526  0159DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9527  0159E2  50DF               	movf	indf2,w,c
  9528  0159E4  B4D8               	btfsc	status,2,c
  9529  0159E6  D03B               	goto	u11800
  9530                           
  9531                           ;stkvar	_r @ sp[(-4)+0]
  9532  0159E8  50E1               	movf	fsr1l,w,c
  9533  0159EA  0FFC               	addlw	-4
  9534  0159EC  6ED9               	movwf	fsr2l,c
  9535  0159EE  50E2               	movf	fsr1h,w,c
  9536  0159F0  6EDA               	movwf	fsr2h,c
  9537  0159F2  0EFF               	movlw	255
  9538  0159F4  22DA               	addwfc	fsr2h,f,c
  9539  0159F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9540  0159FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9541  015A02                     	if	0	;tblptru may be non-zero
  9542  015A02                     	endif
  9543  015A02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9544  015A02  0E00               	movlw	low (__mediumconst shr (0+16))
  9545  015A04  6EF8               	movwf	tblptru,c
  9546  015A06                     	endif
  9547  015A06  0008               	tblrd		*
  9548  015A08  50F5               	movf	tablat,w,c
  9549  015A0A  0900               	iorlw	0
  9550  015A0C  B4D8               	btfsc	status,2,c
  9551  015A0E  D027               	goto	u11800
  9552                           
  9553                           ;stkvar	_n @ sp[(-4)+-6]
  9554  015A10  0EF6               	movlw	-10
  9555  015A12  006F FF8C  F032    	movff	plusw1,btemp
  9556  015A18  0EF7               	movlw	-9
  9557  015A1A  50E3               	movf	plusw1,w,c
  9558  015A1C  1032               	iorwf	btemp^0,w,c
  9559  015A1E  B4D8               	btfsc	status,2,c
  9560  015A20  D01E               	goto	u11800
  9561                           
  9562                           ;stkvar	_l @ sp[(-4)+2]
  9563  015A22  0EFE               	movlw	-2
  9564  015A24  006F FF8F FFD9     	movff	plusw1,fsr2l
  9565  015A2A  0EFF               	movlw	-1
  9566  015A2C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9567  015A32  50DF               	movf	indf2,w,c
  9568  015A34  6E3D               	movwf	(btemp+11)^0,c
  9569                           
  9570                           ;stkvar	_r @ sp[(-4)+0]
  9571  015A36  50E1               	movf	fsr1l,w,c
  9572  015A38  0FFC               	addlw	-4
  9573  015A3A  6ED9               	movwf	fsr2l,c
  9574  015A3C  50E2               	movf	fsr1h,w,c
  9575  015A3E  6EDA               	movwf	fsr2h,c
  9576  015A40  0EFF               	movlw	255
  9577  015A42  22DA               	addwfc	fsr2h,f,c
  9578  015A44  006F FF7B FFF6     	movff	postinc2,tblptrl
  9579  015A4A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9580  015A50                     	if	0	;tblptru may be non-zero
  9581  015A50                     	endif
  9582  015A50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9583  015A50  0E00               	movlw	low (__mediumconst shr (0+16))
  9584  015A52  6EF8               	movwf	tblptru,c
  9585  015A54                     	endif
  9586  015A54  0008               	tblrd		*
  9587  015A56  50F5               	movf	tablat,w,c
  9588  015A58  183D               	xorwf	(btemp+11)^0,w,c
  9589  015A5A  B4D8               	btfsc	status,2,c
  9590  015A5C  D784               	goto	l10787
  9591  015A5E                     u11800:
  9592                           
  9593                           ;stkvar	_l @ sp[(-4)+2]
  9594  015A5E  0EFE               	movlw	-2
  9595  015A60  006F FF8F FFD9     	movff	plusw1,fsr2l
  9596  015A66  0EFF               	movlw	-1
  9597  015A68  006F FF8F FFDA     	movff	plusw1,fsr2h
  9598  015A6E  50DF               	movf	indf2,w,c
  9599  015A70  6E32               	movwf	btemp^0,c
  9600  015A72  6A33               	clrf	(btemp+1)^0,c
  9601                           
  9602                           ;stkvar	_r @ sp[(-4)+0]
  9603  015A74  50E1               	movf	fsr1l,w,c
  9604  015A76  0FFC               	addlw	-4
  9605  015A78  6ED9               	movwf	fsr2l,c
  9606  015A7A  50E2               	movf	fsr1h,w,c
  9607  015A7C  6EDA               	movwf	fsr2h,c
  9608  015A7E  0EFF               	movlw	255
  9609  015A80  22DA               	addwfc	fsr2h,f,c
  9610  015A82  006F FF7B FFF6     	movff	postinc2,tblptrl
  9611  015A88  006F FF77 FFF7     	movff	postdec2,tblptrh
  9612  015A8E                     	if	0	;tblptru may be non-zero
  9613  015A8E                     	endif
  9614  015A8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9615  015A8E  0E00               	movlw	low (__mediumconst shr (0+16))
  9616  015A90  6EF8               	movwf	tblptru,c
  9617  015A92                     	endif
  9618  015A92  0008               	tblrd		*
  9619  015A94  50F5               	movf	tablat,w,c
  9620  015A96  5E32               	subwf	btemp^0,f,c
  9621  015A98  0E00               	movlw	0
  9622  015A9A  5A33               	subwfb	(btemp+1)^0,f,c
  9623  015A9C                     l2872:
  9624                           
  9625                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9626  015A9C  0EF6               	movlw	246
  9627  015A9E  26E1               	addwf	fsr1l,f,c
  9628  015AA0  0EFF               	movlw	255
  9629  015AA2  22E2               	addwfc	fsr1h,f,c
  9630  015AA4  0012               	return		;funcret
  9631  015AA6                     __end_of_strncmp:
  9632                           	opt callstack 0
  9633                           
  9634 ;; *************** function _stoa *****************
  9635 ;; Defined at:
  9636 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9639 ;;		 -> f(6), NULL(0), 
  9640 ;;  s               2  [STACK] PTR unsigned char 
  9641 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  9642 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9643 ;;		 -> STR_3(5), V(187), 
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;  nuls            7  [STACK] unsigned char [7]
  9646 ;;  l               2  [STACK] int 
  9647 ;;  p               2  [STACK] int 
  9648 ;;  cp              2  [STACK] PTR unsigned char 
  9649 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
  9650 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
  9651 ;;		 -> STR_7(5), STR_3(5), V(187), 
  9652 ;;  w               2  [STACK] int 
  9653 ;;  i               2  [STACK] int 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  2  [STACK] int 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/5
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;Total ram usage:        0 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    9
  9670 ;; This function calls:
  9671 ;;		_fputc
  9672 ;;		_strlen
  9673 ;; This function is called by:
  9674 ;;		_vfpfcnvrt
  9675 ;; This function uses a reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text43
  9679  014AC0                     __ptext43:
  9680                           	opt callstack 0
  9681  014AC0                     _stoa:
  9682                           	opt callstack 0
  9683                           
  9684                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9685  014AC0  0E11               	movlw	17
  9686  014AC2  26E1               	addwf	fsr1l,f,c
  9687  014AC4  0E00               	movlw	0
  9688  014AC6  22E2               	addwfc	fsr1h,f,c
  9689                           
  9690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9691                           
  9692                           ;incstack = 0
  9693  014AC8  EE20  F0EF         	lfsr	2,stoa@F1166
  9694                           
  9695                           ;stkvar	_nuls @ sp[(-17)+0]
  9696  014ACC  0E07               	movlw	7
  9697  014ACE  6E32               	movwf	btemp^0,c
  9698  014AD0  0EEF               	movlw	-17
  9699  014AD2                     us1141999:
  9700  014AD2  006F FF7B FFE3     	movff	postinc2,plusw1
  9701  014AD8  28E8               	incf	wreg,w,c
  9702  014ADA  2E32               	decfsz	btemp^0,f,c
  9703  014ADC  D7FA               	bra	us1141999
  9704                           
  9705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9706                           ;stkvar	_s @ sp[(-17)+-4]
  9707  014ADE  0EEB               	movlw	-21
  9708  014AE0  006F FF8C  F03C    	movff	plusw1,btemp+10
  9709  014AE6  0EEC               	movlw	-20
  9710  014AE8  006F FF8C  F03D    	movff	plusw1,btemp+11
  9711                           
  9712                           ;stkvar	_cp @ sp[(-17)+11]
  9713  014AEE  0EFB               	movlw	-5
  9714  014AF0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9715  014AF6  0EFA               	movlw	-6
  9716  014AF8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9717                           
  9718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9719                           ;stkvar	_cp @ sp[(-17)+11]
  9720  014AFE  0EFA               	movlw	-6
  9721  014B00  006F FF8C  F032    	movff	plusw1,btemp
  9722  014B06  0EFB               	movlw	-5
  9723  014B08  50E3               	movf	plusw1,w,c
  9724  014B0A  1032               	iorwf	btemp^0,w,c
  9725  014B0C  A4D8               	btfss	status,2,c
  9726  014B0E  D00E               	goto	l10617
  9727                           
  9728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9729                           ;stkvar	_nuls @ sp[(-17)+0]
  9730  014B10  0EEF               	movlw	239
  9731  014B12  24E1               	addwf	fsr1l,w,c
  9732  014B14  6E3C               	movwf	(btemp+10)^0,c
  9733  014B16  0EFF               	movlw	255
  9734  014B18  20E2               	addwfc	fsr1h,w,c
  9735  014B1A  6E3D               	movwf	(btemp+11)^0,c
  9736                           
  9737                           ;stkvar	_cp @ sp[(-17)+11]
  9738  014B1C  0EFB               	movlw	-5
  9739  014B1E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9740  014B24  0EFA               	movlw	-6
  9741  014B26  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9742  014B2C                     l10617:
  9743                           
  9744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9745                           ;stkvar	_cp @ sp[(-17)+11]
  9746  014B2C  0EFA               	movlw	-6
  9747  014B2E  006F FF8F FFE6     	movff	plusw1,postinc1
  9748  014B34  006F FF8F FFE6     	movff	plusw1,postinc1
  9749  014B3A  EC13  F0B8         	call	_strlen	;wreg free
  9750                           
  9751                           ;stkvar	_l @ sp[(-17)+7]
  9752  014B3E  0EF6               	movlw	-10
  9753  014B40  0060  F0CB  FFE3   	movff	btemp,plusw1
  9754  014B46  0EF7               	movlw	-9
  9755  014B48  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9756                           
  9757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9758                           ;stkvar	_p @ sp[(-17)+9]
  9759  014B4E  0EF8               	movlw	-8
  9760  014B50  0060  F077  FFE3   	movff	_prec,plusw1
  9761  014B56  0EF9               	movlw	-7
  9762  014B58  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9763                           
  9764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9765                           ;stkvar	_p @ sp[(-17)+9]
  9766  014B5E  0EF9               	movlw	-7
  9767  014B60  BEE3               	btfsc	plusw1,7,c
  9768  014B62  D023               	goto	l1946
  9769                           
  9770                           ;stkvar	_l @ sp[(-17)+7]
  9771                           ;stkvar	_p @ sp[(-17)+9]
  9772  014B64  50E1               	movf	fsr1l,w,c
  9773  014B66  0FF8               	addlw	-8
  9774  014B68  6ED9               	movwf	fsr2l,c
  9775  014B6A  50E2               	movf	fsr1h,w,c
  9776  014B6C  6EDA               	movwf	fsr2h,c
  9777  014B6E  0EFF               	movlw	255
  9778  014B70  22DA               	addwfc	fsr2h,f,c
  9779  014B72  0EF6               	movlw	-10
  9780  014B74  50E3               	movf	plusw1,w,c
  9781  014B76  5CDE               	subwf	postinc2,w,c
  9782  014B78  50DE               	movf	postinc2,w,c
  9783  014B7A  0A80               	xorlw	128
  9784  014B7C  6E32               	movwf	btemp^0,c
  9785  014B7E  0EF7               	movlw	-9
  9786  014B80  50E3               	movf	plusw1,w,c
  9787  014B82  0A80               	xorlw	128
  9788  014B84  5832               	subwfb	btemp^0,w,c
  9789  014B86  B0D8               	btfsc	status,0,c
  9790  014B88  D010               	goto	l1946
  9791                           
  9792                           ;stkvar	_p @ sp[(-17)+9]
  9793                           ;stkvar	_l @ sp[(-17)+7]
  9794  014B8A  0EF8               	movlw	-8
  9795  014B8C  006F FF8C  F032    	movff	plusw1,btemp
  9796  014B92  0EF6               	movlw	-10
  9797  014B94  0060  F0CB  FFE3   	movff	btemp,plusw1
  9798  014B9A  0EF9               	movlw	-7
  9799  014B9C  006F FF8C  F032    	movff	plusw1,btemp
  9800  014BA2  0EF7               	movlw	-9
  9801  014BA4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9802  014BAA                     l1946:
  9803                           
  9804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9805                           ;stkvar	_l @ sp[(-17)+7]
  9806                           ;stkvar	_p @ sp[(-17)+9]
  9807  014BAA  0EF6               	movlw	-10
  9808  014BAC  006F FF8C  F032    	movff	plusw1,btemp
  9809  014BB2  0EF8               	movlw	-8
  9810  014BB4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9811  014BBA  0EF7               	movlw	-9
  9812  014BBC  006F FF8C  F032    	movff	plusw1,btemp
  9813  014BC2  0EF9               	movlw	-7
  9814  014BC4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9815                           
  9816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9817                           ;stkvar	_w @ sp[(-17)+13]
  9818  014BCA  0EFC               	movlw	-4
  9819  014BCC  0060  F06F  FFE3   	movff	_width,plusw1
  9820  014BD2  0EFD               	movlw	-3
  9821  014BD4  0060  F073  FFE3   	movff	_width+1,plusw1
  9822                           
  9823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9824  014BDA  A01F               	btfss	_flags^0,0,c
  9825  014BDC  D01F               	goto	l10637
  9826  014BDE  D031               	goto	u11460
  9827  014BE0                     l10633:
  9828                           
  9829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9830                           ;stkvar	_fp @ sp[(-17)+-2]
  9831  014BE0  0EED               	movlw	-19
  9832  014BE2  006F FF8F FFE6     	movff	plusw1,postinc1
  9833  014BE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9834  014BEE  0E20               	movlw	32
  9835  014BF0  6EE6               	movwf	postinc1,c
  9836  014BF2  0E00               	movlw	0
  9837  014BF4  6EE6               	movwf	postinc1,c
  9838  014BF6  EC4A  F0B2         	call	_fputc	;wreg free
  9839                           
  9840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9841                           ;stkvar	_l @ sp[(-17)+7]
  9842  014BFA  0EF6               	movlw	-10
  9843  014BFC  50E3               	movf	plusw1,w,c
  9844  014BFE  0F01               	addlw	1
  9845  014C00  6E32               	movwf	btemp^0,c
  9846  014C02  0EF6               	movlw	-10
  9847  014C04  0060  F0CB  FFE3   	movff	btemp,plusw1
  9848  014C0A  6A32               	clrf	btemp^0,c
  9849  014C0C  0EF7               	movlw	-9
  9850  014C0E  50E3               	movf	plusw1,w,c
  9851  014C10  2032               	addwfc	btemp^0,w,c
  9852  014C12  6E32               	movwf	btemp^0,c
  9853  014C14  0EF7               	movlw	-9
  9854  014C16  0060  F0CB  FFE3   	movff	btemp,plusw1
  9855  014C1C                     l10637:
  9856                           
  9857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9858                           ;stkvar	_w @ sp[(-17)+13]
  9859                           ;stkvar	_l @ sp[(-17)+7]
  9860  014C1C  50E1               	movf	fsr1l,w,c
  9861  014C1E  0FF6               	addlw	-10
  9862  014C20  6ED9               	movwf	fsr2l,c
  9863  014C22  50E2               	movf	fsr1h,w,c
  9864  014C24  6EDA               	movwf	fsr2h,c
  9865  014C26  0EFF               	movlw	255
  9866  014C28  22DA               	addwfc	fsr2h,f,c
  9867  014C2A  0EFC               	movlw	-4
  9868  014C2C  50E3               	movf	plusw1,w,c
  9869  014C2E  5CDE               	subwf	postinc2,w,c
  9870  014C30  50DE               	movf	postinc2,w,c
  9871  014C32  0A80               	xorlw	128
  9872  014C34  6E32               	movwf	btemp^0,c
  9873  014C36  0EFD               	movlw	-3
  9874  014C38  50E3               	movf	plusw1,w,c
  9875  014C3A  0A80               	xorlw	128
  9876  014C3C  5832               	subwfb	btemp^0,w,c
  9877  014C3E  A0D8               	btfss	status,0,c
  9878  014C40  D7CF               	goto	l10633
  9879  014C42                     u11460:
  9880                           
  9881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9882                           ;stkvar	_i @ sp[(-17)+15]
  9883  014C42  0EFE               	movlw	-2
  9884  014C44  6AE3               	clrf	plusw1,c
  9885  014C46  0EFF               	movlw	-1
  9886  014C48  6AE3               	clrf	plusw1,c
  9887                           
  9888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9889  014C4A  D045               	goto	l10647
  9890  014C4C                     l10641:
  9891                           
  9892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9893                           ;stkvar	_fp @ sp[(-17)+-2]
  9894  014C4C  0EED               	movlw	-19
  9895  014C4E  006F FF8F FFE6     	movff	plusw1,postinc1
  9896  014C54  006F FF8F FFE6     	movff	plusw1,postinc1
  9897                           
  9898                           ;stkvar	_cp @ sp[(-19)+11]
  9899  014C5A  0EF8               	movlw	-8
  9900  014C5C  006F FF8F FFF6     	movff	plusw1,tblptrl
  9901  014C62  0EF9               	movlw	-7
  9902  014C64  006F FF8F FFF7     	movff	plusw1,tblptrh
  9903  014C6A  0E00               	movlw	low (__mediumconst shr (0+16))
  9904  014C6C  6EF8               	movwf	tblptru,c
  9905  014C6E  0E1F               	movlw	(high __ramtop+-1)
  9906  014C70  64F7               	cpfsgt	tblptrh,c
  9907  014C72  D003               	bra	u11477
  9908  014C74  0008               	tblrd		*
  9909  014C76  50F5               	movf	tablat,w,c
  9910  014C78  D007               	bra	u11470
  9911  014C7A                     u11477:
  9912  014C7A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9913  014C80  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9914  014C86  50EF               	movf	indf0,w,c
  9915  014C88                     u11470:
  9916  014C88  6EE6               	movwf	postinc1,c
  9917  014C8A  0E00               	movlw	0
  9918  014C8C  6EE6               	movwf	postinc1,c
  9919  014C8E  EC4A  F0B2         	call	_fputc	;wreg free
  9920                           
  9921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9922                           ;stkvar	_cp @ sp[(-17)+11]
  9923  014C92  0EFA               	movlw	-6
  9924  014C94  50E3               	movf	plusw1,w,c
  9925  014C96  0F01               	addlw	1
  9926  014C98  6E32               	movwf	btemp^0,c
  9927  014C9A  0EFA               	movlw	-6
  9928  014C9C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9929  014CA2  6A32               	clrf	btemp^0,c
  9930  014CA4  0EFB               	movlw	-5
  9931  014CA6  50E3               	movf	plusw1,w,c
  9932  014CA8  2032               	addwfc	btemp^0,w,c
  9933  014CAA  6E32               	movwf	btemp^0,c
  9934  014CAC  0EFB               	movlw	-5
  9935  014CAE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9936                           
  9937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9938                           ;stkvar	_i @ sp[(-17)+15]
  9939  014CB4  0EFE               	movlw	-2
  9940  014CB6  50E3               	movf	plusw1,w,c
  9941  014CB8  0F01               	addlw	1
  9942  014CBA  6E32               	movwf	btemp^0,c
  9943  014CBC  0EFE               	movlw	-2
  9944  014CBE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9945  014CC4  6A32               	clrf	btemp^0,c
  9946  014CC6  0EFF               	movlw	-1
  9947  014CC8  50E3               	movf	plusw1,w,c
  9948  014CCA  2032               	addwfc	btemp^0,w,c
  9949  014CCC  6E32               	movwf	btemp^0,c
  9950  014CCE  0EFF               	movlw	-1
  9951  014CD0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9952  014CD6                     l10647:
  9953                           
  9954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9955                           ;stkvar	_p @ sp[(-17)+9]
  9956                           ;stkvar	_i @ sp[(-17)+15]
  9957  014CD6  50E1               	movf	fsr1l,w,c
  9958  014CD8  0FFE               	addlw	-2
  9959  014CDA  6ED9               	movwf	fsr2l,c
  9960  014CDC  50E2               	movf	fsr1h,w,c
  9961  014CDE  6EDA               	movwf	fsr2h,c
  9962  014CE0  0EFF               	movlw	255
  9963  014CE2  22DA               	addwfc	fsr2h,f,c
  9964  014CE4  0EF8               	movlw	-8
  9965  014CE6  50E3               	movf	plusw1,w,c
  9966  014CE8  5CDE               	subwf	postinc2,w,c
  9967  014CEA  50DE               	movf	postinc2,w,c
  9968  014CEC  0A80               	xorlw	128
  9969  014CEE  6E32               	movwf	btemp^0,c
  9970  014CF0  0EF9               	movlw	-7
  9971  014CF2  50E3               	movf	plusw1,w,c
  9972  014CF4  0A80               	xorlw	128
  9973  014CF6  5832               	subwfb	btemp^0,w,c
  9974  014CF8  A0D8               	btfss	status,0,c
  9975  014CFA  D7A8               	goto	l10641
  9976                           
  9977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9978  014CFC  B01F               	btfsc	_flags^0,0,c
  9979  014CFE  D01F               	goto	l10655
  9980  014D00  D031               	goto	u11500
  9981  014D02                     l10651:
  9982                           
  9983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9984                           ;stkvar	_fp @ sp[(-17)+-2]
  9985  014D02  0EED               	movlw	-19
  9986  014D04  006F FF8F FFE6     	movff	plusw1,postinc1
  9987  014D0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9988  014D10  0E20               	movlw	32
  9989  014D12  6EE6               	movwf	postinc1,c
  9990  014D14  0E00               	movlw	0
  9991  014D16  6EE6               	movwf	postinc1,c
  9992  014D18  EC4A  F0B2         	call	_fputc	;wreg free
  9993                           
  9994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9995                           ;stkvar	_l @ sp[(-17)+7]
  9996  014D1C  0EF6               	movlw	-10
  9997  014D1E  50E3               	movf	plusw1,w,c
  9998  014D20  0F01               	addlw	1
  9999  014D22  6E32               	movwf	btemp^0,c
 10000  014D24  0EF6               	movlw	-10
 10001  014D26  0060  F0CB  FFE3   	movff	btemp,plusw1
 10002  014D2C  6A32               	clrf	btemp^0,c
 10003  014D2E  0EF7               	movlw	-9
 10004  014D30  50E3               	movf	plusw1,w,c
 10005  014D32  2032               	addwfc	btemp^0,w,c
 10006  014D34  6E32               	movwf	btemp^0,c
 10007  014D36  0EF7               	movlw	-9
 10008  014D38  0060  F0CB  FFE3   	movff	btemp,plusw1
 10009  014D3E                     l10655:
 10010                           
 10011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10012                           ;stkvar	_w @ sp[(-17)+13]
 10013                           ;stkvar	_l @ sp[(-17)+7]
 10014  014D3E  50E1               	movf	fsr1l,w,c
 10015  014D40  0FF6               	addlw	-10
 10016  014D42  6ED9               	movwf	fsr2l,c
 10017  014D44  50E2               	movf	fsr1h,w,c
 10018  014D46  6EDA               	movwf	fsr2h,c
 10019  014D48  0EFF               	movlw	255
 10020  014D4A  22DA               	addwfc	fsr2h,f,c
 10021  014D4C  0EFC               	movlw	-4
 10022  014D4E  50E3               	movf	plusw1,w,c
 10023  014D50  5CDE               	subwf	postinc2,w,c
 10024  014D52  50DE               	movf	postinc2,w,c
 10025  014D54  0A80               	xorlw	128
 10026  014D56  6E32               	movwf	btemp^0,c
 10027  014D58  0EFD               	movlw	-3
 10028  014D5A  50E3               	movf	plusw1,w,c
 10029  014D5C  0A80               	xorlw	128
 10030  014D5E  5832               	subwfb	btemp^0,w,c
 10031  014D60  A0D8               	btfss	status,0,c
 10032  014D62  D7CF               	goto	l10651
 10033  014D64                     u11500:
 10034                           
 10035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10036                           ;stkvar	_l @ sp[(-17)+7]
 10037  014D64  0EF6               	movlw	-10
 10038  014D66  006F FF8C  F032    	movff	plusw1,btemp
 10039  014D6C  0EF7               	movlw	-9
 10040  014D6E  006F FF8C  F033    	movff	plusw1,btemp+1
 10041                           
 10042                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10043  014D74  0EEB               	movlw	235
 10044  014D76  26E1               	addwf	fsr1l,f,c
 10045  014D78  0EFF               	movlw	255
 10046  014D7A  22E2               	addwfc	fsr1h,f,c
 10047  014D7C  0012               	return		;funcret
 10048  014D7E                     __end_of_stoa:
 10049                           	opt callstack 0
 10050                           
 10051 ;; *************** function _efgtoa *****************
 10052 ;; Defined at:
 10053 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10056 ;;		 -> f(6), NULL(0), 
 10057 ;;  f               4  [STACK] PTR struct _IO_FILE
 10058 ;;  c               1  [STACK] unsigned char 
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;  u               4  [STACK] unsigned char 
 10061 ;;  g               4  [STACK] unsigned char 
 10062 ;;  l               4  [STACK] unsigned char 
 10063 ;;  h               4  [STACK] unsigned char 
 10064 ;;  ou              4  [STACK] unsigned char 
 10065 ;;  n               2  [STACK] int 
 10066 ;;  e               2  [STACK] int 
 10067 ;;  i               2  [STACK] int 
 10068 ;;  w               2  [STACK] int 
 10069 ;;  p               2  [STACK] int 
 10070 ;;  sign            2  [STACK] int 
 10071 ;;  d               2  [STACK] int 
 10072 ;;  ne              2  [STACK] int 
 10073 ;;  m               2  [STACK] int 
 10074 ;;  pp              2  [STACK] int 
 10075 ;;  t               2  [STACK] int 
 10076 ;;  mode            1  [STACK] unsigned char 
 10077 ;;  nmode           1  [STACK] unsigned char 
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  2  [STACK] int 
 10080 ;; Registers used:
 10081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/5
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10091 ;;Total ram usage:        0 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; Hardware stack levels required when called:   11
 10094 ;; This function calls:
 10095 ;;		___awdiv
 10096 ;;		___awmod
 10097 ;;		___fladd
 10098 ;;		___fldiv
 10099 ;;		___fleq
 10100 ;;		___flge
 10101 ;;		___flmul
 10102 ;;		___flneg
 10103 ;;		___flsub
 10104 ;;		___fltol
 10105 ;;		___fpclassifyf
 10106 ;;		_floorf
 10107 ;;		_isupper
 10108 ;;		_pad
 10109 ;;		_strcpy
 10110 ;;		_tolower
 10111 ;; This function is called by:
 10112 ;;		_vfpfcnvrt
 10113 ;; This function uses a reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text44
 10117  010000                     __ptext44:
 10118                           	opt callstack 0
 10119  010000                     _efgtoa:
 10120                           	opt callstack 0
 10121                           
 10122                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10123  010000  0E38               	movlw	56
 10124  010002  26E1               	addwf	fsr1l,f,c
 10125  010004  0E00               	movlw	0
 10126  010006  22E2               	addwfc	fsr1h,f,c
 10127                           
 10128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10129                           ;stkvar	_sign @ sp[(-56)+42]
 10130                           
 10131                           ;incstack = 0
 10132  010008  0EF2               	movlw	-14
 10133  01000A  6AE3               	clrf	plusw1,c
 10134  01000C  0EF3               	movlw	-13
 10135  01000E  6AE3               	clrf	plusw1,c
 10136                           
 10137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10138                           ;stkvar	_f @ sp[(-56)+-6]
 10139  010010  0EC2               	movlw	-62
 10140  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10141  010018  0EC3               	movlw	-61
 10142  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10143  010020  0EC4               	movlw	-60
 10144  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10145  010028  0EC5               	movlw	-59
 10146  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10147                           
 10148                           ;stkvar	_g @ sp[(-56)+16]
 10149  010030  0ED8               	movlw	-40
 10150  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10151  010038  0ED9               	movlw	-39
 10152  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10153  010040  0EDA               	movlw	-38
 10154  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10155  010048  0EDB               	movlw	-37
 10156  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10157                           
 10158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10159                           ;stkvar	_g @ sp[(-56)+16]
 10160  010050  0EDB               	movlw	-37
 10161  010052  AEE3               	btfss	plusw1,7,c
 10162  010054  D02B               	goto	l10315
 10163                           
 10164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10165  010056  0E01               	movlw	1
 10166  010058  6E3C               	movwf	(btemp+10)^0,c
 10167  01005A  0E00               	movlw	0
 10168  01005C  6E3D               	movwf	(btemp+11)^0,c
 10169                           
 10170                           ;stkvar	_sign @ sp[(-56)+42]
 10171  01005E  0EF2               	movlw	-14
 10172  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10173  010066  0EF3               	movlw	-13
 10174  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10175                           
 10176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10177                           ;stkvar	_g @ sp[(-56)+16]
 10178  01006E  0ED8               	movlw	-40
 10179  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10180  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10181  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10182  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10183  010088  EC25  F0BD         	call	___flneg	;wreg free
 10184                           
 10185                           ;stkvar	_g @ sp[(-56)+16]
 10186  01008C  0ED8               	movlw	-40
 10187  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10188  010094  0ED9               	movlw	-39
 10189  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10190  01009C  0EDA               	movlw	-38
 10191  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10192  0100A4  0EDB               	movlw	-37
 10193  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10194  0100AC                     l10315:
 10195                           
 10196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10197                           ;stkvar	_n @ sp[(-56)+32]
 10198  0100AC  0EE8               	movlw	-24
 10199  0100AE  6AE3               	clrf	plusw1,c
 10200  0100B0  0EE9               	movlw	-23
 10201  0100B2  6AE3               	clrf	plusw1,c
 10202                           
 10203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10204                           ;stkvar	_w @ sp[(-56)+38]
 10205  0100B4  0EEE               	movlw	-18
 10206  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10207  0100BC  0EEF               	movlw	-17
 10208  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10209                           
 10210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10211                           ;stkvar	_sign @ sp[(-56)+42]
 10212  0100C4  0EF2               	movlw	-14
 10213  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10214  0100CC  0EF3               	movlw	-13
 10215  0100CE  50E3               	movf	plusw1,w,c
 10216  0100D0  1032               	iorwf	btemp^0,w,c
 10217  0100D2  A4D8               	btfss	status,2,c
 10218  0100D4  D002               	goto	u10910
 10219  0100D6  A41F               	btfss	_flags^0,2,c
 10220  0100D8  D036               	goto	l10335
 10221  0100DA                     u10910:
 10222                           
 10223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10224                           ;stkvar	_sign @ sp[(-56)+42]
 10225  0100DA  0EF2               	movlw	-14
 10226  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10227  0100E2  0EF3               	movlw	-13
 10228  0100E4  50E3               	movf	plusw1,w,c
 10229  0100E6  1032               	iorwf	btemp^0,w,c
 10230  0100E8  A4D8               	btfss	status,2,c
 10231  0100EA  D002               	goto	l10327
 10232  0100EC  0E2B               	movlw	43
 10233  0100EE  D001               	goto	L8
 10234  0100F0                     l10327:
 10235  0100F0  0E2D               	movlw	45
 10236  0100F2                     L8:
 10237  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10238  0100F4  0E00               	movlw	0
 10239  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10240                           
 10241                           ;stkvar	_efgtoa$4379 @ sp[(-56)+10]
 10242  0100F8  0ED2               	movlw	-46
 10243  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10244  010100  0ED3               	movlw	-45
 10245  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10246                           
 10247                           ;stkvar	_efgtoa$4379 @ sp[(-56)+10]
 10248  010108  0ED2               	movlw	-46
 10249  01010A  006F FF8C  F240    	movff	plusw1,_dbuf
 10250                           
 10251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10252                           ;stkvar	_n @ sp[(-56)+32]
 10253  010110  0EE8               	movlw	-24
 10254  010112  50E3               	movf	plusw1,w,c
 10255  010114  0F01               	addlw	1
 10256  010116  6E32               	movwf	btemp^0,c
 10257  010118  0EE8               	movlw	-24
 10258  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10259  010120  6A32               	clrf	btemp^0,c
 10260  010122  0EE9               	movlw	-23
 10261  010124  50E3               	movf	plusw1,w,c
 10262  010126  2032               	addwfc	btemp^0,w,c
 10263  010128  6E32               	movwf	btemp^0,c
 10264  01012A  0EE9               	movlw	-23
 10265  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10266                           
 10267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10268                           ;stkvar	_w @ sp[(-56)+38]
 10269  010132  50E1               	movf	fsr1l,w,c
 10270  010134  0FEE               	addlw	-18
 10271  010136  6ED9               	movwf	fsr2l,c
 10272  010138  50E2               	movf	fsr1h,w,c
 10273  01013A  6EDA               	movwf	fsr2h,c
 10274  01013C  0EFF               	movlw	255
 10275  01013E  22DA               	addwfc	fsr2h,f,c
 10276  010140  06DE               	decf	postinc2,f,c
 10277  010142  0E00               	movlw	0
 10278  010144  5ADD               	subwfb	postdec2,f,c
 10279  010146                     l10335:
 10280                           
 10281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10282                           ;stkvar	_g @ sp[(-56)+16]
 10283  010146  0ED8               	movlw	-40
 10284  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10285  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10286  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10287  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10288  010160  EC33  F0AE         	call	___fpclassifyf	;wreg free
 10289  010164  0432               	decf	btemp^0,w,c
 10290  010166  1033               	iorwf	(btemp+1)^0,w,c
 10291  010168  A4D8               	btfss	status,2,c
 10292  01016A  D076               	goto	l10353
 10293  01016C  0EBF               	movlw	191
 10294  01016E  6E3C               	movwf	(btemp+10)^0,c
 10295  010170  0EFF               	movlw	255
 10296  010172  6E3D               	movwf	(btemp+11)^0,c
 10297                           
 10298                           ;stkvar	_c @ sp[(-56)+-7]
 10299  010174  0EC1               	movlw	-63
 10300  010176  50E3               	movf	plusw1,w,c
 10301  010178  6E3A               	movwf	(btemp+8)^0,c
 10302  01017A  6A3B               	clrf	(btemp+9)^0,c
 10303  01017C  503C               	movf	(btemp+10)^0,w,c
 10304  01017E  263A               	addwf	(btemp+8)^0,f,c
 10305  010180  503D               	movf	(btemp+11)^0,w,c
 10306  010182  223B               	addwfc	(btemp+9)^0,f,c
 10307  010184  503B               	movf	(btemp+9)^0,w,c
 10308  010186  E106               	bnz	u10940
 10309  010188  0E1A               	movlw	26
 10310  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10311  01018C  B0D8               	btfsc	status,0,c
 10312  01018E  D002               	goto	u10940
 10313  010190  0E01               	movlw	1
 10314  010192  D001               	goto	u10950
 10315  010194                     u10940:
 10316  010194  0E00               	movlw	0
 10317  010196                     u10950:
 10318  010196  6E3C               	movwf	(btemp+10)^0,c
 10319  010198  6A3D               	clrf	(btemp+11)^0,c
 10320                           
 10321                           ;stkvar	_efgtoa$4380 @ sp[(-56)+8]
 10322  01019A  0ED0               	movlw	-48
 10323  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10324  0101A2  0ED1               	movlw	-47
 10325  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10326                           
 10327                           ;stkvar	_efgtoa$4380 @ sp[(-56)+8]
 10328  0101AA  0ED0               	movlw	-48
 10329  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10330  0101B2  0ED1               	movlw	-47
 10331  0101B4  50E3               	movf	plusw1,w,c
 10332  0101B6  1032               	iorwf	btemp^0,w,c
 10333  0101B8  B4D8               	btfsc	status,2,c
 10334  0101BA  D017               	goto	l10345
 10335                           
 10336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10337  0101BC  0EE5               	movlw	low STR_34
 10338  0101BE  6EE6               	movwf	postinc1,c
 10339  0101C0  0EFF               	movlw	high STR_34
 10340  0101C2  6EE6               	movwf	postinc1,c
 10341                           
 10342                           ;stkvar	_n @ sp[(-58)+32]
 10343  0101C4  0E40               	movlw	low _dbuf
 10344  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10345  0101C8  0E02               	movlw	high _dbuf
 10346  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10347  0101CC  0EE6               	movlw	-26
 10348  0101CE  50E3               	movf	plusw1,w,c
 10349  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10350  0101D2  0EE7               	movlw	-25
 10351  0101D4  50E3               	movf	plusw1,w,c
 10352  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10353  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10354  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10355  0101E4  ECED  F0B5         	call	_strcpy	;wreg free
 10356                           
 10357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10358  0101E8  D016               	goto	l10347
 10359  0101EA                     l10345:
 10360                           
 10361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10362  0101EA  0EED               	movlw	low STR_35
 10363  0101EC  6EE6               	movwf	postinc1,c
 10364  0101EE  0EFF               	movlw	high STR_35
 10365  0101F0  6EE6               	movwf	postinc1,c
 10366                           
 10367                           ;stkvar	_n @ sp[(-58)+32]
 10368  0101F2  0E40               	movlw	low _dbuf
 10369  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10370  0101F6  0E02               	movlw	high _dbuf
 10371  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10372  0101FA  0EE6               	movlw	-26
 10373  0101FC  50E3               	movf	plusw1,w,c
 10374  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10375  010200  0EE7               	movlw	-25
 10376  010202  50E3               	movf	plusw1,w,c
 10377  010204  223D               	addwfc	(btemp+11)^0,f,c
 10378  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10379  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10380  010212  ECED  F0B5         	call	_strcpy	;wreg free
 10381  010216                     l10347:
 10382                           
 10383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10384                           ;stkvar	_w @ sp[(-56)+38]
 10385  010216  50E1               	movf	fsr1l,w,c
 10386  010218  0FEE               	addlw	-18
 10387  01021A  6ED9               	movwf	fsr2l,c
 10388  01021C  50E2               	movf	fsr1h,w,c
 10389  01021E  6EDA               	movwf	fsr2h,c
 10390  010220  0EFF               	movlw	255
 10391  010222  22DA               	addwfc	fsr2h,f,c
 10392  010224  0EFD               	movlw	253
 10393  010226  26DE               	addwf	postinc2,f,c
 10394  010228  0EFF               	movlw	255
 10395  01022A  22DD               	addwfc	postdec2,f,c
 10396  01022C                     l10349:
 10397                           
 10398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10399                           ;stkvar	_w @ sp[(-56)+38]
 10400  01022C  0EEE               	movlw	-18
 10401  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10402  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10403  01023A  0E40               	movlw	low _dbuf
 10404  01023C  6EE6               	movwf	postinc1,c
 10405  01023E  0E02               	movlw	high _dbuf
 10406  010240  6EE6               	movwf	postinc1,c
 10407                           
 10408                           ;stkvar	_fp @ sp[(-60)+-2]
 10409  010242  0EC2               	movlw	-62
 10410  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10411  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10412  010250  EC68  F0B3         	call	_pad	;wreg free
 10413  010254  EF1D  F089         	goto	l1864
 10414  010258                     l10353:
 10415                           
 10416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10417                           ;stkvar	_g @ sp[(-56)+16]
 10418  010258  0ED8               	movlw	-40
 10419  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10420  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10421  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10422  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10423  010272  EC33  F0AE         	call	___fpclassifyf	;wreg free
 10424  010276  5032               	movf	btemp^0,w,c
 10425  010278  1033               	iorwf	(btemp+1)^0,w,c
 10426  01027A  A4D8               	btfss	status,2,c
 10427  01027C  D056               	goto	l10371
 10428  01027E  0EBF               	movlw	191
 10429  010280  6E3C               	movwf	(btemp+10)^0,c
 10430  010282  0EFF               	movlw	255
 10431  010284  6E3D               	movwf	(btemp+11)^0,c
 10432                           
 10433                           ;stkvar	_c @ sp[(-56)+-7]
 10434  010286  0EC1               	movlw	-63
 10435  010288  50E3               	movf	plusw1,w,c
 10436  01028A  6E3A               	movwf	(btemp+8)^0,c
 10437  01028C  6A3B               	clrf	(btemp+9)^0,c
 10438  01028E  503C               	movf	(btemp+10)^0,w,c
 10439  010290  263A               	addwf	(btemp+8)^0,f,c
 10440  010292  503D               	movf	(btemp+11)^0,w,c
 10441  010294  223B               	addwfc	(btemp+9)^0,f,c
 10442  010296  503B               	movf	(btemp+9)^0,w,c
 10443  010298  E106               	bnz	u10980
 10444  01029A  0E1A               	movlw	26
 10445  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10446  01029E  B0D8               	btfsc	status,0,c
 10447  0102A0  D002               	goto	u10980
 10448  0102A2  0E01               	movlw	1
 10449  0102A4  D001               	goto	u10990
 10450  0102A6                     u10980:
 10451  0102A6  0E00               	movlw	0
 10452  0102A8                     u10990:
 10453  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10454  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10455                           
 10456                           ;stkvar	_efgtoa$4384 @ sp[(-56)+6]
 10457  0102AC  0ECE               	movlw	-50
 10458  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10459  0102B4  0ECF               	movlw	-49
 10460  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10461                           
 10462                           ;stkvar	_efgtoa$4384 @ sp[(-56)+6]
 10463  0102BC  0ECE               	movlw	-50
 10464  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10465  0102C4  0ECF               	movlw	-49
 10466  0102C6  50E3               	movf	plusw1,w,c
 10467  0102C8  1032               	iorwf	btemp^0,w,c
 10468  0102CA  B4D8               	btfsc	status,2,c
 10469  0102CC  D017               	goto	l10363
 10470                           
 10471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10472  0102CE  0EE9               	movlw	low STR_38
 10473  0102D0  6EE6               	movwf	postinc1,c
 10474  0102D2  0EFF               	movlw	high STR_38
 10475  0102D4  6EE6               	movwf	postinc1,c
 10476                           
 10477                           ;stkvar	_n @ sp[(-58)+32]
 10478  0102D6  0E40               	movlw	low _dbuf
 10479  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10480  0102DA  0E02               	movlw	high _dbuf
 10481  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10482  0102DE  0EE6               	movlw	-26
 10483  0102E0  50E3               	movf	plusw1,w,c
 10484  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10485  0102E4  0EE7               	movlw	-25
 10486  0102E6  50E3               	movf	plusw1,w,c
 10487  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10488  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10489  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10490  0102F6  ECED  F0B5         	call	_strcpy	;wreg free
 10491                           
 10492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10493  0102FA  D78D               	goto	l10347
 10494  0102FC                     l10363:
 10495                           
 10496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10497  0102FC  0EF1               	movlw	low STR_39
 10498  0102FE  6EE6               	movwf	postinc1,c
 10499  010300  0EFF               	movlw	high STR_39
 10500  010302  6EE6               	movwf	postinc1,c
 10501                           
 10502                           ;stkvar	_n @ sp[(-58)+32]
 10503  010304  0E40               	movlw	low _dbuf
 10504  010306  6E3C               	movwf	(btemp+10)^0,c
 10505  010308  0E02               	movlw	high _dbuf
 10506  01030A  6E3D               	movwf	(btemp+11)^0,c
 10507  01030C  0EE6               	movlw	-26
 10508  01030E  50E3               	movf	plusw1,w,c
 10509  010310  263C               	addwf	(btemp+10)^0,f,c
 10510  010312  0EE7               	movlw	-25
 10511  010314  50E3               	movf	plusw1,w,c
 10512  010316  223D               	addwfc	(btemp+11)^0,f,c
 10513  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10514  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10515  010324  ECED  F0B5         	call	_strcpy	;wreg free
 10516  010328  D776               	goto	l10347
 10517  01032A                     l10371:
 10518                           
 10519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10520  01032A  0E00               	movlw	0
 10521  01032C  6E3A               	movwf	(btemp+8)^0,c
 10522  01032E  0E00               	movlw	0
 10523  010330  6E3B               	movwf	(btemp+9)^0,c
 10524  010332  0E80               	movlw	128
 10525  010334  6E3C               	movwf	(btemp+10)^0,c
 10526  010336  0E3F               	movlw	63
 10527  010338  6E3D               	movwf	(btemp+11)^0,c
 10528                           
 10529                           ;stkvar	_u @ sp[(-56)+12]
 10530  01033A  0ED4               	movlw	-44
 10531  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10532  010342  0ED5               	movlw	-43
 10533  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10534  01034A  0ED6               	movlw	-42
 10535  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10536  010352  0ED7               	movlw	-41
 10537  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10538                           
 10539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10540                           ;stkvar	_e @ sp[(-56)+34]
 10541  01035A  0EEA               	movlw	-22
 10542  01035C  6AE3               	clrf	plusw1,c
 10543  01035E  0EEB               	movlw	-21
 10544  010360  6AE3               	clrf	plusw1,c
 10545                           
 10546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10547  010362  0E00               	movlw	0
 10548  010364  6EE6               	movwf	postinc1,c
 10549  010366  0E00               	movlw	0
 10550  010368  6EE6               	movwf	postinc1,c
 10551  01036A  0E00               	movlw	0
 10552  01036C  6EE6               	movwf	postinc1,c
 10553  01036E  0E00               	movlw	0
 10554  010370  6EE6               	movwf	postinc1,c
 10555                           
 10556                           ;stkvar	_g @ sp[(-60)+16]
 10557  010372  0ED4               	movlw	-44
 10558  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10559  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10560  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10561  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10562  01038C  EC57  F0B6         	call	___fleq	;wreg free
 10563  010390  A032               	btfss	btemp& (0+255),0,c
 10564  010392  D039               	goto	l10383
 10565  010394  D0BC               	goto	u11030
 10566  010396                     l10379:
 10567                           
 10568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10569  010396  0E00               	movlw	0
 10570  010398  6EE6               	movwf	postinc1,c
 10571  01039A  0E00               	movlw	0
 10572  01039C  6EE6               	movwf	postinc1,c
 10573  01039E  0E20               	movlw	32
 10574  0103A0  6EE6               	movwf	postinc1,c
 10575  0103A2  0E41               	movlw	65
 10576  0103A4  6EE6               	movwf	postinc1,c
 10577                           
 10578                           ;stkvar	_u @ sp[(-60)+12]
 10579  0103A6  0ED0               	movlw	-48
 10580  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10581  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10582  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10583  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10584  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10585                           
 10586                           ;stkvar	_u @ sp[(-56)+12]
 10587  0103C4  0ED4               	movlw	-44
 10588  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10589  0103CC  0ED5               	movlw	-43
 10590  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10591  0103D4  0ED6               	movlw	-42
 10592  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10593  0103DC  0ED7               	movlw	-41
 10594  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10595                           
 10596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10597                           ;stkvar	_e @ sp[(-56)+34]
 10598  0103E4  0EEA               	movlw	-22
 10599  0103E6  50E3               	movf	plusw1,w,c
 10600  0103E8  0F01               	addlw	1
 10601  0103EA  6E32               	movwf	btemp^0,c
 10602  0103EC  0EEA               	movlw	-22
 10603  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10604  0103F4  6A32               	clrf	btemp^0,c
 10605  0103F6  0EEB               	movlw	-21
 10606  0103F8  50E3               	movf	plusw1,w,c
 10607  0103FA  2032               	addwfc	btemp^0,w,c
 10608  0103FC  6E32               	movwf	btemp^0,c
 10609  0103FE  0EEB               	movlw	-21
 10610  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10611  010406                     l10383:
 10612                           
 10613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10614  010406  0E00               	movlw	0
 10615  010408  6EE6               	movwf	postinc1,c
 10616  01040A  0E00               	movlw	0
 10617  01040C  6EE6               	movwf	postinc1,c
 10618  01040E  0E20               	movlw	32
 10619  010410  6EE6               	movwf	postinc1,c
 10620  010412  0E41               	movlw	65
 10621  010414  6EE6               	movwf	postinc1,c
 10622                           
 10623                           ;stkvar	_u @ sp[(-60)+12]
 10624  010416  0ED0               	movlw	-48
 10625  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10626  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10627  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10628  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10629  010430  ECC1  F08E         	call	___flmul	;wreg free
 10630  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10631  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10632  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10633  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10634                           
 10635                           ;stkvar	_g @ sp[(-60)+16]
 10636  01044C  0ED4               	movlw	-44
 10637  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10638  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10639  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10640  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10641  010466  ECB7  F0AF         	call	___flge	;wreg free
 10642  01046A  A032               	btfss	btemp& (0+255),0,c
 10643  01046C  D032               	goto	l10389
 10644  01046E  D793               	goto	l10379
 10645  010470                     l10385:
 10646                           
 10647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10648  010470  0E00               	movlw	0
 10649  010472  6EE6               	movwf	postinc1,c
 10650  010474  0E00               	movlw	0
 10651  010476  6EE6               	movwf	postinc1,c
 10652  010478  0E20               	movlw	32
 10653  01047A  6EE6               	movwf	postinc1,c
 10654  01047C  0E41               	movlw	65
 10655  01047E  6EE6               	movwf	postinc1,c
 10656                           
 10657                           ;stkvar	_u @ sp[(-60)+12]
 10658  010480  0ED0               	movlw	-48
 10659  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10660  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10661  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10662  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10663  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10664                           
 10665                           ;stkvar	_u @ sp[(-56)+12]
 10666  01049E  0ED4               	movlw	-44
 10667  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10668  0104A6  0ED5               	movlw	-43
 10669  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10670  0104AE  0ED6               	movlw	-42
 10671  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10672  0104B6  0ED7               	movlw	-41
 10673  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10674                           
 10675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10676                           ;stkvar	_e @ sp[(-56)+34]
 10677  0104BE  50E1               	movf	fsr1l,w,c
 10678  0104C0  0FEA               	addlw	-22
 10679  0104C2  6ED9               	movwf	fsr2l,c
 10680  0104C4  50E2               	movf	fsr1h,w,c
 10681  0104C6  6EDA               	movwf	fsr2h,c
 10682  0104C8  0EFF               	movlw	255
 10683  0104CA  22DA               	addwfc	fsr2h,f,c
 10684  0104CC  06DE               	decf	postinc2,f,c
 10685  0104CE  0E00               	movlw	0
 10686  0104D0  5ADD               	subwfb	postdec2,f,c
 10687  0104D2                     l10389:
 10688                           
 10689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10690                           ;stkvar	_u @ sp[(-56)+12]
 10691  0104D2  0ED4               	movlw	-44
 10692  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10693  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10694  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10695  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10696                           
 10697                           ;stkvar	_g @ sp[(-60)+16]
 10698  0104EC  0ED4               	movlw	-44
 10699  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10700  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10701  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10702  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10703  010506  ECB7  F0AF         	call	___flge	;wreg free
 10704  01050A  A032               	btfss	btemp& (0+255),0,c
 10705  01050C  D7B1               	goto	l10385
 10706  01050E                     u11030:
 10707                           
 10708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10709                           ;stkvar	_c @ sp[(-56)+-7]
 10710  01050E  0EC1               	movlw	-63
 10711  010510  50E3               	movf	plusw1,w,c
 10712  010512  6EE6               	movwf	postinc1,c
 10713  010514  0E00               	movlw	0
 10714  010516  6EE6               	movwf	postinc1,c
 10715  010518  ECC8  F0B9         	call	_tolower	;wreg free
 10716                           
 10717                           ;stkvar	_mode @ sp[(-56)+54]
 10718  01051C  0EFE               	movlw	-2
 10719  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10720                           
 10721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10722                           ;stkvar	_mode @ sp[(-56)+54]
 10723                           ;stkvar	_nmode @ sp[(-56)+55]
 10724  010524  0EFE               	movlw	-2
 10725  010526  006F FF8C  F032    	movff	plusw1,btemp
 10726  01052C  0EFF               	movlw	-1
 10727  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10728                           
 10729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10730                           ;stkvar	_mode @ sp[(-56)+54]
 10731  010534  0EFE               	movlw	-2
 10732  010536  006F FF8C  F032    	movff	plusw1,btemp
 10733  01053C  0E67               	movlw	103
 10734  01053E  1832               	xorwf	btemp^0,w,c
 10735  010540  A4D8               	btfss	status,2,c
 10736  010542  D025               	goto	l10407
 10737                           
 10738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10739  010544  501D               	movf	_prec^0,w,c
 10740  010546  101E               	iorwf	(_prec+1)^0,w,c
 10741  010548  A4D8               	btfss	status,2,c
 10742  01054A  D004               	goto	l10401
 10743                           
 10744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10745  01054C  0E00               	movlw	0
 10746  01054E  6E1E               	movwf	(_prec+1)^0,c
 10747  010550  0E01               	movlw	1
 10748  010552  6E1D               	movwf	_prec^0,c
 10749  010554                     l10401:
 10750                           
 10751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10752  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10753  010556  D005               	goto	u11060
 10754  010558  501E               	movf	(_prec+1)^0,w,c
 10755  01055A  E110               	bnz	l10405
 10756  01055C  041D               	decf	_prec^0,w,c
 10757  01055E  B0D8               	btfsc	status,0,c
 10758  010560  D00D               	goto	l10405
 10759  010562                     u11060:
 10760  010562  0E06               	movlw	6
 10761  010564  6E3C               	movwf	(btemp+10)^0,c
 10762  010566  0E00               	movlw	0
 10763  010568  6E3D               	movwf	(btemp+11)^0,c
 10764                           
 10765                           ;stkvar	_p @ sp[(-56)+40]
 10766  01056A  0EF0               	movlw	-16
 10767  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10768  010572  0EF1               	movlw	-15
 10769  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10770  01057A  D00C               	goto	l10413
 10771  01057C                     l10405:
 10772                           
 10773                           ;stkvar	_p @ sp[(-56)+40]
 10774  01057C  0EF0               	movlw	-16
 10775  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10776  010584  0EF1               	movlw	-15
 10777  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10778  01058C  D003               	goto	l10413
 10779  01058E                     l10407:
 10780                           
 10781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10782  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10783  010590  D7F5               	goto	l10405
 10784  010592  D7E7               	goto	u11060
 10785  010594                     l10413:
 10786                           
 10787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10788                           ;stkvar	_mode @ sp[(-56)+54]
 10789  010594  0EFE               	movlw	-2
 10790  010596  006F FF8C  F032    	movff	plusw1,btemp
 10791  01059C  0E67               	movlw	103
 10792  01059E  1832               	xorwf	btemp^0,w,c
 10793  0105A0  A4D8               	btfss	status,2,c
 10794  0105A2  D02F               	goto	l10423
 10795                           
 10796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10797                           ;stkvar	_e @ sp[(-56)+34]
 10798  0105A4  0EEB               	movlw	-21
 10799  0105A6  AEE3               	btfss	plusw1,7,c
 10800  0105A8  D00E               	goto	u11090
 10801  0105AA  0EEA               	movlw	-22
 10802  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10803  0105B2  0EFC               	movlw	252
 10804  0105B4  5E32               	subwf	btemp^0,f,c
 10805  0105B6  0EEB               	movlw	-21
 10806  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10807  0105BE  0EFF               	movlw	255
 10808  0105C0  5A32               	subwfb	btemp^0,f,c
 10809  0105C2  A0D8               	btfss	status,0,c
 10810  0105C4  D018               	goto	l10421
 10811  0105C6                     u11090:
 10812                           
 10813                           ;stkvar	_e @ sp[(-56)+34]
 10814                           ;stkvar	_p @ sp[(-56)+40]
 10815  0105C6  0EF0               	movlw	-16
 10816  0105C8  50E3               	movf	plusw1,w,c
 10817  0105CA  0FFF               	addlw	255
 10818  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10819  0105CE  0EF1               	movlw	-15
 10820  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10821  0105D6  0EFF               	movlw	255
 10822  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10823  0105DA  0EEA               	movlw	-22
 10824  0105DC  50E3               	movf	plusw1,w,c
 10825  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10826  0105E0  503D               	movf	(btemp+11)^0,w,c
 10827  0105E2  0A80               	xorlw	128
 10828  0105E4  6E32               	movwf	btemp^0,c
 10829  0105E6  0EEB               	movlw	-21
 10830  0105E8  50E3               	movf	plusw1,w,c
 10831  0105EA  0A80               	xorlw	128
 10832  0105EC  5832               	subwfb	btemp^0,w,c
 10833  0105EE  A0D8               	btfss	status,0,c
 10834  0105F0  D002               	goto	l10421
 10835                           
 10836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10837  0105F2  0E66               	movlw	102
 10838  0105F4  D001               	goto	L9
 10839  0105F6                     l10421:
 10840                           
 10841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10842  0105F6  0E65               	movlw	101
 10843  0105F8                     L9:
 10844  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10845                           
 10846                           ;stkvar	_nmode @ sp[(-56)+55]
 10847  0105FA  0EFF               	movlw	-1
 10848  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10849  010602                     l10423:
 10850                           
 10851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10852                           ;stkvar	_p @ sp[(-56)+40]
 10853                           ;stkvar	_m @ sp[(-56)+48]
 10854  010602  0EF0               	movlw	-16
 10855  010604  006F FF8C  F032    	movff	plusw1,btemp
 10856  01060A  0EF8               	movlw	-8
 10857  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10858  010612  0EF1               	movlw	-15
 10859  010614  006F FF8C  F032    	movff	plusw1,btemp
 10860  01061A  0EF9               	movlw	-7
 10861  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10862                           
 10863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10864                           ;stkvar	_mode @ sp[(-56)+54]
 10865  010622  0EFE               	movlw	-2
 10866  010624  006F FF8C  F032    	movff	plusw1,btemp
 10867  01062A  0E67               	movlw	103
 10868  01062C  1832               	xorwf	btemp^0,w,c
 10869  01062E  A4D8               	btfss	status,2,c
 10870  010630  D00B               	goto	u11130
 10871                           
 10872                           ;stkvar	_nmode @ sp[(-56)+55]
 10873  010632  0EFF               	movlw	-1
 10874  010634  006F FF8C  F032    	movff	plusw1,btemp
 10875  01063A  0E66               	movlw	102
 10876  01063C  1832               	xorwf	btemp^0,w,c
 10877  01063E  A4D8               	btfss	status,2,c
 10878  010640  D014               	goto	l1893
 10879                           
 10880                           ;stkvar	_e @ sp[(-56)+34]
 10881  010642  0EEB               	movlw	-21
 10882  010644  AEE3               	btfss	plusw1,7,c
 10883  010646  D011               	goto	l1893
 10884  010648                     u11130:
 10885                           
 10886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10887                           ;stkvar	_m @ sp[(-56)+48]
 10888  010648  0EF8               	movlw	-8
 10889  01064A  50E3               	movf	plusw1,w,c
 10890  01064C  0F01               	addlw	1
 10891  01064E  6E32               	movwf	btemp^0,c
 10892  010650  0EF8               	movlw	-8
 10893  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 10894  010658  6A32               	clrf	btemp^0,c
 10895  01065A  0EF9               	movlw	-7
 10896  01065C  50E3               	movf	plusw1,w,c
 10897  01065E  2032               	addwfc	btemp^0,w,c
 10898  010660  6E32               	movwf	btemp^0,c
 10899  010662  0EF9               	movlw	-7
 10900  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 10901  01066A                     l1893:
 10902                           
 10903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10904                           ;stkvar	_nmode @ sp[(-56)+55]
 10905  01066A  0EFF               	movlw	-1
 10906  01066C  006F FF8C  F032    	movff	plusw1,btemp
 10907  010672  0E66               	movlw	102
 10908  010674  1832               	xorwf	btemp^0,w,c
 10909  010676  A4D8               	btfss	status,2,c
 10910  010678  D03B               	goto	l10443
 10911                           
 10912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10913                           ;stkvar	_e @ sp[(-56)+34]
 10914  01067A  0EEB               	movlw	-21
 10915  01067C  AEE3               	btfss	plusw1,7,c
 10916  01067E  D01C               	goto	l10439
 10917                           
 10918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10919  010680  0E00               	movlw	0
 10920  010682  6E3A               	movwf	(btemp+8)^0,c
 10921  010684  0E00               	movlw	0
 10922  010686  6E3B               	movwf	(btemp+9)^0,c
 10923  010688  0E80               	movlw	128
 10924  01068A  6E3C               	movwf	(btemp+10)^0,c
 10925  01068C  0E3F               	movlw	63
 10926  01068E  6E3D               	movwf	(btemp+11)^0,c
 10927                           
 10928                           ;stkvar	_u @ sp[(-56)+12]
 10929  010690  0ED4               	movlw	-44
 10930  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10931  010698  0ED5               	movlw	-43
 10932  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10933  0106A0  0ED6               	movlw	-42
 10934  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10935  0106A8  0ED7               	movlw	-41
 10936  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10937                           
 10938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10939                           ;stkvar	_e @ sp[(-56)+34]
 10940  0106B0  0EEA               	movlw	-22
 10941  0106B2  6AE3               	clrf	plusw1,c
 10942  0106B4  0EEB               	movlw	-21
 10943  0106B6  6AE3               	clrf	plusw1,c
 10944  0106B8                     l10439:
 10945                           
 10946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10947                           ;stkvar	_mode @ sp[(-56)+54]
 10948  0106B8  0EFE               	movlw	-2
 10949  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 10950  0106C0  0E67               	movlw	103
 10951  0106C2  1832               	xorwf	btemp^0,w,c
 10952  0106C4  B4D8               	btfsc	status,2,c
 10953  0106C6  D014               	goto	l10443
 10954                           
 10955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10956                           ;stkvar	_e @ sp[(-56)+34]
 10957                           ;stkvar	_m @ sp[(-56)+48]
 10958  0106C8  0EF8               	movlw	-8
 10959  0106CA  50E3               	movf	plusw1,w,c
 10960  0106CC  6E32               	movwf	btemp^0,c
 10961  0106CE  0EEA               	movlw	-22
 10962  0106D0  50E3               	movf	plusw1,w,c
 10963  0106D2  2632               	addwf	btemp^0,f,c
 10964  0106D4  0EF8               	movlw	-8
 10965  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10966  0106DC  0EF9               	movlw	-7
 10967  0106DE  50E3               	movf	plusw1,w,c
 10968  0106E0  6E32               	movwf	btemp^0,c
 10969  0106E2  0EEB               	movlw	-21
 10970  0106E4  50E3               	movf	plusw1,w,c
 10971  0106E6  2232               	addwfc	btemp^0,f,c
 10972  0106E8  0EF9               	movlw	-7
 10973  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10974  0106F0                     l10443:
 10975                           
 10976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10977                           ;stkvar	_i @ sp[(-56)+36]
 10978  0106F0  0EEC               	movlw	-20
 10979  0106F2  6AE3               	clrf	plusw1,c
 10980  0106F4  0EED               	movlw	-19
 10981  0106F6  6AE3               	clrf	plusw1,c
 10982                           
 10983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10984                           ;stkvar	_g @ sp[(-56)+16]
 10985  0106F8  0ED8               	movlw	-40
 10986  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 10987  010700  0ED9               	movlw	-39
 10988  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 10989  010708  0EDA               	movlw	-38
 10990  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10991  010710  0EDB               	movlw	-37
 10992  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 10993                           
 10994                           ;stkvar	_h @ sp[(-56)+24]
 10995  010718  0EE0               	movlw	-32
 10996  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10997  010720  0EE1               	movlw	-31
 10998  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10999  010728  0EE2               	movlw	-30
 11000  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11001  010730  0EE3               	movlw	-29
 11002  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11003                           
 11004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11005                           ;stkvar	_u @ sp[(-56)+12]
 11006  010738  0ED4               	movlw	-44
 11007  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11008  010740  0ED5               	movlw	-43
 11009  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11010  010748  0ED6               	movlw	-42
 11011  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11012  010750  0ED7               	movlw	-41
 11013  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11014                           
 11015                           ;stkvar	_ou @ sp[(-56)+28]
 11016  010758  0EE4               	movlw	-28
 11017  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11018  010760  0EE5               	movlw	-27
 11019  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11020  010768  0EE6               	movlw	-26
 11021  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11022  010770  0EE7               	movlw	-25
 11023  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11024                           
 11025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11026  010778  D0D6               	goto	l10459
 11027  01077A                     l10449:
 11028                           
 11029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11030                           ;stkvar	_u @ sp[(-56)+12]
 11031  01077A  0ED4               	movlw	-44
 11032  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11033  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11034  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11035  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11036                           
 11037                           ;stkvar	_h @ sp[(-60)+24]
 11038  010794  0EDC               	movlw	-36
 11039  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11040  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11041  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11042  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11043  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 11044  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11045  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11046  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11047  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11048  0107CA  EC34  F0A2         	call	_floorf	;wreg free
 11049                           
 11050                           ;stkvar	_l @ sp[(-56)+20]
 11051  0107CE  0EDC               	movlw	-36
 11052  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11053  0107D6  0EDD               	movlw	-35
 11054  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11055  0107DE  0EDE               	movlw	-34
 11056  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11057  0107E6  0EDF               	movlw	-33
 11058  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11059                           
 11060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11061                           ;stkvar	_l @ sp[(-56)+20]
 11062  0107EE  0EDC               	movlw	-36
 11063  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11064  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11065  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11066  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11067  010808  ECFE  F0AE         	call	___fltol	;wreg free
 11068  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11069  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11070                           
 11071                           ;stkvar	_d @ sp[(-56)+44]
 11072  010818  0EF4               	movlw	-12
 11073  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11074  010820  0EF5               	movlw	-11
 11075  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11076                           
 11077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11078                           ;stkvar	_u @ sp[(-56)+12]
 11079  010828  0ED4               	movlw	-44
 11080  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11081  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11082  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11083  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11084                           
 11085                           ;stkvar	_l @ sp[(-60)+20]
 11086  010842  0ED8               	movlw	-40
 11087  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11088  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11089  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11090  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11091  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11092  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11093  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11094  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11095  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11096                           
 11097                           ;stkvar	_h @ sp[(-60)+24]
 11098  010878  0EDC               	movlw	-36
 11099  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11100  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11101  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11102  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11103  010892  EC49  F0BD         	call	___flsub	;wreg free
 11104                           
 11105                           ;stkvar	_h @ sp[(-56)+24]
 11106  010896  0EE0               	movlw	-32
 11107  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11108  01089E  0EE1               	movlw	-31
 11109  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11110  0108A6  0EE2               	movlw	-30
 11111  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11112  0108AE  0EE3               	movlw	-29
 11113  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11114                           
 11115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11116  0108B6  0E00               	movlw	0
 11117  0108B8  6EE6               	movwf	postinc1,c
 11118  0108BA  0E00               	movlw	0
 11119  0108BC  6EE6               	movwf	postinc1,c
 11120  0108BE  0E20               	movlw	32
 11121  0108C0  6EE6               	movwf	postinc1,c
 11122  0108C2  0E41               	movlw	65
 11123  0108C4  6EE6               	movwf	postinc1,c
 11124                           
 11125                           ;stkvar	_u @ sp[(-60)+12]
 11126  0108C6  0ED0               	movlw	-48
 11127  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11128  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11129  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11130  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11131  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 11132                           
 11133                           ;stkvar	_u @ sp[(-56)+12]
 11134  0108E4  0ED4               	movlw	-44
 11135  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11136  0108EC  0ED5               	movlw	-43
 11137  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11138  0108F4  0ED6               	movlw	-42
 11139  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11140  0108FC  0ED7               	movlw	-41
 11141  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11142                           
 11143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11144                           ;stkvar	_i @ sp[(-56)+36]
 11145  010904  0EEC               	movlw	-20
 11146  010906  50E3               	movf	plusw1,w,c
 11147  010908  0F01               	addlw	1
 11148  01090A  6E32               	movwf	btemp^0,c
 11149  01090C  0EEC               	movlw	-20
 11150  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11151  010914  6A32               	clrf	btemp^0,c
 11152  010916  0EED               	movlw	-19
 11153  010918  50E3               	movf	plusw1,w,c
 11154  01091A  2032               	addwfc	btemp^0,w,c
 11155  01091C  6E32               	movwf	btemp^0,c
 11156  01091E  0EED               	movlw	-19
 11157  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11158  010926                     l10459:
 11159                           
 11160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11161                           ;stkvar	_m @ sp[(-56)+48]
 11162                           ;stkvar	_i @ sp[(-56)+36]
 11163  010926  50E1               	movf	fsr1l,w,c
 11164  010928  0FEC               	addlw	-20
 11165  01092A  6ED9               	movwf	fsr2l,c
 11166  01092C  50E2               	movf	fsr1h,w,c
 11167  01092E  6EDA               	movwf	fsr2h,c
 11168  010930  0EFF               	movlw	255
 11169  010932  22DA               	addwfc	fsr2h,f,c
 11170  010934  0EF8               	movlw	-8
 11171  010936  50E3               	movf	plusw1,w,c
 11172  010938  5CDE               	subwf	postinc2,w,c
 11173  01093A  50DE               	movf	postinc2,w,c
 11174  01093C  0A80               	xorlw	128
 11175  01093E  6E32               	movwf	btemp^0,c
 11176  010940  0EF9               	movlw	-7
 11177  010942  50E3               	movf	plusw1,w,c
 11178  010944  0A80               	xorlw	128
 11179  010946  5832               	subwfb	btemp^0,w,c
 11180  010948  A0D8               	btfss	status,0,c
 11181  01094A  D717               	goto	l10449
 11182                           
 11183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11184  01094C  0E00               	movlw	0
 11185  01094E  6EE6               	movwf	postinc1,c
 11186  010950  0E00               	movlw	0
 11187  010952  6EE6               	movwf	postinc1,c
 11188  010954  0EA0               	movlw	160
 11189  010956  6EE6               	movwf	postinc1,c
 11190  010958  0E40               	movlw	64
 11191  01095A  6EE6               	movwf	postinc1,c
 11192                           
 11193                           ;stkvar	_u @ sp[(-60)+12]
 11194  01095C  0ED0               	movlw	-48
 11195  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11196  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11197  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11198  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11199  010976  ECC1  F08E         	call	___flmul	;wreg free
 11200                           
 11201                           ;stkvar	_l @ sp[(-56)+20]
 11202  01097A  0EDC               	movlw	-36
 11203  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11204  010982  0EDD               	movlw	-35
 11205  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11206  01098A  0EDE               	movlw	-34
 11207  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11208  010992  0EDF               	movlw	-33
 11209  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11210                           
 11211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11212                           ;stkvar	_l @ sp[(-56)+20]
 11213  01099A  0EDC               	movlw	-36
 11214  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11215  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11216  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11217  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11218                           
 11219                           ;stkvar	_h @ sp[(-60)+24]
 11220  0109B4  0EDC               	movlw	-36
 11221  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11222  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11223  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11224  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11225  0109CE  ECB7  F0AF         	call	___flge	;wreg free
 11226  0109D2  A032               	btfss	btemp& (0+255),0,c
 11227  0109D4  D021               	goto	u11200
 11228                           
 11229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11230                           ;stkvar	_l @ sp[(-56)+20]
 11231                           
 11232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11233                           
 11234                           ;stkvar	_l @ sp[(-56)+20]
 11235                           
 11236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11237  0109D6  0EDC               	movlw	-36
 11238  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11239  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11240  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11241  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11242                           
 11243                           ;stkvar	_h @ sp[(-60)+24]
 11244  0109F0  0EDC               	movlw	-36
 11245  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11246  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11247  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11248  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11249  010A0A  EC57  F0B6         	call	___fleq	;wreg free
 11250  010A0E  A032               	btfss	btemp& (0+255),0,c
 11251  010A10  D01B               	goto	l10473
 11252                           
 11253                           ;stkvar	_d @ sp[(-56)+44]
 11254  010A12  0EF4               	movlw	-12
 11255  010A14  B0E3               	btfsc	plusw1,0,c
 11256  010A16  D018               	goto	l10473
 11257  010A18                     u11200:
 11258                           
 11259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11260  010A18  0E00               	movlw	0
 11261  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11262  010A1C  0E00               	movlw	0
 11263  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11264  010A20  0E00               	movlw	0
 11265  010A22  6E3C               	movwf	(btemp+10)^0,c
 11266  010A24  0E00               	movlw	0
 11267  010A26  6E3D               	movwf	(btemp+11)^0,c
 11268                           
 11269                           ;stkvar	_l @ sp[(-56)+20]
 11270  010A28  0EDC               	movlw	-36
 11271  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11272  010A30  0EDD               	movlw	-35
 11273  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11274  010A38  0EDE               	movlw	-34
 11275  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11276  010A40  0EDF               	movlw	-33
 11277  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11278  010A48                     l10473:
 11279                           
 11280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11281                           ;stkvar	_l @ sp[(-56)+20]
 11282  010A48  0EDC               	movlw	-36
 11283  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11284  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11285  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11286  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11287                           
 11288                           ;stkvar	_g @ sp[(-60)+16]
 11289  010A62  0ED4               	movlw	-44
 11290  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11291  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11292  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11293  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11294  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11295                           
 11296                           ;stkvar	_h @ sp[(-56)+24]
 11297  010A80  0EE0               	movlw	-32
 11298  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11299  010A88  0EE1               	movlw	-31
 11300  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11301  010A90  0EE2               	movlw	-30
 11302  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11303  010A98  0EE3               	movlw	-29
 11304  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11305                           
 11306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11307                           ;stkvar	_ou @ sp[(-56)+28]
 11308  010AA0  0EE4               	movlw	-28
 11309  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11310  010AA8  0EE5               	movlw	-27
 11311  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11312  010AB0  0EE6               	movlw	-26
 11313  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11314  010AB8  0EE7               	movlw	-25
 11315  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11316                           
 11317                           ;stkvar	_u @ sp[(-56)+12]
 11318  010AC0  0ED4               	movlw	-44
 11319  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11320  010AC8  0ED5               	movlw	-43
 11321  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11322  010AD0  0ED6               	movlw	-42
 11323  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11324  010AD8  0ED7               	movlw	-41
 11325  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11326                           
 11327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11328                           ;stkvar	_nmode @ sp[(-56)+55]
 11329  010AE0  0EFF               	movlw	-1
 11330  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11331  010AE8  0E65               	movlw	101
 11332  010AEA  1832               	xorwf	btemp^0,w,c
 11333  010AEC  B4D8               	btfsc	status,2,c
 11334  010AEE  D011               	goto	l10481
 11335                           
 11336                           ;stkvar	_e @ sp[(-56)+34]
 11337                           ;stkvar	_ne @ sp[(-56)+46]
 11338  010AF0  0EEA               	movlw	-22
 11339  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11340  010AF8  0EF6               	movlw	-10
 11341  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11342  010B00  0EEB               	movlw	-21
 11343  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11344  010B08  0EF7               	movlw	-9
 11345  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11346  010B10  D004               	goto	l1908
 11347  010B12                     l10481:
 11348                           
 11349                           ;stkvar	_ne @ sp[(-56)+46]
 11350  010B12  0EF6               	movlw	-10
 11351  010B14  6AE3               	clrf	plusw1,c
 11352  010B16  0EF7               	movlw	-9
 11353  010B18  6AE3               	clrf	plusw1,c
 11354  010B1A                     l1908:
 11355                           
 11356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11357                           ;stkvar	_pp @ sp[(-56)+50]
 11358  010B1A  0EFA               	movlw	-6
 11359  010B1C  6AE3               	clrf	plusw1,c
 11360  010B1E  0EFB               	movlw	-5
 11361  010B20  6AE3               	clrf	plusw1,c
 11362                           
 11363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11364                           ;stkvar	_t @ sp[(-56)+52]
 11365  010B22  0EFC               	movlw	-4
 11366  010B24  6AE3               	clrf	plusw1,c
 11367  010B26  0EFD               	movlw	-3
 11368  010B28  6AE3               	clrf	plusw1,c
 11369                           
 11370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11371                           ;stkvar	_i @ sp[(-56)+36]
 11372  010B2A  0EEC               	movlw	-20
 11373  010B2C  6AE3               	clrf	plusw1,c
 11374  010B2E  0EED               	movlw	-19
 11375  010B30  6AE3               	clrf	plusw1,c
 11376                           
 11377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11378  010B32  D1B7               	goto	l10533
 11379  010B34                     l10483:
 11380                           
 11381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11382                           ;stkvar	_u @ sp[(-56)+12]
 11383  010B34  0ED4               	movlw	-44
 11384  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11385  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11386  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11387  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11388                           
 11389                           ;stkvar	_h @ sp[(-60)+24]
 11390  010B4E  0EDC               	movlw	-36
 11391  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11392  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11393  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11394  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11395  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11396  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11397  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11398  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11399  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11400  010B84  EC34  F0A2         	call	_floorf	;wreg free
 11401                           
 11402                           ;stkvar	_l @ sp[(-56)+20]
 11403  010B88  0EDC               	movlw	-36
 11404  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11405  010B90  0EDD               	movlw	-35
 11406  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11407  010B98  0EDE               	movlw	-34
 11408  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11409  010BA0  0EDF               	movlw	-33
 11410  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11411                           
 11412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11413                           ;stkvar	_l @ sp[(-56)+20]
 11414  010BA8  0EDC               	movlw	-36
 11415  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11416  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11417  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11418  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11419  010BC2  ECFE  F0AE         	call	___fltol	;wreg free
 11420  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11421  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11422                           
 11423                           ;stkvar	_d @ sp[(-56)+44]
 11424  010BD2  0EF4               	movlw	-12
 11425  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11426  010BDA  0EF5               	movlw	-11
 11427  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11428                           
 11429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11430  010BE2  B81F               	btfsc	_flags^0,4,c
 11431  010BE4  D026               	goto	l10497
 11432                           
 11433                           ;stkvar	_d @ sp[(-56)+44]
 11434  010BE6  0EF4               	movlw	-12
 11435  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11436  010BEE  0EF5               	movlw	-11
 11437  010BF0  50E3               	movf	plusw1,w,c
 11438  010BF2  1032               	iorwf	btemp^0,w,c
 11439  010BF4  A4D8               	btfss	status,2,c
 11440  010BF6  D01D               	goto	l10497
 11441                           
 11442                           ;stkvar	_mode @ sp[(-56)+54]
 11443  010BF8  0EFE               	movlw	-2
 11444  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11445  010C00  0E67               	movlw	103
 11446  010C02  1832               	xorwf	btemp^0,w,c
 11447  010C04  A4D8               	btfss	status,2,c
 11448  010C06  D015               	goto	l10497
 11449                           
 11450                           ;stkvar	_ne @ sp[(-56)+46]
 11451  010C08  0EF7               	movlw	-9
 11452  010C0A  AEE3               	btfss	plusw1,7,c
 11453  010C0C  D012               	goto	l10497
 11454                           
 11455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11456                           ;stkvar	_t @ sp[(-56)+52]
 11457  010C0E  0EFC               	movlw	-4
 11458  010C10  50E3               	movf	plusw1,w,c
 11459  010C12  0F01               	addlw	1
 11460  010C14  6E32               	movwf	btemp^0,c
 11461  010C16  0EFC               	movlw	-4
 11462  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11463  010C1E  6A32               	clrf	btemp^0,c
 11464  010C20  0EFD               	movlw	-3
 11465  010C22  50E3               	movf	plusw1,w,c
 11466  010C24  2032               	addwfc	btemp^0,w,c
 11467  010C26  6E32               	movwf	btemp^0,c
 11468  010C28  0EFD               	movlw	-3
 11469  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11470                           
 11471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11472  010C30  D0AF               	goto	l10525
 11473  010C32                     l10497:
 11474                           
 11475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11476                           ;stkvar	_pp @ sp[(-56)+50]
 11477  010C32  0EFA               	movlw	-6
 11478  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11479  010C3A  0EFB               	movlw	-5
 11480  010C3C  50E3               	movf	plusw1,w,c
 11481  010C3E  1032               	iorwf	btemp^0,w,c
 11482  010C40  A4D8               	btfss	status,2,c
 11483  010C42  D070               	goto	l10517
 11484                           
 11485                           ;stkvar	_ne @ sp[(-56)+46]
 11486  010C44  0EF7               	movlw	-9
 11487  010C46  AEE3               	btfss	plusw1,7,c
 11488  010C48  D06D               	goto	l10517
 11489                           
 11490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11491                           ;stkvar	_n @ sp[(-56)+32]
 11492  010C4A  0EE8               	movlw	-24
 11493  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11494  010C52  0EE9               	movlw	-23
 11495  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11496  010C5A  0E40               	movlw	low _dbuf
 11497  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11498  010C5E  6ED9               	movwf	fsr2l,c
 11499  010C60  0E02               	movlw	high _dbuf
 11500  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11501  010C64  6EDA               	movwf	fsr2h,c
 11502  010C66  0E2E               	movlw	46
 11503  010C68  6EDF               	movwf	indf2,c
 11504                           
 11505                           ;stkvar	_n @ sp[(-56)+32]
 11506  010C6A  0EE8               	movlw	-24
 11507  010C6C  50E3               	movf	plusw1,w,c
 11508  010C6E  0F01               	addlw	1
 11509  010C70  6E32               	movwf	btemp^0,c
 11510  010C72  0EE8               	movlw	-24
 11511  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11512  010C7A  6A32               	clrf	btemp^0,c
 11513  010C7C  0EE9               	movlw	-23
 11514  010C7E  50E3               	movf	plusw1,w,c
 11515  010C80  2032               	addwfc	btemp^0,w,c
 11516  010C82  6E32               	movwf	btemp^0,c
 11517  010C84  0EE9               	movlw	-23
 11518  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11519                           
 11520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11521                           ;stkvar	_w @ sp[(-56)+38]
 11522  010C8C  50E1               	movf	fsr1l,w,c
 11523  010C8E  0FEE               	addlw	-18
 11524  010C90  6ED9               	movwf	fsr2l,c
 11525  010C92  50E2               	movf	fsr1h,w,c
 11526  010C94  6EDA               	movwf	fsr2h,c
 11527  010C96  0EFF               	movlw	255
 11528  010C98  22DA               	addwfc	fsr2h,f,c
 11529  010C9A  06DE               	decf	postinc2,f,c
 11530  010C9C  0E00               	movlw	0
 11531  010C9E  5ADD               	subwfb	postdec2,f,c
 11532                           
 11533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11534  010CA0  0E01               	movlw	1
 11535  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11536  010CA4  0E00               	movlw	0
 11537  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11538                           
 11539                           ;stkvar	_pp @ sp[(-56)+50]
 11540  010CA8  0EFA               	movlw	-6
 11541  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11542  010CB0  0EFB               	movlw	-5
 11543  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11544  010CB8  D035               	goto	l10517
 11545  010CBA                     l10509:
 11546                           
 11547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11548                           ;stkvar	_n @ sp[(-56)+32]
 11549  010CBA  0EE8               	movlw	-24
 11550  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11551  010CC2  0EE9               	movlw	-23
 11552  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11553  010CCA  0E40               	movlw	low _dbuf
 11554  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11555  010CCE  6ED9               	movwf	fsr2l,c
 11556  010CD0  0E02               	movlw	high _dbuf
 11557  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11558  010CD4  6EDA               	movwf	fsr2h,c
 11559  010CD6  0E30               	movlw	48
 11560  010CD8  6EDF               	movwf	indf2,c
 11561                           
 11562                           ;stkvar	_n @ sp[(-56)+32]
 11563  010CDA  0EE8               	movlw	-24
 11564  010CDC  50E3               	movf	plusw1,w,c
 11565  010CDE  0F01               	addlw	1
 11566  010CE0  6E32               	movwf	btemp^0,c
 11567  010CE2  0EE8               	movlw	-24
 11568  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11569  010CEA  6A32               	clrf	btemp^0,c
 11570  010CEC  0EE9               	movlw	-23
 11571  010CEE  50E3               	movf	plusw1,w,c
 11572  010CF0  2032               	addwfc	btemp^0,w,c
 11573  010CF2  6E32               	movwf	btemp^0,c
 11574  010CF4  0EE9               	movlw	-23
 11575  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11576                           
 11577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11578                           ;stkvar	_w @ sp[(-56)+38]
 11579  010CFC  50E1               	movf	fsr1l,w,c
 11580  010CFE  0FEE               	addlw	-18
 11581  010D00  6ED9               	movwf	fsr2l,c
 11582  010D02  50E2               	movf	fsr1h,w,c
 11583  010D04  6EDA               	movwf	fsr2h,c
 11584  010D06  0EFF               	movlw	255
 11585  010D08  22DA               	addwfc	fsr2h,f,c
 11586  010D0A  06DE               	decf	postinc2,f,c
 11587  010D0C  0E00               	movlw	0
 11588  010D0E  5ADD               	subwfb	postdec2,f,c
 11589                           
 11590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11591                           ;stkvar	_t @ sp[(-56)+52]
 11592  010D10  50E1               	movf	fsr1l,w,c
 11593  010D12  0FFC               	addlw	-4
 11594  010D14  6ED9               	movwf	fsr2l,c
 11595  010D16  50E2               	movf	fsr1h,w,c
 11596  010D18  6EDA               	movwf	fsr2h,c
 11597  010D1A  0EFF               	movlw	255
 11598  010D1C  22DA               	addwfc	fsr2h,f,c
 11599  010D1E  06DE               	decf	postinc2,f,c
 11600  010D20  0E00               	movlw	0
 11601  010D22  5ADD               	subwfb	postdec2,f,c
 11602  010D24                     l10517:
 11603                           
 11604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11605                           ;stkvar	_t @ sp[(-56)+52]
 11606  010D24  0EFC               	movlw	-4
 11607  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11608  010D2C  0EFD               	movlw	-3
 11609  010D2E  50E3               	movf	plusw1,w,c
 11610  010D30  1032               	iorwf	btemp^0,w,c
 11611  010D32  A4D8               	btfss	status,2,c
 11612  010D34  D7C2               	goto	l10509
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11615                           ;stkvar	_n @ sp[(-56)+32]
 11616  010D36  0EE8               	movlw	-24
 11617  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11618  010D3E  0EE9               	movlw	-23
 11619  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11620  010D46  0E40               	movlw	low _dbuf
 11621  010D48  243C               	addwf	(btemp+10)^0,w,c
 11622  010D4A  6ED9               	movwf	fsr2l,c
 11623  010D4C  0E02               	movlw	high _dbuf
 11624  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11625  010D50  6EDA               	movwf	fsr2h,c
 11626                           
 11627                           ;stkvar	_d @ sp[(-56)+44]
 11628  010D52  0EF4               	movlw	-12
 11629  010D54  50E3               	movf	plusw1,w,c
 11630  010D56  0F30               	addlw	48
 11631  010D58  6EDF               	movwf	indf2,c
 11632                           
 11633                           ;stkvar	_n @ sp[(-56)+32]
 11634  010D5A  0EE8               	movlw	-24
 11635  010D5C  50E3               	movf	plusw1,w,c
 11636  010D5E  0F01               	addlw	1
 11637  010D60  6E32               	movwf	btemp^0,c
 11638  010D62  0EE8               	movlw	-24
 11639  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11640  010D6A  6A32               	clrf	btemp^0,c
 11641  010D6C  0EE9               	movlw	-23
 11642  010D6E  50E3               	movf	plusw1,w,c
 11643  010D70  2032               	addwfc	btemp^0,w,c
 11644  010D72  6E32               	movwf	btemp^0,c
 11645  010D74  0EE9               	movlw	-23
 11646  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11647                           
 11648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11649                           ;stkvar	_w @ sp[(-56)+38]
 11650  010D7C  50E1               	movf	fsr1l,w,c
 11651  010D7E  0FEE               	addlw	-18
 11652  010D80  6ED9               	movwf	fsr2l,c
 11653  010D82  50E2               	movf	fsr1h,w,c
 11654  010D84  6EDA               	movwf	fsr2h,c
 11655  010D86  0EFF               	movlw	255
 11656  010D88  22DA               	addwfc	fsr2h,f,c
 11657  010D8A  06DE               	decf	postinc2,f,c
 11658  010D8C  0E00               	movlw	0
 11659  010D8E  5ADD               	subwfb	postdec2,f,c
 11660  010D90                     l10525:
 11661                           
 11662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11663                           ;stkvar	_u @ sp[(-56)+12]
 11664  010D90  0ED4               	movlw	-44
 11665  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11666  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11667  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11668  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11669                           
 11670                           ;stkvar	_l @ sp[(-60)+20]
 11671  010DAA  0ED8               	movlw	-40
 11672  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11673  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11674  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11675  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11676  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11677  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11678  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11679  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11680  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11681                           
 11682                           ;stkvar	_h @ sp[(-60)+24]
 11683  010DE0  0EDC               	movlw	-36
 11684  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11685  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11686  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11687  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11688  010DFA  EC49  F0BD         	call	___flsub	;wreg free
 11689                           
 11690                           ;stkvar	_h @ sp[(-56)+24]
 11691  010DFE  0EE0               	movlw	-32
 11692  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11693  010E06  0EE1               	movlw	-31
 11694  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11695  010E0E  0EE2               	movlw	-30
 11696  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11697  010E16  0EE3               	movlw	-29
 11698  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11699                           
 11700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11701  010E1E  0E00               	movlw	0
 11702  010E20  6EE6               	movwf	postinc1,c
 11703  010E22  0E00               	movlw	0
 11704  010E24  6EE6               	movwf	postinc1,c
 11705  010E26  0E20               	movlw	32
 11706  010E28  6EE6               	movwf	postinc1,c
 11707  010E2A  0E41               	movlw	65
 11708  010E2C  6EE6               	movwf	postinc1,c
 11709                           
 11710                           ;stkvar	_u @ sp[(-60)+12]
 11711  010E2E  0ED0               	movlw	-48
 11712  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11713  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11714  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11715  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11716  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11717                           
 11718                           ;stkvar	_u @ sp[(-56)+12]
 11719  010E4C  0ED4               	movlw	-44
 11720  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11721  010E54  0ED5               	movlw	-43
 11722  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11723  010E5C  0ED6               	movlw	-42
 11724  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11725  010E64  0ED7               	movlw	-41
 11726  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11727                           
 11728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11729                           ;stkvar	_ne @ sp[(-56)+46]
 11730  010E6C  50E1               	movf	fsr1l,w,c
 11731  010E6E  0FF6               	addlw	-10
 11732  010E70  6ED9               	movwf	fsr2l,c
 11733  010E72  50E2               	movf	fsr1h,w,c
 11734  010E74  6EDA               	movwf	fsr2h,c
 11735  010E76  0EFF               	movlw	255
 11736  010E78  22DA               	addwfc	fsr2h,f,c
 11737  010E7A  06DE               	decf	postinc2,f,c
 11738  010E7C  0E00               	movlw	0
 11739  010E7E  5ADD               	subwfb	postdec2,f,c
 11740                           
 11741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11742                           ;stkvar	_i @ sp[(-56)+36]
 11743  010E80  0EEC               	movlw	-20
 11744  010E82  50E3               	movf	plusw1,w,c
 11745  010E84  0F01               	addlw	1
 11746  010E86  6E32               	movwf	btemp^0,c
 11747  010E88  0EEC               	movlw	-20
 11748  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11749  010E90  6A32               	clrf	btemp^0,c
 11750  010E92  0EED               	movlw	-19
 11751  010E94  50E3               	movf	plusw1,w,c
 11752  010E96  2032               	addwfc	btemp^0,w,c
 11753  010E98  6E32               	movwf	btemp^0,c
 11754  010E9A  0EED               	movlw	-19
 11755  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11756  010EA2                     l10533:
 11757                           
 11758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11759                           ;stkvar	_m @ sp[(-56)+48]
 11760                           ;stkvar	_i @ sp[(-56)+36]
 11761  010EA2  50E1               	movf	fsr1l,w,c
 11762  010EA4  0FEC               	addlw	-20
 11763  010EA6  6ED9               	movwf	fsr2l,c
 11764  010EA8  50E2               	movf	fsr1h,w,c
 11765  010EAA  6EDA               	movwf	fsr2h,c
 11766  010EAC  0EFF               	movlw	255
 11767  010EAE  22DA               	addwfc	fsr2h,f,c
 11768  010EB0  0EF8               	movlw	-8
 11769  010EB2  50E3               	movf	plusw1,w,c
 11770  010EB4  5CDE               	subwf	postinc2,w,c
 11771  010EB6  50DE               	movf	postinc2,w,c
 11772  010EB8  0A80               	xorlw	128
 11773  010EBA  6E32               	movwf	btemp^0,c
 11774  010EBC  0EF9               	movlw	-7
 11775  010EBE  50E3               	movf	plusw1,w,c
 11776  010EC0  0A80               	xorlw	128
 11777  010EC2  5832               	subwfb	btemp^0,w,c
 11778  010EC4  B0D8               	btfsc	status,0,c
 11779  010EC6  D00E               	goto	u11300
 11780                           
 11781                           ;stkvar	_n @ sp[(-56)+32]
 11782  010EC8  0EE9               	movlw	-23
 11783  010ECA  BEE3               	btfsc	plusw1,7,c
 11784  010ECC  D633               	goto	l10483
 11785  010ECE  0EE9               	movlw	-23
 11786  010ED0  50E3               	movf	plusw1,w,c
 11787  010ED2  E108               	bnz	u11300
 11788  010ED4  0EE8               	movlw	-24
 11789  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11790  010EDC  0E4B               	movlw	75
 11791  010EDE  5E32               	subwf	btemp^0,f,c
 11792  010EE0  A0D8               	btfss	status,0,c
 11793  010EE2  D628               	goto	l10483
 11794  010EE4                     u11300:
 11795                           
 11796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11797                           ;stkvar	_pp @ sp[(-56)+50]
 11798  010EE4  0EFA               	movlw	-6
 11799  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11800  010EEC  0EFB               	movlw	-5
 11801  010EEE  50E3               	movf	plusw1,w,c
 11802  010EF0  1032               	iorwf	btemp^0,w,c
 11803  010EF2  B4D8               	btfsc	status,2,c
 11804  010EF4  A81F               	btfss	_flags^0,4,c
 11805  010EF6  D021               	goto	l10545
 11806                           
 11807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11808                           ;stkvar	_n @ sp[(-56)+32]
 11809  010EF8  0EE8               	movlw	-24
 11810  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11811  010F00  0EE9               	movlw	-23
 11812  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11813  010F08  0E40               	movlw	low _dbuf
 11814  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11815  010F0C  6ED9               	movwf	fsr2l,c
 11816  010F0E  0E02               	movlw	high _dbuf
 11817  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11818  010F12  6EDA               	movwf	fsr2h,c
 11819  010F14  0E2E               	movlw	46
 11820  010F16  6EDF               	movwf	indf2,c
 11821                           
 11822                           ;stkvar	_n @ sp[(-56)+32]
 11823  010F18  0EE8               	movlw	-24
 11824  010F1A  50E3               	movf	plusw1,w,c
 11825  010F1C  0F01               	addlw	1
 11826  010F1E  6E32               	movwf	btemp^0,c
 11827  010F20  0EE8               	movlw	-24
 11828  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11829  010F28  6A32               	clrf	btemp^0,c
 11830  010F2A  0EE9               	movlw	-23
 11831  010F2C  50E3               	movf	plusw1,w,c
 11832  010F2E  2032               	addwfc	btemp^0,w,c
 11833  010F30  6E32               	movwf	btemp^0,c
 11834  010F32  0EE9               	movlw	-23
 11835  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11836  010F3A                     l10545:
 11837                           
 11838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11839                           ;stkvar	_n @ sp[(-56)+32]
 11840  010F3A  0EE8               	movlw	-24
 11841  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11842  010F42  0EE9               	movlw	-23
 11843  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11844  010F4A  0E40               	movlw	low _dbuf
 11845  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11846  010F4E  6ED9               	movwf	fsr2l,c
 11847  010F50  0E02               	movlw	high _dbuf
 11848  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11849  010F54  6EDA               	movwf	fsr2h,c
 11850  010F56  0E00               	movlw	0
 11851  010F58  6EDF               	movwf	indf2,c
 11852                           
 11853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11854                           ;stkvar	_nmode @ sp[(-56)+55]
 11855  010F5A  0EFF               	movlw	-1
 11856  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11857  010F62  0E65               	movlw	101
 11858  010F64  1832               	xorwf	btemp^0,w,c
 11859  010F66  A4D8               	btfss	status,2,c
 11860  010F68  EF16  F081         	goto	l10349
 11861                           
 11862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11863  010F6C  0E4F               	movlw	79
 11864  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11865  010F70  0E00               	movlw	0
 11866  010F72  6E3D               	movwf	(btemp+11)^0,c
 11867                           
 11868                           ;stkvar	_i @ sp[(-56)+36]
 11869  010F74  0EEC               	movlw	-20
 11870  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11871  010F7C  0EED               	movlw	-19
 11872  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11873                           
 11874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11875                           ;stkvar	_i @ sp[(-56)+36]
 11876  010F84  0EEC               	movlw	-20
 11877  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11878  010F8C  0EED               	movlw	-19
 11879  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11880  010F94  0E40               	movlw	low _dbuf
 11881  010F96  243C               	addwf	(btemp+10)^0,w,c
 11882  010F98  6ED9               	movwf	fsr2l,c
 11883  010F9A  0E02               	movlw	high _dbuf
 11884  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 11885  010F9E  6EDA               	movwf	fsr2h,c
 11886  010FA0  0E00               	movlw	0
 11887  010FA2  6EDF               	movwf	indf2,c
 11888                           
 11889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11890                           ;stkvar	_sign @ sp[(-56)+42]
 11891  010FA4  0EF2               	movlw	-14
 11892  010FA6  6AE3               	clrf	plusw1,c
 11893  010FA8  0EF3               	movlw	-13
 11894  010FAA  6AE3               	clrf	plusw1,c
 11895                           
 11896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11897                           ;stkvar	_e @ sp[(-56)+34]
 11898  010FAC  0EEB               	movlw	-21
 11899  010FAE  AEE3               	btfss	plusw1,7,c
 11900  010FB0  D012               	goto	l10559
 11901                           
 11902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11903  010FB2  0E01               	movlw	1
 11904  010FB4  6E3C               	movwf	(btemp+10)^0,c
 11905  010FB6  0E00               	movlw	0
 11906  010FB8  6E3D               	movwf	(btemp+11)^0,c
 11907                           
 11908                           ;stkvar	_sign @ sp[(-56)+42]
 11909  010FBA  0EF2               	movlw	-14
 11910  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11911  010FC2  0EF3               	movlw	-13
 11912  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11913                           
 11914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11915                           ;stkvar	_e @ sp[(-56)+34]
 11916                           ;stkvar	_e @ sp[(-56)+34]
 11917  010FCA  0EEA               	movlw	-22
 11918  010FCC  6CE3               	negf	plusw1,c
 11919  010FCE  0EEB               	movlw	-21
 11920  010FD0  1EE3               	comf	plusw1,f,c
 11921  010FD2  B0D8               	btfsc	status,0,c
 11922  010FD4  2AE3               	incf	plusw1,f,c
 11923  010FD6                     l10559:
 11924                           
 11925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11926  010FD6  0E02               	movlw	2
 11927  010FD8  6E3C               	movwf	(btemp+10)^0,c
 11928  010FDA  0E00               	movlw	0
 11929  010FDC  6E3D               	movwf	(btemp+11)^0,c
 11930                           
 11931                           ;stkvar	_p @ sp[(-56)+40]
 11932  010FDE  0EF0               	movlw	-16
 11933  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11934  010FE6  0EF1               	movlw	-15
 11935  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11936                           
 11937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11938  010FEE  D051               	goto	l10571
 11939  010FF0                     l10561:
 11940                           
 11941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11942                           ;stkvar	_i @ sp[(-56)+36]
 11943  010FF0  50E1               	movf	fsr1l,w,c
 11944  010FF2  0FEC               	addlw	-20
 11945  010FF4  6ED9               	movwf	fsr2l,c
 11946  010FF6  50E2               	movf	fsr1h,w,c
 11947  010FF8  6EDA               	movwf	fsr2h,c
 11948  010FFA  0EFF               	movlw	255
 11949  010FFC  22DA               	addwfc	fsr2h,f,c
 11950  010FFE  06DE               	decf	postinc2,f,c
 11951  011000  0E00               	movlw	0
 11952  011002  5ADD               	subwfb	postdec2,f,c
 11953                           
 11954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11955                           ;stkvar	_i @ sp[(-56)+36]
 11956  011004  0EEC               	movlw	-20
 11957  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 11958  01100C  0EED               	movlw	-19
 11959  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11960  011014  0E40               	movlw	low _dbuf
 11961  011016  243C               	addwf	(btemp+10)^0,w,c
 11962  011018  6ED9               	movwf	fsr2l,c
 11963  01101A  0E02               	movlw	high _dbuf
 11964  01101C  203D               	addwfc	(btemp+11)^0,w,c
 11965  01101E  6EDA               	movwf	fsr2h,c
 11966  011020  0E0A               	movlw	10
 11967  011022  6EE6               	movwf	postinc1,c
 11968  011024  0E00               	movlw	0
 11969  011026  6EE6               	movwf	postinc1,c
 11970                           
 11971                           ;stkvar	_e @ sp[(-58)+34]
 11972  011028  0EE8               	movlw	-24
 11973  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11974  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11975  011036  ECDC  F0B2         	call	___awmod	;wreg free
 11976  01103A  5032               	movf	btemp^0,w,c
 11977  01103C  0F30               	addlw	48
 11978  01103E  6EDF               	movwf	indf2,c
 11979                           
 11980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11981  011040  0E0A               	movlw	10
 11982  011042  6EE6               	movwf	postinc1,c
 11983  011044  0E00               	movlw	0
 11984  011046  6EE6               	movwf	postinc1,c
 11985                           
 11986                           ;stkvar	_e @ sp[(-58)+34]
 11987  011048  0EE8               	movlw	-24
 11988  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11989  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11990  011056  EC68  F0B0         	call	___awdiv	;wreg free
 11991                           
 11992                           ;stkvar	_e @ sp[(-56)+34]
 11993  01105A  0EEA               	movlw	-22
 11994  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11995  011062  0EEB               	movlw	-21
 11996  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11997                           
 11998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11999                           ;stkvar	_p @ sp[(-56)+40]
 12000  01106A  50E1               	movf	fsr1l,w,c
 12001  01106C  0FF0               	addlw	-16
 12002  01106E  6ED9               	movwf	fsr2l,c
 12003  011070  50E2               	movf	fsr1h,w,c
 12004  011072  6EDA               	movwf	fsr2h,c
 12005  011074  0EFF               	movlw	255
 12006  011076  22DA               	addwfc	fsr2h,f,c
 12007  011078  06DE               	decf	postinc2,f,c
 12008  01107A  0E00               	movlw	0
 12009  01107C  5ADD               	subwfb	postdec2,f,c
 12010                           
 12011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12012                           ;stkvar	_w @ sp[(-56)+38]
 12013  01107E  50E1               	movf	fsr1l,w,c
 12014  011080  0FEE               	addlw	-18
 12015  011082  6ED9               	movwf	fsr2l,c
 12016  011084  50E2               	movf	fsr1h,w,c
 12017  011086  6EDA               	movwf	fsr2h,c
 12018  011088  0EFF               	movlw	255
 12019  01108A  22DA               	addwfc	fsr2h,f,c
 12020  01108C  06DE               	decf	postinc2,f,c
 12021  01108E  0E00               	movlw	0
 12022  011090  5ADD               	subwfb	postdec2,f,c
 12023  011092                     l10571:
 12024                           
 12025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12026                           ;stkvar	_e @ sp[(-56)+34]
 12027  011092  0EEA               	movlw	-22
 12028  011094  006F FF8C  F032    	movff	plusw1,btemp
 12029  01109A  0EEB               	movlw	-21
 12030  01109C  50E3               	movf	plusw1,w,c
 12031  01109E  1032               	iorwf	btemp^0,w,c
 12032  0110A0  A4D8               	btfss	status,2,c
 12033  0110A2  D7A6               	goto	l10561
 12034                           
 12035                           ;stkvar	_p @ sp[(-56)+40]
 12036  0110A4  0EF1               	movlw	-15
 12037  0110A6  BEE3               	btfsc	plusw1,7,c
 12038  0110A8  D007               	goto	u11360
 12039  0110AA  0EF1               	movlw	-15
 12040  0110AC  50E3               	movf	plusw1,w,c
 12041  0110AE  E1A0               	bnz	l10561
 12042  0110B0  0EF0               	movlw	-16
 12043  0110B2  04E3               	decf	plusw1,w,c
 12044  0110B4  B0D8               	btfsc	status,0,c
 12045  0110B6  D79C               	goto	l10561
 12046  0110B8                     u11360:
 12047                           
 12048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12049                           ;stkvar	_i @ sp[(-56)+36]
 12050  0110B8  50E1               	movf	fsr1l,w,c
 12051  0110BA  0FEC               	addlw	-20
 12052  0110BC  6ED9               	movwf	fsr2l,c
 12053  0110BE  50E2               	movf	fsr1h,w,c
 12054  0110C0  6EDA               	movwf	fsr2h,c
 12055  0110C2  0EFF               	movlw	255
 12056  0110C4  22DA               	addwfc	fsr2h,f,c
 12057  0110C6  06DE               	decf	postinc2,f,c
 12058  0110C8  0E00               	movlw	0
 12059  0110CA  5ADD               	subwfb	postdec2,f,c
 12060                           
 12061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12062                           ;stkvar	_sign @ sp[(-56)+42]
 12063  0110CC  0EF2               	movlw	-14
 12064  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12065  0110D4  0EF3               	movlw	-13
 12066  0110D6  50E3               	movf	plusw1,w,c
 12067  0110D8  1032               	iorwf	btemp^0,w,c
 12068  0110DA  A4D8               	btfss	status,2,c
 12069  0110DC  D002               	goto	l10581
 12070  0110DE  0E2B               	movlw	43
 12071  0110E0  D001               	goto	L10
 12072  0110E2                     l10581:
 12073  0110E2  0E2D               	movlw	45
 12074  0110E4                     L10:
 12075  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12076  0110E6  0E00               	movlw	0
 12077  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12078                           
 12079                           ;stkvar	_efgtoa$4388 @ sp[(-56)+4]
 12080  0110EA  0ECC               	movlw	-52
 12081  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12082  0110F2  0ECD               	movlw	-51
 12083  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12084                           
 12085                           ;stkvar	_efgtoa$4388 @ sp[(-56)+4]
 12086                           ;stkvar	_i @ sp[(-56)+36]
 12087  0110FA  0EEC               	movlw	-20
 12088  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12089  011102  0EED               	movlw	-19
 12090  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12091  01110A  0E40               	movlw	low _dbuf
 12092  01110C  243C               	addwf	(btemp+10)^0,w,c
 12093  01110E  6ED9               	movwf	fsr2l,c
 12094  011110  0E02               	movlw	high _dbuf
 12095  011112  203D               	addwfc	(btemp+11)^0,w,c
 12096  011114  6EDA               	movwf	fsr2h,c
 12097  011116  0ECC               	movlw	-52
 12098  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12099                           
 12100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12101                           ;stkvar	_w @ sp[(-56)+38]
 12102  01111E  50E1               	movf	fsr1l,w,c
 12103  011120  0FEE               	addlw	-18
 12104  011122  6ED9               	movwf	fsr2l,c
 12105  011124  50E2               	movf	fsr1h,w,c
 12106  011126  6EDA               	movwf	fsr2h,c
 12107  011128  0EFF               	movlw	255
 12108  01112A  22DA               	addwfc	fsr2h,f,c
 12109  01112C  06DE               	decf	postinc2,f,c
 12110  01112E  0E00               	movlw	0
 12111  011130  5ADD               	subwfb	postdec2,f,c
 12112                           
 12113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12114                           ;stkvar	_i @ sp[(-56)+36]
 12115  011132  50E1               	movf	fsr1l,w,c
 12116  011134  0FEC               	addlw	-20
 12117  011136  6ED9               	movwf	fsr2l,c
 12118  011138  50E2               	movf	fsr1h,w,c
 12119  01113A  6EDA               	movwf	fsr2h,c
 12120  01113C  0EFF               	movlw	255
 12121  01113E  22DA               	addwfc	fsr2h,f,c
 12122  011140  06DE               	decf	postinc2,f,c
 12123  011142  0E00               	movlw	0
 12124  011144  5ADD               	subwfb	postdec2,f,c
 12125  011146  0EBF               	movlw	191
 12126  011148  6E3C               	movwf	(btemp+10)^0,c
 12127  01114A  0EFF               	movlw	255
 12128  01114C  6E3D               	movwf	(btemp+11)^0,c
 12129                           
 12130                           ;stkvar	_c @ sp[(-56)+-7]
 12131  01114E  0EC1               	movlw	-63
 12132  011150  50E3               	movf	plusw1,w,c
 12133  011152  6E3A               	movwf	(btemp+8)^0,c
 12134  011154  6A3B               	clrf	(btemp+9)^0,c
 12135  011156  503C               	movf	(btemp+10)^0,w,c
 12136  011158  263A               	addwf	(btemp+8)^0,f,c
 12137  01115A  503D               	movf	(btemp+11)^0,w,c
 12138  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12139  01115E  503B               	movf	(btemp+9)^0,w,c
 12140  011160  E106               	bnz	u11380
 12141  011162  0E1A               	movlw	26
 12142  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12143  011166  B0D8               	btfsc	status,0,c
 12144  011168  D002               	goto	u11380
 12145  01116A  0E01               	movlw	1
 12146  01116C  D001               	goto	u11390
 12147  01116E                     u11380:
 12148  01116E  0E00               	movlw	0
 12149  011170                     u11390:
 12150  011170  6E3C               	movwf	(btemp+10)^0,c
 12151  011172  6A3D               	clrf	(btemp+11)^0,c
 12152                           
 12153                           ;stkvar	_efgtoa$4390 @ sp[(-56)+0]
 12154  011174  0EC8               	movlw	-56
 12155  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12156  01117C  0EC9               	movlw	-55
 12157  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12158                           
 12159                           ;stkvar	_efgtoa$4390 @ sp[(-56)+0]
 12160  011184  0EC8               	movlw	-56
 12161  011186  006F FF8C  F032    	movff	plusw1,btemp
 12162  01118C  0EC9               	movlw	-55
 12163  01118E  50E3               	movf	plusw1,w,c
 12164  011190  1032               	iorwf	btemp^0,w,c
 12165  011192  A4D8               	btfss	status,2,c
 12166  011194  D002               	goto	l10597
 12167  011196  0E65               	movlw	101
 12168  011198  D001               	goto	L11
 12169  01119A                     l10597:
 12170  01119A  0E45               	movlw	69
 12171  01119C                     L11:
 12172  01119C  6E3C               	movwf	(btemp+10)^0,c
 12173  01119E  0E00               	movlw	0
 12174  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12175                           
 12176                           ;stkvar	_efgtoa$4389 @ sp[(-56)+2]
 12177  0111A2  0ECA               	movlw	-54
 12178  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12179  0111AA  0ECB               	movlw	-53
 12180  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12181                           
 12182                           ;stkvar	_efgtoa$4389 @ sp[(-56)+2]
 12183                           ;stkvar	_i @ sp[(-56)+36]
 12184  0111B2  0EEC               	movlw	-20
 12185  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12186  0111BA  0EED               	movlw	-19
 12187  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12188  0111C2  0E40               	movlw	low _dbuf
 12189  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12190  0111C6  6ED9               	movwf	fsr2l,c
 12191  0111C8  0E02               	movlw	high _dbuf
 12192  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12193  0111CC  6EDA               	movwf	fsr2h,c
 12194  0111CE  0ECA               	movlw	-54
 12195  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12196                           
 12197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12198                           ;stkvar	_w @ sp[(-56)+38]
 12199  0111D6  50E1               	movf	fsr1l,w,c
 12200  0111D8  0FEE               	addlw	-18
 12201  0111DA  6ED9               	movwf	fsr2l,c
 12202  0111DC  50E2               	movf	fsr1h,w,c
 12203  0111DE  6EDA               	movwf	fsr2h,c
 12204  0111E0  0EFF               	movlw	255
 12205  0111E2  22DA               	addwfc	fsr2h,f,c
 12206  0111E4  06DE               	decf	postinc2,f,c
 12207  0111E6  0E00               	movlw	0
 12208  0111E8  5ADD               	subwfb	postdec2,f,c
 12209                           
 12210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12211                           ;stkvar	_i @ sp[(-56)+36]
 12212  0111EA  0EEC               	movlw	-20
 12213  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12214  0111F2  0EED               	movlw	-19
 12215  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12216  0111FA  0E40               	movlw	low _dbuf
 12217  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12218  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12219  011200  0E02               	movlw	high _dbuf
 12220  011202  203D               	addwfc	(btemp+11)^0,w,c
 12221  011204  6E3B               	movwf	(btemp+9)^0,c
 12222  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12223  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12224                           
 12225                           ;stkvar	_n @ sp[(-58)+32]
 12226  011212  0E40               	movlw	low _dbuf
 12227  011214  6E3C               	movwf	(btemp+10)^0,c
 12228  011216  0E02               	movlw	high _dbuf
 12229  011218  6E3D               	movwf	(btemp+11)^0,c
 12230  01121A  0EE6               	movlw	-26
 12231  01121C  50E3               	movf	plusw1,w,c
 12232  01121E  263C               	addwf	(btemp+10)^0,f,c
 12233  011220  0EE7               	movlw	-25
 12234  011222  50E3               	movf	plusw1,w,c
 12235  011224  223D               	addwfc	(btemp+11)^0,f,c
 12236  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12237  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12238  011232  ECED  F0B5         	call	_strcpy	;wreg free
 12239  011236  EF16  F081         	goto	l10349
 12240  01123A                     l1864:
 12241                           
 12242                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12243  01123A  0EC1               	movlw	193
 12244  01123C  26E1               	addwf	fsr1l,f,c
 12245  01123E  0EFF               	movlw	255
 12246  011240  22E2               	addwfc	fsr1h,f,c
 12247  011242  0012               	return		;funcret
 12248  011244                     __end_of_efgtoa:
 12249                           	opt callstack 0
 12250                           
 12251 ;; *************** function _tolower *****************
 12252 ;; Defined at:
 12253 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;  c               2  [STACK] int 
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  2  [STACK] int 
 12260 ;; Registers used:
 12261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/5
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12271 ;;Total ram usage:        0 bytes
 12272 ;; Hardware stack levels used:    1
 12273 ;; Hardware stack levels required when called:    7
 12274 ;; This function calls:
 12275 ;;		_isupper
 12276 ;; This function is called by:
 12277 ;;		_efgtoa
 12278 ;;		_vfpfcnvrt
 12279 ;; This function uses a reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text45
 12283  017390                     __ptext45:
 12284                           	opt callstack 0
 12285  017390                     _tolower:
 12286                           	opt callstack 0
 12287                           
 12288                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12289  017390  52E6               	movf	postinc1,f,c
 12290  017392  52E6               	movf	postinc1,f,c
 12291                           
 12292                           ;stkvar	_c @ sp[(-2)+-2]
 12293                           
 12294                           ;incstack = 0
 12295  017394  0EFC               	movlw	-4
 12296  017396  50E3               	movf	plusw1,w,c
 12297  017398  0FBF               	addlw	191
 12298  01739A  6E3C               	movwf	(btemp+10)^0,c
 12299  01739C  0EFD               	movlw	-3
 12300  01739E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12301  0173A4  0EFF               	movlw	255
 12302  0173A6  223D               	addwfc	(btemp+11)^0,f,c
 12303  0173A8  503D               	movf	(btemp+11)^0,w,c
 12304  0173AA  E106               	bnz	u9470
 12305  0173AC  0E1A               	movlw	26
 12306  0173AE  5C3C               	subwf	(btemp+10)^0,w,c
 12307  0173B0  B0D8               	btfsc	status,0,c
 12308  0173B2  D002               	goto	u9470
 12309  0173B4  0E01               	movlw	1
 12310  0173B6  D001               	goto	u9480
 12311  0173B8                     u9470:
 12312  0173B8  0E00               	movlw	0
 12313  0173BA                     u9480:
 12314  0173BA  6E3C               	movwf	(btemp+10)^0,c
 12315  0173BC  6A3D               	clrf	(btemp+11)^0,c
 12316                           
 12317                           ;stkvar	_tolower$5056 @ sp[(-2)+0]
 12318  0173BE  0EFE               	movlw	-2
 12319  0173C0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12320  0173C6  0EFF               	movlw	-1
 12321  0173C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12322                           
 12323                           ;stkvar	_tolower$5056 @ sp[(-2)+0]
 12324  0173CE  0EFE               	movlw	-2
 12325  0173D0  006F FF8C  F032    	movff	plusw1,btemp
 12326  0173D6  0EFF               	movlw	-1
 12327  0173D8  50E3               	movf	plusw1,w,c
 12328  0173DA  1032               	iorwf	btemp^0,w,c
 12329  0173DC  B4D8               	btfsc	status,2,c
 12330  0173DE  D00D               	goto	l9575
 12331                           
 12332                           ;stkvar	_c @ sp[(-2)+-2]
 12333  0173E0  0EFC               	movlw	-4
 12334  0173E2  006F FF8C  F032    	movff	plusw1,btemp
 12335  0173E8  0EFD               	movlw	-3
 12336  0173EA  006F FF8C  F033    	movff	plusw1,btemp+1
 12337  0173F0  0E20               	movlw	32
 12338  0173F2  1232               	iorwf	btemp^0,f,c
 12339  0173F4  0E00               	movlw	0
 12340  0173F6  1233               	iorwf	(btemp+1)^0,f,c
 12341  0173F8  D008               	goto	l2887
 12342  0173FA                     l9575:
 12343                           
 12344                           ;stkvar	_c @ sp[(-2)+-2]
 12345  0173FA  0EFC               	movlw	-4
 12346  0173FC  006F FF8C  F032    	movff	plusw1,btemp
 12347  017402  0EFD               	movlw	-3
 12348  017404  006F FF8C  F033    	movff	plusw1,btemp+1
 12349  01740A                     l2887:
 12350                           
 12351                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12352  01740A  52E5               	movf	postdec1,f,c
 12353  01740C  52E5               	movf	postdec1,f,c
 12354  01740E  52E5               	movf	postdec1,f,c
 12355  017410  52E5               	movf	postdec1,f,c
 12356  017412  0012               	return		;funcret
 12357  017414                     __end_of_tolower:
 12358                           	opt callstack 0
 12359                           
 12360 ;; *************** function _isupper *****************
 12361 ;; Defined at:
 12362 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;  c               2  [STACK] int 
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  2  [STACK] int 
 12369 ;; Registers used:
 12370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12380 ;;Total ram usage:        0 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:    6
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_efgtoa
 12387 ;;		_xtoa
 12388 ;;		_vfpfcnvrt
 12389 ;;		_tolower
 12390 ;; This function uses a reentrant model
 12391 ;;
 12392                           
 12393                           	psect	text46
 12394  017E6E                     __ptext46:
 12395                           	opt callstack 0
 12396  017E6E                     _isupper:
 12397                           	opt callstack 17
 12398                           
 12399                           ;stkvar	_c @ sp[(0)+-2]
 12400                           
 12401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12402                           ;incstack = 0
 12403  017E6E  0EFE               	movlw	-2
 12404  017E70  50E3               	movf	plusw1,w,c
 12405  017E72  0FBF               	addlw	191
 12406  017E74  6E3C               	movwf	(btemp+10)^0,c
 12407  017E76  0EFF               	movlw	-1
 12408  017E78  006F FF8C  F03D    	movff	plusw1,btemp+11
 12409  017E7E  0EFF               	movlw	255
 12410  017E80  223D               	addwfc	(btemp+11)^0,f,c
 12411  017E82  503D               	movf	(btemp+11)^0,w,c
 12412  017E84  E106               	bnz	u8870
 12413  017E86  0E1A               	movlw	26
 12414  017E88  5C3C               	subwf	(btemp+10)^0,w,c
 12415  017E8A  B0D8               	btfsc	status,0,c
 12416  017E8C  D002               	goto	u8870
 12417  017E8E  0E01               	movlw	1
 12418  017E90  D001               	goto	u8880
 12419  017E92                     u8870:
 12420  017E92  0E00               	movlw	0
 12421  017E94                     u8880:
 12422  017E94  6E32               	movwf	btemp^0,c
 12423  017E96  6A33               	clrf	(btemp+1)^0,c
 12424                           
 12425                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12426  017E98  52E5               	movf	postdec1,f,c
 12427  017E9A  52E5               	movf	postdec1,f,c
 12428  017E9C  0012               	return		;funcret
 12429  017E9E                     __end_of_isupper:
 12430                           	opt callstack 0
 12431                           
 12432 ;; *************** function _strcpy *****************
 12433 ;; Defined at:
 12434 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;  dest            2  [STACK] PTR unsigned char 
 12437 ;;		 -> dbuf(80), 
 12438 ;;  src             2  [STACK] PTR const unsigned char 
 12439 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12440 ;;		 -> dbuf(80), 
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;  d               2  [STACK] PTR unsigned char 
 12443 ;;		 -> dbuf(80), 
 12444 ;;  s               2  [STACK] PTR const unsigned char 
 12445 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12446 ;;		 -> dbuf(80), 
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  2  [STACK] PTR unsigned char 
 12449 ;; Registers used:
 12450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/5
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12460 ;;Total ram usage:        0 bytes
 12461 ;; Hardware stack levels used:    1
 12462 ;; Hardware stack levels required when called:    6
 12463 ;; This function calls:
 12464 ;;		Nothing
 12465 ;; This function is called by:
 12466 ;;		_efgtoa
 12467 ;; This function uses a reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text47
 12471  016BDA                     __ptext47:
 12472                           	opt callstack 0
 12473  016BDA                     _strcpy:
 12474                           	opt callstack 0
 12475                           
 12476                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12477  016BDA  52E6               	movf	postinc1,f,c
 12478  016BDC  52E6               	movf	postinc1,f,c
 12479  016BDE  52E6               	movf	postinc1,f,c
 12480  016BE0  52E6               	movf	postinc1,f,c
 12481                           
 12482                           ;stkvar	_src @ sp[(-4)+-4]
 12483                           
 12484                           ;incstack = 0
 12485  016BE2  0EF8               	movlw	-8
 12486  016BE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12487  016BEA  0EF9               	movlw	-7
 12488  016BEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12489                           
 12490                           ;stkvar	_s @ sp[(-4)+2]
 12491  016BF2  0EFF               	movlw	-1
 12492  016BF4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12493  016BFA  0EFE               	movlw	-2
 12494  016BFC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12495                           
 12496                           ;stkvar	_dest @ sp[(-4)+-2]
 12497  016C02  0EFA               	movlw	-6
 12498  016C04  006F FF8C  F03C    	movff	plusw1,btemp+10
 12499  016C0A  0EFB               	movlw	-5
 12500  016C0C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12501                           
 12502                           ;stkvar	_d @ sp[(-4)+0]
 12503  016C12  0EFD               	movlw	-3
 12504  016C14  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12505  016C1A  0EFC               	movlw	-4
 12506  016C1C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12507  016C22                     l9563:
 12508                           
 12509                           ;stkvar	_s @ sp[(-4)+2]
 12510  016C22  50E1               	movf	fsr1l,w,c
 12511  016C24  0FFE               	addlw	-2
 12512  016C26  6ED9               	movwf	fsr2l,c
 12513  016C28  50E2               	movf	fsr1h,w,c
 12514  016C2A  6EDA               	movwf	fsr2h,c
 12515  016C2C  0EFF               	movlw	255
 12516  016C2E  22DA               	addwfc	fsr2h,f,c
 12517  016C30  006F FF7C  F03C    	movff	indf2,btemp+10
 12518  016C36  0E01               	movlw	1
 12519  016C38  26DE               	addwf	postinc2,f,c
 12520  016C3A  006F FF7C  F03D    	movff	indf2,btemp+11
 12521  016C40  0E00               	movlw	0
 12522  016C42  22DD               	addwfc	postdec2,f,c
 12523  016C44  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12524  016C4A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12525  016C50  0E00               	movlw	low (__mediumconst shr (0+16))
 12526  016C52  6EF8               	movwf	tblptru,c
 12527                           
 12528                           ;stkvar	_d @ sp[(-4)+0]
 12529  016C54  50E1               	movf	fsr1l,w,c
 12530  016C56  0FFC               	addlw	-4
 12531  016C58  6ED9               	movwf	fsr2l,c
 12532  016C5A  50E2               	movf	fsr1h,w,c
 12533  016C5C  6EDA               	movwf	fsr2h,c
 12534  016C5E  0EFF               	movlw	255
 12535  016C60  22DA               	addwfc	fsr2h,f,c
 12536  016C62  006F FF7C  F03C    	movff	indf2,btemp+10
 12537  016C68  0E01               	movlw	1
 12538  016C6A  26DE               	addwf	postinc2,f,c
 12539  016C6C  006F FF7C  F03D    	movff	indf2,btemp+11
 12540  016C72  0E00               	movlw	0
 12541  016C74  22DD               	addwfc	postdec2,f,c
 12542  016C76  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12543  016C7C  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12544  016C82  0E1F               	movlw	(high __ramtop+-1)
 12545  016C84  64F7               	cpfsgt	tblptrh,c
 12546  016C86  D003               	bra	u9457
 12547  016C88  0008               	tblrd		*
 12548  016C8A  50F5               	movf	tablat,w,c
 12549  016C8C  D007               	bra	u9450
 12550  016C8E                     u9457:
 12551  016C8E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12552  016C94  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12553  016C9A  50EF               	movf	indf0,w,c
 12554  016C9C                     u9450:
 12555  016C9C  6EDF               	movwf	indf2,c
 12556  016C9E  50DF               	movf	indf2,w,c
 12557  016CA0  A4D8               	btfss	status,2,c
 12558  016CA2  D7BF               	goto	l9563
 12559                           
 12560                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12561  016CA4  0EF8               	movlw	248
 12562  016CA6  26E1               	addwf	fsr1l,f,c
 12563  016CA8  0EFF               	movlw	255
 12564  016CAA  22E2               	addwfc	fsr1h,f,c
 12565  016CAC  0012               	return		;funcret
 12566  016CAE                     __end_of_strcpy:
 12567                           	opt callstack 0
 12568                           
 12569 ;; *************** function _floorf *****************
 12570 ;; Defined at:
 12571 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;  x               4  [STACK] float 
 12574 ;; Auto vars:     Size  Location     Type
 12575 ;;  u               4  [STACK] struct .
 12576 ;;  m               4  [STACK] unsigned long 
 12577 ;;  e               2  [STACK] int 
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  4  [STACK] float 
 12580 ;; Registers used:
 12581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/5
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12591 ;;Total ram usage:        0 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; Hardware stack levels required when called:    6
 12594 ;; This function calls:
 12595 ;;		Nothing
 12596 ;; This function is called by:
 12597 ;;		_efgtoa
 12598 ;; This function uses a reentrant model
 12599 ;;
 12600                           
 12601                           	psect	text48
 12602  014468                     __ptext48:
 12603                           	opt callstack 0
 12604  014468                     _floorf:
 12605                           	opt callstack 0
 12606                           
 12607                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12608  014468  0E0A               	movlw	10
 12609  01446A  26E1               	addwf	fsr1l,f,c
 12610  01446C  0E00               	movlw	0
 12611  01446E  22E2               	addwfc	fsr1h,f,c
 12612                           
 12613                           ;incstack = 0
 12614  014470  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12615  014476  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12616  01447C  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12617  014482  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12618                           
 12619                           ;stkvar	_u @ sp[(-10)+0]
 12620  014488  0EF6               	movlw	-10
 12621  01448A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12622  014490  0EF7               	movlw	-9
 12623  014492  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12624  014498  0EF8               	movlw	-8
 12625  01449A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12626  0144A0  0EF9               	movlw	-7
 12627  0144A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12628                           
 12629                           ;stkvar	_x @ sp[(-10)+-4]
 12630  0144A8  0EF2               	movlw	-14
 12631  0144AA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12632  0144B0  0EF3               	movlw	-13
 12633  0144B2  006F FF8C  F03B    	movff	plusw1,btemp+9
 12634  0144B8  0EF4               	movlw	-12
 12635  0144BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12636  0144C0  0EF5               	movlw	-11
 12637  0144C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 12638                           
 12639                           ;stkvar	_u @ sp[(-10)+0]
 12640  0144C8  0EF6               	movlw	-10
 12641  0144CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12642  0144D0  0EF7               	movlw	-9
 12643  0144D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12644  0144D8  0EF8               	movlw	-8
 12645  0144DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12646  0144E0  0EF9               	movlw	-7
 12647  0144E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12648  0144E8  0E81               	movlw	129
 12649  0144EA  6E3C               	movwf	(btemp+10)^0,c
 12650  0144EC  0EFF               	movlw	255
 12651  0144EE  6E3D               	movwf	(btemp+11)^0,c
 12652                           
 12653                           ;stkvar	_u @ sp[(-10)+0]
 12654  0144F0  0EF6               	movlw	-10
 12655  0144F2  006F FF8C  F036    	movff	plusw1,btemp+4
 12656  0144F8  0EF7               	movlw	-9
 12657  0144FA  006F FF8C  F037    	movff	plusw1,btemp+5
 12658  014500  0EF8               	movlw	-8
 12659  014502  006F FF8C  F038    	movff	plusw1,btemp+6
 12660  014508  0EF9               	movlw	-7
 12661  01450A  006F FF8C  F039    	movff	plusw1,btemp+7
 12662  014510  0E18               	movlw	24
 12663  014512  D005               	goto	u9500
 12664  014514                     u9505:
 12665  014514  90D8               	bcf	status,0,c
 12666  014516  3239               	rrcf	(btemp+7)^0,f,c
 12667  014518  3238               	rrcf	(btemp+6)^0,f,c
 12668  01451A  3237               	rrcf	(btemp+5)^0,f,c
 12669  01451C  3236               	rrcf	(btemp+4)^0,f,c
 12670  01451E                     u9500:
 12671  01451E  2EE8               	decfsz	wreg,f,c
 12672  014520  D7F9               	goto	u9505
 12673  014522  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12674  014528  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12675  01452E  0EFF               	movlw	255
 12676  014530  163A               	andwf	(btemp+8)^0,f,c
 12677  014532  0E00               	movlw	0
 12678  014534  163B               	andwf	(btemp+9)^0,f,c
 12679  014536  503C               	movf	(btemp+10)^0,w,c
 12680  014538  263A               	addwf	(btemp+8)^0,f,c
 12681  01453A  503D               	movf	(btemp+11)^0,w,c
 12682  01453C  223B               	addwfc	(btemp+9)^0,f,c
 12683                           
 12684                           ;stkvar	_e @ sp[(-10)+8]
 12685  01453E  0EFE               	movlw	-2
 12686  014540  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12687  014546  0EFF               	movlw	-1
 12688  014548  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12689                           
 12690                           ;stkvar	_e @ sp[(-10)+8]
 12691  01454E  0EFF               	movlw	-1
 12692  014550  BEE3               	btfsc	plusw1,7,c
 12693  014552  D019               	goto	l9589
 12694  014554  0EFF               	movlw	-1
 12695  014556  50E3               	movf	plusw1,w,c
 12696  014558  E108               	bnz	u9510
 12697  01455A  0EFE               	movlw	-2
 12698  01455C  006F FF8C  F032    	movff	plusw1,btemp
 12699  014562  0E17               	movlw	23
 12700  014564  5E32               	subwf	btemp^0,f,c
 12701  014566  A0D8               	btfss	status,0,c
 12702  014568  D00E               	goto	l9589
 12703  01456A                     u9510:
 12704                           
 12705                           ;stkvar	_x @ sp[(-10)+-4]
 12706  01456A  0EF2               	movlw	-14
 12707  01456C  006F FF8C  F032    	movff	plusw1,btemp
 12708  014572  0EF3               	movlw	-13
 12709  014574  006F FF8C  F033    	movff	plusw1,btemp+1
 12710  01457A  0EF4               	movlw	-12
 12711  01457C  006F FF8C  F034    	movff	plusw1,btemp+2
 12712  014582  0EF5               	movlw	-11
 12713  014584  D11F               	goto	L12
 12714  014586                     l9589:
 12715                           
 12716                           ;stkvar	_e @ sp[(-10)+8]
 12717  014586  0EFF               	movlw	-1
 12718  014588  BEE3               	btfsc	plusw1,7,c
 12719  01458A  D0B4               	goto	l9605
 12720                           
 12721                           ;stkvar	_e @ sp[(-10)+8]
 12722  01458C  0EFE               	movlw	-2
 12723  01458E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12724  014594  0EFF               	movlw	255
 12725  014596  6E36               	movwf	(btemp+4)^0,c
 12726  014598  0EFF               	movlw	255
 12727  01459A  6E37               	movwf	(btemp+5)^0,c
 12728  01459C  0E7F               	movlw	127
 12729  01459E  6E38               	movwf	(btemp+6)^0,c
 12730  0145A0  0E00               	movlw	0
 12731  0145A2  6E39               	movwf	(btemp+7)^0,c
 12732  0145A4                     u9535:
 12733  0145A4  663D               	tstfsz	(btemp+11)^0,c
 12734  0145A6  D001               	goto	u9536
 12735  0145A8  D007               	goto	u9537
 12736  0145AA                     u9536:
 12737  0145AA  3439               	rlcf	(btemp+7)^0,w,c
 12738  0145AC  3239               	rrcf	(btemp+7)^0,f,c
 12739  0145AE  3238               	rrcf	(btemp+6)^0,f,c
 12740  0145B0  3237               	rrcf	(btemp+5)^0,f,c
 12741  0145B2  3236               	rrcf	(btemp+4)^0,f,c
 12742  0145B4  2E3D               	decfsz	(btemp+11)^0,f,c
 12743  0145B6  D7F6               	goto	u9535
 12744  0145B8                     u9537:
 12745                           
 12746                           ;stkvar	_m @ sp[(-10)+4]
 12747  0145B8  0EFA               	movlw	-6
 12748  0145BA  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12749  0145C0  0EFB               	movlw	-5
 12750  0145C2  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12751  0145C8  0EFC               	movlw	-4
 12752  0145CA  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12753  0145D0  0EFD               	movlw	-3
 12754  0145D2  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12755                           
 12756                           ;stkvar	_m @ sp[(-10)+4]
 12757                           ;stkvar	_u @ sp[(-10)+0]
 12758  0145D8  0EF6               	movlw	-10
 12759  0145DA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12760  0145E0  0EF7               	movlw	-9
 12761  0145E2  006F FF8C  F03B    	movff	plusw1,btemp+9
 12762  0145E8  0EF8               	movlw	-8
 12763  0145EA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12764  0145F0  0EF9               	movlw	-7
 12765  0145F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 12766  0145F8  0EFA               	movlw	-6
 12767  0145FA  50E3               	movf	plusw1,w,c
 12768  0145FC  163A               	andwf	(btemp+8)^0,f,c
 12769  0145FE  0EFB               	movlw	-5
 12770  014600  50E3               	movf	plusw1,w,c
 12771  014602  163B               	andwf	(btemp+9)^0,f,c
 12772  014604  0EFC               	movlw	-4
 12773  014606  50E3               	movf	plusw1,w,c
 12774  014608  163C               	andwf	(btemp+10)^0,f,c
 12775  01460A  0EFD               	movlw	-3
 12776  01460C  50E3               	movf	plusw1,w,c
 12777  01460E  163D               	andwf	(btemp+11)^0,f,c
 12778  014610  503A               	movf	(btemp+8)^0,w,c
 12779  014612  103B               	iorwf	(btemp+9)^0,w,c
 12780  014614  103C               	iorwf	(btemp+10)^0,w,c
 12781  014616  103D               	iorwf	(btemp+11)^0,w,c
 12782  014618  B4D8               	btfsc	status,2,c
 12783  01461A  D7A7               	goto	u9510
 12784                           
 12785                           ;stkvar	_u @ sp[(-10)+0]
 12786  01461C  0EF6               	movlw	-10
 12787  01461E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12788  014624  0EF7               	movlw	-9
 12789  014626  006F FF8C  F03B    	movff	plusw1,btemp+9
 12790  01462C  0EF8               	movlw	-8
 12791  01462E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12792  014634  0EF9               	movlw	-7
 12793  014636  006F FF8C  F03D    	movff	plusw1,btemp+11
 12794  01463C  0E20               	movlw	32
 12795  01463E  D005               	goto	u9550
 12796  014640                     u9555:
 12797  014640  90D8               	bcf	status,0,c
 12798  014642  323D               	rrcf	(btemp+11)^0,f,c
 12799  014644  323C               	rrcf	(btemp+10)^0,f,c
 12800  014646  323B               	rrcf	(btemp+9)^0,f,c
 12801  014648  323A               	rrcf	(btemp+8)^0,f,c
 12802  01464A                     u9550:
 12803  01464A  2EE8               	decfsz	wreg,f,c
 12804  01464C  D7F9               	goto	u9555
 12805  01464E  503A               	movf	(btemp+8)^0,w,c
 12806  014650  B4D8               	btfsc	status,2,c
 12807  014652  D028               	goto	l9603
 12808                           
 12809                           ;stkvar	_m @ sp[(-10)+4]
 12810                           ;stkvar	_u @ sp[(-10)+0]
 12811  014654  0EF6               	movlw	-10
 12812  014656  50E3               	movf	plusw1,w,c
 12813  014658  6E32               	movwf	btemp^0,c
 12814  01465A  0EFA               	movlw	-6
 12815  01465C  50E3               	movf	plusw1,w,c
 12816  01465E  2632               	addwf	btemp^0,f,c
 12817  014660  0EF6               	movlw	-10
 12818  014662  0060  F0CB  FFE3   	movff	btemp,plusw1
 12819  014668  0EF7               	movlw	-9
 12820  01466A  50E3               	movf	plusw1,w,c
 12821  01466C  6E32               	movwf	btemp^0,c
 12822  01466E  0EFB               	movlw	-5
 12823  014670  50E3               	movf	plusw1,w,c
 12824  014672  2232               	addwfc	btemp^0,f,c
 12825  014674  0EF7               	movlw	-9
 12826  014676  0060  F0CB  FFE3   	movff	btemp,plusw1
 12827  01467C  0EF8               	movlw	-8
 12828  01467E  50E3               	movf	plusw1,w,c
 12829  014680  6E32               	movwf	btemp^0,c
 12830  014682  0EFC               	movlw	-4
 12831  014684  50E3               	movf	plusw1,w,c
 12832  014686  2232               	addwfc	btemp^0,f,c
 12833  014688  0EF8               	movlw	-8
 12834  01468A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12835  014690  0EF9               	movlw	-7
 12836  014692  50E3               	movf	plusw1,w,c
 12837  014694  6E32               	movwf	btemp^0,c
 12838  014696  0EFD               	movlw	-3
 12839  014698  50E3               	movf	plusw1,w,c
 12840  01469A  2232               	addwfc	btemp^0,f,c
 12841  01469C  0EF9               	movlw	-7
 12842  01469E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12843  0146A4                     l9603:
 12844                           
 12845                           ;stkvar	_m @ sp[(-10)+4]
 12846  0146A4  0EFA               	movlw	-6
 12847  0146A6  006F FF8C  F03A    	movff	plusw1,btemp+8
 12848  0146AC  0EFB               	movlw	-5
 12849  0146AE  006F FF8C  F03B    	movff	plusw1,btemp+9
 12850  0146B4  0EFC               	movlw	-4
 12851  0146B6  006F FF8C  F03C    	movff	plusw1,btemp+10
 12852  0146BC  0EFD               	movlw	-3
 12853  0146BE  006F FF8C  F03D    	movff	plusw1,btemp+11
 12854  0146C4  1C3A               	comf	(btemp+8)^0,w,c
 12855  0146C6  6E36               	movwf	(btemp+4)^0,c
 12856  0146C8  1C3B               	comf	(btemp+9)^0,w,c
 12857  0146CA  6E37               	movwf	(btemp+5)^0,c
 12858  0146CC  1C3C               	comf	(btemp+10)^0,w,c
 12859  0146CE  6E38               	movwf	(btemp+6)^0,c
 12860  0146D0  1C3D               	comf	(btemp+11)^0,w,c
 12861  0146D2  6E39               	movwf	(btemp+7)^0,c
 12862                           
 12863                           ;stkvar	_u @ sp[(-10)+0]
 12864  0146D4  50E1               	movf	fsr1l,w,c
 12865  0146D6  0FF6               	addlw	-10
 12866  0146D8  6ED9               	movwf	fsr2l,c
 12867  0146DA  50E2               	movf	fsr1h,w,c
 12868  0146DC  6EDA               	movwf	fsr2h,c
 12869  0146DE  0EFF               	movlw	255
 12870  0146E0  22DA               	addwfc	fsr2h,f,c
 12871  0146E2  5036               	movf	(btemp+4)^0,w,c
 12872  0146E4  16DE               	andwf	postinc2,f,c
 12873  0146E6  5037               	movf	(btemp+5)^0,w,c
 12874  0146E8  16DE               	andwf	postinc2,f,c
 12875  0146EA  5038               	movf	(btemp+6)^0,w,c
 12876  0146EC  16DE               	andwf	postinc2,f,c
 12877  0146EE  5039               	movf	(btemp+7)^0,w,c
 12878  0146F0  16DE               	andwf	postinc2,f,c
 12879  0146F2  D05B               	goto	l9613
 12880  0146F4                     l9605:
 12881                           
 12882                           ;stkvar	_u @ sp[(-10)+0]
 12883  0146F4  0EF6               	movlw	-10
 12884  0146F6  006F FF8C  F03A    	movff	plusw1,btemp+8
 12885  0146FC  0EF7               	movlw	-9
 12886  0146FE  006F FF8C  F03B    	movff	plusw1,btemp+9
 12887  014704  0EF8               	movlw	-8
 12888  014706  006F FF8C  F03C    	movff	plusw1,btemp+10
 12889  01470C  0EF9               	movlw	-7
 12890  01470E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12891  014714  0E20               	movlw	32
 12892  014716  D005               	goto	u9570
 12893  014718                     u9575:
 12894  014718  90D8               	bcf	status,0,c
 12895  01471A  323D               	rrcf	(btemp+11)^0,f,c
 12896  01471C  323C               	rrcf	(btemp+10)^0,f,c
 12897  01471E  323B               	rrcf	(btemp+9)^0,f,c
 12898  014720  323A               	rrcf	(btemp+8)^0,f,c
 12899  014722                     u9570:
 12900  014722  2EE8               	decfsz	wreg,f,c
 12901  014724  D7F9               	goto	u9575
 12902  014726  663A               	tstfsz	(btemp+8)^0,c
 12903  014728  D009               	goto	l9609
 12904                           
 12905                           ;stkvar	_u @ sp[(-10)+0]
 12906  01472A  0EF6               	movlw	-10
 12907  01472C  6AE3               	clrf	plusw1,c
 12908  01472E  0EF7               	movlw	-9
 12909  014730  6AE3               	clrf	plusw1,c
 12910  014732  0EF8               	movlw	-8
 12911  014734  6AE3               	clrf	plusw1,c
 12912  014736  0EF9               	movlw	-7
 12913  014738  6AE3               	clrf	plusw1,c
 12914  01473A  D037               	goto	l9613
 12915  01473C                     l9609:
 12916                           
 12917                           ;stkvar	_u @ sp[(-10)+0]
 12918  01473C  0EF6               	movlw	-10
 12919  01473E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12920  014744  0EF7               	movlw	-9
 12921  014746  006F FF8C  F03B    	movff	plusw1,btemp+9
 12922  01474C  0EF8               	movlw	-8
 12923  01474E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12924  014754  0EF9               	movlw	-7
 12925  014756  006F FF8C  F03D    	movff	plusw1,btemp+11
 12926  01475C  90D8               	bcf	status,0,c
 12927  01475E  343A               	rlcf	(btemp+8)^0,w,c
 12928  014760  6E36               	movwf	(btemp+4)^0,c
 12929  014762  343B               	rlcf	(btemp+9)^0,w,c
 12930  014764  6E37               	movwf	(btemp+5)^0,c
 12931  014766  343C               	rlcf	(btemp+10)^0,w,c
 12932  014768  6E38               	movwf	(btemp+6)^0,c
 12933  01476A  343D               	rlcf	(btemp+11)^0,w,c
 12934  01476C  6E39               	movwf	(btemp+7)^0,c
 12935  01476E  5036               	movf	(btemp+4)^0,w,c
 12936  014770  1037               	iorwf	(btemp+5)^0,w,c
 12937  014772  1038               	iorwf	(btemp+6)^0,w,c
 12938  014774  1039               	iorwf	(btemp+7)^0,w,c
 12939  014776  B4D8               	btfsc	status,2,c
 12940  014778  D018               	goto	l9613
 12941  01477A  0E00               	movlw	0
 12942  01477C  6E3A               	movwf	(btemp+8)^0,c
 12943  01477E  0E00               	movlw	0
 12944  014780  6E3B               	movwf	(btemp+9)^0,c
 12945  014782  0E80               	movlw	128
 12946  014784  6E3C               	movwf	(btemp+10)^0,c
 12947  014786  0EBF               	movlw	191
 12948  014788  6E3D               	movwf	(btemp+11)^0,c
 12949                           
 12950                           ;stkvar	_u @ sp[(-10)+0]
 12951  01478A  0EF6               	movlw	-10
 12952  01478C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12953  014792  0EF7               	movlw	-9
 12954  014794  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12955  01479A  0EF8               	movlw	-8
 12956  01479C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12957  0147A2  0EF9               	movlw	-7
 12958  0147A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12959  0147AA                     l9613:
 12960                           
 12961                           ;stkvar	_u @ sp[(-10)+0]
 12962  0147AA  0EF6               	movlw	-10
 12963  0147AC  006F FF8C  F032    	movff	plusw1,btemp
 12964  0147B2  0EF7               	movlw	-9
 12965  0147B4  006F FF8C  F033    	movff	plusw1,btemp+1
 12966  0147BA  0EF8               	movlw	-8
 12967  0147BC  006F FF8C  F034    	movff	plusw1,btemp+2
 12968  0147C2  0EF9               	movlw	-7
 12969  0147C4                     L12:
 12970  0147C4  006F FF8C  F035    	movff	plusw1,btemp+3
 12971                           
 12972                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12973  0147CA  0EF2               	movlw	242
 12974  0147CC  26E1               	addwf	fsr1l,f,c
 12975  0147CE  0EFF               	movlw	255
 12976  0147D0  22E2               	addwfc	fsr1h,f,c
 12977  0147D2  0012               	return		;funcret
 12978  0147D4                     __end_of_floorf:
 12979                           	opt callstack 0
 12980                           
 12981 ;; *************** function ___fpclassifyf *****************
 12982 ;; Defined at:
 12983 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;  x               4  [STACK] float 
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;  u               4  [STACK] struct .
 12988 ;;  e               2  [STACK] int 
 12989 ;; Return value:  Size  Location     Type
 12990 ;;                  2  [STACK] int 
 12991 ;; Registers used:
 12992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12993 ;; Tracked objects:
 12994 ;;		On entry : 0/5
 12995 ;;		On exit  : 0/0
 12996 ;;		Unchanged: 0/0
 12997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13002 ;;Total ram usage:        0 bytes
 13003 ;; Hardware stack levels used:    1
 13004 ;; Hardware stack levels required when called:    6
 13005 ;; This function calls:
 13006 ;;		Nothing
 13007 ;; This function is called by:
 13008 ;;		_efgtoa
 13009 ;; This function uses a reentrant model
 13010 ;;
 13011                           
 13012                           	psect	text49
 13013  015C66                     __ptext49:
 13014                           	opt callstack 0
 13015  015C66                     ___fpclassifyf:
 13016                           	opt callstack 0
 13017                           
 13018                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13019  015C66  0E06               	movlw	6
 13020  015C68  26E1               	addwf	fsr1l,f,c
 13021  015C6A  0E00               	movlw	0
 13022  015C6C  22E2               	addwfc	fsr1h,f,c
 13023                           
 13024                           ;incstack = 0
 13025  015C6E  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13026  015C74  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13027  015C7A  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13028  015C80  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13029                           
 13030                           ;stkvar	_u @ sp[(-6)+0]
 13031  015C86  0EFA               	movlw	-6
 13032  015C88  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13033  015C8E  0EFB               	movlw	-5
 13034  015C90  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13035  015C96  0EFC               	movlw	-4
 13036  015C98  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13037  015C9E  0EFD               	movlw	-3
 13038  015CA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13039                           
 13040                           ;stkvar	_x @ sp[(-6)+-4]
 13041  015CA6  0EF6               	movlw	-10
 13042  015CA8  006F FF8C  F03A    	movff	plusw1,btemp+8
 13043  015CAE  0EF7               	movlw	-9
 13044  015CB0  006F FF8C  F03B    	movff	plusw1,btemp+9
 13045  015CB6  0EF8               	movlw	-8
 13046  015CB8  006F FF8C  F03C    	movff	plusw1,btemp+10
 13047  015CBE  0EF9               	movlw	-7
 13048  015CC0  006F FF8C  F03D    	movff	plusw1,btemp+11
 13049                           
 13050                           ;stkvar	_u @ sp[(-6)+0]
 13051  015CC6  0EFA               	movlw	-6
 13052  015CC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13053  015CCE  0EFB               	movlw	-5
 13054  015CD0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13055  015CD6  0EFC               	movlw	-4
 13056  015CD8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13057  015CDE  0EFD               	movlw	-3
 13058  015CE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13059                           
 13060                           ;stkvar	_u @ sp[(-6)+0]
 13061  015CE6  0EFA               	movlw	-6
 13062  015CE8  006F FF8C  F03A    	movff	plusw1,btemp+8
 13063  015CEE  0EFB               	movlw	-5
 13064  015CF0  006F FF8C  F03B    	movff	plusw1,btemp+9
 13065  015CF6  0EFC               	movlw	-4
 13066  015CF8  006F FF8C  F03C    	movff	plusw1,btemp+10
 13067  015CFE  0EFD               	movlw	-3
 13068  015D00  006F FF8C  F03D    	movff	plusw1,btemp+11
 13069  015D06  0E18               	movlw	24
 13070  015D08  D005               	goto	u9380
 13071  015D0A                     u9385:
 13072  015D0A  90D8               	bcf	status,0,c
 13073  015D0C  323D               	rrcf	(btemp+11)^0,f,c
 13074  015D0E  323C               	rrcf	(btemp+10)^0,f,c
 13075  015D10  323B               	rrcf	(btemp+9)^0,f,c
 13076  015D12  323A               	rrcf	(btemp+8)^0,f,c
 13077  015D14                     u9380:
 13078  015D14  2EE8               	decfsz	wreg,f,c
 13079  015D16  D7F9               	goto	u9385
 13080  015D18  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13081  015D1E  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13082  015D24  0EFF               	movlw	255
 13083  015D26  1638               	andwf	(btemp+6)^0,f,c
 13084  015D28  0E00               	movlw	0
 13085  015D2A  1639               	andwf	(btemp+7)^0,f,c
 13086                           
 13087                           ;stkvar	_e @ sp[(-6)+4]
 13088  015D2C  0EFE               	movlw	-2
 13089  015D2E  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13090  015D34  0EFF               	movlw	-1
 13091  015D36  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13092                           
 13093                           ;stkvar	_e @ sp[(-6)+4]
 13094  015D3C  0EFE               	movlw	-2
 13095  015D3E  006F FF8C  F032    	movff	plusw1,btemp
 13096  015D44  0EFF               	movlw	-1
 13097  015D46  50E3               	movf	plusw1,w,c
 13098  015D48  1032               	iorwf	btemp^0,w,c
 13099  015D4A  A4D8               	btfss	status,2,c
 13100  015D4C  D023               	goto	l9551
 13101                           
 13102                           ;stkvar	_u @ sp[(-6)+0]
 13103  015D4E  0EFA               	movlw	-6
 13104  015D50  006F FF8C  F03A    	movff	plusw1,btemp+8
 13105  015D56  0EFB               	movlw	-5
 13106  015D58  006F FF8C  F03B    	movff	plusw1,btemp+9
 13107  015D5E  0EFC               	movlw	-4
 13108  015D60  006F FF8C  F03C    	movff	plusw1,btemp+10
 13109  015D66  0EFD               	movlw	-3
 13110  015D68  006F FF8C  F03D    	movff	plusw1,btemp+11
 13111  015D6E  90D8               	bcf	status,0,c
 13112  015D70  343A               	rlcf	(btemp+8)^0,w,c
 13113  015D72  6E36               	movwf	(btemp+4)^0,c
 13114  015D74  343B               	rlcf	(btemp+9)^0,w,c
 13115  015D76  6E37               	movwf	(btemp+5)^0,c
 13116  015D78  343C               	rlcf	(btemp+10)^0,w,c
 13117  015D7A  6E38               	movwf	(btemp+6)^0,c
 13118  015D7C  343D               	rlcf	(btemp+11)^0,w,c
 13119  015D7E  6E39               	movwf	(btemp+7)^0,c
 13120  015D80  5036               	movf	(btemp+4)^0,w,c
 13121  015D82  1037               	iorwf	(btemp+5)^0,w,c
 13122  015D84  1038               	iorwf	(btemp+6)^0,w,c
 13123  015D86  1039               	iorwf	(btemp+7)^0,w,c
 13124  015D88  A4D8               	btfss	status,2,c
 13125  015D8A  D002               	goto	l9547
 13126  015D8C  0E02               	movlw	2
 13127  015D8E  D02E               	goto	L13
 13128  015D90                     l9547:
 13129  015D90  0E03               	movlw	3
 13130  015D92  D02C               	goto	L13
 13131  015D94                     l9551:
 13132                           
 13133                           ;stkvar	_e @ sp[(-6)+4]
 13134  015D94  0EFE               	movlw	-2
 13135  015D96  28E3               	incf	plusw1,w,c
 13136  015D98  E128               	bnz	l9557
 13137  015D9A  0EFF               	movlw	-1
 13138  015D9C  50E3               	movf	plusw1,w,c
 13139  015D9E  A4D8               	btfss	status,2,c
 13140  015DA0  D024               	goto	l9557
 13141                           
 13142                           ;stkvar	_u @ sp[(-6)+0]
 13143  015DA2  0EFA               	movlw	-6
 13144  015DA4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13145  015DAA  0EFB               	movlw	-5
 13146  015DAC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13147  015DB2  0EFC               	movlw	-4
 13148  015DB4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13149  015DBA  0EFD               	movlw	-3
 13150  015DBC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13151  015DC2  0E09               	movlw	9
 13152  015DC4                     u9425:
 13153  015DC4  90D8               	bcf	status,0,c
 13154  015DC6  363A               	rlcf	(btemp+8)^0,f,c
 13155  015DC8  363B               	rlcf	(btemp+9)^0,f,c
 13156  015DCA  363C               	rlcf	(btemp+10)^0,f,c
 13157  015DCC  363D               	rlcf	(btemp+11)^0,f,c
 13158  015DCE  2EE8               	decfsz	wreg,f,c
 13159  015DD0  D7F9               	goto	u9425
 13160  015DD2  503A               	movf	(btemp+8)^0,w,c
 13161  015DD4  103B               	iorwf	(btemp+9)^0,w,c
 13162  015DD6  103C               	iorwf	(btemp+10)^0,w,c
 13163  015DD8  103D               	iorwf	(btemp+11)^0,w,c
 13164  015DDA  A4D8               	btfss	status,2,c
 13165  015DDC  D002               	goto	u9430
 13166  015DDE  0E01               	movlw	1
 13167  015DE0  D001               	goto	u9440
 13168  015DE2                     u9430:
 13169  015DE2  0E00               	movlw	0
 13170  015DE4                     u9440:
 13171  015DE4  6E32               	movwf	btemp^0,c
 13172  015DE6  6A33               	clrf	(btemp+1)^0,c
 13173  015DE8  D004               	goto	l2723
 13174  015DEA                     l9557:
 13175  015DEA  0E04               	movlw	4
 13176  015DEC                     L13:
 13177  015DEC  6E32               	movwf	btemp^0,c
 13178  015DEE  0E00               	movlw	0
 13179  015DF0  6E33               	movwf	(btemp+1)^0,c
 13180  015DF2                     l2723:
 13181                           
 13182                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13183  015DF2  0EF6               	movlw	246
 13184  015DF4  26E1               	addwf	fsr1l,f,c
 13185  015DF6  0EFF               	movlw	255
 13186  015DF8  22E2               	addwfc	fsr1h,f,c
 13187  015DFA  0012               	return		;funcret
 13188  015DFC                     __end_of___fpclassifyf:
 13189                           	opt callstack 0
 13190                           
 13191 ;; *************** function ___fltol *****************
 13192 ;; Defined at:
 13193 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;  f1              4  [STACK] int 
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;  exp1            1  [STACK] unsigned char 
 13198 ;;  sign1           1  [STACK] unsigned char 
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  4  [STACK] long 
 13201 ;; Registers used:
 13202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13203 ;; Tracked objects:
 13204 ;;		On entry : 0/5
 13205 ;;		On exit  : 0/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13212 ;;Total ram usage:        0 bytes
 13213 ;; Hardware stack levels used:    1
 13214 ;; Hardware stack levels required when called:    6
 13215 ;; This function calls:
 13216 ;;		Nothing
 13217 ;; This function is called by:
 13218 ;;		_efgtoa
 13219 ;; This function uses a reentrant model
 13220 ;;
 13221                           
 13222                           	psect	text50
 13223  015DFC                     __ptext50:
 13224                           	opt callstack 0
 13225  015DFC                     ___fltol:
 13226                           	opt callstack 0
 13227                           
 13228                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13229  015DFC  52E6               	movf	postinc1,f,c
 13230  015DFE  52E6               	movf	postinc1,f,c
 13231                           
 13232                           ;stkvar	_f1 @ sp[(-2)+-4]
 13233                           
 13234                           ;incstack = 0
 13235  015E00  0EFA               	movlw	-6
 13236  015E02  006F FF8C  F03A    	movff	plusw1,btemp+8
 13237  015E08  0EFB               	movlw	-5
 13238  015E0A  006F FF8C  F03B    	movff	plusw1,btemp+9
 13239  015E10  0EFC               	movlw	-4
 13240  015E12  006F FF8C  F03C    	movff	plusw1,btemp+10
 13241  015E18  0EFD               	movlw	-3
 13242  015E1A  006F FF8C  F03D    	movff	plusw1,btemp+11
 13243  015E20  0E18               	movlw	24
 13244  015E22  D005               	goto	u10590
 13245  015E24                     u10595:
 13246  015E24  90D8               	bcf	status,0,c
 13247  015E26  323D               	rrcf	(btemp+11)^0,f,c
 13248  015E28  323C               	rrcf	(btemp+10)^0,f,c
 13249  015E2A  323B               	rrcf	(btemp+9)^0,f,c
 13250  015E2C  323A               	rrcf	(btemp+8)^0,f,c
 13251  015E2E                     u10590:
 13252  015E2E  2EE8               	decfsz	wreg,f,c
 13253  015E30  D7F9               	goto	u10595
 13254                           
 13255                           ;stkvar	_exp1 @ sp[(-2)+0]
 13256  015E32  0EFE               	movlw	-2
 13257  015E34  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13258  015E3A  0EFE               	movlw	-2
 13259  015E3C  50E3               	movf	plusw1,w,c
 13260  015E3E  A4D8               	btfss	status,2,c
 13261  015E40  D006               	goto	l10177
 13262  015E42                     u10600:
 13263  015E42  0E00               	movlw	0
 13264  015E44  6E32               	movwf	btemp^0,c
 13265  015E46  6A33               	clrf	(btemp+1)^0,c
 13266  015E48  6A34               	clrf	(btemp+2)^0,c
 13267  015E4A  6A35               	clrf	(btemp+3)^0,c
 13268  015E4C  D08B               	goto	l2339
 13269  015E4E                     l10177:
 13270                           
 13271                           ;stkvar	_f1 @ sp[(-2)+-4]
 13272  015E4E  0EFA               	movlw	-6
 13273  015E50  006F FF8C  F03A    	movff	plusw1,btemp+8
 13274  015E56  0EFB               	movlw	-5
 13275  015E58  006F FF8C  F03B    	movff	plusw1,btemp+9
 13276  015E5E  0EFC               	movlw	-4
 13277  015E60  006F FF8C  F03C    	movff	plusw1,btemp+10
 13278  015E66  0EFD               	movlw	-3
 13279  015E68  006F FF8C  F03D    	movff	plusw1,btemp+11
 13280  015E6E  0E20               	movlw	32
 13281  015E70  D005               	goto	u10610
 13282  015E72                     u10615:
 13283  015E72  90D8               	bcf	status,0,c
 13284  015E74  323D               	rrcf	(btemp+11)^0,f,c
 13285  015E76  323C               	rrcf	(btemp+10)^0,f,c
 13286  015E78  323B               	rrcf	(btemp+9)^0,f,c
 13287  015E7A  323A               	rrcf	(btemp+8)^0,f,c
 13288  015E7C                     u10610:
 13289  015E7C  2EE8               	decfsz	wreg,f,c
 13290  015E7E  D7F9               	goto	u10615
 13291                           
 13292                           ;stkvar	_sign1 @ sp[(-2)+1]
 13293  015E80  0EFF               	movlw	-1
 13294  015E82  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13295                           
 13296                           ;stkvar	_f1 @ sp[(-2)+-4]
 13297  015E88  0EFC               	movlw	-4
 13298  015E8A  8EE3               	bsf	plusw1,7,c
 13299                           
 13300                           ;stkvar	_f1 @ sp[(-2)+-4]
 13301  015E8C  50E1               	movf	fsr1l,w,c
 13302  015E8E  0FFA               	addlw	-6
 13303  015E90  6ED9               	movwf	fsr2l,c
 13304  015E92  50E2               	movf	fsr1h,w,c
 13305  015E94  6EDA               	movwf	fsr2h,c
 13306  015E96  0EFF               	movlw	255
 13307  015E98  22DA               	addwfc	fsr2h,f,c
 13308  015E9A  0EFF               	movlw	255
 13309  015E9C  16DE               	andwf	postinc2,f,c
 13310  015E9E  0EFF               	movlw	255
 13311  015EA0  16DE               	andwf	postinc2,f,c
 13312  015EA2  0EFF               	movlw	255
 13313  015EA4  16DE               	andwf	postinc2,f,c
 13314  015EA6  0E00               	movlw	0
 13315  015EA8  16DE               	andwf	postinc2,f,c
 13316                           
 13317                           ;stkvar	_exp1 @ sp[(-2)+0]
 13318  015EAA  0EFE               	movlw	-2
 13319  015EAC  006F FF8C  F032    	movff	plusw1,btemp
 13320  015EB2  0E96               	movlw	150
 13321  015EB4  5E32               	subwf	btemp^0,f,c
 13322  015EB6  0EFE               	movlw	-2
 13323  015EB8  0060  F0CB  FFE3   	movff	btemp,plusw1
 13324                           
 13325                           ;stkvar	_exp1 @ sp[(-2)+0]
 13326  015EBE  0EFE               	movlw	-2
 13327  015EC0  AEE3               	btfss	plusw1,7,c
 13328  015EC2  D014               	goto	l10195
 13329                           
 13330                           ;stkvar	_exp1 @ sp[(-2)+0]
 13331  015EC4  0EFE               	movlw	-2
 13332  015EC6  50E3               	movf	plusw1,w,c
 13333  015EC8  0A80               	xorlw	128
 13334  015ECA  0F97               	addlw	151
 13335  015ECC  A0D8               	btfss	status,0,c
 13336  015ECE  D7B9               	goto	u10600
 13337  015ED0                     l10193:
 13338                           
 13339                           ;stkvar	_f1 @ sp[(-2)+-4]
 13340  015ED0  90D8               	bcf	status,0,c
 13341  015ED2  0EFD               	movlw	-3
 13342  015ED4  32E3               	rrcf	plusw1,f,c
 13343  015ED6  0EFC               	movlw	-4
 13344  015ED8  32E3               	rrcf	plusw1,f,c
 13345  015EDA  0EFB               	movlw	-5
 13346  015EDC  32E3               	rrcf	plusw1,f,c
 13347  015EDE  0EFA               	movlw	-6
 13348  015EE0  32E3               	rrcf	plusw1,f,c
 13349                           
 13350                           ;stkvar	_exp1 @ sp[(-2)+0]
 13351  015EE2  0EFE               	movlw	-2
 13352  015EE4  2AE3               	incf	plusw1,f,c
 13353  015EE6  B4D8               	btfsc	status,2,c
 13354  015EE8  D018               	goto	u10660
 13355  015EEA  D7F2               	goto	l10193
 13356  015EEC                     l10195:
 13357                           
 13358                           ;stkvar	_exp1 @ sp[(-2)+0]
 13359  015EEC  0EFE               	movlw	-2
 13360  015EEE  006F FF8C  F032    	movff	plusw1,btemp
 13361  015EF4  0E1F               	movlw	31
 13362  015EF6  6432               	cpfsgt	btemp^0,c
 13363  015EF8  D00C               	goto	l10203
 13364  015EFA  D7A3               	goto	u10600
 13365  015EFC                     l10201:
 13366                           
 13367                           ;stkvar	_f1 @ sp[(-2)+-4]
 13368  015EFC  90D8               	bcf	status,0,c
 13369  015EFE  0EFA               	movlw	-6
 13370  015F00  36E3               	rlcf	plusw1,f,c
 13371  015F02  0EFB               	movlw	-5
 13372  015F04  36E3               	rlcf	plusw1,f,c
 13373  015F06  0EFC               	movlw	-4
 13374  015F08  36E3               	rlcf	plusw1,f,c
 13375  015F0A  0EFD               	movlw	-3
 13376  015F0C  36E3               	rlcf	plusw1,f,c
 13377                           
 13378                           ;stkvar	_exp1 @ sp[(-2)+0]
 13379  015F0E  0EFE               	movlw	-2
 13380  015F10  06E3               	decf	plusw1,f,c
 13381  015F12                     l10203:
 13382                           
 13383                           ;stkvar	_exp1 @ sp[(-2)+0]
 13384  015F12  0EFE               	movlw	-2
 13385  015F14  50E3               	movf	plusw1,w,c
 13386  015F16  A4D8               	btfss	status,2,c
 13387  015F18  D7F1               	goto	l10201
 13388  015F1A                     u10660:
 13389                           
 13390                           ;stkvar	_sign1 @ sp[(-2)+1]
 13391  015F1A  0EFF               	movlw	-1
 13392  015F1C  50E3               	movf	plusw1,w,c
 13393  015F1E  B4D8               	btfsc	status,2,c
 13394  015F20  D011               	goto	u10680
 13395                           
 13396                           ;stkvar	_f1 @ sp[(-2)+-4]
 13397                           ;stkvar	_f1 @ sp[(-2)+-4]
 13398  015F22  0EFA               	movlw	-6
 13399  015F24  6CE3               	negf	plusw1,c
 13400  015F26  0EFB               	movlw	-5
 13401  015F28  1EE3               	comf	plusw1,f,c
 13402  015F2A  0EFC               	movlw	-4
 13403  015F2C  1EE3               	comf	plusw1,f,c
 13404  015F2E  0EFD               	movlw	-3
 13405  015F30  1EE3               	comf	plusw1,f,c
 13406  015F32  E308               	bnc	u10680
 13407  015F34  0EFB               	movlw	-5
 13408  015F36  2AE3               	incf	plusw1,f,c
 13409  015F38  E305               	bnc	u10680
 13410  015F3A  0EFC               	movlw	-4
 13411  015F3C  2AE3               	incf	plusw1,f,c
 13412  015F3E  E302               	bnc	u10680
 13413  015F40  0EFD               	movlw	-3
 13414  015F42  2AE3               	incf	plusw1,f,c
 13415  015F44                     u10680:
 13416                           
 13417                           ;stkvar	_f1 @ sp[(-2)+-4]
 13418  015F44  0EFA               	movlw	-6
 13419  015F46  006F FF8C  F032    	movff	plusw1,btemp
 13420  015F4C  0EFB               	movlw	-5
 13421  015F4E  006F FF8C  F033    	movff	plusw1,btemp+1
 13422  015F54  0EFC               	movlw	-4
 13423  015F56  006F FF8C  F034    	movff	plusw1,btemp+2
 13424  015F5C  0EFD               	movlw	-3
 13425  015F5E  006F FF8C  F035    	movff	plusw1,btemp+3
 13426  015F64                     l2339:
 13427                           
 13428                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13429  015F64  0EFA               	movlw	250
 13430  015F66  26E1               	addwf	fsr1l,f,c
 13431  015F68  0EFF               	movlw	255
 13432  015F6A  22E2               	addwfc	fsr1h,f,c
 13433  015F6C  0012               	return		;funcret
 13434  015F6E                     __end_of___fltol:
 13435                           	opt callstack 0
 13436                           
 13437 ;; *************** function ___flsub *****************
 13438 ;; Defined at:
 13439 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;  b               4  [STACK] long 
 13442 ;;  a               4  [STACK] long 
 13443 ;; Auto vars:     Size  Location     Type
 13444 ;;		None
 13445 ;; Return value:  Size  Location     Type
 13446 ;;                  4  [STACK] long 
 13447 ;; Registers used:
 13448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13449 ;; Tracked objects:
 13450 ;;		On entry : 0/39
 13451 ;;		On exit  : 0/0
 13452 ;;		Unchanged: 0/0
 13453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13458 ;;Total ram usage:        0 bytes
 13459 ;; Hardware stack levels used:    1
 13460 ;; Hardware stack levels required when called:    7
 13461 ;; This function calls:
 13462 ;;		___fladd
 13463 ;; This function is called by:
 13464 ;;		_conv_raw_result
 13465 ;;		_lp_filter
 13466 ;;		_efgtoa
 13467 ;; This function uses a reentrant model
 13468 ;;
 13469                           
 13470                           	psect	text51
 13471  017A92                     __ptext51:
 13472                           	opt callstack 0
 13473  017A92                     ___flsub:
 13474                           	opt callstack 16
 13475                           
 13476                           ;stkvar	_a @ sp[(0)+-8]
 13477                           
 13478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13479                           ;incstack = 0
 13480  017A92  0EFB               	movlw	-5
 13481  017A94  7EE3               	btg	plusw1,7,c
 13482                           
 13483                           ;stkvar	_a @ sp[(0)+-8]
 13484  017A96  0EF8               	movlw	-8
 13485  017A98  006F FF8F FFE6     	movff	plusw1,postinc1
 13486  017A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 13487  017AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 13488  017AAA  006F FF8F FFE6     	movff	plusw1,postinc1
 13489                           
 13490                           ;stkvar	_b @ sp[(-4)+-4]
 13491  017AB0  0EF8               	movlw	-8
 13492  017AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 13493  017AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 13494  017ABE  006F FF8F FFE6     	movff	plusw1,postinc1
 13495  017AC4  006F FF8F FFE6     	movff	plusw1,postinc1
 13496  017ACA  ECD6  F092         	call	___fladd	;wreg free
 13497                           
 13498                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13499  017ACE  0EF8               	movlw	248
 13500  017AD0  26E1               	addwf	fsr1l,f,c
 13501  017AD2  0EFF               	movlw	255
 13502  017AD4  22E2               	addwfc	fsr1h,f,c
 13503  017AD6  0012               	return		;funcret
 13504  017AD8                     __end_of___flsub:
 13505                           	opt callstack 0
 13506                           
 13507 ;; *************** function ___fladd *****************
 13508 ;; Defined at:
 13509 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  b               4  [STACK] long 
 13512 ;;  a               4  [STACK] long 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;  grs             1  [STACK] unsigned char 
 13515 ;;  bexp            1  [STACK] unsigned char 
 13516 ;;  aexp            1  [STACK] unsigned char 
 13517 ;;  signs           1  [STACK] unsigned char 
 13518 ;; Return value:  Size  Location     Type
 13519 ;;                  4  [STACK] unsigned char 
 13520 ;; Registers used:
 13521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13522 ;; Tracked objects:
 13523 ;;		On entry : 0/39
 13524 ;;		On exit  : 0/0
 13525 ;;		Unchanged: 0/0
 13526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;Total ram usage:        0 bytes
 13532 ;; Hardware stack levels used:    1
 13533 ;; Hardware stack levels required when called:    6
 13534 ;; This function calls:
 13535 ;;		Nothing
 13536 ;; This function is called by:
 13537 ;;		_lp_filter
 13538 ;;		_efgtoa
 13539 ;;		___flsub
 13540 ;; This function uses a reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text52
 13544  0125AC                     __ptext52:
 13545                           	opt callstack 0
 13546  0125AC                     ___fladd:
 13547                           	opt callstack 0
 13548                           
 13549                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13550  0125AC  52E6               	movf	postinc1,f,c
 13551  0125AE  52E6               	movf	postinc1,f,c
 13552  0125B0  52E6               	movf	postinc1,f,c
 13553  0125B2  52E6               	movf	postinc1,f,c
 13554                           
 13555                           ;stkvar	_b @ sp[(-4)+-4]
 13556                           
 13557                           ;incstack = 0
 13558  0125B4  0EFB               	movlw	251
 13559  0125B6  24E1               	addwf	fsr1l,w,c
 13560  0125B8  6ED9               	movwf	fsr2l,c
 13561  0125BA  0EFF               	movlw	255
 13562  0125BC  20E2               	addwfc	fsr1h,w,c
 13563  0125BE  6EDA               	movwf	fsr2h,c
 13564  0125C0  50DF               	movf	indf2,w,c
 13565  0125C2  6E3D               	movwf	(btemp+11)^0,c
 13566  0125C4  0E80               	movlw	128
 13567  0125C6  163D               	andwf	(btemp+11)^0,f,c
 13568                           
 13569                           ;stkvar	_signs @ sp[(-4)+3]
 13570  0125C8  0EFF               	movlw	-1
 13571  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13572                           
 13573                           ;stkvar	_b @ sp[(-4)+-4]
 13574  0125D0  0EFB               	movlw	251
 13575  0125D2  24E1               	addwf	fsr1l,w,c
 13576  0125D4  6ED9               	movwf	fsr2l,c
 13577  0125D6  0EFF               	movlw	255
 13578  0125D8  20E2               	addwfc	fsr1h,w,c
 13579  0125DA  6EDA               	movwf	fsr2h,c
 13580  0125DC  50DF               	movf	indf2,w,c
 13581  0125DE  6E3D               	movwf	(btemp+11)^0,c
 13582  0125E0  90D8               	bcf	status,0,c
 13583  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 13584  0125E4  6E3C               	movwf	(btemp+10)^0,c
 13585                           
 13586                           ;stkvar	_bexp @ sp[(-4)+1]
 13587  0125E6  0EFD               	movlw	-3
 13588  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13589                           
 13590                           ;stkvar	_b @ sp[(-4)+-4]
 13591  0125EE  0EFA               	movlw	250
 13592  0125F0  24E1               	addwf	fsr1l,w,c
 13593  0125F2  6ED9               	movwf	fsr2l,c
 13594  0125F4  0EFF               	movlw	255
 13595  0125F6  20E2               	addwfc	fsr1h,w,c
 13596  0125F8  6EDA               	movwf	fsr2h,c
 13597  0125FA  AEDF               	btfss	indf2,7,c
 13598  0125FC  D002               	goto	l9291
 13599                           
 13600                           ;stkvar	_bexp @ sp[(-4)+1]
 13601  0125FE  0EFD               	movlw	-3
 13602  012600  80E3               	bsf	plusw1,0,c
 13603  012602                     l9291:
 13604                           
 13605                           ;stkvar	_bexp @ sp[(-4)+1]
 13606  012602  0EFD               	movlw	-3
 13607  012604  50E3               	movf	plusw1,w,c
 13608  012606  B4D8               	btfsc	status,2,c
 13609  012608  D027               	goto	l9301
 13610                           
 13611                           ;stkvar	_bexp @ sp[(-4)+1]
 13612  01260A  0EFD               	movlw	-3
 13613  01260C  28E3               	incf	plusw1,w,c
 13614  01260E  A4D8               	btfss	status,2,c
 13615  012610  D018               	goto	l9297
 13616  012612  0E00               	movlw	0
 13617  012614  6E3A               	movwf	(btemp+8)^0,c
 13618  012616  0E00               	movlw	0
 13619  012618  6E3B               	movwf	(btemp+9)^0,c
 13620  01261A  0E00               	movlw	0
 13621  01261C  6E3C               	movwf	(btemp+10)^0,c
 13622  01261E  0E00               	movlw	0
 13623  012620  6E3D               	movwf	(btemp+11)^0,c
 13624                           
 13625                           ;stkvar	_b @ sp[(-4)+-4]
 13626  012622  0EF8               	movlw	-8
 13627  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13628  01262A  0EF9               	movlw	-7
 13629  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13630  012632  0EFA               	movlw	-6
 13631  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13632  01263A  0EFB               	movlw	-5
 13633  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13634  012642                     l9297:
 13635                           
 13636                           ;stkvar	_b @ sp[(-4)+-4]
 13637  012642  0EFA               	movlw	-6
 13638  012644  8EE3               	bsf	plusw1,7,c
 13639                           
 13640                           ;stkvar	_b @ sp[(-4)+-4]
 13641  012646  0EFB               	movlw	251
 13642  012648  24E1               	addwf	fsr1l,w,c
 13643  01264A  6ED9               	movwf	fsr2l,c
 13644  01264C  0EFF               	movlw	255
 13645  01264E  20E2               	addwfc	fsr1h,w,c
 13646  012650  6EDA               	movwf	fsr2h,c
 13647  012652  0E00               	movlw	0
 13648  012654  6EDF               	movwf	indf2,c
 13649  012656  D018               	goto	l9303
 13650  012658                     l9301:
 13651  012658  0E00               	movlw	0
 13652  01265A  6E3A               	movwf	(btemp+8)^0,c
 13653  01265C  0E00               	movlw	0
 13654  01265E  6E3B               	movwf	(btemp+9)^0,c
 13655  012660  0E00               	movlw	0
 13656  012662  6E3C               	movwf	(btemp+10)^0,c
 13657  012664  0E00               	movlw	0
 13658  012666  6E3D               	movwf	(btemp+11)^0,c
 13659                           
 13660                           ;stkvar	_b @ sp[(-4)+-4]
 13661  012668  0EF8               	movlw	-8
 13662  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13663  012670  0EF9               	movlw	-7
 13664  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13665  012678  0EFA               	movlw	-6
 13666  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13667  012680  0EFB               	movlw	-5
 13668  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13669  012688                     l9303:
 13670                           
 13671                           ;stkvar	_a @ sp[(-4)+-8]
 13672  012688  0EF7               	movlw	247
 13673  01268A  24E1               	addwf	fsr1l,w,c
 13674  01268C  6ED9               	movwf	fsr2l,c
 13675  01268E  0EFF               	movlw	255
 13676  012690  20E2               	addwfc	fsr1h,w,c
 13677  012692  6EDA               	movwf	fsr2h,c
 13678  012694  50DF               	movf	indf2,w,c
 13679  012696  6E3D               	movwf	(btemp+11)^0,c
 13680  012698  0E80               	movlw	128
 13681  01269A  163D               	andwf	(btemp+11)^0,f,c
 13682                           
 13683                           ;stkvar	_aexp @ sp[(-4)+2]
 13684  01269C  0EFE               	movlw	-2
 13685  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13686                           
 13687                           ;stkvar	_signs @ sp[(-4)+3]
 13688                           ;stkvar	_aexp @ sp[(-4)+2]
 13689  0126A4  50E1               	movf	fsr1l,w,c
 13690  0126A6  0FFE               	addlw	-2
 13691  0126A8  6ED9               	movwf	fsr2l,c
 13692  0126AA  50E2               	movf	fsr1h,w,c
 13693  0126AC  6EDA               	movwf	fsr2h,c
 13694  0126AE  0EFF               	movlw	255
 13695  0126B0  22DA               	addwfc	fsr2h,f,c
 13696  0126B2  0EFF               	movlw	-1
 13697  0126B4  50E3               	movf	plusw1,w,c
 13698  0126B6  18DE               	xorwf	postinc2,w,c
 13699  0126B8  B4D8               	btfsc	status,2,c
 13700  0126BA  D002               	goto	l9309
 13701                           
 13702                           ;stkvar	_signs @ sp[(-4)+3]
 13703  0126BC  0EFF               	movlw	-1
 13704  0126BE  8CE3               	bsf	plusw1,6,c
 13705  0126C0                     l9309:
 13706                           
 13707                           ;stkvar	_a @ sp[(-4)+-8]
 13708  0126C0  0EF7               	movlw	247
 13709  0126C2  24E1               	addwf	fsr1l,w,c
 13710  0126C4  6ED9               	movwf	fsr2l,c
 13711  0126C6  0EFF               	movlw	255
 13712  0126C8  20E2               	addwfc	fsr1h,w,c
 13713  0126CA  6EDA               	movwf	fsr2h,c
 13714  0126CC  50DF               	movf	indf2,w,c
 13715  0126CE  6E3D               	movwf	(btemp+11)^0,c
 13716  0126D0  90D8               	bcf	status,0,c
 13717  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 13718  0126D4  6E3C               	movwf	(btemp+10)^0,c
 13719                           
 13720                           ;stkvar	_aexp @ sp[(-4)+2]
 13721  0126D6  0EFE               	movlw	-2
 13722  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13723                           
 13724                           ;stkvar	_a @ sp[(-4)+-8]
 13725  0126DE  0EF6               	movlw	246
 13726  0126E0  24E1               	addwf	fsr1l,w,c
 13727  0126E2  6ED9               	movwf	fsr2l,c
 13728  0126E4  0EFF               	movlw	255
 13729  0126E6  20E2               	addwfc	fsr1h,w,c
 13730  0126E8  6EDA               	movwf	fsr2h,c
 13731  0126EA  AEDF               	btfss	indf2,7,c
 13732  0126EC  D002               	goto	l9315
 13733                           
 13734                           ;stkvar	_aexp @ sp[(-4)+2]
 13735  0126EE  0EFE               	movlw	-2
 13736  0126F0  80E3               	bsf	plusw1,0,c
 13737  0126F2                     l9315:
 13738                           
 13739                           ;stkvar	_aexp @ sp[(-4)+2]
 13740  0126F2  0EFE               	movlw	-2
 13741  0126F4  50E3               	movf	plusw1,w,c
 13742  0126F6  B4D8               	btfsc	status,2,c
 13743  0126F8  D027               	goto	l9325
 13744                           
 13745                           ;stkvar	_aexp @ sp[(-4)+2]
 13746  0126FA  0EFE               	movlw	-2
 13747  0126FC  28E3               	incf	plusw1,w,c
 13748  0126FE  A4D8               	btfss	status,2,c
 13749  012700  D018               	goto	l9321
 13750  012702  0E00               	movlw	0
 13751  012704  6E3A               	movwf	(btemp+8)^0,c
 13752  012706  0E00               	movlw	0
 13753  012708  6E3B               	movwf	(btemp+9)^0,c
 13754  01270A  0E00               	movlw	0
 13755  01270C  6E3C               	movwf	(btemp+10)^0,c
 13756  01270E  0E00               	movlw	0
 13757  012710  6E3D               	movwf	(btemp+11)^0,c
 13758                           
 13759                           ;stkvar	_a @ sp[(-4)+-8]
 13760  012712  0EF4               	movlw	-12
 13761  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13762  01271A  0EF5               	movlw	-11
 13763  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13764  012722  0EF6               	movlw	-10
 13765  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13766  01272A  0EF7               	movlw	-9
 13767  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13768  012732                     l9321:
 13769                           
 13770                           ;stkvar	_a @ sp[(-4)+-8]
 13771  012732  0EF6               	movlw	-10
 13772  012734  8EE3               	bsf	plusw1,7,c
 13773                           
 13774                           ;stkvar	_a @ sp[(-4)+-8]
 13775  012736  0EF7               	movlw	247
 13776  012738  24E1               	addwf	fsr1l,w,c
 13777  01273A  6ED9               	movwf	fsr2l,c
 13778  01273C  0EFF               	movlw	255
 13779  01273E  20E2               	addwfc	fsr1h,w,c
 13780  012740  6EDA               	movwf	fsr2h,c
 13781  012742  0E00               	movlw	0
 13782  012744  6EDF               	movwf	indf2,c
 13783  012746  D018               	goto	l9327
 13784  012748                     l9325:
 13785  012748  0E00               	movlw	0
 13786  01274A  6E3A               	movwf	(btemp+8)^0,c
 13787  01274C  0E00               	movlw	0
 13788  01274E  6E3B               	movwf	(btemp+9)^0,c
 13789  012750  0E00               	movlw	0
 13790  012752  6E3C               	movwf	(btemp+10)^0,c
 13791  012754  0E00               	movlw	0
 13792  012756  6E3D               	movwf	(btemp+11)^0,c
 13793                           
 13794                           ;stkvar	_a @ sp[(-4)+-8]
 13795  012758  0EF4               	movlw	-12
 13796  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13797  012760  0EF5               	movlw	-11
 13798  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13799  012768  0EF6               	movlw	-10
 13800  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13801  012770  0EF7               	movlw	-9
 13802  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13803  012778                     l9327:
 13804                           
 13805                           ;stkvar	_bexp @ sp[(-4)+1]
 13806                           ;stkvar	_aexp @ sp[(-4)+2]
 13807  012778  50E1               	movf	fsr1l,w,c
 13808  01277A  0FFE               	addlw	-2
 13809  01277C  6ED9               	movwf	fsr2l,c
 13810  01277E  50E2               	movf	fsr1h,w,c
 13811  012780  6EDA               	movwf	fsr2h,c
 13812  012782  0EFF               	movlw	255
 13813  012784  22DA               	addwfc	fsr2h,f,c
 13814  012786  0EFD               	movlw	-3
 13815  012788  50E3               	movf	plusw1,w,c
 13816  01278A  5CDE               	subwf	postinc2,w,c
 13817  01278C  B0D8               	btfsc	status,0,c
 13818  01278E  D0A4               	goto	l9363
 13819                           
 13820                           ;stkvar	_signs @ sp[(-4)+3]
 13821  012790  0EFF               	movlw	-1
 13822  012792  ACE3               	btfss	plusw1,6,c
 13823  012794  D002               	goto	l9333
 13824                           
 13825                           ;stkvar	_signs @ sp[(-4)+3]
 13826  012796  0EFF               	movlw	-1
 13827  012798  7EE3               	btg	plusw1,7,c
 13828  01279A                     l9333:
 13829                           
 13830                           ;stkvar	_bexp @ sp[(-4)+1]
 13831                           ;stkvar	_grs @ sp[(-4)+0]
 13832  01279A  0EFD               	movlw	-3
 13833  01279C  006F FF8C  F032    	movff	plusw1,btemp
 13834  0127A2  0EFC               	movlw	-4
 13835  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13836                           
 13837                           ;stkvar	_aexp @ sp[(-4)+2]
 13838                           ;stkvar	_bexp @ sp[(-4)+1]
 13839  0127AA  0EFE               	movlw	-2
 13840  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 13841  0127B2  0EFD               	movlw	-3
 13842  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13843                           
 13844                           ;stkvar	_grs @ sp[(-4)+0]
 13845                           ;stkvar	_aexp @ sp[(-4)+2]
 13846  0127BA  0EFC               	movlw	-4
 13847  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 13848  0127C2  0EFE               	movlw	-2
 13849  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13850                           
 13851                           ;stkvar	_b @ sp[(-4)+-4]
 13852                           ;stkvar	_grs @ sp[(-4)+0]
 13853  0127CA  0EF8               	movlw	-8
 13854  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 13855  0127D2  0EFC               	movlw	-4
 13856  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13857                           
 13858                           ;stkvar	_a @ sp[(-4)+-8]
 13859                           ;stkvar	_b @ sp[(-4)+-4]
 13860  0127DA  0EF4               	movlw	-12
 13861  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 13862  0127E2  0EF8               	movlw	-8
 13863  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13864                           
 13865                           ;stkvar	_grs @ sp[(-4)+0]
 13866                           ;stkvar	_a @ sp[(-4)+-8]
 13867  0127EA  0EFC               	movlw	-4
 13868  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 13869  0127F2  0EF4               	movlw	-12
 13870  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13871                           
 13872                           ;stkvar	_b @ sp[(-4)+-4]
 13873  0127FA  0EF9               	movlw	249
 13874  0127FC  24E1               	addwf	fsr1l,w,c
 13875  0127FE  6ED9               	movwf	fsr2l,c
 13876  012800  0EFF               	movlw	255
 13877  012802  20E2               	addwfc	fsr1h,w,c
 13878  012804  6EDA               	movwf	fsr2h,c
 13879  012806  50DF               	movf	indf2,w,c
 13880  012808  6E3D               	movwf	(btemp+11)^0,c
 13881                           
 13882                           ;stkvar	_grs @ sp[(-4)+0]
 13883  01280A  0EFC               	movlw	-4
 13884  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13885                           
 13886                           ;stkvar	_a @ sp[(-4)+-8]
 13887  012812  0EF5               	movlw	245
 13888  012814  24E1               	addwf	fsr1l,w,c
 13889  012816  6ED9               	movwf	fsr2l,c
 13890  012818  0EFF               	movlw	255
 13891  01281A  20E2               	addwfc	fsr1h,w,c
 13892  01281C  6EDA               	movwf	fsr2h,c
 13893                           
 13894                           ;stkvar	_b @ sp[(-4)+-4]
 13895  01281E  0EF9               	movlw	249
 13896  012820  24E1               	addwf	fsr1l,w,c
 13897  012822  6EE9               	movwf	fsr0l,c
 13898  012824  0EFF               	movlw	255
 13899  012826  20E2               	addwfc	fsr1h,w,c
 13900  012828  6EEA               	movwf	fsr0h,c
 13901  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13902                           
 13903                           ;stkvar	_grs @ sp[(-4)+0]
 13904                           ;stkvar	_a @ sp[(-4)+-8]
 13905  012830  0EF5               	movlw	245
 13906  012832  24E1               	addwf	fsr1l,w,c
 13907  012834  6ED9               	movwf	fsr2l,c
 13908  012836  0EFF               	movlw	255
 13909  012838  20E2               	addwfc	fsr1h,w,c
 13910  01283A  6EDA               	movwf	fsr2h,c
 13911  01283C  0EFC               	movlw	-4
 13912  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13913                           
 13914                           ;stkvar	_b @ sp[(-4)+-4]
 13915  012844  0EFA               	movlw	250
 13916  012846  24E1               	addwf	fsr1l,w,c
 13917  012848  6ED9               	movwf	fsr2l,c
 13918  01284A  0EFF               	movlw	255
 13919  01284C  20E2               	addwfc	fsr1h,w,c
 13920  01284E  6EDA               	movwf	fsr2h,c
 13921  012850  50DF               	movf	indf2,w,c
 13922  012852  6E3D               	movwf	(btemp+11)^0,c
 13923                           
 13924                           ;stkvar	_grs @ sp[(-4)+0]
 13925  012854  0EFC               	movlw	-4
 13926  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13927                           
 13928                           ;stkvar	_a @ sp[(-4)+-8]
 13929  01285C  0EF6               	movlw	246
 13930  01285E  24E1               	addwf	fsr1l,w,c
 13931  012860  6ED9               	movwf	fsr2l,c
 13932  012862  0EFF               	movlw	255
 13933  012864  20E2               	addwfc	fsr1h,w,c
 13934  012866  6EDA               	movwf	fsr2h,c
 13935                           
 13936                           ;stkvar	_b @ sp[(-4)+-4]
 13937  012868  0EFA               	movlw	250
 13938  01286A  24E1               	addwf	fsr1l,w,c
 13939  01286C  6EE9               	movwf	fsr0l,c
 13940  01286E  0EFF               	movlw	255
 13941  012870  20E2               	addwfc	fsr1h,w,c
 13942  012872  6EEA               	movwf	fsr0h,c
 13943  012874  006F FF7F FFEF     	movff	indf2,indf0
 13944                           
 13945                           ;stkvar	_grs @ sp[(-4)+0]
 13946                           ;stkvar	_a @ sp[(-4)+-8]
 13947  01287A  0EF6               	movlw	246
 13948  01287C  24E1               	addwf	fsr1l,w,c
 13949  01287E  6ED9               	movwf	fsr2l,c
 13950  012880  0EFF               	movlw	255
 13951  012882  20E2               	addwfc	fsr1h,w,c
 13952  012884  6EDA               	movwf	fsr2h,c
 13953  012886  0EFC               	movlw	-4
 13954  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13955                           
 13956                           ;stkvar	_b @ sp[(-4)+-4]
 13957  01288E  0EFB               	movlw	251
 13958  012890  24E1               	addwf	fsr1l,w,c
 13959  012892  6ED9               	movwf	fsr2l,c
 13960  012894  0EFF               	movlw	255
 13961  012896  20E2               	addwfc	fsr1h,w,c
 13962  012898  6EDA               	movwf	fsr2h,c
 13963  01289A  50DF               	movf	indf2,w,c
 13964  01289C  6E3D               	movwf	(btemp+11)^0,c
 13965                           
 13966                           ;stkvar	_grs @ sp[(-4)+0]
 13967  01289E  0EFC               	movlw	-4
 13968  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13969                           
 13970                           ;stkvar	_a @ sp[(-4)+-8]
 13971  0128A6  0EF7               	movlw	247
 13972  0128A8  24E1               	addwf	fsr1l,w,c
 13973  0128AA  6ED9               	movwf	fsr2l,c
 13974  0128AC  0EFF               	movlw	255
 13975  0128AE  20E2               	addwfc	fsr1h,w,c
 13976  0128B0  6EDA               	movwf	fsr2h,c
 13977                           
 13978                           ;stkvar	_b @ sp[(-4)+-4]
 13979  0128B2  0EFB               	movlw	251
 13980  0128B4  24E1               	addwf	fsr1l,w,c
 13981  0128B6  6EE9               	movwf	fsr0l,c
 13982  0128B8  0EFF               	movlw	255
 13983  0128BA  20E2               	addwfc	fsr1h,w,c
 13984  0128BC  6EEA               	movwf	fsr0h,c
 13985  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13986                           
 13987                           ;stkvar	_grs @ sp[(-4)+0]
 13988                           ;stkvar	_a @ sp[(-4)+-8]
 13989  0128C4  0EF7               	movlw	247
 13990  0128C6  24E1               	addwf	fsr1l,w,c
 13991  0128C8  6ED9               	movwf	fsr2l,c
 13992  0128CA  0EFF               	movlw	255
 13993  0128CC  20E2               	addwfc	fsr1h,w,c
 13994  0128CE  6EDA               	movwf	fsr2h,c
 13995  0128D0  0EFC               	movlw	-4
 13996  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13997  0128D8                     l9363:
 13998                           
 13999                           ;stkvar	_grs @ sp[(-4)+0]
 14000  0128D8  0EFC               	movlw	-4
 14001  0128DA  6AE3               	clrf	plusw1,c
 14002                           
 14003                           ;stkvar	_aexp @ sp[(-4)+2]
 14004  0128DC  0EFE               	movlw	-2
 14005  0128DE  50E3               	movf	plusw1,w,c
 14006  0128E0  6E3C               	movwf	(btemp+10)^0,c
 14007  0128E2  6A3D               	clrf	(btemp+11)^0,c
 14008                           
 14009                           ;stkvar	_bexp @ sp[(-4)+1]
 14010  0128E4  0EFD               	movlw	-3
 14011  0128E6  50E3               	movf	plusw1,w,c
 14012  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 14013  0128EA  0E00               	movlw	0
 14014  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 14015  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 14016  0128F0  D062               	goto	l9387
 14017  0128F2  503D               	movf	(btemp+11)^0,w,c
 14018  0128F4  E104               	bnz	u8980
 14019  0128F6  0E1A               	movlw	26
 14020  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 14021  0128FA  A0D8               	btfss	status,0,c
 14022  0128FC  D05C               	goto	l9387
 14023  0128FE                     u8980:
 14024                           
 14025                           ;stkvar	_b @ sp[(-4)+-4]
 14026  0128FE  0EF8               	movlw	-8
 14027  012900  50E3               	movf	plusw1,w,c
 14028  012902  E10A               	bnz	u8991
 14029  012904  0EF9               	movlw	-7
 14030  012906  50E3               	movf	plusw1,w,c
 14031  012908  E107               	bnz	u8991
 14032  01290A  0EFA               	movlw	-6
 14033  01290C  50E3               	movf	plusw1,w,c
 14034  01290E  E104               	bnz	u8991
 14035  012910  0EFB               	movlw	-5
 14036  012912  50E3               	movf	plusw1,w,c
 14037  012914  B4D8               	btfsc	status,2,c
 14038  012916  D003               	goto	u8990
 14039  012918                     u8991:
 14040  012918  6A3D               	clrf	(btemp+11)^0,c
 14041  01291A  2A3D               	incf	(btemp+11)^0,f,c
 14042  01291C  D001               	goto	u9008
 14043  01291E                     u8990:
 14044  01291E  6A3D               	clrf	(btemp+11)^0,c
 14045  012920                     u9008:
 14046                           
 14047                           ;stkvar	_grs @ sp[(-4)+0]
 14048  012920  0EFC               	movlw	-4
 14049  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14050                           
 14051                           ;stkvar	_b @ sp[(-4)+-4]
 14052  012928  0EF8               	movlw	-8
 14053  01292A  6AE3               	clrf	plusw1,c
 14054  01292C  0EF9               	movlw	-7
 14055  01292E  6AE3               	clrf	plusw1,c
 14056  012930  0EFA               	movlw	-6
 14057  012932  6AE3               	clrf	plusw1,c
 14058  012934  0EFB               	movlw	-5
 14059  012936  6AE3               	clrf	plusw1,c
 14060                           
 14061                           ;stkvar	_aexp @ sp[(-4)+2]
 14062                           ;stkvar	_bexp @ sp[(-4)+1]
 14063  012938  0EFE               	movlw	-2
 14064  01293A  006F FF8C  F032    	movff	plusw1,btemp
 14065  012940  0EFD               	movlw	-3
 14066  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 14067  012948  D042               	goto	u9040
 14068  01294A                     l9373:
 14069                           
 14070                           ;stkvar	_grs @ sp[(-4)+0]
 14071  01294A  0EFC               	movlw	-4
 14072  01294C  A0E3               	btfss	plusw1,0,c
 14073  01294E  D00D               	goto	l9377
 14074                           
 14075                           ;stkvar	_grs @ sp[(-4)+0]
 14076  012950  0EFC               	movlw	-4
 14077  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 14078  012958  90D8               	bcf	status,0,c
 14079  01295A  323D               	rrcf	(btemp+11)^0,f,c
 14080  01295C  0E01               	movlw	1
 14081  01295E  123D               	iorwf	(btemp+11)^0,f,c
 14082                           
 14083                           ;stkvar	_grs @ sp[(-4)+0]
 14084  012960  0EFC               	movlw	-4
 14085  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14086  012968  D009               	goto	l9379
 14087  01296A                     l9377:
 14088                           
 14089                           ;stkvar	_grs @ sp[(-4)+0]
 14090  01296A  50E1               	movf	fsr1l,w,c
 14091  01296C  0FFC               	addlw	-4
 14092  01296E  6ED9               	movwf	fsr2l,c
 14093  012970  50E2               	movf	fsr1h,w,c
 14094  012972  6EDA               	movwf	fsr2h,c
 14095  012974  0EFF               	movlw	255
 14096  012976  22DA               	addwfc	fsr2h,f,c
 14097  012978  90D8               	bcf	status,0,c
 14098  01297A  32DF               	rrcf	indf2,f,c
 14099  01297C                     l9379:
 14100                           
 14101                           ;stkvar	_b @ sp[(-4)+-4]
 14102  01297C  0EF8               	movlw	-8
 14103  01297E  A0E3               	btfss	plusw1,0,c
 14104  012980  D002               	goto	l9383
 14105                           
 14106                           ;stkvar	_grs @ sp[(-4)+0]
 14107  012982  0EFC               	movlw	-4
 14108  012984  8EE3               	bsf	plusw1,7,c
 14109  012986                     l9383:
 14110  012986  0E01               	movlw	1
 14111  012988  6E3D               	movwf	(btemp+11)^0,c
 14112                           
 14113                           ;stkvar	_b @ sp[(-4)+-4]
 14114  01298A  50E1               	movf	fsr1l,w,c
 14115  01298C  0FF8               	addlw	-8
 14116  01298E  6ED9               	movwf	fsr2l,c
 14117  012990  50E2               	movf	fsr1h,w,c
 14118  012992  6EDA               	movwf	fsr2h,c
 14119  012994  0EFF               	movlw	255
 14120  012996  22DA               	addwfc	fsr2h,f,c
 14121  012998  283D               	incf	(btemp+11)^0,w,c
 14122  01299A  52DE               	movf	postinc2,f,c
 14123  01299C  D008               	goto	u9030
 14124  01299E                     u9035:
 14125  01299E  52DE               	movf	postinc2,f,c
 14126  0129A0  90D8               	bcf	status,0,c
 14127  0129A2  BEDC               	btfsc	preinc2,7,c
 14128  0129A4  80D8               	bsf	status,0,c
 14129  0129A6  32DD               	rrcf	postdec2,f,c
 14130  0129A8  32DD               	rrcf	postdec2,f,c
 14131  0129AA  32DD               	rrcf	postdec2,f,c
 14132  0129AC  32DE               	rrcf	postinc2,f,c
 14133  0129AE                     u9030:
 14134  0129AE  2EE8               	decfsz	wreg,f,c
 14135  0129B0  D7F6               	goto	u9035
 14136                           
 14137                           ;stkvar	_bexp @ sp[(-4)+1]
 14138  0129B2  0EFD               	movlw	-3
 14139  0129B4  2AE3               	incf	plusw1,f,c
 14140  0129B6                     l9387:
 14141                           
 14142                           ;stkvar	_aexp @ sp[(-4)+2]
 14143                           ;stkvar	_bexp @ sp[(-4)+1]
 14144  0129B6  50E1               	movf	fsr1l,w,c
 14145  0129B8  0FFD               	addlw	-3
 14146  0129BA  6ED9               	movwf	fsr2l,c
 14147  0129BC  50E2               	movf	fsr1h,w,c
 14148  0129BE  6EDA               	movwf	fsr2h,c
 14149  0129C0  0EFF               	movlw	255
 14150  0129C2  22DA               	addwfc	fsr2h,f,c
 14151  0129C4  0EFE               	movlw	-2
 14152  0129C6  50E3               	movf	plusw1,w,c
 14153  0129C8  5CDE               	subwf	postinc2,w,c
 14154  0129CA  A0D8               	btfss	status,0,c
 14155  0129CC  D7BE               	goto	l9373
 14156  0129CE                     u9040:
 14157                           
 14158                           ;stkvar	_signs @ sp[(-4)+3]
 14159  0129CE  0EFF               	movlw	-1
 14160  0129D0  BCE3               	btfsc	plusw1,6,c
 14161  0129D2  D066               	goto	l9415
 14162                           
 14163                           ;stkvar	_bexp @ sp[(-4)+1]
 14164  0129D4  0EFD               	movlw	-3
 14165  0129D6  50E3               	movf	plusw1,w,c
 14166  0129D8  B4D8               	btfsc	status,2,c
 14167  0129DA  D0F2               	goto	u9140
 14168                           
 14169                           ;stkvar	_a @ sp[(-4)+-8]
 14170                           ;stkvar	_b @ sp[(-4)+-4]
 14171  0129DC  0EF8               	movlw	-8
 14172  0129DE  50E3               	movf	plusw1,w,c
 14173  0129E0  6E32               	movwf	btemp^0,c
 14174  0129E2  0EF4               	movlw	-12
 14175  0129E4  50E3               	movf	plusw1,w,c
 14176  0129E6  2632               	addwf	btemp^0,f,c
 14177  0129E8  0EF8               	movlw	-8
 14178  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 14179  0129F0  0EF9               	movlw	-7
 14180  0129F2  50E3               	movf	plusw1,w,c
 14181  0129F4  6E32               	movwf	btemp^0,c
 14182  0129F6  0EF5               	movlw	-11
 14183  0129F8  50E3               	movf	plusw1,w,c
 14184  0129FA  2232               	addwfc	btemp^0,f,c
 14185  0129FC  0EF9               	movlw	-7
 14186  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 14187  012A04  0EFA               	movlw	-6
 14188  012A06  50E3               	movf	plusw1,w,c
 14189  012A08  6E32               	movwf	btemp^0,c
 14190  012A0A  0EF6               	movlw	-10
 14191  012A0C  50E3               	movf	plusw1,w,c
 14192  012A0E  2232               	addwfc	btemp^0,f,c
 14193  012A10  0EFA               	movlw	-6
 14194  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 14195  012A18  0EFB               	movlw	-5
 14196  012A1A  50E3               	movf	plusw1,w,c
 14197  012A1C  6E32               	movwf	btemp^0,c
 14198  012A1E  0EF7               	movlw	-9
 14199  012A20  50E3               	movf	plusw1,w,c
 14200  012A22  2232               	addwfc	btemp^0,f,c
 14201  012A24  0EFB               	movlw	-5
 14202  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 14203                           
 14204                           ;stkvar	_b @ sp[(-4)+-4]
 14205  012A2C  0EFB               	movlw	-5
 14206  012A2E  A0E3               	btfss	plusw1,0,c
 14207  012A30  D101               	goto	u9180
 14208                           
 14209                           ;stkvar	_grs @ sp[(-4)+0]
 14210  012A32  0EFC               	movlw	-4
 14211  012A34  A0E3               	btfss	plusw1,0,c
 14212  012A36  D00D               	goto	l9405
 14213                           
 14214                           ;stkvar	_grs @ sp[(-4)+0]
 14215  012A38  0EFC               	movlw	-4
 14216  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 14217  012A40  90D8               	bcf	status,0,c
 14218  012A42  323D               	rrcf	(btemp+11)^0,f,c
 14219  012A44  0E01               	movlw	1
 14220  012A46  123D               	iorwf	(btemp+11)^0,f,c
 14221                           
 14222                           ;stkvar	_grs @ sp[(-4)+0]
 14223  012A48  0EFC               	movlw	-4
 14224  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14225  012A50  D009               	goto	l9407
 14226  012A52                     l9405:
 14227                           
 14228                           ;stkvar	_grs @ sp[(-4)+0]
 14229  012A52  50E1               	movf	fsr1l,w,c
 14230  012A54  0FFC               	addlw	-4
 14231  012A56  6ED9               	movwf	fsr2l,c
 14232  012A58  50E2               	movf	fsr1h,w,c
 14233  012A5A  6EDA               	movwf	fsr2h,c
 14234  012A5C  0EFF               	movlw	255
 14235  012A5E  22DA               	addwfc	fsr2h,f,c
 14236  012A60  90D8               	bcf	status,0,c
 14237  012A62  32DF               	rrcf	indf2,f,c
 14238  012A64                     l9407:
 14239                           
 14240                           ;stkvar	_b @ sp[(-4)+-4]
 14241  012A64  0EF8               	movlw	-8
 14242  012A66  A0E3               	btfss	plusw1,0,c
 14243  012A68  D002               	goto	l9411
 14244                           
 14245                           ;stkvar	_grs @ sp[(-4)+0]
 14246  012A6A  0EFC               	movlw	-4
 14247  012A6C  8EE3               	bsf	plusw1,7,c
 14248  012A6E                     l9411:
 14249  012A6E  0E01               	movlw	1
 14250  012A70  6E3D               	movwf	(btemp+11)^0,c
 14251                           
 14252                           ;stkvar	_b @ sp[(-4)+-4]
 14253  012A72  50E1               	movf	fsr1l,w,c
 14254  012A74  0FF8               	addlw	-8
 14255  012A76  6ED9               	movwf	fsr2l,c
 14256  012A78  50E2               	movf	fsr1h,w,c
 14257  012A7A  6EDA               	movwf	fsr2h,c
 14258  012A7C  0EFF               	movlw	255
 14259  012A7E  22DA               	addwfc	fsr2h,f,c
 14260  012A80  283D               	incf	(btemp+11)^0,w,c
 14261  012A82  52DE               	movf	postinc2,f,c
 14262  012A84  D008               	goto	u9100
 14263  012A86                     u9105:
 14264  012A86  52DE               	movf	postinc2,f,c
 14265  012A88  90D8               	bcf	status,0,c
 14266  012A8A  BEDC               	btfsc	preinc2,7,c
 14267  012A8C  80D8               	bsf	status,0,c
 14268  012A8E  32DD               	rrcf	postdec2,f,c
 14269  012A90  32DD               	rrcf	postdec2,f,c
 14270  012A92  32DD               	rrcf	postdec2,f,c
 14271  012A94  32DE               	rrcf	postinc2,f,c
 14272  012A96                     u9100:
 14273  012A96  2EE8               	decfsz	wreg,f,c
 14274  012A98  D7F6               	goto	u9105
 14275                           
 14276                           ;stkvar	_bexp @ sp[(-4)+1]
 14277  012A9A  0EFD               	movlw	-3
 14278  012A9C  2AE3               	incf	plusw1,f,c
 14279  012A9E  D0CA               	goto	u9180
 14280  012AA0                     l9415:
 14281                           
 14282                           ;stkvar	_a @ sp[(-4)+-8]
 14283                           ;stkvar	_b @ sp[(-4)+-4]
 14284  012AA0  50E1               	movf	fsr1l,w,c
 14285  012AA2  0FF8               	addlw	-8
 14286  012AA4  6ED9               	movwf	fsr2l,c
 14287  012AA6  50E2               	movf	fsr1h,w,c
 14288  012AA8  6EDA               	movwf	fsr2h,c
 14289  012AAA  0EFF               	movlw	255
 14290  012AAC  22DA               	addwfc	fsr2h,f,c
 14291  012AAE  0EF4               	movlw	-12
 14292  012AB0  50E3               	movf	plusw1,w,c
 14293  012AB2  5CDE               	subwf	postinc2,w,c
 14294  012AB4  0EF5               	movlw	-11
 14295  012AB6  50E3               	movf	plusw1,w,c
 14296  012AB8  58DE               	subwfb	postinc2,w,c
 14297  012ABA  0EF6               	movlw	-10
 14298  012ABC  50E3               	movf	plusw1,w,c
 14299  012ABE  58DE               	subwfb	postinc2,w,c
 14300  012AC0  50DE               	movf	postinc2,w,c
 14301  012AC2  0A80               	xorlw	128
 14302  012AC4  6E32               	movwf	btemp^0,c
 14303  012AC6  0EF7               	movlw	-9
 14304  012AC8  50E3               	movf	plusw1,w,c
 14305  012ACA  0A80               	xorlw	128
 14306  012ACC  5832               	subwfb	btemp^0,w,c
 14307  012ACE  B0D8               	btfsc	status,0,c
 14308  012AD0  D053               	goto	l9427
 14309                           
 14310                           ;stkvar	_b @ sp[(-4)+-4]
 14311                           ;stkvar	_a @ sp[(-4)+-8]
 14312  012AD2  0EF4               	movlw	-12
 14313  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 14314  012ADA  0EF5               	movlw	-11
 14315  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 14316  012AE2  0EF6               	movlw	-10
 14317  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 14318  012AEA  0EF7               	movlw	-9
 14319  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 14320  012AF2  0EF8               	movlw	-8
 14321  012AF4  50E3               	movf	plusw1,w,c
 14322  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 14323  012AF8  0EF9               	movlw	-7
 14324  012AFA  50E3               	movf	plusw1,w,c
 14325  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 14326  012AFE  0EFA               	movlw	-6
 14327  012B00  50E3               	movf	plusw1,w,c
 14328  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 14329  012B04  0EFB               	movlw	-5
 14330  012B06  50E3               	movf	plusw1,w,c
 14331  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 14332  012B0A  0EFF               	movlw	255
 14333  012B0C  243A               	addwf	(btemp+8)^0,w,c
 14334  012B0E  6E36               	movwf	(btemp+4)^0,c
 14335  012B10  0EFF               	movlw	255
 14336  012B12  203B               	addwfc	(btemp+9)^0,w,c
 14337  012B14  6E37               	movwf	(btemp+5)^0,c
 14338  012B16  0EFF               	movlw	255
 14339  012B18  203C               	addwfc	(btemp+10)^0,w,c
 14340  012B1A  6E38               	movwf	(btemp+6)^0,c
 14341  012B1C  0EFF               	movlw	255
 14342  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 14343  012B20  6E39               	movwf	(btemp+7)^0,c
 14344                           
 14345                           ;stkvar	_b @ sp[(-4)+-4]
 14346  012B22  0EF8               	movlw	-8
 14347  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14348  012B2A  0EF9               	movlw	-7
 14349  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14350  012B32  0EFA               	movlw	-6
 14351  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14352  012B3A  0EFB               	movlw	-5
 14353  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14354                           
 14355                           ;stkvar	_signs @ sp[(-4)+3]
 14356  012B42  0EFF               	movlw	-1
 14357  012B44  7EE3               	btg	plusw1,7,c
 14358                           
 14359                           ;stkvar	_grs @ sp[(-4)+0]
 14360  012B46  0EFC               	movlw	-4
 14361  012B48  50E3               	movf	plusw1,w,c
 14362  012B4A  0800               	sublw	0
 14363  012B4C  6E3D               	movwf	(btemp+11)^0,c
 14364                           
 14365                           ;stkvar	_grs @ sp[(-4)+0]
 14366  012B4E  0EFC               	movlw	-4
 14367  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14368                           
 14369                           ;stkvar	_grs @ sp[(-4)+0]
 14370  012B56  0EFC               	movlw	-4
 14371  012B58  50E3               	movf	plusw1,w,c
 14372  012B5A  A4D8               	btfss	status,2,c
 14373  012B5C  D020               	goto	l9429
 14374                           
 14375                           ;stkvar	_b @ sp[(-4)+-4]
 14376  012B5E  50E1               	movf	fsr1l,w,c
 14377  012B60  0FF8               	addlw	-8
 14378  012B62  6ED9               	movwf	fsr2l,c
 14379  012B64  50E2               	movf	fsr1h,w,c
 14380  012B66  6EDA               	movwf	fsr2h,c
 14381  012B68  0EFF               	movlw	255
 14382  012B6A  22DA               	addwfc	fsr2h,f,c
 14383  012B6C  2ADE               	incf	postinc2,f,c
 14384  012B6E  0E00               	movlw	0
 14385  012B70  22DE               	addwfc	postinc2,f,c
 14386  012B72  22DE               	addwfc	postinc2,f,c
 14387  012B74  22DE               	addwfc	postinc2,f,c
 14388  012B76  D013               	goto	l9429
 14389  012B78                     l9427:
 14390                           
 14391                           ;stkvar	_a @ sp[(-4)+-8]
 14392                           ;stkvar	_b @ sp[(-4)+-4]
 14393  012B78  50E1               	movf	fsr1l,w,c
 14394  012B7A  0FF8               	addlw	-8
 14395  012B7C  6ED9               	movwf	fsr2l,c
 14396  012B7E  50E2               	movf	fsr1h,w,c
 14397  012B80  6EDA               	movwf	fsr2h,c
 14398  012B82  0EFF               	movlw	255
 14399  012B84  22DA               	addwfc	fsr2h,f,c
 14400  012B86  0EF4               	movlw	-12
 14401  012B88  50E3               	movf	plusw1,w,c
 14402  012B8A  5EDE               	subwf	postinc2,f,c
 14403  012B8C  0EF5               	movlw	-11
 14404  012B8E  50E3               	movf	plusw1,w,c
 14405  012B90  5ADE               	subwfb	postinc2,f,c
 14406  012B92  0EF6               	movlw	-10
 14407  012B94  50E3               	movf	plusw1,w,c
 14408  012B96  5ADE               	subwfb	postinc2,f,c
 14409  012B98  0EF7               	movlw	-9
 14410  012B9A  50E3               	movf	plusw1,w,c
 14411  012B9C  5ADE               	subwfb	postinc2,f,c
 14412  012B9E                     l9429:
 14413                           
 14414                           ;stkvar	_b @ sp[(-4)+-4]
 14415  012B9E  0EF8               	movlw	-8
 14416  012BA0  50E3               	movf	plusw1,w,c
 14417  012BA2  E145               	bnz	l9451
 14418  012BA4  0EF9               	movlw	-7
 14419  012BA6  50E3               	movf	plusw1,w,c
 14420  012BA8  E142               	bnz	l9451
 14421  012BAA  0EFA               	movlw	-6
 14422  012BAC  50E3               	movf	plusw1,w,c
 14423  012BAE  E13F               	bnz	l9451
 14424  012BB0  0EFB               	movlw	-5
 14425  012BB2  50E3               	movf	plusw1,w,c
 14426  012BB4  A4D8               	btfss	status,2,c
 14427  012BB6  D03B               	goto	l9451
 14428                           
 14429                           ;stkvar	_grs @ sp[(-4)+0]
 14430  012BB8  0EFC               	movlw	-4
 14431  012BBA  50E3               	movf	plusw1,w,c
 14432  012BBC  A4D8               	btfss	status,2,c
 14433  012BBE  D037               	goto	l9451
 14434  012BC0                     u9140:
 14435  012BC0  0E00               	movlw	0
 14436  012BC2  6E32               	movwf	btemp^0,c
 14437  012BC4  0E00               	movlw	0
 14438  012BC6  6E33               	movwf	(btemp+1)^0,c
 14439  012BC8  0E00               	movlw	0
 14440  012BCA  6E34               	movwf	(btemp+2)^0,c
 14441  012BCC  0E00               	movlw	0
 14442  012BCE  6E35               	movwf	(btemp+3)^0,c
 14443  012BD0  D0C6               	goto	l2579
 14444  012BD2                     l9437:
 14445                           
 14446                           ;stkvar	_b @ sp[(-4)+-4]
 14447  012BD2  90D8               	bcf	status,0,c
 14448  012BD4  0EF8               	movlw	-8
 14449  012BD6  36E3               	rlcf	plusw1,f,c
 14450  012BD8  0EF9               	movlw	-7
 14451  012BDA  36E3               	rlcf	plusw1,f,c
 14452  012BDC  0EFA               	movlw	-6
 14453  012BDE  36E3               	rlcf	plusw1,f,c
 14454  012BE0  0EFB               	movlw	-5
 14455  012BE2  36E3               	rlcf	plusw1,f,c
 14456                           
 14457                           ;stkvar	_grs @ sp[(-4)+0]
 14458  012BE4  0EFC               	movlw	-4
 14459  012BE6  AEE3               	btfss	plusw1,7,c
 14460  012BE8  D002               	goto	l2591
 14461                           
 14462                           ;stkvar	_b @ sp[(-4)+-4]
 14463  012BEA  0EF8               	movlw	-8
 14464  012BEC  80E3               	bsf	plusw1,0,c
 14465  012BEE                     l2591:
 14466                           
 14467                           ;stkvar	_grs @ sp[(-4)+0]
 14468  012BEE  0EFC               	movlw	-4
 14469  012BF0  A0E3               	btfss	plusw1,0,c
 14470  012BF2  D00E               	goto	l9445
 14471                           
 14472                           ;stkvar	_grs @ sp[(-4)+0]
 14473  012BF4  0EFC               	movlw	-4
 14474  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 14475  012BFC  90D8               	bcf	status,0,c
 14476  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 14477  012C00  6E3C               	movwf	(btemp+10)^0,c
 14478  012C02  0E01               	movlw	1
 14479  012C04  123C               	iorwf	(btemp+10)^0,f,c
 14480                           
 14481                           ;stkvar	_grs @ sp[(-4)+0]
 14482  012C06  0EFC               	movlw	-4
 14483  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14484  012C0E  D009               	goto	l9447
 14485  012C10                     l9445:
 14486                           
 14487                           ;stkvar	_grs @ sp[(-4)+0]
 14488  012C10  50E1               	movf	fsr1l,w,c
 14489  012C12  0FFC               	addlw	-4
 14490  012C14  6ED9               	movwf	fsr2l,c
 14491  012C16  50E2               	movf	fsr1h,w,c
 14492  012C18  6EDA               	movwf	fsr2h,c
 14493  012C1A  0EFF               	movlw	255
 14494  012C1C  22DA               	addwfc	fsr2h,f,c
 14495  012C1E  90D8               	bcf	status,0,c
 14496  012C20  36DF               	rlcf	indf2,f,c
 14497  012C22                     l9447:
 14498                           
 14499                           ;stkvar	_bexp @ sp[(-4)+1]
 14500  012C22  0EFD               	movlw	-3
 14501  012C24  50E3               	movf	plusw1,w,c
 14502  012C26  B4D8               	btfsc	status,2,c
 14503  012C28  D002               	goto	l9451
 14504                           
 14505                           ;stkvar	_bexp @ sp[(-4)+1]
 14506  012C2A  0EFD               	movlw	-3
 14507  012C2C  06E3               	decf	plusw1,f,c
 14508  012C2E                     l9451:
 14509                           
 14510                           ;stkvar	_b @ sp[(-4)+-4]
 14511  012C2E  0EFA               	movlw	-6
 14512  012C30  AEE3               	btfss	plusw1,7,c
 14513  012C32  D7CF               	goto	l9437
 14514  012C34                     u9180:
 14515                           
 14516                           ;stkvar	_aexp @ sp[(-4)+2]
 14517  012C34  0EFE               	movlw	-2
 14518  012C36  6AE3               	clrf	plusw1,c
 14519                           
 14520                           ;stkvar	_grs @ sp[(-4)+0]
 14521  012C38  0EFC               	movlw	-4
 14522  012C3A  AEE3               	btfss	plusw1,7,c
 14523  012C3C  D00F               	goto	l9465
 14524                           
 14525                           ;stkvar	_grs @ sp[(-4)+0]
 14526  012C3E  0EFC               	movlw	-4
 14527  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14528  012C46  0E7F               	movlw	127
 14529  012C48  163D               	andwf	(btemp+11)^0,f,c
 14530  012C4A  B4D8               	btfsc	status,2,c
 14531  012C4C  D004               	goto	l9461
 14532  012C4E                     u9200:
 14533                           
 14534                           ;stkvar	_aexp @ sp[(-4)+2]
 14535  012C4E  0EFE               	movlw	-2
 14536  012C50  6AE3               	clrf	plusw1,c
 14537  012C52  2AE3               	incf	plusw1,f,c
 14538  012C54  D003               	goto	l9465
 14539  012C56                     l9461:
 14540                           
 14541                           ;stkvar	_b @ sp[(-4)+-4]
 14542  012C56  0EF8               	movlw	-8
 14543  012C58  B0E3               	btfsc	plusw1,0,c
 14544  012C5A  D7F9               	goto	u9200
 14545  012C5C                     l9465:
 14546                           
 14547                           ;stkvar	_aexp @ sp[(-4)+2]
 14548  012C5C  0EFE               	movlw	-2
 14549  012C5E  50E3               	movf	plusw1,w,c
 14550  012C60  B4D8               	btfsc	status,2,c
 14551  012C62  D02B               	goto	l9477
 14552                           
 14553                           ;stkvar	_b @ sp[(-4)+-4]
 14554  012C64  50E1               	movf	fsr1l,w,c
 14555  012C66  0FF8               	addlw	-8
 14556  012C68  6ED9               	movwf	fsr2l,c
 14557  012C6A  50E2               	movf	fsr1h,w,c
 14558  012C6C  6EDA               	movwf	fsr2h,c
 14559  012C6E  0EFF               	movlw	255
 14560  012C70  22DA               	addwfc	fsr2h,f,c
 14561  012C72  2ADE               	incf	postinc2,f,c
 14562  012C74  0E00               	movlw	0
 14563  012C76  22DE               	addwfc	postinc2,f,c
 14564  012C78  22DE               	addwfc	postinc2,f,c
 14565  012C7A  22DE               	addwfc	postinc2,f,c
 14566                           
 14567                           ;stkvar	_b @ sp[(-4)+-4]
 14568  012C7C  0EFB               	movlw	-5
 14569  012C7E  A0E3               	btfss	plusw1,0,c
 14570  012C80  D01C               	goto	l9477
 14571  012C82  0E01               	movlw	1
 14572  012C84  6E3D               	movwf	(btemp+11)^0,c
 14573                           
 14574                           ;stkvar	_b @ sp[(-4)+-4]
 14575  012C86  50E1               	movf	fsr1l,w,c
 14576  012C88  0FF8               	addlw	-8
 14577  012C8A  6ED9               	movwf	fsr2l,c
 14578  012C8C  50E2               	movf	fsr1h,w,c
 14579  012C8E  6EDA               	movwf	fsr2h,c
 14580  012C90  0EFF               	movlw	255
 14581  012C92  22DA               	addwfc	fsr2h,f,c
 14582  012C94  283D               	incf	(btemp+11)^0,w,c
 14583  012C96  52DE               	movf	postinc2,f,c
 14584  012C98  D008               	goto	u9240
 14585  012C9A                     u9245:
 14586  012C9A  52DE               	movf	postinc2,f,c
 14587  012C9C  90D8               	bcf	status,0,c
 14588  012C9E  BEDC               	btfsc	preinc2,7,c
 14589  012CA0  80D8               	bsf	status,0,c
 14590  012CA2  32DD               	rrcf	postdec2,f,c
 14591  012CA4  32DD               	rrcf	postdec2,f,c
 14592  012CA6  32DD               	rrcf	postdec2,f,c
 14593  012CA8  32DE               	rrcf	postinc2,f,c
 14594  012CAA                     u9240:
 14595  012CAA  2EE8               	decfsz	wreg,f,c
 14596  012CAC  D7F6               	goto	u9245
 14597                           
 14598                           ;stkvar	_bexp @ sp[(-4)+1]
 14599  012CAE  0EFD               	movlw	-3
 14600  012CB0  28E3               	incf	plusw1,w,c
 14601  012CB2  B4D8               	btfsc	status,2,c
 14602  012CB4  D002               	goto	l9477
 14603                           
 14604                           ;stkvar	_bexp @ sp[(-4)+1]
 14605  012CB6  0EFD               	movlw	-3
 14606  012CB8  2AE3               	incf	plusw1,f,c
 14607  012CBA                     l9477:
 14608                           
 14609                           ;stkvar	_bexp @ sp[(-4)+1]
 14610  012CBA  0EFD               	movlw	-3
 14611  012CBC  28E3               	incf	plusw1,w,c
 14612  012CBE  B4D8               	btfsc	status,2,c
 14613  012CC0  D004               	goto	u9270
 14614                           
 14615                           ;stkvar	_bexp @ sp[(-4)+1]
 14616  012CC2  0EFD               	movlw	-3
 14617  012CC4  50E3               	movf	plusw1,w,c
 14618  012CC6  A4D8               	btfss	status,2,c
 14619  012CC8  D00E               	goto	l9487
 14620  012CCA                     u9270:
 14621                           
 14622                           ;stkvar	_b @ sp[(-4)+-4]
 14623  012CCA  0EF8               	movlw	-8
 14624  012CCC  6AE3               	clrf	plusw1,c
 14625  012CCE  0EF9               	movlw	-7
 14626  012CD0  6AE3               	clrf	plusw1,c
 14627  012CD2  0EFA               	movlw	-6
 14628  012CD4  6AE3               	clrf	plusw1,c
 14629  012CD6  0EFB               	movlw	-5
 14630  012CD8  6AE3               	clrf	plusw1,c
 14631                           
 14632                           ;stkvar	_bexp @ sp[(-4)+1]
 14633  012CDA  0EFD               	movlw	-3
 14634  012CDC  50E3               	movf	plusw1,w,c
 14635  012CDE  A4D8               	btfss	status,2,c
 14636  012CE0  D002               	goto	l9487
 14637                           
 14638                           ;stkvar	_signs @ sp[(-4)+3]
 14639  012CE2  0EFF               	movlw	-1
 14640  012CE4  6AE3               	clrf	plusw1,c
 14641  012CE6                     l9487:
 14642                           
 14643                           ;stkvar	_bexp @ sp[(-4)+1]
 14644  012CE6  0EFD               	movlw	-3
 14645  012CE8  A0E3               	btfss	plusw1,0,c
 14646  012CEA  D009               	goto	l9491
 14647                           
 14648                           ;stkvar	_b @ sp[(-4)+-4]
 14649  012CEC  0EFA               	movlw	250
 14650  012CEE  24E1               	addwf	fsr1l,w,c
 14651  012CF0  6ED9               	movwf	fsr2l,c
 14652  012CF2  0EFF               	movlw	255
 14653  012CF4  20E2               	addwfc	fsr1h,w,c
 14654  012CF6  6EDA               	movwf	fsr2h,c
 14655  012CF8  0E00               	movlw	0
 14656  012CFA  8EDB               	bsf	plusw2,7,c
 14657  012CFC  D008               	goto	l9493
 14658  012CFE                     l9491:
 14659                           
 14660                           ;stkvar	_b @ sp[(-4)+-4]
 14661  012CFE  0EFA               	movlw	250
 14662  012D00  24E1               	addwf	fsr1l,w,c
 14663  012D02  6ED9               	movwf	fsr2l,c
 14664  012D04  0EFF               	movlw	255
 14665  012D06  20E2               	addwfc	fsr1h,w,c
 14666  012D08  6EDA               	movwf	fsr2h,c
 14667  012D0A  0E7F               	movlw	127
 14668  012D0C  16DF               	andwf	indf2,f,c
 14669  012D0E                     l9493:
 14670                           
 14671                           ;stkvar	_b @ sp[(-4)+-4]
 14672  012D0E  0EFB               	movlw	251
 14673  012D10  24E1               	addwf	fsr1l,w,c
 14674  012D12  6ED9               	movwf	fsr2l,c
 14675  012D14  0EFF               	movlw	255
 14676  012D16  20E2               	addwfc	fsr1h,w,c
 14677  012D18  6EDA               	movwf	fsr2h,c
 14678                           
 14679                           ;stkvar	_bexp @ sp[(-4)+1]
 14680  012D1A  0EFD               	movlw	-3
 14681  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14682  012D22  90D8               	bcf	status,0,c
 14683  012D24  303D               	rrcf	(btemp+11)^0,w,c
 14684  012D26  6EDF               	movwf	indf2,c
 14685                           
 14686                           ;stkvar	_signs @ sp[(-4)+3]
 14687  012D28  0EFF               	movlw	-1
 14688  012D2A  AEE3               	btfss	plusw1,7,c
 14689  012D2C  D008               	goto	l9499
 14690                           
 14691                           ;stkvar	_b @ sp[(-4)+-4]
 14692  012D2E  0EFB               	movlw	251
 14693  012D30  24E1               	addwf	fsr1l,w,c
 14694  012D32  6ED9               	movwf	fsr2l,c
 14695  012D34  0EFF               	movlw	255
 14696  012D36  20E2               	addwfc	fsr1h,w,c
 14697  012D38  6EDA               	movwf	fsr2h,c
 14698  012D3A  0E00               	movlw	0
 14699  012D3C  8EDB               	bsf	plusw2,7,c
 14700  012D3E                     l9499:
 14701                           
 14702                           ;stkvar	_b @ sp[(-4)+-4]
 14703  012D3E  0EF8               	movlw	-8
 14704  012D40  006F FF8C  F032    	movff	plusw1,btemp
 14705  012D46  0EF9               	movlw	-7
 14706  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 14707  012D4E  0EFA               	movlw	-6
 14708  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 14709  012D56  0EFB               	movlw	-5
 14710  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 14711  012D5E                     l2579:
 14712                           
 14713                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14714  012D5E  0EF4               	movlw	244
 14715  012D60  26E1               	addwf	fsr1l,f,c
 14716  012D62  0EFF               	movlw	255
 14717  012D64  22E2               	addwfc	fsr1h,f,c
 14718  012D66  0012               	return		;funcret
 14719  012D68                     __end_of___fladd:
 14720                           	opt callstack 0
 14721                           
 14722 ;; *************** function ___flneg *****************
 14723 ;; Defined at:
 14724 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14725 ;; Parameters:    Size  Location     Type
 14726 ;;  f1              4  [STACK] unsigned char 
 14727 ;; Auto vars:     Size  Location     Type
 14728 ;;		None
 14729 ;; Return value:  Size  Location     Type
 14730 ;;                  4  [STACK] unsigned char 
 14731 ;; Registers used:
 14732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/5
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14742 ;;Total ram usage:        0 bytes
 14743 ;; Hardware stack levels used:    1
 14744 ;; Hardware stack levels required when called:    6
 14745 ;; This function calls:
 14746 ;;		Nothing
 14747 ;; This function is called by:
 14748 ;;		_efgtoa
 14749 ;; This function uses a reentrant model
 14750 ;;
 14751                           
 14752                           	psect	text53
 14753  017A4A                     __ptext53:
 14754                           	opt callstack 0
 14755  017A4A                     ___flneg:
 14756                           	opt callstack 17
 14757                           
 14758                           ;stkvar	_f1 @ sp[(0)+-4]
 14759                           
 14760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14761                           ;incstack = 0
 14762  017A4A  0EFC               	movlw	-4
 14763  017A4C  50E3               	movf	plusw1,w,c
 14764  017A4E  E10A               	bnz	u10580
 14765  017A50  0EFD               	movlw	-3
 14766  017A52  50E3               	movf	plusw1,w,c
 14767  017A54  E107               	bnz	u10580
 14768  017A56  0EFE               	movlw	-2
 14769  017A58  50E3               	movf	plusw1,w,c
 14770  017A5A  E104               	bnz	u10580
 14771  017A5C  0EFF               	movlw	-1
 14772  017A5E  50E3               	movf	plusw1,w,c
 14773  017A60  B4D8               	btfsc	status,2,c
 14774  017A62  D002               	goto	l10167
 14775  017A64                     u10580:
 14776                           
 14777                           ;stkvar	_f1 @ sp[(0)+-4]
 14778  017A64  0EFF               	movlw	-1
 14779  017A66  7EE3               	btg	plusw1,7,c
 14780  017A68                     l10167:
 14781                           
 14782                           ;stkvar	_f1 @ sp[(0)+-4]
 14783  017A68  0EFC               	movlw	-4
 14784  017A6A  006F FF8C  F032    	movff	plusw1,btemp
 14785  017A70  0EFD               	movlw	-3
 14786  017A72  006F FF8C  F033    	movff	plusw1,btemp+1
 14787  017A78  0EFE               	movlw	-2
 14788  017A7A  006F FF8C  F034    	movff	plusw1,btemp+2
 14789  017A80  0EFF               	movlw	-1
 14790  017A82  006F FF8C  F035    	movff	plusw1,btemp+3
 14791                           
 14792                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14793  017A88  52E5               	movf	postdec1,f,c
 14794  017A8A  52E5               	movf	postdec1,f,c
 14795  017A8C  52E5               	movf	postdec1,f,c
 14796  017A8E  52E5               	movf	postdec1,f,c
 14797  017A90  0012               	return		;funcret
 14798  017A92                     __end_of___flneg:
 14799                           	opt callstack 0
 14800                           
 14801 ;; *************** function ___flmul *****************
 14802 ;; Defined at:
 14803 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14804 ;; Parameters:    Size  Location     Type
 14805 ;;  b               4  [STACK] unsigned char 
 14806 ;;  a               4  [STACK] unsigned char 
 14807 ;; Auto vars:     Size  Location     Type
 14808 ;;  prod            4  [STACK] struct .
 14809 ;;  grs             4  [STACK] unsigned long 
 14810 ;;  temp            2  [STACK] struct .
 14811 ;;  bexp            1  [STACK] unsigned char 
 14812 ;;  aexp            1  [STACK] unsigned char 
 14813 ;;  sign            1  [STACK] unsigned char 
 14814 ;; Return value:  Size  Location     Type
 14815 ;;                  4  [STACK] unsigned char 
 14816 ;; Registers used:
 14817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14818 ;; Tracked objects:
 14819 ;;		On entry : 0/39
 14820 ;;		On exit  : 0/0
 14821 ;;		Unchanged: 0/0
 14822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14827 ;;Total ram usage:        0 bytes
 14828 ;; Hardware stack levels used:    1
 14829 ;; Hardware stack levels required when called:    6
 14830 ;; This function calls:
 14831 ;;		Nothing
 14832 ;; This function is called by:
 14833 ;;		_conv_raw_result
 14834 ;;		_lp_filter
 14835 ;;		_efgtoa
 14836 ;; This function uses a reentrant model
 14837 ;;
 14838                           
 14839                           	psect	text54
 14840  011D82                     __ptext54:
 14841                           	opt callstack 0
 14842  011D82                     ___flmul:
 14843                           	opt callstack 0
 14844                           
 14845                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14846  011D82  0E0D               	movlw	13
 14847  011D84  26E1               	addwf	fsr1l,f,c
 14848  011D86  0E00               	movlw	0
 14849  011D88  22E2               	addwfc	fsr1h,f,c
 14850                           
 14851                           ;stkvar	_b @ sp[(-13)+-4]
 14852                           
 14853                           ;incstack = 0
 14854  011D8A  0EF2               	movlw	242
 14855  011D8C  24E1               	addwf	fsr1l,w,c
 14856  011D8E  6ED9               	movwf	fsr2l,c
 14857  011D90  0EFF               	movlw	255
 14858  011D92  20E2               	addwfc	fsr1h,w,c
 14859  011D94  6EDA               	movwf	fsr2h,c
 14860  011D96  50DF               	movf	indf2,w,c
 14861  011D98  6E3D               	movwf	(btemp+11)^0,c
 14862  011D9A  0E80               	movlw	128
 14863  011D9C  163D               	andwf	(btemp+11)^0,f,c
 14864                           
 14865                           ;stkvar	_sign @ sp[(-13)+12]
 14866  011D9E  0EFF               	movlw	-1
 14867  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14868                           
 14869                           ;stkvar	_b @ sp[(-13)+-4]
 14870  011DA6  0EF2               	movlw	242
 14871  011DA8  24E1               	addwf	fsr1l,w,c
 14872  011DAA  6ED9               	movwf	fsr2l,c
 14873  011DAC  0EFF               	movlw	255
 14874  011DAE  20E2               	addwfc	fsr1h,w,c
 14875  011DB0  6EDA               	movwf	fsr2h,c
 14876  011DB2  50DF               	movf	indf2,w,c
 14877  011DB4  6E3D               	movwf	(btemp+11)^0,c
 14878  011DB6  90D8               	bcf	status,0,c
 14879  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 14880  011DBA  6E3C               	movwf	(btemp+10)^0,c
 14881                           
 14882                           ;stkvar	_bexp @ sp[(-13)+10]
 14883  011DBC  0EFD               	movlw	-3
 14884  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14885                           
 14886                           ;stkvar	_b @ sp[(-13)+-4]
 14887  011DC4  0EF1               	movlw	241
 14888  011DC6  24E1               	addwf	fsr1l,w,c
 14889  011DC8  6ED9               	movwf	fsr2l,c
 14890  011DCA  0EFF               	movlw	255
 14891  011DCC  20E2               	addwfc	fsr1h,w,c
 14892  011DCE  6EDA               	movwf	fsr2h,c
 14893  011DD0  AEDF               	btfss	indf2,7,c
 14894  011DD2  D002               	goto	l9883
 14895                           
 14896                           ;stkvar	_bexp @ sp[(-13)+10]
 14897  011DD4  0EFD               	movlw	-3
 14898  011DD6  80E3               	bsf	plusw1,0,c
 14899  011DD8                     l9883:
 14900                           
 14901                           ;stkvar	_bexp @ sp[(-13)+10]
 14902  011DD8  0EFD               	movlw	-3
 14903  011DDA  50E3               	movf	plusw1,w,c
 14904  011DDC  B4D8               	btfsc	status,2,c
 14905  011DDE  D01F               	goto	l9891
 14906                           
 14907                           ;stkvar	_bexp @ sp[(-13)+10]
 14908  011DE0  0EFD               	movlw	-3
 14909  011DE2  28E3               	incf	plusw1,w,c
 14910  011DE4  A4D8               	btfss	status,2,c
 14911  011DE6  D018               	goto	l9889
 14912  011DE8  0E00               	movlw	0
 14913  011DEA  6E3A               	movwf	(btemp+8)^0,c
 14914  011DEC  0E00               	movlw	0
 14915  011DEE  6E3B               	movwf	(btemp+9)^0,c
 14916  011DF0  0E00               	movlw	0
 14917  011DF2  6E3C               	movwf	(btemp+10)^0,c
 14918  011DF4  0E00               	movlw	0
 14919  011DF6  6E3D               	movwf	(btemp+11)^0,c
 14920                           
 14921                           ;stkvar	_b @ sp[(-13)+-4]
 14922  011DF8  0EEF               	movlw	-17
 14923  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14924  011E00  0EF0               	movlw	-16
 14925  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14926  011E08  0EF1               	movlw	-15
 14927  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14928  011E10  0EF2               	movlw	-14
 14929  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14930  011E18                     l9889:
 14931                           
 14932                           ;stkvar	_b @ sp[(-13)+-4]
 14933  011E18  0EF1               	movlw	-15
 14934  011E1A  8EE3               	bsf	plusw1,7,c
 14935  011E1C  D018               	goto	l9893
 14936  011E1E                     l9891:
 14937  011E1E  0E00               	movlw	0
 14938  011E20  6E3A               	movwf	(btemp+8)^0,c
 14939  011E22  0E00               	movlw	0
 14940  011E24  6E3B               	movwf	(btemp+9)^0,c
 14941  011E26  0E00               	movlw	0
 14942  011E28  6E3C               	movwf	(btemp+10)^0,c
 14943  011E2A  0E00               	movlw	0
 14944  011E2C  6E3D               	movwf	(btemp+11)^0,c
 14945                           
 14946                           ;stkvar	_b @ sp[(-13)+-4]
 14947  011E2E  0EEF               	movlw	-17
 14948  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14949  011E36  0EF0               	movlw	-16
 14950  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14951  011E3E  0EF1               	movlw	-15
 14952  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14953  011E46  0EF2               	movlw	-14
 14954  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14955  011E4E                     l9893:
 14956                           
 14957                           ;stkvar	_a @ sp[(-13)+-8]
 14958  011E4E  0EEE               	movlw	238
 14959  011E50  24E1               	addwf	fsr1l,w,c
 14960  011E52  6ED9               	movwf	fsr2l,c
 14961  011E54  0EFF               	movlw	255
 14962  011E56  20E2               	addwfc	fsr1h,w,c
 14963  011E58  6EDA               	movwf	fsr2h,c
 14964  011E5A  50DF               	movf	indf2,w,c
 14965  011E5C  6E3D               	movwf	(btemp+11)^0,c
 14966  011E5E  0E80               	movlw	128
 14967  011E60  163D               	andwf	(btemp+11)^0,f,c
 14968                           
 14969                           ;stkvar	_sign @ sp[(-13)+12]
 14970  011E62  50E1               	movf	fsr1l,w,c
 14971  011E64  0FFF               	addlw	-1
 14972  011E66  6ED9               	movwf	fsr2l,c
 14973  011E68  50E2               	movf	fsr1h,w,c
 14974  011E6A  6EDA               	movwf	fsr2h,c
 14975  011E6C  0EFF               	movlw	255
 14976  011E6E  22DA               	addwfc	fsr2h,f,c
 14977  011E70  503D               	movf	(btemp+11)^0,w,c
 14978  011E72  1ADF               	xorwf	indf2,f,c
 14979                           
 14980                           ;stkvar	_a @ sp[(-13)+-8]
 14981  011E74  0EEE               	movlw	238
 14982  011E76  24E1               	addwf	fsr1l,w,c
 14983  011E78  6ED9               	movwf	fsr2l,c
 14984  011E7A  0EFF               	movlw	255
 14985  011E7C  20E2               	addwfc	fsr1h,w,c
 14986  011E7E  6EDA               	movwf	fsr2h,c
 14987  011E80  50DF               	movf	indf2,w,c
 14988  011E82  6E3D               	movwf	(btemp+11)^0,c
 14989  011E84  90D8               	bcf	status,0,c
 14990  011E86  343D               	rlcf	(btemp+11)^0,w,c
 14991  011E88  6E3C               	movwf	(btemp+10)^0,c
 14992                           
 14993                           ;stkvar	_aexp @ sp[(-13)+11]
 14994  011E8A  0EFE               	movlw	-2
 14995  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14996                           
 14997                           ;stkvar	_a @ sp[(-13)+-8]
 14998  011E92  0EED               	movlw	237
 14999  011E94  24E1               	addwf	fsr1l,w,c
 15000  011E96  6ED9               	movwf	fsr2l,c
 15001  011E98  0EFF               	movlw	255
 15002  011E9A  20E2               	addwfc	fsr1h,w,c
 15003  011E9C  6EDA               	movwf	fsr2h,c
 15004  011E9E  AEDF               	btfss	indf2,7,c
 15005  011EA0  D002               	goto	l9901
 15006                           
 15007                           ;stkvar	_aexp @ sp[(-13)+11]
 15008  011EA2  0EFE               	movlw	-2
 15009  011EA4  80E3               	bsf	plusw1,0,c
 15010  011EA6                     l9901:
 15011                           
 15012                           ;stkvar	_aexp @ sp[(-13)+11]
 15013  011EA6  0EFE               	movlw	-2
 15014  011EA8  50E3               	movf	plusw1,w,c
 15015  011EAA  B4D8               	btfsc	status,2,c
 15016  011EAC  D01F               	goto	l9909
 15017                           
 15018                           ;stkvar	_aexp @ sp[(-13)+11]
 15019  011EAE  0EFE               	movlw	-2
 15020  011EB0  28E3               	incf	plusw1,w,c
 15021  011EB2  A4D8               	btfss	status,2,c
 15022  011EB4  D018               	goto	l9907
 15023  011EB6  0E00               	movlw	0
 15024  011EB8  6E3A               	movwf	(btemp+8)^0,c
 15025  011EBA  0E00               	movlw	0
 15026  011EBC  6E3B               	movwf	(btemp+9)^0,c
 15027  011EBE  0E00               	movlw	0
 15028  011EC0  6E3C               	movwf	(btemp+10)^0,c
 15029  011EC2  0E00               	movlw	0
 15030  011EC4  6E3D               	movwf	(btemp+11)^0,c
 15031                           
 15032                           ;stkvar	_a @ sp[(-13)+-8]
 15033  011EC6  0EEB               	movlw	-21
 15034  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15035  011ECE  0EEC               	movlw	-20
 15036  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15037  011ED6  0EED               	movlw	-19
 15038  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15039  011EDE  0EEE               	movlw	-18
 15040  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15041  011EE6                     l9907:
 15042                           
 15043                           ;stkvar	_a @ sp[(-13)+-8]
 15044  011EE6  0EED               	movlw	-19
 15045  011EE8  8EE3               	bsf	plusw1,7,c
 15046  011EEA  D018               	goto	l9911
 15047  011EEC                     l9909:
 15048  011EEC  0E00               	movlw	0
 15049  011EEE  6E3A               	movwf	(btemp+8)^0,c
 15050  011EF0  0E00               	movlw	0
 15051  011EF2  6E3B               	movwf	(btemp+9)^0,c
 15052  011EF4  0E00               	movlw	0
 15053  011EF6  6E3C               	movwf	(btemp+10)^0,c
 15054  011EF8  0E00               	movlw	0
 15055  011EFA  6E3D               	movwf	(btemp+11)^0,c
 15056                           
 15057                           ;stkvar	_a @ sp[(-13)+-8]
 15058  011EFC  0EEB               	movlw	-21
 15059  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15060  011F04  0EEC               	movlw	-20
 15061  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15062  011F0C  0EED               	movlw	-19
 15063  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15064  011F14  0EEE               	movlw	-18
 15065  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15066  011F1C                     l9911:
 15067                           
 15068                           ;stkvar	_aexp @ sp[(-13)+11]
 15069  011F1C  0EFE               	movlw	-2
 15070  011F1E  50E3               	movf	plusw1,w,c
 15071  011F20  B4D8               	btfsc	status,2,c
 15072  011F22  D004               	goto	u10210
 15073                           
 15074                           ;stkvar	_bexp @ sp[(-13)+10]
 15075  011F24  0EFD               	movlw	-3
 15076  011F26  50E3               	movf	plusw1,w,c
 15077  011F28  A4D8               	btfss	status,2,c
 15078  011F2A  D009               	goto	l9919
 15079  011F2C                     u10210:
 15080  011F2C  0E00               	movlw	0
 15081  011F2E  6E32               	movwf	btemp^0,c
 15082  011F30  0E00               	movlw	0
 15083  011F32  6E33               	movwf	(btemp+1)^0,c
 15084  011F34  0E00               	movlw	0
 15085  011F36  6E34               	movwf	(btemp+2)^0,c
 15086  011F38  0E00               	movlw	0
 15087  011F3A  6E35               	movwf	(btemp+3)^0,c
 15088  011F3C  D332               	goto	l2660
 15089  011F3E                     l9919:
 15090                           
 15091                           ;stkvar	_b @ sp[(-13)+-4]
 15092  011F3E  0EEF               	movlw	-17
 15093  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 15094                           
 15095                           ;stkvar	_a @ sp[(-13)+-8]
 15096  011F46  0EED               	movlw	237
 15097  011F48  24E1               	addwf	fsr1l,w,c
 15098  011F4A  6ED9               	movwf	fsr2l,c
 15099  011F4C  0EFF               	movlw	255
 15100  011F4E  20E2               	addwfc	fsr1h,w,c
 15101  011F50  6EDA               	movwf	fsr2h,c
 15102  011F52  50DF               	movf	indf2,w,c
 15103  011F54  023D               	mulwf	(btemp+11)^0,c
 15104                           
 15105                           ;stkvar	_temp @ sp[(-13)+8]
 15106  011F56  0EFB               	movlw	-5
 15107  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 15108  011F5E  0EFC               	movlw	-4
 15109  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 15110                           
 15111                           ;stkvar	_temp @ sp[(-13)+8]
 15112  011F66  0EFB               	movlw	-5
 15113  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 15114  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15115  011F74  6A37               	clrf	(btemp+5)^0,c
 15116  011F76  6A38               	clrf	(btemp+6)^0,c
 15117  011F78  6A39               	clrf	(btemp+7)^0,c
 15118                           
 15119                           ;stkvar	_grs @ sp[(-13)+4]
 15120  011F7A  0EF7               	movlw	-9
 15121  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15122  011F82  0EF8               	movlw	-8
 15123  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15124  011F8A  0EF9               	movlw	-7
 15125  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15126  011F92  0EFA               	movlw	-6
 15127  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15128                           
 15129                           ;stkvar	_temp @ sp[(-13)+8]
 15130  011F9A  0EFC               	movlw	252
 15131  011F9C  24E1               	addwf	fsr1l,w,c
 15132  011F9E  6ED9               	movwf	fsr2l,c
 15133  011FA0  0EFF               	movlw	255
 15134  011FA2  20E2               	addwfc	fsr1h,w,c
 15135  011FA4  6EDA               	movwf	fsr2h,c
 15136  011FA6  50DF               	movf	indf2,w,c
 15137  011FA8  6E3D               	movwf	(btemp+11)^0,c
 15138  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15139  011FB0  6A37               	clrf	(btemp+5)^0,c
 15140  011FB2  6A38               	clrf	(btemp+6)^0,c
 15141  011FB4  6A39               	clrf	(btemp+7)^0,c
 15142                           
 15143                           ;stkvar	_prod @ sp[(-13)+0]
 15144  011FB6  0EF3               	movlw	-13
 15145  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15146  011FBE  0EF4               	movlw	-12
 15147  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15148  011FC6  0EF5               	movlw	-11
 15149  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15150  011FCE  0EF6               	movlw	-10
 15151  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15152                           
 15153                           ;stkvar	_b @ sp[(-13)+-4]
 15154  011FD6  0EF0               	movlw	240
 15155  011FD8  24E1               	addwf	fsr1l,w,c
 15156  011FDA  6ED9               	movwf	fsr2l,c
 15157  011FDC  0EFF               	movlw	255
 15158  011FDE  20E2               	addwfc	fsr1h,w,c
 15159  011FE0  6EDA               	movwf	fsr2h,c
 15160  011FE2  50DF               	movf	indf2,w,c
 15161  011FE4  6E3D               	movwf	(btemp+11)^0,c
 15162                           
 15163                           ;stkvar	_a @ sp[(-13)+-8]
 15164  011FE6  0EEC               	movlw	236
 15165  011FE8  24E1               	addwf	fsr1l,w,c
 15166  011FEA  6ED9               	movwf	fsr2l,c
 15167  011FEC  0EFF               	movlw	255
 15168  011FEE  20E2               	addwfc	fsr1h,w,c
 15169  011FF0  6EDA               	movwf	fsr2h,c
 15170  011FF2  50DF               	movf	indf2,w,c
 15171  011FF4  023D               	mulwf	(btemp+11)^0,c
 15172                           
 15173                           ;stkvar	_temp @ sp[(-13)+8]
 15174  011FF6  0EFB               	movlw	-5
 15175  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 15176  011FFE  0EFC               	movlw	-4
 15177  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 15178                           
 15179                           ;stkvar	_grs @ sp[(-13)+4]
 15180  012006  50E1               	movf	fsr1l,w,c
 15181  012008  0FF7               	addlw	-9
 15182  01200A  6ED9               	movwf	fsr2l,c
 15183  01200C  50E2               	movf	fsr1h,w,c
 15184  01200E  6EDA               	movwf	fsr2h,c
 15185  012010  0EFF               	movlw	255
 15186  012012  22DA               	addwfc	fsr2h,f,c
 15187                           
 15188                           ;stkvar	_temp @ sp[(-13)+8]
 15189  012014  0EFB               	movlw	-5
 15190  012016  50E3               	movf	plusw1,w,c
 15191  012018  26DE               	addwf	postinc2,f,c
 15192  01201A  0E00               	movlw	0
 15193  01201C  22DE               	addwfc	postinc2,f,c
 15194  01201E  22DE               	addwfc	postinc2,f,c
 15195  012020  22DE               	addwfc	postinc2,f,c
 15196                           
 15197                           ;stkvar	_prod @ sp[(-13)+0]
 15198  012022  50E1               	movf	fsr1l,w,c
 15199  012024  0FF3               	addlw	-13
 15200  012026  6ED9               	movwf	fsr2l,c
 15201  012028  50E2               	movf	fsr1h,w,c
 15202  01202A  6EDA               	movwf	fsr2h,c
 15203  01202C  0EFF               	movlw	255
 15204  01202E  22DA               	addwfc	fsr2h,f,c
 15205                           
 15206                           ;stkvar	_temp @ sp[(-13)+8]
 15207  012030  0EFC               	movlw	252
 15208  012032  24E1               	addwf	fsr1l,w,c
 15209  012034  6EE9               	movwf	fsr0l,c
 15210  012036  0EFF               	movlw	255
 15211  012038  20E2               	addwfc	fsr1h,w,c
 15212  01203A  6EEA               	movwf	fsr0h,c
 15213  01203C  50EF               	movf	indf0,w,c
 15214  01203E  26DE               	addwf	postinc2,f,c
 15215  012040  0E00               	movlw	0
 15216  012042  22DE               	addwfc	postinc2,f,c
 15217  012044  22DE               	addwfc	postinc2,f,c
 15218  012046  22DE               	addwfc	postinc2,f,c
 15219                           
 15220                           ;stkvar	_b @ sp[(-13)+-4]
 15221  012048  0EF1               	movlw	241
 15222  01204A  24E1               	addwf	fsr1l,w,c
 15223  01204C  6ED9               	movwf	fsr2l,c
 15224  01204E  0EFF               	movlw	255
 15225  012050  20E2               	addwfc	fsr1h,w,c
 15226  012052  6EDA               	movwf	fsr2h,c
 15227  012054  50DF               	movf	indf2,w,c
 15228  012056  6E3D               	movwf	(btemp+11)^0,c
 15229                           
 15230                           ;stkvar	_a @ sp[(-13)+-8]
 15231  012058  0EEB               	movlw	-21
 15232  01205A  50E3               	movf	plusw1,w,c
 15233  01205C  023D               	mulwf	(btemp+11)^0,c
 15234                           
 15235                           ;stkvar	_temp @ sp[(-13)+8]
 15236  01205E  0EFB               	movlw	-5
 15237  012060  006F FFCF FFE3     	movff	prodl,plusw1
 15238  012066  0EFC               	movlw	-4
 15239  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 15240                           
 15241                           ;stkvar	_grs @ sp[(-13)+4]
 15242  01206E  50E1               	movf	fsr1l,w,c
 15243  012070  0FF7               	addlw	-9
 15244  012072  6ED9               	movwf	fsr2l,c
 15245  012074  50E2               	movf	fsr1h,w,c
 15246  012076  6EDA               	movwf	fsr2h,c
 15247  012078  0EFF               	movlw	255
 15248  01207A  22DA               	addwfc	fsr2h,f,c
 15249                           
 15250                           ;stkvar	_temp @ sp[(-13)+8]
 15251  01207C  0EFB               	movlw	-5
 15252  01207E  50E3               	movf	plusw1,w,c
 15253  012080  26DE               	addwf	postinc2,f,c
 15254  012082  0E00               	movlw	0
 15255  012084  22DE               	addwfc	postinc2,f,c
 15256  012086  22DE               	addwfc	postinc2,f,c
 15257  012088  22DE               	addwfc	postinc2,f,c
 15258                           
 15259                           ;stkvar	_prod @ sp[(-13)+0]
 15260  01208A  50E1               	movf	fsr1l,w,c
 15261  01208C  0FF3               	addlw	-13
 15262  01208E  6ED9               	movwf	fsr2l,c
 15263  012090  50E2               	movf	fsr1h,w,c
 15264  012092  6EDA               	movwf	fsr2h,c
 15265  012094  0EFF               	movlw	255
 15266  012096  22DA               	addwfc	fsr2h,f,c
 15267                           
 15268                           ;stkvar	_temp @ sp[(-13)+8]
 15269  012098  0EFC               	movlw	252
 15270  01209A  24E1               	addwf	fsr1l,w,c
 15271  01209C  6EE9               	movwf	fsr0l,c
 15272  01209E  0EFF               	movlw	255
 15273  0120A0  20E2               	addwfc	fsr1h,w,c
 15274  0120A2  6EEA               	movwf	fsr0h,c
 15275  0120A4  50EF               	movf	indf0,w,c
 15276  0120A6  26DE               	addwf	postinc2,f,c
 15277  0120A8  0E00               	movlw	0
 15278  0120AA  22DE               	addwfc	postinc2,f,c
 15279  0120AC  22DE               	addwfc	postinc2,f,c
 15280  0120AE  22DE               	addwfc	postinc2,f,c
 15281                           
 15282                           ;stkvar	_grs @ sp[(-13)+4]
 15283  0120B0  50E1               	movf	fsr1l,w,c
 15284  0120B2  0FF7               	addlw	-9
 15285  0120B4  6ED9               	movwf	fsr2l,c
 15286  0120B6  50E2               	movf	fsr1h,w,c
 15287  0120B8  6EDA               	movwf	fsr2h,c
 15288  0120BA  0EFF               	movlw	255
 15289  0120BC  22DA               	addwfc	fsr2h,f,c
 15290  0120BE  0E08               	movlw	8
 15291  0120C0                     u10225:
 15292  0120C0  90D8               	bcf	status,0,c
 15293  0120C2  36DE               	rlcf	postinc2,f,c
 15294  0120C4  36DE               	rlcf	postinc2,f,c
 15295  0120C6  36DE               	rlcf	postinc2,f,c
 15296  0120C8  36DD               	rlcf	postdec2,f,c
 15297  0120CA  52DD               	movf	postdec2,f,c
 15298  0120CC  52DD               	movf	postdec2,f,c
 15299  0120CE  2EE8               	decfsz	wreg,f,c
 15300  0120D0  D7F7               	goto	u10225
 15301                           
 15302                           ;stkvar	_b @ sp[(-13)+-4]
 15303  0120D2  0EF0               	movlw	240
 15304  0120D4  24E1               	addwf	fsr1l,w,c
 15305  0120D6  6ED9               	movwf	fsr2l,c
 15306  0120D8  0EFF               	movlw	255
 15307  0120DA  20E2               	addwfc	fsr1h,w,c
 15308  0120DC  6EDA               	movwf	fsr2h,c
 15309  0120DE  50DF               	movf	indf2,w,c
 15310  0120E0  6E3D               	movwf	(btemp+11)^0,c
 15311                           
 15312                           ;stkvar	_a @ sp[(-13)+-8]
 15313  0120E2  0EEB               	movlw	-21
 15314  0120E4  50E3               	movf	plusw1,w,c
 15315  0120E6  023D               	mulwf	(btemp+11)^0,c
 15316                           
 15317                           ;stkvar	_temp @ sp[(-13)+8]
 15318  0120E8  0EFB               	movlw	-5
 15319  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 15320  0120F0  0EFC               	movlw	-4
 15321  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 15322                           
 15323                           ;stkvar	_temp @ sp[(-13)+8]
 15324  0120F8  0EFB               	movlw	-5
 15325  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15326  012100  0EFC               	movlw	-4
 15327  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 15328                           
 15329                           ;stkvar	_grs @ sp[(-13)+4]
 15330  012108  50E1               	movf	fsr1l,w,c
 15331  01210A  0FF7               	addlw	-9
 15332  01210C  6ED9               	movwf	fsr2l,c
 15333  01210E  50E2               	movf	fsr1h,w,c
 15334  012110  6EDA               	movwf	fsr2h,c
 15335  012112  0EFF               	movlw	255
 15336  012114  22DA               	addwfc	fsr2h,f,c
 15337  012116  503C               	movf	(btemp+10)^0,w,c
 15338  012118  26DE               	addwf	postinc2,f,c
 15339  01211A  503D               	movf	(btemp+11)^0,w,c
 15340  01211C  22DE               	addwfc	postinc2,f,c
 15341  01211E  0E00               	movlw	0
 15342  012120  22DE               	addwfc	postinc2,f,c
 15343  012122  22DE               	addwfc	postinc2,f,c
 15344                           
 15345                           ;stkvar	_b @ sp[(-13)+-4]
 15346  012124  0EEF               	movlw	-17
 15347  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 15348                           
 15349                           ;stkvar	_a @ sp[(-13)+-8]
 15350  01212C  0EEC               	movlw	236
 15351  01212E  24E1               	addwf	fsr1l,w,c
 15352  012130  6ED9               	movwf	fsr2l,c
 15353  012132  0EFF               	movlw	255
 15354  012134  20E2               	addwfc	fsr1h,w,c
 15355  012136  6EDA               	movwf	fsr2h,c
 15356  012138  50DF               	movf	indf2,w,c
 15357  01213A  023D               	mulwf	(btemp+11)^0,c
 15358                           
 15359                           ;stkvar	_temp @ sp[(-13)+8]
 15360  01213C  0EFB               	movlw	-5
 15361  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 15362  012144  0EFC               	movlw	-4
 15363  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 15364                           
 15365                           ;stkvar	_temp @ sp[(-13)+8]
 15366  01214C  0EFB               	movlw	-5
 15367  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15368  012154  0EFC               	movlw	-4
 15369  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 15370                           
 15371                           ;stkvar	_grs @ sp[(-13)+4]
 15372  01215C  50E1               	movf	fsr1l,w,c
 15373  01215E  0FF7               	addlw	-9
 15374  012160  6ED9               	movwf	fsr2l,c
 15375  012162  50E2               	movf	fsr1h,w,c
 15376  012164  6EDA               	movwf	fsr2h,c
 15377  012166  0EFF               	movlw	255
 15378  012168  22DA               	addwfc	fsr2h,f,c
 15379  01216A  503C               	movf	(btemp+10)^0,w,c
 15380  01216C  26DE               	addwf	postinc2,f,c
 15381  01216E  503D               	movf	(btemp+11)^0,w,c
 15382  012170  22DE               	addwfc	postinc2,f,c
 15383  012172  0E00               	movlw	0
 15384  012174  22DE               	addwfc	postinc2,f,c
 15385  012176  22DE               	addwfc	postinc2,f,c
 15386                           
 15387                           ;stkvar	_grs @ sp[(-13)+4]
 15388  012178  50E1               	movf	fsr1l,w,c
 15389  01217A  0FF7               	addlw	-9
 15390  01217C  6ED9               	movwf	fsr2l,c
 15391  01217E  50E2               	movf	fsr1h,w,c
 15392  012180  6EDA               	movwf	fsr2h,c
 15393  012182  0EFF               	movlw	255
 15394  012184  22DA               	addwfc	fsr2h,f,c
 15395  012186  0E08               	movlw	8
 15396  012188                     u10235:
 15397  012188  90D8               	bcf	status,0,c
 15398  01218A  36DE               	rlcf	postinc2,f,c
 15399  01218C  36DE               	rlcf	postinc2,f,c
 15400  01218E  36DE               	rlcf	postinc2,f,c
 15401  012190  36DD               	rlcf	postdec2,f,c
 15402  012192  52DD               	movf	postdec2,f,c
 15403  012194  52DD               	movf	postdec2,f,c
 15404  012196  2EE8               	decfsz	wreg,f,c
 15405  012198  D7F7               	goto	u10235
 15406                           
 15407                           ;stkvar	_b @ sp[(-13)+-4]
 15408  01219A  0EEF               	movlw	-17
 15409  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15410                           
 15411                           ;stkvar	_a @ sp[(-13)+-8]
 15412  0121A2  0EEB               	movlw	-21
 15413  0121A4  50E3               	movf	plusw1,w,c
 15414  0121A6  023D               	mulwf	(btemp+11)^0,c
 15415                           
 15416                           ;stkvar	_temp @ sp[(-13)+8]
 15417  0121A8  0EFB               	movlw	-5
 15418  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 15419  0121B0  0EFC               	movlw	-4
 15420  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 15421                           
 15422                           ;stkvar	_temp @ sp[(-13)+8]
 15423  0121B8  0EFB               	movlw	-5
 15424  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15425  0121C0  0EFC               	movlw	-4
 15426  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 15427                           
 15428                           ;stkvar	_grs @ sp[(-13)+4]
 15429  0121C8  50E1               	movf	fsr1l,w,c
 15430  0121CA  0FF7               	addlw	-9
 15431  0121CC  6ED9               	movwf	fsr2l,c
 15432  0121CE  50E2               	movf	fsr1h,w,c
 15433  0121D0  6EDA               	movwf	fsr2h,c
 15434  0121D2  0EFF               	movlw	255
 15435  0121D4  22DA               	addwfc	fsr2h,f,c
 15436  0121D6  503C               	movf	(btemp+10)^0,w,c
 15437  0121D8  26DE               	addwf	postinc2,f,c
 15438  0121DA  503D               	movf	(btemp+11)^0,w,c
 15439  0121DC  22DE               	addwfc	postinc2,f,c
 15440  0121DE  0E00               	movlw	0
 15441  0121E0  22DE               	addwfc	postinc2,f,c
 15442  0121E2  22DE               	addwfc	postinc2,f,c
 15443                           
 15444                           ;stkvar	_b @ sp[(-13)+-4]
 15445  0121E4  0EF0               	movlw	240
 15446  0121E6  24E1               	addwf	fsr1l,w,c
 15447  0121E8  6ED9               	movwf	fsr2l,c
 15448  0121EA  0EFF               	movlw	255
 15449  0121EC  20E2               	addwfc	fsr1h,w,c
 15450  0121EE  6EDA               	movwf	fsr2h,c
 15451  0121F0  50DF               	movf	indf2,w,c
 15452  0121F2  6E3D               	movwf	(btemp+11)^0,c
 15453                           
 15454                           ;stkvar	_a @ sp[(-13)+-8]
 15455  0121F4  0EED               	movlw	237
 15456  0121F6  24E1               	addwf	fsr1l,w,c
 15457  0121F8  6ED9               	movwf	fsr2l,c
 15458  0121FA  0EFF               	movlw	255
 15459  0121FC  20E2               	addwfc	fsr1h,w,c
 15460  0121FE  6EDA               	movwf	fsr2h,c
 15461  012200  50DF               	movf	indf2,w,c
 15462  012202  023D               	mulwf	(btemp+11)^0,c
 15463                           
 15464                           ;stkvar	_temp @ sp[(-13)+8]
 15465  012204  0EFB               	movlw	-5
 15466  012206  006F FFCF FFE3     	movff	prodl,plusw1
 15467  01220C  0EFC               	movlw	-4
 15468  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 15469                           
 15470                           ;stkvar	_temp @ sp[(-13)+8]
 15471  012214  0EFB               	movlw	-5
 15472  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 15473  01221C  0EFC               	movlw	-4
 15474  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15475                           
 15476                           ;stkvar	_prod @ sp[(-13)+0]
 15477  012224  50E1               	movf	fsr1l,w,c
 15478  012226  0FF3               	addlw	-13
 15479  012228  6ED9               	movwf	fsr2l,c
 15480  01222A  50E2               	movf	fsr1h,w,c
 15481  01222C  6EDA               	movwf	fsr2h,c
 15482  01222E  0EFF               	movlw	255
 15483  012230  22DA               	addwfc	fsr2h,f,c
 15484  012232  503C               	movf	(btemp+10)^0,w,c
 15485  012234  26DE               	addwf	postinc2,f,c
 15486  012236  503D               	movf	(btemp+11)^0,w,c
 15487  012238  22DE               	addwfc	postinc2,f,c
 15488  01223A  0E00               	movlw	0
 15489  01223C  22DE               	addwfc	postinc2,f,c
 15490  01223E  22DE               	addwfc	postinc2,f,c
 15491                           
 15492                           ;stkvar	_b @ sp[(-13)+-4]
 15493  012240  0EF1               	movlw	241
 15494  012242  24E1               	addwf	fsr1l,w,c
 15495  012244  6ED9               	movwf	fsr2l,c
 15496  012246  0EFF               	movlw	255
 15497  012248  20E2               	addwfc	fsr1h,w,c
 15498  01224A  6EDA               	movwf	fsr2h,c
 15499  01224C  50DF               	movf	indf2,w,c
 15500  01224E  6E3D               	movwf	(btemp+11)^0,c
 15501                           
 15502                           ;stkvar	_a @ sp[(-13)+-8]
 15503  012250  0EEC               	movlw	236
 15504  012252  24E1               	addwf	fsr1l,w,c
 15505  012254  6ED9               	movwf	fsr2l,c
 15506  012256  0EFF               	movlw	255
 15507  012258  20E2               	addwfc	fsr1h,w,c
 15508  01225A  6EDA               	movwf	fsr2h,c
 15509  01225C  50DF               	movf	indf2,w,c
 15510  01225E  023D               	mulwf	(btemp+11)^0,c
 15511                           
 15512                           ;stkvar	_temp @ sp[(-13)+8]
 15513  012260  0EFB               	movlw	-5
 15514  012262  006F FFCF FFE3     	movff	prodl,plusw1
 15515  012268  0EFC               	movlw	-4
 15516  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 15517                           
 15518                           ;stkvar	_temp @ sp[(-13)+8]
 15519  012270  0EFB               	movlw	-5
 15520  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 15521  012278  0EFC               	movlw	-4
 15522  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15523                           
 15524                           ;stkvar	_prod @ sp[(-13)+0]
 15525  012280  50E1               	movf	fsr1l,w,c
 15526  012282  0FF3               	addlw	-13
 15527  012284  6ED9               	movwf	fsr2l,c
 15528  012286  50E2               	movf	fsr1h,w,c
 15529  012288  6EDA               	movwf	fsr2h,c
 15530  01228A  0EFF               	movlw	255
 15531  01228C  22DA               	addwfc	fsr2h,f,c
 15532  01228E  503C               	movf	(btemp+10)^0,w,c
 15533  012290  26DE               	addwf	postinc2,f,c
 15534  012292  503D               	movf	(btemp+11)^0,w,c
 15535  012294  22DE               	addwfc	postinc2,f,c
 15536  012296  0E00               	movlw	0
 15537  012298  22DE               	addwfc	postinc2,f,c
 15538  01229A  22DE               	addwfc	postinc2,f,c
 15539                           
 15540                           ;stkvar	_b @ sp[(-13)+-4]
 15541  01229C  0EF1               	movlw	241
 15542  01229E  24E1               	addwf	fsr1l,w,c
 15543  0122A0  6ED9               	movwf	fsr2l,c
 15544  0122A2  0EFF               	movlw	255
 15545  0122A4  20E2               	addwfc	fsr1h,w,c
 15546  0122A6  6EDA               	movwf	fsr2h,c
 15547  0122A8  50DF               	movf	indf2,w,c
 15548  0122AA  6E3D               	movwf	(btemp+11)^0,c
 15549                           
 15550                           ;stkvar	_a @ sp[(-13)+-8]
 15551  0122AC  0EED               	movlw	237
 15552  0122AE  24E1               	addwf	fsr1l,w,c
 15553  0122B0  6ED9               	movwf	fsr2l,c
 15554  0122B2  0EFF               	movlw	255
 15555  0122B4  20E2               	addwfc	fsr1h,w,c
 15556  0122B6  6EDA               	movwf	fsr2h,c
 15557  0122B8  50DF               	movf	indf2,w,c
 15558  0122BA  023D               	mulwf	(btemp+11)^0,c
 15559                           
 15560                           ;stkvar	_temp @ sp[(-13)+8]
 15561  0122BC  0EFB               	movlw	-5
 15562  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15563  0122C4  0EFC               	movlw	-4
 15564  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15565                           
 15566                           ;stkvar	_temp @ sp[(-13)+8]
 15567  0122CC  0EFB               	movlw	-5
 15568  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 15569  0122D4  0EFC               	movlw	-4
 15570  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 15571  0122DC  503C               	movf	(btemp+10)^0,w,c
 15572  0122DE  6E36               	movwf	(btemp+4)^0,c
 15573  0122E0  503D               	movf	(btemp+11)^0,w,c
 15574  0122E2  6E37               	movwf	(btemp+5)^0,c
 15575  0122E4  6A38               	clrf	(btemp+6)^0,c
 15576  0122E6  6A39               	clrf	(btemp+7)^0,c
 15577  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 15578  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 15579  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 15580  0122FA  6A36               	clrf	(btemp+4)^0,c
 15581                           
 15582                           ;stkvar	_prod @ sp[(-13)+0]
 15583  0122FC  50E1               	movf	fsr1l,w,c
 15584  0122FE  0FF3               	addlw	-13
 15585  012300  6ED9               	movwf	fsr2l,c
 15586  012302  50E2               	movf	fsr1h,w,c
 15587  012304  6EDA               	movwf	fsr2h,c
 15588  012306  0EFF               	movlw	255
 15589  012308  22DA               	addwfc	fsr2h,f,c
 15590  01230A  5036               	movf	(btemp+4)^0,w,c
 15591  01230C  26DE               	addwf	postinc2,f,c
 15592  01230E  5037               	movf	(btemp+5)^0,w,c
 15593  012310  22DE               	addwfc	postinc2,f,c
 15594  012312  5038               	movf	(btemp+6)^0,w,c
 15595  012314  22DE               	addwfc	postinc2,f,c
 15596  012316  5039               	movf	(btemp+7)^0,w,c
 15597  012318  22DE               	addwfc	postinc2,f,c
 15598                           
 15599                           ;stkvar	_prod @ sp[(-13)+0]
 15600  01231A  50E1               	movf	fsr1l,w,c
 15601  01231C  0FF3               	addlw	-13
 15602  01231E  6ED9               	movwf	fsr2l,c
 15603  012320  50E2               	movf	fsr1h,w,c
 15604  012322  6EDA               	movwf	fsr2h,c
 15605  012324  0EFF               	movlw	255
 15606  012326  22DA               	addwfc	fsr2h,f,c
 15607                           
 15608                           ;stkvar	_grs @ sp[(-13)+4]
 15609  012328  0EFA               	movlw	250
 15610  01232A  24E1               	addwf	fsr1l,w,c
 15611  01232C  6EE9               	movwf	fsr0l,c
 15612  01232E  0EFF               	movlw	255
 15613  012330  20E2               	addwfc	fsr1h,w,c
 15614  012332  6EEA               	movwf	fsr0h,c
 15615  012334  50EF               	movf	indf0,w,c
 15616  012336  26DE               	addwf	postinc2,f,c
 15617  012338  0E00               	movlw	0
 15618  01233A  22DE               	addwfc	postinc2,f,c
 15619  01233C  22DE               	addwfc	postinc2,f,c
 15620  01233E  22DE               	addwfc	postinc2,f,c
 15621                           
 15622                           ;stkvar	_grs @ sp[(-13)+4]
 15623  012340  50E1               	movf	fsr1l,w,c
 15624  012342  0FF7               	addlw	-9
 15625  012344  6ED9               	movwf	fsr2l,c
 15626  012346  50E2               	movf	fsr1h,w,c
 15627  012348  6EDA               	movwf	fsr2h,c
 15628  01234A  0EFF               	movlw	255
 15629  01234C  22DA               	addwfc	fsr2h,f,c
 15630  01234E  0E08               	movlw	8
 15631  012350                     u10245:
 15632  012350  90D8               	bcf	status,0,c
 15633  012352  36DE               	rlcf	postinc2,f,c
 15634  012354  36DE               	rlcf	postinc2,f,c
 15635  012356  36DE               	rlcf	postinc2,f,c
 15636  012358  36DD               	rlcf	postdec2,f,c
 15637  01235A  52DD               	movf	postdec2,f,c
 15638  01235C  52DD               	movf	postdec2,f,c
 15639  01235E  2EE8               	decfsz	wreg,f,c
 15640  012360  D7F7               	goto	u10245
 15641  012362  0E82               	movlw	130
 15642  012364  6E3C               	movwf	(btemp+10)^0,c
 15643  012366  0EFF               	movlw	255
 15644  012368  6E3D               	movwf	(btemp+11)^0,c
 15645                           
 15646                           ;stkvar	_bexp @ sp[(-13)+10]
 15647  01236A  0EFD               	movlw	-3
 15648  01236C  50E3               	movf	plusw1,w,c
 15649  01236E  6E3A               	movwf	(btemp+8)^0,c
 15650  012370  6A3B               	clrf	(btemp+9)^0,c
 15651                           
 15652                           ;stkvar	_aexp @ sp[(-13)+11]
 15653  012372  0EFE               	movlw	-2
 15654  012374  50E3               	movf	plusw1,w,c
 15655  012376  263A               	addwf	(btemp+8)^0,f,c
 15656  012378  0E00               	movlw	0
 15657  01237A  223B               	addwfc	(btemp+9)^0,f,c
 15658  01237C  503C               	movf	(btemp+10)^0,w,c
 15659  01237E  263A               	addwf	(btemp+8)^0,f,c
 15660  012380  503D               	movf	(btemp+11)^0,w,c
 15661  012382  223B               	addwfc	(btemp+9)^0,f,c
 15662                           
 15663                           ;stkvar	_temp @ sp[(-13)+8]
 15664  012384  0EFB               	movlw	-5
 15665  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15666  01238C  0EFC               	movlw	-4
 15667  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15668  012394  D021               	goto	l9981
 15669  012396                     l9971:
 15670                           
 15671                           ;stkvar	_prod @ sp[(-13)+0]
 15672  012396  90D8               	bcf	status,0,c
 15673  012398  0EF3               	movlw	-13
 15674  01239A  36E3               	rlcf	plusw1,f,c
 15675  01239C  0EF4               	movlw	-12
 15676  01239E  36E3               	rlcf	plusw1,f,c
 15677  0123A0  0EF5               	movlw	-11
 15678  0123A2  36E3               	rlcf	plusw1,f,c
 15679  0123A4  0EF6               	movlw	-10
 15680  0123A6  36E3               	rlcf	plusw1,f,c
 15681                           
 15682                           ;stkvar	_grs @ sp[(-13)+4]
 15683  0123A8  0EFA               	movlw	-6
 15684  0123AA  AEE3               	btfss	plusw1,7,c
 15685  0123AC  D002               	goto	l9977
 15686                           
 15687                           ;stkvar	_prod @ sp[(-13)+0]
 15688  0123AE  0EF3               	movlw	-13
 15689  0123B0  80E3               	bsf	plusw1,0,c
 15690  0123B2                     l9977:
 15691                           
 15692                           ;stkvar	_grs @ sp[(-13)+4]
 15693  0123B2  90D8               	bcf	status,0,c
 15694  0123B4  0EF7               	movlw	-9
 15695  0123B6  36E3               	rlcf	plusw1,f,c
 15696  0123B8  0EF8               	movlw	-8
 15697  0123BA  36E3               	rlcf	plusw1,f,c
 15698  0123BC  0EF9               	movlw	-7
 15699  0123BE  36E3               	rlcf	plusw1,f,c
 15700  0123C0  0EFA               	movlw	-6
 15701  0123C2  36E3               	rlcf	plusw1,f,c
 15702                           
 15703                           ;stkvar	_temp @ sp[(-13)+8]
 15704  0123C4  50E1               	movf	fsr1l,w,c
 15705  0123C6  0FFB               	addlw	-5
 15706  0123C8  6ED9               	movwf	fsr2l,c
 15707  0123CA  50E2               	movf	fsr1h,w,c
 15708  0123CC  6EDA               	movwf	fsr2h,c
 15709  0123CE  0EFF               	movlw	255
 15710  0123D0  22DA               	addwfc	fsr2h,f,c
 15711  0123D2  06DE               	decf	postinc2,f,c
 15712  0123D4  0E00               	movlw	0
 15713  0123D6  5ADD               	subwfb	postdec2,f,c
 15714  0123D8                     l9981:
 15715                           
 15716                           ;stkvar	_prod @ sp[(-13)+0]
 15717  0123D8  0EF5               	movlw	-11
 15718  0123DA  AEE3               	btfss	plusw1,7,c
 15719  0123DC  D7DC               	goto	l9971
 15720                           
 15721                           ;stkvar	_aexp @ sp[(-13)+11]
 15722  0123DE  0EFE               	movlw	-2
 15723  0123E0  6AE3               	clrf	plusw1,c
 15724                           
 15725                           ;stkvar	_grs @ sp[(-13)+4]
 15726  0123E2  0EFA               	movlw	-6
 15727  0123E4  AEE3               	btfss	plusw1,7,c
 15728  0123E6  D020               	goto	l9995
 15729                           
 15730                           ;stkvar	_grs @ sp[(-13)+4]
 15731  0123E8  50E1               	movf	fsr1l,w,c
 15732  0123EA  0FF7               	addlw	-9
 15733  0123EC  6ED9               	movwf	fsr2l,c
 15734  0123EE  50E2               	movf	fsr1h,w,c
 15735  0123F0  6EDA               	movwf	fsr2h,c
 15736  0123F2  0EFF               	movlw	255
 15737  0123F4  22DA               	addwfc	fsr2h,f,c
 15738  0123F6  0EFF               	movlw	255
 15739  0123F8  14DE               	andwf	postinc2,w,c
 15740  0123FA  6E3A               	movwf	(btemp+8)^0,c
 15741  0123FC  0EFF               	movlw	255
 15742  0123FE  14DE               	andwf	postinc2,w,c
 15743  012400  6E3B               	movwf	(btemp+9)^0,c
 15744  012402  0EFF               	movlw	255
 15745  012404  14DE               	andwf	postinc2,w,c
 15746  012406  6E3C               	movwf	(btemp+10)^0,c
 15747  012408  0E7F               	movlw	127
 15748  01240A  14DE               	andwf	postinc2,w,c
 15749  01240C  6E3D               	movwf	(btemp+11)^0,c
 15750  01240E  503A               	movf	(btemp+8)^0,w,c
 15751  012410  103B               	iorwf	(btemp+9)^0,w,c
 15752  012412  103C               	iorwf	(btemp+10)^0,w,c
 15753  012414  103D               	iorwf	(btemp+11)^0,w,c
 15754  012416  B4D8               	btfsc	status,2,c
 15755  012418  D004               	goto	l9991
 15756  01241A                     u10280:
 15757                           
 15758                           ;stkvar	_aexp @ sp[(-13)+11]
 15759  01241A  0EFE               	movlw	-2
 15760  01241C  6AE3               	clrf	plusw1,c
 15761  01241E  2AE3               	incf	plusw1,f,c
 15762  012420  D003               	goto	l9995
 15763  012422                     l9991:
 15764                           
 15765                           ;stkvar	_prod @ sp[(-13)+0]
 15766  012422  0EF3               	movlw	-13
 15767  012424  B0E3               	btfsc	plusw1,0,c
 15768  012426  D7F9               	goto	u10280
 15769  012428                     l9995:
 15770                           
 15771                           ;stkvar	_aexp @ sp[(-13)+11]
 15772  012428  0EFE               	movlw	-2
 15773  01242A  50E3               	movf	plusw1,w,c
 15774  01242C  B4D8               	btfsc	status,2,c
 15775  01242E  D036               	goto	l10005
 15776                           
 15777                           ;stkvar	_prod @ sp[(-13)+0]
 15778  012430  50E1               	movf	fsr1l,w,c
 15779  012432  0FF3               	addlw	-13
 15780  012434  6ED9               	movwf	fsr2l,c
 15781  012436  50E2               	movf	fsr1h,w,c
 15782  012438  6EDA               	movwf	fsr2h,c
 15783  01243A  0EFF               	movlw	255
 15784  01243C  22DA               	addwfc	fsr2h,f,c
 15785  01243E  2ADE               	incf	postinc2,f,c
 15786  012440  0E00               	movlw	0
 15787  012442  22DE               	addwfc	postinc2,f,c
 15788  012444  22DE               	addwfc	postinc2,f,c
 15789  012446  22DE               	addwfc	postinc2,f,c
 15790                           
 15791                           ;stkvar	_prod @ sp[(-13)+0]
 15792  012448  0EF6               	movlw	-10
 15793  01244A  A0E3               	btfss	plusw1,0,c
 15794  01244C  D027               	goto	l10005
 15795  01244E  0E01               	movlw	1
 15796  012450  6E3D               	movwf	(btemp+11)^0,c
 15797                           
 15798                           ;stkvar	_prod @ sp[(-13)+0]
 15799  012452  50E1               	movf	fsr1l,w,c
 15800  012454  0FF3               	addlw	-13
 15801  012456  6ED9               	movwf	fsr2l,c
 15802  012458  50E2               	movf	fsr1h,w,c
 15803  01245A  6EDA               	movwf	fsr2h,c
 15804  01245C  0EFF               	movlw	255
 15805  01245E  22DA               	addwfc	fsr2h,f,c
 15806  012460  283D               	incf	(btemp+11)^0,w,c
 15807  012462  52DE               	movf	postinc2,f,c
 15808  012464  D008               	goto	u10320
 15809  012466                     u10325:
 15810  012466  52DE               	movf	postinc2,f,c
 15811  012468  90D8               	bcf	status,0,c
 15812  01246A  BEDC               	btfsc	preinc2,7,c
 15813  01246C  80D8               	bsf	status,0,c
 15814  01246E  32DD               	rrcf	postdec2,f,c
 15815  012470  32DD               	rrcf	postdec2,f,c
 15816  012472  32DD               	rrcf	postdec2,f,c
 15817  012474  32DE               	rrcf	postinc2,f,c
 15818  012476                     u10320:
 15819  012476  2EE8               	decfsz	wreg,f,c
 15820  012478  D7F6               	goto	u10325
 15821                           
 15822                           ;stkvar	_temp @ sp[(-13)+8]
 15823  01247A  0EFB               	movlw	-5
 15824  01247C  50E3               	movf	plusw1,w,c
 15825  01247E  0F01               	addlw	1
 15826  012480  6E32               	movwf	btemp^0,c
 15827  012482  0EFB               	movlw	-5
 15828  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 15829  01248A  6A32               	clrf	btemp^0,c
 15830  01248C  0EFC               	movlw	-4
 15831  01248E  50E3               	movf	plusw1,w,c
 15832  012490  2032               	addwfc	btemp^0,w,c
 15833  012492  6E32               	movwf	btemp^0,c
 15834  012494  0EFC               	movlw	-4
 15835  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 15836  01249C                     l10005:
 15837                           
 15838                           ;stkvar	_temp @ sp[(-13)+8]
 15839  01249C  0EFC               	movlw	-4
 15840  01249E  BEE3               	btfsc	plusw1,7,c
 15841  0124A0  D020               	goto	l10009
 15842  0124A2  0EFC               	movlw	-4
 15843  0124A4  50E3               	movf	plusw1,w,c
 15844  0124A6  E104               	bnz	u10330
 15845  0124A8  0EFB               	movlw	-5
 15846  0124AA  28E3               	incf	plusw1,w,c
 15847  0124AC  A0D8               	btfss	status,0,c
 15848  0124AE  D019               	goto	l10009
 15849  0124B0                     u10330:
 15850  0124B0  0E00               	movlw	0
 15851  0124B2  6E3A               	movwf	(btemp+8)^0,c
 15852  0124B4  0E00               	movlw	0
 15853  0124B6  6E3B               	movwf	(btemp+9)^0,c
 15854  0124B8  0E80               	movlw	128
 15855  0124BA  6E3C               	movwf	(btemp+10)^0,c
 15856  0124BC  0E7F               	movlw	127
 15857  0124BE  6E3D               	movwf	(btemp+11)^0,c
 15858                           
 15859                           ;stkvar	_prod @ sp[(-13)+0]
 15860  0124C0  0EF3               	movlw	-13
 15861  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15862  0124C8  0EF4               	movlw	-12
 15863  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15864  0124D0  0EF5               	movlw	-11
 15865  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15866  0124D8  0EF6               	movlw	-10
 15867  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15868  0124E0  D044               	goto	l10025
 15869  0124E2                     l10009:
 15870                           
 15871                           ;stkvar	_temp @ sp[(-13)+8]
 15872  0124E2  0EFC               	movlw	-4
 15873  0124E4  BEE3               	btfsc	plusw1,7,c
 15874  0124E6  D007               	goto	u10340
 15875  0124E8  0EFC               	movlw	-4
 15876  0124EA  50E3               	movf	plusw1,w,c
 15877  0124EC  E10F               	bnz	l10015
 15878  0124EE  0EFB               	movlw	-5
 15879  0124F0  04E3               	decf	plusw1,w,c
 15880  0124F2  B0D8               	btfsc	status,0,c
 15881  0124F4  D00B               	goto	l10015
 15882  0124F6                     u10340:
 15883                           
 15884                           ;stkvar	_prod @ sp[(-13)+0]
 15885  0124F6  0EF3               	movlw	-13
 15886  0124F8  6AE3               	clrf	plusw1,c
 15887  0124FA  0EF4               	movlw	-12
 15888  0124FC  6AE3               	clrf	plusw1,c
 15889  0124FE  0EF5               	movlw	-11
 15890  012500  6AE3               	clrf	plusw1,c
 15891  012502  0EF6               	movlw	-10
 15892  012504  6AE3               	clrf	plusw1,c
 15893                           
 15894                           ;stkvar	_sign @ sp[(-13)+12]
 15895  012506  0EFF               	movlw	-1
 15896  012508  6AE3               	clrf	plusw1,c
 15897  01250A  D02F               	goto	l10025
 15898  01250C                     l10015:
 15899                           
 15900                           ;stkvar	_temp @ sp[(-13)+8]
 15901                           ;stkvar	_bexp @ sp[(-13)+10]
 15902  01250C  0EFB               	movlw	-5
 15903  01250E  006F FF8C  F032    	movff	plusw1,btemp
 15904  012514  0EFD               	movlw	-3
 15905  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 15906                           
 15907                           ;stkvar	_prod @ sp[(-13)+0]
 15908  01251C  50E1               	movf	fsr1l,w,c
 15909  01251E  0FF3               	addlw	-13
 15910  012520  6ED9               	movwf	fsr2l,c
 15911  012522  50E2               	movf	fsr1h,w,c
 15912  012524  6EDA               	movwf	fsr2h,c
 15913  012526  0EFF               	movlw	255
 15914  012528  22DA               	addwfc	fsr2h,f,c
 15915  01252A  0EFF               	movlw	255
 15916  01252C  16DE               	andwf	postinc2,f,c
 15917  01252E  0EFF               	movlw	255
 15918  012530  16DE               	andwf	postinc2,f,c
 15919  012532  0E7F               	movlw	127
 15920  012534  16DE               	andwf	postinc2,f,c
 15921  012536  0E00               	movlw	0
 15922  012538  16DE               	andwf	postinc2,f,c
 15923                           
 15924                           ;stkvar	_bexp @ sp[(-13)+10]
 15925  01253A  0EFD               	movlw	-3
 15926  01253C  A0E3               	btfss	plusw1,0,c
 15927  01253E  D008               	goto	l10023
 15928                           
 15929                           ;stkvar	_prod @ sp[(-13)+0]
 15930  012540  0EF5               	movlw	245
 15931  012542  24E1               	addwf	fsr1l,w,c
 15932  012544  6ED9               	movwf	fsr2l,c
 15933  012546  0EFF               	movlw	255
 15934  012548  20E2               	addwfc	fsr1h,w,c
 15935  01254A  6EDA               	movwf	fsr2h,c
 15936  01254C  0E00               	movlw	0
 15937  01254E  8EDB               	bsf	plusw2,7,c
 15938  012550                     l10023:
 15939                           
 15940                           ;stkvar	_prod @ sp[(-13)+0]
 15941  012550  0EF6               	movlw	246
 15942  012552  24E1               	addwf	fsr1l,w,c
 15943  012554  6ED9               	movwf	fsr2l,c
 15944  012556  0EFF               	movlw	255
 15945  012558  20E2               	addwfc	fsr1h,w,c
 15946  01255A  6EDA               	movwf	fsr2h,c
 15947                           
 15948                           ;stkvar	_bexp @ sp[(-13)+10]
 15949  01255C  0EFD               	movlw	-3
 15950  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15951  012564  90D8               	bcf	status,0,c
 15952  012566  303D               	rrcf	(btemp+11)^0,w,c
 15953  012568  6EDF               	movwf	indf2,c
 15954  01256A                     l10025:
 15955                           
 15956                           ;stkvar	_sign @ sp[(-13)+12]
 15957  01256A  0EFF               	movlw	-1
 15958  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15959                           
 15960                           ;stkvar	_prod @ sp[(-13)+0]
 15961  012572  0EF6               	movlw	246
 15962  012574  24E1               	addwf	fsr1l,w,c
 15963  012576  6ED9               	movwf	fsr2l,c
 15964  012578  0EFF               	movlw	255
 15965  01257A  20E2               	addwfc	fsr1h,w,c
 15966  01257C  6EDA               	movwf	fsr2h,c
 15967  01257E  503D               	movf	(btemp+11)^0,w,c
 15968  012580  12DF               	iorwf	indf2,f,c
 15969                           
 15970                           ;stkvar	_prod @ sp[(-13)+0]
 15971  012582  0EF3               	movlw	-13
 15972  012584  006F FF8C  F032    	movff	plusw1,btemp
 15973  01258A  0EF4               	movlw	-12
 15974  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 15975  012592  0EF5               	movlw	-11
 15976  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 15977  01259A  0EF6               	movlw	-10
 15978  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 15979  0125A2                     l2660:
 15980                           
 15981                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15982  0125A2  0EEB               	movlw	235
 15983  0125A4  26E1               	addwf	fsr1l,f,c
 15984  0125A6  0EFF               	movlw	255
 15985  0125A8  22E2               	addwfc	fsr1h,f,c
 15986  0125AA  0012               	return		;funcret
 15987  0125AC                     __end_of___flmul:
 15988                           	opt callstack 0
 15989                           
 15990 ;; *************** function ___flge *****************
 15991 ;; Defined at:
 15992 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15993 ;; Parameters:    Size  Location     Type
 15994 ;;  ff1             4  [STACK] unsigned char 
 15995 ;;  ff2             4  [STACK] unsigned char 
 15996 ;; Auto vars:     Size  Location     Type
 15997 ;;		None
 15998 ;; Return value:  Size  Location     Type
 15999 ;;		None               void
 16000 ;; Registers used:
 16001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16002 ;; Tracked objects:
 16003 ;;		On entry : 0/5
 16004 ;;		On exit  : 0/0
 16005 ;;		Unchanged: 0/0
 16006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16011 ;;Total ram usage:        0 bytes
 16012 ;; Hardware stack levels used:    1
 16013 ;; Hardware stack levels required when called:    6
 16014 ;; This function calls:
 16015 ;;		Nothing
 16016 ;; This function is called by:
 16017 ;;		_efgtoa
 16018 ;; This function uses a reentrant model
 16019 ;;
 16020                           
 16021                           	psect	text55
 16022  015F6E                     __ptext55:
 16023                           	opt callstack 0
 16024  015F6E                     ___flge:
 16025                           	opt callstack 17
 16026                           
 16027                           ;stkvar	_ff1 @ sp[(0)+-4]
 16028                           
 16029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16030                           ;incstack = 0
 16031  015F6E  50E1               	movf	fsr1l,w,c
 16032  015F70  0FFC               	addlw	-4
 16033  015F72  6ED9               	movwf	fsr2l,c
 16034  015F74  50E2               	movf	fsr1h,w,c
 16035  015F76  6EDA               	movwf	fsr2h,c
 16036  015F78  0EFF               	movlw	255
 16037  015F7A  22DA               	addwfc	fsr2h,f,c
 16038  015F7C  0E00               	movlw	0
 16039  015F7E  14DE               	andwf	postinc2,w,c
 16040  015F80  6E3A               	movwf	(btemp+8)^0,c
 16041  015F82  0E00               	movlw	0
 16042  015F84  14DE               	andwf	postinc2,w,c
 16043  015F86  6E3B               	movwf	(btemp+9)^0,c
 16044  015F88  0E80               	movlw	128
 16045  015F8A  14DE               	andwf	postinc2,w,c
 16046  015F8C  6E3C               	movwf	(btemp+10)^0,c
 16047  015F8E  0E7F               	movlw	127
 16048  015F90  14DE               	andwf	postinc2,w,c
 16049  015F92  6E3D               	movwf	(btemp+11)^0,c
 16050  015F94  503A               	movf	(btemp+8)^0,w,c
 16051  015F96  103B               	iorwf	(btemp+9)^0,w,c
 16052  015F98  103C               	iorwf	(btemp+10)^0,w,c
 16053  015F9A  103D               	iorwf	(btemp+11)^0,w,c
 16054  015F9C  A4D8               	btfss	status,2,c
 16055  015F9E  D008               	goto	l10141
 16056                           
 16057                           ;stkvar	_ff1 @ sp[(0)+-4]
 16058  015FA0  0EFC               	movlw	-4
 16059  015FA2  6AE3               	clrf	plusw1,c
 16060  015FA4  0EFD               	movlw	-3
 16061  015FA6  6AE3               	clrf	plusw1,c
 16062  015FA8  0EFE               	movlw	-2
 16063  015FAA  6AE3               	clrf	plusw1,c
 16064  015FAC  0EFF               	movlw	-1
 16065  015FAE  6AE3               	clrf	plusw1,c
 16066  015FB0                     l10141:
 16067                           
 16068                           ;stkvar	_ff2 @ sp[(0)+-8]
 16069  015FB0  50E1               	movf	fsr1l,w,c
 16070  015FB2  0FF8               	addlw	-8
 16071  015FB4  6ED9               	movwf	fsr2l,c
 16072  015FB6  50E2               	movf	fsr1h,w,c
 16073  015FB8  6EDA               	movwf	fsr2h,c
 16074  015FBA  0EFF               	movlw	255
 16075  015FBC  22DA               	addwfc	fsr2h,f,c
 16076  015FBE  0E00               	movlw	0
 16077  015FC0  14DE               	andwf	postinc2,w,c
 16078  015FC2  6E3A               	movwf	(btemp+8)^0,c
 16079  015FC4  0E00               	movlw	0
 16080  015FC6  14DE               	andwf	postinc2,w,c
 16081  015FC8  6E3B               	movwf	(btemp+9)^0,c
 16082  015FCA  0E80               	movlw	128
 16083  015FCC  14DE               	andwf	postinc2,w,c
 16084  015FCE  6E3C               	movwf	(btemp+10)^0,c
 16085  015FD0  0E7F               	movlw	127
 16086  015FD2  14DE               	andwf	postinc2,w,c
 16087  015FD4  6E3D               	movwf	(btemp+11)^0,c
 16088  015FD6  503A               	movf	(btemp+8)^0,w,c
 16089  015FD8  103B               	iorwf	(btemp+9)^0,w,c
 16090  015FDA  103C               	iorwf	(btemp+10)^0,w,c
 16091  015FDC  103D               	iorwf	(btemp+11)^0,w,c
 16092  015FDE  A4D8               	btfss	status,2,c
 16093  015FE0  D008               	goto	l2305
 16094                           
 16095                           ;stkvar	_ff2 @ sp[(0)+-8]
 16096  015FE2  0EF8               	movlw	-8
 16097  015FE4  6AE3               	clrf	plusw1,c
 16098  015FE6  0EF9               	movlw	-7
 16099  015FE8  6AE3               	clrf	plusw1,c
 16100  015FEA  0EFA               	movlw	-6
 16101  015FEC  6AE3               	clrf	plusw1,c
 16102  015FEE  0EFB               	movlw	-5
 16103  015FF0  6AE3               	clrf	plusw1,c
 16104  015FF2                     l2305:
 16105                           
 16106                           ;stkvar	_ff1 @ sp[(0)+-4]
 16107  015FF2  0EFF               	movlw	-1
 16108  015FF4  AEE3               	btfss	plusw1,7,c
 16109  015FF6  D024               	goto	l10147
 16110                           
 16111                           ;stkvar	_ff1 @ sp[(0)+-4]
 16112  015FF8  0E00               	movlw	0
 16113  015FFA  6E3A               	movwf	(btemp+8)^0,c
 16114  015FFC  0E00               	movlw	0
 16115  015FFE  6E3B               	movwf	(btemp+9)^0,c
 16116  016000  0E00               	movlw	0
 16117  016002  6E3C               	movwf	(btemp+10)^0,c
 16118  016004  0E80               	movlw	128
 16119  016006  6E3D               	movwf	(btemp+11)^0,c
 16120  016008  0EFC               	movlw	-4
 16121  01600A  50E3               	movf	plusw1,w,c
 16122  01600C  5E3A               	subwf	(btemp+8)^0,f,c
 16123  01600E  0EFD               	movlw	-3
 16124  016010  50E3               	movf	plusw1,w,c
 16125  016012  5A3B               	subwfb	(btemp+9)^0,f,c
 16126  016014  0EFE               	movlw	-2
 16127  016016  50E3               	movf	plusw1,w,c
 16128  016018  5A3C               	subwfb	(btemp+10)^0,f,c
 16129  01601A  0EFF               	movlw	-1
 16130  01601C  50E3               	movf	plusw1,w,c
 16131  01601E  5A3D               	subwfb	(btemp+11)^0,f,c
 16132                           
 16133                           ;stkvar	_ff1 @ sp[(0)+-4]
 16134  016020  0EFC               	movlw	-4
 16135  016022  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16136  016028  0EFD               	movlw	-3
 16137  01602A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16138  016030  0EFE               	movlw	-2
 16139  016032  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16140  016038  0EFF               	movlw	-1
 16141  01603A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16142  016040                     l10147:
 16143                           
 16144                           ;stkvar	_ff2 @ sp[(0)+-8]
 16145  016040  0EFB               	movlw	-5
 16146  016042  AEE3               	btfss	plusw1,7,c
 16147  016044  D024               	goto	l10151
 16148                           
 16149                           ;stkvar	_ff2 @ sp[(0)+-8]
 16150  016046  0E00               	movlw	0
 16151  016048  6E3A               	movwf	(btemp+8)^0,c
 16152  01604A  0E00               	movlw	0
 16153  01604C  6E3B               	movwf	(btemp+9)^0,c
 16154  01604E  0E00               	movlw	0
 16155  016050  6E3C               	movwf	(btemp+10)^0,c
 16156  016052  0E80               	movlw	128
 16157  016054  6E3D               	movwf	(btemp+11)^0,c
 16158  016056  0EF8               	movlw	-8
 16159  016058  50E3               	movf	plusw1,w,c
 16160  01605A  5E3A               	subwf	(btemp+8)^0,f,c
 16161  01605C  0EF9               	movlw	-7
 16162  01605E  50E3               	movf	plusw1,w,c
 16163  016060  5A3B               	subwfb	(btemp+9)^0,f,c
 16164  016062  0EFA               	movlw	-6
 16165  016064  50E3               	movf	plusw1,w,c
 16166  016066  5A3C               	subwfb	(btemp+10)^0,f,c
 16167  016068  0EFB               	movlw	-5
 16168  01606A  50E3               	movf	plusw1,w,c
 16169  01606C  5A3D               	subwfb	(btemp+11)^0,f,c
 16170                           
 16171                           ;stkvar	_ff2 @ sp[(0)+-8]
 16172  01606E  0EF8               	movlw	-8
 16173  016070  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16174  016076  0EF9               	movlw	-7
 16175  016078  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16176  01607E  0EFA               	movlw	-6
 16177  016080  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16178  016086  0EFB               	movlw	-5
 16179  016088  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16180  01608E                     l10151:
 16181                           
 16182                           ;stkvar	_ff1 @ sp[(0)+-4]
 16183  01608E  0EFF               	movlw	-1
 16184  016090  7EE3               	btg	plusw1,7,c
 16185                           
 16186                           ;stkvar	_ff2 @ sp[(0)+-8]
 16187  016092  0EFB               	movlw	-5
 16188  016094  7EE3               	btg	plusw1,7,c
 16189                           
 16190                           ;stkvar	_ff2 @ sp[(0)+-8]
 16191                           ;stkvar	_ff1 @ sp[(0)+-4]
 16192  016096  50E1               	movf	fsr1l,w,c
 16193  016098  0FFC               	addlw	-4
 16194  01609A  6ED9               	movwf	fsr2l,c
 16195  01609C  50E2               	movf	fsr1h,w,c
 16196  01609E  6EDA               	movwf	fsr2h,c
 16197  0160A0  0EFF               	movlw	255
 16198  0160A2  22DA               	addwfc	fsr2h,f,c
 16199  0160A4  0EF8               	movlw	-8
 16200  0160A6  50E3               	movf	plusw1,w,c
 16201  0160A8  5CDE               	subwf	postinc2,w,c
 16202  0160AA  0EF9               	movlw	-7
 16203  0160AC  50E3               	movf	plusw1,w,c
 16204  0160AE  58DE               	subwfb	postinc2,w,c
 16205  0160B0  0EFA               	movlw	-6
 16206  0160B2  50E3               	movf	plusw1,w,c
 16207  0160B4  58DE               	subwfb	postinc2,w,c
 16208  0160B6  0EFB               	movlw	-5
 16209  0160B8  50E3               	movf	plusw1,w,c
 16210  0160BA  58DE               	subwfb	postinc2,w,c
 16211  0160BC  B0D8               	btfsc	status,0,c
 16212  0160BE  D002               	goto	l10159
 16213  0160C0  9032               	bcf	btemp& (0+255),0,c
 16214  0160C2  D001               	goto	l2312
 16215  0160C4                     l10159:
 16216  0160C4  8032               	bsf	btemp& (0+255),0,c
 16217  0160C6                     l2312:
 16218                           
 16219                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16220  0160C6  0EF8               	movlw	248
 16221  0160C8  26E1               	addwf	fsr1l,f,c
 16222  0160CA  0EFF               	movlw	255
 16223  0160CC  22E2               	addwfc	fsr1h,f,c
 16224  0160CE  0012               	return		;funcret
 16225  0160D0                     __end_of___flge:
 16226                           	opt callstack 0
 16227                           
 16228 ;; *************** function ___fleq *****************
 16229 ;; Defined at:
 16230 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16231 ;; Parameters:    Size  Location     Type
 16232 ;;  ff1             4  [STACK] unsigned char 
 16233 ;;  ff2             4  [STACK] unsigned char 
 16234 ;; Auto vars:     Size  Location     Type
 16235 ;;		None
 16236 ;; Return value:  Size  Location     Type
 16237 ;;		None               void
 16238 ;; Registers used:
 16239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16240 ;; Tracked objects:
 16241 ;;		On entry : 0/5
 16242 ;;		On exit  : 0/0
 16243 ;;		Unchanged: 0/0
 16244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16249 ;;Total ram usage:        0 bytes
 16250 ;; Hardware stack levels used:    1
 16251 ;; Hardware stack levels required when called:    6
 16252 ;; This function calls:
 16253 ;;		Nothing
 16254 ;; This function is called by:
 16255 ;;		_efgtoa
 16256 ;; This function uses a reentrant model
 16257 ;;
 16258                           
 16259                           	psect	text56
 16260  016CAE                     __ptext56:
 16261                           	opt callstack 0
 16262  016CAE                     ___fleq:
 16263                           	opt callstack 17
 16264                           
 16265                           ;stkvar	_ff1 @ sp[(0)+-4]
 16266                           
 16267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16268                           ;incstack = 0
 16269  016CAE  50E1               	movf	fsr1l,w,c
 16270  016CB0  0FFC               	addlw	-4
 16271  016CB2  6ED9               	movwf	fsr2l,c
 16272  016CB4  50E2               	movf	fsr1h,w,c
 16273  016CB6  6EDA               	movwf	fsr2h,c
 16274  016CB8  0EFF               	movlw	255
 16275  016CBA  22DA               	addwfc	fsr2h,f,c
 16276  016CBC  0E00               	movlw	0
 16277  016CBE  14DE               	andwf	postinc2,w,c
 16278  016CC0  6E3A               	movwf	(btemp+8)^0,c
 16279  016CC2  0E00               	movlw	0
 16280  016CC4  14DE               	andwf	postinc2,w,c
 16281  016CC6  6E3B               	movwf	(btemp+9)^0,c
 16282  016CC8  0E80               	movlw	128
 16283  016CCA  14DE               	andwf	postinc2,w,c
 16284  016CCC  6E3C               	movwf	(btemp+10)^0,c
 16285  016CCE  0E7F               	movlw	127
 16286  016CD0  14DE               	andwf	postinc2,w,c
 16287  016CD2  6E3D               	movwf	(btemp+11)^0,c
 16288  016CD4  503A               	movf	(btemp+8)^0,w,c
 16289  016CD6  103B               	iorwf	(btemp+9)^0,w,c
 16290  016CD8  103C               	iorwf	(btemp+10)^0,w,c
 16291  016CDA  103D               	iorwf	(btemp+11)^0,w,c
 16292  016CDC  A4D8               	btfss	status,2,c
 16293  016CDE  D008               	goto	l10125
 16294                           
 16295                           ;stkvar	_ff1 @ sp[(0)+-4]
 16296  016CE0  0EFC               	movlw	-4
 16297  016CE2  6AE3               	clrf	plusw1,c
 16298  016CE4  0EFD               	movlw	-3
 16299  016CE6  6AE3               	clrf	plusw1,c
 16300  016CE8  0EFE               	movlw	-2
 16301  016CEA  6AE3               	clrf	plusw1,c
 16302  016CEC  0EFF               	movlw	-1
 16303  016CEE  6AE3               	clrf	plusw1,c
 16304  016CF0                     l10125:
 16305                           
 16306                           ;stkvar	_ff2 @ sp[(0)+-8]
 16307  016CF0  50E1               	movf	fsr1l,w,c
 16308  016CF2  0FF8               	addlw	-8
 16309  016CF4  6ED9               	movwf	fsr2l,c
 16310  016CF6  50E2               	movf	fsr1h,w,c
 16311  016CF8  6EDA               	movwf	fsr2h,c
 16312  016CFA  0EFF               	movlw	255
 16313  016CFC  22DA               	addwfc	fsr2h,f,c
 16314  016CFE  0E00               	movlw	0
 16315  016D00  14DE               	andwf	postinc2,w,c
 16316  016D02  6E3A               	movwf	(btemp+8)^0,c
 16317  016D04  0E00               	movlw	0
 16318  016D06  14DE               	andwf	postinc2,w,c
 16319  016D08  6E3B               	movwf	(btemp+9)^0,c
 16320  016D0A  0E80               	movlw	128
 16321  016D0C  14DE               	andwf	postinc2,w,c
 16322  016D0E  6E3C               	movwf	(btemp+10)^0,c
 16323  016D10  0E7F               	movlw	127
 16324  016D12  14DE               	andwf	postinc2,w,c
 16325  016D14  6E3D               	movwf	(btemp+11)^0,c
 16326  016D16  503A               	movf	(btemp+8)^0,w,c
 16327  016D18  103B               	iorwf	(btemp+9)^0,w,c
 16328  016D1A  103C               	iorwf	(btemp+10)^0,w,c
 16329  016D1C  103D               	iorwf	(btemp+11)^0,w,c
 16330  016D1E  A4D8               	btfss	status,2,c
 16331  016D20  D008               	goto	l10129
 16332                           
 16333                           ;stkvar	_ff2 @ sp[(0)+-8]
 16334  016D22  0EF8               	movlw	-8
 16335  016D24  6AE3               	clrf	plusw1,c
 16336  016D26  0EF9               	movlw	-7
 16337  016D28  6AE3               	clrf	plusw1,c
 16338  016D2A  0EFA               	movlw	-6
 16339  016D2C  6AE3               	clrf	plusw1,c
 16340  016D2E  0EFB               	movlw	-5
 16341  016D30  6AE3               	clrf	plusw1,c
 16342  016D32                     l10129:
 16343                           
 16344                           ;stkvar	_ff2 @ sp[(0)+-8]
 16345                           ;stkvar	_ff1 @ sp[(0)+-4]
 16346  016D32  50E1               	movf	fsr1l,w,c
 16347  016D34  0FFC               	addlw	-4
 16348  016D36  6ED9               	movwf	fsr2l,c
 16349  016D38  50E2               	movf	fsr1h,w,c
 16350  016D3A  6EDA               	movwf	fsr2h,c
 16351  016D3C  0EFF               	movlw	255
 16352  016D3E  22DA               	addwfc	fsr2h,f,c
 16353  016D40  0EF8               	movlw	-8
 16354  016D42  50E3               	movf	plusw1,w,c
 16355  016D44  18DE               	xorwf	postinc2,w,c
 16356  016D46  E10D               	bnz	u10520
 16357  016D48  0EF9               	movlw	-7
 16358  016D4A  50E3               	movf	plusw1,w,c
 16359  016D4C  18DE               	xorwf	postinc2,w,c
 16360  016D4E  E109               	bnz	u10520
 16361  016D50  0EFA               	movlw	-6
 16362  016D52  50E3               	movf	plusw1,w,c
 16363  016D54  18DE               	xorwf	postinc2,w,c
 16364  016D56  E105               	bnz	u10520
 16365  016D58  0EFB               	movlw	-5
 16366  016D5A  50E3               	movf	plusw1,w,c
 16367  016D5C  18DE               	xorwf	postinc2,w,c
 16368  016D5E  B4D8               	btfsc	status,2,c
 16369  016D60  D002               	goto	l10133
 16370  016D62                     u10520:
 16371  016D62  9032               	bcf	btemp& (0+255),0,c
 16372  016D64  D001               	goto	l2301
 16373  016D66                     l10133:
 16374  016D66  8032               	bsf	btemp& (0+255),0,c
 16375  016D68                     l2301:
 16376                           
 16377                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16378  016D68  0EF8               	movlw	248
 16379  016D6A  26E1               	addwf	fsr1l,f,c
 16380  016D6C  0EFF               	movlw	255
 16381  016D6E  22E2               	addwfc	fsr1h,f,c
 16382  016D70  0012               	return		;funcret
 16383  016D72                     __end_of___fleq:
 16384                           	opt callstack 0
 16385                           
 16386 ;; *************** function ___fldiv *****************
 16387 ;; Defined at:
 16388 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16389 ;; Parameters:    Size  Location     Type
 16390 ;;  b               4  [STACK] unsigned char 
 16391 ;;  a               4  [STACK] unsigned char 
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;  grs             4  [STACK] unsigned long 
 16394 ;;  rem             4  [STACK] unsigned long 
 16395 ;;  new_exp         2  [STACK] short 
 16396 ;;  aexp            1  [STACK] unsigned char 
 16397 ;;  bexp            1  [STACK] unsigned char 
 16398 ;;  sign            1  [STACK] unsigned char 
 16399 ;; Return value:  Size  Location     Type
 16400 ;;                  4  [STACK] unsigned char 
 16401 ;; Registers used:
 16402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16403 ;; Tracked objects:
 16404 ;;		On entry : 0/39
 16405 ;;		On exit  : 0/0
 16406 ;;		Unchanged: 0/0
 16407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16412 ;;Total ram usage:        0 bytes
 16413 ;; Hardware stack levels used:    1
 16414 ;; Hardware stack levels required when called:    6
 16415 ;; This function calls:
 16416 ;;		Nothing
 16417 ;; This function is called by:
 16418 ;;		_conv_raw_result
 16419 ;;		_efgtoa
 16420 ;; This function uses a reentrant model
 16421 ;;
 16422                           
 16423                           	psect	text57
 16424  012D68                     __ptext57:
 16425                           	opt callstack 0
 16426  012D68                     ___fldiv:
 16427                           	opt callstack 0
 16428                           
 16429                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16430  012D68  0E0D               	movlw	13
 16431  012D6A  26E1               	addwf	fsr1l,f,c
 16432  012D6C  0E00               	movlw	0
 16433  012D6E  22E2               	addwfc	fsr1h,f,c
 16434                           
 16435                           ;stkvar	_b @ sp[(-13)+-4]
 16436                           
 16437                           ;incstack = 0
 16438  012D70  0EF2               	movlw	242
 16439  012D72  24E1               	addwf	fsr1l,w,c
 16440  012D74  6ED9               	movwf	fsr2l,c
 16441  012D76  0EFF               	movlw	255
 16442  012D78  20E2               	addwfc	fsr1h,w,c
 16443  012D7A  6EDA               	movwf	fsr2h,c
 16444  012D7C  50DF               	movf	indf2,w,c
 16445  012D7E  6E3D               	movwf	(btemp+11)^0,c
 16446  012D80  0E80               	movlw	128
 16447  012D82  163D               	andwf	(btemp+11)^0,f,c
 16448                           
 16449                           ;stkvar	_sign @ sp[(-13)+12]
 16450  012D84  0EFF               	movlw	-1
 16451  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16452                           
 16453                           ;stkvar	_b @ sp[(-13)+-4]
 16454  012D8C  0EF2               	movlw	242
 16455  012D8E  24E1               	addwf	fsr1l,w,c
 16456  012D90  6ED9               	movwf	fsr2l,c
 16457  012D92  0EFF               	movlw	255
 16458  012D94  20E2               	addwfc	fsr1h,w,c
 16459  012D96  6EDA               	movwf	fsr2h,c
 16460  012D98  50DF               	movf	indf2,w,c
 16461  012D9A  6E3D               	movwf	(btemp+11)^0,c
 16462  012D9C  90D8               	bcf	status,0,c
 16463  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 16464  012DA0  6E3C               	movwf	(btemp+10)^0,c
 16465                           
 16466                           ;stkvar	_bexp @ sp[(-13)+11]
 16467  012DA2  0EFE               	movlw	-2
 16468  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16469                           
 16470                           ;stkvar	_b @ sp[(-13)+-4]
 16471  012DAA  0EF1               	movlw	241
 16472  012DAC  24E1               	addwf	fsr1l,w,c
 16473  012DAE  6ED9               	movwf	fsr2l,c
 16474  012DB0  0EFF               	movlw	255
 16475  012DB2  20E2               	addwfc	fsr1h,w,c
 16476  012DB4  6EDA               	movwf	fsr2h,c
 16477  012DB6  AEDF               	btfss	indf2,7,c
 16478  012DB8  D002               	goto	l9727
 16479                           
 16480                           ;stkvar	_bexp @ sp[(-13)+11]
 16481  012DBA  0EFE               	movlw	-2
 16482  012DBC  80E3               	bsf	plusw1,0,c
 16483  012DBE                     l9727:
 16484                           
 16485                           ;stkvar	_bexp @ sp[(-13)+11]
 16486  012DBE  0EFE               	movlw	-2
 16487  012DC0  50E3               	movf	plusw1,w,c
 16488  012DC2  B4D8               	btfsc	status,2,c
 16489  012DC4  D027               	goto	l9737
 16490                           
 16491                           ;stkvar	_bexp @ sp[(-13)+11]
 16492  012DC6  0EFE               	movlw	-2
 16493  012DC8  28E3               	incf	plusw1,w,c
 16494  012DCA  A4D8               	btfss	status,2,c
 16495  012DCC  D018               	goto	l9733
 16496  012DCE  0E00               	movlw	0
 16497  012DD0  6E3A               	movwf	(btemp+8)^0,c
 16498  012DD2  0E00               	movlw	0
 16499  012DD4  6E3B               	movwf	(btemp+9)^0,c
 16500  012DD6  0E00               	movlw	0
 16501  012DD8  6E3C               	movwf	(btemp+10)^0,c
 16502  012DDA  0E00               	movlw	0
 16503  012DDC  6E3D               	movwf	(btemp+11)^0,c
 16504                           
 16505                           ;stkvar	_b @ sp[(-13)+-4]
 16506  012DDE  0EEF               	movlw	-17
 16507  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16508  012DE6  0EF0               	movlw	-16
 16509  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16510  012DEE  0EF1               	movlw	-15
 16511  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16512  012DF6  0EF2               	movlw	-14
 16513  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16514  012DFE                     l9733:
 16515                           
 16516                           ;stkvar	_b @ sp[(-13)+-4]
 16517  012DFE  0EF1               	movlw	-15
 16518  012E00  8EE3               	bsf	plusw1,7,c
 16519                           
 16520                           ;stkvar	_b @ sp[(-13)+-4]
 16521  012E02  0EF2               	movlw	242
 16522  012E04  24E1               	addwf	fsr1l,w,c
 16523  012E06  6ED9               	movwf	fsr2l,c
 16524  012E08  0EFF               	movlw	255
 16525  012E0A  20E2               	addwfc	fsr1h,w,c
 16526  012E0C  6EDA               	movwf	fsr2h,c
 16527  012E0E  0E00               	movlw	0
 16528  012E10  6EDF               	movwf	indf2,c
 16529  012E12  D018               	goto	l9739
 16530  012E14                     l9737:
 16531  012E14  0E00               	movlw	0
 16532  012E16  6E3A               	movwf	(btemp+8)^0,c
 16533  012E18  0E00               	movlw	0
 16534  012E1A  6E3B               	movwf	(btemp+9)^0,c
 16535  012E1C  0E00               	movlw	0
 16536  012E1E  6E3C               	movwf	(btemp+10)^0,c
 16537  012E20  0E00               	movlw	0
 16538  012E22  6E3D               	movwf	(btemp+11)^0,c
 16539                           
 16540                           ;stkvar	_b @ sp[(-13)+-4]
 16541  012E24  0EEF               	movlw	-17
 16542  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16543  012E2C  0EF0               	movlw	-16
 16544  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16545  012E34  0EF1               	movlw	-15
 16546  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16547  012E3C  0EF2               	movlw	-14
 16548  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16549  012E44                     l9739:
 16550                           
 16551                           ;stkvar	_a @ sp[(-13)+-8]
 16552  012E44  0EEE               	movlw	238
 16553  012E46  24E1               	addwf	fsr1l,w,c
 16554  012E48  6ED9               	movwf	fsr2l,c
 16555  012E4A  0EFF               	movlw	255
 16556  012E4C  20E2               	addwfc	fsr1h,w,c
 16557  012E4E  6EDA               	movwf	fsr2h,c
 16558  012E50  50DF               	movf	indf2,w,c
 16559  012E52  6E3D               	movwf	(btemp+11)^0,c
 16560  012E54  0E80               	movlw	128
 16561  012E56  163D               	andwf	(btemp+11)^0,f,c
 16562                           
 16563                           ;stkvar	_sign @ sp[(-13)+12]
 16564  012E58  50E1               	movf	fsr1l,w,c
 16565  012E5A  0FFF               	addlw	-1
 16566  012E5C  6ED9               	movwf	fsr2l,c
 16567  012E5E  50E2               	movf	fsr1h,w,c
 16568  012E60  6EDA               	movwf	fsr2h,c
 16569  012E62  0EFF               	movlw	255
 16570  012E64  22DA               	addwfc	fsr2h,f,c
 16571  012E66  503D               	movf	(btemp+11)^0,w,c
 16572  012E68  1ADF               	xorwf	indf2,f,c
 16573                           
 16574                           ;stkvar	_a @ sp[(-13)+-8]
 16575  012E6A  0EEE               	movlw	238
 16576  012E6C  24E1               	addwf	fsr1l,w,c
 16577  012E6E  6ED9               	movwf	fsr2l,c
 16578  012E70  0EFF               	movlw	255
 16579  012E72  20E2               	addwfc	fsr1h,w,c
 16580  012E74  6EDA               	movwf	fsr2h,c
 16581  012E76  50DF               	movf	indf2,w,c
 16582  012E78  6E3D               	movwf	(btemp+11)^0,c
 16583  012E7A  90D8               	bcf	status,0,c
 16584  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 16585  012E7E  6E3C               	movwf	(btemp+10)^0,c
 16586                           
 16587                           ;stkvar	_aexp @ sp[(-13)+10]
 16588  012E80  0EFD               	movlw	-3
 16589  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16590                           
 16591                           ;stkvar	_a @ sp[(-13)+-8]
 16592  012E88  0EED               	movlw	237
 16593  012E8A  24E1               	addwf	fsr1l,w,c
 16594  012E8C  6ED9               	movwf	fsr2l,c
 16595  012E8E  0EFF               	movlw	255
 16596  012E90  20E2               	addwfc	fsr1h,w,c
 16597  012E92  6EDA               	movwf	fsr2h,c
 16598  012E94  AEDF               	btfss	indf2,7,c
 16599  012E96  D002               	goto	l9747
 16600                           
 16601                           ;stkvar	_aexp @ sp[(-13)+10]
 16602  012E98  0EFD               	movlw	-3
 16603  012E9A  80E3               	bsf	plusw1,0,c
 16604  012E9C                     l9747:
 16605                           
 16606                           ;stkvar	_aexp @ sp[(-13)+10]
 16607  012E9C  0EFD               	movlw	-3
 16608  012E9E  50E3               	movf	plusw1,w,c
 16609  012EA0  B4D8               	btfsc	status,2,c
 16610  012EA2  D027               	goto	l9757
 16611                           
 16612                           ;stkvar	_aexp @ sp[(-13)+10]
 16613  012EA4  0EFD               	movlw	-3
 16614  012EA6  28E3               	incf	plusw1,w,c
 16615  012EA8  A4D8               	btfss	status,2,c
 16616  012EAA  D018               	goto	l9753
 16617  012EAC  0E00               	movlw	0
 16618  012EAE  6E3A               	movwf	(btemp+8)^0,c
 16619  012EB0  0E00               	movlw	0
 16620  012EB2  6E3B               	movwf	(btemp+9)^0,c
 16621  012EB4  0E00               	movlw	0
 16622  012EB6  6E3C               	movwf	(btemp+10)^0,c
 16623  012EB8  0E00               	movlw	0
 16624  012EBA  6E3D               	movwf	(btemp+11)^0,c
 16625                           
 16626                           ;stkvar	_a @ sp[(-13)+-8]
 16627  012EBC  0EEB               	movlw	-21
 16628  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16629  012EC4  0EEC               	movlw	-20
 16630  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16631  012ECC  0EED               	movlw	-19
 16632  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16633  012ED4  0EEE               	movlw	-18
 16634  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16635  012EDC                     l9753:
 16636                           
 16637                           ;stkvar	_a @ sp[(-13)+-8]
 16638  012EDC  0EED               	movlw	-19
 16639  012EDE  8EE3               	bsf	plusw1,7,c
 16640                           
 16641                           ;stkvar	_a @ sp[(-13)+-8]
 16642  012EE0  0EEE               	movlw	238
 16643  012EE2  24E1               	addwf	fsr1l,w,c
 16644  012EE4  6ED9               	movwf	fsr2l,c
 16645  012EE6  0EFF               	movlw	255
 16646  012EE8  20E2               	addwfc	fsr1h,w,c
 16647  012EEA  6EDA               	movwf	fsr2h,c
 16648  012EEC  0E00               	movlw	0
 16649  012EEE  6EDF               	movwf	indf2,c
 16650  012EF0  D018               	goto	l9759
 16651  012EF2                     l9757:
 16652  012EF2  0E00               	movlw	0
 16653  012EF4  6E3A               	movwf	(btemp+8)^0,c
 16654  012EF6  0E00               	movlw	0
 16655  012EF8  6E3B               	movwf	(btemp+9)^0,c
 16656  012EFA  0E00               	movlw	0
 16657  012EFC  6E3C               	movwf	(btemp+10)^0,c
 16658  012EFE  0E00               	movlw	0
 16659  012F00  6E3D               	movwf	(btemp+11)^0,c
 16660                           
 16661                           ;stkvar	_a @ sp[(-13)+-8]
 16662  012F02  0EEB               	movlw	-21
 16663  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16664  012F0A  0EEC               	movlw	-20
 16665  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16666  012F12  0EED               	movlw	-19
 16667  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16668  012F1A  0EEE               	movlw	-18
 16669  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16670  012F22                     l9759:
 16671                           
 16672                           ;stkvar	_a @ sp[(-13)+-8]
 16673  012F22  0EEB               	movlw	-21
 16674  012F24  50E3               	movf	plusw1,w,c
 16675  012F26  E139               	bnz	l9771
 16676  012F28  0EEC               	movlw	-20
 16677  012F2A  50E3               	movf	plusw1,w,c
 16678  012F2C  E136               	bnz	l9771
 16679  012F2E  0EED               	movlw	-19
 16680  012F30  50E3               	movf	plusw1,w,c
 16681  012F32  E133               	bnz	l9771
 16682  012F34  0EEE               	movlw	-18
 16683  012F36  50E3               	movf	plusw1,w,c
 16684  012F38  A4D8               	btfss	status,2,c
 16685  012F3A  D02F               	goto	l9771
 16686                           
 16687                           ;stkvar	_b @ sp[(-13)+-4]
 16688  012F3C  0EEF               	movlw	-17
 16689  012F3E  6AE3               	clrf	plusw1,c
 16690  012F40  0EF0               	movlw	-16
 16691  012F42  6AE3               	clrf	plusw1,c
 16692  012F44  0EF1               	movlw	-15
 16693  012F46  6AE3               	clrf	plusw1,c
 16694  012F48  0EF2               	movlw	-14
 16695  012F4A  6AE3               	clrf	plusw1,c
 16696                           
 16697                           ;stkvar	_b @ sp[(-13)+-4]
 16698  012F4C  0EF1               	movlw	241
 16699  012F4E  24E1               	addwf	fsr1l,w,c
 16700  012F50  6ED9               	movwf	fsr2l,c
 16701  012F52  0EFF               	movlw	255
 16702  012F54  20E2               	addwfc	fsr1h,w,c
 16703  012F56  6EDA               	movwf	fsr2h,c
 16704  012F58  0E80               	movlw	128
 16705  012F5A  12DE               	iorwf	postinc2,f,c
 16706  012F5C  0E7F               	movlw	127
 16707  012F5E  12DD               	iorwf	postdec2,f,c
 16708  012F60                     l9765:
 16709                           
 16710                           ;stkvar	_sign @ sp[(-13)+12]
 16711  012F60  0EFF               	movlw	-1
 16712  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 16713                           
 16714                           ;stkvar	_b @ sp[(-13)+-4]
 16715  012F68  0EF2               	movlw	242
 16716  012F6A  24E1               	addwf	fsr1l,w,c
 16717  012F6C  6ED9               	movwf	fsr2l,c
 16718  012F6E  0EFF               	movlw	255
 16719  012F70  20E2               	addwfc	fsr1h,w,c
 16720  012F72  6EDA               	movwf	fsr2h,c
 16721  012F74  503D               	movf	(btemp+11)^0,w,c
 16722  012F76  12DF               	iorwf	indf2,f,c
 16723                           
 16724                           ;stkvar	_b @ sp[(-13)+-4]
 16725  012F78  0EEF               	movlw	-17
 16726  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 16727  012F80  0EF0               	movlw	-16
 16728  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 16729  012F88  0EF1               	movlw	-15
 16730  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 16731  012F90  0EF2               	movlw	-14
 16732  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 16733  012F98  D19F               	goto	l2624
 16734  012F9A                     l9771:
 16735                           
 16736                           ;stkvar	_bexp @ sp[(-13)+11]
 16737  012F9A  0EFE               	movlw	-2
 16738  012F9C  50E3               	movf	plusw1,w,c
 16739  012F9E  A4D8               	btfss	status,2,c
 16740  012FA0  D009               	goto	l9779
 16741  012FA2  0E00               	movlw	0
 16742  012FA4  6E32               	movwf	btemp^0,c
 16743  012FA6  0E00               	movlw	0
 16744  012FA8  6E33               	movwf	(btemp+1)^0,c
 16745  012FAA  0E00               	movlw	0
 16746  012FAC  6E34               	movwf	(btemp+2)^0,c
 16747  012FAE  0E00               	movlw	0
 16748  012FB0  6E35               	movwf	(btemp+3)^0,c
 16749  012FB2  D192               	goto	l2624
 16750  012FB4                     l9779:
 16751                           
 16752                           ;stkvar	_bexp @ sp[(-13)+11]
 16753  012FB4  0EFE               	movlw	-2
 16754  012FB6  50E3               	movf	plusw1,w,c
 16755  012FB8  6E3C               	movwf	(btemp+10)^0,c
 16756  012FBA  6A3D               	clrf	(btemp+11)^0,c
 16757                           
 16758                           ;stkvar	_aexp @ sp[(-13)+10]
 16759  012FBC  0EFD               	movlw	-3
 16760  012FBE  50E3               	movf	plusw1,w,c
 16761  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 16762  012FC2  0E00               	movlw	0
 16763  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 16764  012FC6  0E7F               	movlw	127
 16765  012FC8  263C               	addwf	(btemp+10)^0,f,c
 16766  012FCA  0E00               	movlw	0
 16767  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 16768                           
 16769                           ;stkvar	_new_exp @ sp[(-13)+8]
 16770  012FCE  0EFB               	movlw	-5
 16771  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16772  012FD6  0EFC               	movlw	-4
 16773  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16774                           
 16775                           ;stkvar	_b @ sp[(-13)+-4]
 16776  012FDE  0EEF               	movlw	-17
 16777  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 16778  012FE6  0EF0               	movlw	-16
 16779  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 16780  012FEE  0EF1               	movlw	-15
 16781  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16782  012FF6  0EF2               	movlw	-14
 16783  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16784                           
 16785                           ;stkvar	_rem @ sp[(-13)+4]
 16786  012FFE  0EF7               	movlw	-9
 16787  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16788  013006  0EF8               	movlw	-8
 16789  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16790  01300E  0EF9               	movlw	-7
 16791  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16792  013016  0EFA               	movlw	-6
 16793  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16794                           
 16795                           ;stkvar	_b @ sp[(-13)+-4]
 16796  01301E  0EEF               	movlw	-17
 16797  013020  6AE3               	clrf	plusw1,c
 16798  013022  0EF0               	movlw	-16
 16799  013024  6AE3               	clrf	plusw1,c
 16800  013026  0EF1               	movlw	-15
 16801  013028  6AE3               	clrf	plusw1,c
 16802  01302A  0EF2               	movlw	-14
 16803  01302C  6AE3               	clrf	plusw1,c
 16804                           
 16805                           ;stkvar	_grs @ sp[(-13)+0]
 16806  01302E  0EF3               	movlw	-13
 16807  013030  6AE3               	clrf	plusw1,c
 16808  013032  0EF4               	movlw	-12
 16809  013034  6AE3               	clrf	plusw1,c
 16810  013036  0EF5               	movlw	-11
 16811  013038  6AE3               	clrf	plusw1,c
 16812  01303A  0EF6               	movlw	-10
 16813  01303C  6AE3               	clrf	plusw1,c
 16814                           
 16815                           ;stkvar	_aexp @ sp[(-13)+10]
 16816  01303E  0EFD               	movlw	-3
 16817  013040  6AE3               	clrf	plusw1,c
 16818  013042  D050               	goto	l9807
 16819  013044                     l9789:
 16820                           
 16821                           ;stkvar	_aexp @ sp[(-13)+10]
 16822  013044  0EFD               	movlw	-3
 16823  013046  50E3               	movf	plusw1,w,c
 16824  013048  B4D8               	btfsc	status,2,c
 16825  01304A  D020               	goto	l9799
 16826                           
 16827                           ;stkvar	_rem @ sp[(-13)+4]
 16828  01304C  90D8               	bcf	status,0,c
 16829  01304E  0EF7               	movlw	-9
 16830  013050  36E3               	rlcf	plusw1,f,c
 16831  013052  0EF8               	movlw	-8
 16832  013054  36E3               	rlcf	plusw1,f,c
 16833  013056  0EF9               	movlw	-7
 16834  013058  36E3               	rlcf	plusw1,f,c
 16835  01305A  0EFA               	movlw	-6
 16836  01305C  36E3               	rlcf	plusw1,f,c
 16837                           
 16838                           ;stkvar	_b @ sp[(-13)+-4]
 16839  01305E  90D8               	bcf	status,0,c
 16840  013060  0EEF               	movlw	-17
 16841  013062  36E3               	rlcf	plusw1,f,c
 16842  013064  0EF0               	movlw	-16
 16843  013066  36E3               	rlcf	plusw1,f,c
 16844  013068  0EF1               	movlw	-15
 16845  01306A  36E3               	rlcf	plusw1,f,c
 16846  01306C  0EF2               	movlw	-14
 16847  01306E  36E3               	rlcf	plusw1,f,c
 16848                           
 16849                           ;stkvar	_grs @ sp[(-13)+0]
 16850  013070  0EF6               	movlw	-10
 16851  013072  AEE3               	btfss	plusw1,7,c
 16852  013074  D002               	goto	l9797
 16853                           
 16854                           ;stkvar	_b @ sp[(-13)+-4]
 16855  013076  0EEF               	movlw	-17
 16856  013078  80E3               	bsf	plusw1,0,c
 16857  01307A                     l9797:
 16858                           
 16859                           ;stkvar	_grs @ sp[(-13)+0]
 16860  01307A  90D8               	bcf	status,0,c
 16861  01307C  0EF3               	movlw	-13
 16862  01307E  36E3               	rlcf	plusw1,f,c
 16863  013080  0EF4               	movlw	-12
 16864  013082  36E3               	rlcf	plusw1,f,c
 16865  013084  0EF5               	movlw	-11
 16866  013086  36E3               	rlcf	plusw1,f,c
 16867  013088  0EF6               	movlw	-10
 16868  01308A  36E3               	rlcf	plusw1,f,c
 16869  01308C                     l9799:
 16870                           
 16871                           ;stkvar	_a @ sp[(-13)+-8]
 16872                           ;stkvar	_rem @ sp[(-13)+4]
 16873  01308C  50E1               	movf	fsr1l,w,c
 16874  01308E  0FF7               	addlw	-9
 16875  013090  6ED9               	movwf	fsr2l,c
 16876  013092  50E2               	movf	fsr1h,w,c
 16877  013094  6EDA               	movwf	fsr2h,c
 16878  013096  0EFF               	movlw	255
 16879  013098  22DA               	addwfc	fsr2h,f,c
 16880  01309A  0EEB               	movlw	-21
 16881  01309C  50E3               	movf	plusw1,w,c
 16882  01309E  5CDE               	subwf	postinc2,w,c
 16883  0130A0  0EEC               	movlw	-20
 16884  0130A2  50E3               	movf	plusw1,w,c
 16885  0130A4  58DE               	subwfb	postinc2,w,c
 16886  0130A6  0EED               	movlw	-19
 16887  0130A8  50E3               	movf	plusw1,w,c
 16888  0130AA  58DE               	subwfb	postinc2,w,c
 16889  0130AC  0EEE               	movlw	-18
 16890  0130AE  50E3               	movf	plusw1,w,c
 16891  0130B0  58DE               	subwfb	postinc2,w,c
 16892  0130B2  A0D8               	btfss	status,0,c
 16893  0130B4  D015               	goto	l9805
 16894                           
 16895                           ;stkvar	_grs @ sp[(-13)+0]
 16896  0130B6  0EF6               	movlw	-10
 16897  0130B8  8CE3               	bsf	plusw1,6,c
 16898                           
 16899                           ;stkvar	_a @ sp[(-13)+-8]
 16900                           ;stkvar	_rem @ sp[(-13)+4]
 16901  0130BA  50E1               	movf	fsr1l,w,c
 16902  0130BC  0FF7               	addlw	-9
 16903  0130BE  6ED9               	movwf	fsr2l,c
 16904  0130C0  50E2               	movf	fsr1h,w,c
 16905  0130C2  6EDA               	movwf	fsr2h,c
 16906  0130C4  0EFF               	movlw	255
 16907  0130C6  22DA               	addwfc	fsr2h,f,c
 16908  0130C8  0EEB               	movlw	-21
 16909  0130CA  50E3               	movf	plusw1,w,c
 16910  0130CC  5EDE               	subwf	postinc2,f,c
 16911  0130CE  0EEC               	movlw	-20
 16912  0130D0  50E3               	movf	plusw1,w,c
 16913  0130D2  5ADE               	subwfb	postinc2,f,c
 16914  0130D4  0EED               	movlw	-19
 16915  0130D6  50E3               	movf	plusw1,w,c
 16916  0130D8  5ADE               	subwfb	postinc2,f,c
 16917  0130DA  0EEE               	movlw	-18
 16918  0130DC  50E3               	movf	plusw1,w,c
 16919  0130DE  5ADE               	subwfb	postinc2,f,c
 16920  0130E0                     l9805:
 16921                           
 16922                           ;stkvar	_aexp @ sp[(-13)+10]
 16923  0130E0  0EFD               	movlw	-3
 16924  0130E2  2AE3               	incf	plusw1,f,c
 16925  0130E4                     l9807:
 16926                           
 16927                           ;stkvar	_aexp @ sp[(-13)+10]
 16928  0130E4  0EFD               	movlw	-3
 16929  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 16930  0130EC  0E19               	movlw	25
 16931  0130EE  6432               	cpfsgt	btemp^0,c
 16932  0130F0  D7A9               	goto	l9789
 16933                           
 16934                           ;stkvar	_rem @ sp[(-13)+4]
 16935  0130F2  0EF7               	movlw	-9
 16936  0130F4  50E3               	movf	plusw1,w,c
 16937  0130F6  E10A               	bnz	u10020
 16938  0130F8  0EF8               	movlw	-8
 16939  0130FA  50E3               	movf	plusw1,w,c
 16940  0130FC  E107               	bnz	u10020
 16941  0130FE  0EF9               	movlw	-7
 16942  013100  50E3               	movf	plusw1,w,c
 16943  013102  E104               	bnz	u10020
 16944  013104  0EFA               	movlw	-6
 16945  013106  50E3               	movf	plusw1,w,c
 16946  013108  B4D8               	btfsc	status,2,c
 16947  01310A  D024               	goto	l9823
 16948  01310C                     u10020:
 16949                           
 16950                           ;stkvar	_grs @ sp[(-13)+0]
 16951  01310C  0EF3               	movlw	-13
 16952  01310E  80E3               	bsf	plusw1,0,c
 16953  013110  D021               	goto	l9823
 16954  013112                     l9813:
 16955                           
 16956                           ;stkvar	_b @ sp[(-13)+-4]
 16957  013112  90D8               	bcf	status,0,c
 16958  013114  0EEF               	movlw	-17
 16959  013116  36E3               	rlcf	plusw1,f,c
 16960  013118  0EF0               	movlw	-16
 16961  01311A  36E3               	rlcf	plusw1,f,c
 16962  01311C  0EF1               	movlw	-15
 16963  01311E  36E3               	rlcf	plusw1,f,c
 16964  013120  0EF2               	movlw	-14
 16965  013122  36E3               	rlcf	plusw1,f,c
 16966                           
 16967                           ;stkvar	_grs @ sp[(-13)+0]
 16968  013124  0EF6               	movlw	-10
 16969  013126  AEE3               	btfss	plusw1,7,c
 16970  013128  D002               	goto	l9819
 16971                           
 16972                           ;stkvar	_b @ sp[(-13)+-4]
 16973  01312A  0EEF               	movlw	-17
 16974  01312C  80E3               	bsf	plusw1,0,c
 16975  01312E                     l9819:
 16976                           
 16977                           ;stkvar	_grs @ sp[(-13)+0]
 16978  01312E  90D8               	bcf	status,0,c
 16979  013130  0EF3               	movlw	-13
 16980  013132  36E3               	rlcf	plusw1,f,c
 16981  013134  0EF4               	movlw	-12
 16982  013136  36E3               	rlcf	plusw1,f,c
 16983  013138  0EF5               	movlw	-11
 16984  01313A  36E3               	rlcf	plusw1,f,c
 16985  01313C  0EF6               	movlw	-10
 16986  01313E  36E3               	rlcf	plusw1,f,c
 16987                           
 16988                           ;stkvar	_new_exp @ sp[(-13)+8]
 16989  013140  50E1               	movf	fsr1l,w,c
 16990  013142  0FFB               	addlw	-5
 16991  013144  6ED9               	movwf	fsr2l,c
 16992  013146  50E2               	movf	fsr1h,w,c
 16993  013148  6EDA               	movwf	fsr2h,c
 16994  01314A  0EFF               	movlw	255
 16995  01314C  22DA               	addwfc	fsr2h,f,c
 16996  01314E  06DE               	decf	postinc2,f,c
 16997  013150  0E00               	movlw	0
 16998  013152  5ADD               	subwfb	postdec2,f,c
 16999  013154                     l9823:
 17000                           
 17001                           ;stkvar	_b @ sp[(-13)+-4]
 17002  013154  0EF1               	movlw	-15
 17003  013156  AEE3               	btfss	plusw1,7,c
 17004  013158  D7DC               	goto	l9813
 17005                           
 17006                           ;stkvar	_aexp @ sp[(-13)+10]
 17007  01315A  0EFD               	movlw	-3
 17008  01315C  6AE3               	clrf	plusw1,c
 17009                           
 17010                           ;stkvar	_grs @ sp[(-13)+0]
 17011  01315E  0EF6               	movlw	-10
 17012  013160  AEE3               	btfss	plusw1,7,c
 17013  013162  D020               	goto	l9837
 17014                           
 17015                           ;stkvar	_grs @ sp[(-13)+0]
 17016  013164  50E1               	movf	fsr1l,w,c
 17017  013166  0FF3               	addlw	-13
 17018  013168  6ED9               	movwf	fsr2l,c
 17019  01316A  50E2               	movf	fsr1h,w,c
 17020  01316C  6EDA               	movwf	fsr2h,c
 17021  01316E  0EFF               	movlw	255
 17022  013170  22DA               	addwfc	fsr2h,f,c
 17023  013172  0EFF               	movlw	255
 17024  013174  14DE               	andwf	postinc2,w,c
 17025  013176  6E3A               	movwf	(btemp+8)^0,c
 17026  013178  0EFF               	movlw	255
 17027  01317A  14DE               	andwf	postinc2,w,c
 17028  01317C  6E3B               	movwf	(btemp+9)^0,c
 17029  01317E  0EFF               	movlw	255
 17030  013180  14DE               	andwf	postinc2,w,c
 17031  013182  6E3C               	movwf	(btemp+10)^0,c
 17032  013184  0E7F               	movlw	127
 17033  013186  14DE               	andwf	postinc2,w,c
 17034  013188  6E3D               	movwf	(btemp+11)^0,c
 17035  01318A  503A               	movf	(btemp+8)^0,w,c
 17036  01318C  103B               	iorwf	(btemp+9)^0,w,c
 17037  01318E  103C               	iorwf	(btemp+10)^0,w,c
 17038  013190  103D               	iorwf	(btemp+11)^0,w,c
 17039  013192  B4D8               	btfsc	status,2,c
 17040  013194  D004               	goto	l9833
 17041  013196                     u10060:
 17042                           
 17043                           ;stkvar	_aexp @ sp[(-13)+10]
 17044  013196  0EFD               	movlw	-3
 17045  013198  6AE3               	clrf	plusw1,c
 17046  01319A  2AE3               	incf	plusw1,f,c
 17047  01319C  D003               	goto	l9837
 17048  01319E                     l9833:
 17049                           
 17050                           ;stkvar	_b @ sp[(-13)+-4]
 17051  01319E  0EEF               	movlw	-17
 17052  0131A0  B0E3               	btfsc	plusw1,0,c
 17053  0131A2  D7F9               	goto	u10060
 17054  0131A4                     l9837:
 17055                           
 17056                           ;stkvar	_aexp @ sp[(-13)+10]
 17057  0131A4  0EFD               	movlw	-3
 17058  0131A6  50E3               	movf	plusw1,w,c
 17059  0131A8  B4D8               	btfsc	status,2,c
 17060  0131AA  D036               	goto	l9847
 17061                           
 17062                           ;stkvar	_b @ sp[(-13)+-4]
 17063  0131AC  50E1               	movf	fsr1l,w,c
 17064  0131AE  0FEF               	addlw	-17
 17065  0131B0  6ED9               	movwf	fsr2l,c
 17066  0131B2  50E2               	movf	fsr1h,w,c
 17067  0131B4  6EDA               	movwf	fsr2h,c
 17068  0131B6  0EFF               	movlw	255
 17069  0131B8  22DA               	addwfc	fsr2h,f,c
 17070  0131BA  2ADE               	incf	postinc2,f,c
 17071  0131BC  0E00               	movlw	0
 17072  0131BE  22DE               	addwfc	postinc2,f,c
 17073  0131C0  22DE               	addwfc	postinc2,f,c
 17074  0131C2  22DE               	addwfc	postinc2,f,c
 17075                           
 17076                           ;stkvar	_b @ sp[(-13)+-4]
 17077  0131C4  0EF2               	movlw	-14
 17078  0131C6  A0E3               	btfss	plusw1,0,c
 17079  0131C8  D027               	goto	l9847
 17080  0131CA  0E01               	movlw	1
 17081  0131CC  6E3D               	movwf	(btemp+11)^0,c
 17082                           
 17083                           ;stkvar	_b @ sp[(-13)+-4]
 17084  0131CE  50E1               	movf	fsr1l,w,c
 17085  0131D0  0FEF               	addlw	-17
 17086  0131D2  6ED9               	movwf	fsr2l,c
 17087  0131D4  50E2               	movf	fsr1h,w,c
 17088  0131D6  6EDA               	movwf	fsr2h,c
 17089  0131D8  0EFF               	movlw	255
 17090  0131DA  22DA               	addwfc	fsr2h,f,c
 17091  0131DC  283D               	incf	(btemp+11)^0,w,c
 17092  0131DE  52DE               	movf	postinc2,f,c
 17093  0131E0  D008               	goto	u10100
 17094  0131E2                     u10105:
 17095  0131E2  52DE               	movf	postinc2,f,c
 17096  0131E4  90D8               	bcf	status,0,c
 17097  0131E6  BEDC               	btfsc	preinc2,7,c
 17098  0131E8  80D8               	bsf	status,0,c
 17099  0131EA  32DD               	rrcf	postdec2,f,c
 17100  0131EC  32DD               	rrcf	postdec2,f,c
 17101  0131EE  32DD               	rrcf	postdec2,f,c
 17102  0131F0  32DE               	rrcf	postinc2,f,c
 17103  0131F2                     u10100:
 17104  0131F2  2EE8               	decfsz	wreg,f,c
 17105  0131F4  D7F6               	goto	u10105
 17106                           
 17107                           ;stkvar	_new_exp @ sp[(-13)+8]
 17108  0131F6  0EFB               	movlw	-5
 17109  0131F8  50E3               	movf	plusw1,w,c
 17110  0131FA  0F01               	addlw	1
 17111  0131FC  6E32               	movwf	btemp^0,c
 17112  0131FE  0EFB               	movlw	-5
 17113  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 17114  013206  6A32               	clrf	btemp^0,c
 17115  013208  0EFC               	movlw	-4
 17116  01320A  50E3               	movf	plusw1,w,c
 17117  01320C  2032               	addwfc	btemp^0,w,c
 17118  01320E  6E32               	movwf	btemp^0,c
 17119  013210  0EFC               	movlw	-4
 17120  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 17121  013218                     l9847:
 17122                           
 17123                           ;stkvar	_new_exp @ sp[(-13)+8]
 17124  013218  0EFC               	movlw	-4
 17125  01321A  BEE3               	btfsc	plusw1,7,c
 17126  01321C  D01B               	goto	l9853
 17127  01321E  0EFC               	movlw	-4
 17128  013220  50E3               	movf	plusw1,w,c
 17129  013222  E104               	bnz	u10110
 17130  013224  0EFB               	movlw	-5
 17131  013226  28E3               	incf	plusw1,w,c
 17132  013228  A0D8               	btfss	status,0,c
 17133  01322A  D014               	goto	l9853
 17134  01322C                     u10110:
 17135  01322C  0EFF               	movlw	255
 17136  01322E  6E3C               	movwf	(btemp+10)^0,c
 17137  013230  0E00               	movlw	0
 17138  013232  6E3D               	movwf	(btemp+11)^0,c
 17139                           
 17140                           ;stkvar	_new_exp @ sp[(-13)+8]
 17141  013234  0EFB               	movlw	-5
 17142  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17143  01323C  0EFC               	movlw	-4
 17144  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17145                           
 17146                           ;stkvar	_b @ sp[(-13)+-4]
 17147  013244  0EEF               	movlw	-17
 17148  013246  6AE3               	clrf	plusw1,c
 17149  013248  0EF0               	movlw	-16
 17150  01324A  6AE3               	clrf	plusw1,c
 17151  01324C  0EF1               	movlw	-15
 17152  01324E  6AE3               	clrf	plusw1,c
 17153  013250  0EF2               	movlw	-14
 17154  013252  6AE3               	clrf	plusw1,c
 17155  013254                     l9853:
 17156                           
 17157                           ;stkvar	_new_exp @ sp[(-13)+8]
 17158  013254  0EFC               	movlw	-4
 17159  013256  BEE3               	btfsc	plusw1,7,c
 17160  013258  D007               	goto	u10120
 17161  01325A  0EFC               	movlw	-4
 17162  01325C  50E3               	movf	plusw1,w,c
 17163  01325E  E112               	bnz	l9859
 17164  013260  0EFB               	movlw	-5
 17165  013262  04E3               	decf	plusw1,w,c
 17166  013264  B0D8               	btfsc	status,0,c
 17167  013266  D00E               	goto	l9859
 17168  013268                     u10120:
 17169                           
 17170                           ;stkvar	_new_exp @ sp[(-13)+8]
 17171  013268  0EFB               	movlw	-5
 17172  01326A  6AE3               	clrf	plusw1,c
 17173  01326C  0EFC               	movlw	-4
 17174  01326E  6AE3               	clrf	plusw1,c
 17175                           
 17176                           ;stkvar	_b @ sp[(-13)+-4]
 17177  013270  0EEF               	movlw	-17
 17178  013272  6AE3               	clrf	plusw1,c
 17179  013274  0EF0               	movlw	-16
 17180  013276  6AE3               	clrf	plusw1,c
 17181  013278  0EF1               	movlw	-15
 17182  01327A  6AE3               	clrf	plusw1,c
 17183  01327C  0EF2               	movlw	-14
 17184  01327E  6AE3               	clrf	plusw1,c
 17185                           
 17186                           ;stkvar	_sign @ sp[(-13)+12]
 17187  013280  0EFF               	movlw	-1
 17188  013282  6AE3               	clrf	plusw1,c
 17189  013284                     l9859:
 17190                           
 17191                           ;stkvar	_new_exp @ sp[(-13)+8]
 17192                           ;stkvar	_bexp @ sp[(-13)+11]
 17193  013284  0EFB               	movlw	-5
 17194  013286  006F FF8C  F032    	movff	plusw1,btemp
 17195  01328C  0EFE               	movlw	-2
 17196  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17197                           
 17198                           ;stkvar	_bexp @ sp[(-13)+11]
 17199  013294  0EFE               	movlw	-2
 17200  013296  A0E3               	btfss	plusw1,0,c
 17201  013298  D009               	goto	l9865
 17202                           
 17203                           ;stkvar	_b @ sp[(-13)+-4]
 17204  01329A  0EF1               	movlw	241
 17205  01329C  24E1               	addwf	fsr1l,w,c
 17206  01329E  6ED9               	movwf	fsr2l,c
 17207  0132A0  0EFF               	movlw	255
 17208  0132A2  20E2               	addwfc	fsr1h,w,c
 17209  0132A4  6EDA               	movwf	fsr2h,c
 17210  0132A6  0E00               	movlw	0
 17211  0132A8  8EDB               	bsf	plusw2,7,c
 17212  0132AA  D008               	goto	l9867
 17213  0132AC                     l9865:
 17214                           
 17215                           ;stkvar	_b @ sp[(-13)+-4]
 17216  0132AC  0EF1               	movlw	241
 17217  0132AE  24E1               	addwf	fsr1l,w,c
 17218  0132B0  6ED9               	movwf	fsr2l,c
 17219  0132B2  0EFF               	movlw	255
 17220  0132B4  20E2               	addwfc	fsr1h,w,c
 17221  0132B6  6EDA               	movwf	fsr2h,c
 17222  0132B8  0E7F               	movlw	127
 17223  0132BA  16DF               	andwf	indf2,f,c
 17224  0132BC                     l9867:
 17225                           
 17226                           ;stkvar	_b @ sp[(-13)+-4]
 17227  0132BC  0EF2               	movlw	242
 17228  0132BE  24E1               	addwf	fsr1l,w,c
 17229  0132C0  6ED9               	movwf	fsr2l,c
 17230  0132C2  0EFF               	movlw	255
 17231  0132C4  20E2               	addwfc	fsr1h,w,c
 17232  0132C6  6EDA               	movwf	fsr2h,c
 17233                           
 17234                           ;stkvar	_bexp @ sp[(-13)+11]
 17235  0132C8  0EFE               	movlw	-2
 17236  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 17237  0132D0  90D8               	bcf	status,0,c
 17238  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 17239  0132D4  6EDF               	movwf	indf2,c
 17240  0132D6  D644               	goto	l9765
 17241  0132D8                     l2624:
 17242                           
 17243                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17244  0132D8  0EEB               	movlw	235
 17245  0132DA  26E1               	addwf	fsr1l,f,c
 17246  0132DC  0EFF               	movlw	255
 17247  0132DE  22E2               	addwfc	fsr1h,f,c
 17248  0132E0  0012               	return		;funcret
 17249  0132E2                     __end_of___fldiv:
 17250                           	opt callstack 0
 17251                           
 17252 ;; *************** function ___awmod *****************
 17253 ;; Defined at:
 17254 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17255 ;; Parameters:    Size  Location     Type
 17256 ;;  dividend        2  [STACK] int 
 17257 ;;  divisor         2  [STACK] int 
 17258 ;; Auto vars:     Size  Location     Type
 17259 ;;  sign            1  [STACK] unsigned char 
 17260 ;;  counter         1  [STACK] unsigned char 
 17261 ;; Return value:  Size  Location     Type
 17262 ;;                  2  [STACK] int 
 17263 ;; Registers used:
 17264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17265 ;; Tracked objects:
 17266 ;;		On entry : 0/5
 17267 ;;		On exit  : 0/0
 17268 ;;		Unchanged: 0/0
 17269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17274 ;;Total ram usage:        0 bytes
 17275 ;; Hardware stack levels used:    1
 17276 ;; Hardware stack levels required when called:    6
 17277 ;; This function calls:
 17278 ;;		Nothing
 17279 ;; This function is called by:
 17280 ;;		_efgtoa
 17281 ;; This function uses a reentrant model
 17282 ;;
 17283                           
 17284                           	psect	text58
 17285  0165B8                     __ptext58:
 17286                           	opt callstack 0
 17287  0165B8                     ___awmod:
 17288                           	opt callstack 0
 17289                           
 17290                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17291  0165B8  52E6               	movf	postinc1,f,c
 17292  0165BA  52E6               	movf	postinc1,f,c
 17293                           
 17294                           ;stkvar	_sign @ sp[(-2)+0]
 17295                           
 17296                           ;incstack = 0
 17297  0165BC  0EFE               	movlw	-2
 17298  0165BE  6AE3               	clrf	plusw1,c
 17299                           
 17300                           ;stkvar	_dividend @ sp[(-2)+-2]
 17301  0165C0  0EFD               	movlw	-3
 17302  0165C2  AEE3               	btfss	plusw1,7,c
 17303  0165C4  D009               	goto	l10091
 17304                           
 17305                           ;stkvar	_dividend @ sp[(-2)+-2]
 17306                           ;stkvar	_dividend @ sp[(-2)+-2]
 17307  0165C6  0EFC               	movlw	-4
 17308  0165C8  6CE3               	negf	plusw1,c
 17309  0165CA  0EFD               	movlw	-3
 17310  0165CC  1EE3               	comf	plusw1,f,c
 17311  0165CE  B0D8               	btfsc	status,0,c
 17312  0165D0  2AE3               	incf	plusw1,f,c
 17313                           
 17314                           ;stkvar	_sign @ sp[(-2)+0]
 17315  0165D2  0EFE               	movlw	-2
 17316  0165D4  6AE3               	clrf	plusw1,c
 17317  0165D6  2AE3               	incf	plusw1,f,c
 17318  0165D8                     l10091:
 17319                           
 17320                           ;stkvar	_divisor @ sp[(-2)+-4]
 17321  0165D8  0EFB               	movlw	-5
 17322  0165DA  AEE3               	btfss	plusw1,7,c
 17323  0165DC  D006               	goto	l10095
 17324                           
 17325                           ;stkvar	_divisor @ sp[(-2)+-4]
 17326                           ;stkvar	_divisor @ sp[(-2)+-4]
 17327  0165DE  0EFA               	movlw	-6
 17328  0165E0  6CE3               	negf	plusw1,c
 17329  0165E2  0EFB               	movlw	-5
 17330  0165E4  1EE3               	comf	plusw1,f,c
 17331  0165E6  B0D8               	btfsc	status,0,c
 17332  0165E8  2AE3               	incf	plusw1,f,c
 17333  0165EA                     l10095:
 17334                           
 17335                           ;stkvar	_divisor @ sp[(-2)+-4]
 17336  0165EA  0EFA               	movlw	-6
 17337  0165EC  006F FF8C  F032    	movff	plusw1,btemp
 17338  0165F2  0EFB               	movlw	-5
 17339  0165F4  50E3               	movf	plusw1,w,c
 17340  0165F6  1032               	iorwf	btemp^0,w,c
 17341  0165F8  B4D8               	btfsc	status,2,c
 17342  0165FA  D053               	goto	u10480
 17343                           
 17344                           ;stkvar	_counter @ sp[(-2)+1]
 17345  0165FC  0EFF               	movlw	-1
 17346  0165FE  6AE3               	clrf	plusw1,c
 17347  016600  D012               	goto	L14
 17348  016602                     l10099:
 17349                           
 17350                           ;stkvar	_divisor @ sp[(-2)+-4]
 17351  016602  0EFA               	movlw	-6
 17352  016604  50E3               	movf	plusw1,w,c
 17353  016606  90D8               	bcf	status,0,c
 17354  016608  34E8               	rlcf	wreg,w,c
 17355  01660A  6E32               	movwf	btemp^0,c
 17356  01660C  0EFA               	movlw	-6
 17357  01660E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17358  016614  0EFB               	movlw	-5
 17359  016616  50E3               	movf	plusw1,w,c
 17360  016618  34E8               	rlcf	wreg,w,c
 17361  01661A  6E32               	movwf	btemp^0,c
 17362  01661C  0EFB               	movlw	-5
 17363  01661E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17364                           
 17365                           ;stkvar	_counter @ sp[(-2)+1]
 17366  016624  0EFF               	movlw	-1
 17367  016626                     L14:
 17368  016626  2AE3               	incf	plusw1,f,c
 17369                           
 17370                           ;stkvar	_divisor @ sp[(-2)+-4]
 17371  016628  0EFB               	movlw	-5
 17372  01662A  AEE3               	btfss	plusw1,7,c
 17373  01662C  D7EA               	goto	l10099
 17374  01662E                     u10460:
 17375                           
 17376                           ;stkvar	_divisor @ sp[(-2)+-4]
 17377  01662E  0EFA               	movlw	-6
 17378  016630  006F FF8C  F03C    	movff	plusw1,btemp+10
 17379  016636  0EFB               	movlw	-5
 17380  016638  006F FF8C  F03D    	movff	plusw1,btemp+11
 17381                           
 17382                           ;stkvar	_dividend @ sp[(-2)+-2]
 17383  01663E  0EFC               	movlw	-4
 17384  016640  006F FF8C  F03A    	movff	plusw1,btemp+8
 17385  016646  0EFD               	movlw	-3
 17386  016648  006F FF8C  F03B    	movff	plusw1,btemp+9
 17387  01664E  503C               	movf	(btemp+10)^0,w,c
 17388  016650  5C3A               	subwf	(btemp+8)^0,w,c
 17389  016652  503D               	movf	(btemp+11)^0,w,c
 17390  016654  583B               	subwfb	(btemp+9)^0,w,c
 17391  016656  A0D8               	btfss	status,0,c
 17392  016658  D014               	goto	l10109
 17393                           
 17394                           ;stkvar	_divisor @ sp[(-2)+-4]
 17395                           ;stkvar	_dividend @ sp[(-2)+-2]
 17396  01665A  0EFC               	movlw	-4
 17397  01665C  50E3               	movf	plusw1,w,c
 17398  01665E  6E32               	movwf	btemp^0,c
 17399  016660  0EFA               	movlw	-6
 17400  016662  50E3               	movf	plusw1,w,c
 17401  016664  5E32               	subwf	btemp^0,f,c
 17402  016666  0EFC               	movlw	-4
 17403  016668  0060  F0CB  FFE3   	movff	btemp,plusw1
 17404  01666E  0EFD               	movlw	-3
 17405  016670  50E3               	movf	plusw1,w,c
 17406  016672  6E32               	movwf	btemp^0,c
 17407  016674  0EFB               	movlw	-5
 17408  016676  50E3               	movf	plusw1,w,c
 17409  016678  5A32               	subwfb	btemp^0,f,c
 17410  01667A  0EFD               	movlw	-3
 17411  01667C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17412  016682                     l10109:
 17413                           
 17414                           ;stkvar	_divisor @ sp[(-2)+-4]
 17415  016682  90D8               	bcf	status,0,c
 17416  016684  0EFB               	movlw	-5
 17417  016686  32E3               	rrcf	plusw1,f,c
 17418  016688  0EFA               	movlw	-6
 17419  01668A  32E3               	rrcf	plusw1,f,c
 17420                           
 17421                           ;stkvar	_counter @ sp[(-2)+1]
 17422  01668C  0EFF               	movlw	-1
 17423  01668E  50E3               	movf	plusw1,w,c
 17424  016690  6E32               	movwf	btemp^0,c
 17425  016692  0E01               	movlw	1
 17426  016694  5E32               	subwf	btemp^0,f,c
 17427  016696  0EFF               	movlw	-1
 17428  016698  0060  F0CB  FFE3   	movff	btemp,plusw1
 17429  01669E  A4D8               	btfss	status,2,c
 17430  0166A0  D7C6               	goto	u10460
 17431  0166A2                     u10480:
 17432                           
 17433                           ;stkvar	_sign @ sp[(-2)+0]
 17434  0166A2  0EFE               	movlw	-2
 17435  0166A4  50E3               	movf	plusw1,w,c
 17436  0166A6  B4D8               	btfsc	status,2,c
 17437  0166A8  D006               	goto	l10117
 17438                           
 17439                           ;stkvar	_dividend @ sp[(-2)+-2]
 17440                           ;stkvar	_dividend @ sp[(-2)+-2]
 17441  0166AA  0EFC               	movlw	-4
 17442  0166AC  6CE3               	negf	plusw1,c
 17443  0166AE  0EFD               	movlw	-3
 17444  0166B0  1EE3               	comf	plusw1,f,c
 17445  0166B2  B0D8               	btfsc	status,0,c
 17446  0166B4  2AE3               	incf	plusw1,f,c
 17447  0166B6                     l10117:
 17448                           
 17449                           ;stkvar	_dividend @ sp[(-2)+-2]
 17450  0166B6  0EFC               	movlw	-4
 17451  0166B8  006F FF8C  F032    	movff	plusw1,btemp
 17452  0166BE  0EFD               	movlw	-3
 17453  0166C0  006F FF8C  F033    	movff	plusw1,btemp+1
 17454                           
 17455                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17456  0166C6  0EFA               	movlw	250
 17457  0166C8  26E1               	addwf	fsr1l,f,c
 17458  0166CA  0EFF               	movlw	255
 17459  0166CC  22E2               	addwfc	fsr1h,f,c
 17460  0166CE  0012               	return		;funcret
 17461  0166D0                     __end_of___awmod:
 17462                           	opt callstack 0
 17463                           
 17464 ;; *************** function ___awdiv *****************
 17465 ;; Defined at:
 17466 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17467 ;; Parameters:    Size  Location     Type
 17468 ;;  dividend        2  [STACK] int 
 17469 ;;  divisor         2  [STACK] int 
 17470 ;; Auto vars:     Size  Location     Type
 17471 ;;  quotient        2  [STACK] int 
 17472 ;;  sign            1  [STACK] unsigned char 
 17473 ;;  counter         1  [STACK] unsigned char 
 17474 ;; Return value:  Size  Location     Type
 17475 ;;                  2  [STACK] int 
 17476 ;; Registers used:
 17477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17478 ;; Tracked objects:
 17479 ;;		On entry : 0/5
 17480 ;;		On exit  : 0/0
 17481 ;;		Unchanged: 0/0
 17482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17487 ;;Total ram usage:        0 bytes
 17488 ;; Hardware stack levels used:    1
 17489 ;; Hardware stack levels required when called:    6
 17490 ;; This function calls:
 17491 ;;		Nothing
 17492 ;; This function is called by:
 17493 ;;		_efgtoa
 17494 ;; This function uses a reentrant model
 17495 ;;
 17496                           
 17497                           	psect	text59
 17498  0160D0                     __ptext59:
 17499                           	opt callstack 0
 17500  0160D0                     ___awdiv:
 17501                           	opt callstack 0
 17502                           
 17503                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17504  0160D0  52E6               	movf	postinc1,f,c
 17505  0160D2  52E6               	movf	postinc1,f,c
 17506  0160D4  52E6               	movf	postinc1,f,c
 17507  0160D6  52E6               	movf	postinc1,f,c
 17508                           
 17509                           ;stkvar	_sign @ sp[(-4)+2]
 17510                           
 17511                           ;incstack = 0
 17512  0160D8  0EFE               	movlw	-2
 17513  0160DA  6AE3               	clrf	plusw1,c
 17514                           
 17515                           ;stkvar	_divisor @ sp[(-4)+-4]
 17516  0160DC  0EF9               	movlw	-7
 17517  0160DE  AEE3               	btfss	plusw1,7,c
 17518  0160E0  D009               	goto	l10045
 17519                           
 17520                           ;stkvar	_divisor @ sp[(-4)+-4]
 17521                           ;stkvar	_divisor @ sp[(-4)+-4]
 17522  0160E2  0EF8               	movlw	-8
 17523  0160E4  6CE3               	negf	plusw1,c
 17524  0160E6  0EF9               	movlw	-7
 17525  0160E8  1EE3               	comf	plusw1,f,c
 17526  0160EA  B0D8               	btfsc	status,0,c
 17527  0160EC  2AE3               	incf	plusw1,f,c
 17528                           
 17529                           ;stkvar	_sign @ sp[(-4)+2]
 17530  0160EE  0EFE               	movlw	-2
 17531  0160F0  6AE3               	clrf	plusw1,c
 17532  0160F2  2AE3               	incf	plusw1,f,c
 17533  0160F4                     l10045:
 17534                           
 17535                           ;stkvar	_dividend @ sp[(-4)+-2]
 17536  0160F4  0EFB               	movlw	-5
 17537  0160F6  AEE3               	btfss	plusw1,7,c
 17538  0160F8  D008               	goto	l10051
 17539                           
 17540                           ;stkvar	_dividend @ sp[(-4)+-2]
 17541                           ;stkvar	_dividend @ sp[(-4)+-2]
 17542  0160FA  0EFA               	movlw	-6
 17543  0160FC  6CE3               	negf	plusw1,c
 17544  0160FE  0EFB               	movlw	-5
 17545  016100  1EE3               	comf	plusw1,f,c
 17546  016102  B0D8               	btfsc	status,0,c
 17547  016104  2AE3               	incf	plusw1,f,c
 17548                           
 17549                           ;stkvar	_sign @ sp[(-4)+2]
 17550  016106  0EFE               	movlw	-2
 17551  016108  70E3               	btg	plusw1,0,c
 17552  01610A                     l10051:
 17553                           
 17554                           ;stkvar	_quotient @ sp[(-4)+0]
 17555  01610A  0EFC               	movlw	-4
 17556  01610C  6AE3               	clrf	plusw1,c
 17557  01610E  0EFD               	movlw	-3
 17558  016110  6AE3               	clrf	plusw1,c
 17559                           
 17560                           ;stkvar	_divisor @ sp[(-4)+-4]
 17561  016112  0EF8               	movlw	-8
 17562  016114  006F FF8C  F032    	movff	plusw1,btemp
 17563  01611A  0EF9               	movlw	-7
 17564  01611C  50E3               	movf	plusw1,w,c
 17565  01611E  1032               	iorwf	btemp^0,w,c
 17566  016120  B4D8               	btfsc	status,2,c
 17567  016122  D066               	goto	u10410
 17568                           
 17569                           ;stkvar	_counter @ sp[(-4)+3]
 17570  016124  0EFF               	movlw	-1
 17571  016126  6AE3               	clrf	plusw1,c
 17572  016128  D012               	goto	L15
 17573  01612A                     l10057:
 17574                           
 17575                           ;stkvar	_divisor @ sp[(-4)+-4]
 17576  01612A  0EF8               	movlw	-8
 17577  01612C  50E3               	movf	plusw1,w,c
 17578  01612E  90D8               	bcf	status,0,c
 17579  016130  34E8               	rlcf	wreg,w,c
 17580  016132  6E32               	movwf	btemp^0,c
 17581  016134  0EF8               	movlw	-8
 17582  016136  0060  F0CB  FFE3   	movff	btemp,plusw1
 17583  01613C  0EF9               	movlw	-7
 17584  01613E  50E3               	movf	plusw1,w,c
 17585  016140  34E8               	rlcf	wreg,w,c
 17586  016142  6E32               	movwf	btemp^0,c
 17587  016144  0EF9               	movlw	-7
 17588  016146  0060  F0CB  FFE3   	movff	btemp,plusw1
 17589                           
 17590                           ;stkvar	_counter @ sp[(-4)+3]
 17591  01614C  0EFF               	movlw	-1
 17592  01614E                     L15:
 17593  01614E  2AE3               	incf	plusw1,f,c
 17594                           
 17595                           ;stkvar	_divisor @ sp[(-4)+-4]
 17596  016150  0EF9               	movlw	-7
 17597  016152  AEE3               	btfss	plusw1,7,c
 17598  016154  D7EA               	goto	l10057
 17599  016156                     u10390:
 17600                           
 17601                           ;stkvar	_quotient @ sp[(-4)+0]
 17602  016156  0EFC               	movlw	-4
 17603  016158  50E3               	movf	plusw1,w,c
 17604  01615A  90D8               	bcf	status,0,c
 17605  01615C  34E8               	rlcf	wreg,w,c
 17606  01615E  6E32               	movwf	btemp^0,c
 17607  016160  0EFC               	movlw	-4
 17608  016162  0060  F0CB  FFE3   	movff	btemp,plusw1
 17609  016168  0EFD               	movlw	-3
 17610  01616A  50E3               	movf	plusw1,w,c
 17611  01616C  34E8               	rlcf	wreg,w,c
 17612  01616E  6E32               	movwf	btemp^0,c
 17613  016170  0EFD               	movlw	-3
 17614  016172  0060  F0CB  FFE3   	movff	btemp,plusw1
 17615                           
 17616                           ;stkvar	_divisor @ sp[(-4)+-4]
 17617  016178  0EF8               	movlw	-8
 17618  01617A  006F FF8C  F03C    	movff	plusw1,btemp+10
 17619  016180  0EF9               	movlw	-7
 17620  016182  006F FF8C  F03D    	movff	plusw1,btemp+11
 17621                           
 17622                           ;stkvar	_dividend @ sp[(-4)+-2]
 17623  016188  0EFA               	movlw	-6
 17624  01618A  006F FF8C  F03A    	movff	plusw1,btemp+8
 17625  016190  0EFB               	movlw	-5
 17626  016192  006F FF8C  F03B    	movff	plusw1,btemp+9
 17627  016198  503C               	movf	(btemp+10)^0,w,c
 17628  01619A  5C3A               	subwf	(btemp+8)^0,w,c
 17629  01619C  503D               	movf	(btemp+11)^0,w,c
 17630  01619E  583B               	subwfb	(btemp+9)^0,w,c
 17631  0161A0  A0D8               	btfss	status,0,c
 17632  0161A2  D016               	goto	l10071
 17633                           
 17634                           ;stkvar	_divisor @ sp[(-4)+-4]
 17635                           ;stkvar	_dividend @ sp[(-4)+-2]
 17636  0161A4  0EFA               	movlw	-6
 17637  0161A6  50E3               	movf	plusw1,w,c
 17638  0161A8  6E32               	movwf	btemp^0,c
 17639  0161AA  0EF8               	movlw	-8
 17640  0161AC  50E3               	movf	plusw1,w,c
 17641  0161AE  5E32               	subwf	btemp^0,f,c
 17642  0161B0  0EFA               	movlw	-6
 17643  0161B2  0060  F0CB  FFE3   	movff	btemp,plusw1
 17644  0161B8  0EFB               	movlw	-5
 17645  0161BA  50E3               	movf	plusw1,w,c
 17646  0161BC  6E32               	movwf	btemp^0,c
 17647  0161BE  0EF9               	movlw	-7
 17648  0161C0  50E3               	movf	plusw1,w,c
 17649  0161C2  5A32               	subwfb	btemp^0,f,c
 17650  0161C4  0EFB               	movlw	-5
 17651  0161C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17652                           
 17653                           ;stkvar	_quotient @ sp[(-4)+0]
 17654  0161CC  0EFC               	movlw	-4
 17655  0161CE  80E3               	bsf	plusw1,0,c
 17656  0161D0                     l10071:
 17657                           
 17658                           ;stkvar	_divisor @ sp[(-4)+-4]
 17659  0161D0  90D8               	bcf	status,0,c
 17660  0161D2  0EF9               	movlw	-7
 17661  0161D4  32E3               	rrcf	plusw1,f,c
 17662  0161D6  0EF8               	movlw	-8
 17663  0161D8  32E3               	rrcf	plusw1,f,c
 17664                           
 17665                           ;stkvar	_counter @ sp[(-4)+3]
 17666  0161DA  0EFF               	movlw	-1
 17667  0161DC  50E3               	movf	plusw1,w,c
 17668  0161DE  6E32               	movwf	btemp^0,c
 17669  0161E0  0E01               	movlw	1
 17670  0161E2  5E32               	subwf	btemp^0,f,c
 17671  0161E4  0EFF               	movlw	-1
 17672  0161E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17673  0161EC  A4D8               	btfss	status,2,c
 17674  0161EE  D7B3               	goto	u10390
 17675  0161F0                     u10410:
 17676                           
 17677                           ;stkvar	_sign @ sp[(-4)+2]
 17678  0161F0  0EFE               	movlw	-2
 17679  0161F2  50E3               	movf	plusw1,w,c
 17680  0161F4  B4D8               	btfsc	status,2,c
 17681  0161F6  D006               	goto	l10079
 17682                           
 17683                           ;stkvar	_quotient @ sp[(-4)+0]
 17684                           ;stkvar	_quotient @ sp[(-4)+0]
 17685  0161F8  0EFC               	movlw	-4
 17686  0161FA  6CE3               	negf	plusw1,c
 17687  0161FC  0EFD               	movlw	-3
 17688  0161FE  1EE3               	comf	plusw1,f,c
 17689  016200  B0D8               	btfsc	status,0,c
 17690  016202  2AE3               	incf	plusw1,f,c
 17691  016204                     l10079:
 17692                           
 17693                           ;stkvar	_quotient @ sp[(-4)+0]
 17694  016204  0EFC               	movlw	-4
 17695  016206  006F FF8C  F032    	movff	plusw1,btemp
 17696  01620C  0EFD               	movlw	-3
 17697  01620E  006F FF8C  F033    	movff	plusw1,btemp+1
 17698                           
 17699                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17700  016214  0EF8               	movlw	248
 17701  016216  26E1               	addwf	fsr1l,f,c
 17702  016218  0EFF               	movlw	255
 17703  01621A  22E2               	addwfc	fsr1h,f,c
 17704  01621C  0012               	return		;funcret
 17705  01621E                     __end_of___awdiv:
 17706                           	opt callstack 0
 17707                           
 17708 ;; *************** function _dtoa *****************
 17709 ;; Defined at:
 17710 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17711 ;; Parameters:    Size  Location     Type
 17712 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17713 ;;		 -> f(6), NULL(0), 
 17714 ;;  d               8  [STACK] long long 
 17715 ;; Auto vars:     Size  Location     Type
 17716 ;;  n               8  [STACK] long long 
 17717 ;;  i               2  [STACK] int 
 17718 ;;  s               2  [STACK] int 
 17719 ;;  w               2  [STACK] int 
 17720 ;;  p               2  [STACK] int 
 17721 ;; Return value:  Size  Location     Type
 17722 ;;                  2  [STACK] int 
 17723 ;; Registers used:
 17724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17725 ;; Tracked objects:
 17726 ;;		On entry : 0/5
 17727 ;;		On exit  : 0/0
 17728 ;;		Unchanged: 0/0
 17729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17734 ;;Total ram usage:        0 bytes
 17735 ;; Hardware stack levels used:    1
 17736 ;; Hardware stack levels required when called:   11
 17737 ;; This function calls:
 17738 ;;		___aodiv
 17739 ;;		___aomod
 17740 ;;		_abs
 17741 ;;		_pad
 17742 ;; This function is called by:
 17743 ;;		_vfpfcnvrt
 17744 ;; This function uses a reentrant model
 17745 ;;
 17746                           
 17747                           	psect	text60
 17748  013C2E                     __ptext60:
 17749                           	opt callstack 0
 17750  013C2E                     _dtoa:
 17751                           	opt callstack 0
 17752                           
 17753                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17754  013C2E  0E12               	movlw	18
 17755  013C30  26E1               	addwf	fsr1l,f,c
 17756  013C32  0E00               	movlw	0
 17757  013C34  22E2               	addwfc	fsr1h,f,c
 17758                           
 17759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17760                           ;stkvar	_d @ sp[(-18)+-10]
 17761                           
 17762                           ;incstack = 0
 17763  013C36  0EE4               	movlw	228
 17764  013C38  24E1               	addwf	fsr1l,w,c
 17765  013C3A  6ED9               	movwf	fsr2l,c
 17766  013C3C  0EFF               	movlw	255
 17767  013C3E  20E2               	addwfc	fsr1h,w,c
 17768  013C40  6EDA               	movwf	fsr2h,c
 17769                           
 17770                           ;stkvar	_n @ sp[(-18)+2]
 17771  013C42  0E08               	movlw	8
 17772  013C44  6E32               	movwf	btemp^0,c
 17773  013C46  0EF0               	movlw	-16
 17774  013C48                     us1072999:
 17775  013C48  006F FF7B FFE3     	movff	postinc2,plusw1
 17776  013C4E  28E8               	incf	wreg,w,c
 17777  013C50  2E32               	decfsz	btemp^0,f,c
 17778  013C52  D7FA               	bra	us1072999
 17779                           
 17780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17781                           ;stkvar	_n @ sp[(-18)+2]
 17782  013C54  0EF7               	movlw	-9
 17783  013C56  AEE3               	btfss	plusw1,7,c
 17784  013C58  D002               	goto	u10730
 17785  013C5A  0E01               	movlw	1
 17786  013C5C  D001               	goto	u10740
 17787  013C5E                     u10730:
 17788  013C5E  0E00               	movlw	0
 17789  013C60                     u10740:
 17790  013C60  6E3C               	movwf	(btemp+10)^0,c
 17791  013C62  6A3D               	clrf	(btemp+11)^0,c
 17792                           
 17793                           ;stkvar	_s @ sp[(-18)+12]
 17794  013C64  0EFA               	movlw	-6
 17795  013C66  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17796  013C6C  0EFB               	movlw	-5
 17797  013C6E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17798                           
 17799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17800                           ;stkvar	_s @ sp[(-18)+12]
 17801  013C74  0EFA               	movlw	-6
 17802  013C76  006F FF8C  F032    	movff	plusw1,btemp
 17803  013C7C  0EFB               	movlw	-5
 17804  013C7E  50E3               	movf	plusw1,w,c
 17805  013C80  1032               	iorwf	btemp^0,w,c
 17806  013C82  B4D8               	btfsc	status,2,c
 17807  013C84  D025               	goto	u10760
 17808                           
 17809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17810                           ;stkvar	_n @ sp[(-18)+2]
 17811                           ;stkvar	_n @ sp[(-18)+2]
 17812  013C86  0EF0               	movlw	-16
 17813  013C88  6CE3               	negf	plusw1,c
 17814  013C8A  0EF1               	movlw	-15
 17815  013C8C  1EE3               	comf	plusw1,f,c
 17816  013C8E  0EF2               	movlw	-14
 17817  013C90  1EE3               	comf	plusw1,f,c
 17818  013C92  0EF3               	movlw	-13
 17819  013C94  1EE3               	comf	plusw1,f,c
 17820  013C96  0EF4               	movlw	-12
 17821  013C98  1EE3               	comf	plusw1,f,c
 17822  013C9A  0EF5               	movlw	-11
 17823  013C9C  1EE3               	comf	plusw1,f,c
 17824  013C9E  0EF6               	movlw	-10
 17825  013CA0  1EE3               	comf	plusw1,f,c
 17826  013CA2  0EF7               	movlw	-9
 17827  013CA4  1EE3               	comf	plusw1,f,c
 17828  013CA6  E314               	bnc	u10760
 17829  013CA8  0EF1               	movlw	-15
 17830  013CAA  2AE3               	incf	plusw1,f,c
 17831  013CAC  E311               	bnc	u10760
 17832  013CAE  0EF2               	movlw	-14
 17833  013CB0  2AE3               	incf	plusw1,f,c
 17834  013CB2  E30E               	bnc	u10760
 17835  013CB4  0EF3               	movlw	-13
 17836  013CB6  2AE3               	incf	plusw1,f,c
 17837  013CB8  E30B               	bnc	u10760
 17838  013CBA  0EF4               	movlw	-12
 17839  013CBC  2AE3               	incf	plusw1,f,c
 17840  013CBE  E308               	bnc	u10760
 17841  013CC0  0EF5               	movlw	-11
 17842  013CC2  2AE3               	incf	plusw1,f,c
 17843  013CC4  E305               	bnc	u10760
 17844  013CC6  0EF6               	movlw	-10
 17845  013CC8  2AE3               	incf	plusw1,f,c
 17846  013CCA  E302               	bnc	u10760
 17847  013CCC  0EF7               	movlw	-9
 17848  013CCE  2AE3               	incf	plusw1,f,c
 17849  013CD0                     u10760:
 17850                           
 17851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17852  013CD0  AE1E               	btfss	(_prec+1)^0,7,c
 17853                           
 17854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17855  013CD2  921F               	bcf	_flags^0,1,c
 17856                           
 17857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17858  013CD4  BE1E               	btfsc	(_prec+1)^0,7,c
 17859  013CD6  D005               	goto	u10780
 17860  013CD8  501E               	movf	(_prec+1)^0,w,c
 17861  013CDA  E110               	bnz	l10255
 17862  013CDC  041D               	decf	_prec^0,w,c
 17863  013CDE  B0D8               	btfsc	status,0,c
 17864  013CE0  D00D               	goto	l10255
 17865  013CE2                     u10780:
 17866  013CE2  0E01               	movlw	1
 17867  013CE4  6E3C               	movwf	(btemp+10)^0,c
 17868  013CE6  0E00               	movlw	0
 17869  013CE8  6E3D               	movwf	(btemp+11)^0,c
 17870                           
 17871                           ;stkvar	_p @ sp[(-18)+16]
 17872  013CEA  0EFE               	movlw	-2
 17873  013CEC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17874  013CF2  0EFF               	movlw	-1
 17875  013CF4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17876  013CFA  D008               	goto	l1828
 17877  013CFC                     l10255:
 17878                           
 17879                           ;stkvar	_p @ sp[(-18)+16]
 17880  013CFC  0EFE               	movlw	-2
 17881  013CFE  0060  F077  FFE3   	movff	_prec,plusw1
 17882  013D04  0EFF               	movlw	-1
 17883  013D06  0060  F07B  FFE3   	movff	_prec+1,plusw1
 17884  013D0C                     l1828:
 17885                           
 17886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17887                           ;stkvar	_w @ sp[(-18)+14]
 17888  013D0C  0EFC               	movlw	-4
 17889  013D0E  0060  F06F  FFE3   	movff	_width,plusw1
 17890  013D14  0EFD               	movlw	-3
 17891  013D16  0060  F073  FFE3   	movff	_width+1,plusw1
 17892                           
 17893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17894                           ;stkvar	_s @ sp[(-18)+12]
 17895  013D1C  0EFA               	movlw	-6
 17896  013D1E  006F FF8C  F032    	movff	plusw1,btemp
 17897  013D24  0EFB               	movlw	-5
 17898  013D26  50E3               	movf	plusw1,w,c
 17899  013D28  1032               	iorwf	btemp^0,w,c
 17900  013D2A  A4D8               	btfss	status,2,c
 17901  013D2C  D002               	goto	u10800
 17902  013D2E  A41F               	btfss	_flags^0,2,c
 17903  013D30  D00A               	goto	l10263
 17904  013D32                     u10800:
 17905                           
 17906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17907                           ;stkvar	_w @ sp[(-18)+14]
 17908  013D32  50E1               	movf	fsr1l,w,c
 17909  013D34  0FFC               	addlw	-4
 17910  013D36  6ED9               	movwf	fsr2l,c
 17911  013D38  50E2               	movf	fsr1h,w,c
 17912  013D3A  6EDA               	movwf	fsr2h,c
 17913  013D3C  0EFF               	movlw	255
 17914  013D3E  22DA               	addwfc	fsr2h,f,c
 17915  013D40  06DE               	decf	postinc2,f,c
 17916  013D42  0E00               	movlw	0
 17917  013D44  5ADD               	subwfb	postdec2,f,c
 17918  013D46                     l10263:
 17919                           
 17920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17921  013D46  0E4F               	movlw	79
 17922  013D48  6E3C               	movwf	(btemp+10)^0,c
 17923  013D4A  0E00               	movlw	0
 17924  013D4C  6E3D               	movwf	(btemp+11)^0,c
 17925                           
 17926                           ;stkvar	_i @ sp[(-18)+10]
 17927  013D4E  0EF8               	movlw	-8
 17928  013D50  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17929  013D56  0EF9               	movlw	-7
 17930  013D58  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17931                           
 17932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17933  013D5E  0102               	movlb	2	; () banked
 17934  013D60  6B8F               	clrf	(_dbuf+79)& (0+255),b
 17935                           
 17936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17937  013D62  D109               	goto	l10277
 17938  013D64                     l10267:
 17939                           
 17940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17941                           ;stkvar	_i @ sp[(-18)+10]
 17942  013D64  50E1               	movf	fsr1l,w,c
 17943  013D66  0FF8               	addlw	-8
 17944  013D68  6ED9               	movwf	fsr2l,c
 17945  013D6A  50E2               	movf	fsr1h,w,c
 17946  013D6C  6EDA               	movwf	fsr2h,c
 17947  013D6E  0EFF               	movlw	255
 17948  013D70  22DA               	addwfc	fsr2h,f,c
 17949  013D72  06DE               	decf	postinc2,f,c
 17950  013D74  0E00               	movlw	0
 17951  013D76  5ADD               	subwfb	postdec2,f,c
 17952                           
 17953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17954  013D78  0E0A               	movlw	10
 17955  013D7A  6EE6               	movwf	postinc1,c
 17956  013D7C  0E00               	movlw	0
 17957  013D7E  6EE6               	movwf	postinc1,c
 17958  013D80  0E00               	movlw	0
 17959  013D82  6EE6               	movwf	postinc1,c
 17960  013D84  0E00               	movlw	0
 17961  013D86  6EE6               	movwf	postinc1,c
 17962  013D88  0E00               	movlw	0
 17963  013D8A  6EE6               	movwf	postinc1,c
 17964  013D8C  0E00               	movlw	0
 17965  013D8E  6EE6               	movwf	postinc1,c
 17966  013D90  0E00               	movlw	0
 17967  013D92  6EE6               	movwf	postinc1,c
 17968  013D94  0E00               	movlw	0
 17969  013D96  6EE6               	movwf	postinc1,c
 17970                           
 17971                           ;stkvar	_n @ sp[(-26)+2]
 17972  013D98  50E1               	movf	fsr1l,w,c
 17973  013D9A  0FE8               	addlw	-24
 17974  013D9C  6ED9               	movwf	fsr2l,c
 17975  013D9E  50E2               	movf	fsr1h,w,c
 17976  013DA0  6EDA               	movwf	fsr2h,c
 17977  013DA2  0EFF               	movlw	255
 17978  013DA4  22DA               	addwfc	fsr2h,f,c
 17979  013DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 17980  013DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 17981  013DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 17982  013DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 17983  013DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 17984  013DC4  006F FF7B FFE6     	movff	postinc2,postinc1
 17985  013DCA  006F FF7B FFE6     	movff	postinc2,postinc1
 17986  013DD0  006F FF7B FFE6     	movff	postinc2,postinc1
 17987  013DD6  EC39  F0A9         	call	___aomod	;wreg free
 17988  013DDA  52E5               	movf	postdec1,f,c
 17989  013DDC  006F FF9C  F049    	movff	indf1,btemp+23
 17990  013DE2  52E5               	movf	postdec1,f,c
 17991  013DE4  006F FF9C  F048    	movff	indf1,btemp+22
 17992  013DEA  52E5               	movf	postdec1,f,c
 17993  013DEC  006F FF9C  F047    	movff	indf1,btemp+21
 17994  013DF2  52E5               	movf	postdec1,f,c
 17995  013DF4  006F FF9C  F046    	movff	indf1,btemp+20
 17996  013DFA  52E5               	movf	postdec1,f,c
 17997  013DFC  006F FF9C  F045    	movff	indf1,btemp+19
 17998  013E02  52E5               	movf	postdec1,f,c
 17999  013E04  006F FF9C  F044    	movff	indf1,btemp+18
 18000  013E0A  52E5               	movf	postdec1,f,c
 18001  013E0C  006F FF9C  F043    	movff	indf1,btemp+17
 18002  013E12  52E5               	movf	postdec1,f,c
 18003  013E14  006F FF9C  F042    	movff	indf1,btemp+16
 18004  013E1A  0EF8               	movlw	248
 18005  013E1C  26E1               	addwf	fsr1l,f,c
 18006  013E1E  0EFF               	movlw	255
 18007  013E20  22E2               	addwfc	fsr1h,f,c
 18008  013E22  0060  F108  F03C   	movff	btemp+16,btemp+10
 18009  013E28  0060  F10C  F03D   	movff	btemp+17,btemp+11
 18010  013E2E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18011  013E34  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18012  013E3A  EC6C  F0BD         	call	_abs	;wreg free
 18013  013E3E  0E30               	movlw	48
 18014  013E40  2632               	addwf	btemp^0,f,c
 18015                           
 18016                           ;stkvar	_i @ sp[(-18)+10]
 18017  013E42  0EF8               	movlw	-8
 18018  013E44  006F FF8C  F03C    	movff	plusw1,btemp+10
 18019  013E4A  0EF9               	movlw	-7
 18020  013E4C  006F FF8C  F03D    	movff	plusw1,btemp+11
 18021  013E52  0E40               	movlw	low _dbuf
 18022  013E54  243C               	addwf	(btemp+10)^0,w,c
 18023  013E56  6ED9               	movwf	fsr2l,c
 18024  013E58  0E02               	movlw	high _dbuf
 18025  013E5A  203D               	addwfc	(btemp+11)^0,w,c
 18026  013E5C  6EDA               	movwf	fsr2h,c
 18027  013E5E  0060  F0CB  FFDF   	movff	btemp,indf2
 18028                           
 18029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18030                           ;stkvar	_p @ sp[(-18)+16]
 18031  013E64  50E1               	movf	fsr1l,w,c
 18032  013E66  0FFE               	addlw	-2
 18033  013E68  6ED9               	movwf	fsr2l,c
 18034  013E6A  50E2               	movf	fsr1h,w,c
 18035  013E6C  6EDA               	movwf	fsr2h,c
 18036  013E6E  0EFF               	movlw	255
 18037  013E70  22DA               	addwfc	fsr2h,f,c
 18038  013E72  06DE               	decf	postinc2,f,c
 18039  013E74  0E00               	movlw	0
 18040  013E76  5ADD               	subwfb	postdec2,f,c
 18041                           
 18042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18043                           ;stkvar	_w @ sp[(-18)+14]
 18044  013E78  50E1               	movf	fsr1l,w,c
 18045  013E7A  0FFC               	addlw	-4
 18046  013E7C  6ED9               	movwf	fsr2l,c
 18047  013E7E  50E2               	movf	fsr1h,w,c
 18048  013E80  6EDA               	movwf	fsr2h,c
 18049  013E82  0EFF               	movlw	255
 18050  013E84  22DA               	addwfc	fsr2h,f,c
 18051  013E86  06DE               	decf	postinc2,f,c
 18052  013E88  0E00               	movlw	0
 18053  013E8A  5ADD               	subwfb	postdec2,f,c
 18054                           
 18055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18056  013E8C  0E0A               	movlw	10
 18057  013E8E  6EE6               	movwf	postinc1,c
 18058  013E90  0E00               	movlw	0
 18059  013E92  6EE6               	movwf	postinc1,c
 18060  013E94  0E00               	movlw	0
 18061  013E96  6EE6               	movwf	postinc1,c
 18062  013E98  0E00               	movlw	0
 18063  013E9A  6EE6               	movwf	postinc1,c
 18064  013E9C  0E00               	movlw	0
 18065  013E9E  6EE6               	movwf	postinc1,c
 18066  013EA0  0E00               	movlw	0
 18067  013EA2  6EE6               	movwf	postinc1,c
 18068  013EA4  0E00               	movlw	0
 18069  013EA6  6EE6               	movwf	postinc1,c
 18070  013EA8  0E00               	movlw	0
 18071  013EAA  6EE6               	movwf	postinc1,c
 18072                           
 18073                           ;stkvar	_n @ sp[(-26)+2]
 18074  013EAC  50E1               	movf	fsr1l,w,c
 18075  013EAE  0FE8               	addlw	-24
 18076  013EB0  6ED9               	movwf	fsr2l,c
 18077  013EB2  50E2               	movf	fsr1h,w,c
 18078  013EB4  6EDA               	movwf	fsr2h,c
 18079  013EB6  0EFF               	movlw	255
 18080  013EB8  22DA               	addwfc	fsr2h,f,c
 18081  013EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 18082  013EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 18083  013EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 18084  013ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 18085  013ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 18086  013ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 18087  013EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 18088  013EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 18089  013EEA  ECBF  F0A6         	call	___aodiv	;wreg free
 18090  013EEE  52E5               	movf	postdec1,f,c
 18091  013EF0  006F FF9C  F049    	movff	indf1,btemp+23
 18092  013EF6  52E5               	movf	postdec1,f,c
 18093  013EF8  006F FF9C  F048    	movff	indf1,btemp+22
 18094  013EFE  52E5               	movf	postdec1,f,c
 18095  013F00  006F FF9C  F047    	movff	indf1,btemp+21
 18096  013F06  52E5               	movf	postdec1,f,c
 18097  013F08  006F FF9C  F046    	movff	indf1,btemp+20
 18098  013F0E  52E5               	movf	postdec1,f,c
 18099  013F10  006F FF9C  F045    	movff	indf1,btemp+19
 18100  013F16  52E5               	movf	postdec1,f,c
 18101  013F18  006F FF9C  F044    	movff	indf1,btemp+18
 18102  013F1E  52E5               	movf	postdec1,f,c
 18103  013F20  006F FF9C  F043    	movff	indf1,btemp+17
 18104  013F26  52E5               	movf	postdec1,f,c
 18105  013F28  006F FF9C  F042    	movff	indf1,btemp+16
 18106  013F2E  0EF8               	movlw	248
 18107  013F30  26E1               	addwf	fsr1l,f,c
 18108  013F32  0EFF               	movlw	255
 18109  013F34  22E2               	addwfc	fsr1h,f,c
 18110                           
 18111                           ;stkvar	_n @ sp[(-18)+2]
 18112  013F36  0EF0               	movlw	-16
 18113  013F38  0060  F10B  FFE3   	movff	btemp+16,plusw1
 18114  013F3E  0EF1               	movlw	-15
 18115  013F40  0060  F10F  FFE3   	movff	btemp+17,plusw1
 18116  013F46  0EF2               	movlw	-14
 18117  013F48  0060  F113  FFE3   	movff	btemp+18,plusw1
 18118  013F4E  0EF3               	movlw	-13
 18119  013F50  0060  F117  FFE3   	movff	btemp+19,plusw1
 18120  013F56  0EF4               	movlw	-12
 18121  013F58  0060  F11B  FFE3   	movff	btemp+20,plusw1
 18122  013F5E  0EF5               	movlw	-11
 18123  013F60  0060  F11F  FFE3   	movff	btemp+21,plusw1
 18124  013F66  0EF6               	movlw	-10
 18125  013F68  0060  F123  FFE3   	movff	btemp+22,plusw1
 18126  013F6E  0EF7               	movlw	-9
 18127  013F70  0060  F127  FFE3   	movff	btemp+23,plusw1
 18128  013F76                     l10277:
 18129                           
 18130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18131                           ;stkvar	_i @ sp[(-18)+10]
 18132  013F76  0EF9               	movlw	-7
 18133  013F78  BEE3               	btfsc	plusw1,7,c
 18134  013F7A  D036               	goto	u10850
 18135  013F7C  0EF9               	movlw	-7
 18136  013F7E  50E3               	movf	plusw1,w,c
 18137  013F80  E104               	bnz	u10810
 18138  013F82  0EF8               	movlw	-8
 18139  013F84  04E3               	decf	plusw1,w,c
 18140  013F86  A0D8               	btfss	status,0,c
 18141  013F88  D02F               	goto	u10850
 18142  013F8A                     u10810:
 18143                           
 18144                           ;stkvar	_n @ sp[(-18)+2]
 18145  013F8A  0EF0               	movlw	-16
 18146  013F8C  50E3               	movf	plusw1,w,c
 18147  013F8E  E115               	bnz	u10821
 18148  013F90  0EF1               	movlw	-15
 18149  013F92  50E3               	movf	plusw1,w,c
 18150  013F94  E112               	bnz	u10821
 18151  013F96  0EF2               	movlw	-14
 18152  013F98  50E3               	movf	plusw1,w,c
 18153  013F9A  E10F               	bnz	u10821
 18154  013F9C  0EF3               	movlw	-13
 18155  013F9E  50E3               	movf	plusw1,w,c
 18156  013FA0  E10C               	bnz	u10821
 18157  013FA2  0EF4               	movlw	-12
 18158  013FA4  50E3               	movf	plusw1,w,c
 18159  013FA6  E109               	bnz	u10821
 18160  013FA8  0EF5               	movlw	-11
 18161  013FAA  50E3               	movf	plusw1,w,c
 18162  013FAC  E106               	bnz	u10821
 18163  013FAE  0EF6               	movlw	-10
 18164  013FB0  50E3               	movf	plusw1,w,c
 18165  013FB2  E103               	bnz	u10821
 18166  013FB4  0EF7               	movlw	-9
 18167  013FB6  50E3               	movf	plusw1,w,c
 18168  013FB8  A4D8               	btfss	status,2,c
 18169  013FBA                     u10821:
 18170  013FBA  D6D4               	goto	l10267
 18171                           
 18172                           ;stkvar	_p @ sp[(-18)+16]
 18173  013FBC  0EFF               	movlw	-1
 18174  013FBE  BEE3               	btfsc	plusw1,7,c
 18175  013FC0  D007               	goto	u10830
 18176  013FC2  0EFF               	movlw	-1
 18177  013FC4  50E3               	movf	plusw1,w,c
 18178  013FC6  E103               	bnz	u10831
 18179  013FC8  0EFE               	movlw	-2
 18180  013FCA  04E3               	decf	plusw1,w,c
 18181  013FCC  B0D8               	btfsc	status,0,c
 18182  013FCE                     u10831:
 18183  013FCE  D6CA               	goto	l10267
 18184  013FD0                     u10830:
 18185                           
 18186                           ;stkvar	_w @ sp[(-18)+14]
 18187  013FD0  0EFD               	movlw	-3
 18188  013FD2  BEE3               	btfsc	plusw1,7,c
 18189  013FD4  D009               	goto	u10850
 18190  013FD6  0EFD               	movlw	-3
 18191  013FD8  50E3               	movf	plusw1,w,c
 18192  013FDA  E104               	bnz	u10840
 18193  013FDC  0EFC               	movlw	-4
 18194  013FDE  04E3               	decf	plusw1,w,c
 18195  013FE0  A0D8               	btfss	status,0,c
 18196  013FE2  D002               	goto	u10850
 18197  013FE4                     u10840:
 18198  013FE4  B21F               	btfsc	_flags^0,1,c
 18199  013FE6  D6BE               	goto	l10267
 18200  013FE8                     u10850:
 18201                           
 18202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18203                           ;stkvar	_s @ sp[(-18)+12]
 18204  013FE8  0EFA               	movlw	-6
 18205  013FEA  006F FF8C  F032    	movff	plusw1,btemp
 18206  013FF0  0EFB               	movlw	-5
 18207  013FF2  50E3               	movf	plusw1,w,c
 18208  013FF4  1032               	iorwf	btemp^0,w,c
 18209  013FF6  A4D8               	btfss	status,2,c
 18210  013FF8  D002               	goto	u10870
 18211  013FFA  A41F               	btfss	_flags^0,2,c
 18212  013FFC  D033               	goto	l10301
 18213  013FFE                     u10870:
 18214                           
 18215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18216                           ;stkvar	_i @ sp[(-18)+10]
 18217  013FFE  50E1               	movf	fsr1l,w,c
 18218  014000  0FF8               	addlw	-8
 18219  014002  6ED9               	movwf	fsr2l,c
 18220  014004  50E2               	movf	fsr1h,w,c
 18221  014006  6EDA               	movwf	fsr2h,c
 18222  014008  0EFF               	movlw	255
 18223  01400A  22DA               	addwfc	fsr2h,f,c
 18224  01400C  06DE               	decf	postinc2,f,c
 18225  01400E  0E00               	movlw	0
 18226  014010  5ADD               	subwfb	postdec2,f,c
 18227                           
 18228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18229                           ;stkvar	_s @ sp[(-18)+12]
 18230  014012  0EFA               	movlw	-6
 18231  014014  006F FF8C  F032    	movff	plusw1,btemp
 18232  01401A  0EFB               	movlw	-5
 18233  01401C  50E3               	movf	plusw1,w,c
 18234  01401E  1032               	iorwf	btemp^0,w,c
 18235  014020  A4D8               	btfss	status,2,c
 18236  014022  D002               	goto	l10297
 18237  014024  0E2B               	movlw	43
 18238  014026  D001               	goto	L16
 18239  014028                     l10297:
 18240  014028  0E2D               	movlw	45
 18241  01402A                     L16:
 18242  01402A  6E3C               	movwf	(btemp+10)^0,c
 18243  01402C  0E00               	movlw	0
 18244  01402E  6E3D               	movwf	(btemp+11)^0,c
 18245                           
 18246                           ;stkvar	_dtoa$4356 @ sp[(-18)+0]
 18247  014030  0EEE               	movlw	-18
 18248  014032  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18249  014038  0EEF               	movlw	-17
 18250  01403A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18251                           
 18252                           ;stkvar	_dtoa$4356 @ sp[(-18)+0]
 18253                           ;stkvar	_i @ sp[(-18)+10]
 18254  014040  0EF8               	movlw	-8
 18255  014042  006F FF8C  F03C    	movff	plusw1,btemp+10
 18256  014048  0EF9               	movlw	-7
 18257  01404A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18258  014050  0E40               	movlw	low _dbuf
 18259  014052  243C               	addwf	(btemp+10)^0,w,c
 18260  014054  6ED9               	movwf	fsr2l,c
 18261  014056  0E02               	movlw	high _dbuf
 18262  014058  203D               	addwfc	(btemp+11)^0,w,c
 18263  01405A  6EDA               	movwf	fsr2h,c
 18264  01405C  0EEE               	movlw	-18
 18265  01405E  006F FF8F FFDF     	movff	plusw1,indf2
 18266  014064                     l10301:
 18267                           
 18268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18269                           ;stkvar	_w @ sp[(-18)+14]
 18270  014064  0EFC               	movlw	-4
 18271  014066  006F FF8F FFE6     	movff	plusw1,postinc1
 18272  01406C  006F FF8F FFE6     	movff	plusw1,postinc1
 18273                           
 18274                           ;stkvar	_i @ sp[(-20)+10]
 18275  014072  0E40               	movlw	low _dbuf
 18276  014074  6E3C               	movwf	(btemp+10)^0,c
 18277  014076  0E02               	movlw	high _dbuf
 18278  014078  6E3D               	movwf	(btemp+11)^0,c
 18279  01407A  0EF6               	movlw	-10
 18280  01407C  50E3               	movf	plusw1,w,c
 18281  01407E  263C               	addwf	(btemp+10)^0,f,c
 18282  014080  0EF7               	movlw	-9
 18283  014082  50E3               	movf	plusw1,w,c
 18284  014084  223D               	addwfc	(btemp+11)^0,f,c
 18285  014086  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18286  01408C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18287                           
 18288                           ;stkvar	_fp @ sp[(-22)+-2]
 18289  014092  0EE8               	movlw	-24
 18290  014094  006F FF8F FFE6     	movff	plusw1,postinc1
 18291  01409A  006F FF8F FFE6     	movff	plusw1,postinc1
 18292  0140A0  EC68  F0B3         	call	_pad	;wreg free
 18293                           
 18294                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18295  0140A4  0EE4               	movlw	228
 18296  0140A6  26E1               	addwf	fsr1l,f,c
 18297  0140A8  0EFF               	movlw	255
 18298  0140AA  22E2               	addwfc	fsr1h,f,c
 18299  0140AC  0012               	return		;funcret
 18300  0140AE                     __end_of_dtoa:
 18301                           	opt callstack 0
 18302                           
 18303 ;; *************** function _abs *****************
 18304 ;; Defined at:
 18305 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18306 ;; Parameters:    Size  Location     Type
 18307 ;;  a               2  [STACK] int 
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;		None
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  2  [STACK] int 
 18312 ;; Registers used:
 18313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18314 ;; Tracked objects:
 18315 ;;		On entry : 0/2
 18316 ;;		On exit  : 0/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18323 ;;Total ram usage:        0 bytes
 18324 ;; Hardware stack levels used:    1
 18325 ;; Hardware stack levels required when called:    6
 18326 ;; This function calls:
 18327 ;;		Nothing
 18328 ;; This function is called by:
 18329 ;;		_dtoa
 18330 ;; This function uses a reentrant model
 18331 ;;
 18332                           
 18333                           	psect	text61
 18334  017AD8                     __ptext61:
 18335                           	opt callstack 0
 18336  017AD8                     _abs:
 18337                           	opt callstack 17
 18338                           
 18339                           ;stkvar	_a @ sp[(0)+-2]
 18340                           
 18341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18342                           ;incstack = 0
 18343  017AD8  0EFF               	movlw	-1
 18344  017ADA  BEE3               	btfsc	plusw1,7,c
 18345  017ADC  D007               	goto	u9370
 18346  017ADE  0EFF               	movlw	-1
 18347  017AE0  50E3               	movf	plusw1,w,c
 18348  017AE2  E112               	bnz	l9533
 18349  017AE4  0EFE               	movlw	-2
 18350  017AE6  04E3               	decf	plusw1,w,c
 18351  017AE8  B0D8               	btfsc	status,0,c
 18352  017AEA  D00E               	goto	l9533
 18353  017AEC                     u9370:
 18354                           
 18355                           ;stkvar	_a @ sp[(0)+-2]
 18356  017AEC  0EFE               	movlw	-2
 18357  017AEE  006F FF8C  F032    	movff	plusw1,btemp
 18358  017AF4  1E32               	comf	btemp^0,f,c
 18359  017AF6  0EFF               	movlw	-1
 18360  017AF8  006F FF8C  F033    	movff	plusw1,btemp+1
 18361  017AFE  1E33               	comf	(btemp+1)^0,f,c
 18362  017B00  2A32               	incf	btemp^0,f,c
 18363  017B02  B4D8               	btfsc	status,2,c
 18364  017B04  2A33               	incf	(btemp+1)^0,f,c
 18365  017B06  D008               	goto	l2731
 18366  017B08                     l9533:
 18367                           
 18368                           ;stkvar	_a @ sp[(0)+-2]
 18369  017B08  0EFE               	movlw	-2
 18370  017B0A  006F FF8C  F032    	movff	plusw1,btemp
 18371  017B10  0EFF               	movlw	-1
 18372  017B12  006F FF8C  F033    	movff	plusw1,btemp+1
 18373  017B18                     l2731:
 18374                           
 18375                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18376  017B18  52E5               	movf	postdec1,f,c
 18377  017B1A  52E5               	movf	postdec1,f,c
 18378  017B1C  0012               	return		;funcret
 18379  017B1E                     __end_of_abs:
 18380                           	opt callstack 0
 18381                           
 18382 ;; *************** function ___aomod *****************
 18383 ;; Defined at:
 18384 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18385 ;; Parameters:    Size  Location     Type
 18386 ;;  dividend        8  [STACK] long long 
 18387 ;;  divisor         8  [STACK] long long 
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;  sign            1  [STACK] unsigned char 
 18390 ;;  counter         1  [STACK] unsigned char 
 18391 ;; Return value:  Size  Location     Type
 18392 ;;                  8  [STACK] long long 
 18393 ;; Registers used:
 18394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18395 ;; Tracked objects:
 18396 ;;		On entry : 0/2
 18397 ;;		On exit  : 0/0
 18398 ;;		Unchanged: 0/0
 18399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18404 ;;Total ram usage:        0 bytes
 18405 ;; Hardware stack levels used:    1
 18406 ;; Hardware stack levels required when called:    6
 18407 ;; This function calls:
 18408 ;;		Nothing
 18409 ;; This function is called by:
 18410 ;;		_dtoa
 18411 ;; This function uses a reentrant model
 18412 ;;
 18413                           
 18414                           	psect	text62
 18415  015272                     __ptext62:
 18416                           	opt callstack 0
 18417  015272                     ___aomod:
 18418                           	opt callstack 0
 18419                           
 18420                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18421  015272  52E6               	movf	postinc1,f,c
 18422  015274  52E6               	movf	postinc1,f,c
 18423                           
 18424                           ;stkvar	_sign @ sp[(-2)+0]
 18425                           
 18426                           ;incstack = 0
 18427  015276  0EFE               	movlw	-2
 18428  015278  6AE3               	clrf	plusw1,c
 18429                           
 18430                           ;stkvar	_dividend @ sp[(-2)+-8]
 18431  01527A  0EFD               	movlw	-3
 18432  01527C  AEE3               	btfss	plusw1,7,c
 18433  01527E  D028               	goto	l9691
 18434                           
 18435                           ;stkvar	_dividend @ sp[(-2)+-8]
 18436                           ;stkvar	_dividend @ sp[(-2)+-8]
 18437  015280  0EF6               	movlw	-10
 18438  015282  6CE3               	negf	plusw1,c
 18439  015284  0EF7               	movlw	-9
 18440  015286  1EE3               	comf	plusw1,f,c
 18441  015288  0EF8               	movlw	-8
 18442  01528A  1EE3               	comf	plusw1,f,c
 18443  01528C  0EF9               	movlw	-7
 18444  01528E  1EE3               	comf	plusw1,f,c
 18445  015290  0EFA               	movlw	-6
 18446  015292  1EE3               	comf	plusw1,f,c
 18447  015294  0EFB               	movlw	-5
 18448  015296  1EE3               	comf	plusw1,f,c
 18449  015298  0EFC               	movlw	-4
 18450  01529A  1EE3               	comf	plusw1,f,c
 18451  01529C  0EFD               	movlw	-3
 18452  01529E  1EE3               	comf	plusw1,f,c
 18453  0152A0  E314               	bnc	u9800
 18454  0152A2  0EF7               	movlw	-9
 18455  0152A4  2AE3               	incf	plusw1,f,c
 18456  0152A6  E311               	bnc	u9800
 18457  0152A8  0EF8               	movlw	-8
 18458  0152AA  2AE3               	incf	plusw1,f,c
 18459  0152AC  E30E               	bnc	u9800
 18460  0152AE  0EF9               	movlw	-7
 18461  0152B0  2AE3               	incf	plusw1,f,c
 18462  0152B2  E30B               	bnc	u9800
 18463  0152B4  0EFA               	movlw	-6
 18464  0152B6  2AE3               	incf	plusw1,f,c
 18465  0152B8  E308               	bnc	u9800
 18466  0152BA  0EFB               	movlw	-5
 18467  0152BC  2AE3               	incf	plusw1,f,c
 18468  0152BE  E305               	bnc	u9800
 18469  0152C0  0EFC               	movlw	-4
 18470  0152C2  2AE3               	incf	plusw1,f,c
 18471  0152C4  E302               	bnc	u9800
 18472  0152C6  0EFD               	movlw	-3
 18473  0152C8  2AE3               	incf	plusw1,f,c
 18474  0152CA                     u9800:
 18475                           
 18476                           ;stkvar	_sign @ sp[(-2)+0]
 18477  0152CA  0EFE               	movlw	-2
 18478  0152CC  6AE3               	clrf	plusw1,c
 18479  0152CE  2AE3               	incf	plusw1,f,c
 18480  0152D0                     l9691:
 18481                           
 18482                           ;stkvar	_divisor @ sp[(-2)+-16]
 18483  0152D0  0EF5               	movlw	-11
 18484  0152D2  AEE3               	btfss	plusw1,7,c
 18485  0152D4  D025               	goto	u9820
 18486                           
 18487                           ;stkvar	_divisor @ sp[(-2)+-16]
 18488                           ;stkvar	_divisor @ sp[(-2)+-16]
 18489  0152D6  0EEE               	movlw	-18
 18490  0152D8  6CE3               	negf	plusw1,c
 18491  0152DA  0EEF               	movlw	-17
 18492  0152DC  1EE3               	comf	plusw1,f,c
 18493  0152DE  0EF0               	movlw	-16
 18494  0152E0  1EE3               	comf	plusw1,f,c
 18495  0152E2  0EF1               	movlw	-15
 18496  0152E4  1EE3               	comf	plusw1,f,c
 18497  0152E6  0EF2               	movlw	-14
 18498  0152E8  1EE3               	comf	plusw1,f,c
 18499  0152EA  0EF3               	movlw	-13
 18500  0152EC  1EE3               	comf	plusw1,f,c
 18501  0152EE  0EF4               	movlw	-12
 18502  0152F0  1EE3               	comf	plusw1,f,c
 18503  0152F2  0EF5               	movlw	-11
 18504  0152F4  1EE3               	comf	plusw1,f,c
 18505  0152F6  E314               	bnc	u9820
 18506  0152F8  0EEF               	movlw	-17
 18507  0152FA  2AE3               	incf	plusw1,f,c
 18508  0152FC  E311               	bnc	u9820
 18509  0152FE  0EF0               	movlw	-16
 18510  015300  2AE3               	incf	plusw1,f,c
 18511  015302  E30E               	bnc	u9820
 18512  015304  0EF1               	movlw	-15
 18513  015306  2AE3               	incf	plusw1,f,c
 18514  015308  E30B               	bnc	u9820
 18515  01530A  0EF2               	movlw	-14
 18516  01530C  2AE3               	incf	plusw1,f,c
 18517  01530E  E308               	bnc	u9820
 18518  015310  0EF3               	movlw	-13
 18519  015312  2AE3               	incf	plusw1,f,c
 18520  015314  E305               	bnc	u9820
 18521  015316  0EF4               	movlw	-12
 18522  015318  2AE3               	incf	plusw1,f,c
 18523  01531A  E302               	bnc	u9820
 18524  01531C  0EF5               	movlw	-11
 18525  01531E  2AE3               	incf	plusw1,f,c
 18526  015320                     u9820:
 18527                           
 18528                           ;stkvar	_divisor @ sp[(-2)+-16]
 18529  015320  0EEE               	movlw	-18
 18530  015322  50E3               	movf	plusw1,w,c
 18531  015324  E116               	bnz	u9830
 18532  015326  0EEF               	movlw	-17
 18533  015328  50E3               	movf	plusw1,w,c
 18534  01532A  E113               	bnz	u9830
 18535  01532C  0EF0               	movlw	-16
 18536  01532E  50E3               	movf	plusw1,w,c
 18537  015330  E110               	bnz	u9830
 18538  015332  0EF1               	movlw	-15
 18539  015334  50E3               	movf	plusw1,w,c
 18540  015336  E10D               	bnz	u9830
 18541  015338  0EF2               	movlw	-14
 18542  01533A  50E3               	movf	plusw1,w,c
 18543  01533C  E10A               	bnz	u9830
 18544  01533E  0EF3               	movlw	-13
 18545  015340  50E3               	movf	plusw1,w,c
 18546  015342  E107               	bnz	u9830
 18547  015344  0EF4               	movlw	-12
 18548  015346  50E3               	movf	plusw1,w,c
 18549  015348  E104               	bnz	u9830
 18550  01534A  0EF5               	movlw	-11
 18551  01534C  50E3               	movf	plusw1,w,c
 18552  01534E  B4D8               	btfsc	status,2,c
 18553  015350  D075               	goto	u9860
 18554  015352                     u9830:
 18555                           
 18556                           ;stkvar	_counter @ sp[(-2)+1]
 18557  015352  0EFF               	movlw	-1
 18558  015354  6AE3               	clrf	plusw1,c
 18559  015356  D012               	goto	L17
 18560  015358                     l9699:
 18561                           
 18562                           ;stkvar	_divisor @ sp[(-2)+-16]
 18563  015358  90D8               	bcf	status,0,c
 18564  01535A  0EEE               	movlw	-18
 18565  01535C  36E3               	rlcf	plusw1,f,c
 18566  01535E  0EEF               	movlw	-17
 18567  015360  36E3               	rlcf	plusw1,f,c
 18568  015362  0EF0               	movlw	-16
 18569  015364  36E3               	rlcf	plusw1,f,c
 18570  015366  0EF1               	movlw	-15
 18571  015368  36E3               	rlcf	plusw1,f,c
 18572  01536A  0EF2               	movlw	-14
 18573  01536C  36E3               	rlcf	plusw1,f,c
 18574  01536E  0EF3               	movlw	-13
 18575  015370  36E3               	rlcf	plusw1,f,c
 18576  015372  0EF4               	movlw	-12
 18577  015374  36E3               	rlcf	plusw1,f,c
 18578  015376  0EF5               	movlw	-11
 18579  015378  36E3               	rlcf	plusw1,f,c
 18580                           
 18581                           ;stkvar	_counter @ sp[(-2)+1]
 18582  01537A  0EFF               	movlw	-1
 18583  01537C                     L17:
 18584  01537C  2AE3               	incf	plusw1,f,c
 18585                           
 18586                           ;stkvar	_divisor @ sp[(-2)+-16]
 18587  01537E  0EF5               	movlw	-11
 18588  015380  AEE3               	btfss	plusw1,7,c
 18589  015382  D7EA               	goto	l9699
 18590  015384                     u9840:
 18591                           
 18592                           ;stkvar	_divisor @ sp[(-2)+-16]
 18593                           ;stkvar	_dividend @ sp[(-2)+-8]
 18594  015384  50E1               	movf	fsr1l,w,c
 18595  015386  0FF6               	addlw	-10
 18596  015388  6ED9               	movwf	fsr2l,c
 18597  01538A  50E2               	movf	fsr1h,w,c
 18598  01538C  6EDA               	movwf	fsr2h,c
 18599  01538E  0EFF               	movlw	255
 18600  015390  22DA               	addwfc	fsr2h,f,c
 18601  015392  0EEE               	movlw	-18
 18602  015394  50E3               	movf	plusw1,w,c
 18603  015396  5CDE               	subwf	postinc2,w,c
 18604  015398  0EEF               	movlw	-17
 18605  01539A  50E3               	movf	plusw1,w,c
 18606  01539C  58DE               	subwfb	postinc2,w,c
 18607  01539E  0EF0               	movlw	-16
 18608  0153A0  50E3               	movf	plusw1,w,c
 18609  0153A2  58DE               	subwfb	postinc2,w,c
 18610  0153A4  0EF1               	movlw	-15
 18611  0153A6  50E3               	movf	plusw1,w,c
 18612  0153A8  58DE               	subwfb	postinc2,w,c
 18613  0153AA  0EF2               	movlw	-14
 18614  0153AC  50E3               	movf	plusw1,w,c
 18615  0153AE  58DE               	subwfb	postinc2,w,c
 18616  0153B0  0EF3               	movlw	-13
 18617  0153B2  50E3               	movf	plusw1,w,c
 18618  0153B4  58DE               	subwfb	postinc2,w,c
 18619  0153B6  0EF4               	movlw	-12
 18620  0153B8  50E3               	movf	plusw1,w,c
 18621  0153BA  58DE               	subwfb	postinc2,w,c
 18622  0153BC  0EF5               	movlw	-11
 18623  0153BE  50E3               	movf	plusw1,w,c
 18624  0153C0  58DE               	subwfb	postinc2,w,c
 18625  0153C2  A0D8               	btfss	status,0,c
 18626  0153C4  D01F               	goto	l9707
 18627                           
 18628                           ;stkvar	_divisor @ sp[(-2)+-16]
 18629                           ;stkvar	_dividend @ sp[(-2)+-8]
 18630  0153C6  50E1               	movf	fsr1l,w,c
 18631  0153C8  0FF6               	addlw	-10
 18632  0153CA  6ED9               	movwf	fsr2l,c
 18633  0153CC  50E2               	movf	fsr1h,w,c
 18634  0153CE  6EDA               	movwf	fsr2h,c
 18635  0153D0  0EFF               	movlw	255
 18636  0153D2  22DA               	addwfc	fsr2h,f,c
 18637  0153D4  0EEE               	movlw	-18
 18638  0153D6  50E3               	movf	plusw1,w,c
 18639  0153D8  5EDE               	subwf	postinc2,f,c
 18640  0153DA  0EEF               	movlw	-17
 18641  0153DC  50E3               	movf	plusw1,w,c
 18642  0153DE  5ADE               	subwfb	postinc2,f,c
 18643  0153E0  0EF0               	movlw	-16
 18644  0153E2  50E3               	movf	plusw1,w,c
 18645  0153E4  5ADE               	subwfb	postinc2,f,c
 18646  0153E6  0EF1               	movlw	-15
 18647  0153E8  50E3               	movf	plusw1,w,c
 18648  0153EA  5ADE               	subwfb	postinc2,f,c
 18649  0153EC  0EF2               	movlw	-14
 18650  0153EE  50E3               	movf	plusw1,w,c
 18651  0153F0  5ADE               	subwfb	postinc2,f,c
 18652  0153F2  0EF3               	movlw	-13
 18653  0153F4  50E3               	movf	plusw1,w,c
 18654  0153F6  5ADE               	subwfb	postinc2,f,c
 18655  0153F8  0EF4               	movlw	-12
 18656  0153FA  50E3               	movf	plusw1,w,c
 18657  0153FC  5ADE               	subwfb	postinc2,f,c
 18658  0153FE  0EF5               	movlw	-11
 18659  015400  50E3               	movf	plusw1,w,c
 18660  015402  5ADE               	subwfb	postinc2,f,c
 18661  015404                     l9707:
 18662                           
 18663                           ;stkvar	_divisor @ sp[(-2)+-16]
 18664  015404  90D8               	bcf	status,0,c
 18665  015406  0EF5               	movlw	-11
 18666  015408  32E3               	rrcf	plusw1,f,c
 18667  01540A  0EF4               	movlw	-12
 18668  01540C  32E3               	rrcf	plusw1,f,c
 18669  01540E  0EF3               	movlw	-13
 18670  015410  32E3               	rrcf	plusw1,f,c
 18671  015412  0EF2               	movlw	-14
 18672  015414  32E3               	rrcf	plusw1,f,c
 18673  015416  0EF1               	movlw	-15
 18674  015418  32E3               	rrcf	plusw1,f,c
 18675  01541A  0EF0               	movlw	-16
 18676  01541C  32E3               	rrcf	plusw1,f,c
 18677  01541E  0EEF               	movlw	-17
 18678  015420  32E3               	rrcf	plusw1,f,c
 18679  015422  0EEE               	movlw	-18
 18680  015424  32E3               	rrcf	plusw1,f,c
 18681                           
 18682                           ;stkvar	_counter @ sp[(-2)+1]
 18683  015426  0EFF               	movlw	-1
 18684  015428  50E3               	movf	plusw1,w,c
 18685  01542A  6E32               	movwf	btemp^0,c
 18686  01542C  0E01               	movlw	1
 18687  01542E  5E32               	subwf	btemp^0,f,c
 18688  015430  0EFF               	movlw	-1
 18689  015432  0060  F0CB  FFE3   	movff	btemp,plusw1
 18690  015438  A4D8               	btfss	status,2,c
 18691  01543A  D7A4               	goto	u9840
 18692  01543C                     u9860:
 18693                           
 18694                           ;stkvar	_sign @ sp[(-2)+0]
 18695  01543C  0EFE               	movlw	-2
 18696  01543E  50E3               	movf	plusw1,w,c
 18697  015440  B4D8               	btfsc	status,2,c
 18698  015442  D025               	goto	u9880
 18699                           
 18700                           ;stkvar	_dividend @ sp[(-2)+-8]
 18701                           ;stkvar	_dividend @ sp[(-2)+-8]
 18702  015444  0EF6               	movlw	-10
 18703  015446  6CE3               	negf	plusw1,c
 18704  015448  0EF7               	movlw	-9
 18705  01544A  1EE3               	comf	plusw1,f,c
 18706  01544C  0EF8               	movlw	-8
 18707  01544E  1EE3               	comf	plusw1,f,c
 18708  015450  0EF9               	movlw	-7
 18709  015452  1EE3               	comf	plusw1,f,c
 18710  015454  0EFA               	movlw	-6
 18711  015456  1EE3               	comf	plusw1,f,c
 18712  015458  0EFB               	movlw	-5
 18713  01545A  1EE3               	comf	plusw1,f,c
 18714  01545C  0EFC               	movlw	-4
 18715  01545E  1EE3               	comf	plusw1,f,c
 18716  015460  0EFD               	movlw	-3
 18717  015462  1EE3               	comf	plusw1,f,c
 18718  015464  E314               	bnc	u9880
 18719  015466  0EF7               	movlw	-9
 18720  015468  2AE3               	incf	plusw1,f,c
 18721  01546A  E311               	bnc	u9880
 18722  01546C  0EF8               	movlw	-8
 18723  01546E  2AE3               	incf	plusw1,f,c
 18724  015470  E30E               	bnc	u9880
 18725  015472  0EF9               	movlw	-7
 18726  015474  2AE3               	incf	plusw1,f,c
 18727  015476  E30B               	bnc	u9880
 18728  015478  0EFA               	movlw	-6
 18729  01547A  2AE3               	incf	plusw1,f,c
 18730  01547C  E308               	bnc	u9880
 18731  01547E  0EFB               	movlw	-5
 18732  015480  2AE3               	incf	plusw1,f,c
 18733  015482  E305               	bnc	u9880
 18734  015484  0EFC               	movlw	-4
 18735  015486  2AE3               	incf	plusw1,f,c
 18736  015488  E302               	bnc	u9880
 18737  01548A  0EFD               	movlw	-3
 18738  01548C  2AE3               	incf	plusw1,f,c
 18739  01548E                     u9880:
 18740                           
 18741                           ;stkvar	_dividend @ sp[(-2)+-8]
 18742  01548E  0EF6               	movlw	246
 18743  015490  24E1               	addwf	fsr1l,w,c
 18744  015492  6ED9               	movwf	fsr2l,c
 18745  015494  0EFF               	movlw	255
 18746  015496  20E2               	addwfc	fsr1h,w,c
 18747  015498  6EDA               	movwf	fsr2h,c
 18748                           
 18749                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18750  01549A  0E08               	movlw	8
 18751  01549C  6E32               	movwf	btemp^0,c
 18752  01549E  0EF6               	movlw	-10
 18753  0154A0                     us989999:
 18754  0154A0  006F FF7B FFE3     	movff	postinc2,plusw1
 18755  0154A6  28E8               	incf	wreg,w,c
 18756  0154A8  2E32               	decfsz	btemp^0,f,c
 18757  0154AA  D7FA               	bra	us989999
 18758                           
 18759                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18760  0154AC  52E5               	movf	postdec1,f,c
 18761  0154AE  52E5               	movf	postdec1,f,c
 18762  0154B0  0012               	return		;funcret
 18763  0154B2                     __end_of___aomod:
 18764                           	opt callstack 0
 18765                           
 18766 ;; *************** function ___aodiv *****************
 18767 ;; Defined at:
 18768 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18769 ;; Parameters:    Size  Location     Type
 18770 ;;  dividend        8  [STACK] long long 
 18771 ;;  divisor         8  [STACK] long long 
 18772 ;; Auto vars:     Size  Location     Type
 18773 ;;  quotient        8  [STACK] long long 
 18774 ;;  sign            1  [STACK] unsigned char 
 18775 ;;  counter         1  [STACK] unsigned char 
 18776 ;; Return value:  Size  Location     Type
 18777 ;;                  8  [STACK] long long 
 18778 ;; Registers used:
 18779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18780 ;; Tracked objects:
 18781 ;;		On entry : 0/2
 18782 ;;		On exit  : 0/0
 18783 ;;		Unchanged: 0/0
 18784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18789 ;;Total ram usage:        0 bytes
 18790 ;; Hardware stack levels used:    1
 18791 ;; Hardware stack levels required when called:    6
 18792 ;; This function calls:
 18793 ;;		Nothing
 18794 ;; This function is called by:
 18795 ;;		_dtoa
 18796 ;; This function uses a reentrant model
 18797 ;;
 18798                           
 18799                           	psect	text63
 18800  014D7E                     __ptext63:
 18801                           	opt callstack 0
 18802  014D7E                     ___aodiv:
 18803                           	opt callstack 0
 18804                           
 18805                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18806  014D7E  0E0A               	movlw	10
 18807  014D80  26E1               	addwf	fsr1l,f,c
 18808  014D82  0E00               	movlw	0
 18809  014D84  22E2               	addwfc	fsr1h,f,c
 18810                           
 18811                           ;stkvar	_sign @ sp[(-10)+8]
 18812                           
 18813                           ;incstack = 0
 18814  014D86  0EFE               	movlw	-2
 18815  014D88  6AE3               	clrf	plusw1,c
 18816                           
 18817                           ;stkvar	_divisor @ sp[(-10)+-16]
 18818  014D8A  0EED               	movlw	-19
 18819  014D8C  AEE3               	btfss	plusw1,7,c
 18820  014D8E  D028               	goto	l9647
 18821                           
 18822                           ;stkvar	_divisor @ sp[(-10)+-16]
 18823                           ;stkvar	_divisor @ sp[(-10)+-16]
 18824  014D90  0EE6               	movlw	-26
 18825  014D92  6CE3               	negf	plusw1,c
 18826  014D94  0EE7               	movlw	-25
 18827  014D96  1EE3               	comf	plusw1,f,c
 18828  014D98  0EE8               	movlw	-24
 18829  014D9A  1EE3               	comf	plusw1,f,c
 18830  014D9C  0EE9               	movlw	-23
 18831  014D9E  1EE3               	comf	plusw1,f,c
 18832  014DA0  0EEA               	movlw	-22
 18833  014DA2  1EE3               	comf	plusw1,f,c
 18834  014DA4  0EEB               	movlw	-21
 18835  014DA6  1EE3               	comf	plusw1,f,c
 18836  014DA8  0EEC               	movlw	-20
 18837  014DAA  1EE3               	comf	plusw1,f,c
 18838  014DAC  0EED               	movlw	-19
 18839  014DAE  1EE3               	comf	plusw1,f,c
 18840  014DB0  E314               	bnc	u9680
 18841  014DB2  0EE7               	movlw	-25
 18842  014DB4  2AE3               	incf	plusw1,f,c
 18843  014DB6  E311               	bnc	u9680
 18844  014DB8  0EE8               	movlw	-24
 18845  014DBA  2AE3               	incf	plusw1,f,c
 18846  014DBC  E30E               	bnc	u9680
 18847  014DBE  0EE9               	movlw	-23
 18848  014DC0  2AE3               	incf	plusw1,f,c
 18849  014DC2  E30B               	bnc	u9680
 18850  014DC4  0EEA               	movlw	-22
 18851  014DC6  2AE3               	incf	plusw1,f,c
 18852  014DC8  E308               	bnc	u9680
 18853  014DCA  0EEB               	movlw	-21
 18854  014DCC  2AE3               	incf	plusw1,f,c
 18855  014DCE  E305               	bnc	u9680
 18856  014DD0  0EEC               	movlw	-20
 18857  014DD2  2AE3               	incf	plusw1,f,c
 18858  014DD4  E302               	bnc	u9680
 18859  014DD6  0EED               	movlw	-19
 18860  014DD8  2AE3               	incf	plusw1,f,c
 18861  014DDA                     u9680:
 18862                           
 18863                           ;stkvar	_sign @ sp[(-10)+8]
 18864  014DDA  0EFE               	movlw	-2
 18865  014DDC  6AE3               	clrf	plusw1,c
 18866  014DDE  2AE3               	incf	plusw1,f,c
 18867  014DE0                     l9647:
 18868                           
 18869                           ;stkvar	_dividend @ sp[(-10)+-8]
 18870  014DE0  0EF5               	movlw	-11
 18871  014DE2  AEE3               	btfss	plusw1,7,c
 18872  014DE4  D027               	goto	l9653
 18873                           
 18874                           ;stkvar	_dividend @ sp[(-10)+-8]
 18875                           ;stkvar	_dividend @ sp[(-10)+-8]
 18876  014DE6  0EEE               	movlw	-18
 18877  014DE8  6CE3               	negf	plusw1,c
 18878  014DEA  0EEF               	movlw	-17
 18879  014DEC  1EE3               	comf	plusw1,f,c
 18880  014DEE  0EF0               	movlw	-16
 18881  014DF0  1EE3               	comf	plusw1,f,c
 18882  014DF2  0EF1               	movlw	-15
 18883  014DF4  1EE3               	comf	plusw1,f,c
 18884  014DF6  0EF2               	movlw	-14
 18885  014DF8  1EE3               	comf	plusw1,f,c
 18886  014DFA  0EF3               	movlw	-13
 18887  014DFC  1EE3               	comf	plusw1,f,c
 18888  014DFE  0EF4               	movlw	-12
 18889  014E00  1EE3               	comf	plusw1,f,c
 18890  014E02  0EF5               	movlw	-11
 18891  014E04  1EE3               	comf	plusw1,f,c
 18892  014E06  E314               	bnc	u9700
 18893  014E08  0EEF               	movlw	-17
 18894  014E0A  2AE3               	incf	plusw1,f,c
 18895  014E0C  E311               	bnc	u9700
 18896  014E0E  0EF0               	movlw	-16
 18897  014E10  2AE3               	incf	plusw1,f,c
 18898  014E12  E30E               	bnc	u9700
 18899  014E14  0EF1               	movlw	-15
 18900  014E16  2AE3               	incf	plusw1,f,c
 18901  014E18  E30B               	bnc	u9700
 18902  014E1A  0EF2               	movlw	-14
 18903  014E1C  2AE3               	incf	plusw1,f,c
 18904  014E1E  E308               	bnc	u9700
 18905  014E20  0EF3               	movlw	-13
 18906  014E22  2AE3               	incf	plusw1,f,c
 18907  014E24  E305               	bnc	u9700
 18908  014E26  0EF4               	movlw	-12
 18909  014E28  2AE3               	incf	plusw1,f,c
 18910  014E2A  E302               	bnc	u9700
 18911  014E2C  0EF5               	movlw	-11
 18912  014E2E  2AE3               	incf	plusw1,f,c
 18913  014E30                     u9700:
 18914                           
 18915                           ;stkvar	_sign @ sp[(-10)+8]
 18916  014E30  0EFE               	movlw	-2
 18917  014E32  70E3               	btg	plusw1,0,c
 18918  014E34                     l9653:
 18919                           
 18920                           ;stkvar	_quotient @ sp[(-10)+0]
 18921  014E34  0E07               	movlw	7
 18922  014E36  6E32               	movwf	btemp^0,c
 18923  014E38  0EF6               	movlw	-10
 18924  014E3A                     u9711:
 18925  014E3A  6AE3               	clrf	plusw1,c
 18926  014E3C  2AE8               	incf	wreg,f,c
 18927  014E3E  0632               	decf	btemp^0,f,c
 18928  014E40  E2FC               	bc	u9711
 18929                           
 18930                           ;stkvar	_divisor @ sp[(-10)+-16]
 18931  014E42  0EE6               	movlw	-26
 18932  014E44  50E3               	movf	plusw1,w,c
 18933  014E46  E116               	bnz	u9720
 18934  014E48  0EE7               	movlw	-25
 18935  014E4A  50E3               	movf	plusw1,w,c
 18936  014E4C  E113               	bnz	u9720
 18937  014E4E  0EE8               	movlw	-24
 18938  014E50  50E3               	movf	plusw1,w,c
 18939  014E52  E110               	bnz	u9720
 18940  014E54  0EE9               	movlw	-23
 18941  014E56  50E3               	movf	plusw1,w,c
 18942  014E58  E10D               	bnz	u9720
 18943  014E5A  0EEA               	movlw	-22
 18944  014E5C  50E3               	movf	plusw1,w,c
 18945  014E5E  E10A               	bnz	u9720
 18946  014E60  0EEB               	movlw	-21
 18947  014E62  50E3               	movf	plusw1,w,c
 18948  014E64  E107               	bnz	u9720
 18949  014E66  0EEC               	movlw	-20
 18950  014E68  50E3               	movf	plusw1,w,c
 18951  014E6A  E104               	bnz	u9720
 18952  014E6C  0EED               	movlw	-19
 18953  014E6E  50E3               	movf	plusw1,w,c
 18954  014E70  B4D8               	btfsc	status,2,c
 18955  014E72  D088               	goto	u9750
 18956  014E74                     u9720:
 18957                           
 18958                           ;stkvar	_counter @ sp[(-10)+9]
 18959  014E74  0EFF               	movlw	-1
 18960  014E76  6AE3               	clrf	plusw1,c
 18961  014E78  D012               	goto	L18
 18962  014E7A                     l9659:
 18963                           
 18964                           ;stkvar	_divisor @ sp[(-10)+-16]
 18965  014E7A  90D8               	bcf	status,0,c
 18966  014E7C  0EE6               	movlw	-26
 18967  014E7E  36E3               	rlcf	plusw1,f,c
 18968  014E80  0EE7               	movlw	-25
 18969  014E82  36E3               	rlcf	plusw1,f,c
 18970  014E84  0EE8               	movlw	-24
 18971  014E86  36E3               	rlcf	plusw1,f,c
 18972  014E88  0EE9               	movlw	-23
 18973  014E8A  36E3               	rlcf	plusw1,f,c
 18974  014E8C  0EEA               	movlw	-22
 18975  014E8E  36E3               	rlcf	plusw1,f,c
 18976  014E90  0EEB               	movlw	-21
 18977  014E92  36E3               	rlcf	plusw1,f,c
 18978  014E94  0EEC               	movlw	-20
 18979  014E96  36E3               	rlcf	plusw1,f,c
 18980  014E98  0EED               	movlw	-19
 18981  014E9A  36E3               	rlcf	plusw1,f,c
 18982                           
 18983                           ;stkvar	_counter @ sp[(-10)+9]
 18984  014E9C  0EFF               	movlw	-1
 18985  014E9E                     L18:
 18986  014E9E  2AE3               	incf	plusw1,f,c
 18987                           
 18988                           ;stkvar	_divisor @ sp[(-10)+-16]
 18989  014EA0  0EED               	movlw	-19
 18990  014EA2  AEE3               	btfss	plusw1,7,c
 18991  014EA4  D7EA               	goto	l9659
 18992  014EA6                     u9730:
 18993                           
 18994                           ;stkvar	_quotient @ sp[(-10)+0]
 18995  014EA6  90D8               	bcf	status,0,c
 18996  014EA8  0EF6               	movlw	-10
 18997  014EAA  36E3               	rlcf	plusw1,f,c
 18998  014EAC  0EF7               	movlw	-9
 18999  014EAE  36E3               	rlcf	plusw1,f,c
 19000  014EB0  0EF8               	movlw	-8
 19001  014EB2  36E3               	rlcf	plusw1,f,c
 19002  014EB4  0EF9               	movlw	-7
 19003  014EB6  36E3               	rlcf	plusw1,f,c
 19004  014EB8  0EFA               	movlw	-6
 19005  014EBA  36E3               	rlcf	plusw1,f,c
 19006  014EBC  0EFB               	movlw	-5
 19007  014EBE  36E3               	rlcf	plusw1,f,c
 19008  014EC0  0EFC               	movlw	-4
 19009  014EC2  36E3               	rlcf	plusw1,f,c
 19010  014EC4  0EFD               	movlw	-3
 19011  014EC6  36E3               	rlcf	plusw1,f,c
 19012                           
 19013                           ;stkvar	_divisor @ sp[(-10)+-16]
 19014                           ;stkvar	_dividend @ sp[(-10)+-8]
 19015  014EC8  50E1               	movf	fsr1l,w,c
 19016  014ECA  0FEE               	addlw	-18
 19017  014ECC  6ED9               	movwf	fsr2l,c
 19018  014ECE  50E2               	movf	fsr1h,w,c
 19019  014ED0  6EDA               	movwf	fsr2h,c
 19020  014ED2  0EFF               	movlw	255
 19021  014ED4  22DA               	addwfc	fsr2h,f,c
 19022  014ED6  0EE6               	movlw	-26
 19023  014ED8  50E3               	movf	plusw1,w,c
 19024  014EDA  5CDE               	subwf	postinc2,w,c
 19025  014EDC  0EE7               	movlw	-25
 19026  014EDE  50E3               	movf	plusw1,w,c
 19027  014EE0  58DE               	subwfb	postinc2,w,c
 19028  014EE2  0EE8               	movlw	-24
 19029  014EE4  50E3               	movf	plusw1,w,c
 19030  014EE6  58DE               	subwfb	postinc2,w,c
 19031  014EE8  0EE9               	movlw	-23
 19032  014EEA  50E3               	movf	plusw1,w,c
 19033  014EEC  58DE               	subwfb	postinc2,w,c
 19034  014EEE  0EEA               	movlw	-22
 19035  014EF0  50E3               	movf	plusw1,w,c
 19036  014EF2  58DE               	subwfb	postinc2,w,c
 19037  014EF4  0EEB               	movlw	-21
 19038  014EF6  50E3               	movf	plusw1,w,c
 19039  014EF8  58DE               	subwfb	postinc2,w,c
 19040  014EFA  0EEC               	movlw	-20
 19041  014EFC  50E3               	movf	plusw1,w,c
 19042  014EFE  58DE               	subwfb	postinc2,w,c
 19043  014F00  0EED               	movlw	-19
 19044  014F02  50E3               	movf	plusw1,w,c
 19045  014F04  58DE               	subwfb	postinc2,w,c
 19046  014F06  A0D8               	btfss	status,0,c
 19047  014F08  D021               	goto	l9671
 19048                           
 19049                           ;stkvar	_divisor @ sp[(-10)+-16]
 19050                           ;stkvar	_dividend @ sp[(-10)+-8]
 19051  014F0A  50E1               	movf	fsr1l,w,c
 19052  014F0C  0FEE               	addlw	-18
 19053  014F0E  6ED9               	movwf	fsr2l,c
 19054  014F10  50E2               	movf	fsr1h,w,c
 19055  014F12  6EDA               	movwf	fsr2h,c
 19056  014F14  0EFF               	movlw	255
 19057  014F16  22DA               	addwfc	fsr2h,f,c
 19058  014F18  0EE6               	movlw	-26
 19059  014F1A  50E3               	movf	plusw1,w,c
 19060  014F1C  5EDE               	subwf	postinc2,f,c
 19061  014F1E  0EE7               	movlw	-25
 19062  014F20  50E3               	movf	plusw1,w,c
 19063  014F22  5ADE               	subwfb	postinc2,f,c
 19064  014F24  0EE8               	movlw	-24
 19065  014F26  50E3               	movf	plusw1,w,c
 19066  014F28  5ADE               	subwfb	postinc2,f,c
 19067  014F2A  0EE9               	movlw	-23
 19068  014F2C  50E3               	movf	plusw1,w,c
 19069  014F2E  5ADE               	subwfb	postinc2,f,c
 19070  014F30  0EEA               	movlw	-22
 19071  014F32  50E3               	movf	plusw1,w,c
 19072  014F34  5ADE               	subwfb	postinc2,f,c
 19073  014F36  0EEB               	movlw	-21
 19074  014F38  50E3               	movf	plusw1,w,c
 19075  014F3A  5ADE               	subwfb	postinc2,f,c
 19076  014F3C  0EEC               	movlw	-20
 19077  014F3E  50E3               	movf	plusw1,w,c
 19078  014F40  5ADE               	subwfb	postinc2,f,c
 19079  014F42  0EED               	movlw	-19
 19080  014F44  50E3               	movf	plusw1,w,c
 19081  014F46  5ADE               	subwfb	postinc2,f,c
 19082                           
 19083                           ;stkvar	_quotient @ sp[(-10)+0]
 19084  014F48  0EF6               	movlw	-10
 19085  014F4A  80E3               	bsf	plusw1,0,c
 19086  014F4C                     l9671:
 19087                           
 19088                           ;stkvar	_divisor @ sp[(-10)+-16]
 19089  014F4C  90D8               	bcf	status,0,c
 19090  014F4E  0EED               	movlw	-19
 19091  014F50  32E3               	rrcf	plusw1,f,c
 19092  014F52  0EEC               	movlw	-20
 19093  014F54  32E3               	rrcf	plusw1,f,c
 19094  014F56  0EEB               	movlw	-21
 19095  014F58  32E3               	rrcf	plusw1,f,c
 19096  014F5A  0EEA               	movlw	-22
 19097  014F5C  32E3               	rrcf	plusw1,f,c
 19098  014F5E  0EE9               	movlw	-23
 19099  014F60  32E3               	rrcf	plusw1,f,c
 19100  014F62  0EE8               	movlw	-24
 19101  014F64  32E3               	rrcf	plusw1,f,c
 19102  014F66  0EE7               	movlw	-25
 19103  014F68  32E3               	rrcf	plusw1,f,c
 19104  014F6A  0EE6               	movlw	-26
 19105  014F6C  32E3               	rrcf	plusw1,f,c
 19106                           
 19107                           ;stkvar	_counter @ sp[(-10)+9]
 19108  014F6E  0EFF               	movlw	-1
 19109  014F70  50E3               	movf	plusw1,w,c
 19110  014F72  6E32               	movwf	btemp^0,c
 19111  014F74  0E01               	movlw	1
 19112  014F76  5E32               	subwf	btemp^0,f,c
 19113  014F78  0EFF               	movlw	-1
 19114  014F7A  0060  F0CB  FFE3   	movff	btemp,plusw1
 19115  014F80  A4D8               	btfss	status,2,c
 19116  014F82  D791               	goto	u9730
 19117  014F84                     u9750:
 19118                           
 19119                           ;stkvar	_sign @ sp[(-10)+8]
 19120  014F84  0EFE               	movlw	-2
 19121  014F86  50E3               	movf	plusw1,w,c
 19122  014F88  B4D8               	btfsc	status,2,c
 19123  014F8A  D025               	goto	u9770
 19124                           
 19125                           ;stkvar	_quotient @ sp[(-10)+0]
 19126                           ;stkvar	_quotient @ sp[(-10)+0]
 19127  014F8C  0EF6               	movlw	-10
 19128  014F8E  6CE3               	negf	plusw1,c
 19129  014F90  0EF7               	movlw	-9
 19130  014F92  1EE3               	comf	plusw1,f,c
 19131  014F94  0EF8               	movlw	-8
 19132  014F96  1EE3               	comf	plusw1,f,c
 19133  014F98  0EF9               	movlw	-7
 19134  014F9A  1EE3               	comf	plusw1,f,c
 19135  014F9C  0EFA               	movlw	-6
 19136  014F9E  1EE3               	comf	plusw1,f,c
 19137  014FA0  0EFB               	movlw	-5
 19138  014FA2  1EE3               	comf	plusw1,f,c
 19139  014FA4  0EFC               	movlw	-4
 19140  014FA6  1EE3               	comf	plusw1,f,c
 19141  014FA8  0EFD               	movlw	-3
 19142  014FAA  1EE3               	comf	plusw1,f,c
 19143  014FAC  E314               	bnc	u9770
 19144  014FAE  0EF7               	movlw	-9
 19145  014FB0  2AE3               	incf	plusw1,f,c
 19146  014FB2  E311               	bnc	u9770
 19147  014FB4  0EF8               	movlw	-8
 19148  014FB6  2AE3               	incf	plusw1,f,c
 19149  014FB8  E30E               	bnc	u9770
 19150  014FBA  0EF9               	movlw	-7
 19151  014FBC  2AE3               	incf	plusw1,f,c
 19152  014FBE  E30B               	bnc	u9770
 19153  014FC0  0EFA               	movlw	-6
 19154  014FC2  2AE3               	incf	plusw1,f,c
 19155  014FC4  E308               	bnc	u9770
 19156  014FC6  0EFB               	movlw	-5
 19157  014FC8  2AE3               	incf	plusw1,f,c
 19158  014FCA  E305               	bnc	u9770
 19159  014FCC  0EFC               	movlw	-4
 19160  014FCE  2AE3               	incf	plusw1,f,c
 19161  014FD0  E302               	bnc	u9770
 19162  014FD2  0EFD               	movlw	-3
 19163  014FD4  2AE3               	incf	plusw1,f,c
 19164  014FD6                     u9770:
 19165                           
 19166                           ;stkvar	_quotient @ sp[(-10)+0]
 19167  014FD6  0EF6               	movlw	246
 19168  014FD8  24E1               	addwf	fsr1l,w,c
 19169  014FDA  6ED9               	movwf	fsr2l,c
 19170  014FDC  0EFF               	movlw	255
 19171  014FDE  20E2               	addwfc	fsr1h,w,c
 19172  014FE0  6EDA               	movwf	fsr2h,c
 19173                           
 19174                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19175  014FE2  0E08               	movlw	8
 19176  014FE4  6E32               	movwf	btemp^0,c
 19177  014FE6  0EEE               	movlw	-18
 19178  014FE8                     us978999:
 19179  014FE8  006F FF7B FFE3     	movff	postinc2,plusw1
 19180  014FEE  28E8               	incf	wreg,w,c
 19181  014FF0  2E32               	decfsz	btemp^0,f,c
 19182  014FF2  D7FA               	bra	us978999
 19183                           
 19184                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19185  014FF4  0EF6               	movlw	246
 19186  014FF6  26E1               	addwf	fsr1l,f,c
 19187  014FF8  0EFF               	movlw	255
 19188  014FFA  22E2               	addwfc	fsr1h,f,c
 19189  014FFC  0012               	return		;funcret
 19190  014FFE                     __end_of___aodiv:
 19191                           	opt callstack 0
 19192                           
 19193 ;; *************** function _ctoa *****************
 19194 ;; Defined at:
 19195 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19196 ;; Parameters:    Size  Location     Type
 19197 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19198 ;;		 -> f(6), NULL(0), 
 19199 ;;  c               1  [STACK] unsigned char 
 19200 ;; Auto vars:     Size  Location     Type
 19201 ;;  w               2  [STACK] int 
 19202 ;;  l               2    0        int 
 19203 ;; Return value:  Size  Location     Type
 19204 ;;                  2  [STACK] int 
 19205 ;; Registers used:
 19206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19207 ;; Tracked objects:
 19208 ;;		On entry : 0/5
 19209 ;;		On exit  : 0/0
 19210 ;;		Unchanged: 0/0
 19211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19216 ;;Total ram usage:        0 bytes
 19217 ;; Hardware stack levels used:    1
 19218 ;; Hardware stack levels required when called:   11
 19219 ;; This function calls:
 19220 ;;		_pad
 19221 ;; This function is called by:
 19222 ;;		_vfpfcnvrt
 19223 ;; This function uses a reentrant model
 19224 ;;
 19225                           
 19226                           	psect	text64
 19227  017284                     __ptext64:
 19228                           	opt callstack 0
 19229  017284                     _ctoa:
 19230                           	opt callstack 0
 19231                           
 19232                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19233  017284  52E6               	movf	postinc1,f,c
 19234  017286  52E6               	movf	postinc1,f,c
 19235                           
 19236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19237                           
 19238                           ;incstack = 0
 19239  017288  501B               	movf	_width^0,w,c
 19240  01728A  101C               	iorwf	(_width+1)^0,w,c
 19241  01728C  A4D8               	btfss	status,2,c
 19242  01728E  D009               	goto	l10229
 19243                           
 19244                           ;stkvar	_w @ sp[(-2)+0]
 19245  017290  0EFE               	movlw	-2
 19246  017292  0060  F06F  FFE3   	movff	_width,plusw1
 19247  017298  0EFF               	movlw	-1
 19248  01729A  0060  F073  FFE3   	movff	_width+1,plusw1
 19249  0172A0  D016               	goto	l10231
 19250  0172A2                     l10229:
 19251  0172A2  0EFF               	movlw	255
 19252  0172A4  6E3C               	movwf	(btemp+10)^0,c
 19253  0172A6  0EFF               	movlw	255
 19254  0172A8  6E3D               	movwf	(btemp+11)^0,c
 19255  0172AA  0060  F06C  F03A   	movff	_width,btemp+8
 19256  0172B0  0060  F070  F03B   	movff	_width+1,btemp+9
 19257  0172B6  503C               	movf	(btemp+10)^0,w,c
 19258  0172B8  263A               	addwf	(btemp+8)^0,f,c
 19259  0172BA  503D               	movf	(btemp+11)^0,w,c
 19260  0172BC  223B               	addwfc	(btemp+9)^0,f,c
 19261                           
 19262                           ;stkvar	_w @ sp[(-2)+0]
 19263  0172BE  0EFE               	movlw	-2
 19264  0172C0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19265  0172C6  0EFF               	movlw	-1
 19266  0172C8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19267  0172CE                     l10231:
 19268                           
 19269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19270                           ;stkvar	_c @ sp[(-2)+-3]
 19271  0172CE  0EFB               	movlw	-5
 19272  0172D0  006F FF8C  F240    	movff	plusw1,_dbuf
 19273                           
 19274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19275  0172D6  0102               	movlb	2	; () banked
 19276  0172D8  6B41               	clrf	(_dbuf+1)& (0+255),b
 19277                           
 19278                           ; BSR set to: 2
 19279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19280                           ;stkvar	_w @ sp[(-2)+0]
 19281  0172DA  0EFE               	movlw	-2
 19282  0172DC  006F FF8F FFE6     	movff	plusw1,postinc1
 19283  0172E2  006F FF8F FFE6     	movff	plusw1,postinc1
 19284  0172E8  0E40               	movlw	low _dbuf
 19285  0172EA  6EE6               	movwf	postinc1,c
 19286  0172EC  0E02               	movlw	high _dbuf
 19287  0172EE  6EE6               	movwf	postinc1,c
 19288                           
 19289                           ;stkvar	_fp @ sp[(-6)+-2]
 19290  0172F0  0EF8               	movlw	-8
 19291  0172F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19292  0172F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19293  0172FE  EC68  F0B3         	call	_pad	;wreg free
 19294                           
 19295                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19296  017302  0EFB               	movlw	251
 19297  017304  26E1               	addwf	fsr1l,f,c
 19298  017306  0EFF               	movlw	255
 19299  017308  22E2               	addwfc	fsr1h,f,c
 19300  01730A  0012               	return		;funcret
 19301  01730C                     __end_of_ctoa:
 19302                           	opt callstack 0
 19303                           
 19304 ;; *************** function _pad *****************
 19305 ;; Defined at:
 19306 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19307 ;; Parameters:    Size  Location     Type
 19308 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19309 ;;		 -> f(6), NULL(0), 
 19310 ;;  buf             2  [STACK] PTR unsigned char 
 19311 ;;		 -> dbuf(80), 
 19312 ;;  p               2  [STACK] int 
 19313 ;; Auto vars:     Size  Location     Type
 19314 ;;  w               2  [STACK] int 
 19315 ;;  i               2  [STACK] int 
 19316 ;; Return value:  Size  Location     Type
 19317 ;;                  2  [STACK] int 
 19318 ;; Registers used:
 19319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19320 ;; Tracked objects:
 19321 ;;		On entry : 0/2
 19322 ;;		On exit  : 0/0
 19323 ;;		Unchanged: 0/0
 19324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19329 ;;Total ram usage:        0 bytes
 19330 ;; Hardware stack levels used:    1
 19331 ;; Hardware stack levels required when called:   10
 19332 ;; This function calls:
 19333 ;;		_fputc
 19334 ;;		_fputs
 19335 ;;		_strlen
 19336 ;; This function is called by:
 19337 ;;		_ctoa
 19338 ;;		_dtoa
 19339 ;;		_efgtoa
 19340 ;;		_xtoa
 19341 ;; This function uses a reentrant model
 19342 ;;
 19343                           
 19344                           	psect	text65
 19345  0166D0                     __ptext65:
 19346                           	opt callstack 0
 19347  0166D0                     _pad:
 19348                           	opt callstack 0
 19349                           
 19350                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19351  0166D0  52E6               	movf	postinc1,f,c
 19352  0166D2  52E6               	movf	postinc1,f,c
 19353  0166D4  52E6               	movf	postinc1,f,c
 19354  0166D6  52E6               	movf	postinc1,f,c
 19355                           
 19356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19357                           
 19358                           ;incstack = 0
 19359  0166D8  A01F               	btfss	_flags^0,0,c
 19360  0166DA  D010               	goto	l9511
 19361                           
 19362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19363                           ;stkvar	_fp @ sp[(-4)+-2]
 19364  0166DC  0EFA               	movlw	-6
 19365  0166DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19366  0166E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19367                           
 19368                           ;stkvar	_buf @ sp[(-6)+-4]
 19369  0166EA  0EF6               	movlw	-10
 19370  0166EC  006F FF8F FFE6     	movff	plusw1,postinc1
 19371  0166F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19372  0166F8  EC64  F0B8         	call	_fputs	;wreg free
 19373  0166FC                     l9511:
 19374                           
 19375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19376                           ;stkvar	_p @ sp[(-4)+-6]
 19377  0166FC  0EF7               	movlw	-9
 19378  0166FE  BEE3               	btfsc	plusw1,7,c
 19379  016700  D011               	goto	l9515
 19380                           
 19381                           ;stkvar	_p @ sp[(-4)+-6]
 19382                           ;stkvar	_w @ sp[(-4)+0]
 19383  016702  0EF6               	movlw	-10
 19384  016704  006F FF8C  F032    	movff	plusw1,btemp
 19385  01670A  0EFC               	movlw	-4
 19386  01670C  0060  F0CB  FFE3   	movff	btemp,plusw1
 19387  016712  0EF7               	movlw	-9
 19388  016714  006F FF8C  F032    	movff	plusw1,btemp
 19389  01671A  0EFD               	movlw	-3
 19390  01671C  0060  F0CB  FFE3   	movff	btemp,plusw1
 19391  016722  D004               	goto	l1808
 19392  016724                     l9515:
 19393                           
 19394                           ;stkvar	_w @ sp[(-4)+0]
 19395  016724  0EFC               	movlw	-4
 19396  016726  6AE3               	clrf	plusw1,c
 19397  016728  0EFD               	movlw	-3
 19398  01672A  6AE3               	clrf	plusw1,c
 19399  01672C                     l1808:
 19400                           
 19401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19402                           ;stkvar	_i @ sp[(-4)+2]
 19403  01672C  0EFE               	movlw	-2
 19404  01672E  6AE3               	clrf	plusw1,c
 19405  016730  0EFF               	movlw	-1
 19406  016732  6AE3               	clrf	plusw1,c
 19407                           
 19408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19409  016734  D01E               	goto	l9521
 19410  016736                     l9517:
 19411                           
 19412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19413                           ;stkvar	_fp @ sp[(-4)+-2]
 19414  016736  0EFA               	movlw	-6
 19415  016738  006F FF8F FFE6     	movff	plusw1,postinc1
 19416  01673E  006F FF8F FFE6     	movff	plusw1,postinc1
 19417  016744  0E20               	movlw	32
 19418  016746  6EE6               	movwf	postinc1,c
 19419  016748  0E00               	movlw	0
 19420  01674A  6EE6               	movwf	postinc1,c
 19421  01674C  EC4A  F0B2         	call	_fputc	;wreg free
 19422                           
 19423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19424                           ;stkvar	_i @ sp[(-4)+2]
 19425  016750  0EFE               	movlw	-2
 19426  016752  50E3               	movf	plusw1,w,c
 19427  016754  0F01               	addlw	1
 19428  016756  6E32               	movwf	btemp^0,c
 19429  016758  0EFE               	movlw	-2
 19430  01675A  0060  F0CB  FFE3   	movff	btemp,plusw1
 19431  016760  6A32               	clrf	btemp^0,c
 19432  016762  0EFF               	movlw	-1
 19433  016764  50E3               	movf	plusw1,w,c
 19434  016766  2032               	addwfc	btemp^0,w,c
 19435  016768  6E32               	movwf	btemp^0,c
 19436  01676A  0EFF               	movlw	-1
 19437  01676C  0060  F0CB  FFE3   	movff	btemp,plusw1
 19438  016772                     l9521:
 19439                           
 19440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19441                           ;stkvar	_w @ sp[(-4)+0]
 19442                           ;stkvar	_i @ sp[(-4)+2]
 19443  016772  50E1               	movf	fsr1l,w,c
 19444  016774  0FFE               	addlw	-2
 19445  016776  6ED9               	movwf	fsr2l,c
 19446  016778  50E2               	movf	fsr1h,w,c
 19447  01677A  6EDA               	movwf	fsr2h,c
 19448  01677C  0EFF               	movlw	255
 19449  01677E  22DA               	addwfc	fsr2h,f,c
 19450  016780  0EFC               	movlw	-4
 19451  016782  50E3               	movf	plusw1,w,c
 19452  016784  5CDE               	subwf	postinc2,w,c
 19453  016786  50DE               	movf	postinc2,w,c
 19454  016788  0A80               	xorlw	128
 19455  01678A  6E32               	movwf	btemp^0,c
 19456  01678C  0EFD               	movlw	-3
 19457  01678E  50E3               	movf	plusw1,w,c
 19458  016790  0A80               	xorlw	128
 19459  016792  5832               	subwfb	btemp^0,w,c
 19460  016794  A0D8               	btfss	status,0,c
 19461  016796  D7CF               	goto	l9517
 19462                           
 19463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19464  016798  B01F               	btfsc	_flags^0,0,c
 19465  01679A  D010               	goto	l9525
 19466                           
 19467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19468                           ;stkvar	_fp @ sp[(-4)+-2]
 19469  01679C  0EFA               	movlw	-6
 19470  01679E  006F FF8F FFE6     	movff	plusw1,postinc1
 19471  0167A4  006F FF8F FFE6     	movff	plusw1,postinc1
 19472                           
 19473                           ;stkvar	_buf @ sp[(-6)+-4]
 19474  0167AA  0EF6               	movlw	-10
 19475  0167AC  006F FF8F FFE6     	movff	plusw1,postinc1
 19476  0167B2  006F FF8F FFE6     	movff	plusw1,postinc1
 19477  0167B8  EC64  F0B8         	call	_fputs	;wreg free
 19478  0167BC                     l9525:
 19479                           
 19480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19481                           ;stkvar	_w @ sp[(-4)+0]
 19482                           ;stkvar	_buf @ sp[(-4)+-4]
 19483  0167BC  0EF8               	movlw	-8
 19484  0167BE  006F FF8F FFE6     	movff	plusw1,postinc1
 19485  0167C4  006F FF8F FFE6     	movff	plusw1,postinc1
 19486  0167CA  EC13  F0B8         	call	_strlen	;wreg free
 19487  0167CE  0EFC               	movlw	-4
 19488  0167D0  50E3               	movf	plusw1,w,c
 19489  0167D2  2632               	addwf	btemp^0,f,c
 19490  0167D4  0EFD               	movlw	-3
 19491  0167D6  50E3               	movf	plusw1,w,c
 19492  0167D8  2233               	addwfc	(btemp+1)^0,f,c
 19493                           
 19494                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19495  0167DA  0EF6               	movlw	246
 19496  0167DC  26E1               	addwf	fsr1l,f,c
 19497  0167DE  0EFF               	movlw	255
 19498  0167E0  22E2               	addwfc	fsr1h,f,c
 19499  0167E2  0012               	return		;funcret
 19500  0167E4                     __end_of_pad:
 19501                           	opt callstack 0
 19502                           
 19503 ;; *************** function _strlen *****************
 19504 ;; Defined at:
 19505 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19506 ;; Parameters:    Size  Location     Type
 19507 ;;  s               2  [STACK] PTR const unsigned char 
 19508 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19509 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19510 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19511 ;; Auto vars:     Size  Location     Type
 19512 ;;  a               2  [STACK] PTR const unsigned char 
 19513 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19514 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19515 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19516 ;; Return value:  Size  Location     Type
 19517 ;;                  2  [STACK] unsigned int 
 19518 ;; Registers used:
 19519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19520 ;; Tracked objects:
 19521 ;;		On entry : 0/0
 19522 ;;		On exit  : 0/0
 19523 ;;		Unchanged: 0/0
 19524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19529 ;;Total ram usage:        0 bytes
 19530 ;; Hardware stack levels used:    1
 19531 ;; Hardware stack levels required when called:    6
 19532 ;; This function calls:
 19533 ;;		Nothing
 19534 ;; This function is called by:
 19535 ;;		_eaDogM_WriteString
 19536 ;;		_pad
 19537 ;;		_stoa
 19538 ;; This function uses a reentrant model
 19539 ;;
 19540                           
 19541                           	psect	text66
 19542  017026                     __ptext66:
 19543                           	opt callstack 0
 19544  017026                     _strlen:
 19545                           	opt callstack 0
 19546                           
 19547                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19548  017026  52E6               	movf	postinc1,f,c
 19549  017028  52E6               	movf	postinc1,f,c
 19550                           
 19551                           ;stkvar	_s @ sp[(-2)+-2]
 19552                           
 19553                           ;incstack = 0
 19554  01702A  0EFC               	movlw	-4
 19555  01702C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19556  017032  0EFD               	movlw	-3
 19557  017034  006F FF8C  F03D    	movff	plusw1,btemp+11
 19558                           
 19559                           ;stkvar	_a @ sp[(-2)+0]
 19560  01703A  0EFF               	movlw	-1
 19561  01703C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19562  017042  0EFE               	movlw	-2
 19563  017044  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19564  01704A  D011               	goto	l9265
 19565  01704C                     l9263:
 19566                           
 19567                           ;stkvar	_s @ sp[(-2)+-2]
 19568  01704C  0EFC               	movlw	-4
 19569  01704E  50E3               	movf	plusw1,w,c
 19570  017050  0F01               	addlw	1
 19571  017052  6E32               	movwf	btemp^0,c
 19572  017054  0EFC               	movlw	-4
 19573  017056  0060  F0CB  FFE3   	movff	btemp,plusw1
 19574  01705C  6A32               	clrf	btemp^0,c
 19575  01705E  0EFD               	movlw	-3
 19576  017060  50E3               	movf	plusw1,w,c
 19577  017062  2032               	addwfc	btemp^0,w,c
 19578  017064  6E32               	movwf	btemp^0,c
 19579  017066  0EFD               	movlw	-3
 19580  017068  0060  F0CB  FFE3   	movff	btemp,plusw1
 19581  01706E                     l9265:
 19582                           
 19583                           ;stkvar	_s @ sp[(-2)+-2]
 19584  01706E  0EFC               	movlw	-4
 19585  017070  006F FF8F FFF6     	movff	plusw1,tblptrl
 19586  017076  0EFD               	movlw	-3
 19587  017078  006F FF8F FFF7     	movff	plusw1,tblptrh
 19588  01707E  0E00               	movlw	low (__mediumconst shr (0+16))
 19589  017080  6EF8               	movwf	tblptru,c
 19590  017082  0E1F               	movlw	(high __ramtop+-1)
 19591  017084  64F7               	cpfsgt	tblptrh,c
 19592  017086  D003               	bra	u8847
 19593  017088  0008               	tblrd		*
 19594  01708A  50F5               	movf	tablat,w,c
 19595  01708C  D007               	bra	u8840
 19596  01708E                     u8847:
 19597  01708E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19598  017094  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19599  01709A  50EF               	movf	indf0,w,c
 19600  01709C                     u8840:
 19601  01709C  0900               	iorlw	0
 19602  01709E  A4D8               	btfss	status,2,c
 19603  0170A0  D7D5               	goto	l9263
 19604                           
 19605                           ;stkvar	_a @ sp[(-2)+0]
 19606                           ;stkvar	_s @ sp[(-2)+-2]
 19607  0170A2  0EFC               	movlw	-4
 19608  0170A4  006F FF8C  F032    	movff	plusw1,btemp
 19609  0170AA  0EFD               	movlw	-3
 19610  0170AC  006F FF8C  F033    	movff	plusw1,btemp+1
 19611  0170B2  0EFE               	movlw	-2
 19612  0170B4  50E3               	movf	plusw1,w,c
 19613  0170B6  5E32               	subwf	btemp^0,f,c
 19614  0170B8  0EFF               	movlw	-1
 19615  0170BA  50E3               	movf	plusw1,w,c
 19616  0170BC  5A33               	subwfb	(btemp+1)^0,f,c
 19617                           
 19618                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19619  0170BE  52E5               	movf	postdec1,f,c
 19620  0170C0  52E5               	movf	postdec1,f,c
 19621  0170C2  52E5               	movf	postdec1,f,c
 19622  0170C4  52E5               	movf	postdec1,f,c
 19623  0170C6  0012               	return		;funcret
 19624  0170C8                     __end_of_strlen:
 19625                           	opt callstack 0
 19626                           
 19627 ;; *************** function _fputs *****************
 19628 ;; Defined at:
 19629 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;  s               2  [STACK] PTR const unsigned char 
 19632 ;;		 -> dbuf(80), 
 19633 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19634 ;;		 -> f(6), NULL(0), 
 19635 ;; Auto vars:     Size  Location     Type
 19636 ;;  i               2  [STACK] int 
 19637 ;;  c               1  [STACK] unsigned char 
 19638 ;; Return value:  Size  Location     Type
 19639 ;;                  2  [STACK] int 
 19640 ;; Registers used:
 19641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19642 ;; Tracked objects:
 19643 ;;		On entry : 0/2
 19644 ;;		On exit  : 0/0
 19645 ;;		Unchanged: 0/0
 19646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19651 ;;Total ram usage:        0 bytes
 19652 ;; Hardware stack levels used:    1
 19653 ;; Hardware stack levels required when called:    9
 19654 ;; This function calls:
 19655 ;;		_fputc
 19656 ;; This function is called by:
 19657 ;;		_pad
 19658 ;; This function uses a reentrant model
 19659 ;;
 19660                           
 19661                           	psect	text67
 19662  0170C8                     __ptext67:
 19663                           	opt callstack 0
 19664  0170C8                     _fputs:
 19665                           	opt callstack 0
 19666                           
 19667                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19668  0170C8  52E6               	movf	postinc1,f,c
 19669  0170CA  52E6               	movf	postinc1,f,c
 19670  0170CC  52E6               	movf	postinc1,f,c
 19671                           
 19672                           ;stkvar	_i @ sp[(-3)+0]
 19673                           
 19674                           ;incstack = 0
 19675  0170CE  0EFD               	movlw	-3
 19676  0170D0  6AE3               	clrf	plusw1,c
 19677  0170D2  0EFE               	movlw	-2
 19678  0170D4  6AE3               	clrf	plusw1,c
 19679  0170D6  D01F               	goto	l9277
 19680  0170D8                     l9273:
 19681                           
 19682                           ;stkvar	_fp @ sp[(-3)+-4]
 19683  0170D8  0EF9               	movlw	-7
 19684  0170DA  006F FF8F FFE6     	movff	plusw1,postinc1
 19685  0170E0  006F FF8F FFE6     	movff	plusw1,postinc1
 19686                           
 19687                           ;stkvar	_c @ sp[(-5)+2]
 19688  0170E6  0EFD               	movlw	-3
 19689  0170E8  50E3               	movf	plusw1,w,c
 19690  0170EA  6EE6               	movwf	postinc1,c
 19691  0170EC  0E00               	movlw	0
 19692  0170EE  6EE6               	movwf	postinc1,c
 19693  0170F0  EC4A  F0B2         	call	_fputc	;wreg free
 19694                           
 19695                           ;stkvar	_i @ sp[(-3)+0]
 19696  0170F4  0EFD               	movlw	-3
 19697  0170F6  50E3               	movf	plusw1,w,c
 19698  0170F8  0F01               	addlw	1
 19699  0170FA  6E32               	movwf	btemp^0,c
 19700  0170FC  0EFD               	movlw	-3
 19701  0170FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19702  017104  6A32               	clrf	btemp^0,c
 19703  017106  0EFE               	movlw	-2
 19704  017108  50E3               	movf	plusw1,w,c
 19705  01710A  2032               	addwfc	btemp^0,w,c
 19706  01710C  6E32               	movwf	btemp^0,c
 19707  01710E  0EFE               	movlw	-2
 19708  017110  0060  F0CB  FFE3   	movff	btemp,plusw1
 19709  017116                     l9277:
 19710                           
 19711                           ;stkvar	_i @ sp[(-3)+0]
 19712  017116  0EFD               	movlw	-3
 19713  017118  006F FF8C  F03C    	movff	plusw1,btemp+10
 19714  01711E  0EFE               	movlw	-2
 19715  017120  006F FF8C  F03D    	movff	plusw1,btemp+11
 19716                           
 19717                           ;stkvar	_s @ sp[(-3)+-2]
 19718  017126  0EFB               	movlw	-5
 19719  017128  006F FF8C  F03A    	movff	plusw1,btemp+8
 19720  01712E  0EFC               	movlw	-4
 19721  017130  006F FF8C  F03B    	movff	plusw1,btemp+9
 19722  017136  503C               	movf	(btemp+10)^0,w,c
 19723  017138  243A               	addwf	(btemp+8)^0,w,c
 19724  01713A  6ED9               	movwf	fsr2l,c
 19725  01713C  503D               	movf	(btemp+11)^0,w,c
 19726  01713E  203B               	addwfc	(btemp+9)^0,w,c
 19727  017140  6EDA               	movwf	fsr2h,c
 19728  017142  50DF               	movf	indf2,w,c
 19729  017144  6E3D               	movwf	(btemp+11)^0,c
 19730                           
 19731                           ;stkvar	_c @ sp[(-3)+2]
 19732  017146  0EFF               	movlw	-1
 19733  017148  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19734  01714E  0EFF               	movlw	-1
 19735  017150  50E3               	movf	plusw1,w,c
 19736  017152  A4D8               	btfss	status,2,c
 19737  017154  D7C1               	goto	l9273
 19738                           
 19739                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19740  017156  0EF9               	movlw	249
 19741  017158  26E1               	addwf	fsr1l,f,c
 19742  01715A  0EFF               	movlw	255
 19743  01715C  22E2               	addwfc	fsr1h,f,c
 19744  01715E  0012               	return		;funcret
 19745  017160                     __end_of_fputs:
 19746                           	opt callstack 0
 19747                           
 19748 ;; *************** function _fputc *****************
 19749 ;; Defined at:
 19750 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19751 ;; Parameters:    Size  Location     Type
 19752 ;;  c               2  [STACK] int 
 19753 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19754 ;;		 -> f(6), NULL(0), 
 19755 ;; Auto vars:     Size  Location     Type
 19756 ;;		None
 19757 ;; Return value:  Size  Location     Type
 19758 ;;                  2  [STACK] int 
 19759 ;; Registers used:
 19760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/5
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19770 ;;Total ram usage:        0 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:    8
 19773 ;; This function calls:
 19774 ;;		_putch
 19775 ;; This function is called by:
 19776 ;;		_pad
 19777 ;;		_stoa
 19778 ;;		_vfpfcnvrt
 19779 ;;		_fputs
 19780 ;; This function uses a reentrant model
 19781 ;;
 19782                           
 19783                           	psect	text68
 19784  016494                     __ptext68:
 19785                           	opt callstack 0
 19786  016494                     _fputc:
 19787                           	opt callstack 13
 19788                           
 19789                           ;stkvar	_fp @ sp[(0)+-4]
 19790                           
 19791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19792                           ;incstack = 0
 19793  016494  0EFC               	movlw	-4
 19794  016496  006F FF8C  F032    	movff	plusw1,btemp
 19795  01649C  0EFD               	movlw	-3
 19796  01649E  50E3               	movf	plusw1,w,c
 19797  0164A0  1032               	iorwf	btemp^0,w,c
 19798  0164A2  B4D8               	btfsc	status,2,c
 19799  0164A4  D009               	goto	u8810
 19800                           
 19801                           ;stkvar	_fp @ sp[(0)+-4]
 19802  0164A6  0EFC               	movlw	-4
 19803  0164A8  006F FF8C  F032    	movff	plusw1,btemp
 19804  0164AE  0EFD               	movlw	-3
 19805  0164B0  50E3               	movf	plusw1,w,c
 19806  0164B2  1032               	iorwf	btemp^0,w,c
 19807  0164B4  A4D8               	btfss	status,2,c
 19808  0164B6  D006               	goto	l9251
 19809  0164B8                     u8810:
 19810                           
 19811                           ;stkvar	_c @ sp[(0)+-2]
 19812  0164B8  0EFE               	movlw	-2
 19813  0164BA  50E3               	movf	plusw1,w,c
 19814  0164BC  6EE6               	movwf	postinc1,c
 19815  0164BE  EC38  F0C2         	call	_putch	;wreg free
 19816  0164C2  D075               	goto	l2826
 19817  0164C4                     l9251:
 19818                           
 19819                           ;stkvar	_fp @ sp[(0)+-4]
 19820  0164C4  0EFC               	movlw	-4
 19821  0164C6  006F FF8C  F03C    	movff	plusw1,btemp+10
 19822  0164CC  0EFD               	movlw	-3
 19823  0164CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 19824  0164D4  0E04               	movlw	4
 19825  0164D6  243C               	addwf	(btemp+10)^0,w,c
 19826  0164D8  6ED9               	movwf	fsr2l,c
 19827  0164DA  0E00               	movlw	0
 19828  0164DC  203D               	addwfc	(btemp+11)^0,w,c
 19829  0164DE  6EDA               	movwf	fsr2h,c
 19830  0164E0  50DE               	movf	postinc2,w,c
 19831  0164E2  10DE               	iorwf	postinc2,w,c
 19832  0164E4  B4D8               	btfsc	status,2,c
 19833  0164E6  D026               	goto	u8830
 19834                           
 19835                           ;stkvar	_fp @ sp[(0)+-4]
 19836  0164E8  0EFC               	movlw	-4
 19837  0164EA  006F FF8C  F03C    	movff	plusw1,btemp+10
 19838  0164F0  0EFD               	movlw	-3
 19839  0164F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 19840  0164F8  0E04               	movlw	4
 19841  0164FA  243C               	addwf	(btemp+10)^0,w,c
 19842  0164FC  6ED9               	movwf	fsr2l,c
 19843  0164FE  0E00               	movlw	0
 19844  016500  203D               	addwfc	(btemp+11)^0,w,c
 19845  016502  6EDA               	movwf	fsr2h,c
 19846                           
 19847                           ;stkvar	_fp @ sp[(0)+-4]
 19848  016504  0EFC               	movlw	-4
 19849  016506  006F FF8C  F03C    	movff	plusw1,btemp+10
 19850  01650C  0EFD               	movlw	-3
 19851  01650E  006F FF8C  F03D    	movff	plusw1,btemp+11
 19852  016514  0E02               	movlw	2
 19853  016516  243C               	addwf	(btemp+10)^0,w,c
 19854  016518  6EE9               	movwf	fsr0l,c
 19855  01651A  0E00               	movlw	0
 19856  01651C  203D               	addwfc	(btemp+11)^0,w,c
 19857  01651E  6EEA               	movwf	fsr0h,c
 19858  016520  50DE               	movf	postinc2,w,c
 19859  016522  5CEE               	subwf	postinc0,w,c
 19860  016524  50EE               	movf	postinc0,w,c
 19861  016526  0A80               	xorlw	128
 19862  016528  6E32               	movwf	btemp^0,c
 19863  01652A  50DE               	movf	postinc2,w,c
 19864  01652C  0A80               	xorlw	128
 19865  01652E  5832               	subwfb	btemp^0,w,c
 19866  016530  B0D8               	btfsc	status,0,c
 19867  016532  D03D               	goto	l2826
 19868  016534                     u8830:
 19869                           
 19870                           ;stkvar	_c @ sp[(0)+-2]
 19871                           ;stkvar	_fp @ sp[(0)+-4]
 19872  016534  0EFC               	movlw	-4
 19873  016536  006F FF8C  F03C    	movff	plusw1,btemp+10
 19874  01653C  0EFD               	movlw	-3
 19875  01653E  006F FF8C  F03D    	movff	plusw1,btemp+11
 19876  016544  0E02               	movlw	2
 19877  016546  243C               	addwf	(btemp+10)^0,w,c
 19878  016548  6ED9               	movwf	fsr2l,c
 19879  01654A  0E00               	movlw	0
 19880  01654C  203D               	addwfc	(btemp+11)^0,w,c
 19881  01654E  6EDA               	movwf	fsr2h,c
 19882  016550  006F FF78  F03C    	movff	postinc2,btemp+10
 19883  016556  006F FF74  F03D    	movff	postdec2,btemp+11
 19884                           
 19885                           ;stkvar	_fp @ sp[(0)+-4]
 19886  01655C  0EFC               	movlw	-4
 19887  01655E  006F FF8F FFD9     	movff	plusw1,fsr2l
 19888  016564  0EFD               	movlw	-3
 19889  016566  006F FF8F FFDA     	movff	plusw1,fsr2h
 19890  01656C  006F FF78  F03A    	movff	postinc2,btemp+8
 19891  016572  006F FF74  F03B    	movff	postdec2,btemp+9
 19892  016578  503C               	movf	(btemp+10)^0,w,c
 19893  01657A  243A               	addwf	(btemp+8)^0,w,c
 19894  01657C  6ED9               	movwf	fsr2l,c
 19895  01657E  503D               	movf	(btemp+11)^0,w,c
 19896  016580  203B               	addwfc	(btemp+9)^0,w,c
 19897  016582  6EDA               	movwf	fsr2h,c
 19898  016584  0EFE               	movlw	-2
 19899  016586  006F FF8F FFDF     	movff	plusw1,indf2
 19900                           
 19901                           ;stkvar	_fp @ sp[(0)+-4]
 19902  01658C  0EFC               	movlw	-4
 19903  01658E  006F FF8C  F03C    	movff	plusw1,btemp+10
 19904  016594  0EFD               	movlw	-3
 19905  016596  006F FF8C  F03D    	movff	plusw1,btemp+11
 19906  01659C  0E02               	movlw	2
 19907  01659E  243C               	addwf	(btemp+10)^0,w,c
 19908  0165A0  6ED9               	movwf	fsr2l,c
 19909  0165A2  0E00               	movlw	0
 19910  0165A4  203D               	addwfc	(btemp+11)^0,w,c
 19911  0165A6  6EDA               	movwf	fsr2h,c
 19912  0165A8  2ADE               	incf	postinc2,f,c
 19913  0165AA  0E00               	movlw	0
 19914  0165AC  22DD               	addwfc	postdec2,f,c
 19915  0165AE                     l2826:
 19916                           
 19917                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19918  0165AE  52E5               	movf	postdec1,f,c
 19919  0165B0  52E5               	movf	postdec1,f,c
 19920  0165B2  52E5               	movf	postdec1,f,c
 19921  0165B4  52E5               	movf	postdec1,f,c
 19922  0165B6  0012               	return		;funcret
 19923  0165B8                     __end_of_fputc:
 19924                           	opt callstack 0
 19925                           
 19926 ;; *************** function _putch *****************
 19927 ;; Defined at:
 19928 ;;		line 155 in file "eadog.c"
 19929 ;; Parameters:    Size  Location     Type
 19930 ;;  c               1  [STACK] unsigned char 
 19931 ;; Auto vars:     Size  Location     Type
 19932 ;;		None
 19933 ;; Return value:  Size  Location     Type
 19934 ;;                  1  [STACK] void 
 19935 ;; Registers used:
 19936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19937 ;; Tracked objects:
 19938 ;;		On entry : 0/5
 19939 ;;		On exit  : 0/0
 19940 ;;		Unchanged: 0/0
 19941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19946 ;;Total ram usage:        0 bytes
 19947 ;; Hardware stack levels used:    1
 19948 ;; Hardware stack levels required when called:    7
 19949 ;; This function calls:
 19950 ;;		_ringBufS_put_dma
 19951 ;; This function is called by:
 19952 ;;		_fputc
 19953 ;; This function uses a reentrant model
 19954 ;;
 19955                           
 19956                           	psect	text69
 19957  018470                     __ptext69:
 19958                           	opt callstack 0
 19959  018470                     _putch:
 19960                           	opt callstack 13
 19961                           
 19962                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19963                           ;stkvar	_c @ sp[(0)+-1]
 19964                           
 19965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19966                           ;incstack = 0
 19967  018470  0EFF               	movlw	-1
 19968  018472  50E3               	movf	plusw1,w,c
 19969  018474  6EE6               	movwf	postinc1,c
 19970  018476  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 19971  01847C  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 19972  018482  EC17  F0B7         	call	_ringBufS_put_dma	;wreg free
 19973                           
 19974                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19975  018486  52E5               	movf	postdec1,f,c
 19976  018488  0012               	return		;funcret
 19977  01848A                     __end_of_putch:
 19978                           	opt callstack 0
 19979                           
 19980 ;; *************** function _ringBufS_put_dma *****************
 19981 ;; Defined at:
 19982 ;;		line 67 in file "ringbufs.c"
 19983 ;; Parameters:    Size  Location     Type
 19984 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19985 ;;		 -> ring_buf1(67), 
 19986 ;;  c               1  [STACK] const unsigned char 
 19987 ;; Auto vars:     Size  Location     Type
 19988 ;;		None
 19989 ;; Return value:  Size  Location     Type
 19990 ;;                  1  [STACK] void 
 19991 ;; Registers used:
 19992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19993 ;; Tracked objects:
 19994 ;;		On entry : 0/5
 19995 ;;		On exit  : 0/0
 19996 ;;		Unchanged: 0/0
 19997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20002 ;;Total ram usage:        0 bytes
 20003 ;; Hardware stack levels used:    1
 20004 ;; Hardware stack levels required when called:    6
 20005 ;; This function calls:
 20006 ;;		Nothing
 20007 ;; This function is called by:
 20008 ;;		_putch
 20009 ;; This function uses a reentrant model
 20010 ;;
 20011                           
 20012                           	psect	text70
 20013  016E2E                     __ptext70:
 20014                           	opt callstack 0
 20015  016E2E                     _ringBufS_put_dma:
 20016                           	opt callstack 13
 20017                           
 20018                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20019                           ;stkvar	__this @ sp[(0)+-2]
 20020                           
 20021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20022                           ;incstack = 0
 20023  016E2E  0EFE               	movlw	-2
 20024  016E30  006F FF8C  F03C    	movff	plusw1,btemp+10
 20025  016E36  0EFF               	movlw	-1
 20026  016E38  006F FF8C  F03D    	movff	plusw1,btemp+11
 20027  016E3E  0E42               	movlw	66
 20028  016E40  243C               	addwf	(btemp+10)^0,w,c
 20029  016E42  6ED9               	movwf	fsr2l,c
 20030  016E44  0E00               	movlw	0
 20031  016E46  203D               	addwfc	(btemp+11)^0,w,c
 20032  016E48  6EDA               	movwf	fsr2h,c
 20033  016E4A  0E40               	movlw	64
 20034  016E4C  60DF               	cpfslt	indf2,c
 20035  016E4E  D040               	goto	l1471
 20036                           
 20037                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20038                           ;stkvar	_c @ sp[(0)+-3]
 20039                           ;stkvar	__this @ sp[(0)+-2]
 20040  016E50  0EFE               	movlw	-2
 20041  016E52  006F FF8C  F03C    	movff	plusw1,btemp+10
 20042  016E58  0EFF               	movlw	-1
 20043  016E5A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20044  016E60  0E40               	movlw	64
 20045  016E62  243C               	addwf	(btemp+10)^0,w,c
 20046  016E64  6ED9               	movwf	fsr2l,c
 20047  016E66  0E00               	movlw	0
 20048  016E68  203D               	addwfc	(btemp+11)^0,w,c
 20049  016E6A  6EDA               	movwf	fsr2h,c
 20050  016E6C  50DF               	movf	indf2,w,c
 20051  016E6E  6E3D               	movwf	(btemp+11)^0,c
 20052                           
 20053                           ;stkvar	__this @ sp[(0)+-2]
 20054  016E70  0EFE               	movlw	-2
 20055  016E72  006F FF8C  F03A    	movff	plusw1,btemp+8
 20056  016E78  0EFF               	movlw	-1
 20057  016E7A  006F FF8C  F03B    	movff	plusw1,btemp+9
 20058  016E80  503D               	movf	(btemp+11)^0,w,c
 20059  016E82  243A               	addwf	(btemp+8)^0,w,c
 20060  016E84  6ED9               	movwf	fsr2l,c
 20061  016E86  0E00               	movlw	0
 20062  016E88  203B               	addwfc	(btemp+9)^0,w,c
 20063  016E8A  6EDA               	movwf	fsr2h,c
 20064  016E8C  0EFD               	movlw	-3
 20065  016E8E  006F FF8F FFDF     	movff	plusw1,indf2
 20066                           
 20067                           ;ringbufs.c: 71:   ++_this->head;
 20068                           ;stkvar	__this @ sp[(0)+-2]
 20069  016E94  0EFE               	movlw	-2
 20070  016E96  006F FF8C  F03C    	movff	plusw1,btemp+10
 20071  016E9C  0EFF               	movlw	-1
 20072  016E9E  006F FF8C  F03D    	movff	plusw1,btemp+11
 20073  016EA4  0E40               	movlw	64
 20074  016EA6  243C               	addwf	(btemp+10)^0,w,c
 20075  016EA8  6ED9               	movwf	fsr2l,c
 20076  016EAA  0E00               	movlw	0
 20077  016EAC  203D               	addwfc	(btemp+11)^0,w,c
 20078  016EAE  6EDA               	movwf	fsr2h,c
 20079  016EB0  2ADF               	incf	indf2,f,c
 20080                           
 20081                           ;ringbufs.c: 72:   ++_this->count;
 20082                           ;stkvar	__this @ sp[(0)+-2]
 20083  016EB2  0EFE               	movlw	-2
 20084  016EB4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20085  016EBA  0EFF               	movlw	-1
 20086  016EBC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20087  016EC2  0E42               	movlw	66
 20088  016EC4  243C               	addwf	(btemp+10)^0,w,c
 20089  016EC6  6ED9               	movwf	fsr2l,c
 20090  016EC8  0E00               	movlw	0
 20091  016ECA  203D               	addwfc	(btemp+11)^0,w,c
 20092  016ECC  6EDA               	movwf	fsr2h,c
 20093  016ECE  2ADF               	incf	indf2,f,c
 20094  016ED0                     l1471:
 20095                           
 20096                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20097  016ED0  52E5               	movf	postdec1,f,c
 20098  016ED2  52E5               	movf	postdec1,f,c
 20099  016ED4  52E5               	movf	postdec1,f,c
 20100  016ED6  0012               	return		;funcret
 20101  016ED8                     __end_of_ringBufS_put_dma:
 20102                           	opt callstack 0
 20103                           
 20104 ;; *************** function _atoi *****************
 20105 ;; Defined at:
 20106 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20107 ;; Parameters:    Size  Location     Type
 20108 ;;  s               2  [STACK] PTR const unsigned char 
 20109 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 20110 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 20111 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 20112 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 20113 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
 20114 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
 20115 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 20116 ;; Auto vars:     Size  Location     Type
 20117 ;;  n               2  [STACK] int 
 20118 ;;  neg             2  [STACK] int 
 20119 ;; Return value:  Size  Location     Type
 20120 ;;                  2  [STACK] int 
 20121 ;; Registers used:
 20122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20123 ;; Tracked objects:
 20124 ;;		On entry : 0/5
 20125 ;;		On exit  : 0/0
 20126 ;;		Unchanged: 0/0
 20127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20132 ;;Total ram usage:        0 bytes
 20133 ;; Hardware stack levels used:    1
 20134 ;; Hardware stack levels required when called:    7
 20135 ;; This function calls:
 20136 ;;		_isdigit
 20137 ;;		_isspace
 20138 ;; This function is called by:
 20139 ;;		_vfpfcnvrt
 20140 ;; This function uses a reentrant model
 20141 ;;
 20142                           
 20143                           	psect	text71
 20144  014FFE                     __ptext71:
 20145                           	opt callstack 0
 20146  014FFE                     _atoi:
 20147                           	opt callstack 0
 20148                           
 20149                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20150  014FFE  0E09               	movlw	9
 20151  015000  26E1               	addwf	fsr1l,f,c
 20152  015002  0E00               	movlw	0
 20153  015004  22E2               	addwfc	fsr1h,f,c
 20154                           
 20155                           ;stkvar	_n @ sp[(-9)+5]
 20156                           
 20157                           ;incstack = 0
 20158  015006  0EFC               	movlw	-4
 20159  015008  6AE3               	clrf	plusw1,c
 20160  01500A  0EFD               	movlw	-3
 20161  01500C  6AE3               	clrf	plusw1,c
 20162                           
 20163                           ;stkvar	_neg @ sp[(-9)+7]
 20164  01500E  0EFE               	movlw	-2
 20165  015010  6AE3               	clrf	plusw1,c
 20166  015012  0EFF               	movlw	-1
 20167  015014  6AE3               	clrf	plusw1,c
 20168  015016  D011               	goto	l10737
 20169  015018                     l10735:
 20170                           
 20171                           ;stkvar	_s @ sp[(-9)+-2]
 20172  015018  0EF5               	movlw	-11
 20173  01501A  50E3               	movf	plusw1,w,c
 20174  01501C  0F01               	addlw	1
 20175  01501E  6E32               	movwf	btemp^0,c
 20176  015020  0EF5               	movlw	-11
 20177  015022  0060  F0CB  FFE3   	movff	btemp,plusw1
 20178  015028  6A32               	clrf	btemp^0,c
 20179  01502A  0EF6               	movlw	-10
 20180  01502C  50E3               	movf	plusw1,w,c
 20181  01502E  2032               	addwfc	btemp^0,w,c
 20182  015030  6E32               	movwf	btemp^0,c
 20183  015032  0EF6               	movlw	-10
 20184  015034  0060  F0CB  FFE3   	movff	btemp,plusw1
 20185  01503A                     l10737:
 20186                           
 20187                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20188  01503A  0EFB               	movlw	-5
 20189  01503C  6AE3               	clrf	plusw1,c
 20190  01503E  2AE3               	incf	plusw1,f,c
 20191                           
 20192                           ;stkvar	_s @ sp[(-9)+-2]
 20193  015040  50E1               	movf	fsr1l,w,c
 20194  015042  0FF5               	addlw	-11
 20195  015044  6ED9               	movwf	fsr2l,c
 20196  015046  50E2               	movf	fsr1h,w,c
 20197  015048  6EDA               	movwf	fsr2h,c
 20198  01504A  0EFF               	movlw	255
 20199  01504C  22DA               	addwfc	fsr2h,f,c
 20200  01504E  006F FF7B FFF6     	movff	postinc2,tblptrl
 20201  015054  006F FF77 FFF7     	movff	postdec2,tblptrh
 20202  01505A                     	if	0	;tblptru may be non-zero
 20203  01505A                     	endif
 20204  01505A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20205  01505A  0E00               	movlw	low (__mediumconst shr (0+16))
 20206  01505C  6EF8               	movwf	tblptru,c
 20207  01505E                     	endif
 20208  01505E  0008               	tblrd		*
 20209  015060  50F5               	movf	tablat,w,c
 20210  015062  0A20               	xorlw	32
 20211  015064  B4D8               	btfsc	status,2,c
 20212  015066  D023               	goto	l10745
 20213  015068  0EF7               	movlw	247
 20214  01506A  6E3C               	movwf	(btemp+10)^0,c
 20215  01506C  0EFF               	movlw	255
 20216  01506E  6E3D               	movwf	(btemp+11)^0,c
 20217                           
 20218                           ;stkvar	_s @ sp[(-9)+-2]
 20219  015070  50E1               	movf	fsr1l,w,c
 20220  015072  0FF5               	addlw	-11
 20221  015074  6ED9               	movwf	fsr2l,c
 20222  015076  50E2               	movf	fsr1h,w,c
 20223  015078  6EDA               	movwf	fsr2h,c
 20224  01507A  0EFF               	movlw	255
 20225  01507C  22DA               	addwfc	fsr2h,f,c
 20226  01507E  006F FF7B FFF6     	movff	postinc2,tblptrl
 20227  015084  006F FF77 FFF7     	movff	postdec2,tblptrh
 20228  01508A                     	if	0	;tblptru may be non-zero
 20229  01508A                     	endif
 20230  01508A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20231  01508A  0E00               	movlw	low (__mediumconst shr (0+16))
 20232  01508C  6EF8               	movwf	tblptru,c
 20233  01508E                     	endif
 20234  01508E  0008               	tblrd		*
 20235  015090  50F5               	movf	tablat,w,c
 20236  015092  6E3A               	movwf	(btemp+8)^0,c
 20237  015094  6A3B               	clrf	(btemp+9)^0,c
 20238  015096  503C               	movf	(btemp+10)^0,w,c
 20239  015098  263A               	addwf	(btemp+8)^0,f,c
 20240  01509A  503D               	movf	(btemp+11)^0,w,c
 20241  01509C  223B               	addwfc	(btemp+9)^0,f,c
 20242  01509E  503B               	movf	(btemp+9)^0,w,c
 20243  0150A0  E104               	bnz	u11700
 20244  0150A2  0E05               	movlw	5
 20245  0150A4  5C3A               	subwf	(btemp+8)^0,w,c
 20246  0150A6  A0D8               	btfss	status,0,c
 20247  0150A8  D002               	goto	l10745
 20248  0150AA                     u11700:
 20249                           
 20250                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20251  0150AA  0EFB               	movlw	-5
 20252  0150AC  6AE3               	clrf	plusw1,c
 20253  0150AE                     l10745:
 20254                           
 20255                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20256  0150AE  0EFB               	movlw	-5
 20257  0150B0  50E3               	movf	plusw1,w,c
 20258  0150B2  6E3C               	movwf	(btemp+10)^0,c
 20259  0150B4  6A3D               	clrf	(btemp+11)^0,c
 20260                           
 20261                           ;stkvar	_atoi$4907 @ sp[(-9)+2]
 20262  0150B6  0EF9               	movlw	-7
 20263  0150B8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20264  0150BE  0EFA               	movlw	-6
 20265  0150C0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20266                           
 20267                           ;stkvar	_atoi$4907 @ sp[(-9)+2]
 20268  0150C6  0EF9               	movlw	-7
 20269  0150C8  006F FF8C  F032    	movff	plusw1,btemp
 20270  0150CE  0EFA               	movlw	-6
 20271  0150D0  50E3               	movf	plusw1,w,c
 20272  0150D2  1032               	iorwf	btemp^0,w,c
 20273  0150D4  B4D8               	btfsc	status,2,c
 20274  0150D6  D01F               	goto	l10755
 20275  0150D8  D79F               	goto	l10735
 20276  0150DA                     l10751:
 20277  0150DA  0E01               	movlw	1
 20278  0150DC  6E3C               	movwf	(btemp+10)^0,c
 20279  0150DE  0E00               	movlw	0
 20280  0150E0  6E3D               	movwf	(btemp+11)^0,c
 20281                           
 20282                           ;stkvar	_neg @ sp[(-9)+7]
 20283  0150E2  0EFE               	movlw	-2
 20284  0150E4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20285  0150EA  0EFF               	movlw	-1
 20286  0150EC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20287  0150F2                     l10753:
 20288                           
 20289                           ;stkvar	_s @ sp[(-9)+-2]
 20290  0150F2  0EF5               	movlw	-11
 20291  0150F4  50E3               	movf	plusw1,w,c
 20292  0150F6  0F01               	addlw	1
 20293  0150F8  6E32               	movwf	btemp^0,c
 20294  0150FA  0EF5               	movlw	-11
 20295  0150FC  0060  F0CB  FFE3   	movff	btemp,plusw1
 20296  015102  6A32               	clrf	btemp^0,c
 20297  015104  0EF6               	movlw	-10
 20298  015106  50E3               	movf	plusw1,w,c
 20299  015108  2032               	addwfc	btemp^0,w,c
 20300  01510A  6E32               	movwf	btemp^0,c
 20301  01510C  0EF6               	movlw	-10
 20302  01510E  0060  F0CB  FFE3   	movff	btemp,plusw1
 20303  015114  D053               	goto	l10761
 20304  015116                     l10755:
 20305                           
 20306                           ;stkvar	_s @ sp[(-9)+-2]
 20307  015116  50E1               	movf	fsr1l,w,c
 20308  015118  0FF5               	addlw	-11
 20309  01511A  6ED9               	movwf	fsr2l,c
 20310  01511C  50E2               	movf	fsr1h,w,c
 20311  01511E  6EDA               	movwf	fsr2h,c
 20312  015120  0EFF               	movlw	255
 20313  015122  22DA               	addwfc	fsr2h,f,c
 20314  015124  006F FF7B FFF6     	movff	postinc2,tblptrl
 20315  01512A  006F FF77 FFF7     	movff	postdec2,tblptrh
 20316  015130                     	if	0	;tblptru may be non-zero
 20317  015130                     	endif
 20318  015130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20319  015130  0E00               	movlw	low (__mediumconst shr (0+16))
 20320  015132  6EF8               	movwf	tblptru,c
 20321  015134                     	endif
 20322  015134  0008               	tblrd		*
 20323  015136  50F5               	movf	tablat,w,c
 20324  015138  6E3C               	movwf	(btemp+10)^0,c
 20325  01513A  6A3D               	clrf	(btemp+11)^0,c
 20326                           
 20327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20328                           ; Switch size 1, requested type "simple"
 20329                           ; Number of cases is 1, Range of values is 0 to 0
 20330                           ; switch strategies available:
 20331                           ; Name         Instructions Cycles
 20332                           ; simple_byte            4     3 (average)
 20333                           ;	Chosen strategy is simple_byte
 20334  01513C  503D               	movf	(btemp+11)^0,w,c
 20335  01513E  0A00               	xorlw	0	; case 0
 20336  015140  A4D8               	btfss	status,2,c
 20337  015142  D03C               	goto	l10761
 20338                           
 20339                           ; Switch size 1, requested type "simple"
 20340                           ; Number of cases is 2, Range of values is 43 to 45
 20341                           ; switch strategies available:
 20342                           ; Name         Instructions Cycles
 20343                           ; simple_byte            7     4 (average)
 20344                           ;	Chosen strategy is simple_byte
 20345  015144  503C               	movf	(btemp+10)^0,w,c
 20346  015146  0A2B               	xorlw	43	; case 43
 20347  015148  B4D8               	btfsc	status,2,c
 20348  01514A  D7D3               	goto	l10753
 20349  01514C  0A06               	xorlw	6	; case 45
 20350  01514E  B4D8               	btfsc	status,2,c
 20351  015150  D7C4               	goto	l10751
 20352  015152  D034               	goto	l10761
 20353  015154                     l10757:
 20354                           
 20355                           ;stkvar	_n @ sp[(-9)+5]
 20356  015154  0EFC               	movlw	-4
 20357  015156  006F FF8C  F03C    	movff	plusw1,btemp+10
 20358  01515C  0EFD               	movlw	-3
 20359  01515E  006F FF8C  F03D    	movff	plusw1,btemp+11
 20360  015164  0E0A               	movlw	10
 20361  015166  023C               	mulwf	(btemp+10)^0,c
 20362  015168  006F FFCC  F03A    	movff	prodl,btemp+8
 20363  01516E  006F FFD0  F03B    	movff	prodh,btemp+9
 20364  015174  023D               	mulwf	(btemp+11)^0,c
 20365  015176  50F3               	movf	prodl,w,c
 20366  015178  263B               	addwf	(btemp+9)^0,f,c
 20367                           
 20368                           ;stkvar	_s @ sp[(-9)+-2]
 20369  01517A  50E1               	movf	fsr1l,w,c
 20370  01517C  0FF5               	addlw	-11
 20371  01517E  6ED9               	movwf	fsr2l,c
 20372  015180  50E2               	movf	fsr1h,w,c
 20373  015182  6EDA               	movwf	fsr2h,c
 20374  015184  0EFF               	movlw	255
 20375  015186  22DA               	addwfc	fsr2h,f,c
 20376  015188  006F FF7B FFF6     	movff	postinc2,tblptrl
 20377  01518E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20378  015194                     	if	0	;tblptru may be non-zero
 20379  015194                     	endif
 20380  015194                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20381  015194  0E00               	movlw	low (__mediumconst shr (0+16))
 20382  015196  6EF8               	movwf	tblptru,c
 20383  015198                     	endif
 20384  015198  0008               	tblrd		*
 20385  01519A  50F5               	movf	tablat,w,c
 20386  01519C  5E3A               	subwf	(btemp+8)^0,f,c
 20387  01519E  0E00               	movlw	0
 20388  0151A0  5A3B               	subwfb	(btemp+9)^0,f,c
 20389  0151A2  0E30               	movlw	48
 20390  0151A4  263A               	addwf	(btemp+8)^0,f,c
 20391  0151A6  0E00               	movlw	0
 20392  0151A8  223B               	addwfc	(btemp+9)^0,f,c
 20393                           
 20394                           ;stkvar	_n @ sp[(-9)+5]
 20395  0151AA  0EFC               	movlw	-4
 20396  0151AC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20397  0151B2  0EFD               	movlw	-3
 20398  0151B4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20399  0151BA  D79B               	goto	l10753
 20400  0151BC                     l10761:
 20401  0151BC  0ED0               	movlw	208
 20402  0151BE  6E3C               	movwf	(btemp+10)^0,c
 20403  0151C0  0EFF               	movlw	255
 20404  0151C2  6E3D               	movwf	(btemp+11)^0,c
 20405                           
 20406                           ;stkvar	_s @ sp[(-9)+-2]
 20407  0151C4  50E1               	movf	fsr1l,w,c
 20408  0151C6  0FF5               	addlw	-11
 20409  0151C8  6ED9               	movwf	fsr2l,c
 20410  0151CA  50E2               	movf	fsr1h,w,c
 20411  0151CC  6EDA               	movwf	fsr2h,c
 20412  0151CE  0EFF               	movlw	255
 20413  0151D0  22DA               	addwfc	fsr2h,f,c
 20414  0151D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20415  0151D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20416  0151DE                     	if	0	;tblptru may be non-zero
 20417  0151DE                     	endif
 20418  0151DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20419  0151DE  0E00               	movlw	low (__mediumconst shr (0+16))
 20420  0151E0  6EF8               	movwf	tblptru,c
 20421  0151E2                     	endif
 20422  0151E2  0008               	tblrd		*
 20423  0151E4  50F5               	movf	tablat,w,c
 20424  0151E6  6E3A               	movwf	(btemp+8)^0,c
 20425  0151E8  6A3B               	clrf	(btemp+9)^0,c
 20426  0151EA  503C               	movf	(btemp+10)^0,w,c
 20427  0151EC  263A               	addwf	(btemp+8)^0,f,c
 20428  0151EE  503D               	movf	(btemp+11)^0,w,c
 20429  0151F0  223B               	addwfc	(btemp+9)^0,f,c
 20430  0151F2  503B               	movf	(btemp+9)^0,w,c
 20431  0151F4  E106               	bnz	u11720
 20432  0151F6  0E0A               	movlw	10
 20433  0151F8  5C3A               	subwf	(btemp+8)^0,w,c
 20434  0151FA  B0D8               	btfsc	status,0,c
 20435  0151FC  D002               	goto	u11720
 20436  0151FE  0E01               	movlw	1
 20437  015200  D001               	goto	u11730
 20438  015202                     u11720:
 20439  015202  0E00               	movlw	0
 20440  015204                     u11730:
 20441  015204  6E3C               	movwf	(btemp+10)^0,c
 20442  015206  6A3D               	clrf	(btemp+11)^0,c
 20443                           
 20444                           ;stkvar	_atoi$4909 @ sp[(-9)+0]
 20445  015208  0EF7               	movlw	-9
 20446  01520A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20447  015210  0EF8               	movlw	-8
 20448  015212  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20449                           
 20450                           ;stkvar	_atoi$4909 @ sp[(-9)+0]
 20451  015218  0EF7               	movlw	-9
 20452  01521A  006F FF8C  F032    	movff	plusw1,btemp
 20453  015220  0EF8               	movlw	-8
 20454  015222  50E3               	movf	plusw1,w,c
 20455  015224  1032               	iorwf	btemp^0,w,c
 20456  015226  A4D8               	btfss	status,2,c
 20457  015228  D795               	goto	l10757
 20458                           
 20459                           ;stkvar	_neg @ sp[(-9)+7]
 20460  01522A  0EFE               	movlw	-2
 20461  01522C  006F FF8C  F032    	movff	plusw1,btemp
 20462  015232  0EFF               	movlw	-1
 20463  015234  50E3               	movf	plusw1,w,c
 20464  015236  1032               	iorwf	btemp^0,w,c
 20465  015238  A4D8               	btfss	status,2,c
 20466  01523A  D00E               	goto	l10771
 20467                           
 20468                           ;stkvar	_n @ sp[(-9)+5]
 20469  01523C  0EFC               	movlw	-4
 20470  01523E  006F FF8C  F032    	movff	plusw1,btemp
 20471  015244  1E32               	comf	btemp^0,f,c
 20472  015246  0EFD               	movlw	-3
 20473  015248  006F FF8C  F033    	movff	plusw1,btemp+1
 20474  01524E  1E33               	comf	(btemp+1)^0,f,c
 20475  015250  2A32               	incf	btemp^0,f,c
 20476  015252  B4D8               	btfsc	status,2,c
 20477  015254  2A33               	incf	(btemp+1)^0,f,c
 20478  015256  D008               	goto	l2762
 20479  015258                     l10771:
 20480                           
 20481                           ;stkvar	_n @ sp[(-9)+5]
 20482  015258  0EFC               	movlw	-4
 20483  01525A  006F FF8C  F032    	movff	plusw1,btemp
 20484  015260  0EFD               	movlw	-3
 20485  015262  006F FF8C  F033    	movff	plusw1,btemp+1
 20486  015268                     l2762:
 20487                           
 20488                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20489  015268  0EF5               	movlw	245
 20490  01526A  26E1               	addwf	fsr1l,f,c
 20491  01526C  0EFF               	movlw	255
 20492  01526E  22E2               	addwfc	fsr1h,f,c
 20493  015270  0012               	return		;funcret
 20494  015272                     __end_of_atoi:
 20495                           	opt callstack 0
 20496                           
 20497 ;; *************** function _isspace *****************
 20498 ;; Defined at:
 20499 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20500 ;; Parameters:    Size  Location     Type
 20501 ;;  c               2  [STACK] int 
 20502 ;; Auto vars:     Size  Location     Type
 20503 ;;		None
 20504 ;; Return value:  Size  Location     Type
 20505 ;;                  2  [STACK] int 
 20506 ;; Registers used:
 20507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20508 ;; Tracked objects:
 20509 ;;		On entry : 0/0
 20510 ;;		On exit  : 0/0
 20511 ;;		Unchanged: 0/0
 20512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20517 ;;Total ram usage:        0 bytes
 20518 ;; Hardware stack levels used:    1
 20519 ;; Hardware stack levels required when called:    6
 20520 ;; This function calls:
 20521 ;;		Nothing
 20522 ;; This function is called by:
 20523 ;;		_atoi
 20524 ;; This function uses a reentrant model
 20525 ;;
 20526                           
 20527                           	psect	text72
 20528  0179F8                     __ptext72:
 20529                           	opt callstack 0
 20530  0179F8                     _isspace:
 20531                           	opt callstack 0
 20532                           
 20533                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20534  0179F8  52E6               	movf	postinc1,f,c
 20535                           
 20536                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20537                           
 20538                           ;incstack = 0
 20539  0179FA  0EFF               	movlw	-1
 20540  0179FC  6AE3               	clrf	plusw1,c
 20541  0179FE  2AE3               	incf	plusw1,f,c
 20542                           
 20543                           ;stkvar	_c @ sp[(-1)+-2]
 20544  017A00  0EFD               	movlw	-3
 20545  017A02  006F FF8C  F032    	movff	plusw1,btemp
 20546  017A08  0E20               	movlw	32
 20547  017A0A  1832               	xorwf	btemp^0,w,c
 20548  017A0C  E104               	bnz	u10690
 20549  017A0E  0EFE               	movlw	-2
 20550  017A10  50E3               	movf	plusw1,w,c
 20551  017A12  B4D8               	btfsc	status,2,c
 20552  017A14  D012               	goto	l10221
 20553  017A16                     u10690:
 20554                           
 20555                           ;stkvar	_c @ sp[(-1)+-2]
 20556  017A16  0EFD               	movlw	-3
 20557  017A18  50E3               	movf	plusw1,w,c
 20558  017A1A  0FF7               	addlw	247
 20559  017A1C  6E3C               	movwf	(btemp+10)^0,c
 20560  017A1E  0EFE               	movlw	-2
 20561  017A20  006F FF8C  F03D    	movff	plusw1,btemp+11
 20562  017A26  0EFF               	movlw	255
 20563  017A28  223D               	addwfc	(btemp+11)^0,f,c
 20564  017A2A  503D               	movf	(btemp+11)^0,w,c
 20565  017A2C  E104               	bnz	u10700
 20566  017A2E  0E05               	movlw	5
 20567  017A30  5C3C               	subwf	(btemp+10)^0,w,c
 20568  017A32  A0D8               	btfss	status,0,c
 20569  017A34  D002               	goto	l10221
 20570  017A36                     u10700:
 20571                           
 20572                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20573  017A36  0EFF               	movlw	-1
 20574  017A38  6AE3               	clrf	plusw1,c
 20575  017A3A                     l10221:
 20576                           
 20577                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20578  017A3A  0EFF               	movlw	-1
 20579  017A3C  50E3               	movf	plusw1,w,c
 20580  017A3E  6E32               	movwf	btemp^0,c
 20581  017A40  6A33               	clrf	(btemp+1)^0,c
 20582                           
 20583                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20584  017A42  52E5               	movf	postdec1,f,c
 20585  017A44  52E5               	movf	postdec1,f,c
 20586  017A46  52E5               	movf	postdec1,f,c
 20587  017A48  0012               	return		;funcret
 20588  017A4A                     __end_of_isspace:
 20589                           	opt callstack 0
 20590                           
 20591 ;; *************** function _isdigit *****************
 20592 ;; Defined at:
 20593 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20594 ;; Parameters:    Size  Location     Type
 20595 ;;  c               2  [STACK] int 
 20596 ;; Auto vars:     Size  Location     Type
 20597 ;;		None
 20598 ;; Return value:  Size  Location     Type
 20599 ;;                  2  [STACK] int 
 20600 ;; Registers used:
 20601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20602 ;; Tracked objects:
 20603 ;;		On entry : 0/0
 20604 ;;		On exit  : 0/0
 20605 ;;		Unchanged: 0/0
 20606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20611 ;;Total ram usage:        0 bytes
 20612 ;; Hardware stack levels used:    1
 20613 ;; Hardware stack levels required when called:    6
 20614 ;; This function calls:
 20615 ;;		Nothing
 20616 ;; This function is called by:
 20617 ;;		_vfpfcnvrt
 20618 ;;		_atoi
 20619 ;; This function uses a reentrant model
 20620 ;;
 20621                           
 20622                           	psect	text73
 20623  017E9E                     __ptext73:
 20624                           	opt callstack 0
 20625  017E9E                     _isdigit:
 20626                           	opt callstack 18
 20627                           
 20628                           ;stkvar	_c @ sp[(0)+-2]
 20629                           
 20630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20631                           ;incstack = 0
 20632  017E9E  0EFE               	movlw	-2
 20633  017EA0  50E3               	movf	plusw1,w,c
 20634  017EA2  0FD0               	addlw	208
 20635  017EA4  6E3C               	movwf	(btemp+10)^0,c
 20636  017EA6  0EFF               	movlw	-1
 20637  017EA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 20638  017EAE  0EFF               	movlw	255
 20639  017EB0  223D               	addwfc	(btemp+11)^0,f,c
 20640  017EB2  503D               	movf	(btemp+11)^0,w,c
 20641  017EB4  E106               	bnz	u9650
 20642  017EB6  0E0A               	movlw	10
 20643  017EB8  5C3C               	subwf	(btemp+10)^0,w,c
 20644  017EBA  B0D8               	btfsc	status,0,c
 20645  017EBC  D002               	goto	u9650
 20646  017EBE  0E01               	movlw	1
 20647  017EC0  D001               	goto	u9660
 20648  017EC2                     u9650:
 20649  017EC2  0E00               	movlw	0
 20650  017EC4                     u9660:
 20651  017EC4  6E32               	movwf	btemp^0,c
 20652  017EC6  6A33               	clrf	(btemp+1)^0,c
 20653                           
 20654                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20655  017EC8  52E5               	movf	postdec1,f,c
 20656  017ECA  52E5               	movf	postdec1,f,c
 20657  017ECC  0012               	return		;funcret
 20658  017ECE                     __end_of_isdigit:
 20659                           	opt callstack 0
 20660                           
 20661 ;; *************** function _set_vterm *****************
 20662 ;; Defined at:
 20663 ;;		line 107 in file "mconfig.c"
 20664 ;; Parameters:    Size  Location     Type
 20665 ;;  vterm           1  [STACK] const unsigned char 
 20666 ;; Auto vars:     Size  Location     Type
 20667 ;;		None
 20668 ;; Return value:  Size  Location     Type
 20669 ;;                  1  [STACK] unsigned char 
 20670 ;; Registers used:
 20671 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20672 ;; Tracked objects:
 20673 ;;		On entry : 0/1
 20674 ;;		On exit  : 3F/5
 20675 ;;		Unchanged: 0/0
 20676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20681 ;;Total ram usage:        0 bytes
 20682 ;; Hardware stack levels used:    1
 20683 ;; Hardware stack levels required when called:    6
 20684 ;; This function calls:
 20685 ;;		Nothing
 20686 ;; This function is called by:
 20687 ;;		_main
 20688 ;;		_check_help
 20689 ;; This function uses a reentrant model
 20690 ;;
 20691                           
 20692                           	psect	text74
 20693  018454                     __ptext74:
 20694                           	opt callstack 0
 20695  018454                     _set_vterm:
 20696                           	opt callstack 24
 20697                           
 20698                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20699                           ;stkvar	_vterm @ sp[(0)+-1]
 20700                           
 20701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20702                           ;incstack = 0
 20703  018454  0EFF               	movlw	-1
 20704  018456  006F FF8C  F03D    	movff	plusw1,btemp+11
 20705  01845C  0E03               	movlw	3
 20706  01845E  163D               	andwf	(btemp+11)^0,f,c
 20707  018460  0105               	movlb	5	; () banked
 20708  018462  51D8               	movf	(_D+216)& (0+255),w,b
 20709  018464  183D               	xorwf	(btemp+11)^0,w,c
 20710  018466  0BFE               	andlw	-2
 20711  018468  183D               	xorwf	(btemp+11)^0,w,c
 20712  01846A  6FD8               	movwf	(_D+216)& (0+255),b
 20713                           
 20714                           ; BSR set to: 5
 20715                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20716  01846C  52E5               	movf	postdec1,f,c
 20717  01846E  0012               	return		;funcret
 20718  018470                     __end_of_set_vterm:
 20719                           	opt callstack 0
 20720                           
 20721 ;; *************** function _set_temp_display_help *****************
 20722 ;; Defined at:
 20723 ;;		line 211 in file "mconfig.c"
 20724 ;; Parameters:    Size  Location     Type
 20725 ;;  new_response    1  [STACK] const enum E16501
 20726 ;; Auto vars:     Size  Location     Type
 20727 ;;		None
 20728 ;; Return value:  Size  Location     Type
 20729 ;;                  1  [STACK] enum E16501
 20730 ;; Registers used:
 20731 ;;		wreg, fsr1l, fsr1h
 20732 ;; Tracked objects:
 20733 ;;		On entry : 0/5
 20734 ;;		On exit  : 3F/1
 20735 ;;		Unchanged: 0/0
 20736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20741 ;;Total ram usage:        0 bytes
 20742 ;; Hardware stack levels used:    1
 20743 ;; Hardware stack levels required when called:    6
 20744 ;; This function calls:
 20745 ;;		Nothing
 20746 ;; This function is called by:
 20747 ;;		_check_help
 20748 ;; This function uses a reentrant model
 20749 ;;
 20750                           
 20751                           	psect	text75
 20752  01854E                     __ptext75:
 20753                           	opt callstack 0
 20754  01854E                     _set_temp_display_help:
 20755                           	opt callstack 23
 20756                           
 20757                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20758                           
 20759                           ; BSR set to: 5
 20760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20761                           ;incstack = 0
 20762  01854E  0101               	movlb	1	; () banked
 20763  018550  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20764                           
 20765                           ; BSR set to: 1
 20766                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20767                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20768  018552  0EFF               	movlw	-1
 20769  018554  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20770                           
 20771                           ; BSR set to: 1
 20772                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20773  01855A  52E5               	movf	postdec1,f,c
 20774  01855C  0012               	return		;funcret
 20775  01855E                     __end_of_set_temp_display_help:
 20776                           	opt callstack 0
 20777                           
 20778 ;; *************** function _set_display_info *****************
 20779 ;; Defined at:
 20780 ;;		line 200 in file "mconfig.c"
 20781 ;; Parameters:    Size  Location     Type
 20782 ;;  new_response    1  [STACK] const enum E16501
 20783 ;; Auto vars:     Size  Location     Type
 20784 ;;		None
 20785 ;; Return value:  Size  Location     Type
 20786 ;;                  1  [STACK] enum E16986
 20787 ;; Registers used:
 20788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20789 ;; Tracked objects:
 20790 ;;		On entry : 0/39
 20791 ;;		On exit  : 0/0
 20792 ;;		Unchanged: 0/0
 20793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20798 ;;Total ram usage:        0 bytes
 20799 ;; Hardware stack levels used:    1
 20800 ;; Hardware stack levels required when called:    7
 20801 ;; This function calls:
 20802 ;;		_TimerDone
 20803 ;; This function is called by:
 20804 ;;		_main
 20805 ;;		_check_help
 20806 ;; This function uses a reentrant model
 20807 ;;
 20808                           
 20809                           	psect	text76
 20810  0183DE                     __ptext76:
 20811                           	opt callstack 0
 20812  0183DE                     _set_display_info:
 20813                           	opt callstack 23
 20814                           
 20815                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20816                           
 20817                           ; BSR set to: 1
 20818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20819                           ;incstack = 0
 20820  0183DE  0E07               	movlw	7
 20821  0183E0  6EE6               	movwf	postinc1,c
 20822  0183E2  EC69  F0C1         	call	_TimerDone	;wreg free
 20823  0183E6  5032               	movf	btemp^0,w,c
 20824  0183E8  B4D8               	btfsc	status,2,c
 20825  0183EA  D006               	goto	l1608
 20826                           
 20827                           ;mconfig.c: 205:   old_info = V.response.info;
 20828  0183EC  0101               	movlb	1	; () banked
 20829  0183EE  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20830                           
 20831                           ; BSR set to: 1
 20832                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20833                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20834  0183F0  0EFF               	movlw	-1
 20835  0183F2  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20836  0183F8                     l1608:
 20837                           
 20838                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20839  0183F8  52E5               	movf	postdec1,f,c
 20840  0183FA  0012               	return		;funcret
 20841  0183FC                     __end_of_set_display_info:
 20842                           	opt callstack 0
 20843                           
 20844 ;; *************** function _mode_lamp_dim *****************
 20845 ;; Defined at:
 20846 ;;		line 13 in file "mconfig.c"
 20847 ;; Parameters:    Size  Location     Type
 20848 ;;  level           2  [STACK] const unsigned short 
 20849 ;; Auto vars:     Size  Location     Type
 20850 ;;		None
 20851 ;; Return value:  Size  Location     Type
 20852 ;;                  1  [STACK] void 
 20853 ;; Registers used:
 20854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20855 ;; Tracked objects:
 20856 ;;		On entry : 0/1
 20857 ;;		On exit  : 0/0
 20858 ;;		Unchanged: 0/0
 20859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20864 ;;Total ram usage:        0 bytes
 20865 ;; Hardware stack levels used:    1
 20866 ;; Hardware stack levels required when called:    7
 20867 ;; This function calls:
 20868 ;;		_PWM8_LoadDutyValue
 20869 ;; This function is called by:
 20870 ;;		_main
 20871 ;;		_check_help
 20872 ;; This function uses a reentrant model
 20873 ;;
 20874                           
 20875                           	psect	text77
 20876  0184A6                     __ptext77:
 20877                           	opt callstack 0
 20878  0184A6                     _mode_lamp_dim:
 20879                           	opt callstack 23
 20880                           
 20881                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20882                           ;stkvar	_level @ sp[(0)+-2]
 20883                           
 20884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20885                           ;incstack = 0
 20886  0184A6  0EFE               	movlw	-2
 20887  0184A8  006F FF8F FFE6     	movff	plusw1,postinc1
 20888  0184AE  006F FF8F FFE6     	movff	plusw1,postinc1
 20889  0184B4  EC1A  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 20890                           
 20891                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20892  0184B8  52E5               	movf	postdec1,f,c
 20893  0184BA  52E5               	movf	postdec1,f,c
 20894  0184BC  0012               	return		;funcret
 20895  0184BE                     __end_of_mode_lamp_dim:
 20896                           	opt callstack 0
 20897                           
 20898 ;; *************** function _mode_lamp_bright *****************
 20899 ;; Defined at:
 20900 ;;		line 18 in file "mconfig.c"
 20901 ;; Parameters:    Size  Location     Type
 20902 ;;		None
 20903 ;; Auto vars:     Size  Location     Type
 20904 ;;		None
 20905 ;; Return value:  Size  Location     Type
 20906 ;;                  1  [STACK] void 
 20907 ;; Registers used:
 20908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20909 ;; Tracked objects:
 20910 ;;		On entry : 0/1
 20911 ;;		On exit  : 0/0
 20912 ;;		Unchanged: 0/0
 20913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20918 ;;Total ram usage:        0 bytes
 20919 ;; Hardware stack levels used:    1
 20920 ;; Hardware stack levels required when called:    7
 20921 ;; This function calls:
 20922 ;;		_PWM8_LoadDutyValue
 20923 ;; This function is called by:
 20924 ;;		_check_help
 20925 ;; This function uses a reentrant model
 20926 ;;
 20927                           
 20928                           	psect	text78
 20929  01856C                     __ptext78:
 20930                           	opt callstack 0
 20931  01856C                     _mode_lamp_bright:
 20932                           	opt callstack 22
 20933                           
 20934                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20935                           
 20936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20937                           ;incstack = 0
 20938  01856C  0E2C               	movlw	44
 20939  01856E  6EE6               	movwf	postinc1,c
 20940  018570  0E01               	movlw	1
 20941  018572  6EE6               	movwf	postinc1,c
 20942  018574  EC1A  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 20943                           
 20944                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20945  018578  0012               	return		;funcret
 20946  01857A                     __end_of_mode_lamp_bright:
 20947                           	opt callstack 0
 20948                           
 20949 ;; *************** function _PWM8_LoadDutyValue *****************
 20950 ;; Defined at:
 20951 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20952 ;; Parameters:    Size  Location     Type
 20953 ;;  dutyValue       2  [STACK] unsigned short 
 20954 ;; Auto vars:     Size  Location     Type
 20955 ;;		None
 20956 ;; Return value:  Size  Location     Type
 20957 ;;                  1  [STACK] void 
 20958 ;; Registers used:
 20959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20960 ;; Tracked objects:
 20961 ;;		On entry : 0/1
 20962 ;;		On exit  : 0/0
 20963 ;;		Unchanged: 0/0
 20964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20969 ;;Total ram usage:        0 bytes
 20970 ;; Hardware stack levels used:    1
 20971 ;; Hardware stack levels required when called:    6
 20972 ;; This function calls:
 20973 ;;		Nothing
 20974 ;; This function is called by:
 20975 ;;		_mode_lamp_dim
 20976 ;;		_mode_lamp_bright
 20977 ;; This function uses a reentrant model
 20978 ;;
 20979                           
 20980                           	psect	text79
 20981  017C34                     __ptext79:
 20982                           	opt callstack 0
 20983  017C34                     _PWM8_LoadDutyValue:
 20984                           	opt callstack 23
 20985                           
 20986                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20987                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20988                           
 20989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20990                           ;incstack = 0
 20991  017C34  0EFE               	movlw	-2
 20992  017C36  006F FF8C  F03C    	movff	plusw1,btemp+10
 20993  017C3C  0EFF               	movlw	-1
 20994  017C3E  006F FF8C  F03D    	movff	plusw1,btemp+11
 20995  017C44  90D8               	bcf	status,0,c
 20996  017C46  323D               	rrcf	(btemp+11)^0,f,c
 20997  017C48  323C               	rrcf	(btemp+10)^0,f,c
 20998  017C4A  90D8               	bcf	status,0,c
 20999  017C4C  323D               	rrcf	(btemp+11)^0,f,c
 21000  017C4E  323C               	rrcf	(btemp+10)^0,f,c
 21001  017C50  503C               	movf	(btemp+10)^0,w,c
 21002  017C52  6E61               	movwf	97,c	;volatile
 21003                           
 21004                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21005                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21006  017C54  0EFE               	movlw	-2
 21007  017C56  006F FF8C  F03D    	movff	plusw1,btemp+11
 21008  017C5C  0E03               	movlw	3
 21009  017C5E  163D               	andwf	(btemp+11)^0,f,c
 21010  017C60  0E06               	movlw	6
 21011  017C62  6E32               	movwf	btemp^0,c
 21012  017C64                     u12185:
 21013  017C64  90D8               	bcf	status,0,c
 21014  017C66  363D               	rlcf	(btemp+11)^0,f,c
 21015  017C68  2E32               	decfsz	btemp^0,f,c
 21016  017C6A  D7FC               	goto	u12185
 21017  017C6C  503D               	movf	(btemp+11)^0,w,c
 21018  017C6E  6E60               	movwf	96,c	;volatile
 21019                           
 21020                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21021  017C70  52E5               	movf	postdec1,f,c
 21022  017C72  52E5               	movf	postdec1,f,c
 21023  017C74  0012               	return		;funcret
 21024  017C76                     __end_of_PWM8_LoadDutyValue:
 21025                           	opt callstack 0
 21026                           
 21027 ;; *************** function _help_button *****************
 21028 ;; Defined at:
 21029 ;;		line 26 in file "mconfig.c"
 21030 ;; Parameters:    Size  Location     Type
 21031 ;;		None
 21032 ;; Auto vars:     Size  Location     Type
 21033 ;;		None
 21034 ;; Return value:  Size  Location     Type
 21035 ;;                  1  [STACK] _Bool 
 21036 ;; Registers used:
 21037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21038 ;; Tracked objects:
 21039 ;;		On entry : 0/1
 21040 ;;		On exit  : 0/0
 21041 ;;		Unchanged: 0/0
 21042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21047 ;;Total ram usage:        0 bytes
 21048 ;; Hardware stack levels used:    1
 21049 ;; Hardware stack levels required when called:    7
 21050 ;; This function calls:
 21051 ;;		_StartTimer
 21052 ;;		_TimerDone
 21053 ;; This function is called by:
 21054 ;;		_check_help
 21055 ;; This function uses a reentrant model
 21056 ;;
 21057                           
 21058                           	psect	text80
 21059  017D32                     __ptext80:
 21060                           	opt callstack 0
 21061  017D32                     _help_button:
 21062                           	opt callstack 22
 21063                           
 21064                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21065                           
 21066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21067                           ;incstack = 0
 21068  017D32  B0CB               	btfsc	203,0,c	;volatile
 21069  017D34  D00C               	goto	l1551
 21070                           
 21071                           ;mconfig.c: 29:   V.help = 1;
 21072  017D36  0101               	movlb	1	; () banked
 21073  017D38  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21074                           
 21075                           ; BSR set to: 1
 21076                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21077  017D3A  0E08               	movlw	8
 21078  017D3C  6EE6               	movwf	postinc1,c
 21079  017D3E  EC69  F0C1         	call	_TimerDone	;wreg free
 21080  017D42  5032               	movf	btemp^0,w,c
 21081  017D44  B4D8               	btfsc	status,2,c
 21082  017D46  D003               	goto	l1551
 21083                           
 21084                           ;mconfig.c: 31:    return 1;
 21085  017D48  0E01               	movlw	1
 21086  017D4A  6E32               	movwf	btemp^0,c
 21087  017D4C  0012               	return	
 21088  017D4E                     l1551:
 21089                           
 21090                           ;mconfig.c: 34:  if (!V.help)
 21091  017D4E  0101               	movlb	1	; () banked
 21092  017D50  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21093  017D52  D008               	goto	l11643
 21094                           
 21095                           ; BSR set to: 1
 21096                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21097  017D54  0E2C               	movlw	44
 21098  017D56  6EE6               	movwf	postinc1,c
 21099  017D58  0E01               	movlw	1
 21100  017D5A  6EE6               	movwf	postinc1,c
 21101  017D5C  0E08               	movlw	8
 21102  017D5E  6EE6               	movwf	postinc1,c
 21103  017D60  EC7B  F0BE         	call	_StartTimer	;wreg free
 21104  017D64                     l11643:
 21105                           
 21106                           ;mconfig.c: 37:  return 0;
 21107  017D64  0E00               	movlw	0
 21108  017D66  6E32               	movwf	btemp^0,c
 21109                           
 21110                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21111  017D68  0012               	return		;funcret
 21112  017D6A                     __end_of_help_button:
 21113                           	opt callstack 0
 21114                           
 21115 ;; *************** function _TimerDone *****************
 21116 ;; Defined at:
 21117 ;;		line 20 in file "timers.c"
 21118 ;; Parameters:    Size  Location     Type
 21119 ;;  timer           1  [STACK] const unsigned char 
 21120 ;; Auto vars:     Size  Location     Type
 21121 ;;		None
 21122 ;; Return value:  Size  Location     Type
 21123 ;;                  1  [STACK] _Bool 
 21124 ;; Registers used:
 21125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21126 ;; Tracked objects:
 21127 ;;		On entry : 0/39
 21128 ;;		On exit  : 0/0
 21129 ;;		Unchanged: 0/0
 21130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21135 ;;Total ram usage:        0 bytes
 21136 ;; Hardware stack levels used:    1
 21137 ;; Hardware stack levels required when called:    6
 21138 ;; This function calls:
 21139 ;;		Nothing
 21140 ;; This function is called by:
 21141 ;;		_main
 21142 ;;		_WaitMs
 21143 ;;		_help_button
 21144 ;;		_check_help
 21145 ;;		_set_display_info
 21146 ;; This function uses a reentrant model
 21147 ;;
 21148                           
 21149                           	psect	text81
 21150  0182D2                     __ptext81:
 21151                           	opt callstack 0
 21152  0182D2                     _TimerDone:
 21153                           	opt callstack 23
 21154                           
 21155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21156                           ;incstack = 0
 21157  0182D2  0004               	clrwdt		;# 
 21158                           
 21159                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21160                           ;stkvar	_timer @ sp[(0)+-1]
 21161  0182D4  0EFF               	movlw	-1
 21162  0182D6  50E3               	movf	plusw1,w,c
 21163  0182D8  0D02               	mullw	2
 21164  0182DA  50F3               	movf	243,w,c
 21165  0182DC  0F89               	addlw	low _tickCount
 21166  0182DE  6ED9               	movwf	fsr2l,c
 21167  0182E0  6ADA               	clrf	fsr2h,c
 21168  0182E2  50DE               	movf	postinc2,w,c
 21169  0182E4  10DE               	iorwf	postinc2,w,c
 21170  0182E6  A4D8               	btfss	status,2,c
 21171  0182E8  D002               	goto	l11057
 21172                           
 21173                           ;timers.c: 24:   return 1;
 21174  0182EA  0E01               	movlw	1
 21175  0182EC  D001               	goto	L19
 21176  0182EE                     l11057:
 21177                           
 21178                           ;timers.c: 26:  return 0;
 21179  0182EE  0E00               	movlw	0
 21180  0182F0                     L19:
 21181  0182F0  6E32               	movwf	btemp^0,c
 21182                           
 21183                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21184  0182F2  52E5               	movf	postdec1,f,c
 21185  0182F4  0012               	return		;funcret
 21186  0182F6                     __end_of_TimerDone:
 21187                           	opt callstack 0
 21188                           
 21189 ;; *************** function _StartTimer *****************
 21190 ;; Defined at:
 21191 ;;		line 12 in file "timers.c"
 21192 ;; Parameters:    Size  Location     Type
 21193 ;;  timer           1  [STACK] const unsigned char 
 21194 ;;  count           2  [STACK] const unsigned short 
 21195 ;; Auto vars:     Size  Location     Type
 21196 ;;		None
 21197 ;; Return value:  Size  Location     Type
 21198 ;;                  1  [STACK] void 
 21199 ;; Registers used:
 21200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21201 ;; Tracked objects:
 21202 ;;		On entry : 0/5
 21203 ;;		On exit  : 0/0
 21204 ;;		Unchanged: 0/0
 21205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21210 ;;Total ram usage:        0 bytes
 21211 ;; Hardware stack levels used:    1
 21212 ;; Hardware stack levels required when called:    6
 21213 ;; This function calls:
 21214 ;;		Nothing
 21215 ;; This function is called by:
 21216 ;;		_main
 21217 ;;		_WaitMs
 21218 ;;		_help_button
 21219 ;;		_check_help
 21220 ;; This function uses a reentrant model
 21221 ;;
 21222                           
 21223                           	psect	text82
 21224  017CF6                     __ptext82:
 21225                           	opt callstack 0
 21226  017CF6                     _StartTimer:
 21227                           	opt callstack 21
 21228                           
 21229                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21230                           ;stkvar	_count @ sp[(0)+-3]
 21231                           
 21232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21233                           ;incstack = 0
 21234  017CF6  0EFD               	movlw	-3
 21235  017CF8  006F FF8C  F03C    	movff	plusw1,btemp+10
 21236  017CFE  0EFE               	movlw	-2
 21237  017D00  006F FF8C  F03D    	movff	plusw1,btemp+11
 21238  017D06  90D8               	bcf	status,0,c
 21239  017D08  343C               	rlcf	(btemp+10)^0,w,c
 21240  017D0A  6E3A               	movwf	(btemp+8)^0,c
 21241  017D0C  343D               	rlcf	(btemp+11)^0,w,c
 21242  017D0E  6E3B               	movwf	(btemp+9)^0,c
 21243                           
 21244                           ;stkvar	_timer @ sp[(0)+-1]
 21245  017D10  0EFF               	movlw	-1
 21246  017D12  50E3               	movf	plusw1,w,c
 21247  017D14  0D02               	mullw	2
 21248  017D16  50F3               	movf	243,w,c
 21249  017D18  0F89               	addlw	low _tickCount
 21250  017D1A  6ED9               	movwf	fsr2l,c
 21251  017D1C  6ADA               	clrf	fsr2h,c
 21252  017D1E  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 21253  017D24  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 21254                           
 21255                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21256  017D2A  52E5               	movf	postdec1,f,c
 21257  017D2C  52E5               	movf	postdec1,f,c
 21258  017D2E  52E5               	movf	postdec1,f,c
 21259  017D30  0012               	return		;funcret
 21260  017D32                     __end_of_StartTimer:
 21261                           	opt callstack 0
 21262                           
 21263 ;; *************** function _display_info *****************
 21264 ;; Defined at:
 21265 ;;		line 190 in file "mconfig.c"
 21266 ;; Parameters:    Size  Location     Type
 21267 ;;		None
 21268 ;; Auto vars:     Size  Location     Type
 21269 ;;		None
 21270 ;; Return value:  Size  Location     Type
 21271 ;;                  1  [STACK] enum E16501
 21272 ;; Registers used:
 21273 ;;		btemp
 21274 ;; Tracked objects:
 21275 ;;		On entry : 0/1
 21276 ;;		On exit  : 0/0
 21277 ;;		Unchanged: 0/0
 21278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21283 ;;Total ram usage:        0 bytes
 21284 ;; Hardware stack levels used:    1
 21285 ;; Hardware stack levels required when called:    6
 21286 ;; This function calls:
 21287 ;;		Nothing
 21288 ;; This function is called by:
 21289 ;;		_check_help
 21290 ;; This function uses a reentrant model
 21291 ;;
 21292                           
 21293                           	psect	text83
 21294  0185CE                     __ptext83:
 21295                           	opt callstack 0
 21296  0185CE                     _display_info:
 21297                           	opt callstack 23
 21298                           
 21299                           ;mconfig.c: 192:  return V.response.info;
 21300                           
 21301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21302                           ;incstack = 0
 21303  0185CE  0060  F68C  F032   	movff	_V+163,btemp	;volatile
 21304                           
 21305                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21306  0185D4  0012               	return		;funcret
 21307  0185D6                     __end_of_display_info:
 21308                           	opt callstack 0
 21309                           
 21310 ;; *************** function _display_help *****************
 21311 ;; Defined at:
 21312 ;;		line 195 in file "mconfig.c"
 21313 ;; Parameters:    Size  Location     Type
 21314 ;;		None
 21315 ;; Auto vars:     Size  Location     Type
 21316 ;;		None
 21317 ;; Return value:  Size  Location     Type
 21318 ;;                  1  [STACK] enum E16501
 21319 ;; Registers used:
 21320 ;;		btemp
 21321 ;; Tracked objects:
 21322 ;;		On entry : 3F/1
 21323 ;;		On exit  : 0/0
 21324 ;;		Unchanged: 0/0
 21325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21330 ;;Total ram usage:        0 bytes
 21331 ;; Hardware stack levels used:    1
 21332 ;; Hardware stack levels required when called:    6
 21333 ;; This function calls:
 21334 ;;		Nothing
 21335 ;; This function is called by:
 21336 ;;		_check_help
 21337 ;; This function uses a reentrant model
 21338 ;;
 21339                           
 21340                           	psect	text84
 21341  0185D6                     __ptext84:
 21342                           	opt callstack 0
 21343  0185D6                     _display_help:
 21344                           	opt callstack 23
 21345                           
 21346                           ;mconfig.c: 197:  return V.response.help_temp;
 21347                           
 21348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21349                           ;incstack = 0
 21350  0185D6  0060  F690  F032   	movff	_V+164,btemp	;volatile
 21351                           
 21352                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21353  0185DC  0012               	return		;funcret
 21354  0185DE                     __end_of_display_help:
 21355                           	opt callstack 0
 21356                           
 21357 ;; *************** function _check_adc_scan *****************
 21358 ;; Defined at:
 21359 ;;		line 56 in file "daq.c"
 21360 ;; Parameters:    Size  Location     Type
 21361 ;;		None
 21362 ;; Auto vars:     Size  Location     Type
 21363 ;;		None
 21364 ;; Return value:  Size  Location     Type
 21365 ;;                  1  [STACK] _Bool 
 21366 ;; Registers used:
 21367 ;;		btemp
 21368 ;; Tracked objects:
 21369 ;;		On entry : 0/39
 21370 ;;		On exit  : 0/0
 21371 ;;		Unchanged: 0/0
 21372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21377 ;;Total ram usage:        0 bytes
 21378 ;; Hardware stack levels used:    1
 21379 ;; Hardware stack levels required when called:    6
 21380 ;; This function calls:
 21381 ;;		Nothing
 21382 ;; This function is called by:
 21383 ;;		_main
 21384 ;; This function uses a reentrant model
 21385 ;;
 21386                           
 21387                           	psect	text85
 21388  0185DE                     __ptext85:
 21389                           	opt callstack 0
 21390  0185DE                     _check_adc_scan:
 21391                           	opt callstack 24
 21392                           
 21393                           ;daq.c: 58:  return R.done;
 21394                           
 21395                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21396                           ;incstack = 0
 21397  0185DE  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 21398                           
 21399                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21400  0185E4  0012               	return		;funcret
 21401  0185E6                     __end_of_check_adc_scan:
 21402                           	opt callstack 0
 21403                           
 21404 ;; *************** function _SYSTEM_Initialize *****************
 21405 ;; Defined at:
 21406 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21407 ;; Parameters:    Size  Location     Type
 21408 ;;		None
 21409 ;; Auto vars:     Size  Location     Type
 21410 ;;		None
 21411 ;; Return value:  Size  Location     Type
 21412 ;;                  1  [STACK] void 
 21413 ;; Registers used:
 21414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21415 ;; Tracked objects:
 21416 ;;		On entry : 0/0
 21417 ;;		On exit  : 3F/3C
 21418 ;;		Unchanged: 0/0
 21419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21424 ;;Total ram usage:        0 bytes
 21425 ;; Hardware stack levels used:    1
 21426 ;; Hardware stack levels required when called:    8
 21427 ;; This function calls:
 21428 ;;		_ADCC_Initialize
 21429 ;;		_CLKREF_Initialize
 21430 ;;		_DMA1_Initialize
 21431 ;;		_DMA2_Initialize
 21432 ;;		_EXT_INT_Initialize
 21433 ;;		_FVR_Initialize
 21434 ;;		_INTERRUPT_Initialize
 21435 ;;		_OSCILLATOR_Initialize
 21436 ;;		_PIN_MANAGER_Initialize
 21437 ;;		_PMD_Initialize
 21438 ;;		_PWM8_Initialize
 21439 ;;		_SPI1_Initialize
 21440 ;;		_TMR2_Initialize
 21441 ;;		_TMR5_Initialize
 21442 ;;		_TMR6_Initialize
 21443 ;;		_UART1_Initialize
 21444 ;;		_UART2_Initialize
 21445 ;; This function is called by:
 21446 ;;		_main
 21447 ;; This function uses a reentrant model
 21448 ;;
 21449                           
 21450                           	psect	text86
 21451  017B1E                     __ptext86:
 21452                           	opt callstack 0
 21453  017B1E                     _SYSTEM_Initialize:
 21454                           	opt callstack 22
 21455                           
 21456                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21457                           
 21458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21459                           ;incstack = 0
 21460  017B1E  EC24  F0BB         	call	_INTERRUPT_Initialize	;wreg free
 21461                           
 21462                           ; BSR set to: 57
 21463                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21464  017B22  EC8C  F0C2         	call	_PMD_Initialize	;wreg free
 21465                           
 21466                           ; BSR set to: 57
 21467                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21468  017B26  ECF9  F0B8         	call	_PIN_MANAGER_Initialize	;wreg free
 21469                           
 21470                           ; BSR set to: 58
 21471                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21472  017B2A  EC81  F0C2         	call	_OSCILLATOR_Initialize	;wreg free
 21473                           
 21474                           ; BSR set to: 57
 21475                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21476  017B2E  ECF3  F0C2         	call	_FVR_Initialize	;wreg free
 21477                           
 21478                           ; BSR set to: 62
 21479                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21480  017B32  ECBB  F0BA         	call	_ADCC_Initialize	;wreg free
 21481                           
 21482                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21483  017B36  EC5F  F0C2         	call	_TMR2_Initialize	;wreg free
 21484                           
 21485                           ; BSR set to: 57
 21486                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21487  017B3A  EC76  F0C2         	call	_PWM8_Initialize	;wreg free
 21488                           
 21489                           ; BSR set to: 63
 21490                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21491  017B3E  EC05  F0BF         	call	_EXT_INT_Initialize	;wreg free
 21492                           
 21493                           ; BSR set to: 57
 21494                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21495  017B42  ECC2  F0BF         	call	_TMR6_Initialize	;wreg free
 21496                           
 21497                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21498  017B46  ECB2  F0BD         	call	_TMR5_Initialize	;wreg free
 21499                           
 21500                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21501  017B4A  EC89  F0BB         	call	_UART1_Initialize	;wreg free
 21502                           
 21503                           ; BSR set to: 57
 21504                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21505  017B4E  EC1D  F0BC         	call	_UART2_Initialize	;wreg free
 21506                           
 21507                           ; BSR set to: 57
 21508                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21509  017B52  EC6B  F0C2         	call	_SPI1_Initialize	;wreg free
 21510                           
 21511                           ; BSR set to: 61
 21512                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21513  017B56  EC79  F0BC         	call	_DMA2_Initialize	;wreg free
 21514                           
 21515                           ; BSR set to: 59
 21516                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21517  017B5A  EC86  F0BA         	call	_DMA1_Initialize	;wreg free
 21518                           
 21519                           ; BSR set to: 59
 21520                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21521  017B5E  ECCD  F0C2         	call	_CLKREF_Initialize	;wreg free
 21522                           
 21523                           ; BSR set to: 60
 21524                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21525  017B62  0012               	return		;funcret
 21526  017B64                     __end_of_SYSTEM_Initialize:
 21527                           	opt callstack 0
 21528                           
 21529 ;; *************** function _UART2_Initialize *****************
 21530 ;; Defined at:
 21531 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21532 ;; Parameters:    Size  Location     Type
 21533 ;;		None
 21534 ;; Auto vars:     Size  Location     Type
 21535 ;;		None
 21536 ;; Return value:  Size  Location     Type
 21537 ;;                  1  [STACK] void 
 21538 ;; Registers used:
 21539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21540 ;; Tracked objects:
 21541 ;;		On entry : 3F/39
 21542 ;;		On exit  : 3F/39
 21543 ;;		Unchanged: 0/0
 21544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21549 ;;Total ram usage:        0 bytes
 21550 ;; Hardware stack levels used:    1
 21551 ;; Hardware stack levels required when called:    7
 21552 ;; This function calls:
 21553 ;;		_UART2_SetRxInterruptHandler
 21554 ;;		_UART2_SetTxInterruptHandler
 21555 ;; This function is called by:
 21556 ;;		_SYSTEM_Initialize
 21557 ;; This function uses a reentrant model
 21558 ;;
 21559                           
 21560                           	psect	text87
 21561  01783A                     __ptext87:
 21562                           	opt callstack 0
 21563  01783A                     _UART2_Initialize:
 21564                           	opt callstack 22
 21565                           
 21566                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21567                           
 21568                           ; BSR set to: 60
 21569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21570                           ;incstack = 0
 21571  01783A  0139               	movlb	57	; () banked
 21572  01783C  9596               	bcf	150,2,b	;volatile
 21573                           
 21574                           ; BSR set to: 57
 21575                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21576  01783E  0E1A               	movlw	low _UART2_Receive_ISR
 21577  017840  6EE6               	movwf	postinc1,c
 21578  017842  0E84               	movlw	high _UART2_Receive_ISR
 21579  017844  6EE6               	movwf	postinc1,c
 21580  017846  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21581  017848  6EE6               	movwf	postinc1,c
 21582  01784A  EC51  F0C0         	call	_UART2_SetRxInterruptHandler	;wreg free
 21583                           
 21584                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21585  01784E  0139               	movlb	57	; () banked
 21586  017850  9796               	bcf	150,3,b	;volatile
 21587                           
 21588                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21589  017852  0E58               	movlw	low _UART2_Transmit_ISR
 21590  017854  6EE6               	movwf	postinc1,c
 21591  017856  0E7F               	movlw	high _UART2_Transmit_ISR
 21592  017858  6EE6               	movwf	postinc1,c
 21593  01785A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21594  01785C  6EE6               	movwf	postinc1,c
 21595  01785E  EC3D  F0C0         	call	_UART2_SetTxInterruptHandler	;wreg free
 21596                           
 21597                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21598  017862  013D               	movlb	61	; () banked
 21599  017864  6BD4               	clrf	212,b	;volatile
 21600                           
 21601                           ; BSR set to: 61
 21602                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21603  017866  6BD6               	clrf	214,b	;volatile
 21604                           
 21605                           ; BSR set to: 61
 21606                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21607  017868  6BD8               	clrf	216,b	;volatile
 21608                           
 21609                           ; BSR set to: 61
 21610                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21611  01786A  0EB0               	movlw	176
 21612  01786C  6FDA               	movwf	218,b	;volatile
 21613                           
 21614                           ; BSR set to: 61
 21615                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21616  01786E  0E80               	movlw	128
 21617  017870  6FDB               	movwf	219,b	;volatile
 21618                           
 21619                           ; BSR set to: 61
 21620                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21621  017872  6BDC               	clrf	220,b	;volatile
 21622                           
 21623                           ; BSR set to: 61
 21624                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21625  017874  0E82               	movlw	130
 21626  017876  6FDD               	movwf	221,b	;volatile
 21627                           
 21628                           ; BSR set to: 61
 21629                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21630  017878  0E06               	movlw	6
 21631  01787A  6FDE               	movwf	222,b	;volatile
 21632                           
 21633                           ; BSR set to: 61
 21634                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21635  01787C  6BDF               	clrf	223,b	;volatile
 21636                           
 21637                           ; BSR set to: 61
 21638                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21639  01787E  6BE0               	clrf	224,b	;volatile
 21640                           
 21641                           ; BSR set to: 61
 21642                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21643  017880  6BE1               	clrf	225,b	;volatile
 21644                           
 21645                           ; BSR set to: 61
 21646                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21647  017882  6BE2               	clrf	226,b	;volatile
 21648                           
 21649                           ; BSR set to: 61
 21650                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21651  017884  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21652                           
 21653                           ; BSR set to: 61
 21654                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21655  017886  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21656                           
 21657                           ; BSR set to: 61
 21658                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21659  017888  0E40               	movlw	64
 21660  01788A  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21661                           
 21662                           ; BSR set to: 61
 21663                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21664  01788C  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21665                           
 21666                           ; BSR set to: 61
 21667                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21668  01788E  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21669                           
 21670                           ; BSR set to: 61
 21671                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21672  017890  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21673                           
 21674                           ; BSR set to: 61
 21675                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21676  017892  0139               	movlb	57	; () banked
 21677  017894  8596               	bsf	150,2,b	;volatile
 21678                           
 21679                           ; BSR set to: 57
 21680                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21681  017896  0012               	return		;funcret
 21682  017898                     __end_of_UART2_Initialize:
 21683                           	opt callstack 0
 21684                           
 21685 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21686 ;; Defined at:
 21687 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21688 ;; Parameters:    Size  Location     Type
 21689 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21690 ;;		 -> UART2_Transmit_ISR(1), 
 21691 ;; Auto vars:     Size  Location     Type
 21692 ;;		None
 21693 ;; Return value:  Size  Location     Type
 21694 ;;                  1  [STACK] void 
 21695 ;; Registers used:
 21696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21697 ;; Tracked objects:
 21698 ;;		On entry : 3F/39
 21699 ;;		On exit  : 0/0
 21700 ;;		Unchanged: 0/0
 21701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21706 ;;Total ram usage:        0 bytes
 21707 ;; Hardware stack levels used:    1
 21708 ;; Hardware stack levels required when called:    6
 21709 ;; This function calls:
 21710 ;;		Nothing
 21711 ;; This function is called by:
 21712 ;;		_UART2_Initialize
 21713 ;; This function uses a reentrant model
 21714 ;;
 21715                           
 21716                           	psect	text88
 21717  01807A                     __ptext88:
 21718                           	opt callstack 0
 21719  01807A                     _UART2_SetTxInterruptHandler:
 21720                           	opt callstack 22
 21721                           
 21722                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21723                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21724                           
 21725                           ; BSR set to: 57
 21726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21727                           ;incstack = 0
 21728  01807A  50E1               	movf	fsr1l,w,c
 21729  01807C  0FFD               	addlw	-3
 21730  01807E  6ED9               	movwf	fsr2l,c
 21731  018080  50E2               	movf	fsr1h,w,c
 21732  018082  6EDA               	movwf	fsr2h,c
 21733  018084  0EFF               	movlw	255
 21734  018086  22DA               	addwfc	fsr2h,f,c
 21735  018088  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21736  01808E  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21737  018094  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21738                           
 21739                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21740  01809A  52E5               	movf	postdec1,f,c
 21741  01809C  52E5               	movf	postdec1,f,c
 21742  01809E  52E5               	movf	postdec1,f,c
 21743  0180A0  0012               	return		;funcret
 21744  0180A2                     __end_of_UART2_SetTxInterruptHandler:
 21745                           	opt callstack 0
 21746                           
 21747 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21748 ;; Defined at:
 21749 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21750 ;; Parameters:    Size  Location     Type
 21751 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21752 ;;		 -> UART2_Receive_ISR(1), 
 21753 ;; Auto vars:     Size  Location     Type
 21754 ;;		None
 21755 ;; Return value:  Size  Location     Type
 21756 ;;                  1  [STACK] void 
 21757 ;; Registers used:
 21758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21759 ;; Tracked objects:
 21760 ;;		On entry : 3F/39
 21761 ;;		On exit  : 0/0
 21762 ;;		Unchanged: 0/0
 21763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21768 ;;Total ram usage:        0 bytes
 21769 ;; Hardware stack levels used:    1
 21770 ;; Hardware stack levels required when called:    6
 21771 ;; This function calls:
 21772 ;;		Nothing
 21773 ;; This function is called by:
 21774 ;;		_UART2_Initialize
 21775 ;; This function uses a reentrant model
 21776 ;;
 21777                           
 21778                           	psect	text89
 21779  0180A2                     __ptext89:
 21780                           	opt callstack 0
 21781  0180A2                     _UART2_SetRxInterruptHandler:
 21782                           	opt callstack 22
 21783                           
 21784                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21785                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21786                           
 21787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21788                           ;incstack = 0
 21789  0180A2  50E1               	movf	fsr1l,w,c
 21790  0180A4  0FFD               	addlw	-3
 21791  0180A6  6ED9               	movwf	fsr2l,c
 21792  0180A8  50E2               	movf	fsr1h,w,c
 21793  0180AA  6EDA               	movwf	fsr2h,c
 21794  0180AC  0EFF               	movlw	255
 21795  0180AE  22DA               	addwfc	fsr2h,f,c
 21796  0180B0  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 21797  0180B6  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 21798  0180BC  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 21799                           
 21800                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21801  0180C2  52E5               	movf	postdec1,f,c
 21802  0180C4  52E5               	movf	postdec1,f,c
 21803  0180C6  52E5               	movf	postdec1,f,c
 21804  0180C8  0012               	return		;funcret
 21805  0180CA                     __end_of_UART2_SetRxInterruptHandler:
 21806                           	opt callstack 0
 21807                           
 21808 ;; *************** function _UART1_Initialize *****************
 21809 ;; Defined at:
 21810 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21811 ;; Parameters:    Size  Location     Type
 21812 ;;		None
 21813 ;; Auto vars:     Size  Location     Type
 21814 ;;		None
 21815 ;; Return value:  Size  Location     Type
 21816 ;;                  1  [STACK] void 
 21817 ;; Registers used:
 21818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21819 ;; Tracked objects:
 21820 ;;		On entry : 0/39
 21821 ;;		On exit  : 3F/39
 21822 ;;		Unchanged: 0/0
 21823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21828 ;;Total ram usage:        0 bytes
 21829 ;; Hardware stack levels used:    1
 21830 ;; Hardware stack levels required when called:    7
 21831 ;; This function calls:
 21832 ;;		_UART1_SetRxInterruptHandler
 21833 ;;		_UART1_SetTxInterruptHandler
 21834 ;; This function is called by:
 21835 ;;		_SYSTEM_Initialize
 21836 ;; This function uses a reentrant model
 21837 ;;
 21838                           
 21839                           	psect	text90
 21840  017712                     __ptext90:
 21841                           	opt callstack 0
 21842  017712                     _UART1_Initialize:
 21843                           	opt callstack 22
 21844                           
 21845                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21846                           
 21847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21848                           ;incstack = 0
 21849  017712  0139               	movlb	57	; () banked
 21850  017714  9793               	bcf	147,3,b	;volatile
 21851                           
 21852                           ; BSR set to: 57
 21853                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21854  017716  0EFC               	movlw	low _UART1_Receive_ISR
 21855  017718  6EE6               	movwf	postinc1,c
 21856  01771A  0E83               	movlw	high _UART1_Receive_ISR
 21857  01771C  6EE6               	movwf	postinc1,c
 21858  01771E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21859  017720  6EE6               	movwf	postinc1,c
 21860  017722  EC79  F0C0         	call	_UART1_SetRxInterruptHandler	;wreg free
 21861                           
 21862                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21863  017726  0139               	movlb	57	; () banked
 21864  017728  9993               	bcf	147,4,b	;volatile
 21865                           
 21866                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21867  01772A  0E2C               	movlw	low _UART1_Transmit_ISR
 21868  01772C  6EE6               	movwf	postinc1,c
 21869  01772E  0E7F               	movlw	high _UART1_Transmit_ISR
 21870  017730  6EE6               	movwf	postinc1,c
 21871  017732  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21872  017734  6EE6               	movwf	postinc1,c
 21873  017736  EC65  F0C0         	call	_UART1_SetTxInterruptHandler	;wreg free
 21874                           
 21875                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21876  01773A  013D               	movlb	61	; () banked
 21877  01773C  6BEC               	clrf	236,b	;volatile
 21878                           
 21879                           ; BSR set to: 61
 21880                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21881  01773E  6BED               	clrf	237,b	;volatile
 21882                           
 21883                           ; BSR set to: 61
 21884                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21885  017740  6BEE               	clrf	238,b	;volatile
 21886                           
 21887                           ; BSR set to: 61
 21888                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21889  017742  6BEF               	clrf	239,b	;volatile
 21890                           
 21891                           ; BSR set to: 61
 21892                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21893  017744  6BF0               	clrf	240,b	;volatile
 21894                           
 21895                           ; BSR set to: 61
 21896                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21897  017746  6BF1               	clrf	241,b	;volatile
 21898                           
 21899                           ; BSR set to: 61
 21900                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21901  017748  0EB0               	movlw	176
 21902  01774A  6FF2               	movwf	242,b	;volatile
 21903                           
 21904                           ; BSR set to: 61
 21905                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21906  01774C  0E80               	movlw	128
 21907  01774E  6FF3               	movwf	243,b	;volatile
 21908                           
 21909                           ; BSR set to: 61
 21910                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21911  017750  6BF4               	clrf	244,b	;volatile
 21912                           
 21913                           ; BSR set to: 61
 21914                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21915  017752  0E82               	movlw	130
 21916  017754  6FF5               	movwf	245,b	;volatile
 21917                           
 21918                           ; BSR set to: 61
 21919                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21920  017756  0E06               	movlw	6
 21921  017758  6FF6               	movwf	246,b	;volatile
 21922                           
 21923                           ; BSR set to: 61
 21924                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21925  01775A  6BF7               	clrf	247,b	;volatile
 21926                           
 21927                           ; BSR set to: 61
 21928                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21929  01775C  6BF8               	clrf	248,b	;volatile
 21930                           
 21931                           ; BSR set to: 61
 21932                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21933  01775E  6BF9               	clrf	249,b	;volatile
 21934                           
 21935                           ; BSR set to: 61
 21936                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21937  017760  6BFA               	clrf	250,b	;volatile
 21938                           
 21939                           ; BSR set to: 61
 21940                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21941  017762  6A31               	clrf	_uart1TxHead^0,c	;volatile
 21942                           
 21943                           ; BSR set to: 61
 21944                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21945  017764  6A30               	clrf	_uart1TxTail^0,c	;volatile
 21946                           
 21947                           ; BSR set to: 61
 21948                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21949  017766  0E40               	movlw	64
 21950  017768  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21951                           
 21952                           ; BSR set to: 61
 21953                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21954  01776A  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 21955                           
 21956                           ; BSR set to: 61
 21957                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21958  01776C  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 21959                           
 21960                           ; BSR set to: 61
 21961                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21962  01776E  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 21963                           
 21964                           ; BSR set to: 61
 21965                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21966  017770  0139               	movlb	57	; () banked
 21967  017772  8793               	bsf	147,3,b	;volatile
 21968                           
 21969                           ; BSR set to: 57
 21970                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21971  017774  0012               	return		;funcret
 21972  017776                     __end_of_UART1_Initialize:
 21973                           	opt callstack 0
 21974                           
 21975 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21976 ;; Defined at:
 21977 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21978 ;; Parameters:    Size  Location     Type
 21979 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21980 ;;		 -> UART1_Transmit_ISR(1), 
 21981 ;; Auto vars:     Size  Location     Type
 21982 ;;		None
 21983 ;; Return value:  Size  Location     Type
 21984 ;;                  1  [STACK] void 
 21985 ;; Registers used:
 21986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21987 ;; Tracked objects:
 21988 ;;		On entry : 3F/39
 21989 ;;		On exit  : 0/0
 21990 ;;		Unchanged: 0/0
 21991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21996 ;;Total ram usage:        0 bytes
 21997 ;; Hardware stack levels used:    1
 21998 ;; Hardware stack levels required when called:    6
 21999 ;; This function calls:
 22000 ;;		Nothing
 22001 ;; This function is called by:
 22002 ;;		_UART1_Initialize
 22003 ;; This function uses a reentrant model
 22004 ;;
 22005                           
 22006                           	psect	text91
 22007  0180CA                     __ptext91:
 22008                           	opt callstack 0
 22009  0180CA                     _UART1_SetTxInterruptHandler:
 22010                           	opt callstack 22
 22011                           
 22012                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22013                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22014                           
 22015                           ; BSR set to: 57
 22016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22017                           ;incstack = 0
 22018  0180CA  50E1               	movf	fsr1l,w,c
 22019  0180CC  0FFD               	addlw	-3
 22020  0180CE  6ED9               	movwf	fsr2l,c
 22021  0180D0  50E2               	movf	fsr1h,w,c
 22022  0180D2  6EDA               	movwf	fsr2h,c
 22023  0180D4  0EFF               	movlw	255
 22024  0180D6  22DA               	addwfc	fsr2h,f,c
 22025  0180D8  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22026  0180DE  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22027  0180E4  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22028                           
 22029                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22030  0180EA  52E5               	movf	postdec1,f,c
 22031  0180EC  52E5               	movf	postdec1,f,c
 22032  0180EE  52E5               	movf	postdec1,f,c
 22033  0180F0  0012               	return		;funcret
 22034  0180F2                     __end_of_UART1_SetTxInterruptHandler:
 22035                           	opt callstack 0
 22036                           
 22037 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22038 ;; Defined at:
 22039 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22040 ;; Parameters:    Size  Location     Type
 22041 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22042 ;;		 -> UART1_Receive_ISR(1), 
 22043 ;; Auto vars:     Size  Location     Type
 22044 ;;		None
 22045 ;; Return value:  Size  Location     Type
 22046 ;;                  1  [STACK] void 
 22047 ;; Registers used:
 22048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22049 ;; Tracked objects:
 22050 ;;		On entry : 3F/39
 22051 ;;		On exit  : 0/0
 22052 ;;		Unchanged: 0/0
 22053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22058 ;;Total ram usage:        0 bytes
 22059 ;; Hardware stack levels used:    1
 22060 ;; Hardware stack levels required when called:    6
 22061 ;; This function calls:
 22062 ;;		Nothing
 22063 ;; This function is called by:
 22064 ;;		_UART1_Initialize
 22065 ;; This function uses a reentrant model
 22066 ;;
 22067                           
 22068                           	psect	text92
 22069  0180F2                     __ptext92:
 22070                           	opt callstack 0
 22071  0180F2                     _UART1_SetRxInterruptHandler:
 22072                           	opt callstack 22
 22073                           
 22074                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22075                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22076                           
 22077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22078                           ;incstack = 0
 22079  0180F2  50E1               	movf	fsr1l,w,c
 22080  0180F4  0FFD               	addlw	-3
 22081  0180F6  6ED9               	movwf	fsr2l,c
 22082  0180F8  50E2               	movf	fsr1h,w,c
 22083  0180FA  6EDA               	movwf	fsr2h,c
 22084  0180FC  0EFF               	movlw	255
 22085  0180FE  22DA               	addwfc	fsr2h,f,c
 22086  018100  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22087  018106  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22088  01810C  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22089                           
 22090                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22091  018112  52E5               	movf	postdec1,f,c
 22092  018114  52E5               	movf	postdec1,f,c
 22093  018116  52E5               	movf	postdec1,f,c
 22094  018118  0012               	return		;funcret
 22095  01811A                     __end_of_UART1_SetRxInterruptHandler:
 22096                           	opt callstack 0
 22097                           
 22098 ;; *************** function _TMR6_Initialize *****************
 22099 ;; Defined at:
 22100 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22101 ;; Parameters:    Size  Location     Type
 22102 ;;		None
 22103 ;; Auto vars:     Size  Location     Type
 22104 ;;		None
 22105 ;; Return value:  Size  Location     Type
 22106 ;;                  1  [STACK] void 
 22107 ;; Registers used:
 22108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22109 ;; Tracked objects:
 22110 ;;		On entry : 3F/39
 22111 ;;		On exit  : 0/0
 22112 ;;		Unchanged: 0/0
 22113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22118 ;;Total ram usage:        0 bytes
 22119 ;; Hardware stack levels used:    1
 22120 ;; Hardware stack levels required when called:    7
 22121 ;; This function calls:
 22122 ;;		_TMR6_SetInterruptHandler
 22123 ;; This function is called by:
 22124 ;;		_SYSTEM_Initialize
 22125 ;; This function uses a reentrant model
 22126 ;;
 22127                           
 22128                           	psect	text93
 22129  017F84                     __ptext93:
 22130                           	opt callstack 0
 22131  017F84                     _TMR6_Initialize:
 22132                           	opt callstack 22
 22133                           
 22134                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22135                           
 22136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22137                           ;incstack = 0
 22138  017F84  0E01               	movlw	1
 22139  017F86  6E96               	movwf	150,c	;volatile
 22140                           
 22141                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22142  017F88  6A95               	clrf	149,c	;volatile
 22143                           
 22144                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22145  017F8A  6A97               	clrf	151,c	;volatile
 22146                           
 22147                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22148  017F8C  0E7C               	movlw	124
 22149  017F8E  6E93               	movwf	147,c	;volatile
 22150                           
 22151                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22152  017F90  6A92               	clrf	146,c	;volatile
 22153                           
 22154                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22155  017F92  0139               	movlb	57	; () banked
 22156  017F94  91A9               	bcf	169,0,b	;volatile
 22157                           
 22158                           ; BSR set to: 57
 22159                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22160  017F96  8199               	bsf	153,0,b	;volatile
 22161                           
 22162                           ; BSR set to: 57
 22163                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22164  017F98  0EAA               	movlw	low _TMR6_DefaultInterruptHandler
 22165  017F9A  6EE6               	movwf	postinc1,c
 22166  017F9C  0E7B               	movlw	high _TMR6_DefaultInterruptHandler
 22167  017F9E  6EE6               	movwf	postinc1,c
 22168  017FA0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22169  017FA2  6EE6               	movwf	postinc1,c
 22170  017FA4  EC8D  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 22171                           
 22172                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22173  017FA8  0EE0               	movlw	224
 22174  017FAA  6E94               	movwf	148,c	;volatile
 22175                           
 22176                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22177  017FAC  0012               	return		;funcret
 22178  017FAE                     __end_of_TMR6_Initialize:
 22179                           	opt callstack 0
 22180                           
 22181 ;; *************** function _TMR6_SetInterruptHandler *****************
 22182 ;; Defined at:
 22183 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22184 ;; Parameters:    Size  Location     Type
 22185 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22186 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22187 ;; Auto vars:     Size  Location     Type
 22188 ;;		None
 22189 ;; Return value:  Size  Location     Type
 22190 ;;                  1  [STACK] void 
 22191 ;; Registers used:
 22192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22193 ;; Tracked objects:
 22194 ;;		On entry : 3F/39
 22195 ;;		On exit  : 0/0
 22196 ;;		Unchanged: 0/0
 22197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22202 ;;Total ram usage:        0 bytes
 22203 ;; Hardware stack levels used:    1
 22204 ;; Hardware stack levels required when called:    6
 22205 ;; This function calls:
 22206 ;;		Nothing
 22207 ;; This function is called by:
 22208 ;;		_TMR6_Initialize
 22209 ;; This function uses a reentrant model
 22210 ;;
 22211                           
 22212                           	psect	text94
 22213  01811A                     __ptext94:
 22214                           	opt callstack 0
 22215  01811A                     _TMR6_SetInterruptHandler:
 22216                           	opt callstack 22
 22217                           
 22218                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22219                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22220                           
 22221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22222                           ;incstack = 0
 22223  01811A  50E1               	movf	fsr1l,w,c
 22224  01811C  0FFD               	addlw	-3
 22225  01811E  6ED9               	movwf	fsr2l,c
 22226  018120  50E2               	movf	fsr1h,w,c
 22227  018122  6EDA               	movwf	fsr2h,c
 22228  018124  0EFF               	movlw	255
 22229  018126  22DA               	addwfc	fsr2h,f,c
 22230  018128  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22231  01812E  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22232  018134  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22233                           
 22234                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22235  01813A  52E5               	movf	postdec1,f,c
 22236  01813C  52E5               	movf	postdec1,f,c
 22237  01813E  52E5               	movf	postdec1,f,c
 22238  018140  0012               	return		;funcret
 22239  018142                     __end_of_TMR6_SetInterruptHandler:
 22240                           	opt callstack 0
 22241                           
 22242 ;; *************** function _TMR5_Initialize *****************
 22243 ;; Defined at:
 22244 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22245 ;; Parameters:    Size  Location     Type
 22246 ;;		None
 22247 ;; Auto vars:     Size  Location     Type
 22248 ;;		None
 22249 ;; Return value:  Size  Location     Type
 22250 ;;                  1  [STACK] void 
 22251 ;; Registers used:
 22252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22253 ;; Tracked objects:
 22254 ;;		On entry : 0/39
 22255 ;;		On exit  : 0/0
 22256 ;;		Unchanged: 0/0
 22257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22262 ;;Total ram usage:        0 bytes
 22263 ;; Hardware stack levels used:    1
 22264 ;; Hardware stack levels required when called:    7
 22265 ;; This function calls:
 22266 ;;		_TMR5_SetInterruptHandler
 22267 ;; This function is called by:
 22268 ;;		_SYSTEM_Initialize
 22269 ;; This function uses a reentrant model
 22270 ;;
 22271                           
 22272                           	psect	text95
 22273  017B64                     __ptext95:
 22274                           	opt callstack 0
 22275  017B64                     _TMR5_Initialize:
 22276                           	opt callstack 22
 22277                           
 22278                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22279                           
 22280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22281                           ;incstack = 0
 22282  017B64  6A9B               	clrf	155,c	;volatile
 22283                           
 22284                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22285  017B66  6A9C               	clrf	156,c	;volatile
 22286                           
 22287                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22288  017B68  0E01               	movlw	1
 22289  017B6A  6E9D               	movwf	157,c	;volatile
 22290                           
 22291                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22292  017B6C  0E63               	movlw	99
 22293  017B6E  6E99               	movwf	153,c	;volatile
 22294                           
 22295                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22296  017B70  0EC0               	movlw	192
 22297  017B72  6E98               	movwf	152,c	;volatile
 22298                           
 22299                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22300  017B74  5098               	movf	152,w,c	;volatile
 22301  017B76  006F FE64  F032    	movff	16281,btemp	;volatile
 22302  017B7C  6A33               	clrf	(btemp+1)^0,c
 22303  017B7E  0060  F0C8  F033   	movff	btemp,btemp+1
 22304  017B84  6A32               	clrf	btemp^0,c
 22305  017B86  1032               	iorwf	btemp^0,w,c
 22306  017B88  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22307  017B8A  5033               	movf	(btemp+1)^0,w,c
 22308  017B8C  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22309                           
 22310                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22311  017B8E  0139               	movlb	57	; () banked
 22312  017B90  9DA8               	bcf	168,6,b	;volatile
 22313                           
 22314                           ; BSR set to: 57
 22315                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22316  017B92  8D98               	bsf	152,6,b	;volatile
 22317                           
 22318                           ; BSR set to: 57
 22319                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22320  017B94  0E0A               	movlw	low _TMR5_DefaultInterruptHandler
 22321  017B96  6EE6               	movwf	postinc1,c
 22322  017B98  0E82               	movlw	high _TMR5_DefaultInterruptHandler
 22323  017B9A  6EE6               	movwf	postinc1,c
 22324  017B9C  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22325  017B9E  6EE6               	movwf	postinc1,c
 22326  017BA0  ECA1  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 22327                           
 22328                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22329  017BA4  0E31               	movlw	49
 22330  017BA6  6E9A               	movwf	154,c	;volatile
 22331                           
 22332                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22333  017BA8  0012               	return		;funcret
 22334  017BAA                     __end_of_TMR5_Initialize:
 22335                           	opt callstack 0
 22336                           
 22337 ;; *************** function _TMR5_SetInterruptHandler *****************
 22338 ;; Defined at:
 22339 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22340 ;; Parameters:    Size  Location     Type
 22341 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22342 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22343 ;; Auto vars:     Size  Location     Type
 22344 ;;		None
 22345 ;; Return value:  Size  Location     Type
 22346 ;;                  1  [STACK] void 
 22347 ;; Registers used:
 22348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22349 ;; Tracked objects:
 22350 ;;		On entry : 3F/39
 22351 ;;		On exit  : 0/0
 22352 ;;		Unchanged: 0/0
 22353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22358 ;;Total ram usage:        0 bytes
 22359 ;; Hardware stack levels used:    1
 22360 ;; Hardware stack levels required when called:    6
 22361 ;; This function calls:
 22362 ;;		Nothing
 22363 ;; This function is called by:
 22364 ;;		_TMR5_Initialize
 22365 ;; This function uses a reentrant model
 22366 ;;
 22367                           
 22368                           	psect	text96
 22369  018142                     __ptext96:
 22370                           	opt callstack 0
 22371  018142                     _TMR5_SetInterruptHandler:
 22372                           	opt callstack 22
 22373                           
 22374                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22375                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22376                           
 22377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22378                           ;incstack = 0
 22379  018142  50E1               	movf	fsr1l,w,c
 22380  018144  0FFD               	addlw	-3
 22381  018146  6ED9               	movwf	fsr2l,c
 22382  018148  50E2               	movf	fsr1h,w,c
 22383  01814A  6EDA               	movwf	fsr2h,c
 22384  01814C  0EFF               	movlw	255
 22385  01814E  22DA               	addwfc	fsr2h,f,c
 22386  018150  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22387  018156  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22388  01815C  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22389                           
 22390                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22391  018162  52E5               	movf	postdec1,f,c
 22392  018164  52E5               	movf	postdec1,f,c
 22393  018166  52E5               	movf	postdec1,f,c
 22394  018168  0012               	return		;funcret
 22395  01816A                     __end_of_TMR5_SetInterruptHandler:
 22396                           	opt callstack 0
 22397                           
 22398 ;; *************** function _TMR2_Initialize *****************
 22399 ;; Defined at:
 22400 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22401 ;; Parameters:    Size  Location     Type
 22402 ;;		None
 22403 ;; Auto vars:     Size  Location     Type
 22404 ;;		None
 22405 ;; Return value:  Size  Location     Type
 22406 ;;                  1  [STACK] void 
 22407 ;; Registers used:
 22408 ;;		wreg, status,2
 22409 ;; Tracked objects:
 22410 ;;		On entry : 0/3E
 22411 ;;		On exit  : 3F/39
 22412 ;;		Unchanged: 0/0
 22413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22418 ;;Total ram usage:        0 bytes
 22419 ;; Hardware stack levels used:    1
 22420 ;; Hardware stack levels required when called:    6
 22421 ;; This function calls:
 22422 ;;		Nothing
 22423 ;; This function is called by:
 22424 ;;		_SYSTEM_Initialize
 22425 ;; This function uses a reentrant model
 22426 ;;
 22427                           
 22428                           	psect	text97
 22429  0184BE                     __ptext97:
 22430                           	opt callstack 0
 22431  0184BE                     _TMR2_Initialize:
 22432                           	opt callstack 23
 22433                           
 22434                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22435                           
 22436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22437                           ;incstack = 0
 22438  0184BE  0E01               	movlw	1
 22439  0184C0  6EAE               	movwf	174,c	;volatile
 22440                           
 22441                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22442  0184C2  6AAD               	clrf	173,c	;volatile
 22443                           
 22444                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22445  0184C4  6AAF               	clrf	175,c	;volatile
 22446                           
 22447                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22448  0184C6  0E63               	movlw	99
 22449  0184C8  6EAB               	movwf	171,c	;volatile
 22450                           
 22451                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22452  0184CA  6AAA               	clrf	170,c	;volatile
 22453                           
 22454                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22455  0184CC  0139               	movlb	57	; () banked
 22456  0184CE  95A4               	bcf	164,2,b	;volatile
 22457                           
 22458                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22459  0184D0  0EC0               	movlw	192
 22460  0184D2  6EAC               	movwf	172,c	;volatile
 22461                           
 22462                           ; BSR set to: 57
 22463                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22464  0184D4  0012               	return		;funcret
 22465  0184D6                     __end_of_TMR2_Initialize:
 22466                           	opt callstack 0
 22467                           
 22468 ;; *************** function _SPI1_Initialize *****************
 22469 ;; Defined at:
 22470 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22471 ;; Parameters:    Size  Location     Type
 22472 ;;		None
 22473 ;; Auto vars:     Size  Location     Type
 22474 ;;		None
 22475 ;; Return value:  Size  Location     Type
 22476 ;;                  1  [STACK] void 
 22477 ;; Registers used:
 22478 ;;		wreg, status,2
 22479 ;; Tracked objects:
 22480 ;;		On entry : 3F/39
 22481 ;;		On exit  : 3F/3D
 22482 ;;		Unchanged: 0/0
 22483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22488 ;;Total ram usage:        0 bytes
 22489 ;; Hardware stack levels used:    1
 22490 ;; Hardware stack levels required when called:    6
 22491 ;; This function calls:
 22492 ;;		Nothing
 22493 ;; This function is called by:
 22494 ;;		_SYSTEM_Initialize
 22495 ;; This function uses a reentrant model
 22496 ;;
 22497                           
 22498                           	psect	text98
 22499  0184D6                     __ptext98:
 22500                           	opt callstack 0
 22501  0184D6                     _SPI1_Initialize:
 22502                           	opt callstack 23
 22503                           
 22504                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22505                           
 22506                           ; BSR set to: 57
 22507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22508                           ;incstack = 0
 22509  0184D6  0E40               	movlw	64
 22510  0184D8  013D               	movlb	61	; () banked
 22511  0184DA  6F15               	movwf	21,b	;volatile
 22512                           
 22513                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22514  0184DC  0E03               	movlw	3
 22515  0184DE  6F16               	movwf	22,b	;volatile
 22516                           
 22517                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22518  0184E0  0E4F               	movlw	79
 22519  0184E2  6F19               	movwf	25,b	;volatile
 22520                           
 22521                           ; BSR set to: 61
 22522                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22523  0184E4  6B1C               	clrf	28,b	;volatile
 22524                           
 22525                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22526  0184E6  0E83               	movlw	131
 22527  0184E8  6F14               	movwf	20,b	;volatile
 22528                           
 22529                           ; BSR set to: 61
 22530                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22531  0184EA  0012               	return		;funcret
 22532  0184EC                     __end_of_SPI1_Initialize:
 22533                           	opt callstack 0
 22534                           
 22535 ;; *************** function _PWM8_Initialize *****************
 22536 ;; Defined at:
 22537 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22538 ;; Parameters:    Size  Location     Type
 22539 ;;		None
 22540 ;; Auto vars:     Size  Location     Type
 22541 ;;		None
 22542 ;; Return value:  Size  Location     Type
 22543 ;;                  1  [STACK] void 
 22544 ;; Registers used:
 22545 ;;		wreg, status,2
 22546 ;; Tracked objects:
 22547 ;;		On entry : 3F/39
 22548 ;;		On exit  : 3F/3F
 22549 ;;		Unchanged: 0/0
 22550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22555 ;;Total ram usage:        0 bytes
 22556 ;; Hardware stack levels used:    1
 22557 ;; Hardware stack levels required when called:    6
 22558 ;; This function calls:
 22559 ;;		Nothing
 22560 ;; This function is called by:
 22561 ;;		_SYSTEM_Initialize
 22562 ;; This function uses a reentrant model
 22563 ;;
 22564                           
 22565                           	psect	text99
 22566  0184EC                     __ptext99:
 22567                           	opt callstack 0
 22568  0184EC                     _PWM8_Initialize:
 22569                           	opt callstack 23
 22570                           
 22571                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22572                           
 22573                           ; BSR set to: 61
 22574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22575                           ;incstack = 0
 22576  0184EC  0E80               	movlw	128
 22577  0184EE  6E62               	movwf	98,c	;volatile
 22578                           
 22579                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22580  0184F0  6A61               	clrf	97,c	;volatile
 22581                           
 22582                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22583  0184F2  0E40               	movlw	64
 22584  0184F4  6E60               	movwf	96,c	;volatile
 22585                           
 22586                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22587  0184F6  013F               	movlb	63	; () banked
 22588  0184F8  515F               	movf	95,w,b	;volatile
 22589  0184FA  0B3F               	andlw	-193
 22590  0184FC  0940               	iorlw	64
 22591  0184FE  6F5F               	movwf	95,b	;volatile
 22592                           
 22593                           ; BSR set to: 63
 22594                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22595  018500  0012               	return		;funcret
 22596  018502                     __end_of_PWM8_Initialize:
 22597                           	opt callstack 0
 22598                           
 22599 ;; *************** function _PMD_Initialize *****************
 22600 ;; Defined at:
 22601 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22602 ;; Parameters:    Size  Location     Type
 22603 ;;		None
 22604 ;; Auto vars:     Size  Location     Type
 22605 ;;		None
 22606 ;; Return value:  Size  Location     Type
 22607 ;;                  1  [STACK] void 
 22608 ;; Registers used:
 22609 ;;		None
 22610 ;; Tracked objects:
 22611 ;;		On entry : 3F/39
 22612 ;;		On exit  : 3F/39
 22613 ;;		Unchanged: 0/0
 22614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22619 ;;Total ram usage:        0 bytes
 22620 ;; Hardware stack levels used:    1
 22621 ;; Hardware stack levels required when called:    6
 22622 ;; This function calls:
 22623 ;;		Nothing
 22624 ;; This function is called by:
 22625 ;;		_SYSTEM_Initialize
 22626 ;; This function uses a reentrant model
 22627 ;;
 22628                           
 22629                           	psect	text100
 22630  018518                     __ptext100:
 22631                           	opt callstack 0
 22632  018518                     _PMD_Initialize:
 22633                           	opt callstack 23
 22634                           
 22635                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22636                           
 22637                           ; BSR set to: 63
 22638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22639                           ;incstack = 0
 22640  018518  0139               	movlb	57	; () banked
 22641  01851A  6BC0               	clrf	192,b	;volatile
 22642                           
 22643                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22644  01851C  6BC1               	clrf	193,b	;volatile
 22645                           
 22646                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22647  01851E  6BC2               	clrf	194,b	;volatile
 22648                           
 22649                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22650  018520  6BC3               	clrf	195,b	;volatile
 22651                           
 22652                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22653  018522  6BC4               	clrf	196,b	;volatile
 22654                           
 22655                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22656  018524  6BC5               	clrf	197,b	;volatile
 22657                           
 22658                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22659  018526  6BC6               	clrf	198,b	;volatile
 22660                           
 22661                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22662  018528  6BC7               	clrf	199,b	;volatile
 22663                           
 22664                           ; BSR set to: 57
 22665                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22666  01852A  0012               	return		;funcret
 22667  01852C                     __end_of_PMD_Initialize:
 22668                           	opt callstack 0
 22669                           
 22670 ;; *************** function _PIN_MANAGER_Initialize *****************
 22671 ;; Defined at:
 22672 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22673 ;; Parameters:    Size  Location     Type
 22674 ;;		None
 22675 ;; Auto vars:     Size  Location     Type
 22676 ;;		None
 22677 ;; Return value:  Size  Location     Type
 22678 ;;                  1  [STACK] void 
 22679 ;; Registers used:
 22680 ;;		wreg, status,2
 22681 ;; Tracked objects:
 22682 ;;		On entry : 3F/39
 22683 ;;		On exit  : 3F/3A
 22684 ;;		Unchanged: 0/0
 22685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22690 ;;Total ram usage:        0 bytes
 22691 ;; Hardware stack levels used:    1
 22692 ;; Hardware stack levels required when called:    6
 22693 ;; This function calls:
 22694 ;;		Nothing
 22695 ;; This function is called by:
 22696 ;;		_SYSTEM_Initialize
 22697 ;; This function uses a reentrant model
 22698 ;;
 22699                           
 22700                           	psect	text101
 22701  0171F2                     __ptext101:
 22702                           	opt callstack 0
 22703  0171F2                     _PIN_MANAGER_Initialize:
 22704                           	opt callstack 23
 22705                           
 22706                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22707                           
 22708                           ; BSR set to: 57
 22709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22710                           ;incstack = 0
 22711  0171F2  0E07               	movlw	7
 22712  0171F4  6EBE               	movwf	190,c	;volatile
 22713                           
 22714                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22715  0171F6  0E80               	movlw	128
 22716  0171F8  6EBD               	movwf	189,c	;volatile
 22717                           
 22718                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22719  0171FA  6ABA               	clrf	186,c	;volatile
 22720                           
 22721                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22722  0171FC  6ABF               	clrf	191,c	;volatile
 22723                           
 22724                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22725  0171FE  6ABB               	clrf	187,c	;volatile
 22726                           
 22727                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22728  017200  0E07               	movlw	7
 22729  017202  6EBC               	movwf	188,c	;volatile
 22730                           
 22731                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22732  017204  6AC6               	clrf	198,c	;volatile
 22733                           
 22734                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22735  017206  0E0F               	movlw	15
 22736  017208  6EC7               	movwf	199,c	;volatile
 22737                           
 22738                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22739  01720A  68C2               	setf	194,c	;volatile
 22740                           
 22741                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22742  01720C  0EBF               	movlw	191
 22743  01720E  6EC3               	movwf	195,c	;volatile
 22744                           
 22745                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22746  017210  0E90               	movlw	144
 22747  017212  6EC4               	movwf	196,c	;volatile
 22748                           
 22749                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22750  017214  0E0C               	movlw	12
 22751  017216  6EC5               	movwf	197,c	;volatile
 22752                           
 22753                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22754  017218  013A               	movlb	58	; () banked
 22755  01721A  6B70               	clrf	112,b	;volatile
 22756                           
 22757                           ; BSR set to: 58
 22758                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22759  01721C  6B60               	clrf	96,b	;volatile
 22760                           
 22761                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22762  01721E  0E3C               	movlw	60
 22763  017220  6F50               	movwf	80,b	;volatile
 22764                           
 22765                           ; BSR set to: 58
 22766                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22767  017222  6B80               	clrf	128,b	;volatile
 22768                           
 22769                           ; BSR set to: 58
 22770                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22771  017224  6B90               	clrf	144,b	;volatile
 22772                           
 22773                           ; BSR set to: 58
 22774                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22775  017226  6940               	setf	64,b	;volatile
 22776                           
 22777                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22778  017228  0E0C               	movlw	12
 22779  01722A  6F71               	movwf	113,b	;volatile
 22780                           
 22781                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22782  01722C  0E0F               	movlw	15
 22783  01722E  6F91               	movwf	145,b	;volatile
 22784                           
 22785                           ; BSR set to: 58
 22786                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22787  017230  6B81               	clrf	129,b	;volatile
 22788                           
 22789                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 22790  017232  0E83               	movlw	131
 22791  017234  6F51               	movwf	81,b	;volatile
 22792                           
 22793                           ; BSR set to: 58
 22794                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22795  017236  6B41               	clrf	65,b	;volatile
 22796                           
 22797                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22798  017238  0E97               	movlw	151
 22799  01723A  6F61               	movwf	97,b	;volatile
 22800                           
 22801                           ; BSR set to: 58
 22802                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22803  01723C  6B82               	clrf	130,b	;volatile
 22804                           
 22805                           ; BSR set to: 58
 22806                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22807  01723E  6B92               	clrf	146,b	;volatile
 22808                           
 22809                           ; BSR set to: 58
 22810                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22811  017240  6B42               	clrf	66,b	;volatile
 22812                           
 22813                           ; BSR set to: 58
 22814                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22815  017242  6B52               	clrf	82,b	;volatile
 22816                           
 22817                           ; BSR set to: 58
 22818                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22819  017244  6B62               	clrf	98,b	;volatile
 22820                           
 22821                           ; BSR set to: 58
 22822                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22823  017246  6B72               	clrf	114,b	;volatile
 22824                           
 22825                           ; BSR set to: 58
 22826                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22827  017248  6943               	setf	67,b	;volatile
 22828                           
 22829                           ; BSR set to: 58
 22830                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22831  01724A  6953               	setf	83,b	;volatile
 22832                           
 22833                           ; BSR set to: 58
 22834                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22835  01724C  6963               	setf	99,b	;volatile
 22836                           
 22837                           ; BSR set to: 58
 22838                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22839  01724E  6973               	setf	115,b	;volatile
 22840                           
 22841                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22842  017250  0E07               	movlw	7
 22843  017252  6F83               	movwf	131,b	;volatile
 22844                           
 22845                           ; BSR set to: 58
 22846                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22847  017254  6993               	setf	147,b	;volatile
 22848                           
 22849                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22850  017256  0E0F               	movlw	15
 22851  017258  6FE8               	movwf	232,b	;volatile
 22852                           
 22853                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22854  01725A  0E13               	movlw	19
 22855  01725C  6FDE               	movwf	222,b	;volatile
 22856                           
 22857                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22858  01725E  0E16               	movlw	22
 22859  017260  6F0E               	movwf	14,b	;volatile
 22860                           
 22861                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22862  017262  0E1E               	movlw	30
 22863  017264  6F13               	movwf	19,b	;volatile
 22864                           
 22865                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22866  017266  0E08               	movlw	8
 22867  017268  6FC0               	movwf	192,b	;volatile
 22868                           
 22869                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22870  01726A  0E10               	movlw	16
 22871  01726C  6F19               	movwf	25,b	;volatile
 22872                           
 22873                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22874  01726E  0E09               	movlw	9
 22875  017270  6FC1               	movwf	193,b	;volatile
 22876                           
 22877                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22878  017272  0E1F               	movlw	31
 22879  017274  6F15               	movwf	21,b	;volatile
 22880                           
 22881                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22882  017276  0E13               	movlw	19
 22883  017278  6F16               	movwf	22,b	;volatile
 22884                           
 22885                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22886  01727A  0E17               	movlw	23
 22887  01727C  6FE5               	movwf	229,b	;volatile
 22888                           
 22889                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22890  01727E  0E14               	movlw	20
 22891  017280  6FDF               	movwf	223,b	;volatile
 22892                           
 22893                           ; BSR set to: 58
 22894                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22895  017282  0012               	return		;funcret
 22896  017284                     __end_of_PIN_MANAGER_Initialize:
 22897                           	opt callstack 0
 22898                           
 22899 ;; *************** function _OSCILLATOR_Initialize *****************
 22900 ;; Defined at:
 22901 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22902 ;; Parameters:    Size  Location     Type
 22903 ;;		None
 22904 ;; Auto vars:     Size  Location     Type
 22905 ;;		None
 22906 ;; Return value:  Size  Location     Type
 22907 ;;                  1  [STACK] void 
 22908 ;; Registers used:
 22909 ;;		wreg, status,2
 22910 ;; Tracked objects:
 22911 ;;		On entry : 3F/3A
 22912 ;;		On exit  : 3F/39
 22913 ;;		Unchanged: 0/0
 22914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22919 ;;Total ram usage:        0 bytes
 22920 ;; Hardware stack levels used:    1
 22921 ;; Hardware stack levels required when called:    6
 22922 ;; This function calls:
 22923 ;;		Nothing
 22924 ;; This function is called by:
 22925 ;;		_SYSTEM_Initialize
 22926 ;; This function uses a reentrant model
 22927 ;;
 22928                           
 22929                           	psect	text102
 22930  018502                     __ptext102:
 22931                           	opt callstack 0
 22932  018502                     _OSCILLATOR_Initialize:
 22933                           	opt callstack 23
 22934                           
 22935                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22936                           
 22937                           ; BSR set to: 58
 22938                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22939                           ;incstack = 0
 22940  018502  0E20               	movlw	32
 22941  018504  0139               	movlb	57	; () banked
 22942  018506  6FD9               	movwf	217,b	;volatile
 22943                           
 22944                           ; BSR set to: 57
 22945                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22946  018508  6BDB               	clrf	219,b	;volatile
 22947                           
 22948                           ; BSR set to: 57
 22949                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22950  01850A  6BDD               	clrf	221,b	;volatile
 22951                           
 22952                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22953  01850C  0E02               	movlw	2
 22954  01850E  6FDF               	movwf	223,b	;volatile
 22955                           
 22956                           ; BSR set to: 57
 22957                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22958  018510  6BDE               	clrf	222,b	;volatile
 22959  018512                     l171:
 22960                           
 22961                           ; BSR set to: 57
 22962                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22963  018512  B1DC               	btfsc	220,0,b	;volatile
 22964  018514  0012               	return	
 22965  018516  D7FD               	goto	l171
 22966  018518                     __end_of_OSCILLATOR_Initialize:
 22967                           	opt callstack 0
 22968                           
 22969 ;; *************** function _INTERRUPT_Initialize *****************
 22970 ;; Defined at:
 22971 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;		None
 22974 ;; Auto vars:     Size  Location     Type
 22975 ;;  state           1  [STACK] _Bool 
 22976 ;; Return value:  Size  Location     Type
 22977 ;;                  1  [STACK] void 
 22978 ;; Registers used:
 22979 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22980 ;; Tracked objects:
 22981 ;;		On entry : 0/0
 22982 ;;		On exit  : 3F/39
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22989 ;;Total ram usage:        0 bytes
 22990 ;; Hardware stack levels used:    1
 22991 ;; Hardware stack levels required when called:    6
 22992 ;; This function calls:
 22993 ;;		Nothing
 22994 ;; This function is called by:
 22995 ;;		_SYSTEM_Initialize
 22996 ;; This function uses a reentrant model
 22997 ;;
 22998                           
 22999                           	psect	text103
 23000  017648                     __ptext103:
 23001                           	opt callstack 0
 23002  017648                     _INTERRUPT_Initialize:
 23003                           	opt callstack 0
 23004                           
 23005                           ; BSR set to: 57
 23006                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23007  017648  52E6               	movf	postinc1,f,c
 23008                           
 23009                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23010                           
 23011                           ;incstack = 0
 23012  01764A  8AD2               	bsf	210,5,c	;volatile
 23013                           
 23014                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23015  01764C  AED2               	btfss	16338,7,c	;volatile
 23016  01764E  D003               	goto	u12300
 23017  017650  6A3D               	clrf	(btemp+11)^0,c
 23018  017652  2A3D               	incf	(btemp+11)^0,f,c
 23019  017654  D001               	goto	u12318
 23020  017656                     u12300:
 23021  017656  6A3D               	clrf	(btemp+11)^0,c
 23022  017658                     u12318:
 23023                           
 23024                           ;stkvar	_state @ sp[(-1)+0]
 23025  017658  0EFF               	movlw	-1
 23026  01765A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23027                           
 23028                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23029  017660  9ED2               	bcf	16338,7,c	;volatile
 23030                           
 23031                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23032  017662  0E55               	movlw	85
 23033  017664  6ED4               	movwf	212,c	;volatile
 23034                           
 23035                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23036  017666  0EAA               	movlw	170
 23037  017668  6ED4               	movwf	212,c	;volatile
 23038                           
 23039                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23040  01766A  90D4               	bcf	212,0,c	;volatile
 23041                           
 23042                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23043  01766C  0138               	movlb	56	; () banked
 23044  01766E  6B9F               	clrf	159,b	;volatile
 23045                           
 23046                           ; BSR set to: 56
 23047                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23048  017670  6B9E               	clrf	158,b	;volatile
 23049                           
 23050                           ; BSR set to: 56
 23051                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23052  017672  0E08               	movlw	8
 23053  017674  6F9D               	movwf	157,b	;volatile
 23054                           
 23055                           ; BSR set to: 56
 23056                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23057  017676  0E55               	movlw	85
 23058  017678  6ED4               	movwf	212,c	;volatile
 23059                           
 23060                           ; BSR set to: 56
 23061                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23062  01767A  0EAA               	movlw	170
 23063  01767C  6ED4               	movwf	212,c	;volatile
 23064                           
 23065                           ; BSR set to: 56
 23066                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23067  01767E  80D4               	bsf	212,0,c	;volatile
 23068                           
 23069                           ; BSR set to: 56
 23070                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23071                           ;stkvar	_state @ sp[(-1)+0]
 23072  017680  0EFF               	movlw	-1
 23073  017682  B0E3               	btfsc	plusw1,0,c
 23074  017684  D002               	bra	u12325
 23075  017686  9ED2               	bcf	16338,7,c	;volatile
 23076  017688  D001               	bra	u12326
 23077  01768A                     u12325:
 23078  01768A  8ED2               	bsf	16338,7,c	;volatile
 23079  01768C                     u12326:
 23080                           
 23081                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23082  01768C  0139               	movlb	57	; () banked
 23083  01768E  8782               	bsf	130,3,b	;volatile
 23084                           
 23085                           ; BSR set to: 57
 23086                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23087  017690  8382               	bsf	130,1,b	;volatile
 23088                           
 23089                           ; BSR set to: 57
 23090                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23091  017692  8182               	bsf	130,0,b	;volatile
 23092                           
 23093                           ; BSR set to: 57
 23094                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23095  017694  8582               	bsf	130,2,b	;volatile
 23096                           
 23097                           ; BSR set to: 57
 23098                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23099  017696  8786               	bsf	134,3,b	;volatile
 23100                           
 23101                           ; BSR set to: 57
 23102                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23103  017698  8586               	bsf	134,2,b	;volatile
 23104                           
 23105                           ; BSR set to: 57
 23106                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23107  01769A  8983               	bsf	131,4,b	;volatile
 23108                           
 23109                           ; BSR set to: 57
 23110                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23111  01769C  8783               	bsf	131,3,b	;volatile
 23112                           
 23113                           ; BSR set to: 57
 23114                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23115  01769E  8181               	bsf	129,0,b	;volatile
 23116                           
 23117                           ; BSR set to: 57
 23118                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23119  0176A0  9185               	bcf	133,0,b	;volatile
 23120                           
 23121                           ; BSR set to: 57
 23122                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23123  0176A2  8189               	bsf	137,0,b	;volatile
 23124                           
 23125                           ; BSR set to: 57
 23126                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23127  0176A4  9D88               	bcf	136,6,b	;volatile
 23128                           
 23129                           ; BSR set to: 57
 23130                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23131  0176A6  8581               	bsf	129,2,b	;volatile
 23132                           
 23133                           ; BSR set to: 57
 23134                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23135  0176A8  8781               	bsf	129,3,b	;volatile
 23136                           
 23137                           ; BSR set to: 57
 23138                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23139  0176AA  52E5               	movf	postdec1,f,c
 23140  0176AC  0012               	return		;funcret
 23141  0176AE                     __end_of_INTERRUPT_Initialize:
 23142                           	opt callstack 0
 23143                           
 23144 ;; *************** function _FVR_Initialize *****************
 23145 ;; Defined at:
 23146 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23147 ;; Parameters:    Size  Location     Type
 23148 ;;		None
 23149 ;; Auto vars:     Size  Location     Type
 23150 ;;		None
 23151 ;; Return value:  Size  Location     Type
 23152 ;;                  1  [STACK] void 
 23153 ;; Registers used:
 23154 ;;		wreg, status,2
 23155 ;; Tracked objects:
 23156 ;;		On entry : 3F/39
 23157 ;;		On exit  : 3F/3E
 23158 ;;		Unchanged: 0/0
 23159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23164 ;;Total ram usage:        0 bytes
 23165 ;; Hardware stack levels used:    1
 23166 ;; Hardware stack levels required when called:    6
 23167 ;; This function calls:
 23168 ;;		Nothing
 23169 ;; This function is called by:
 23170 ;;		_SYSTEM_Initialize
 23171 ;; This function uses a reentrant model
 23172 ;;
 23173                           
 23174                           	psect	text104
 23175  0185E6                     __ptext104:
 23176                           	opt callstack 0
 23177  0185E6                     _FVR_Initialize:
 23178                           	opt callstack 23
 23179                           
 23180                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23181                           
 23182                           ; BSR set to: 57
 23183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23184                           ;incstack = 0
 23185  0185E6  0EAF               	movlw	175
 23186  0185E8  013E               	movlb	62	; () banked
 23187  0185EA  6FC1               	movwf	193,b	;volatile
 23188                           
 23189                           ; BSR set to: 62
 23190                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23191  0185EC  0012               	return		;funcret
 23192  0185EE                     __end_of_FVR_Initialize:
 23193                           	opt callstack 0
 23194                           
 23195 ;; *************** function _EXT_INT_Initialize *****************
 23196 ;; Defined at:
 23197 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23198 ;; Parameters:    Size  Location     Type
 23199 ;;		None
 23200 ;; Auto vars:     Size  Location     Type
 23201 ;;		None
 23202 ;; Return value:  Size  Location     Type
 23203 ;;                  1  [STACK] void 
 23204 ;; Registers used:
 23205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23206 ;; Tracked objects:
 23207 ;;		On entry : 3F/3F
 23208 ;;		On exit  : 3F/39
 23209 ;;		Unchanged: 0/0
 23210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23215 ;;Total ram usage:        0 bytes
 23216 ;; Hardware stack levels used:    1
 23217 ;; Hardware stack levels required when called:    7
 23218 ;; This function calls:
 23219 ;;		_INT0_SetInterruptHandler
 23220 ;;		_INT1_SetInterruptHandler
 23221 ;; This function is called by:
 23222 ;;		_SYSTEM_Initialize
 23223 ;; This function uses a reentrant model
 23224 ;;
 23225                           
 23226                           	psect	text105
 23227  017E0A                     __ptext105:
 23228                           	opt callstack 0
 23229  017E0A                     _EXT_INT_Initialize:
 23230                           	opt callstack 22
 23231                           
 23232                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23233                           
 23234                           ; BSR set to: 62
 23235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23236                           ;incstack = 0
 23237  017E0A  0139               	movlb	57	; () banked
 23238  017E0C  91A1               	bcf	161,0,b	;volatile
 23239                           
 23240                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23241  017E0E  90D2               	bcf	210,0,c	;volatile
 23242                           
 23243                           ; BSR set to: 57
 23244                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23245  017E10  0E08               	movlw	low _INT0_DefaultInterruptHandler
 23246  017E12  6EE6               	movwf	postinc1,c
 23247  017E14  0E86               	movlw	high _INT0_DefaultInterruptHandler
 23248  017E16  6EE6               	movwf	postinc1,c
 23249  017E18  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23250  017E1A  6EE6               	movwf	postinc1,c
 23251  017E1C  ECC9  F0C0         	call	_INT0_SetInterruptHandler	;wreg free
 23252                           
 23253                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23254  017E20  0139               	movlb	57	; () banked
 23255  017E22  8191               	bsf	145,0,b	;volatile
 23256                           
 23257                           ; BSR set to: 57
 23258                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23259  017E24  91A5               	bcf	165,0,b	;volatile
 23260                           
 23261                           ; BSR set to: 57
 23262                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23263  017E26  92D2               	bcf	210,1,c	;volatile
 23264                           
 23265                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23266  017E28  0E06               	movlw	low _INT1_DefaultInterruptHandler
 23267  017E2A  6EE6               	movwf	postinc1,c
 23268  017E2C  0E86               	movlw	high _INT1_DefaultInterruptHandler
 23269  017E2E  6EE6               	movwf	postinc1,c
 23270  017E30  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23271  017E32  6EE6               	movwf	postinc1,c
 23272  017E34  ECB5  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
 23273                           
 23274                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23275  017E38  0139               	movlb	57	; () banked
 23276  017E3A  8195               	bsf	149,0,b	;volatile
 23277                           
 23278                           ; BSR set to: 57
 23279                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23280  017E3C  0012               	return		;funcret
 23281  017E3E                     __end_of_EXT_INT_Initialize:
 23282                           	opt callstack 0
 23283                           
 23284 ;; *************** function _INT1_SetInterruptHandler *****************
 23285 ;; Defined at:
 23286 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23287 ;; Parameters:    Size  Location     Type
 23288 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23289 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;		None
 23292 ;; Return value:  Size  Location     Type
 23293 ;;                  1  [STACK] void 
 23294 ;; Registers used:
 23295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23296 ;; Tracked objects:
 23297 ;;		On entry : 3F/39
 23298 ;;		On exit  : 0/0
 23299 ;;		Unchanged: 0/0
 23300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23305 ;;Total ram usage:        0 bytes
 23306 ;; Hardware stack levels used:    1
 23307 ;; Hardware stack levels required when called:    6
 23308 ;; This function calls:
 23309 ;;		Nothing
 23310 ;; This function is called by:
 23311 ;;		_EXT_INT_Initialize
 23312 ;;		_start_switch_handler
 23313 ;; This function uses a reentrant model
 23314 ;;
 23315                           
 23316                           	psect	text106
 23317  01816A                     __ptext106:
 23318                           	opt callstack 0
 23319  01816A                     _INT1_SetInterruptHandler:
 23320                           	opt callstack 23
 23321                           
 23322                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23323                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23324                           
 23325                           ; BSR set to: 57
 23326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23327                           ;incstack = 0
 23328  01816A  50E1               	movf	fsr1l,w,c
 23329  01816C  0FFD               	addlw	-3
 23330  01816E  6ED9               	movwf	fsr2l,c
 23331  018170  50E2               	movf	fsr1h,w,c
 23332  018172  6EDA               	movwf	fsr2h,c
 23333  018174  0EFF               	movlw	255
 23334  018176  22DA               	addwfc	fsr2h,f,c
 23335  018178  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23336  01817E  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23337  018184  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23338                           
 23339                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23340  01818A  52E5               	movf	postdec1,f,c
 23341  01818C  52E5               	movf	postdec1,f,c
 23342  01818E  52E5               	movf	postdec1,f,c
 23343  018190  0012               	return		;funcret
 23344  018192                     __end_of_INT1_SetInterruptHandler:
 23345                           	opt callstack 0
 23346                           
 23347 ;; *************** function _INT0_SetInterruptHandler *****************
 23348 ;; Defined at:
 23349 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23350 ;; Parameters:    Size  Location     Type
 23351 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23352 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23353 ;; Auto vars:     Size  Location     Type
 23354 ;;		None
 23355 ;; Return value:  Size  Location     Type
 23356 ;;                  1  [STACK] void 
 23357 ;; Registers used:
 23358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23359 ;; Tracked objects:
 23360 ;;		On entry : 3F/39
 23361 ;;		On exit  : 0/0
 23362 ;;		Unchanged: 0/0
 23363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23368 ;;Total ram usage:        0 bytes
 23369 ;; Hardware stack levels used:    1
 23370 ;; Hardware stack levels required when called:    6
 23371 ;; This function calls:
 23372 ;;		Nothing
 23373 ;; This function is called by:
 23374 ;;		_EXT_INT_Initialize
 23375 ;; This function uses a reentrant model
 23376 ;;
 23377                           
 23378                           	psect	text107
 23379  018192                     __ptext107:
 23380                           	opt callstack 0
 23381  018192                     _INT0_SetInterruptHandler:
 23382                           	opt callstack 22
 23383                           
 23384                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23385                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23386                           
 23387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23388                           ;incstack = 0
 23389  018192  50E1               	movf	fsr1l,w,c
 23390  018194  0FFD               	addlw	-3
 23391  018196  6ED9               	movwf	fsr2l,c
 23392  018198  50E2               	movf	fsr1h,w,c
 23393  01819A  6EDA               	movwf	fsr2h,c
 23394  01819C  0EFF               	movlw	255
 23395  01819E  22DA               	addwfc	fsr2h,f,c
 23396  0181A0  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23397  0181A6  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23398  0181AC  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23399                           
 23400                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23401  0181B2  52E5               	movf	postdec1,f,c
 23402  0181B4  52E5               	movf	postdec1,f,c
 23403  0181B6  52E5               	movf	postdec1,f,c
 23404  0181B8  0012               	return		;funcret
 23405  0181BA                     __end_of_INT0_SetInterruptHandler:
 23406                           	opt callstack 0
 23407                           
 23408 ;; *************** function _DMA2_Initialize *****************
 23409 ;; Defined at:
 23410 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23411 ;; Parameters:    Size  Location     Type
 23412 ;;		None
 23413 ;; Auto vars:     Size  Location     Type
 23414 ;;		None
 23415 ;; Return value:  Size  Location     Type
 23416 ;;                  1  [STACK] void 
 23417 ;; Registers used:
 23418 ;;		wreg, status,2
 23419 ;; Tracked objects:
 23420 ;;		On entry : 3F/3D
 23421 ;;		On exit  : 3F/3B
 23422 ;;		Unchanged: 0/0
 23423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23428 ;;Total ram usage:        0 bytes
 23429 ;; Hardware stack levels used:    1
 23430 ;; Hardware stack levels required when called:    6
 23431 ;; This function calls:
 23432 ;;		Nothing
 23433 ;; This function is called by:
 23434 ;;		_SYSTEM_Initialize
 23435 ;; This function uses a reentrant model
 23436 ;;
 23437                           
 23438                           	psect	text108
 23439  0178F2                     __ptext108:
 23440                           	opt callstack 0
 23441  0178F2                     _DMA2_Initialize:
 23442                           	opt callstack 23
 23443                           
 23444                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23445                           
 23446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23447                           ;incstack = 0
 23448  0178F2  0E00               	movlw	0
 23449  0178F4  013B               	movlb	59	; () banked
 23450  0178F6  6FD9               	movwf	217,b	;volatile
 23451  0178F8  0E10               	movlw	16
 23452  0178FA  6FDA               	movwf	218,b	;volatile
 23453  0178FC  0E00               	movlw	0
 23454  0178FE  6FDB               	movwf	219,b	;volatile
 23455                           
 23456                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23457  017900  0E3F               	movlw	63
 23458  017902  6FD1               	movwf	209,b	;volatile
 23459  017904  0EBB               	movlw	187
 23460  017906  6FD0               	movwf	208,b	;volatile
 23461                           
 23462                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23463  017908  0E03               	movlw	3
 23464  01790A  6FDD               	movwf	221,b	;volatile
 23465                           
 23466                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23467  01790C  0E00               	movlw	0
 23468  01790E  6FD8               	movwf	216,b	;volatile
 23469  017910  0E01               	movlw	1
 23470  017912  6FD7               	movwf	215,b	;volatile
 23471                           
 23472                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23473  017914  0E00               	movlw	0
 23474  017916  6FCF               	movwf	207,b	;volatile
 23475  017918  0E01               	movlw	1
 23476  01791A  6FCE               	movwf	206,b	;volatile
 23477                           
 23478                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23479  01791C  0E46               	movlw	70
 23480  01791E  6FDF               	movwf	223,b	;volatile
 23481                           
 23482                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23483  017920  0E3D               	movlw	61
 23484  017922  6FDE               	movwf	222,b	;volatile
 23485                           
 23486                           ; BSR set to: 59
 23487                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23488  017924  0139               	movlb	57	; () banked
 23489  017926  97A5               	bcf	165,3,b	;volatile
 23490                           
 23491                           ; BSR set to: 57
 23492                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23493  017928  95A5               	bcf	165,2,b	;volatile
 23494                           
 23495                           ; BSR set to: 57
 23496                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23497  01792A  9BA5               	bcf	165,5,b	;volatile
 23498                           
 23499                           ; BSR set to: 57
 23500                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23501  01792C  99A5               	bcf	165,4,b	;volatile
 23502                           
 23503                           ; BSR set to: 57
 23504                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23505  01792E  9795               	bcf	149,3,b	;volatile
 23506                           
 23507                           ; BSR set to: 57
 23508                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23509  017930  9595               	bcf	149,2,b	;volatile
 23510                           
 23511                           ; BSR set to: 57
 23512                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23513  017932  9B95               	bcf	149,5,b	;volatile
 23514                           
 23515                           ; BSR set to: 57
 23516                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23517  017934  9995               	bcf	149,4,b	;volatile
 23518  017936  9ED2               	bcf	16338,7,c	;# 
 23519  017938  0139               	banksel	14831	;# 
 23520  01793A  0E55               	movlw	85	;# 
 23521  01793C  6FEF               	movwf	14831,b	;# 
 23522  01793E  0EAA               	movlw	170	;# 
 23523  017940  6FEF               	movwf	14831,b	;# 
 23524  017942  81EF               	bsf	14831,0,b	;# 
 23525  017944  8ED2               	bsf	16338,7,c	;# 
 23526                           
 23527                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23528  017946  013B               	movlb	59	; () banked
 23529  017948  6BDC               	clrf	220,b	;volatile
 23530                           
 23531                           ; BSR set to: 59
 23532                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23533  01794A  0012               	return		;funcret
 23534  01794C                     __end_of_DMA2_Initialize:
 23535                           	opt callstack 0
 23536                           
 23537 ;; *************** function _DMA1_Initialize *****************
 23538 ;; Defined at:
 23539 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23540 ;; Parameters:    Size  Location     Type
 23541 ;;		None
 23542 ;; Auto vars:     Size  Location     Type
 23543 ;;		None
 23544 ;; Return value:  Size  Location     Type
 23545 ;;                  1  [STACK] void 
 23546 ;; Registers used:
 23547 ;;		wreg, status,2
 23548 ;; Tracked objects:
 23549 ;;		On entry : 3F/3B
 23550 ;;		On exit  : 3F/3B
 23551 ;;		Unchanged: 0/0
 23552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23557 ;;Total ram usage:        0 bytes
 23558 ;; Hardware stack levels used:    1
 23559 ;; Hardware stack levels required when called:    6
 23560 ;; This function calls:
 23561 ;;		Nothing
 23562 ;; This function is called by:
 23563 ;;		_SYSTEM_Initialize
 23564 ;; This function uses a reentrant model
 23565 ;;
 23566                           
 23567                           	psect	text109
 23568  01750C                     __ptext109:
 23569                           	opt callstack 0
 23570  01750C                     _DMA1_Initialize:
 23571                           	opt callstack 23
 23572                           
 23573                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23574                           
 23575                           ; BSR set to: 59
 23576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23577                           ;incstack = 0
 23578  01750C  0E00               	movlw	0
 23579  01750E  013B               	movlb	59	; () banked
 23580  017510  6FF9               	movwf	249,b	;volatile
 23581  017512  0E10               	movlw	16
 23582  017514  6FFA               	movwf	250,b	;volatile
 23583  017516  0E00               	movlw	0
 23584  017518  6FFB               	movwf	251,b	;volatile
 23585                           
 23586                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23587  01751A  0E3D               	movlw	61
 23588  01751C  6FF1               	movwf	241,b	;volatile
 23589  01751E  0E11               	movlw	17
 23590  017520  6FF0               	movwf	240,b	;volatile
 23591                           
 23592                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23593  017522  0E03               	movlw	3
 23594  017524  6FFD               	movwf	253,b	;volatile
 23595                           
 23596                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23597  017526  0E00               	movlw	0
 23598  017528  6FF8               	movwf	248,b	;volatile
 23599  01752A  0E01               	movlw	1
 23600  01752C  6FF7               	movwf	247,b	;volatile
 23601                           
 23602                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23603  01752E  0E00               	movlw	0
 23604  017530  6FEF               	movwf	239,b	;volatile
 23605  017532  0E01               	movlw	1
 23606  017534  6FEE               	movwf	238,b	;volatile
 23607                           
 23608                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23609  017536  0E15               	movlw	21
 23610  017538  6FFF               	movwf	255,b	;volatile
 23611                           
 23612                           ; BSR set to: 59
 23613                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23614  01753A  6BFE               	clrf	254,b	;volatile
 23615                           
 23616                           ; BSR set to: 59
 23617                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23618  01753C  0139               	movlb	57	; () banked
 23619  01753E  93A2               	bcf	162,1,b	;volatile
 23620                           
 23621                           ; BSR set to: 57
 23622                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23623  017540  91A2               	bcf	162,0,b	;volatile
 23624                           
 23625                           ; BSR set to: 57
 23626                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23627  017542  97A2               	bcf	162,3,b	;volatile
 23628                           
 23629                           ; BSR set to: 57
 23630                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23631  017544  95A2               	bcf	162,2,b	;volatile
 23632                           
 23633                           ; BSR set to: 57
 23634                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23635  017546  8392               	bsf	146,1,b	;volatile
 23636                           
 23637                           ; BSR set to: 57
 23638                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23639  017548  8192               	bsf	146,0,b	;volatile
 23640                           
 23641                           ; BSR set to: 57
 23642                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23643  01754A  8792               	bsf	146,3,b	;volatile
 23644                           
 23645                           ; BSR set to: 57
 23646                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23647  01754C  8592               	bsf	146,2,b	;volatile
 23648                           
 23649                           ; BSR set to: 57
 23650                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23651  01754E  6BF1               	clrf	241,b	;volatile
 23652                           
 23653                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23654  017550  0E01               	movlw	1
 23655  017552  6FF2               	movwf	242,b	;volatile
 23656                           
 23657                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23658  017554  0E04               	movlw	4
 23659  017556  6FF3               	movwf	243,b	;volatile
 23660                           
 23661                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23662  017558  0E02               	movlw	2
 23663  01755A  6FF4               	movwf	244,b	;volatile
 23664                           
 23665                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23666  01755C  0E03               	movlw	3
 23667  01755E  6FF7               	movwf	247,b	;volatile
 23668  017560  9ED2               	bcf	16338,7,c	;# 
 23669  017562  0139               	banksel	14831	;# 
 23670  017564  0E55               	movlw	85	;# 
 23671  017566  6FEF               	movwf	14831,b	;# 
 23672  017568  0EAA               	movlw	170	;# 
 23673  01756A  6FEF               	movwf	14831,b	;# 
 23674  01756C  81EF               	bsf	14831,0,b	;# 
 23675  01756E  8ED2               	bsf	16338,7,c	;# 
 23676                           
 23677                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23678  017570  013B               	movlb	59	; () banked
 23679  017572  6BFC               	clrf	252,b	;volatile
 23680                           
 23681                           ; BSR set to: 59
 23682                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23683  017574  0012               	return		;funcret
 23684  017576                     __end_of_DMA1_Initialize:
 23685                           	opt callstack 0
 23686                           
 23687 ;; *************** function _CLKREF_Initialize *****************
 23688 ;; Defined at:
 23689 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23690 ;; Parameters:    Size  Location     Type
 23691 ;;		None
 23692 ;; Auto vars:     Size  Location     Type
 23693 ;;		None
 23694 ;; Return value:  Size  Location     Type
 23695 ;;                  1  [STACK] void 
 23696 ;; Registers used:
 23697 ;;		wreg, status,2
 23698 ;; Tracked objects:
 23699 ;;		On entry : 3F/3B
 23700 ;;		On exit  : 3F/3C
 23701 ;;		Unchanged: 0/0
 23702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23707 ;;Total ram usage:        0 bytes
 23708 ;; Hardware stack levels used:    1
 23709 ;; Hardware stack levels required when called:    6
 23710 ;; This function calls:
 23711 ;;		Nothing
 23712 ;; This function is called by:
 23713 ;;		_SYSTEM_Initialize
 23714 ;; This function uses a reentrant model
 23715 ;;
 23716                           
 23717                           	psect	text110
 23718  01859A                     __ptext110:
 23719                           	opt callstack 0
 23720  01859A                     _CLKREF_Initialize:
 23721                           	opt callstack 23
 23722                           
 23723                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23724                           
 23725                           ; BSR set to: 59
 23726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23727                           ;incstack = 0
 23728  01859A  013C               	movlb	60	; () banked
 23729  01859C  6BE6               	clrf	230,b	;volatile
 23730                           
 23731                           ; BSR set to: 60
 23732                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23733  01859E  0E94               	movlw	148
 23734  0185A0  6FE5               	movwf	229,b	;volatile
 23735                           
 23736                           ; BSR set to: 60
 23737                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23738  0185A2  0012               	return		;funcret
 23739  0185A4                     __end_of_CLKREF_Initialize:
 23740                           	opt callstack 0
 23741                           
 23742 ;; *************** function _ADCC_Initialize *****************
 23743 ;; Defined at:
 23744 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23745 ;; Parameters:    Size  Location     Type
 23746 ;;		None
 23747 ;; Auto vars:     Size  Location     Type
 23748 ;;		None
 23749 ;; Return value:  Size  Location     Type
 23750 ;;                  1  [STACK] void 
 23751 ;; Registers used:
 23752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23753 ;; Tracked objects:
 23754 ;;		On entry : 3F/3E
 23755 ;;		On exit  : 0/0
 23756 ;;		Unchanged: 0/0
 23757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23762 ;;Total ram usage:        0 bytes
 23763 ;; Hardware stack levels used:    1
 23764 ;; Hardware stack levels required when called:    7
 23765 ;; This function calls:
 23766 ;;		_ADCC_SetADIInterruptHandler
 23767 ;;		_ADCC_SetADTIInterruptHandler
 23768 ;; This function is called by:
 23769 ;;		_SYSTEM_Initialize
 23770 ;; This function uses a reentrant model
 23771 ;;
 23772                           
 23773                           	psect	text111
 23774  017576                     __ptext111:
 23775                           	opt callstack 0
 23776  017576                     _ADCC_Initialize:
 23777                           	opt callstack 22
 23778                           
 23779                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23780                           
 23781                           ; BSR set to: 60
 23782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23783                           ;incstack = 0
 23784  017576  013E               	movlb	62	; () banked
 23785  017578  6BDE               	clrf	222,b	;volatile
 23786                           
 23787                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23788  01757A  6BDF               	clrf	223,b	;volatile
 23789                           
 23790                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23791  01757C  6BE0               	clrf	224,b	;volatile
 23792                           
 23793                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23794  01757E  6BE1               	clrf	225,b	;volatile
 23795                           
 23796                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23797  017580  6BE4               	clrf	228,b	;volatile
 23798                           
 23799                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23800  017582  6BE5               	clrf	229,b	;volatile
 23801                           
 23802                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23803  017584  6BEA               	clrf	234,b	;volatile
 23804                           
 23805                           ; BSR set to: 62
 23806                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23807  017586  0E40               	movlw	64
 23808  017588  6FEC               	movwf	236,b	;volatile
 23809                           
 23810                           ; BSR set to: 62
 23811                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23812  01758A  6BF1               	clrf	241,b	;volatile
 23813                           
 23814                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 23815  01758C  0E20               	movlw	32
 23816  01758E  6FF3               	movwf	243,b	;volatile
 23817                           
 23818                           ; BSR set to: 62
 23819                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23820  017590  6BF4               	clrf	244,b	;volatile
 23821                           
 23822                           ; BSR set to: 62
 23823                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23824  017592  6BF5               	clrf	245,b	;volatile
 23825                           
 23826                           ; BSR set to: 62
 23827                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23828  017594  6BF6               	clrf	246,b	;volatile
 23829                           
 23830                           ; BSR set to: 62
 23831                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23832  017596  6BF7               	clrf	247,b	;volatile
 23833                           
 23834                           ; BSR set to: 62
 23835                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23836  017598  6BF9               	clrf	249,b	;volatile
 23837                           
 23838                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 23839  01759A  0E5B               	movlw	91
 23840  01759C  6FFA               	movwf	250,b	;volatile
 23841                           
 23842                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23843  01759E  0E27               	movlw	39
 23844  0175A0  6FFB               	movwf	251,b	;volatile
 23845                           
 23846                           ; BSR set to: 62
 23847                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23848  0175A2  6BFC               	clrf	252,b	;volatile
 23849                           
 23850                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23851  0175A4  0E02               	movlw	2
 23852  0175A6  6FFD               	movwf	253,b	;volatile
 23853                           
 23854                           ; BSR set to: 62
 23855                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23856  0175A8  6BFE               	clrf	254,b	;volatile
 23857                           
 23858                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 23859  0175AA  0E07               	movlw	7
 23860  0175AC  6FFF               	movwf	255,b	;volatile
 23861                           
 23862                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 23863  0175AE  0E84               	movlw	132
 23864  0175B0  6FF8               	movwf	248,b	;volatile
 23865                           
 23866                           ; BSR set to: 62
 23867                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23868  0175B2  0139               	movlb	57	; () banked
 23869  0175B4  95A1               	bcf	161,2,b	;volatile
 23870                           
 23871                           ; BSR set to: 57
 23872                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23873  0175B6  8591               	bsf	145,2,b	;volatile
 23874                           
 23875                           ; BSR set to: 57
 23876                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23877  0175B8  0E0A               	movlw	low _ADCC_DefaultInterruptHandler
 23878  0175BA  6EE6               	movwf	postinc1,c
 23879  0175BC  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 23880  0175BE  6EE6               	movwf	postinc1,c
 23881  0175C0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23882  0175C2  6EE6               	movwf	postinc1,c
 23883  0175C4  ECF1  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23884                           
 23885                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23886  0175C8  0139               	movlb	57	; () banked
 23887  0175CA  97A1               	bcf	161,3,b	;volatile
 23888                           
 23889                           ; BSR set to: 57
 23890                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23891  0175CC  8791               	bsf	145,3,b	;volatile
 23892                           
 23893                           ; BSR set to: 57
 23894                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23895  0175CE  0E0A               	movlw	low _ADCC_DefaultInterruptHandler
 23896  0175D0  6EE6               	movwf	postinc1,c
 23897  0175D2  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 23898  0175D4  6EE6               	movwf	postinc1,c
 23899  0175D6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23900  0175D8  6EE6               	movwf	postinc1,c
 23901  0175DA  ECDD  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23902                           
 23903                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23904  0175DE  0012               	return		;funcret
 23905  0175E0                     __end_of_ADCC_Initialize:
 23906                           	opt callstack 0
 23907                           
 23908 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23909 ;; Defined at:
 23910 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23911 ;; Parameters:    Size  Location     Type
 23912 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23913 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23914 ;; Auto vars:     Size  Location     Type
 23915 ;;		None
 23916 ;; Return value:  Size  Location     Type
 23917 ;;                  1  [STACK] void 
 23918 ;; Registers used:
 23919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23920 ;; Tracked objects:
 23921 ;;		On entry : 0/0
 23922 ;;		On exit  : 0/0
 23923 ;;		Unchanged: 0/0
 23924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23929 ;;Total ram usage:        0 bytes
 23930 ;; Hardware stack levels used:    1
 23931 ;; Hardware stack levels required when called:    6
 23932 ;; This function calls:
 23933 ;;		Nothing
 23934 ;; This function is called by:
 23935 ;;		_ADCC_Initialize
 23936 ;;		_start_adc_scan
 23937 ;; This function uses a reentrant model
 23938 ;;
 23939                           
 23940                           	psect	text112
 23941  0181BA                     __ptext112:
 23942                           	opt callstack 0
 23943  0181BA                     _ADCC_SetADTIInterruptHandler:
 23944                           	opt callstack 23
 23945                           
 23946                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23947                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23948                           
 23949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23950                           ;incstack = 0
 23951  0181BA  50E1               	movf	fsr1l,w,c
 23952  0181BC  0FFD               	addlw	-3
 23953  0181BE  6ED9               	movwf	fsr2l,c
 23954  0181C0  50E2               	movf	fsr1h,w,c
 23955  0181C2  6EDA               	movwf	fsr2h,c
 23956  0181C4  0EFF               	movlw	255
 23957  0181C6  22DA               	addwfc	fsr2h,f,c
 23958  0181C8  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23959  0181CE  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23960  0181D4  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23961                           
 23962                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23963  0181DA  52E5               	movf	postdec1,f,c
 23964  0181DC  52E5               	movf	postdec1,f,c
 23965  0181DE  52E5               	movf	postdec1,f,c
 23966  0181E0  0012               	return		;funcret
 23967  0181E2                     __end_of_ADCC_SetADTIInterruptHandler:
 23968                           	opt callstack 0
 23969                           
 23970 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23971 ;; Defined at:
 23972 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23973 ;; Parameters:    Size  Location     Type
 23974 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23975 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23976 ;; Auto vars:     Size  Location     Type
 23977 ;;		None
 23978 ;; Return value:  Size  Location     Type
 23979 ;;                  1  [STACK] void 
 23980 ;; Registers used:
 23981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23982 ;; Tracked objects:
 23983 ;;		On entry : 6/0
 23984 ;;		On exit  : 0/0
 23985 ;;		Unchanged: 0/0
 23986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23991 ;;Total ram usage:        0 bytes
 23992 ;; Hardware stack levels used:    1
 23993 ;; Hardware stack levels required when called:    6
 23994 ;; This function calls:
 23995 ;;		Nothing
 23996 ;; This function is called by:
 23997 ;;		_ADCC_Initialize
 23998 ;;		_start_adc_scan
 23999 ;; This function uses a reentrant model
 24000 ;;
 24001                           
 24002                           	psect	text113
 24003  0181E2                     __ptext113:
 24004                           	opt callstack 0
 24005  0181E2                     _ADCC_SetADIInterruptHandler:
 24006                           	opt callstack 23
 24007                           
 24008                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24009                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24010                           
 24011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24012                           ;incstack = 0
 24013  0181E2  50E1               	movf	fsr1l,w,c
 24014  0181E4  0FFD               	addlw	-3
 24015  0181E6  6ED9               	movwf	fsr2l,c
 24016  0181E8  50E2               	movf	fsr1h,w,c
 24017  0181EA  6EDA               	movwf	fsr2h,c
 24018  0181EC  0EFF               	movlw	255
 24019  0181EE  22DA               	addwfc	fsr2h,f,c
 24020  0181F0  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24021  0181F6  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24022  0181FC  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24023                           
 24024                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24025  018202  52E5               	movf	postdec1,f,c
 24026  018204  52E5               	movf	postdec1,f,c
 24027  018206  52E5               	movf	postdec1,f,c
 24028  018208  0012               	return		;funcret
 24029  01820A                     __end_of_ADCC_SetADIInterruptHandler:
 24030                           	opt callstack 0
 24031                           
 24032 ;; *************** function _INT1_ISR *****************
 24033 ;; Defined at:
 24034 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24035 ;; Parameters:    Size  Location     Type
 24036 ;;		None
 24037 ;; Auto vars:     Size  Location     Type
 24038 ;;		None
 24039 ;; Return value:  Size  Location     Type
 24040 ;;                  1    wreg      void 
 24041 ;; Registers used:
 24042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24043 ;; Tracked objects:
 24044 ;;		On entry : 0/0
 24045 ;;		On exit  : 0/0
 24046 ;;		Unchanged: 0/0
 24047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24051 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24052 ;;Total ram usage:        4 bytes
 24053 ;; Hardware stack levels used:    1
 24054 ;; Hardware stack levels required when called:    5
 24055 ;; This function calls:
 24056 ;;		_INT1_CallBack
 24057 ;; This function is called by:
 24058 ;;		Interrupt level 1
 24059 ;; This function uses a non-reentrant model
 24060 ;;
 24061                           
 24062                           	psect	text114
 24063  017CB8                     __ptext114:
 24064                           	opt callstack 0
 24065  017CB8                     _INT1_ISR:
 24066                           	opt callstack 12
 24067                           
 24068                           ;incstack = 0
 24069  017CB8  006F FF60  F0F6    	movff	status,??_INT1_ISR
 24070  017CBE  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 24071  017CC4  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 24072  017CCA  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 24073  017CD0  EE16  F000         	lfsr	1,___intlo_sp
 24074                           
 24075                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24076  017CD4  0139               	movlb	57	; () banked
 24077  017CD6  91A5               	bcf	165,0,b	;volatile
 24078                           
 24079                           ; BSR set to: 57
 24080                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24081  017CD8  EC9F  F0C1         	call	_INT1_CallBack	;wreg free
 24082  017CDC  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 24083  017CE2  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 24084  017CE8  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 24085  017CEE  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 24086  017CF4  0011               	retfie		f
 24087  017CF6                     __end_of_INT1_ISR:
 24088                           	opt callstack 0
 24089                           
 24090 ;; *************** function _INT1_CallBack *****************
 24091 ;; Defined at:
 24092 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24093 ;; Parameters:    Size  Location     Type
 24094 ;;		None
 24095 ;; Auto vars:     Size  Location     Type
 24096 ;;		None
 24097 ;; Return value:  Size  Location     Type
 24098 ;;                  1  [STACK] void 
 24099 ;; Registers used:
 24100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24101 ;; Tracked objects:
 24102 ;;		On entry : 3F/39
 24103 ;;		On exit  : 0/0
 24104 ;;		Unchanged: 0/0
 24105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24110 ;;Total ram usage:        0 bytes
 24111 ;; Hardware stack levels used:    1
 24112 ;; Hardware stack levels required when called:    4
 24113 ;; This function calls:
 24114 ;;		Absolute function
 24115 ;;		_INT1_DefaultInterruptHandler
 24116 ;;		_switch_handler
 24117 ;; This function is called by:
 24118 ;;		_INT1_ISR
 24119 ;; This function uses a reentrant model
 24120 ;;
 24121                           
 24122                           	psect	text115
 24123  01833E                     __ptext115:
 24124                           	opt callstack 0
 24125  01833E                     _INT1_CallBack:
 24126                           	opt callstack 12
 24127                           
 24128                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24129                           
 24130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24131                           ;incstack = 0
 24132  01833E  5013               	movf	_INT1_InterruptHandler^0,w,c
 24133  018340  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24134  018342  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24135  018344  B4D8               	btfsc	status,2,c
 24136  018346  0012               	return	
 24137                           
 24138                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24139  018348  D801               	call	u832_28
 24140  01834A  0012               	return	
 24141  01834C                     u832_28:
 24142  01834C  0005               	push	
 24143  01834E  6EFA               	movwf	pclath,c
 24144  018350  5013               	movf	_INT1_InterruptHandler^0,w,c
 24145  018352  6EFD               	movwf	tosl,c
 24146  018354  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24147  018356  6EFE               	movwf	tosh,c
 24148  018358  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24149  01835A  6EFF               	movwf	tosu,c
 24150  01835C  50FA               	movf	pclath,w,c
 24151  01835E  0012               	return		;indir
 24152  018360                     __end_of_INT1_CallBack:
 24153                           	opt callstack 0
 24154                           
 24155 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24156 ;; Defined at:
 24157 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24158 ;; Parameters:    Size  Location     Type
 24159 ;;		None
 24160 ;; Auto vars:     Size  Location     Type
 24161 ;;		None
 24162 ;; Return value:  Size  Location     Type
 24163 ;;                  1  [STACK] void 
 24164 ;; Registers used:
 24165 ;;		None
 24166 ;; Tracked objects:
 24167 ;;		On entry : 0/39
 24168 ;;		On exit  : 0/0
 24169 ;;		Unchanged: 0/0
 24170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24175 ;;Total ram usage:        0 bytes
 24176 ;; Hardware stack levels used:    1
 24177 ;; Hardware stack levels required when called:    3
 24178 ;; This function calls:
 24179 ;;		Nothing
 24180 ;; This function is called by:
 24181 ;;		_EXT_INT_Initialize
 24182 ;;		_INT1_CallBack
 24183 ;; This function uses a reentrant model
 24184 ;;
 24185                           
 24186                           	psect	text116
 24187  018606                     __ptext116:
 24188                           	opt callstack 0
 24189  018606                     _INT1_DefaultInterruptHandler:
 24190                           	opt callstack 12
 24191                           
 24192                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24193                           
 24194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24195                           ;incstack = 0
 24196  018606  0012               	return		;funcret
 24197  018608                     __end_of_INT1_DefaultInterruptHandler:
 24198                           	opt callstack 0
 24199                           
 24200 ;; *************** function _switch_handler *****************
 24201 ;; Defined at:
 24202 ;;		line 58 in file "dio.c"
 24203 ;; Parameters:    Size  Location     Type
 24204 ;;		None
 24205 ;; Auto vars:     Size  Location     Type
 24206 ;;  i               1  [STACK] unsigned char 
 24207 ;;  sw_value        1  [STACK] unsigned char 
 24208 ;; Return value:  Size  Location     Type
 24209 ;;                  1  [STACK] void 
 24210 ;; Registers used:
 24211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24212 ;; Tracked objects:
 24213 ;;		On entry : 0/39
 24214 ;;		On exit  : 0/0
 24215 ;;		Unchanged: 0/0
 24216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24221 ;;Total ram usage:        0 bytes
 24222 ;; Hardware stack levels used:    1
 24223 ;; Hardware stack levels required when called:    3
 24224 ;; This function calls:
 24225 ;;		Nothing
 24226 ;; This function is called by:
 24227 ;;		_start_switch_handler
 24228 ;;		_INT1_CallBack
 24229 ;; This function uses a reentrant model
 24230 ;;
 24231                           
 24232                           	psect	text117
 24233  01621E                     __ptext117:
 24234                           	opt callstack 0
 24235  01621E                     _switch_handler:
 24236                           	opt callstack 0
 24237                           
 24238                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24239  01621E  52E6               	movf	postinc1,f,c
 24240  016220  52E6               	movf	postinc1,f,c
 24241                           
 24242                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24243                           ;stkvar	_i @ sp[(-2)+0]
 24244                           
 24245                           ;incstack = 0
 24246  016222  0EFE               	movlw	-2
 24247  016224  6AE3               	clrf	plusw1,c
 24248  016226  9EBD               	bcf	189,7,c	;volatile
 24249  016228  82BE               	bsf	190,1,c	;volatile
 24250                           
 24251                           ;dio.c: 72:  __nop();
 24252  01622A  F000               	nop	
 24253                           
 24254                           ;dio.c: 73:  __nop();
 24255  01622C  F000               	nop	
 24256                           
 24257                           ;dio.c: 74:  __nop();
 24258  01622E  F000               	nop	
 24259  016230  D019               	goto	l8669
 24260  016232                     l8657:
 24261                           
 24262                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24263  016232  A6CF               	btfss	207,3,c	;volatile
 24264  016234  D011               	goto	u824_20
 24265  016236  D00D               	goto	u824_21
 24266  016238                     u821_28:
 24267                           
 24268                           ;stkvar	_sw_value @ sp[(-2)+1]
 24269  016238  0EFF               	movlw	-1
 24270  01623A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24271                           
 24272                           ;dio.c: 80:    break;
 24273  016240  D027               	goto	l8671
 24274  016242                     l8659:
 24275                           
 24276                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24277  016242  A4CF               	btfss	207,2,c	;volatile
 24278  016244  D009               	goto	u824_20
 24279  016246  D005               	goto	u824_21
 24280  016248                     l8661:
 24281                           
 24282                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24283  016248  A2CF               	btfss	207,1,c	;volatile
 24284  01624A  D006               	goto	u824_20
 24285  01624C  D002               	goto	u824_21
 24286  01624E                     l8663:
 24287                           
 24288                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24289  01624E  A0CF               	btfss	207,0,c	;volatile
 24290  016250  D003               	goto	u824_20
 24291  016252                     u824_21:
 24292  016252  6A3D               	clrf	(btemp+11)^0,c
 24293  016254  2A3D               	incf	(btemp+11)^0,f,c
 24294  016256  D7F0               	goto	u821_28
 24295  016258                     u824_20:
 24296  016258  6A3D               	clrf	(btemp+11)^0,c
 24297  01625A  D7EE               	goto	u821_28
 24298  01625C                     l8665:
 24299                           
 24300                           ;dio.c: 91:    sw_value = 1;
 24301                           ;stkvar	_sw_value @ sp[(-2)+1]
 24302  01625C  0EFF               	movlw	-1
 24303  01625E  6AE3               	clrf	plusw1,c
 24304  016260  2AE3               	incf	plusw1,f,c
 24305                           
 24306                           ;dio.c: 92:    break;
 24307  016262  D016               	goto	l8671
 24308  016264                     l8669:
 24309                           
 24310                           ;stkvar	_i @ sp[(-2)+0]
 24311  016264  0EFE               	movlw	-2
 24312  016266  50E3               	movf	plusw1,w,c
 24313  016268  6E3C               	movwf	(btemp+10)^0,c
 24314  01626A  6A3D               	clrf	(btemp+11)^0,c
 24315                           
 24316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24317                           ; Switch size 1, requested type "simple"
 24318                           ; Number of cases is 1, Range of values is 0 to 0
 24319                           ; switch strategies available:
 24320                           ; Name         Instructions Cycles
 24321                           ; simple_byte            4     3 (average)
 24322                           ;	Chosen strategy is simple_byte
 24323  01626C  503D               	movf	(btemp+11)^0,w,c
 24324  01626E  0A00               	xorlw	0	; case 0
 24325  016270  A4D8               	btfss	status,2,c
 24326  016272  D7F4               	goto	l8665
 24327                           
 24328                           ; Switch size 1, requested type "simple"
 24329                           ; Number of cases is 4, Range of values is 0 to 3
 24330                           ; switch strategies available:
 24331                           ; Name         Instructions Cycles
 24332                           ; simple_byte           13     7 (average)
 24333                           ;	Chosen strategy is simple_byte
 24334  016274  503C               	movf	(btemp+10)^0,w,c
 24335  016276  0A00               	xorlw	0	; case 0
 24336  016278  B4D8               	btfsc	status,2,c
 24337  01627A  D7E9               	goto	l8663
 24338  01627C  0A01               	xorlw	1	; case 1
 24339  01627E  B4D8               	btfsc	status,2,c
 24340  016280  D7E3               	goto	l8661
 24341  016282  0A03               	xorlw	3	; case 2
 24342  016284  B4D8               	btfsc	status,2,c
 24343  016286  D7DD               	goto	l8659
 24344  016288  0A01               	xorlw	1	; case 3
 24345  01628A  B4D8               	btfsc	status,2,c
 24346  01628C  D7D2               	goto	l8657
 24347  01628E  D7E6               	goto	l8665
 24348  016290                     l8671:
 24349                           
 24350                           ;dio.c: 96:   if (sw_value) {
 24351                           ;stkvar	_sw_value @ sp[(-2)+1]
 24352  016290  0EFF               	movlw	-1
 24353  016292  50E3               	movf	plusw1,w,c
 24354  016294  B4D8               	btfsc	status,2,c
 24355  016296  D014               	goto	l8677
 24356                           
 24357                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24358                           ;stkvar	_i @ sp[(-2)+0]
 24359  016298  0EFE               	movlw	-2
 24360  01629A  50E3               	movf	plusw1,w,c
 24361  01629C  0D05               	mullw	5
 24362  01629E  50F3               	movf	243,w,c
 24363  0162A0  0F60               	addlw	low _S
 24364  0162A2  6ED9               	movwf	fsr2l,c
 24365  0162A4  6ADA               	clrf	fsr2h,c
 24366  0162A6  04DE               	decf	postinc2,w,c
 24367  0162A8  A4D8               	btfss	status,2,c
 24368  0162AA  D041               	goto	l8685
 24369                           
 24370                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24371                           ;stkvar	_i @ sp[(-2)+0]
 24372  0162AC  0EFE               	movlw	-2
 24373  0162AE  50E3               	movf	plusw1,w,c
 24374  0162B0  0D05               	mullw	5
 24375  0162B2  50F3               	movf	243,w,c
 24376  0162B4  0F60               	addlw	low _S
 24377  0162B6  6ED9               	movwf	fsr2l,c
 24378  0162B8  6ADA               	clrf	fsr2h,c
 24379  0162BA  0E00               	movlw	0
 24380  0162BC  6EDF               	movwf	indf2,c
 24381  0162BE  D037               	goto	l8685
 24382  0162C0                     l8677:
 24383                           
 24384                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24385                           ;stkvar	_i @ sp[(-2)+0]
 24386  0162C0  0EFE               	movlw	-2
 24387  0162C2  50E3               	movf	plusw1,w,c
 24388  0162C4  0D05               	mullw	5
 24389  0162C6  50F3               	movf	243,w,c
 24390  0162C8  0F60               	addlw	low _S
 24391  0162CA  6ED9               	movwf	fsr2l,c
 24392  0162CC  6ADA               	clrf	fsr2h,c
 24393  0162CE  50DF               	movf	indf2,w,c
 24394  0162D0  A4D8               	btfss	status,2,c
 24395  0162D2  D02D               	goto	l8685
 24396                           
 24397                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24398                           ;stkvar	_i @ sp[(-2)+0]
 24399  0162D4  0EFE               	movlw	-2
 24400  0162D6  50E3               	movf	plusw1,w,c
 24401  0162D8  0D05               	mullw	5
 24402  0162DA  50F3               	movf	243,w,c
 24403  0162DC  0F60               	addlw	low _S
 24404  0162DE  6ED9               	movwf	fsr2l,c
 24405  0162E0  6ADA               	clrf	fsr2h,c
 24406  0162E2  0E01               	movlw	1
 24407  0162E4  6EDF               	movwf	indf2,c
 24408                           
 24409                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 24410  0162E6  EE20  F1B7         	lfsr	2,_V+183	;volatile
 24411                           
 24412                           ;stkvar	_i @ sp[(-2)+0]
 24413  0162EA  0EFE               	movlw	-2
 24414  0162EC  50E3               	movf	plusw1,w,c
 24415  0162EE  0D05               	mullw	5
 24416  0162F0  50F3               	movf	243,w,c
 24417  0162F2  0F61               	addlw	low (_S+1)
 24418  0162F4  6EE9               	movwf	fsr0l,c
 24419  0162F6  6AEA               	clrf	fsr0h,c
 24420  0162F8  006F FF7B FFEE     	movff	postinc2,postinc0
 24421  0162FE  006F FF7B FFEE     	movff	postinc2,postinc0
 24422  016304  006F FF7B FFEE     	movff	postinc2,postinc0
 24423  01630A  006F FF7B FFEE     	movff	postinc2,postinc0
 24424                           
 24425                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 24426                           ;stkvar	_i @ sp[(-2)+0]
 24427  016310  0EFE               	movlw	-2
 24428  016312  006F FF8C  F03D    	movff	plusw1,btemp+11
 24429  016318  0E01               	movlw	1
 24430  01631A  6E3C               	movwf	(btemp+10)^0,c
 24431  01631C  2A3D               	incf	(btemp+11)^0,f,c
 24432  01631E  D002               	goto	u828_24
 24433  016320                     u828_25:
 24434  016320  90D8               	bcf	status,0,c
 24435  016322  363C               	rlcf	(btemp+10)^0,f,c
 24436  016324                     u828_24:
 24437  016324  2E3D               	decfsz	(btemp+11)^0,f,c
 24438  016326  D7FC               	goto	u828_25
 24439  016328  503C               	movf	(btemp+10)^0,w,c
 24440  01632A  0100               	movlb	0	; () banked
 24441  01632C  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 24442  01632E                     l8685:
 24443                           
 24444                           ;dio.c: 107:  } while (++i < 4);
 24445                           ;stkvar	_i @ sp[(-2)+0]
 24446  01632E  0EFE               	movlw	-2
 24447  016330  2AE3               	incf	plusw1,f,c
 24448  016332  0EFE               	movlw	-2
 24449  016334  006F FF8C  F032    	movff	plusw1,btemp
 24450  01633A  0E03               	movlw	3
 24451  01633C  6432               	cpfsgt	btemp^0,c
 24452  01633E  D792               	goto	l8669
 24453                           
 24454                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 24455  016340  92BE               	bcf	190,1,c	;volatile
 24456  016342  A4BE               	btfss	190,2,c	;volatile
 24457  016344  D002               	goto	u830_20
 24458  016346  0E01               	movlw	1
 24459  016348  D001               	goto	u830_26
 24460  01634A                     u830_20:
 24461  01634A  0E00               	movlw	0
 24462  01634C                     u830_26:
 24463  01634C  0AFF               	xorlw	255
 24464  01634E  6E3D               	movwf	(btemp+11)^0,c
 24465  016350  463D               	rlncf	(btemp+11)^0,f,c
 24466  016352  463D               	rlncf	(btemp+11)^0,f,c
 24467  016354  50BE               	movf	190,w,c	;volatile
 24468  016356  183D               	xorwf	(btemp+11)^0,w,c
 24469  016358  0BFB               	andlw	-5
 24470  01635A  183D               	xorwf	(btemp+11)^0,w,c
 24471  01635C  6EBE               	movwf	190,c	;volatile
 24472  01635E  8EBD               	bsf	189,7,c	;volatile
 24473                           
 24474                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24475  016360  52E5               	movf	postdec1,f,c
 24476  016362  52E5               	movf	postdec1,f,c
 24477  016364  0012               	return		;funcret
 24478  016366                     __end_of_switch_handler:
 24479                           	opt callstack 0
 24480                           
 24481 ;; *************** function _TMR5_ISR *****************
 24482 ;; Defined at:
 24483 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24484 ;; Parameters:    Size  Location     Type
 24485 ;;		None
 24486 ;; Auto vars:     Size  Location     Type
 24487 ;;		None
 24488 ;; Return value:  Size  Location     Type
 24489 ;;                  1    wreg      void 
 24490 ;; Registers used:
 24491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24492 ;; Tracked objects:
 24493 ;;		On entry : 0/0
 24494 ;;		On exit  : 0/0
 24495 ;;		Unchanged: 0/0
 24496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24499 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24500 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24501 ;;Total ram usage:        4 bytes
 24502 ;; Hardware stack levels used:    1
 24503 ;; Hardware stack levels required when called:    5
 24504 ;; This function calls:
 24505 ;;		_TMR5_CallBack
 24506 ;;		_TMR5_WriteTimer
 24507 ;; This function is called by:
 24508 ;;		Interrupt level 1
 24509 ;; This function uses a non-reentrant model
 24510 ;;
 24511                           
 24512                           	psect	text118
 24513  01794C                     __ptext118:
 24514                           	opt callstack 0
 24515  01794C                     _TMR5_ISR:
 24516                           	opt callstack 12
 24517                           
 24518                           ;incstack = 0
 24519  01794C  006F FF60  F1C5    	movff	status,??_TMR5_ISR+2
 24520  017952  0060  F0F4  F1C6   	movff	btemp+11,??_TMR5_ISR+3
 24521  017958  EE16  F000         	lfsr	1,___intlo_sp
 24522                           
 24523                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24524  01795C  0139               	movlb	57	; () banked
 24525  01795E  9DA8               	bcf	168,6,b	;volatile
 24526                           
 24527                           ; BSR set to: 57
 24528                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24529  017960  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24530  017966  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24531  01796C  EC3B  F0BE         	call	_TMR5_WriteTimer	;wreg free
 24532                           
 24533                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24534  017970  0101               	movlb	1	; () banked
 24535  017972  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24536  017974  6FC3               	movwf	??_TMR5_ISR& (0+255),b
 24537  017976  6BC4               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24538  017978  0E05               	movlw	5
 24539  01797A  27C3               	addwf	??_TMR5_ISR& (0+255),f,b
 24540  01797C  0E00               	movlw	0
 24541  01797E  23C4               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24542  017980  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24543  017982  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24544  017984  51C3               	movf	??_TMR5_ISR& (0+255),w,b
 24545  017986  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24546  017988  51C4               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24547  01798A  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24548  01798C  A0D8               	btfss	status,0,c
 24549  01798E  D004               	goto	i1l1045
 24550                           
 24551                           ; BSR set to: 1
 24552                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24553  017990  EC7B  F0C1         	call	_TMR5_CallBack	;wreg free
 24554                           
 24555                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24556  017994  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24557  017996  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24558  017998                     i1l1045:
 24559  017998  0060  F718  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24560  01799E  0060  F717  FFD8   	movff	??_TMR5_ISR+2,status
 24561  0179A4  0011               	retfie		f
 24562  0179A6                     __end_of_TMR5_ISR:
 24563                           	opt callstack 0
 24564                           
 24565 ;; *************** function _TMR5_WriteTimer *****************
 24566 ;; Defined at:
 24567 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24568 ;; Parameters:    Size  Location     Type
 24569 ;;  timerVal        2  [STACK] unsigned short 
 24570 ;; Auto vars:     Size  Location     Type
 24571 ;;		None
 24572 ;; Return value:  Size  Location     Type
 24573 ;;                  1  [STACK] void 
 24574 ;; Registers used:
 24575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24576 ;; Tracked objects:
 24577 ;;		On entry : 3F/39
 24578 ;;		On exit  : 0/0
 24579 ;;		Unchanged: 0/0
 24580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24585 ;;Total ram usage:        0 bytes
 24586 ;; Hardware stack levels used:    1
 24587 ;; Hardware stack levels required when called:    3
 24588 ;; This function calls:
 24589 ;;		Nothing
 24590 ;; This function is called by:
 24591 ;;		_TMR5_ISR
 24592 ;; This function uses a reentrant model
 24593 ;;
 24594                           
 24595                           	psect	text119
 24596  017C76                     __ptext119:
 24597                           	opt callstack 0
 24598  017C76                     _TMR5_WriteTimer:
 24599                           	opt callstack 13
 24600                           
 24601                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24602                           
 24603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24604                           ;incstack = 0
 24605  017C76  A49A               	btfss	154,2,c	;volatile
 24606  017C78  D00F               	goto	l8791
 24607                           
 24608                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24609  017C7A  909A               	bcf	154,0,c	;volatile
 24610                           
 24611                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24612                           ;stkvar	_timerVal @ sp[(0)+-2]
 24613  017C7C  0EFF               	movlw	255
 24614  017C7E  24E1               	addwf	fsr1l,w,c
 24615  017C80  6ED9               	movwf	fsr2l,c
 24616  017C82  0EFF               	movlw	255
 24617  017C84  20E2               	addwfc	fsr1h,w,c
 24618  017C86  6EDA               	movwf	fsr2h,c
 24619  017C88  50DF               	movf	indf2,w,c
 24620  017C8A  6E99               	movwf	153,c	;volatile
 24621                           
 24622                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24623                           ;stkvar	_timerVal @ sp[(0)+-2]
 24624  017C8C  0EFE               	movlw	-2
 24625  017C8E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24626                           
 24627                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24628  017C94  809A               	bsf	154,0,c	;volatile
 24629                           
 24630                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24631  017C96  D00C               	goto	l1028
 24632  017C98                     l8791:
 24633                           
 24634                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24635                           ;stkvar	_timerVal @ sp[(0)+-2]
 24636  017C98  0EFF               	movlw	255
 24637  017C9A  24E1               	addwf	fsr1l,w,c
 24638  017C9C  6ED9               	movwf	fsr2l,c
 24639  017C9E  0EFF               	movlw	255
 24640  017CA0  20E2               	addwfc	fsr1h,w,c
 24641  017CA2  6EDA               	movwf	fsr2h,c
 24642  017CA4  50DF               	movf	indf2,w,c
 24643  017CA6  6E99               	movwf	153,c	;volatile
 24644                           
 24645                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24646                           ;stkvar	_timerVal @ sp[(0)+-2]
 24647  017CA8  0EFE               	movlw	-2
 24648  017CAA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24649  017CB0                     l1028:
 24650                           
 24651                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24652  017CB0  52E5               	movf	postdec1,f,c
 24653  017CB2  52E5               	movf	postdec1,f,c
 24654  017CB4  0012               	return		;funcret
 24655  017CB6                     __end_of_TMR5_WriteTimer:
 24656                           	opt callstack 0
 24657                           
 24658 ;; *************** function _TMR5_CallBack *****************
 24659 ;; Defined at:
 24660 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24661 ;; Parameters:    Size  Location     Type
 24662 ;;		None
 24663 ;; Auto vars:     Size  Location     Type
 24664 ;;		None
 24665 ;; Return value:  Size  Location     Type
 24666 ;;                  1  [STACK] void 
 24667 ;; Registers used:
 24668 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24669 ;; Tracked objects:
 24670 ;;		On entry : 3F/1
 24671 ;;		On exit  : 0/0
 24672 ;;		Unchanged: 0/0
 24673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24678 ;;Total ram usage:        0 bytes
 24679 ;; Hardware stack levels used:    1
 24680 ;; Hardware stack levels required when called:    4
 24681 ;; This function calls:
 24682 ;;		Absolute function
 24683 ;;		_TMR5_DefaultInterruptHandler
 24684 ;; This function is called by:
 24685 ;;		_TMR5_ISR
 24686 ;; This function uses a reentrant model
 24687 ;;
 24688                           
 24689                           	psect	text120
 24690  0182F6                     __ptext120:
 24691                           	opt callstack 0
 24692  0182F6                     _TMR5_CallBack:
 24693                           	opt callstack 12
 24694                           
 24695                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24696                           
 24697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24698                           ;incstack = 0
 24699  0182F6  0100               	movlb	0	; () banked
 24700  0182F8  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24701  0182FA  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24702  0182FC  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24703  0182FE  B4D8               	btfsc	status,2,c
 24704  018300  0012               	return	
 24705                           
 24706                           ; BSR set to: 0
 24707                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24708  018302  D801               	call	u843_28
 24709  018304  0012               	return	
 24710  018306                     u843_28:
 24711  018306  0005               	push	
 24712  018308  6EFA               	movwf	pclath,c
 24713  01830A  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24714  01830C  6EFD               	movwf	tosl,c
 24715  01830E  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24716  018310  6EFE               	movwf	tosh,c
 24717  018312  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24718  018314  6EFF               	movwf	tosu,c
 24719  018316  50FA               	movf	pclath,w,c
 24720  018318  0012               	return		;indir
 24721  01831A                     __end_of_TMR5_CallBack:
 24722                           	opt callstack 0
 24723                           
 24724 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24725 ;; Defined at:
 24726 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24727 ;; Parameters:    Size  Location     Type
 24728 ;;		None
 24729 ;; Auto vars:     Size  Location     Type
 24730 ;;		None
 24731 ;; Return value:  Size  Location     Type
 24732 ;;                  1  [STACK] void 
 24733 ;; Registers used:
 24734 ;;		wreg, status,2, status,0, btemp+11
 24735 ;; Tracked objects:
 24736 ;;		On entry : 3F/0
 24737 ;;		On exit  : 3F/1
 24738 ;;		Unchanged: 0/0
 24739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24744 ;;Total ram usage:        0 bytes
 24745 ;; Hardware stack levels used:    1
 24746 ;; Hardware stack levels required when called:    3
 24747 ;; This function calls:
 24748 ;;		Nothing
 24749 ;; This function is called by:
 24750 ;;		_TMR5_Initialize
 24751 ;;		_TMR5_CallBack
 24752 ;; This function uses a reentrant model
 24753 ;;
 24754                           
 24755                           	psect	text121
 24756  01820A                     __ptext121:
 24757                           	opt callstack 0
 24758  01820A                     _TMR5_DefaultInterruptHandler:
 24759                           	opt callstack 12
 24760                           
 24761                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 24762                           
 24763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24764                           ;incstack = 0
 24765  01820A  A0BE               	btfss	190,0,c	;volatile
 24766  01820C  D002               	goto	u799_20
 24767  01820E  0E01               	movlw	1
 24768  018210  D001               	goto	u799_26
 24769  018212                     u799_20:
 24770  018212  0E00               	movlw	0
 24771  018214                     u799_26:
 24772  018214  0AFF               	xorlw	255
 24773  018216  6E3D               	movwf	(btemp+11)^0,c
 24774  018218  50BE               	movf	190,w,c	;volatile
 24775  01821A  183D               	xorwf	(btemp+11)^0,w,c
 24776  01821C  0BFE               	andlw	-2
 24777  01821E  183D               	xorwf	(btemp+11)^0,w,c
 24778  018220  6EBE               	movwf	190,c	;volatile
 24779                           
 24780                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 24781  018222  0E01               	movlw	1
 24782  018224  0101               	movlb	1	; () banked
 24783  018226  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 24784  018228  0E00               	movlw	0
 24785  01822A  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 24786  01822C  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 24787  01822E  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 24788                           
 24789                           ; BSR set to: 1
 24790                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24791  018230  0012               	return		;funcret
 24792  018232                     __end_of_TMR5_DefaultInterruptHandler:
 24793                           	opt callstack 0
 24794                           
 24795 ;; *************** function _INT0_ISR *****************
 24796 ;; Defined at:
 24797 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 24798 ;; Parameters:    Size  Location     Type
 24799 ;;		None
 24800 ;; Auto vars:     Size  Location     Type
 24801 ;;		None
 24802 ;; Return value:  Size  Location     Type
 24803 ;;                  1    wreg      void 
 24804 ;; Registers used:
 24805 ;;		wreg, status,2, status,0, pclath, tosl
 24806 ;; Tracked objects:
 24807 ;;		On entry : 0/0
 24808 ;;		On exit  : 0/0
 24809 ;;		Unchanged: 0/0
 24810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24815 ;;Total ram usage:        0 bytes
 24816 ;; Hardware stack levels used:    1
 24817 ;; Hardware stack levels required when called:    2
 24818 ;; This function calls:
 24819 ;;		_INT0_CallBack
 24820 ;; This function is called by:
 24821 ;;		Interrupt level 2
 24822 ;; This function uses a non-reentrant model
 24823 ;;
 24824                           
 24825                           	psect	text122
 24826  01857C                     __ptext122:
 24827                           	opt callstack 0
 24828  01857C                     _INT0_ISR:
 24829                           	opt callstack 12
 24830                           
 24831                           ; BSR set to: 1
 24832                           ;incstack = 0
 24833  01857C  EE14  F000         	lfsr	1,___inthi_sp
 24834                           
 24835                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 24836  018580  0139               	movlb	57	; () banked
 24837  018582  91A1               	bcf	161,0,b	;volatile
 24838                           
 24839                           ; BSR set to: 57
 24840                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 24841  018584  ECB0  F0C1         	call	_INT0_CallBack	;wreg free
 24842  018588  0011               	retfie		f
 24843  01858A                     __end_of_INT0_ISR:
 24844                           	opt callstack 0
 24845                           
 24846 ;; *************** function _INT0_CallBack *****************
 24847 ;; Defined at:
 24848 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 24849 ;; Parameters:    Size  Location     Type
 24850 ;;		None
 24851 ;; Auto vars:     Size  Location     Type
 24852 ;;		None
 24853 ;; Return value:  Size  Location     Type
 24854 ;;                  1  [STACK] void 
 24855 ;; Registers used:
 24856 ;;		wreg, status,2, status,0, pclath, tosl
 24857 ;; Tracked objects:
 24858 ;;		On entry : 3F/39
 24859 ;;		On exit  : 0/0
 24860 ;;		Unchanged: 0/0
 24861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24866 ;;Total ram usage:        0 bytes
 24867 ;; Hardware stack levels used:    1
 24868 ;; Hardware stack levels required when called:    1
 24869 ;; This function calls:
 24870 ;;		Absolute function
 24871 ;;		_INT0_DefaultInterruptHandler
 24872 ;; This function is called by:
 24873 ;;		_INT0_ISR
 24874 ;; This function uses a reentrant model
 24875 ;;
 24876                           
 24877                           	psect	text123
 24878  018360                     __ptext123:
 24879                           	opt callstack 0
 24880  018360                     _INT0_CallBack:
 24881                           	opt callstack 12
 24882                           
 24883                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 24884                           
 24885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24886                           ;incstack = 0
 24887  018360  5016               	movf	_INT0_InterruptHandler^0,w,c
 24888  018362  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 24889  018364  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 24890  018366  B4D8               	btfsc	status,2,c
 24891  018368  0012               	return	
 24892                           
 24893                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 24894  01836A  D801               	call	u391_48
 24895  01836C  0012               	return	
 24896  01836E                     u391_48:
 24897  01836E  0005               	push	
 24898  018370  6EFA               	movwf	pclath,c
 24899  018372  5016               	movf	_INT0_InterruptHandler^0,w,c
 24900  018374  6EFD               	movwf	tosl,c
 24901  018376  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 24902  018378  6EFE               	movwf	tosh,c
 24903  01837A  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 24904  01837C  6EFF               	movwf	tosu,c
 24905  01837E  50FA               	movf	pclath,w,c
 24906  018380  0012               	return		;indir
 24907  018382                     __end_of_INT0_CallBack:
 24908                           	opt callstack 0
 24909                           
 24910 ;; *************** function _INT0_DefaultInterruptHandler *****************
 24911 ;; Defined at:
 24912 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 24913 ;; Parameters:    Size  Location     Type
 24914 ;;		None
 24915 ;; Auto vars:     Size  Location     Type
 24916 ;;		None
 24917 ;; Return value:  Size  Location     Type
 24918 ;;                  1  [STACK] void 
 24919 ;; Registers used:
 24920 ;;		None
 24921 ;; Tracked objects:
 24922 ;;		On entry : 0/39
 24923 ;;		On exit  : 0/0
 24924 ;;		Unchanged: 0/0
 24925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24930 ;;Total ram usage:        0 bytes
 24931 ;; Hardware stack levels used:    1
 24932 ;; This function calls:
 24933 ;;		Nothing
 24934 ;; This function is called by:
 24935 ;;		_EXT_INT_Initialize
 24936 ;;		_INT0_CallBack
 24937 ;; This function uses a reentrant model
 24938 ;;
 24939                           
 24940                           	psect	text124
 24941  018608                     __ptext124:
 24942                           	opt callstack 0
 24943  018608                     _INT0_DefaultInterruptHandler:
 24944                           	opt callstack 12
 24945                           
 24946                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24947                           
 24948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24949                           ;incstack = 0
 24950  018608  0012               	return		;funcret
 24951  01860A                     __end_of_INT0_DefaultInterruptHandler:
 24952                           	opt callstack 0
 24953                           
 24954 ;; *************** function _Default_ISR *****************
 24955 ;; Defined at:
 24956 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24957 ;; Parameters:    Size  Location     Type
 24958 ;;		None
 24959 ;; Auto vars:     Size  Location     Type
 24960 ;;		None
 24961 ;; Return value:  Size  Location     Type
 24962 ;;                  1    wreg      void 
 24963 ;; Registers used:
 24964 ;;		None
 24965 ;; Tracked objects:
 24966 ;;		On entry : 0/0
 24967 ;;		On exit  : 0/0
 24968 ;;		Unchanged: 0/0
 24969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;Total ram usage:        0 bytes
 24975 ;; Hardware stack levels used:    1
 24976 ;; This function calls:
 24977 ;;		Nothing
 24978 ;; This function is called by:
 24979 ;;		Interrupt level 2
 24980 ;; This function uses a non-reentrant model
 24981 ;;
 24982                           
 24983                           	psect	text125
 24984  018600                     __ptext125:
 24985                           	opt callstack 0
 24986  018600                     _Default_ISR:
 24987                           	opt callstack 14
 24988                           
 24989                           ;incstack = 0
 24990  018600  EE14  F000         	lfsr	1,___inthi_sp
 24991  018604  0011               	retfie		f
 24992  018606                     __end_of_Default_ISR:
 24993                           	opt callstack 0
 24994                           
 24995 ;; *************** function _ADCC_ISR *****************
 24996 ;; Defined at:
 24997 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24998 ;; Parameters:    Size  Location     Type
 24999 ;;		None
 25000 ;; Auto vars:     Size  Location     Type
 25001 ;;		None
 25002 ;; Return value:  Size  Location     Type
 25003 ;;                  1    wreg      void 
 25004 ;; Registers used:
 25005 ;;		wreg, status,2, status,0, pclath, tosl
 25006 ;; Tracked objects:
 25007 ;;		On entry : 0/0
 25008 ;;		On exit  : 0/0
 25009 ;;		Unchanged: 0/0
 25010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25015 ;;Total ram usage:        0 bytes
 25016 ;; Hardware stack levels used:    1
 25017 ;; Hardware stack levels required when called:    1
 25018 ;; This function calls:
 25019 ;;		Absolute function
 25020 ;;		_ADCC_DefaultInterruptHandler
 25021 ;;		_adc_int_handler
 25022 ;; This function is called by:
 25023 ;;		Interrupt level 2
 25024 ;; This function uses a non-reentrant model
 25025 ;;
 25026                           
 25027                           	psect	text126
 25028  017FB0                     __ptext126:
 25029                           	opt callstack 0
 25030  017FB0                     _ADCC_ISR:
 25031                           	opt callstack 13
 25032                           
 25033                           ;incstack = 0
 25034  017FB0  EE14  F000         	lfsr	1,___inthi_sp
 25035                           
 25036                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25037  017FB4  0139               	movlb	57	; () banked
 25038  017FB6  95A1               	bcf	161,2,b	;volatile
 25039                           
 25040                           ; BSR set to: 57
 25041                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25042  017FB8  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25043  017FBA  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25044  017FBC  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25045  017FBE  B4D8               	btfsc	status,2,c
 25046  017FC0  0011               	retfie		f
 25047                           
 25048                           ; BSR set to: 57
 25049                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25050  017FC2  D801               	call	i2u420_48
 25051  017FC4  0011               	retfie		f
 25052  017FC6                     i2u420_48:
 25053  017FC6  0005               	push	
 25054  017FC8  6EFA               	movwf	pclath,c
 25055  017FCA  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25056  017FCC  6EFD               	movwf	tosl,c
 25057  017FCE  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25058  017FD0  6EFE               	movwf	tosh,c
 25059  017FD2  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25060  017FD4  6EFF               	movwf	tosu,c
 25061  017FD6  50FA               	movf	pclath,w,c
 25062  017FD8  0012               	return		;indir
 25063  017FDA                     __end_of_ADCC_ISR:
 25064                           	opt callstack 0
 25065                           
 25066 ;; *************** function _adc_int_t_handler *****************
 25067 ;; Defined at:
 25068 ;;		line 128 in file "daq.c"
 25069 ;; Parameters:    Size  Location     Type
 25070 ;;		None
 25071 ;; Auto vars:     Size  Location     Type
 25072 ;;		None
 25073 ;; Return value:  Size  Location     Type
 25074 ;;                  1  [STACK] void 
 25075 ;; Registers used:
 25076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25077 ;; Tracked objects:
 25078 ;;		On entry : 3F/39
 25079 ;;		On exit  : 1/0
 25080 ;;		Unchanged: 0/0
 25081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25086 ;;Total ram usage:        0 bytes
 25087 ;; Hardware stack levels used:    1
 25088 ;; Hardware stack levels required when called:    1
 25089 ;; This function calls:
 25090 ;;		_ADCC_DischargeSampleCapacitor
 25091 ;;		_ADCC_StartConversion
 25092 ;; This function is called by:
 25093 ;;		_start_adc_scan
 25094 ;;		_ADCC_ThresholdISR
 25095 ;; This function uses a reentrant model
 25096 ;;
 25097                           
 25098                           	psect	text127
 25099  017414                     __ptext127:
 25100                           	opt callstack 0
 25101  017414                     _adc_int_t_handler:
 25102                           	opt callstack 12
 25103                           
 25104                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25105                           
 25106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25107                           ;incstack = 0
 25108  017414  013E               	movlb	62	; () banked
 25109  017416  51E6               	movf	230,w,b	;volatile
 25110  017418  006F FB9C  F032    	movff	16103,btemp	;volatile
 25111  01741E  6A33               	clrf	(btemp+1)^0,c
 25112  017420  0060  F0C8  F033   	movff	btemp,btemp+1
 25113  017426  6A32               	clrf	btemp^0,c
 25114  017428  2632               	addwf	btemp^0,f,c
 25115  01742A  0E00               	movlw	0
 25116  01742C  2233               	addwfc	(btemp+1)^0,f,c
 25117  01742E  0100               	movlb	0	; () banked
 25118  017430  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25119  017432  0D02               	mullw	2
 25120  017434  50F3               	movf	243,w,c
 25121  017436  0FC7               	addlw	low _R
 25122  017438  6ED9               	movwf	fsr2l,c
 25123  01743A  6ADA               	clrf	fsr2h,c
 25124  01743C  0060  F0CB  FFDE   	movff	btemp,postinc2
 25125  017442  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25126  017448                     l11969:
 25127                           
 25128                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 25129  017448  0100               	movlb	0	; () banked
 25130  01744A  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25131  01744C  0E0D               	movlw	13
 25132  01744E  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25133  017450  D003               	goto	l11975
 25134                           
 25135                           ; BSR set to: 0
 25136                           ;daq.c: 136:    R.done = 1;
 25137  017452  0E01               	movlw	1
 25138  017454  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25139  017456  0012               	return	
 25140  017458                     l11975:
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25144  017458  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25145  01745E  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25146  017462  006F FF78  F03A    	movff	postinc2,btemp+8
 25147  017468  006F FF74  F03B    	movff	postdec2,btemp+9
 25148  01746E  2A3D               	incf	(btemp+11)^0,f,c
 25149  017470  D003               	goto	u1267_44
 25150  017472                     u1267_45:
 25151  017472  90D8               	bcf	status,0,c
 25152  017474  323B               	rrcf	(btemp+9)^0,f,c
 25153  017476  323A               	rrcf	(btemp+8)^0,f,c
 25154  017478                     u1267_44:
 25155  017478  2E3D               	decfsz	(btemp+11)^0,f,c
 25156  01747A  D7FB               	goto	u1267_45
 25157  01747C  A03A               	btfss	(btemp+8)^0,0,c
 25158  01747E  D7E4               	goto	l11969
 25159                           
 25160                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 25161  017480  ECE3  F0C2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25162                           
 25163                           ; BSR set to: 62
 25164                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 25165  017484  0100               	movlb	0	; () banked
 25166  017486  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25167  017488  0B0F               	andlw	15
 25168  01748A  6EE6               	movwf	postinc1,c
 25169  01748C  EC96  F0C2         	call	_ADCC_StartConversion	;wreg free
 25170                           
 25171                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25172  017490  0012               	return		;funcret
 25173  017492                     __end_of_adc_int_t_handler:
 25174                           	opt callstack 0
 25175                           
 25176 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25177 ;; Defined at:
 25178 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25179 ;; Parameters:    Size  Location     Type
 25180 ;;		None
 25181 ;; Auto vars:     Size  Location     Type
 25182 ;;		None
 25183 ;; Return value:  Size  Location     Type
 25184 ;;                  1  [STACK] void 
 25185 ;; Registers used:
 25186 ;;		None
 25187 ;; Tracked objects:
 25188 ;;		On entry : 3F/39
 25189 ;;		On exit  : 0/0
 25190 ;;		Unchanged: 0/0
 25191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25196 ;;Total ram usage:        0 bytes
 25197 ;; Hardware stack levels used:    1
 25198 ;; This function calls:
 25199 ;;		Nothing
 25200 ;; This function is called by:
 25201 ;;		_ADCC_Initialize
 25202 ;;		_ADCC_ISR
 25203 ;;		_ADCC_ThresholdISR
 25204 ;; This function uses a reentrant model
 25205 ;;
 25206                           
 25207                           	psect	text128
 25208  01860A                     __ptext128:
 25209                           	opt callstack 0
 25210  01860A                     _ADCC_DefaultInterruptHandler:
 25211                           	opt callstack 13
 25212                           
 25213                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25214                           
 25215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25216                           ;incstack = 0
 25217  01860A  0012               	return		;funcret
 25218  01860C                     __end_of_ADCC_DefaultInterruptHandler:
 25219                           	opt callstack 0
 25220                           
 25221 ;; *************** function _adc_int_handler *****************
 25222 ;; Defined at:
 25223 ;;		line 118 in file "daq.c"
 25224 ;; Parameters:    Size  Location     Type
 25225 ;;		None
 25226 ;; Auto vars:     Size  Location     Type
 25227 ;;		None
 25228 ;; Return value:  Size  Location     Type
 25229 ;;                  1  [STACK] void 
 25230 ;; Registers used:
 25231 ;;		None
 25232 ;; Tracked objects:
 25233 ;;		On entry : 3F/39
 25234 ;;		On exit  : 0/0
 25235 ;;		Unchanged: 0/0
 25236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25241 ;;Total ram usage:        0 bytes
 25242 ;; Hardware stack levels used:    1
 25243 ;; This function calls:
 25244 ;;		Nothing
 25245 ;; This function is called by:
 25246 ;;		_start_adc_scan
 25247 ;;		_ADCC_ISR
 25248 ;; This function uses a reentrant model
 25249 ;;
 25250                           
 25251                           	psect	text129
 25252  01860C                     __ptext129:
 25253                           	opt callstack 0
 25254  01860C                     _adc_int_handler:
 25255                           	opt callstack 13
 25256                           
 25257                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25258                           
 25259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25260                           ;incstack = 0
 25261  01860C  0012               	return		;funcret
 25262  01860E                     __end_of_adc_int_handler:
 25263                           	opt callstack 0
 25264                           
 25265 ;; *************** function _ADCC_ThresholdISR *****************
 25266 ;; Defined at:
 25267 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25268 ;; Parameters:    Size  Location     Type
 25269 ;;		None
 25270 ;; Auto vars:     Size  Location     Type
 25271 ;;		None
 25272 ;; Return value:  Size  Location     Type
 25273 ;;                  1    wreg      void 
 25274 ;; Registers used:
 25275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25276 ;; Tracked objects:
 25277 ;;		On entry : 0/0
 25278 ;;		On exit  : 0/0
 25279 ;;		Unchanged: 0/0
 25280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25283 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25284 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25285 ;;Total ram usage:        5 bytes
 25286 ;; Hardware stack levels used:    1
 25287 ;; Hardware stack levels required when called:    2
 25288 ;; This function calls:
 25289 ;;		Absolute function
 25290 ;;		_ADCC_DefaultInterruptHandler
 25291 ;;		_adc_int_t_handler
 25292 ;; This function is called by:
 25293 ;;		Interrupt level 2
 25294 ;; This function uses a non-reentrant model
 25295 ;;
 25296                           
 25297                           	psect	text130
 25298  0175E0                     __ptext130:
 25299                           	opt callstack 0
 25300  0175E0                     _ADCC_ThresholdISR:
 25301                           	opt callstack 12
 25302                           
 25303                           ;incstack = 0
 25304  0175E0  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25305  0175E6  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25306  0175EC  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25307  0175F2  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25308  0175F8  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25309  0175FE  EE14  F000         	lfsr	1,___inthi_sp
 25310                           
 25311                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25312  017602  0139               	movlb	57	; () banked
 25313  017604  97A1               	bcf	161,3,b	;volatile
 25314                           
 25315                           ; BSR set to: 57
 25316                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25317  017606  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25318  017608  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25319  01760A  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25320  01760C  B4D8               	btfsc	status,2,c
 25321  01760E  D00C               	goto	i2u1270_49
 25322                           
 25323                           ; BSR set to: 57
 25324                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25325  017610  D801               	call	i2u1270_48
 25326  017612  D00A               	goto	i2u1270_49
 25327  017614                     i2u1270_48:
 25328  017614  0005               	push	
 25329  017616  6EFA               	movwf	pclath,c
 25330  017618  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25331  01761A  6EFD               	movwf	tosl,c
 25332  01761C  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25333  01761E  6EFE               	movwf	tosh,c
 25334  017620  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25335  017622  6EFF               	movwf	tosu,c
 25336  017624  50FA               	movf	pclath,w,c
 25337  017626  0012               	return		;indir
 25338  017628                     i2u1270_49:
 25339  017628  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25340  01762E  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25341  017634  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25342  01763A  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25343  017640  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25344  017646  0011               	retfie		f
 25345  017648                     __end_of_ADCC_ThresholdISR:
 25346                           	opt callstack 0
 25347                           
 25348 ;; *************** function _UART1_tx_vect_isr *****************
 25349 ;; Defined at:
 25350 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25351 ;; Parameters:    Size  Location     Type
 25352 ;;		None
 25353 ;; Auto vars:     Size  Location     Type
 25354 ;;		None
 25355 ;; Return value:  Size  Location     Type
 25356 ;;                  1    wreg      void 
 25357 ;; Registers used:
 25358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25359 ;; Tracked objects:
 25360 ;;		On entry : 0/0
 25361 ;;		On exit  : 0/0
 25362 ;;		Unchanged: 0/0
 25363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25368 ;;Total ram usage:        0 bytes
 25369 ;; Hardware stack levels used:    1
 25370 ;; Hardware stack levels required when called:    1
 25371 ;; This function calls:
 25372 ;;		Absolute function
 25373 ;;		_UART1_Transmit_ISR
 25374 ;; This function is called by:
 25375 ;;		Interrupt level 2
 25376 ;; This function uses a non-reentrant model
 25377 ;;
 25378                           
 25379                           	psect	text131
 25380  018234                     __ptext131:
 25381                           	opt callstack 0
 25382  018234                     _UART1_tx_vect_isr:
 25383                           	opt callstack 13
 25384                           
 25385                           ;incstack = 0
 25386  018234  EE14  F000         	lfsr	1,___inthi_sp
 25387                           
 25388                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25389  018238  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25390  01823A  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25391  01823C  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25392  01823E  B4D8               	btfsc	status,2,c
 25393  018240  0011               	retfie		f
 25394                           
 25395                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25396  018242  D801               	call	i2u861_48
 25397  018244  0011               	retfie		f
 25398  018246                     i2u861_48:
 25399  018246  0005               	push	
 25400  018248  6EFA               	movwf	pclath,c
 25401  01824A  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25402  01824C  6EFD               	movwf	tosl,c
 25403  01824E  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25404  018250  6EFE               	movwf	tosh,c
 25405  018252  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25406  018254  6EFF               	movwf	tosu,c
 25407  018256  50FA               	movf	pclath,w,c
 25408  018258  0012               	return		;indir
 25409  01825A                     __end_of_UART1_tx_vect_isr:
 25410                           	opt callstack 0
 25411                           
 25412 ;; *************** function _UART1_Transmit_ISR *****************
 25413 ;; Defined at:
 25414 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25415 ;; Parameters:    Size  Location     Type
 25416 ;;		None
 25417 ;; Auto vars:     Size  Location     Type
 25418 ;;		None
 25419 ;; Return value:  Size  Location     Type
 25420 ;;                  1  [STACK] void 
 25421 ;; Registers used:
 25422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25423 ;; Tracked objects:
 25424 ;;		On entry : 0/0
 25425 ;;		On exit  : 3B/39
 25426 ;;		Unchanged: 0/0
 25427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25432 ;;Total ram usage:        0 bytes
 25433 ;; Hardware stack levels used:    1
 25434 ;; This function calls:
 25435 ;;		Nothing
 25436 ;; This function is called by:
 25437 ;;		_UART1_Initialize
 25438 ;;		_UART1_tx_vect_isr
 25439 ;; This function uses a reentrant model
 25440 ;;
 25441                           
 25442                           	psect	text132
 25443  017F2C                     __ptext132:
 25444                           	opt callstack 0
 25445  017F2C                     _UART1_Transmit_ISR:
 25446                           	opt callstack 13
 25447                           
 25448                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25449                           
 25450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25451                           ;incstack = 0
 25452  017F2C  0E40               	movlw	64
 25453  017F2E  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25454  017F30  D010               	goto	l581
 25455                           
 25456                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25457  017F32  0EAC               	movlw	low _uart1TxBuffer
 25458  017F34  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25459  017F36  6ED9               	movwf	fsr2l,c
 25460  017F38  6ADA               	clrf	fsr2h,c
 25461  017F3A  0E03               	movlw	high _uart1TxBuffer
 25462  017F3C  22DA               	addwfc	fsr2h,f,c
 25463  017F3E  50DF               	movf	indf2,w,c
 25464  017F40  013D               	movlb	61	; () banked
 25465  017F42  6FEA               	movwf	234,b	;volatile
 25466                           
 25467                           ; BSR set to: 61
 25468  017F44  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25469                           
 25470                           ; BSR set to: 61
 25471                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25472  017F46  0E3F               	movlw	63
 25473  017F48  6430               	cpfsgt	_uart1TxTail^0,c
 25474  017F4A  D001               	goto	l8743
 25475                           
 25476                           ; BSR set to: 61
 25477                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25478  017F4C  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25479  017F4E                     l8743:
 25480                           
 25481                           ; BSR set to: 61
 25482                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25483  017F4E  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25484                           
 25485                           ;mcc_generated_files/uart1.c: 222:  } else {
 25486  017F50  0012               	return	
 25487  017F52                     l581:
 25488                           
 25489                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25490  017F52  0139               	movlb	57	; () banked
 25491  017F54  9993               	bcf	147,4,b	;volatile
 25492                           
 25493                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25494  017F56  0012               	return		;funcret
 25495  017F58                     __end_of_UART1_Transmit_ISR:
 25496                           	opt callstack 0
 25497                           
 25498 ;; *************** function _UART1_rx_vect_isr *****************
 25499 ;; Defined at:
 25500 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25501 ;; Parameters:    Size  Location     Type
 25502 ;;		None
 25503 ;; Auto vars:     Size  Location     Type
 25504 ;;		None
 25505 ;; Return value:  Size  Location     Type
 25506 ;;                  1    wreg      void 
 25507 ;; Registers used:
 25508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25509 ;; Tracked objects:
 25510 ;;		On entry : 0/0
 25511 ;;		On exit  : 0/0
 25512 ;;		Unchanged: 0/0
 25513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25518 ;;Total ram usage:        0 bytes
 25519 ;; Hardware stack levels used:    1
 25520 ;; Hardware stack levels required when called:    1
 25521 ;; This function calls:
 25522 ;;		Absolute function
 25523 ;;		_UART1_Receive_ISR
 25524 ;; This function is called by:
 25525 ;;		Interrupt level 2
 25526 ;; This function uses a non-reentrant model
 25527 ;;
 25528                           
 25529                           	psect	text133
 25530  01825C                     __ptext133:
 25531                           	opt callstack 0
 25532  01825C                     _UART1_rx_vect_isr:
 25533                           	opt callstack 13
 25534                           
 25535                           ;incstack = 0
 25536  01825C  EE14  F000         	lfsr	1,___inthi_sp
 25537                           
 25538                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25539  018260  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25540  018262  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25541  018264  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25542  018266  B4D8               	btfsc	status,2,c
 25543  018268  0011               	retfie		f
 25544                           
 25545                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25546  01826A  D801               	call	i2u863_48
 25547  01826C  0011               	retfie		f
 25548  01826E                     i2u863_48:
 25549  01826E  0005               	push	
 25550  018270  6EFA               	movwf	pclath,c
 25551  018272  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25552  018274  6EFD               	movwf	tosl,c
 25553  018276  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25554  018278  6EFE               	movwf	tosh,c
 25555  01827A  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25556  01827C  6EFF               	movwf	tosu,c
 25557  01827E  50FA               	movf	pclath,w,c
 25558  018280  0012               	return		;indir
 25559  018282                     __end_of_UART1_rx_vect_isr:
 25560                           	opt callstack 0
 25561                           
 25562 ;; *************** function _UART1_Receive_ISR *****************
 25563 ;; Defined at:
 25564 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25565 ;; Parameters:    Size  Location     Type
 25566 ;;		None
 25567 ;; Auto vars:     Size  Location     Type
 25568 ;;		None
 25569 ;; Return value:  Size  Location     Type
 25570 ;;                  1  [STACK] void 
 25571 ;; Registers used:
 25572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25573 ;; Tracked objects:
 25574 ;;		On entry : 0/0
 25575 ;;		On exit  : 0/0
 25576 ;;		Unchanged: 0/0
 25577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25582 ;;Total ram usage:        0 bytes
 25583 ;; Hardware stack levels used:    1
 25584 ;; This function calls:
 25585 ;;		Nothing
 25586 ;; This function is called by:
 25587 ;;		_UART1_Initialize
 25588 ;;		_UART1_rx_vect_isr
 25589 ;; This function uses a reentrant model
 25590 ;;
 25591                           
 25592                           	psect	text134
 25593  0183FC                     __ptext134:
 25594                           	opt callstack 0
 25595  0183FC                     _UART1_Receive_ISR:
 25596                           	opt callstack 13
 25597                           
 25598                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25599                           
 25600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25601                           ;incstack = 0
 25602  0183FC  0E00               	movlw	low _uart1RxBuffer
 25603  0183FE  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25604  018400  6ED9               	movwf	fsr2l,c
 25605  018402  6ADA               	clrf	fsr2h,c
 25606  018404  0E06               	movlw	high _uart1RxBuffer
 25607  018406  22DA               	addwfc	fsr2h,f,c
 25608  018408  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25609  01840E  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25610                           
 25611                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25612  018410  282E               	incf	_uart1RxHead^0,w,c
 25613  018412  B4D8               	btfsc	status,2,c
 25614                           
 25615                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25616  018414  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25617                           
 25618                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25619  018416  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25620                           
 25621                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25622  018418  0012               	return		;funcret
 25623  01841A                     __end_of_UART1_Receive_ISR:
 25624                           	opt callstack 0
 25625                           
 25626 ;; *************** function _UART2_tx_vect_isr *****************
 25627 ;; Defined at:
 25628 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25629 ;; Parameters:    Size  Location     Type
 25630 ;;		None
 25631 ;; Auto vars:     Size  Location     Type
 25632 ;;		None
 25633 ;; Return value:  Size  Location     Type
 25634 ;;                  1    wreg      void 
 25635 ;; Registers used:
 25636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25637 ;; Tracked objects:
 25638 ;;		On entry : 0/0
 25639 ;;		On exit  : 0/0
 25640 ;;		Unchanged: 0/0
 25641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25646 ;;Total ram usage:        0 bytes
 25647 ;; Hardware stack levels used:    1
 25648 ;; Hardware stack levels required when called:    1
 25649 ;; This function calls:
 25650 ;;		Absolute function
 25651 ;;		_UART2_Transmit_ISR
 25652 ;; This function is called by:
 25653 ;;		Interrupt level 2
 25654 ;; This function uses a non-reentrant model
 25655 ;;
 25656                           
 25657                           	psect	text135
 25658  018284                     __ptext135:
 25659                           	opt callstack 0
 25660  018284                     _UART2_tx_vect_isr:
 25661                           	opt callstack 13
 25662                           
 25663                           ;incstack = 0
 25664  018284  EE14  F000         	lfsr	1,___inthi_sp
 25665                           
 25666                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25667  018288  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25668  01828A  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25669  01828C  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25670  01828E  B4D8               	btfsc	status,2,c
 25671  018290  0011               	retfie		f
 25672                           
 25673                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25674  018292  D801               	call	i2u865_48
 25675  018294  0011               	retfie		f
 25676  018296                     i2u865_48:
 25677  018296  0005               	push	
 25678  018298  6EFA               	movwf	pclath,c
 25679  01829A  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25680  01829C  6EFD               	movwf	tosl,c
 25681  01829E  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25682  0182A0  6EFE               	movwf	tosh,c
 25683  0182A2  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25684  0182A4  6EFF               	movwf	tosu,c
 25685  0182A6  50FA               	movf	pclath,w,c
 25686  0182A8  0012               	return		;indir
 25687  0182AA                     __end_of_UART2_tx_vect_isr:
 25688                           	opt callstack 0
 25689                           
 25690 ;; *************** function _UART2_Transmit_ISR *****************
 25691 ;; Defined at:
 25692 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25693 ;; Parameters:    Size  Location     Type
 25694 ;;		None
 25695 ;; Auto vars:     Size  Location     Type
 25696 ;;		None
 25697 ;; Return value:  Size  Location     Type
 25698 ;;                  1  [STACK] void 
 25699 ;; Registers used:
 25700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25701 ;; Tracked objects:
 25702 ;;		On entry : 0/0
 25703 ;;		On exit  : 3B/39
 25704 ;;		Unchanged: 0/0
 25705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25710 ;;Total ram usage:        0 bytes
 25711 ;; Hardware stack levels used:    1
 25712 ;; This function calls:
 25713 ;;		Nothing
 25714 ;; This function is called by:
 25715 ;;		_UART2_Initialize
 25716 ;;		_UART2_tx_vect_isr
 25717 ;; This function uses a reentrant model
 25718 ;;
 25719                           
 25720                           	psect	text136
 25721  017F58                     __ptext136:
 25722                           	opt callstack 0
 25723  017F58                     _UART2_Transmit_ISR:
 25724                           	opt callstack 13
 25725                           
 25726                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25727                           
 25728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25729                           ;incstack = 0
 25730  017F58  0E40               	movlw	64
 25731  017F5A  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25732  017F5C  D010               	goto	l701
 25733                           
 25734                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25735  017F5E  0E6C               	movlw	low _uart2TxBuffer
 25736  017F60  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25737  017F62  6ED9               	movwf	fsr2l,c
 25738  017F64  6ADA               	clrf	fsr2h,c
 25739  017F66  0E03               	movlw	high _uart2TxBuffer
 25740  017F68  22DA               	addwfc	fsr2h,f,c
 25741  017F6A  50DF               	movf	indf2,w,c
 25742  017F6C  013D               	movlb	61	; () banked
 25743  017F6E  6FD2               	movwf	210,b	;volatile
 25744                           
 25745                           ; BSR set to: 61
 25746  017F70  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25747                           
 25748                           ; BSR set to: 61
 25749                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25750  017F72  0E3F               	movlw	63
 25751  017F74  642A               	cpfsgt	_uart2TxTail^0,c
 25752  017F76  D001               	goto	l8765
 25753                           
 25754                           ; BSR set to: 61
 25755                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25756  017F78  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 25757  017F7A                     l8765:
 25758                           
 25759                           ; BSR set to: 61
 25760                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25761  017F7A  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25762                           
 25763                           ;mcc_generated_files/uart2.c: 224:     }
 25764  017F7C  0012               	return	
 25765  017F7E                     l701:
 25766                           
 25767                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25768  017F7E  0139               	movlb	57	; () banked
 25769  017F80  9796               	bcf	150,3,b	;volatile
 25770                           
 25771                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25772  017F82  0012               	return		;funcret
 25773  017F84                     __end_of_UART2_Transmit_ISR:
 25774                           	opt callstack 0
 25775                           
 25776 ;; *************** function _UART2_rx_vect_isr *****************
 25777 ;; Defined at:
 25778 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25779 ;; Parameters:    Size  Location     Type
 25780 ;;		None
 25781 ;; Auto vars:     Size  Location     Type
 25782 ;;		None
 25783 ;; Return value:  Size  Location     Type
 25784 ;;                  1    wreg      void 
 25785 ;; Registers used:
 25786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25787 ;; Tracked objects:
 25788 ;;		On entry : 0/0
 25789 ;;		On exit  : 0/0
 25790 ;;		Unchanged: 0/0
 25791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25796 ;;Total ram usage:        0 bytes
 25797 ;; Hardware stack levels used:    1
 25798 ;; Hardware stack levels required when called:    1
 25799 ;; This function calls:
 25800 ;;		Absolute function
 25801 ;;		_UART2_Receive_ISR
 25802 ;; This function is called by:
 25803 ;;		Interrupt level 2
 25804 ;; This function uses a non-reentrant model
 25805 ;;
 25806                           
 25807                           	psect	text137
 25808  0182AC                     __ptext137:
 25809                           	opt callstack 0
 25810  0182AC                     _UART2_rx_vect_isr:
 25811                           	opt callstack 13
 25812                           
 25813                           ;incstack = 0
 25814  0182AC  EE14  F000         	lfsr	1,___inthi_sp
 25815                           
 25816                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25817  0182B0  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25818  0182B2  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 25819  0182B4  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25820  0182B6  B4D8               	btfsc	status,2,c
 25821  0182B8  0011               	retfie		f
 25822                           
 25823                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25824  0182BA  D801               	call	i2u867_48
 25825  0182BC  0011               	retfie		f
 25826  0182BE                     i2u867_48:
 25827  0182BE  0005               	push	
 25828  0182C0  6EFA               	movwf	pclath,c
 25829  0182C2  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25830  0182C4  6EFD               	movwf	tosl,c
 25831  0182C6  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25832  0182C8  6EFE               	movwf	tosh,c
 25833  0182CA  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25834  0182CC  6EFF               	movwf	tosu,c
 25835  0182CE  50FA               	movf	pclath,w,c
 25836  0182D0  0012               	return		;indir
 25837  0182D2                     __end_of_UART2_rx_vect_isr:
 25838                           	opt callstack 0
 25839                           
 25840 ;; *************** function _UART2_Receive_ISR *****************
 25841 ;; Defined at:
 25842 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25843 ;; Parameters:    Size  Location     Type
 25844 ;;		None
 25845 ;; Auto vars:     Size  Location     Type
 25846 ;;		None
 25847 ;; Return value:  Size  Location     Type
 25848 ;;                  1  [STACK] void 
 25849 ;; Registers used:
 25850 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25851 ;; Tracked objects:
 25852 ;;		On entry : 0/0
 25853 ;;		On exit  : 0/0
 25854 ;;		Unchanged: 0/0
 25855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25860 ;;Total ram usage:        0 bytes
 25861 ;; Hardware stack levels used:    1
 25862 ;; This function calls:
 25863 ;;		Nothing
 25864 ;; This function is called by:
 25865 ;;		_UART2_Initialize
 25866 ;;		_UART2_rx_vect_isr
 25867 ;; This function uses a reentrant model
 25868 ;;
 25869                           
 25870                           	psect	text138
 25871  01841A                     __ptext138:
 25872                           	opt callstack 0
 25873  01841A                     _UART2_Receive_ISR:
 25874                           	opt callstack 13
 25875                           
 25876                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25877                           
 25878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25879                           ;incstack = 0
 25880  01841A  0E00               	movlw	low _uart2RxBuffer
 25881  01841C  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 25882  01841E  6ED9               	movwf	fsr2l,c
 25883  018420  6ADA               	clrf	fsr2h,c
 25884  018422  0E07               	movlw	high _uart2RxBuffer
 25885  018424  22DA               	addwfc	fsr2h,f,c
 25886  018426  006F F743 FFDF     	movff	15824,indf2	;volatile
 25887  01842C  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 25888                           
 25889                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25890  01842E  2828               	incf	_uart2RxHead^0,w,c
 25891  018430  B4D8               	btfsc	status,2,c
 25892                           
 25893                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25894  018432  6A28               	clrf	_uart2RxHead^0,c	;volatile
 25895                           
 25896                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25897  018434  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 25898                           
 25899                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25900  018436  0012               	return		;funcret
 25901  018438                     __end_of_UART2_Receive_ISR:
 25902                           	opt callstack 0
 25903                           
 25904 ;; *************** function _TMR6_ISR *****************
 25905 ;; Defined at:
 25906 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25907 ;; Parameters:    Size  Location     Type
 25908 ;;		None
 25909 ;; Auto vars:     Size  Location     Type
 25910 ;;		None
 25911 ;; Return value:  Size  Location     Type
 25912 ;;                  1    wreg      void 
 25913 ;; Registers used:
 25914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25915 ;; Tracked objects:
 25916 ;;		On entry : 0/0
 25917 ;;		On exit  : 0/0
 25918 ;;		Unchanged: 0/0
 25919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25924 ;;Total ram usage:        1 bytes
 25925 ;; Hardware stack levels used:    1
 25926 ;; Hardware stack levels required when called:    2
 25927 ;; This function calls:
 25928 ;;		_TMR6_CallBack
 25929 ;; This function is called by:
 25930 ;;		Interrupt level 2
 25931 ;; This function uses a non-reentrant model
 25932 ;;
 25933                           
 25934                           	psect	text139
 25935  01848C                     __ptext139:
 25936                           	opt callstack 0
 25937  01848C                     _TMR6_ISR:
 25938                           	opt callstack 12
 25939                           
 25940                           ;incstack = 0
 25941  01848C  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 25942  018492  EE14  F000         	lfsr	1,___inthi_sp
 25943                           
 25944                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25945  018496  0139               	movlb	57	; () banked
 25946  018498  91A9               	bcf	169,0,b	;volatile
 25947                           
 25948                           ; BSR set to: 57
 25949                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25950  01849A  EC8D  F0C1         	call	_TMR6_CallBack	;wreg free
 25951  01849E  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 25952  0184A4  0011               	retfie		f
 25953  0184A6                     __end_of_TMR6_ISR:
 25954                           	opt callstack 0
 25955                           
 25956 ;; *************** function _TMR6_CallBack *****************
 25957 ;; Defined at:
 25958 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25959 ;; Parameters:    Size  Location     Type
 25960 ;;		None
 25961 ;; Auto vars:     Size  Location     Type
 25962 ;;		None
 25963 ;; Return value:  Size  Location     Type
 25964 ;;                  1  [STACK] void 
 25965 ;; Registers used:
 25966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25967 ;; Tracked objects:
 25968 ;;		On entry : 3F/39
 25969 ;;		On exit  : 0/0
 25970 ;;		Unchanged: 0/0
 25971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25976 ;;Total ram usage:        0 bytes
 25977 ;; Hardware stack levels used:    1
 25978 ;; Hardware stack levels required when called:    1
 25979 ;; This function calls:
 25980 ;;		Absolute function
 25981 ;;		_TMR6_DefaultInterruptHandler
 25982 ;; This function is called by:
 25983 ;;		_TMR6_ISR
 25984 ;; This function uses a reentrant model
 25985 ;;
 25986                           
 25987                           	psect	text140
 25988  01831A                     __ptext140:
 25989                           	opt callstack 0
 25990  01831A                     _TMR6_CallBack:
 25991                           	opt callstack 12
 25992                           
 25993                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25994                           
 25995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25996                           ;incstack = 0
 25997  01831A  0100               	movlb	0	; () banked
 25998  01831C  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25999  01831E  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26000  018320  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26001  018322  B4D8               	btfsc	status,2,c
 26002  018324  0012               	return	
 26003                           
 26004                           ; BSR set to: 0
 26005                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26006  018326  D801               	call	u840_48
 26007  018328  0012               	return	
 26008  01832A                     u840_48:
 26009  01832A  0005               	push	
 26010  01832C  6EFA               	movwf	pclath,c
 26011  01832E  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26012  018330  6EFD               	movwf	tosl,c
 26013  018332  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26014  018334  6EFE               	movwf	tosh,c
 26015  018336  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26016  018338  6EFF               	movwf	tosu,c
 26017  01833A  50FA               	movf	pclath,w,c
 26018  01833C  0012               	return		;indir
 26019  01833E                     __end_of_TMR6_CallBack:
 26020                           	opt callstack 0
 26021                           
 26022 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26023 ;; Defined at:
 26024 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26025 ;; Parameters:    Size  Location     Type
 26026 ;;		None
 26027 ;; Auto vars:     Size  Location     Type
 26028 ;;  i               1  [STACK] unsigned char 
 26029 ;; Return value:  Size  Location     Type
 26030 ;;                  1  [STACK] void 
 26031 ;; Registers used:
 26032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26033 ;; Tracked objects:
 26034 ;;		On entry : 3F/0
 26035 ;;		On exit  : 0/0
 26036 ;;		Unchanged: 0/0
 26037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26042 ;;Total ram usage:        0 bytes
 26043 ;; Hardware stack levels used:    1
 26044 ;; This function calls:
 26045 ;;		Nothing
 26046 ;; This function is called by:
 26047 ;;		_TMR6_Initialize
 26048 ;;		_TMR6_CallBack
 26049 ;; This function uses a reentrant model
 26050 ;;
 26051                           
 26052                           	psect	text141
 26053  017BAA                     __ptext141:
 26054                           	opt callstack 0
 26055  017BAA                     _TMR6_DefaultInterruptHandler:
 26056                           	opt callstack 0
 26057                           
 26058                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26059  017BAA  52E6               	movf	postinc1,f,c
 26060                           
 26061                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26062                           ;stkvar	_i @ sp[(-1)+0]
 26063                           
 26064                           ;incstack = 0
 26065  017BAC  0EFF               	movlw	-1
 26066  017BAE  6AE3               	clrf	plusw1,c
 26067  017BB0                     l8443:
 26068                           
 26069                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26070                           ;stkvar	_i @ sp[(-1)+0]
 26071  017BB0  0EFF               	movlw	-1
 26072  017BB2  50E3               	movf	plusw1,w,c
 26073  017BB4  0D02               	mullw	2
 26074  017BB6  50F3               	movf	243,w,c
 26075  017BB8  0F89               	addlw	low _tickCount
 26076  017BBA  6ED9               	movwf	fsr2l,c
 26077  017BBC  6ADA               	clrf	fsr2h,c
 26078  017BBE  50DE               	movf	postinc2,w,c
 26079  017BC0  10DE               	iorwf	postinc2,w,c
 26080  017BC2  B4D8               	btfsc	status,2,c
 26081  017BC4  D00A               	goto	l8447
 26082                           
 26083                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26084                           ;stkvar	_i @ sp[(-1)+0]
 26085  017BC6  0EFF               	movlw	-1
 26086  017BC8  50E3               	movf	plusw1,w,c
 26087  017BCA  0D02               	mullw	2
 26088  017BCC  50F3               	movf	243,w,c
 26089  017BCE  0F89               	addlw	low _tickCount
 26090  017BD0  6ED9               	movwf	fsr2l,c
 26091  017BD2  6ADA               	clrf	fsr2h,c
 26092  017BD4  06DE               	decf	postinc2,f,c
 26093  017BD6  0E00               	movlw	0
 26094  017BD8  5ADD               	subwfb	postdec2,f,c
 26095  017BDA                     l8447:
 26096                           
 26097                           ;mcc_generated_files/tmr6.c: 207:  }
 26098                           ;stkvar	_i @ sp[(-1)+0]
 26099  017BDA  0EFF               	movlw	-1
 26100  017BDC  2AE3               	incf	plusw1,f,c
 26101                           
 26102                           ;stkvar	_i @ sp[(-1)+0]
 26103  017BDE  0EFF               	movlw	-1
 26104  017BE0  006F FF8C  F032    	movff	plusw1,btemp
 26105  017BE6  0E0B               	movlw	11
 26106  017BE8  6432               	cpfsgt	btemp^0,c
 26107  017BEA  D7E2               	goto	l8443
 26108                           
 26109                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26110  017BEC  52E5               	movf	postdec1,f,c
 26111  017BEE  0012               	return		;funcret
 26112  017BF0                     __end_of_TMR6_DefaultInterruptHandler:
 26113                           	opt callstack 0
 26114                           
 26115 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26116 ;; Defined at:
 26117 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26118 ;; Parameters:    Size  Location     Type
 26119 ;;		None
 26120 ;; Auto vars:     Size  Location     Type
 26121 ;;		None
 26122 ;; Return value:  Size  Location     Type
 26123 ;;                  1    wreg      void 
 26124 ;; Registers used:
 26125 ;;		None
 26126 ;; Tracked objects:
 26127 ;;		On entry : 0/0
 26128 ;;		On exit  : 3F/0
 26129 ;;		Unchanged: 0/0
 26130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26135 ;;Total ram usage:        0 bytes
 26136 ;; Hardware stack levels used:    1
 26137 ;; This function calls:
 26138 ;;		Nothing
 26139 ;; This function is called by:
 26140 ;;		Interrupt level 2
 26141 ;; This function uses a non-reentrant model
 26142 ;;
 26143                           
 26144                           	psect	text142
 26145  01858C                     __ptext142:
 26146                           	opt callstack 0
 26147  01858C                     _DMA1_DMASCNT_ISR:
 26148                           	opt callstack 14
 26149                           
 26150                           ;incstack = 0
 26151  01858C  EE14  F000         	lfsr	1,___inthi_sp
 26152                           
 26153                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26154  018590  0139               	movlb	57	; () banked
 26155  018592  91A2               	bcf	162,0,b	;volatile
 26156                           
 26157                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26158  018594  0100               	movlb	0	; () banked
 26159  018596  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26160                           
 26161                           ; BSR set to: 0
 26162  018598  0011               	retfie		f
 26163  01859A                     __end_of_DMA1_DMASCNT_ISR:
 26164                           	opt callstack 0
 26165                           
 26166 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26167 ;; Defined at:
 26168 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26169 ;; Parameters:    Size  Location     Type
 26170 ;;		None
 26171 ;; Auto vars:     Size  Location     Type
 26172 ;;		None
 26173 ;; Return value:  Size  Location     Type
 26174 ;;                  1    wreg      void 
 26175 ;; Registers used:
 26176 ;;		None
 26177 ;; Tracked objects:
 26178 ;;		On entry : 0/0
 26179 ;;		On exit  : 3F/39
 26180 ;;		Unchanged: 0/0
 26181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26186 ;;Total ram usage:        0 bytes
 26187 ;; Hardware stack levels used:    1
 26188 ;; This function calls:
 26189 ;;		Nothing
 26190 ;; This function is called by:
 26191 ;;		Interrupt level 2
 26192 ;; This function uses a non-reentrant model
 26193 ;;
 26194                           
 26195                           	psect	text143
 26196  0185A4                     __ptext143:
 26197                           	opt callstack 0
 26198  0185A4                     _DMA1_DMADCNT_ISR:
 26199                           	opt callstack 14
 26200                           
 26201                           ; BSR set to: 0
 26202                           ;incstack = 0
 26203  0185A4  EE14  F000         	lfsr	1,___inthi_sp
 26204                           
 26205                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26206  0185A8  0139               	movlb	57	; () banked
 26207  0185AA  93A2               	bcf	162,1,b	;volatile
 26208                           
 26209                           ; BSR set to: 57
 26210  0185AC  0011               	retfie		f
 26211  0185AE                     __end_of_DMA1_DMADCNT_ISR:
 26212                           	opt callstack 0
 26213                           
 26214 ;; *************** function _DMA1_DMAA_ISR *****************
 26215 ;; Defined at:
 26216 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26217 ;; Parameters:    Size  Location     Type
 26218 ;;		None
 26219 ;; Auto vars:     Size  Location     Type
 26220 ;;		None
 26221 ;; Return value:  Size  Location     Type
 26222 ;;                  1    wreg      void 
 26223 ;; Registers used:
 26224 ;;		None
 26225 ;; Tracked objects:
 26226 ;;		On entry : 0/0
 26227 ;;		On exit  : 3F/39
 26228 ;;		Unchanged: 0/0
 26229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26234 ;;Total ram usage:        0 bytes
 26235 ;; Hardware stack levels used:    1
 26236 ;; This function calls:
 26237 ;;		Nothing
 26238 ;; This function is called by:
 26239 ;;		Interrupt level 2
 26240 ;; This function uses a non-reentrant model
 26241 ;;
 26242                           
 26243                           	psect	text144
 26244  0185B0                     __ptext144:
 26245                           	opt callstack 0
 26246  0185B0                     _DMA1_DMAA_ISR:
 26247                           	opt callstack 14
 26248                           
 26249                           ; BSR set to: 57
 26250                           ;incstack = 0
 26251  0185B0  EE14  F000         	lfsr	1,___inthi_sp
 26252                           
 26253                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26254  0185B4  0139               	movlb	57	; () banked
 26255  0185B6  97A2               	bcf	162,3,b	;volatile
 26256                           
 26257                           ; BSR set to: 57
 26258  0185B8  0011               	retfie		f
 26259  0185BA                     __end_of_DMA1_DMAA_ISR:
 26260                           	opt callstack 0
 26261                           
 26262 ;; *************** function _DMA1_DMAOR_ISR *****************
 26263 ;; Defined at:
 26264 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26265 ;; Parameters:    Size  Location     Type
 26266 ;;		None
 26267 ;; Auto vars:     Size  Location     Type
 26268 ;;		None
 26269 ;; Return value:  Size  Location     Type
 26270 ;;                  1    wreg      void 
 26271 ;; Registers used:
 26272 ;;		None
 26273 ;; Tracked objects:
 26274 ;;		On entry : 0/0
 26275 ;;		On exit  : 3F/39
 26276 ;;		Unchanged: 0/0
 26277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26282 ;;Total ram usage:        0 bytes
 26283 ;; Hardware stack levels used:    1
 26284 ;; This function calls:
 26285 ;;		Nothing
 26286 ;; This function is called by:
 26287 ;;		Interrupt level 2
 26288 ;; This function uses a non-reentrant model
 26289 ;;
 26290                           
 26291                           	psect	text145
 26292  0185BC                     __ptext145:
 26293                           	opt callstack 0
 26294  0185BC                     _DMA1_DMAOR_ISR:
 26295                           	opt callstack 14
 26296                           
 26297                           ; BSR set to: 57
 26298                           ;incstack = 0
 26299  0185BC  EE14  F000         	lfsr	1,___inthi_sp
 26300                           
 26301                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26302  0185C0  0139               	movlb	57	; () banked
 26303  0185C2  95A2               	bcf	162,2,b	;volatile
 26304                           
 26305                           ; BSR set to: 57
 26306  0185C4  0011               	retfie		f
 26307  0185C6                     __end_of_DMA1_DMAOR_ISR:
 26308                           	opt callstack 0
 26309                           
 26310                           ;
 26311                           ; Interrupt Vector Table @ 0x8
 26312                           ;
 26313                           
 26314                           	psect	ivt0x8
 26315  000008                     __pivt0x8:
 26316                           	opt callstack 0
 26317  000008                     ivt0x8_base:
 26318                           	opt callstack 0
 26319                           
 26320                           ; Vector 0 : SWINT
 26321  000008  6180               	dw	_Default_ISR shr (0+2)
 26322                           
 26323                           ; Vector 1 : HLVD
 26324  00000A  6180               	dw	_Default_ISR shr (0+2)
 26325                           
 26326                           ; Vector 2 : OSF
 26327  00000C  6180               	dw	_Default_ISR shr (0+2)
 26328                           
 26329                           ; Vector 3 : CSW
 26330  00000E  6180               	dw	_Default_ISR shr (0+2)
 26331                           
 26332                           ; Vector 4 : NVM
 26333  000010  6180               	dw	_Default_ISR shr (0+2)
 26334                           
 26335                           ; Vector 5 : SCAN
 26336  000012  6180               	dw	_Default_ISR shr (0+2)
 26337                           
 26338                           ; Vector 6 : CRC
 26339  000014  6180               	dw	_Default_ISR shr (0+2)
 26340                           
 26341                           ; Vector 7 : IOC
 26342  000016  6180               	dw	_Default_ISR shr (0+2)
 26343                           
 26344                           ; Vector 8 : INT0
 26345  000018  615F               	dw	_INT0_ISR shr (0+2)
 26346                           
 26347                           ; Vector 9 : ZCD
 26348  00001A  6180               	dw	_Default_ISR shr (0+2)
 26349                           
 26350                           ; Vector 10 : AD
 26351  00001C  5FEC               	dw	_ADCC_ISR shr (0+2)
 26352                           
 26353                           ; Vector 11 : ADT
 26354  00001E  5D78               	dw	_ADCC_ThresholdISR shr (0+2)
 26355                           
 26356                           ; Vector 12 : CMP1
 26357  000020  6180               	dw	_Default_ISR shr (0+2)
 26358                           
 26359                           ; Vector 13 : SMT1
 26360  000022  6180               	dw	_Default_ISR shr (0+2)
 26361                           
 26362                           ; Vector 14 : SMT1PRA
 26363  000024  6180               	dw	_Default_ISR shr (0+2)
 26364                           
 26365                           ; Vector 15 : SMT1PRW
 26366  000026  6180               	dw	_Default_ISR shr (0+2)
 26367                           
 26368                           ; Vector 16 : DMA1SCNT
 26369  000028  6163               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26370                           
 26371                           ; Vector 17 : DMA1DCNT
 26372  00002A  6169               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26373                           
 26374                           ; Vector 18 : DMA1OR
 26375  00002C  616F               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26376                           
 26377                           ; Vector 19 : DMA1A
 26378  00002E  616C               	dw	_DMA1_DMAA_ISR shr (0+2)
 26379                           
 26380                           ; Vector 20 : SPI1RX
 26381  000030  6180               	dw	_Default_ISR shr (0+2)
 26382                           
 26383                           ; Vector 21 : SPI1TX
 26384  000032  6180               	dw	_Default_ISR shr (0+2)
 26385                           
 26386                           ; Vector 22 : SPI1
 26387  000034  6180               	dw	_Default_ISR shr (0+2)
 26388                           
 26389                           ; Vector 23 : I2C1RX
 26390  000036  6180               	dw	_Default_ISR shr (0+2)
 26391                           
 26392                           ; Vector 24 : I2C1TX
 26393  000038  6180               	dw	_Default_ISR shr (0+2)
 26394                           
 26395                           ; Vector 25 : I2C1
 26396  00003A  6180               	dw	_Default_ISR shr (0+2)
 26397                           
 26398                           ; Vector 26 : I2C1E
 26399  00003C  6180               	dw	_Default_ISR shr (0+2)
 26400                           
 26401                           ; Vector 27 : U1RX
 26402  00003E  6097               	dw	_UART1_rx_vect_isr shr (0+2)
 26403                           
 26404                           ; Vector 28 : U1TX
 26405  000040  608D               	dw	_UART1_tx_vect_isr shr (0+2)
 26406                           
 26407                           ; Vector 29 : U1E
 26408  000042  6180               	dw	_Default_ISR shr (0+2)
 26409                           
 26410                           ; Vector 30 : U1
 26411  000044  6180               	dw	_Default_ISR shr (0+2)
 26412                           
 26413                           ; Vector 31 : TMR0
 26414  000046  6180               	dw	_Default_ISR shr (0+2)
 26415                           
 26416                           ; Vector 32 : TMR1
 26417  000048  6180               	dw	_Default_ISR shr (0+2)
 26418                           
 26419                           ; Vector 33 : TMR1G
 26420  00004A  6180               	dw	_Default_ISR shr (0+2)
 26421                           
 26422                           ; Vector 34 : TMR2
 26423  00004C  6180               	dw	_Default_ISR shr (0+2)
 26424                           
 26425                           ; Vector 35 : CCP1
 26426  00004E  6180               	dw	_Default_ISR shr (0+2)
 26427                           
 26428                           ; Vector 36 : Undefined
 26429  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26430                           
 26431                           ; Vector 37 : NCO1
 26432  000052  6180               	dw	_Default_ISR shr (0+2)
 26433                           
 26434                           ; Vector 38 : CWG1
 26435  000054  6180               	dw	_Default_ISR shr (0+2)
 26436                           
 26437                           ; Vector 39 : CLC1
 26438  000056  6180               	dw	_Default_ISR shr (0+2)
 26439                           
 26440                           ; Vector 40 : INT1
 26441  000058  5F2E               	dw	_INT1_ISR shr (0+2)
 26442                           
 26443                           ; Vector 41 : CMP2
 26444  00005A  6180               	dw	_Default_ISR shr (0+2)
 26445                           
 26446                           ; Vector 42 : DMA2SCNT
 26447  00005C  6180               	dw	_Default_ISR shr (0+2)
 26448                           
 26449                           ; Vector 43 : DMA2DCNT
 26450  00005E  6180               	dw	_Default_ISR shr (0+2)
 26451                           
 26452                           ; Vector 44 : DMA2OR
 26453  000060  6180               	dw	_Default_ISR shr (0+2)
 26454                           
 26455                           ; Vector 45 : DMA2A
 26456  000062  6180               	dw	_Default_ISR shr (0+2)
 26457                           
 26458                           ; Vector 46 : I2C2RX
 26459  000064  6180               	dw	_Default_ISR shr (0+2)
 26460                           
 26461                           ; Vector 47 : I2C2TX
 26462  000066  6180               	dw	_Default_ISR shr (0+2)
 26463                           
 26464                           ; Vector 48 : I2C2
 26465  000068  6180               	dw	_Default_ISR shr (0+2)
 26466                           
 26467                           ; Vector 49 : I2C2E
 26468  00006A  6180               	dw	_Default_ISR shr (0+2)
 26469                           
 26470                           ; Vector 50 : U2RX
 26471  00006C  60AB               	dw	_UART2_rx_vect_isr shr (0+2)
 26472                           
 26473                           ; Vector 51 : U2TX
 26474  00006E  60A1               	dw	_UART2_tx_vect_isr shr (0+2)
 26475                           
 26476                           ; Vector 52 : U2E
 26477  000070  6180               	dw	_Default_ISR shr (0+2)
 26478                           
 26479                           ; Vector 53 : U2
 26480  000072  6180               	dw	_Default_ISR shr (0+2)
 26481                           
 26482                           ; Vector 54 : TMR3
 26483  000074  6180               	dw	_Default_ISR shr (0+2)
 26484                           
 26485                           ; Vector 55 : TMR3G
 26486  000076  6180               	dw	_Default_ISR shr (0+2)
 26487                           
 26488                           ; Vector 56 : TMR4
 26489  000078  6180               	dw	_Default_ISR shr (0+2)
 26490                           
 26491                           ; Vector 57 : CCP2
 26492  00007A  6180               	dw	_Default_ISR shr (0+2)
 26493                           
 26494                           ; Vector 58 : Undefined
 26495  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26496                           
 26497                           ; Vector 59 : CWG2
 26498  00007E  6180               	dw	_Default_ISR shr (0+2)
 26499                           
 26500                           ; Vector 60 : CLC2
 26501  000080  6180               	dw	_Default_ISR shr (0+2)
 26502                           
 26503                           ; Vector 61 : INT2
 26504  000082  6180               	dw	_Default_ISR shr (0+2)
 26505                           
 26506                           ; Vector 62 : Undefined
 26507  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26508                           
 26509                           ; Vector 63 : Undefined
 26510  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26511                           
 26512                           ; Vector 64 : Undefined
 26513  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26514                           
 26515                           ; Vector 65 : Undefined
 26516  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26517                           
 26518                           ; Vector 66 : Undefined
 26519  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26520                           
 26521                           ; Vector 67 : Undefined
 26522  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26523                           
 26524                           ; Vector 68 : Undefined
 26525  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26526                           
 26527                           ; Vector 69 : Undefined
 26528  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26529                           
 26530                           ; Vector 70 : TMR5
 26531  000094  5E53               	dw	_TMR5_ISR shr (0+2)
 26532                           
 26533                           ; Vector 71 : TMR5G
 26534  000096  6180               	dw	_Default_ISR shr (0+2)
 26535                           
 26536                           ; Vector 72 : TMR6
 26537  000098  6123               	dw	_TMR6_ISR shr (0+2)
 26538                           
 26539                           ; Vector 73 : CCP3
 26540  00009A  6180               	dw	_Default_ISR shr (0+2)
 26541                           
 26542                           ; Vector 74 : CWG3
 26543  00009C  6180               	dw	_Default_ISR shr (0+2)
 26544                           
 26545                           ; Vector 75 : CLC3
 26546  00009E  6180               	dw	_Default_ISR shr (0+2)
 26547                           
 26548                           ; Vector 76 : Undefined
 26549  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26550                           
 26551                           ; Vector 77 : Undefined
 26552  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26553                           
 26554                           ; Vector 78 : Undefined
 26555  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26556                           
 26557                           ; Vector 79 : Undefined
 26558  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26559                           
 26560                           ; Vector 80 : CCP4
 26561  0000A8  6180               	dw	_Default_ISR shr (0+2)
 26562                           
 26563                           ; Vector 81 : CLC4
 26564  0000AA  6180               	dw	_Default_ISR shr (0+2)
 26565  0000AC                     ivt0x8_undefint:
 26566                           	opt callstack 0
 26567  0000AC  00FF               	reset	
 26568                           
 26569                           	psect	text146
 26570  000000                     __ptext146:
 26571                           	opt callstack 0
 26572                           
 26573                           	psect	rparam
 26574  0000                     
 26575                           	psect	temp
 26576  000032                     btemp:
 26577                           	opt callstack 0
 26578  000032                     	ds	32
 26579  0000                     wtemp0	set	btemp
 26580  0000                     wtemp1	set	btemp+2
 26581  0000                     wtemp2	set	btemp+4
 26582  0000                     wtemp3	set	btemp+6
 26583  0000                     wtemp4	set	btemp+8
 26584  0000                     wtemp5	set	btemp+10
 26585  0000                     wtemp8	set	btemp+1
 26586  0000                     ttemp0	set	btemp
 26587  0000                     ttemp1	set	btemp+3
 26588  0000                     ttemp2	set	btemp+6
 26589  0000                     ttemp3	set	btemp+9
 26590  0000                     ttemp5	set	btemp+1
 26591  0000                     ttemp6	set	btemp+4
 26592  0000                     ttemp7	set	btemp+8
 26593  0000                     ltemp0	set	btemp
 26594  0000                     ltemp1	set	btemp+4
 26595  0000                     ltemp2	set	btemp+8
 26596  0000                     lltemp0	set	btemp
 26597  0000                     lltemp1	set	btemp+8
 26598  0000                     lltemp2	set	btemp+16
 26599  0000                     lltemp3	set	btemp+24
 26600                           tosu	equ	0x3FFF
 26601                           tosh	equ	0x3FFE
 26602                           tosl	equ	0x3FFD
 26603                           stkptr	equ	0x3FFC
 26604                           pclatu	equ	0x3FFB
 26605                           pclath	equ	0x3FFA
 26606                           pcl	equ	0x3FF9
 26607                           tblptru	equ	0x3FF8
 26608                           tblptrh	equ	0x3FF7
 26609                           tblptrl	equ	0x3FF6
 26610                           tablat	equ	0x3FF5
 26611                           prodh	equ	0x3FF4
 26612                           prodl	equ	0x3FF3
 26613                           indf0	equ	0x3FEF
 26614                           postinc0	equ	0x3FEE
 26615                           postdec0	equ	0x3FED
 26616                           preinc0	equ	0x3FEC
 26617                           plusw0	equ	0x3FEB
 26618                           fsr0h	equ	0x3FEA
 26619                           fsr0l	equ	0x3FE9
 26620                           wreg	equ	0x3FE8
 26621                           indf1	equ	0x3FE7
 26622                           postinc1	equ	0x3FE6
 26623                           postdec1	equ	0x3FE5
 26624                           preinc1	equ	0x3FE4
 26625                           plusw1	equ	0x3FE3
 26626                           fsr1h	equ	0x3FE2
 26627                           fsr1l	equ	0x3FE1
 26628                           bsr	equ	0x3FE0
 26629                           indf2	equ	0x3FDF
 26630                           postinc2	equ	0x3FDE
 26631                           postdec2	equ	0x3FDD
 26632                           preinc2	equ	0x3FDC
 26633                           plusw2	equ	0x3FDB
 26634                           fsr2h	equ	0x3FDA
 26635                           fsr2l	equ	0x3FD9
 26636                           status	equ	0x3FD8


Data Sizes:
    Strings     271
    Constant    144
    Data        250
    BSS         1402
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     199
    BANK2           256      0     160
    BANK3           256      0     236
    BANK4           256      0     134
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4975_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3988tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  347260
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      31
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      93
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_switch                                           1     0      1      62
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   32950
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   16232
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    8399
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    7706
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      34
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      31
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     476
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  197067
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   98219
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   31879
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      62
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   66374
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   66092
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   32919
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   33080
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   31654
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   31525
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   31193
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2780
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     192
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     325
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   17820
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     192
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     489
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     195
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     337
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2976
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    2911
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      65
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    2165
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     266
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8     130
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1652
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     433
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     445
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3327
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      93
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     433
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     445
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     603
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      99
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      31
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      62
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      93
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      62
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      93
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     344
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      62
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      62
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      31
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      31
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      62
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      62
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      31
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      31
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      EC      11       92.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     682      58        0.0%
DATA                 0      0     682       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 26 02:02:48 2019

                     _SPI1_Exchange8bit 83A2                __end_of_set_display_info 83FC  
                                     _C 0300                                       _D 0500  
                                     _P 00BD                                       _R 00C7  
                                     _S 0060                                       _T FE5F  
                                     _V 0100        __end_of_TMR5_SetInterruptHandler 816A  
          __end_of_start_switch_handler 83A2                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 85EE  
                           __CFG_LVP$ON 000000                                     l171 8512  
                                   l701 7F7E                                     l581 7F52  
                                   l835 83B0                                     _GIE 01FE97  
                                   _abs 7AD8                                     _pad 66D0  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 84BE  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 8360  
                    _UART1_Transmit_ISR 7F2C                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 833E                            __CFG_ZCD$OFF 000000  
                                  l1028 7CB0                                    l2017 1D78  
                                  l2301 6D68                                    l1254 399C  
                                  l1246 37EC                                    l1335 78A2  
                                  l2312 60C6                                    l1256 39A2  
                                  l2305 5FF2                                    l1551 7D4E  
                                  l1471 6ED0                                    l1608 83F8  
                                  l1560 556A                                    l1490 7D82  
                                  l2339 5F64                                    l1475 71EA  
                                  l2700 58D4                                    l1808 672C  
                                  l2624 32D8                                    l1568 68EE  
                                  l1656 3788                                    l2731 7B18  
                                  l2723 5DF2                                    l1828 3D0C  
                                  l2660 25A2                                    l1908 0B1A  
                                  l2900 7386                                    l1693 5C5C  
                  _ADCC_StartConversion 852C                                    l2591 2BEE  
                                  l1864 123A                                    l2762 5268  
                                  l2826 65AE                                    l1946 4BAA  
                                  l2579 2D5E                                    l1893 066A  
                                  l1967 40F2                                    l2872 5A9C  
                                  l2887 740A                                    l9301 2658  
                                  l9303 2688                                    l9321 2732  
                                  l8443 7BB0                                    l9251 64C4  
                                  l9411 2A6E                                    l9315 26F2  
                                  l9405 2A52                                    l9333 279A  
                                  l9325 2748                                    l9309 26C0  
                                  l8447 7BDA                                    l9263 704C  
                                  l9511 66FC                                    l9407 2A64  
                                  l9415 2AA0                                    l9327 2778  
                                  l9273 70D8                                    l9265 706E  
                                  l9521 6772                                    l9515 6724  
                                  l9451 2C2E                                    l9427 2B78  
                                  l9363 28D8                                    l9291 2602  
                                  l9603 46A4                                    l8661 6248  
                                  l9277 7116                                    l9525 67BC  
                                  l9517 6736                                    l9533 7B08  
                                  l9461 2C56                                    l9445 2C10  
                                  l9437 2BD2                                    l9429 2B9E  
                                  l9373 294A                                    l9613 47AA  
                                  l9605 46F4                                    l8743 7F4E  
                                  l8663 624E                                    l8671 6290  
                                  l9447 2C22                                    l9383 2986  
                                  l9551 5D94                                    l9631 7376  
                                  l8665 625C                                    l8657 6232  
                                  l9465 2C5C                                    l9377 296A  
                                  l9297 2642                                    l9609 473C  
                                  l8659 6242                                    l9707 5404  
                                  l9491 2CFE                                    l9379 297C  
                                  l9387 29B6                                    l9547 5D90  
                                  l9563 6C22                                    l8765 7F7A  
                                  l8685 632E                                    l8677 62C0  
                                  l8669 6264                                    l9653 4E34  
                                  l9813 3112                                    l9805 30E0  
                                  l9733 2DFE                                    l9901 1EA6  
                                  l9493 2D0E                                    l9477 2CBA  
                                  l9557 5DEA                                    l8791 7C98  
                                  l9671 4F4C                                    l9647 4DE0  
                                  l9823 3154                                    l9807 30E4  
                                  l9727 2DBE                                    l9911 1F1C  
                                  l9487 2CE6                                    l9575 73FA  
                                  l9833 319E                                    l9753 2EDC  
                                  l9737 2E14                                    l9659 4E7A  
                                  l9691 52D0                                    l9819 312E  
                                  l9771 2F9A                                    l9747 2E9C  
                                  l9739 2E44                                    l9907 1EE6  
                                  l9499 2D3E                                    l9853 3254  
                                  l9837 31A4                                    l9765 2F60  
                                  l9757 2EF2                                    l9909 1EEC  
                                  l9589 4586                                    l9847 3218  
                                  l9759 2F22                                    l9919 1F3E  
                                  STR_1 FF62                                    STR_2 FFA4  
                                  l9865 32AC                                    STR_3 FFE0  
                                  STR_4 FF51                                    l9699 5358  
                                  l9867 32BC                                    l9859 3284  
                                  l9779 2FB4                                    l9971 2396  
                                  l9891 1E1E                                    l9883 1DD8  
                                  STR_5 FF73                                    STR_6 FFA4  
                                  l9797 307A                                    l9789 3044  
                                  l9981 23D8                                    l9893 1E4E  
                                  STR_7 FFE0                                    STR_8 FF40  
                                  l9799 308C                                    l9991 2422  
                                  STR_9 FFB3                                    l9977 23B2  
                                  l9889 1E18                                    l9995 2428  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u9100 2A96                                    u9030 29AE  
                                  u9200 2C4E                                    u9040 29CE  
                                  u9008 2920                                    u9105 2A86  
                                  u9035 299E                                    u9140 2BC0  
                                  u9310 7E62                                    u9240 2CAA  
                                  u9320 7E64                                    u9180 2C34  
                                  u9500 451E                                    u9245 2C9A  
                                  u9270 2CCA                                    u9430 5DE2  
                                  u9510 456A                                    u9440 5DE4  
                                  u9600 7C28                                    u9425 5DC4  
                                  u9505 4514                                    u8810 64B8  
                                  u9370 7AEC                                    u9450 6C9C  
                                  u9610 7C2A                                    u9700 4E30  
                                  u9380 5D14                                    u9620 7334  
                                  u8830 6534                                    u9550 464A  
                                  u9470 73B8                                    u9630 7336  
                                  u9711 4E3A                                    u9535 45A4  
                                  u8840 709C                                    u9720 4E74  
                                  u9800 52CA                                    u9536 45AA  
                                  u9480 73BA                                    u9385 5D0A  
                                  u9537 45B8                                    u9457 6C8E  
                                  u9650 7EC2                                    u9730 4EA6  
                                  u9570 4722                                    _PLLR 01CEE0  
                                  u9555 4640                                    u9660 7EC4  
                                  u9820 5320                                    u9750 4F84  
                                  u9830 5352                                    u8870 7E92  
                                  u8847 708E                                    u9575 4718  
                                  u9680 4DDA                                    u9840 5384  
                                  u8880 7E94                                    u9770 4FD6  
                                  u9860 543C                                    u8980 28FE  
                                  u8990 291E                                    u8991 2918  
                                  u9880 548E                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 7FDA  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0240  
                                  _atoi 4FFE                                    _ctoa 7284  
                                  _main 378E                                    _dtoa 3C2E  
                                  _nanf 7776                                    _seed 01BB  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4AC0  
                                  btemp 0032                                    _xtoa 40AE  
                __end_of_check_adc_scan 85E6                           ___fpclassifyf 5C66  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 83C0                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 825C                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 858A  
                      __end_of_INT1_ISR 7CF6          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 6ED8           __end_of_OSCILLATOR_Initialize 8518  
                                 l10005 249C                                   l10023 2550  
                                 l10015 250C                                   l10025 256A  
                                 l10009 24E2                                   l10201 5EFC  
                                 l10051 610A                                   l10203 5F12  
                                 l10221 7A3A                                   l10301 4064  
                                 l10045 60F4                                   l10117 66B6  
                                 l10109 6682                                   l10133 6D66  
                                 l10125 6CF0                                   l10141 5FB0  
                                 l11021 6F42                                   l10231 72CE  
                                 l10071 61D0                                   l10151 608E  
                                 l11007 4A42                                   l10057 612A  
                                 l10129 6D32                                   l10401 0554  
                                 l10091 65D8                                   l10147 6040  
                                 l10315 00AC                                   l11019 6F02  
                                 l10229 72A2                                   l10421 05F6  
                                 l10413 0594                                   l10405 057C  
                                 l12021 37CE                                   l10263 3D46  
                                 l10255 3CFC                                   l10079 6204  
                                 l10095 65EA                                   l10159 60C4  
                                 l10167 7A68                                   l10423 0602  
                                 l10407 058E                                   l10327 00F0  
                                 l10335 0146                                   l11207 5852  
                                 l12103 3BA6                                   l12023 37D6  
                                 l11057 82EE                                   l10193 5ED0  
                                 l10177 5E4E                                   l10345 01EA  
                                 l10353 0258                                   l11137 7D8C  
                                 l11217 58B4                                   l10267 3D64  
                                 l10099 6602                                   l10195 5EEC  
                                 l10443 06F0                                   l10363 02FC  
                                 l10371 032A                                   l10347 0216  
                                 l12027 37F4                                   l10277 3F76  
                                 l10509 0CBA                                   l10517 0D24  
                                 l10525 0D90                                   l10533 0EA2  
                                 l10349 022C                                   l11093 6FD8  
                                 l12117 3BF2                                   l12029 3806  
                                 l10439 06B8                                   l10383 0406  
                                 l11183 5790                                   l11175 5724  
                                 l12127 3C1C                                   l12071 39A6  
                                 l10297 4028                                   l10561 0FF0  
                                 l10545 0F3A                                   l10481 0B12  
                                 l10473 0A48                                   l10449 077A  
                                 l10385 0470                                   l10641 4C4C  
                                 l10633 4BE0                                   l10617 4B2C  
                                 l10705 42AE                                   l10713 4334  
                                 l11185 579E                                   l12073 39D4  
                                 l10571 1092                                   l10483 0B34  
                                 l10459 0926                                   l10379 0396  
                                 l10651 4D02                                   l11195 5800  
                                 l11187 57B4                                   l10581 10E2  
                                 l10389 04D2                                   l10637 4C1C  
                                 l10821 1360                                   l11197 581E  
                                 l11189 57D2                                   l12093 3A2C  
                                 l12085 3A08                                   l10751 50DA  
                                 l10735 5018                                   l10559 0FD6  
                                 l10655 4D3E                                   l10647 4CD6  
                                 l10823 1376                                   l11199 5834  
                                 l11711 35DA                                   l10761 51BC  
                                 l10753 50F2                                   l10745 50AE  
                                 l10737 503A                                   l10497 0C32  
                                 l10729 441E                                   l10681 4158  
                                 l10841 14A8                                   l11643 7D64  
                                 l10771 5258                                   l10755 5116  
                                 l10675 411C                                   l10915 1A7C  
                                 l10843 14E2                                   l10819 1326  
                                 l11707 353E                                   l10757 5154  
                                 l10597 119A                                   l10669 40E2  
                                 l10925 1B2A                                   l10861 165C  
                                 l10845 14F8                                   l11725 3756  
                                 l11733 3768                                   PRLOCK 0039EF  
                                 l10871 16F2                                   l11591 6806  
                                 l11719 36BA                                   l10689 41B8  
                                 l10945 1D00                                   l11761 5B22  
                                 l10787 5966                                   l10939 1CA6  
                                 l10891 18E8                                   l10883 1830  
                                 l10955 1D24                                   l11907 8064  
                                 l10789 59D2                                   l10949 1D04  
                                 l11933 553A                                   l11685 3314  
                                 l11757 5B0A                                   l11749 5ADE  
                                 l10895 191C                                   l11695 3432  
                                 l11679 32E4                                   l10993 492A  
                                 l10987 486C                                   l11963 56CC  
                                 l11947 5668                                   l11699 350C  
                                 l11975 7458                                   l10999 4994  
                                 l11895 7498                                   l11969 7448  
                       __end_of___aodiv 4FFE                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 2D68  
                                 _ADCLK 003EFF                         __end_of___aomod 54B2  
                                 _ADPCH 003EF1                         __end_of___fldiv 32E2  
                                 _ADREF 003EFD                         __end_of___awdiv 621E  
                       __end_of___flneg 7A92                                   STR_10 FFB3  
                                 STR_11 FF84                                   STR_20 FFCD  
                                 STR_12 FFFB                                   STR_13 FFF8  
                                 STR_21 FF95                                   STR_22 FF95  
                                 STR_23 FF95                                   STR_15 FFC1  
                                 STR_16 FFD7                                   STR_24 FEEF  
                                 STR_33 FF19                                   STR_17 FF1A  
                         __CFG_WDTE$OFF 000000                                   STR_18 FF1A  
                                 STR_42 FFF5                                   STR_34 FFE5  
                                 STR_26 FF2D                                   STR_35 FFED  
                                 STR_19 FFCD                                   STR_27 FF07  
                                 STR_44 FFF5                         __end_of___awmod 66D0  
                                 STR_38 FFE9                                   STR_39 FFF1  
                                 _ADRPT 003EEC                         __end_of___flmul 25AC  
                       __end_of___flsub 7AD8                         __end_of___fltol 5F6E  
                                 u10100 31F2                                   u10020 310C  
                                 u10110 322C                                   u10120 3268  
                                 u10105 31E2                                   u10210 1F2C  
                                 u10060 3196                                   u11030 050E  
                                 u10320 2476                                   u11200 0A18  
                                 u12000 19D8                                   u10225 20C0  
                                 u10410 61F0                                   u10330 24B0  
                                 u11130 0648                                   u10235 2188  
                                 u10340 24F6                                   u11300 0EE4  
                                 u11060 0562                                   u10325 2466  
                                 u10245 2350                                   u12110 4AB6  
                                 u10520 6D62                                   u10280 241A  
                                 u10600 5E42                                   u12040 1B7E  
                                 u10610 5E7C                                   u11090 05C6  
                                 u12300 7656                                   u10700 7A36  
                                 u10460 662E                                   u11500 4D64  
                                 u10390 6156                                   u10615 5E72  
                                 u10800 3D32                                   u10480 66A2  
                                 u11360 10B8                                   u11600 4266  
                                 u11520 40C8                                   u12160 6FB8  
                                 u10810 3F8A                                   u10730 3C5E  
                                 _U1P1H 003DED                                   u11700 50AA  
                                 u10740 3C60                                   u10580 7A64  
                                 u10660 5F1A                                   u11380 116E  
                                 u11460 4C42                                   u11620 4330  
                                 u12260 5848                                   u12404 32FE  
                                 _U1P2H 003DEF                                   u12325 768A  
                                 u10821 3FBA                                   u12405 32F8  
                                 u12326 768C                                   u12318 7658  
                                 u10830 3FD0                                   u10590 5E2E  
                                 u11390 1170                                   u10910 00DA  
                                 u11470 4C88                                   u11630 4350  
                                 u11550 41B0                                   u12510 361E  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u10831 3FCE                                   u11720 5202  
                                 u10840 3FE4                                   u10760 3CD0  
                                 u10680 5F44                                   u11800 5A5E  
                                 u11560 4204                                   u12504 3616  
                                 u12424 332E                                   u12520 5ABC  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u12185 7C64                                   u11641 4380  
                                 u11625 4312                                   u12505 3610  
                                 u12425 3328                                   u10690 7A16  
                                 u11730 5204                                   u10850 3FE8  
                                 u11650 4396                                   u11570 4206  
                                 _U1P3L 003DF0                                   u10595 5E24  
                                 u11651 4394                                   u10780 3CE2  
                                 u10940 0194                                   u11660 43AA  
                                 u11900 1542                                   u12444 3350  
                                 u11477 4C7A                                   u12445 334A  
                                 u10870 3FFE                                   u10950 0196  
                                 u11670 43AE                                   u11590 4264  
                                 u11910 1568                                   _U2P1L 003DD4  
                                 u11840 13BE                                   u12640 56B8  
                                 u12464 3526                                   _U2P2L 003DD6  
                                 u12465 3520                                   u11850 13C0  
                                 u12650 56BA                                   _U2P3L 003DD8  
                                 u10980 02A6                                   u11860 13E6  
                                 u12484 35F4                                   u12485 35EE  
                                 u10990 02A8                                   _T5CLK 003F9D  
                                 u11960 1746                                   u11890 1540  
                                 _T2HLT 003FAD                                   u11990 19D6  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8600                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8234  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 79A6  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 84A6  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
                                 _fputc 6494              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 7C34                                   _fputs 70C8  
                       __end_of_isdigit 7ECE                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0052                                   _srand 7DD6  
                                 _width 001B                                   _putch 8470  
                       __end_of_islower 7E6E                         __end_of_isspace 7A4A  
              _INT1_SetInterruptHandler 816A                         __end_of_isupper 7E9E  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0032                                   ltemp1 0036  
                                 ltemp2 003A                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0032                                   ttemp1 0035  
                                 ttemp2 0038                                   ttemp3 003B  
                                 ttemp5 0033                                   ttemp6 0036  
                                 ttemp7 003A                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 811A             _UART1_SetRxInterruptHandler 80F2  
                                 wtemp0 0032                                   wtemp1 0034  
                                 wtemp2 0036                                   wtemp3 0038  
                                 wtemp4 003A                                   wtemp5 003C  
                                 wtemp8 0033                         __end_of_sprintf 69FC  
                       __end_of_tolower 7414                         __end_of_strncmp 5AA6  
                       __end_of_toupper 7390                     ??_UART1_tx_vect_isr 0057  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 8282  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 7B64  
                 __end_of_ringBufS_init 8052                         __initialization 69FC  
                     _UART2_rx_vect_isr 82AC                            __end_of_atoi 5272  
                          __end_of_ctoa 730C                            __end_of_main 3C2E  
                          __end_of_dtoa 40AE                            __end_of_nanf 77D8  
                          __end_of_stoa 4D7E                            __end_of_xtoa 4468  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0052  
               __end_of_TMR2_Initialize 84D6                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 8142                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 825A  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 7F84  
                       _PWM8_Initialize 84EC                        _UART1_Initialize 7712  
                     _UART2_tx_vect_isr 8284                      _UART2_Transmit_ISR 7F58  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 76AE  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 7C34  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 7998  
                  _start_switch_handler 8382                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 856C  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
                                u391_48 836E            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u830_20 634A  
                                u821_28 6238                                  u830_26 634C  
                                u824_20 6258                                  u824_21 6252  
                                u832_28 834C                                  u840_48 832A  
                                u843_28 8306                                  u828_24 6324  
                                u828_25 6320                                  u799_20 8212  
                                u799_26 8214                        __end_of___xxtofl 58DE  
 __end_of_ADCC_DischargeSampleCapacitor 85CE  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 85C6                __end_of_send_lcd_cmd_dma 79F8  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 82D2  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 859A  
                      _UART2_Initialize 783A                                  _WaitMs 7D6A  
                       _conv_raw_result 32E2                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 5F6E  
                                ___fleq 6CAE                       _ADCC_ThresholdISR 75E0  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7160  
                                _efgtoa 0000                                  _floorf 4468  
                    ?_ADCC_ThresholdISR 0052                                  _memset 47D4  
                  __size_of_help_button 0038                                  clear_0 6A6A  
                                clear_1 6A7E                                  clear_2 6A90  
                                clear_3 6A9C                                  clear_4 6AA8  
                                clear_5 6AB4                                  clear_6 6AC0  
                                clear_7 6ACC                                  clear_8 6AD8  
                                _printf 77D8                      _eaDogM_WriteString 6F80  
                                _strcpy 6BDA                               ?_ADCC_ISR 0052  
                                _strlen 7026                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 7576                          _PMD_Initialize 8518  
             __end_of_UART2_tx_vect_isr 82AA                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 7712                            __mediumconst FE5E  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 78F2                        __end_of_vfprintf 6F80  
                            _StartTimer 7CF6           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 7BAA                       _SYSTEM_Initialize 7B1E  
                            __accesstop 0060                 __end_of__initialization 6AEA  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 85DE                    __end_of_display_info 85D6  
             __end_of_CLKREF_Initialize 85A4                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 7C76  
                 _set_temp_display_help 854E               __end_of_ADCC_ThresholdISR 7648  
                __end_of_ringBufS_flush 71F2                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 7ECE                            __pidataBANK1 6D72  
                          __pidataBANK2 853E                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 65B8                           __end_of_fputs 7160  
                         __end_of_srand 7E0A                   __end_of_TMR5_CallBack 831A  
                         __end_of_putch 848A                 __end_of_PWM8_Initialize 8502  
               __end_of_TMR6_Initialize 7FAE                       _adc_int_t_handler 7414  
                __end_of_PMD_Initialize 852C                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 833E             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 85B0  
                        _clear_adc_scan 85EE                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 7B64  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 54B2                 __end_of_conv_raw_result 378E  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 82F6  
                      _DMA1_DMADCNT_ISR 85A4              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8454                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8142                 __end_of_ADCC_Initialize 75E0  
                            ??_TMR5_ISR 01C3               __end_of_adc_int_t_handler 7492  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 81E2  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 81BA  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 83FC                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 85F4  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 858C  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1267_44 7478  
                               u1267_45 7472                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 8052  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 7CB6  
               __size_of_switch_handler 0148       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 84A6                                 __Lparam 0000  
              __end_of_UART1_Initialize 7776                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 4D7E                                 ___fladd 25AC  
                               ___aomod 5272                                 ___fldiv 2D68  
                               ___awdiv 60D0                                 ___flneg 7A4A  
                               ___awmod 65B8                                 ___flmul 1D82  
                               ___flsub 7A92                                 ___fltol 5DFC  
             __end_of_UART1_Receive_ISR 841A                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 6BDA  
                               __pcinit 69FC                __end_of_mode_lamp_bright 857A  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 855E                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 378E  
                               __ptext1 8382                                 __ptext2 76AE  
                               __ptext3 852C                                 __ptext4 85C6  
                               __ptext5 7DD6                                 __ptext6 6AF0  
                               __ptext7 7FDA                                 __ptext8 8002  
                               __ptext9 83A2                       _UART2_Receive_ISR 841A  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8502                            __size_of_abs 0046  
                          __size_of_pad 0114                                 _isalpha 7BF0  
                               _isdigit 7E9E                                 _mode_sw 0025  
                               us978999 4FE8                       __end_of_lp_filter 5C66  
                               us989999 54A0                                 _islower 7E3E  
                               _isspace 79F8                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 7898  
                               _isupper 7E6E              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 68F2                                 _tolower 7390  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 58DE  
                               _toupper 730C                    end_of_initialization 6AEA  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 80F2  
           _UART1_SetTxInterruptHandler 80CA     __end_of_UART2_SetRxInterruptHandler 80CA  
           _UART2_SetRxInterruptHandler 80A2                               i2u1270_48 7614  
                             i2u1270_49 7628                       __end_of_set_vterm 8470  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8600               __end_of_UART2_Receive_ISR 8438  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 811A                            _display_help 85D6  
                 _TMR5_InterruptHandler 00C1                            _display_info 85CE  
  __size_of_UART2_SetTxInterruptHandler 0028                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 820A             _ADCC_SetADIInterruptHandler 81E2  
                            _update_lcd 67E4                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 750C  
                       _SPI1_Initialize 84D6                   __end_of_get_vterm_ptr 7F2C  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 7DA0            __end_of_INTERRUPT_Initialize 76AE  
                            _vterm_dump 6366                          __end_of___flge 60D0  
                        __end_of___fleq 6D72    __end_of_INT0_DefaultInterruptHandler 860A  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8608  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 78F2  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0228  
                        __end_of_floorf 47D4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4AC0  
                        __end_of_printf 783A                __end_of_DMA1_DMADCNT_ISR 85AE  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8382  
                        __end_of_strcpy 6CAE                          __end_of_strlen 70C8  
                   start_initialization 69FC    __end_of_TMR5_DefaultInterruptHandler 8232  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 820A  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 7B1E  
                 __end_of_INT1_CallBack 8360               __size_of_set_display_info 001E  
                           __end_of_pad 67E4                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 802A                          _switch_handler 621E  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 5DFC  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 03AC  
              __end_of_DMA1_DMASCNT_ISR 859A                           _uart2TxBuffer 036C  
                        _DMA1_DMAOR_ISR 85BC                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 82D2                           _ringBufS_init 802A  
                           __pdataBANK0 00C7                             __pdataBANK1 0100  
                           __pdataBANK2 0290              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 7E3E  
                   __end_of_help_button 7D6A         __end_of_eaDogM_WriteStringAtPos 7DD6  
               __end_of_DMA1_Initialize 7576                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 81BA                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01C3                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 6366                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 84EC                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FEEF  
                      _convert_adc_data 7492               __size_of_ringBufS_put_dma 00AA  
                          _init_display 6AF0                  __end_of_DMA1_DMAOR_ISR 85C6  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 794C  
                _PIN_MANAGER_Initialize 71F2                    __end_of_wait_lcd_set 85FA  
                         __pmediumconst FE5E                               __ptext100 8518  
                             __ptext101 71F2                               __ptext110 859A  
                             __ptext102 8502                               __ptext111 7576  
                             __ptext103 7648                               __ptext120 82F6  
                             __ptext112 81BA                               __ptext104 85E6  
                             __ptext121 820A                               __ptext113 81E2  
                             __ptext105 7E0A                               __ptext130 75E0  
                             __ptext122 857C                               __ptext114 7CB8  
                             __ptext106 816A                               __ptext131 8234  
                             __ptext123 8360                               __ptext115 833E  
                             __ptext107 8192                               __ptext140 831A  
                             __ptext132 7F2C                               __ptext124 8608  
                             __ptext116 8606                               __ptext108 78F2  
                             __ptext141 7BAA                               __ptext133 825C  
                             __ptext125 8600                               __ptext117 621E  
                             __ptext109 750C                               __ptext142 858C  
                             __ptext134 83FC                               __ptext126 7FB0  
                             __ptext118 794C                               __ptext143 85A4  
                             __ptext135 8284                               __ptext127 7414  
                             __ptext119 7C76                               __ptext144 85B0  
                             __ptext136 7F58                               __ptext128 860A  
                             __ptext145 85BC                               __ptext137 82AC  
                             __ptext129 860C                               __ptext146 0000  
                             __ptext138 841A                               __ptext139 848C  
                    __end_of_StartTimer 7D32                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 7FB0  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 5AA6                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7648  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0052                                _INT0_ISR 857C  
                              _INT1_ISR 7CB8                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0089                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                i2u420_48 7FC6  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u861_48 8246                                i2u863_48 826E  
                              i2u865_48 8296                                i2u867_48 82BE  
              __size_of_TMR5_Initialize 0046                               _set_vterm 8454  
                   __size_of_update_lcd 010E                             _help_button 7D32  
            __end_of_UART1_Transmit_ISR 7F58                                _TMR5_ISR 794C  
                              _TMR6_ISR 848C                               _port_data 0290  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 82F6                              _ADCON0bits 003EF8  
                    __end_of_check_help 56DA                               _start_lcd 85FA  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 831A                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 83DE  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 6A10  
                             copy_data1 6A32                               copy_data2 6A54  
              _INT0_SetInterruptHandler 8192                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 002F     __end_of_UART2_SetTxInterruptHandler 80A2  
           _UART2_SetTxInterruptHandler 807A                            _uart1RxCount 002C  
                          _uart2RxCount 0026                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 8438                            _send_lcd_cmd 8002  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 860C  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 807A  
                 __end_of_DMA1_DMAA_ISR 85BA                      ___fpclassifyf@F463 00B1  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 56DA                       ?_DMA1_DMADCNT_ISR 0052  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 856C  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 802A                                __ptext11 8052  
                              __ptext20 54B2                                __ptext12 855E  
                              __ptext21 6366                                __ptext13 7492  
                              __ptext30 6F80                                __ptext22 68F2  
                              __ptext14 5AA6                                __ptext31 85F4  
                              __ptext23 7EFE                                __ptext15 32E2  
                              __ptext40 7E3E                                __ptext32 85FA  
                              __ptext24 7D6A                                __ptext16 7776  
                              __ptext41 7BF0                                __ptext33 7160  
                              __ptext25 67E4                                __ptext17 83C0  
                              __ptext50 5DFC                                __ptext42 58DE  
                              __ptext34 47D4                                __ptext26 7DA0  
                              __ptext18 56DA                                __ptext51 7A92  
                              __ptext43 4AC0                                __ptext35 77D8  
                              __ptext27 79A6                                __ptext19 85EE  
                              __ptext60 3C2E                                __ptext52 25AC  
                              __ptext44 0000                                __ptext36 6ED8  
                              __ptext28 8438                                __ptext61 7AD8  
                              __ptext53 7A4A                                __ptext45 7390  
                              __ptext37 1244                                __ptext29 7898  
                              __ptext70 6E2E                                __ptext62 5272  
                              __ptext54 1D82                                __ptext46 7E6E  
                              __ptext38 40AE                                __ptext71 4FFE  
                              __ptext63 4D7E                                __ptext55 5F6E  
                              __ptext47 6BDA                                __ptext39 730C  
                              __ptext80 7D32                                __ptext72 79F8  
                              __ptext64 7284                                __ptext56 6CAE  
                              __ptext48 4468                                __ptext81 82D2  
                              __ptext73 7E9E                                __ptext65 66D0  
                              __ptext57 2D68                                __ptext49 5C66  
                              __ptext90 7712                                __ptext82 7CF6  
                              __ptext74 8454                                __ptext66 7026  
                              __ptext58 65B8                                __ptext91 80CA  
                              __ptext83 85CE                                __ptext75 854E  
                              __ptext67 70C8                                __ptext59 60D0  
                              __ptext92 80F2                                __ptext84 85D6  
                              __ptext76 83DE                                __ptext68 6494  
                              __ptext93 7F84                                __ptext85 85DE  
                              __ptext77 84A6                                __ptext69 8470  
                              __ptext94 811A                                __ptext86 7B1E  
                              __ptext78 856C                                __ptext95 7B64  
                              __ptext87 783A                                __ptext79 7C34  
                              __ptext96 8142                                __ptext88 807A  
                              __ptext97 84BE                                __ptext89 80A2  
                              __ptext98 84D6                                __ptext99 84EC  
                      __size_of_isupper 0030                                us1141999 4AD2  
                              us1072999 3C48                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1154999 412E  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 6E2E                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 04A0  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 00EF                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 853E                                _spi_link 00A1  
                              _wdtdelay 7898              __end_of_UART2_Transmit_ISR 7F84  
                              _vfprintf 6ED8                __end_of_convert_adc_data 750C  
            __end_of_PWM8_LoadDutyValue 7C76    __end_of_INT1_DefaultInterruptHandler 8608  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8606  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 83C0                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 85F4  
                    _EXT_INT_Initialize 7E0A    __end_of_TMR6_DefaultInterruptHandler 7BF0  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 7BAA  
  __end_of_ADCC_DefaultInterruptHandler 860C   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 860A                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 7FDA  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 855E  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7026  
                 __end_of_mode_lamp_dim 84BE                 __end_of_adc_int_handler 860E  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 68F2                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 85E6                  __end_of_get_raw_result 83DE  
                      _send_lcd_cmd_dma 79A6                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 8192  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 8002  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 8606  
        __end_of_PIN_MANAGER_Initialize 7284               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 6494                 _eaDogM_WriteStringAtPos 7DA0  
                         _get_vterm_ptr 7EFE                          _check_adc_scan 85DE  
             __size_of_UART2_Initialize 005E  
